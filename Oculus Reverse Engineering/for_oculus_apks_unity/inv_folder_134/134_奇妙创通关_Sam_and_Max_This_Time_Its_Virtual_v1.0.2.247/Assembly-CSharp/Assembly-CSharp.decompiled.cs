using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Xml;
using BNG;
using Dreamteck.Splines;
using Dreamteck.Splines.Examples;
using FSG.MeshAnimator;
using HoudiniEngineUnity;
using Il2CppDummyDll;
using Obi;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using PixelCrushers.DialogueSystem;
using RogoDigital.Lipsync;
using RootMotion.Dynamics;
using RootMotion.FinalIK;
using SMTaskManagement;
using TMPro;
using UltimateSpawner;
using UltimateSpawner.Despawning;
using UltimateSpawner.Spawning;
using UltimateSpawner.Waves;
using UltimateSpawner.Waves.Parameters;
using Unity.Collections;
using Unity.Jobs;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngineInternal;
using VRUiKits.Utils;
using XNode;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ExtendedFlycam : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSensitivity;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float climbSpeed;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float normalMoveSpeed;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float slowMoveFactor;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fastMoveFactor;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationX;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x13F8040", Offset = "0x13F8040", VA = "0x13F8040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x13F8064", Offset = "0x13F8064", VA = "0x13F8064")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x13F8D74", Offset = "0x13F8D74", VA = "0x13F8D74")]
	public ExtendedFlycam()
	{
	}
}
[Token(Token = "0x2000003")]
public class ForestMaker : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_treePrefab;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_amount;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_ground;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_radiusDistance;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x125D978", Offset = "0x125D978", VA = "0x125D978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x125DCFC", Offset = "0x125DCFC", VA = "0x125DCFC")]
	public ForestMaker()
	{
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA31D8C", Offset = "0xA31D8C")]
[ImageEffectAllowedInSceneView]
[ExecuteInEditMode]
public class Pixelize : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader _screenAndMaskShader;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _screenAndMaskMaterial;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture _temporaryRenderTexture;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader _combineLayersShader;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _combineLayersMaterial;

	[Token(Token = "0x17000001")]
	private Shader ScreenAndMaskShader
	{
		[Token(Token = "0x6000006")]
		[Address(RVA = "0x113C6D4", Offset = "0x113C6D4", VA = "0x113C6D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000002")]
	private Material ScreenAndMaskMaterial
	{
		[Token(Token = "0x6000007")]
		[Address(RVA = "0x113C76C", Offset = "0x113C76C", VA = "0x113C76C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000003")]
	private RenderTexture TemporaryRenderTarget
	{
		[Token(Token = "0x6000008")]
		[Address(RVA = "0x113C82C", Offset = "0x113C82C", VA = "0x113C82C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	private Shader CombineLayersShader
	{
		[Token(Token = "0x6000009")]
		[Address(RVA = "0x113C9A8", Offset = "0x113C9A8", VA = "0x113C9A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	private Material CombineLayersMaterial
	{
		[Token(Token = "0x600000A")]
		[Address(RVA = "0x113CA40", Offset = "0x113CA40", VA = "0x113CA40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x113CB00", Offset = "0x113CB00", VA = "0x113CB00")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x113C8B0", Offset = "0x113C8B0", VA = "0x113C8B0")]
	private void CreateTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x113CBD4", Offset = "0x113CBD4", VA = "0x113CBD4")]
	private void CheckTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x113CC58", Offset = "0x113CC58", VA = "0x113CC58")]
	private void ReleaseTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x113CC8C", Offset = "0x113CC8C", VA = "0x113CC8C")]
	public Pixelize()
	{
	}
}
[Token(Token = "0x2000005")]
[ExecuteInEditMode]
public class VolumetricSphere : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA377F8", Offset = "0xA377F8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA377F8", Offset = "0xA377F8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA377F8", Offset = "0xA377F8")]
	public float radius;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37874", Offset = "0xA37874")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37874", Offset = "0xA37874")]
	public float density;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA378C8", Offset = "0xA378C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA378C8", Offset = "0xA378C8")]
	public float exponent;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37920", Offset = "0xA37920")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37920", Offset = "0xA37920")]
	public int maxPixelizationLevel;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA37974", Offset = "0xA37974")]
	public bool enableLayersInterpolation;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA379AC", Offset = "0xA379AC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA379AC", Offset = "0xA379AC")]
	public bool debugSphere;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1348A00", Offset = "0x1348A00", VA = "0x1348A00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1348B70", Offset = "0x1348B70", VA = "0x1348B70")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1348BC0", Offset = "0x1348BC0", VA = "0x1348BC0")]
	public VolumetricSphere()
	{
	}
}
[Token(Token = "0x2000006")]
public class SimpleGPUInstancingExample : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Prefab;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material InstancedMaterial;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x11ADD50", Offset = "0x11ADD50", VA = "0x11ADD50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x11ADFB0", Offset = "0x11ADFB0", VA = "0x11ADFB0")]
	public SimpleGPUInstancingExample()
	{
	}
}
[Token(Token = "0x2000007")]
public class SimpleMoveExample : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_previous;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_target;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 BoundingVolume;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Speed;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x11ADFB8", Offset = "0x11ADFB8", VA = "0x11ADFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x11AE034", Offset = "0x11AE034", VA = "0x11AE034")]
	private void Update()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x11AE2F0", Offset = "0x11AE2F0", VA = "0x11AE2F0")]
	public SimpleMoveExample()
	{
	}
}
[Token(Token = "0x2000008")]
public class Smear : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<Vector3> m_recentPositions;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FramesBufferSize;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer Renderer;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_instancedMaterial;

	[Token(Token = "0x17000006")]
	private Material InstancedMaterial
	{
		[Token(Token = "0x6000018")]
		[Address(RVA = "0x11B3C3C", Offset = "0x11B3C3C", VA = "0x11B3C3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000019")]
		[Address(RVA = "0x11B3C44", Offset = "0x11B3C44", VA = "0x11B3C44")]
		set
		{
		}
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x11B3C4C", Offset = "0x11B3C4C", VA = "0x11B3C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x11B3C80", Offset = "0x11B3C80", VA = "0x11B3C80")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x11B3E04", Offset = "0x11B3E04", VA = "0x11B3E04")]
	public Smear()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
public class PostProcessExample : MonoBehaviour
{
	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PostProcessMat;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x10B5538", Offset = "0x10B5538", VA = "0x10B5538")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x10B55EC", Offset = "0x10B55EC", VA = "0x10B55EC")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x10B5670", Offset = "0x10B5670", VA = "0x10B5670")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x200000A")]
[ExecuteInEditMode]
public class SpriteMaskController : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 m_uvs;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x11B7A58", Offset = "0x11B7A58", VA = "0x11B7A58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x11B7AFC", Offset = "0x11B7AFC", VA = "0x11B7AFC")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x200000B")]
public class CFX_Demo : MonoBehaviour
{
	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35664", Offset = "0xA35664")]
	private sealed class <RandomSpawnsCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo <>4__this;

		[Token(Token = "0x1700039A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002797")]
			[Address(RVA = "0x120FDEC", Offset = "0x120FDEC", VA = "0x120FDEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002799")]
			[Address(RVA = "0x120FE54", Offset = "0x120FE54", VA = "0x120FE54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x120F738", Offset = "0x120F738", VA = "0x120F738")]
		[DebuggerHidden]
		public <RandomSpawnsCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002795")]
		[Address(RVA = "0x120FB40", Offset = "0x120FB40", VA = "0x120FB40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x120FB44", Offset = "0x120FB44", VA = "0x120FB44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x120FDF4", Offset = "0x120FDF4", VA = "0x120FDF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool orderedSpawns;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float step;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float range;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float order;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material groundMat;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material waterMat;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] ParticleExamples;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, float> ParticlesYOffsetD;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIndex;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string randomSpawnsDelay;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool randomSpawns;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool slowMo;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x120E84C", Offset = "0x120E84C", VA = "0x120E84C")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x120E9E4", Offset = "0x120E9E4", VA = "0x120E9E4")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x120EC48", Offset = "0x120EC48", VA = "0x120EC48")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x120F6C8", Offset = "0x120F6C8", VA = "0x120F6C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4C5E4", Offset = "0xA4C5E4")]
	private IEnumerator RandomSpawnsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x120F764", Offset = "0x120F764", VA = "0x120F764")]
	private void Update()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x120F3CC", Offset = "0x120F3CC", VA = "0x120F3CC")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x120F54C", Offset = "0x120F54C", VA = "0x120F54C")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x120F7C0", Offset = "0x120F7C0", VA = "0x120F7C0")]
	public CFX_Demo()
	{
	}
}
[Token(Token = "0x200000C")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200057D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35674", Offset = "0xA35674")]
	private sealed class <>c
	{
		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x1210C78", Offset = "0x1210C78", VA = "0x1210C78")]
		public <>c()
		{
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x1210C80", Offset = "0x1210C80", VA = "0x1210C80")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200057E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35684", Offset = "0xA35684")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x1700039C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x1210E34", Offset = "0x1210E34", VA = "0x1210E34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027A2")]
			[Address(RVA = "0x1210E9C", Offset = "0x1210E9C", VA = "0x1210E9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x1210B78", Offset = "0x1210B78", VA = "0x1210B78")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x1210CD4", Offset = "0x1210CD4", VA = "0x1210CD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x1210CD8", Offset = "0x1210CD8", VA = "0x1210CD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x1210E3C", Offset = "0x1210E3C", VA = "0x1210E3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA37A0C", Offset = "0xA37A0C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA37A0C", Offset = "0xA37A0C")]
	public Image slowMoBtn;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA37A44", Offset = "0xA37A44")]
	public Text EffectLabel;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x120FE5C", Offset = "0x120FE5C", VA = "0x120FE5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x12101AC", Offset = "0x12101AC", VA = "0x12101AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x121084C", Offset = "0x121084C", VA = "0x121084C")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x121092C", Offset = "0x121092C", VA = "0x121092C")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1210A34", Offset = "0x1210A34", VA = "0x1210A34")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1210B00", Offset = "0x1210B00", VA = "0x1210B00")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1210B04", Offset = "0x1210B04", VA = "0x1210B04")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x121007C", Offset = "0x121007C", VA = "0x121007C")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1210678", Offset = "0x1210678", VA = "0x1210678")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1210B08", Offset = "0x1210B08", VA = "0x1210B08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4C648", Offset = "0xA4C648")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x12104C4", Offset = "0x12104C4", VA = "0x12104C4")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x12104FC", Offset = "0x12104FC", VA = "0x12104FC")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1210530", Offset = "0x1210530", VA = "0x1210530")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1210BA4", Offset = "0x1210BA4", VA = "0x1210BA4")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x200000D")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 baseDir;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1210FEC", Offset = "0x1210FEC", VA = "0x1210FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1211150", Offset = "0x1211150", VA = "0x1211150")]
	private void Update()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x12112CC", Offset = "0x12112CC", VA = "0x12112CC")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x200000E")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x120E5A0", Offset = "0x120E5A0", VA = "0x120E5A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x120E660", Offset = "0x120E660", VA = "0x120E660")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x200000F")]
public class CFX_AutodestructWhenNoChildren : MonoBehaviour
{
	[Token(Token = "0x600003D")]
	[Address(RVA = "0x120E79C", Offset = "0x120E79C", VA = "0x120E79C")]
	private void Update()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x120E844", Offset = "0x120E844", VA = "0x120E844")]
	public CFX_AutodestructWhenNoChildren()
	{
	}
}
[Token(Token = "0x2000010")]
public class CFX_InspectorHelp : MonoBehaviour
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Locked;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Title;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string HelpText;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MsgType;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x121175C", Offset = "0x121175C", VA = "0x121175C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4C6AC", Offset = "0xA4C6AC")]
	private void Unlock()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1211764", Offset = "0x1211764", VA = "0x1211764")]
	public CFX_InspectorHelp()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA31E40", Offset = "0xA31E40")]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loop;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float addIntensity;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minIntensity;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float baseIntensity;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x121176C", Offset = "0x121176C", VA = "0x121176C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x12117D4", Offset = "0x12117D4", VA = "0x12117D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x12117E8", Offset = "0x12117E8", VA = "0x12117E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x12118B8", Offset = "0x12118B8", VA = "0x12118B8")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000012")]
public class CFX_ShurikenThreadFix : MonoBehaviour
{
	[Token(Token = "0x200057F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35694", Offset = "0xA35694")]
	private sealed class <WaitFrame>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_ShurikenThreadFix <>4__this;

		[Token(Token = "0x1700039E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027A6")]
			[Address(RVA = "0x1211D94", Offset = "0x1211D94", VA = "0x1211D94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027A8")]
			[Address(RVA = "0x1211DFC", Offset = "0x1211DFC", VA = "0x1211DFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x1211CB4", Offset = "0x1211CB4", VA = "0x1211CB4")]
		[DebuggerHidden]
		public <WaitFrame>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x1211CE8", Offset = "0x1211CE8", VA = "0x1211CE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x1211CEC", Offset = "0x1211CEC", VA = "0x1211CEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x1211D9C", Offset = "0x1211D9C", VA = "0x1211D9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] systems;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1211B64", Offset = "0x1211B64", VA = "0x1211B64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1211C44", Offset = "0x1211C44", VA = "0x1211C44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4C6E4", Offset = "0xA4C6E4")]
	private IEnumerator WaitFrame()
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1211CE0", Offset = "0x1211CE0", VA = "0x1211CE0")]
	public CFX_ShurikenThreadFix()
	{
	}
}
[Token(Token = "0x2000013")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA31EA4", Offset = "0xA31EA4")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x120E670", Offset = "0x120E670", VA = "0x120E670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x120E67C", Offset = "0x120E67C", VA = "0x120E67C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x120E78C", Offset = "0x120E78C", VA = "0x120E78C")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x2000014")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1210EA4", Offset = "0x1210EA4", VA = "0x1210EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1210F58", Offset = "0x1210F58", VA = "0x1210F58")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000015")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x121135C", Offset = "0x121135C", VA = "0x121135C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x12114A4", Offset = "0x12114A4", VA = "0x12114A4")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x2000016")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1211508", Offset = "0x1211508", VA = "0x1211508")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x12115E4", Offset = "0x12115E4", VA = "0x12115E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x12116CC", Offset = "0x12116CC", VA = "0x12116CC")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x2000017")]
public class WFX_Demo : MonoBehaviour
{
	[Token(Token = "0x2000580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356A4", Offset = "0xA356A4")]
	private sealed class <RandomSpawnsCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_Demo <>4__this;

		[Token(Token = "0x170003A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027AC")]
			[Address(RVA = "0x134B2F0", Offset = "0x134B2F0", VA = "0x134B2F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027AE")]
			[Address(RVA = "0x134B358", Offset = "0x134B358", VA = "0x134B358", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x134A4C4", Offset = "0x134A4C4", VA = "0x134A4C4")]
		[DebuggerHidden]
		public <RandomSpawnsCoroutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x134B044", Offset = "0x134B044", VA = "0x134B044", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x134B048", Offset = "0x134B048", VA = "0x134B048", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x134B2F8", Offset = "0x134B2F8", VA = "0x134B2F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSpeed;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool orderedSpawns;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float step;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float order;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject walls;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bulletholes;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] ParticleExamples;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIndex;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string randomSpawnsDelay;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool randomSpawns;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool slowMo;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool rotateCam;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material wood;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material concrete;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material metal;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material checker;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material woodWall;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material concreteWall;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material metalWall;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material checkerWall;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string groundTextureStr;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<string> groundTextures;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject m4;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m4fps;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool rotate_m4;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1349284", Offset = "0x1349284", VA = "0x1349284")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1349444", Offset = "0x1349444", VA = "0x1349444")]
	public GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x134969C", Offset = "0x134969C", VA = "0x134969C")]
	private void SetActiveCrossVersions(GameObject obj, bool active)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x134974C", Offset = "0x134974C", VA = "0x134974C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x134A454", Offset = "0x134A454", VA = "0x134A454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4C748", Offset = "0xA4C748")]
	private IEnumerator RandomSpawnsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x134A4F0", Offset = "0x134A4F0", VA = "0x134A4F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x134A300", Offset = "0x134A300", VA = "0x134A300")]
	private void prevTexture()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x134A3B0", Offset = "0x134A3B0", VA = "0x134A3B0")]
	private void nextTexture()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x134A6C8", Offset = "0x134A6C8", VA = "0x134A6C8")]
	private void selectMaterial()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x134A294", Offset = "0x134A294", VA = "0x134A294")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x134A2CC", Offset = "0x134A2CC", VA = "0x134A2CC")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x134A9EC", Offset = "0x134A9EC", VA = "0x134A9EC")]
	private void showHideStuff()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x134AE7C", Offset = "0x134AE7C", VA = "0x134AE7C")]
	public WFX_Demo()
	{
	}
}
[Token(Token = "0x2000018")]
public class WFX_Demo_DeleteAfterDelay : MonoBehaviour
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x134B360", Offset = "0x134B360", VA = "0x134B360")]
	private void Update()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x134B410", Offset = "0x134B410", VA = "0x134B410")]
	public WFX_Demo_DeleteAfterDelay()
	{
	}
}
[Token(Token = "0x2000019")]
public class WFX_Demo_New : MonoBehaviour
{
	[Token(Token = "0x2000581")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356B4", Offset = "0xA356B4")]
	private sealed class <CheckForDeletedParticles>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_Demo_New <>4__this;

		[Token(Token = "0x170003A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0x134D010", Offset = "0x134D010", VA = "0x134D010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027B4")]
			[Address(RVA = "0x134D078", Offset = "0x134D078", VA = "0x134D078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x134C2D4", Offset = "0x134C2D4", VA = "0x134C2D4")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x134CEB0", Offset = "0x134CEB0", VA = "0x134CEB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x134CEB4", Offset = "0x134CEB4", VA = "0x134CEB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x134D018", Offset = "0x134D018", VA = "0x134D018", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA37A54", Offset = "0xA37A54")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA37A54", Offset = "0xA37A54")]
	public Image slowMoBtn;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA37A8C", Offset = "0xA37A8C")]
	public Text EffectLabel;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] AdditionalEffects;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ground;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject walls;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject bulletholes;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m4;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject m4fps;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material wood;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material concrete;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material metal;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material checker;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material woodWall;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material concreteWall;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material metalWall;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material checkerWall;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string groundTextureStr;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<string> groundTextures;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int exampleIndex;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool slowMo;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x134B420", Offset = "0x134B420", VA = "0x134B420")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x134B6EC", Offset = "0x134B6EC", VA = "0x134B6EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x134BFA8", Offset = "0x134BFA8", VA = "0x134BFA8")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x134C088", Offset = "0x134C088", VA = "0x134C088")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x134C190", Offset = "0x134C190", VA = "0x134C190")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x134C25C", Offset = "0x134C25C", VA = "0x134C25C")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x134C260", Offset = "0x134C260", VA = "0x134C260")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x134B5BC", Offset = "0x134B5BC", VA = "0x134B5BC")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x134BC1C", Offset = "0x134BC1C", VA = "0x134BC1C")]
	public GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x134C264", Offset = "0x134C264", VA = "0x134C264")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4C7AC", Offset = "0xA4C7AC")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x134BA34", Offset = "0x134BA34", VA = "0x134BA34")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x134BA84", Offset = "0x134BA84", VA = "0x134BA84")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x134BAD4", Offset = "0x134BAD4", VA = "0x134BAD4")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x134C858", Offset = "0x134C858", VA = "0x134C858")]
	private void prevTexture()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x134CC5C", Offset = "0x134CC5C", VA = "0x134CC5C")]
	private void nextTexture()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x134C908", Offset = "0x134C908", VA = "0x134C908")]
	private void selectMaterial()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x134C300", Offset = "0x134C300", VA = "0x134C300")]
	private void showHideStuff()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x134CD00", Offset = "0x134CD00", VA = "0x134CD00")]
	public WFX_Demo_New()
	{
	}
}
[Token(Token = "0x200001A")]
public class WFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x134D080", Offset = "0x134D080", VA = "0x134D080")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x134D134", Offset = "0x134D134", VA = "0x134D134")]
	public WFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x200001B")]
public class WFX_Demo_Wall : MonoBehaviour
{
	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WFX_Demo_New demo;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x134D1C8", Offset = "0x134D1C8", VA = "0x134D1C8")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x134D3A4", Offset = "0x134D3A4", VA = "0x134D3A4")]
	public WFX_Demo_Wall()
	{
	}
}
[Token(Token = "0x200001C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA31F08", Offset = "0xA31F08")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x2000582")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356C4", Offset = "0xA356C4")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x170003A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0x120E530", Offset = "0x120E530", VA = "0x120E530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027BA")]
			[Address(RVA = "0x120E598", Offset = "0x120E598", VA = "0x120E598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x120E380", Offset = "0x120E380", VA = "0x120E380")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x120E3B4", Offset = "0x120E3B4", VA = "0x120E3B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x120E3B8", Offset = "0x120E3B8", VA = "0x120E3B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x120E538", Offset = "0x120E538", VA = "0x120E538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x120E2BC", Offset = "0x120E2BC", VA = "0x120E2BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x120E310", Offset = "0x120E310", VA = "0x120E310")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4C810", Offset = "0xA4C810")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x120E3AC", Offset = "0x120E3AC", VA = "0x120E3AC")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA31F6C", Offset = "0xA31F6C")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x12118C8", Offset = "0x12118C8", VA = "0x12118C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1211930", Offset = "0x1211930", VA = "0x1211930")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x12119B4", Offset = "0x12119B4", VA = "0x12119B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1211B54", Offset = "0x1211B54", VA = "0x1211B54")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA31FD0", Offset = "0xA31FD0")]
public class WFX_BulletHoleDecal : MonoBehaviour
{
	[Token(Token = "0x2000583")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356D4", Offset = "0xA356D4")]
	private sealed class <holeUpdate>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_BulletHoleDecal <>4__this;

		[Token(Token = "0x170003A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027BE")]
			[Address(RVA = "0x1349214", Offset = "0x1349214", VA = "0x1349214", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027C0")]
			[Address(RVA = "0x134927C", Offset = "0x134927C", VA = "0x134927C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x1348F78", Offset = "0x1348F78", VA = "0x1348F78")]
		[DebuggerHidden]
		public <holeUpdate>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x13490E8", Offset = "0x13490E8", VA = "0x13490E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x13490EC", Offset = "0x13490EC", VA = "0x13490EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x134921C", Offset = "0x134921C", VA = "0x134921C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2[] quadUVs;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifetime;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeoutpercent;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 frames;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomRotation;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool deactivate;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float life;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeout;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color color;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float orgAlpha;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1348BEC", Offset = "0x1348BEC", VA = "0x1348BEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1348C74", Offset = "0x1348C74", VA = "0x1348C74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1348F08", Offset = "0x1348F08", VA = "0x1348F08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4C874", Offset = "0xA4C874")]
	private IEnumerator holeUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1348FA4", Offset = "0x1348FA4", VA = "0x1348FA4")]
	public WFX_BulletHoleDecal()
	{
	}
}
[Token(Token = "0x200001F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32034", Offset = "0xA32034")]
public class WFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x2000584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356E4", Offset = "0xA356E4")]
	private sealed class <Flicker>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_LightFlicker <>4__this;

		[Token(Token = "0x170003A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027C4")]
			[Address(RVA = "0x134D5C4", Offset = "0x134D5C4", VA = "0x134D5C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027C6")]
			[Address(RVA = "0x134D62C", Offset = "0x134D62C", VA = "0x134D62C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x134D478", Offset = "0x134D478", VA = "0x134D478")]
		[DebuggerHidden]
		public <Flicker>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x134D4B8", Offset = "0x134D4B8", VA = "0x134D4B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x134D4BC", Offset = "0x134D4BC", VA = "0x134D4BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x134D5CC", Offset = "0x134D5CC", VA = "0x134D5CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x134D3AC", Offset = "0x134D3AC", VA = "0x134D3AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x134D408", Offset = "0x134D408", VA = "0x134D408")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4C8D8", Offset = "0xA4C8D8")]
	private IEnumerator Flicker()
	{
		return null;
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x134D4A4", Offset = "0x134D4A4", VA = "0x134D4A4")]
	public WFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000020")]
public class CFX_SpawnSystem : MonoBehaviour
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CFX_SpawnSystem instance;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToPreload;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] objectsToPreloadTimes;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideObjectsInHierarchy;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool spawnAsChildren;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool onlyGetInactiveObjects;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool instantiateIfNeeded;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool allObjectsLoaded;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<GameObject>> instantiatedObjects;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> poolCursors;

	[Token(Token = "0x17000007")]
	public static bool AllObjectsLoaded
	{
		[Token(Token = "0x600008A")]
		[Address(RVA = "0x1212BA0", Offset = "0x1212BA0", VA = "0x1212BA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1211E04", Offset = "0x1211E04", VA = "0x1211E04")]
	public static GameObject GetNextObject(GameObject sourceObj, bool activateObject = true)
	{
		return null;
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x12124CC", Offset = "0x12124CC", VA = "0x12124CC")]
	public static void PreloadObject(GameObject sourceObj, int poolSize = 1)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x12127E4", Offset = "0x12127E4", VA = "0x12127E4")]
	public static void UnloadObjects(GameObject sourceObj)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x121253C", Offset = "0x121253C", VA = "0x121253C")]
	private void addObjectToPool(GameObject sourceObject, int number)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1212844", Offset = "0x1212844", VA = "0x1212844")]
	private void removeObjectsFromPool(GameObject sourceObject)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1212388", Offset = "0x1212388", VA = "0x1212388")]
	private void increasePoolCursor(int uniqueId)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1212BFC", Offset = "0x1212BFC", VA = "0x1212BFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1212CE4", Offset = "0x1212CE4", VA = "0x1212CE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1212D70", Offset = "0x1212D70", VA = "0x1212D70")]
	public CFX_SpawnSystem()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA32098", Offset = "0xA32098")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float xDeg;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float yDeg;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentDistance;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float desiredDistance;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion currentRotation;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion desiredRotation;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion rotation;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 position;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float idleTimer;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleSmooth;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x11B3E74", Offset = "0x11B3E74", VA = "0x11B3E74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x11B422C", Offset = "0x11B422C", VA = "0x11B422C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x11B3E78", Offset = "0x11B3E78", VA = "0x11B3E78")]
	public void Init()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x11B4230", Offset = "0x11B4230", VA = "0x11B4230")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x11B475C", Offset = "0x11B475C", VA = "0x11B475C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x11B480C", Offset = "0x11B480C", VA = "0x11B480C")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000022")]
public class AI_Manager : MonoBehaviour
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AI_Manager _instance;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<AI_Unit> _units;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x128D650", Offset = "0x128D650", VA = "0x128D650")]
	public static void Add(AI_Unit unit)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x128D7A4", Offset = "0x128D7A4", VA = "0x128D7A4")]
	public static void Remove(AI_Unit unit)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x128D828", Offset = "0x128D828", VA = "0x128D828")]
	private void Update()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x128D930", Offset = "0x128D930", VA = "0x128D930")]
	public AI_Manager()
	{
	}
}
[Token(Token = "0x2000023")]
public class AI_Unit : MonoBehaviour
{
	[Token(Token = "0x2000585")]
	public enum ActionType
	{
		[Token(Token = "0x4002554")]
		idle,
		[Token(Token = "0x4002555")]
		move,
		[Token(Token = "0x4002556")]
		die,
		[Token(Token = "0x4002557")]
		attack
	}

	[Serializable]
	[Token(Token = "0x2000586")]
	public struct AIAction
	{
		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ActionType type;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshAnimationBase[] animations;
	}

	[Token(Token = "0x2000587")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA356F4", Offset = "0xA356F4")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<string> dieAction;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AI_Unit <>4__this;

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x128E13C", Offset = "0x128E13C", VA = "0x128E13C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x128E1C0", Offset = "0x128E1C0", VA = "0x128E1C0")]
		internal void <PerformAction>b__0(string anim)
		{
		}
	}

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _maxMovingUnits;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int _movingUnits;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshAnimatorBase meshAnimator;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AIAction[] actions;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxMoveDistance;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float moveSpeed;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _chooseNewAction;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AIAction _currentAction;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _actionEndTime;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _currentPosition;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _movePosition;

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x128D9B0", Offset = "0x128D9B0", VA = "0x128D9B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x128DA98", Offset = "0x128DA98", VA = "0x128DA98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x128D92C", Offset = "0x128D92C", VA = "0x128D92C")]
	public void Tick(float time, float deltaTime)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x128DAFC", Offset = "0x128DAFC", VA = "0x128DAFC")]
	private void PerformAction(float time, float deltaTime)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x128E144", Offset = "0x128E144", VA = "0x128E144")]
	public AI_Unit()
	{
	}
}
[Token(Token = "0x2000024")]
public class ArmySpawner : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000588")]
	public struct Unit
	{
		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject prefab;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int count;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float delay;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool loop;
	}

	[Token(Token = "0x2000589")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35704", Offset = "0xA35704")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArmySpawner <>4__this;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <center>5__2;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <j>5__4;

		[Token(Token = "0x170003AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027CC")]
			[Address(RVA = "0x129A494", Offset = "0x129A494", VA = "0x129A494", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027CE")]
			[Address(RVA = "0x129A4FC", Offset = "0x129A4FC", VA = "0x129A4FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x1299DB4", Offset = "0x1299DB4", VA = "0x1299DB4")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x129A0DC", Offset = "0x129A0DC", VA = "0x129A0DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x129A0E0", Offset = "0x129A0E0", VA = "0x129A0E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x129A49C", Offset = "0x129A49C", VA = "0x129A49C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, Stack<GameObject>> _pool;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 spawnSize;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 sizeMult;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Unit[] units;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1299D44", Offset = "0x1299D44", VA = "0x1299D44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4C93C", Offset = "0xA4C93C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1299DE0", Offset = "0x1299DE0", VA = "0x1299DE0")]
	private GameObject LoadFromPool(Unit unit)
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1299F60", Offset = "0x1299F60", VA = "0x1299F60")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1299FF0", Offset = "0x1299FF0", VA = "0x1299FF0")]
	public ArmySpawner()
	{
	}
}
[Token(Token = "0x2000025")]
public class DelayedDestroy : MonoBehaviour
{
	[Token(Token = "0x200058A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35714", Offset = "0xA35714")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayedDestroy <>4__this;

		[Token(Token = "0x170003AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027D2")]
			[Address(RVA = "0x13167CC", Offset = "0x13167CC", VA = "0x13167CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027D4")]
			[Address(RVA = "0x1316834", Offset = "0x1316834", VA = "0x1316834", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0x13166A8", Offset = "0x13166A8", VA = "0x13166A8")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x13166DC", Offset = "0x13166DC", VA = "0x13166DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0x13166E0", Offset = "0x13166E0", VA = "0x13166E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x13167D4", Offset = "0x13167D4", VA = "0x13167D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1316638", Offset = "0x1316638", VA = "0x1316638")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4C9A0", Offset = "0xA4C9A0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x13166D4", Offset = "0x13166D4", VA = "0x13166D4")]
	public DelayedDestroy()
	{
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA320D0", Offset = "0xA320D0")]
public class MouseOrbitImproved : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200058B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35724", Offset = "0xA35724")]
	private sealed class <>c
	{
		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<AI_Unit> <>9__14_0;

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x1336EC8", Offset = "0x1336EC8", VA = "0x1336EC8")]
		public <>c()
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x1336ED0", Offset = "0x1336ED0", VA = "0x1336ED0")]
		internal bool <LateUpdate>b__14_0(AI_Unit x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scrollMult;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distance;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xSpeed;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ySpeed;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMinLimit;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float yMaxLimit;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMin;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distanceMax;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerControlled controlled;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float x;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float y;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool locked;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1336290", Offset = "0x1336290", VA = "0x1336290")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x13362C8", Offset = "0x13362C8", VA = "0x13362C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1336D98", Offset = "0x1336D98", VA = "0x1336D98")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1336E48", Offset = "0x1336E48", VA = "0x1336E48")]
	public MouseOrbitImproved()
	{
	}
}
[Token(Token = "0x2000027")]
public class PlayerControlled : MonoBehaviour
{
	[Token(Token = "0x40000F1")]
	private const string AnimIdle = "BreathingIdle";

	[Token(Token = "0x40000F2")]
	private const string AnimForward = "Running";

	[Token(Token = "0x40000F3")]
	private const string AnimBackward = "RunningBackward";

	[Token(Token = "0x40000F4")]
	private const string AnimLeft = "Running";

	[Token(Token = "0x40000F5")]
	private const string AnimRight = "Running";

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _moveSpeed;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _origTarget;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _currentAnim;

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x113D698", Offset = "0x113D698", VA = "0x113D698")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x113D754", Offset = "0x113D754", VA = "0x113D754")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x113D824", Offset = "0x113D824", VA = "0x113D824")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x113DEAC", Offset = "0x113DEAC", VA = "0x113DEAC")]
	public PlayerControlled()
	{
	}
}
[Token(Token = "0x2000028")]
public class BoidComponent : MonoBehaviour
{
	[Token(Token = "0x200058C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35734", Offset = "0xA35734")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoidComponent <>4__this;

		[Token(Token = "0x170003AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027DB")]
			[Address(RVA = "0x12098FC", Offset = "0x12098FC", VA = "0x12098FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027DD")]
			[Address(RVA = "0x1209964", Offset = "0x1209964", VA = "0x1209964", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x12093D0", Offset = "0x12093D0", VA = "0x12093D0")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x12097BC", Offset = "0x12097BC", VA = "0x12097BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0x12097C0", Offset = "0x12097C0", VA = "0x12097C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x1209904", Offset = "0x1209904", VA = "0x1209904", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Quaternion velocity;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1209360", Offset = "0x1209360", VA = "0x1209360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4CA04", Offset = "0xA4CA04")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x12093FC", Offset = "0x12093FC", VA = "0x12093FC")]
	private void UpdateTarget()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x12095B8", Offset = "0x12095B8", VA = "0x12095B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x12097AC", Offset = "0x12097AC", VA = "0x12097AC")]
	public BoidComponent()
	{
	}
}
[Token(Token = "0x2000029")]
public class Car : MonoBehaviour
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float turnspeed;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float destination;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float direction;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x12130B8", Offset = "0x12130B8", VA = "0x12130B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1213450", Offset = "0x1213450", VA = "0x1213450")]
	private void FindDestination(Vector3 tPos)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x12134CC", Offset = "0x12134CC", VA = "0x12134CC")]
	private float mod(float a)
	{
		return default(float);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x12134DC", Offset = "0x12134DC", VA = "0x12134DC")]
	public Car()
	{
	}
}
[Token(Token = "0x200002A")]
public class Move : MonoBehaviour
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 forward;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> Tiles;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float zPos;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int starTiles;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int prevRand;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int num;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x1336F44", Offset = "0x1336F44", VA = "0x1336F44")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x13371AC", Offset = "0x13371AC", VA = "0x13371AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x1337434", Offset = "0x1337434", VA = "0x1337434")]
	public Move()
	{
	}
}
[Token(Token = "0x200002B")]
public class PoolManager : MonoBehaviour
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37A9C", Offset = "0xA37A9C")]
	private static PoolManager <Instance>k__BackingField;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, Queue<GameObject>> pool;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x17000008")]
	public static PoolManager Instance
	{
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x1144620", Offset = "0x1144620", VA = "0x1144620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4CA68", Offset = "0xA4CA68")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x1144670", Offset = "0x1144670", VA = "0x1144670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4CA78", Offset = "0xA4CA78")]
		set
		{
		}
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x11446C4", Offset = "0x11446C4", VA = "0x11446C4")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1144718", Offset = "0x1144718", VA = "0x1144718")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1144788", Offset = "0x1144788", VA = "0x1144788")]
	public void CreatePool(GameObject gameObj, int numberOfObj)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1144908", Offset = "0x1144908", VA = "0x1144908")]
	public void Reuse(int gameObjKey, Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1144A4C", Offset = "0x1144A4C", VA = "0x1144A4C")]
	public void Reuse(int gameObjKey)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1144B08", Offset = "0x1144B08", VA = "0x1144B08")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1144DD8", Offset = "0x1144DD8", VA = "0x1144DD8")]
	public PoolManager()
	{
	}
}
[Token(Token = "0x200002C")]
[ExecuteInEditMode]
public class MobileBloom : MonoBehaviour
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37AAC", Offset = "0xA37AAC")]
	public int NumberOfPasses;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37AC4", Offset = "0xA37AC4")]
	public float BlurAmount;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color BloomColor;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37ADC", Offset = "0xA37ADC")]
	public float BloomAmount;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37AF4", Offset = "0xA37AF4")]
	public float BloomThreshold;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int blurAmountString;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int bloomColorString;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int blAmountString;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int thresholdString;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int bloomTexString;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material material;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1335670", Offset = "0x1335670", VA = "0x1335670")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1335E20", Offset = "0x1335E20", VA = "0x1335E20")]
	public MobileBloom()
	{
	}
}
[Token(Token = "0x200002D")]
public class ResetPosition : MonoBehaviour
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceToReset;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPosition;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x10BC810", Offset = "0x10BC810", VA = "0x10BC810")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x10BC84C", Offset = "0x10BC84C", VA = "0x10BC84C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x10BC954", Offset = "0x10BC954", VA = "0x10BC954")]
	public ResetPosition()
	{
	}
}
[Token(Token = "0x200002E")]
public class PlankConveyorBelt : MonoBehaviour
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation plankPrefab;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Mesh> plankMeshes;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip clip;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int plankCount;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x113CC94", Offset = "0x113CC94", VA = "0x113CC94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x113CE20", Offset = "0x113CE20", VA = "0x113CE20")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CA88", Offset = "0xA4CA88")]
	public void PlacePlanks()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x113CFE4", Offset = "0x113CFE4", VA = "0x113CFE4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CAC0", Offset = "0xA4CAC0")]
	public void RemovePlanks()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x113D0C8", Offset = "0x113D0C8", VA = "0x113D0C8")]
	public PlankConveyorBelt()
	{
	}
}
[Token(Token = "0x200002F")]
public class SkyPatrolCart : MonoBehaviour
{
	[Token(Token = "0x200058D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35744", Offset = "0xA35744")]
	private sealed class <WaitForPlayerDeath>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkyPatrolCart <>4__this;

		[Token(Token = "0x170003B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027E1")]
			[Address(RVA = "0x11AFC84", Offset = "0x11AFC84", VA = "0x11AFC84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027E3")]
			[Address(RVA = "0x11AFCEC", Offset = "0x11AFCEC", VA = "0x11AFCEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0x11AFA0C", Offset = "0x11AFA0C", VA = "0x11AFA0C")]
		[DebuggerHidden]
		public <WaitForPlayerDeath>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0x11AFBC0", Offset = "0x11AFBC0", VA = "0x11AFBC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0x11AFBC4", Offset = "0x11AFBC4", VA = "0x11AFBC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x11AFC8C", Offset = "0x11AFC8C", VA = "0x11AFC8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200058E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35754", Offset = "0xA35754")]
	private sealed class <WaitForPlayerGround>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkyPatrolCart <>4__this;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BNGPlayerControllerExt <_playerController>5__2;

		[Token(Token = "0x170003B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027E7")]
			[Address(RVA = "0x11B00B8", Offset = "0x11B00B8", VA = "0x11B00B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027E9")]
			[Address(RVA = "0x11B0120", Offset = "0x11B0120", VA = "0x11B0120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0x11AFAA8", Offset = "0x11AFAA8", VA = "0x11AFAA8")]
		[DebuggerHidden]
		public <WaitForPlayerGround>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x11AFCF4", Offset = "0x11AFCF4", VA = "0x11AFCF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x11AFCF8", Offset = "0x11AFCF8", VA = "0x11AFCF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x11B00C0", Offset = "0x11B00C0", VA = "0x11B00C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_PlayerLocation;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider m_SkyCartGround;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider m_SkyCartBoundBox;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _playerCartCollider;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterController _character;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isInsideCart;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool allowDropOut;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _waterBalloons;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource startSound;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource stopSound;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource loopSound;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource music;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _frontPoint;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _smokeScreen;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro scoreText;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x11AF568", Offset = "0x11AF568", VA = "0x11AF568")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x11AF5AC", Offset = "0x11AF5AC", VA = "0x11AF5AC")]
	public void DeattachPlayer()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x11AF7AC", Offset = "0x11AF7AC", VA = "0x11AF7AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x11AF99C", Offset = "0x11AF99C", VA = "0x11AF99C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4CAF8", Offset = "0xA4CAF8")]
	private IEnumerator WaitForPlayerDeath()
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x11AFA38", Offset = "0x11AFA38", VA = "0x11AFA38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4CB5C", Offset = "0xA4CB5C")]
	private IEnumerator WaitForPlayerGround()
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x11AFAD4", Offset = "0x11AFAD4", VA = "0x11AFAD4")]
	public void AttachPlayer()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x11AFB74", Offset = "0x11AFB74", VA = "0x11AFB74")]
	public void TriggerSmokeScreen()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x11AFBB8", Offset = "0x11AFBB8", VA = "0x11AFBB8")]
	public SkyPatrolCart()
	{
	}
}
[Token(Token = "0x2000030")]
public class SkyPatrolCarts : MonoBehaviour
{
	[Token(Token = "0x200058F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35764", Offset = "0xA35764")]
	private sealed class <PlayIntroAndStartGame>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkyPatrolCarts <>4__this;

		[Token(Token = "0x170003B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027ED")]
			[Address(RVA = "0x11B0F68", Offset = "0x11B0F68", VA = "0x11B0F68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027EF")]
			[Address(RVA = "0x11B0FD0", Offset = "0x11B0FD0", VA = "0x11B0FD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x11B086C", Offset = "0x11B086C", VA = "0x11B086C")]
		[DebuggerHidden]
		public <PlayIntroAndStartGame>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x11B0D38", Offset = "0x11B0D38", VA = "0x11B0D38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x11B0D3C", Offset = "0x11B0D3C", VA = "0x11B0D3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x11B0F70", Offset = "0x11B0F70", VA = "0x11B0F70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation prefab;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip clip;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float clipSpeed;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] cartIntervals;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37B7C", Offset = "0xA37B7C")]
	public float keepPercentage;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool triggerOnStart;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material skyPatrolSkybox;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float inRideLODBias;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform m_PlayerEndTeleport;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject[] m_ToggleObjects;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject m_SkyPatrolTriggers;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> carts;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isPlayerAttached;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material originalTPSkybox;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float adjustedClipLength;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float originalLODBias;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action completedRun;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool cartsActive;

	[Token(Token = "0x17000009")]
	public SkyPatrolCart playerCart
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x11B0128", Offset = "0x11B0128", VA = "0x11B0128")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x11B019C", Offset = "0x11B019C", VA = "0x11B019C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x11B05AC", Offset = "0x11B05AC", VA = "0x11B05AC")]
	private void StartTrack()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x11B0780", Offset = "0x11B0780", VA = "0x11B0780")]
	private void ToggleObjects(bool status)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x11B0328", Offset = "0x11B0328", VA = "0x11B0328")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CBC0", Offset = "0xA4CBC0")]
	public void PlayerTriggeredSkyPatrol()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x11B07FC", Offset = "0x11B07FC", VA = "0x11B07FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4CBF8", Offset = "0xA4CBF8")]
	private IEnumerator PlayIntroAndStartGame()
	{
		return null;
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x11B0898", Offset = "0x11B0898", VA = "0x11B0898")]
	public void CircuitCompleted()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x11B0930", Offset = "0x11B0930", VA = "0x11B0930")]
	public void NextCircuit()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x11B0990", Offset = "0x11B0990", VA = "0x11B0990")]
	public void ReenableGravity()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x11B0A14", Offset = "0x11B0A14", VA = "0x11B0A14")]
	public void EndingSFX()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x11B0ADC", Offset = "0x11B0ADC", VA = "0x11B0ADC")]
	public void SkyPatrolEnd()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x11B0360", Offset = "0x11B0360", VA = "0x11B0360")]
	public void PlacePrefabs()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x11B0C84", Offset = "0x11B0C84", VA = "0x11B0C84")]
	public SkyPatrolCarts()
	{
	}
}
[Token(Token = "0x2000031")]
public class AssignLightprobeStatic : MonoBehaviour
{
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool setOnStart;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool useOcclusion;

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x129A504", Offset = "0x129A504", VA = "0x129A504")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x129A514", Offset = "0x129A514", VA = "0x129A514")]
	public void SetStaticLightprobes()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x129A850", Offset = "0x129A850", VA = "0x129A850")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CC5C", Offset = "0xA4CC5C")]
	public void SetToRegularLightProbes()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x129A8FC", Offset = "0x129A8FC", VA = "0x129A8FC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CC94", Offset = "0xA4CC94")]
	public void SetToCustomLightProbes()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x129A9B4", Offset = "0x129A9B4", VA = "0x129A9B4")]
	public AssignLightprobeStatic()
	{
	}
}
[Token(Token = "0x2000032")]
public class BuildingReplaceInstances : MonoBehaviour
{
	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x120D7C8", Offset = "0x120D7C8", VA = "0x120D7C8")]
	public BuildingReplaceInstances()
	{
	}
}
[Token(Token = "0x2000033")]
public class CandleFlame : MonoBehaviour
{
	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x1212E40", Offset = "0x1212E40", VA = "0x1212E40")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1212ECC", Offset = "0x1212ECC", VA = "0x1212ECC")]
	public CandleFlame()
	{
	}
}
[Token(Token = "0x2000034")]
public class ContactShadow : MonoBehaviour
{
	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mesh;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform point;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material meshMaterial;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1228B30", Offset = "0x1228B30", VA = "0x1228B30")]
	private void Start()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1228B64", Offset = "0x1228B64", VA = "0x1228B64")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1228C24", Offset = "0x1228C24", VA = "0x1228C24")]
	public ContactShadow()
	{
	}
}
[Token(Token = "0x2000035")]
public class CurvedLine : MonoBehaviour
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37BC4", Offset = "0xA37BC4")]
	public bool runInUpdate;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lineSegmentSize;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lineWidth;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37BFC", Offset = "0xA37BFC")]
	public bool updateOnGizmos;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool showGizmos;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float gizmoSize;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color gizmoColor;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CurvedLinePoint[] linePoints;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] linePositions;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] linePositionsOld;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] curvedLinePoints;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1234984", Offset = "0x1234984", VA = "0x1234984")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x123499C", Offset = "0x123499C", VA = "0x123499C", Slot = "4")]
	public virtual void UpdateLine()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1234CBC", Offset = "0x1234CBC", VA = "0x1234CBC")]
	public Vector3[] GetCurvedLinePoints()
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x12349C0", Offset = "0x12349C0", VA = "0x12349C0")]
	public void GetPoints()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x1234AC8", Offset = "0x1234AC8", VA = "0x1234AC8")]
	public void SetPointsToLine()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1234CC4", Offset = "0x1234CC4", VA = "0x1234CC4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1234CC8", Offset = "0x1234CC8", VA = "0x1234CC8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1234D3C", Offset = "0x1234D3C", VA = "0x1234D3C")]
	public CurvedLine()
	{
	}
}
[Token(Token = "0x2000036")]
public class CurvedLinePlacer : CurvedLine
{
	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1234E28", Offset = "0x1234E28", VA = "0x1234E28")]
	public CurvedLinePlacer()
	{
	}
}
[Token(Token = "0x2000037")]
public class CurvedLinePoint : MonoBehaviour
{
	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool showGizmo;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float gizmoSize;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Color gizmoColor;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1234E2C", Offset = "0x1234E2C", VA = "0x1234E2C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1234E90", Offset = "0x1234E90", VA = "0x1234E90")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1234F60", Offset = "0x1234F60", VA = "0x1234F60")]
	public CurvedLinePoint()
	{
	}
}
[Token(Token = "0x2000038")]
public class LineSmoother : MonoBehaviour
{
	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x115A440", Offset = "0x115A440", VA = "0x115A440")]
	public static Vector3[] SmoothLine(Vector3[] inputPoints, float segmentSize)
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x115A938", Offset = "0x115A938", VA = "0x115A938")]
	public LineSmoother()
	{
	}
}
[Token(Token = "0x2000039")]
public class DoOnStart : MonoBehaviour
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent doOnStart;

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x13206B0", Offset = "0x13206B0", VA = "0x13206B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x13206CC", Offset = "0x13206CC", VA = "0x13206CC")]
	public DoOnStart()
	{
	}
}
[Token(Token = "0x200003A")]
public class FadeToColor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000590")]
	public class RendererAttrs
	{
		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer mesh;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] materials;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color[] origColors;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isAtOrig;

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x1253FA8", Offset = "0x1253FA8", VA = "0x1253FA8")]
		public void SetToColor(Color color, float transition, bool toOrig, MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x1254AD8", Offset = "0x1254AD8", VA = "0x1254AD8")]
		public void MarkAtOrig(bool state)
		{
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x1254548", Offset = "0x1254548", VA = "0x1254548")]
		public RendererAttrs()
		{
		}
	}

	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35774", Offset = "0xA35774")]
	private sealed class <DO_Fade>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeToColor <>4__this;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool toOrig;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__2;

		[Token(Token = "0x170003B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027F6")]
			[Address(RVA = "0x1254A68", Offset = "0x1254A68", VA = "0x1254A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027F8")]
			[Address(RVA = "0x1254AD0", Offset = "0x1254AD0", VA = "0x1254AD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x1254704", Offset = "0x1254704", VA = "0x1254704")]
		[DebuggerHidden]
		public <DO_Fade>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x12547DC", Offset = "0x12547DC", VA = "0x12547DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x12547E0", Offset = "0x12547E0", VA = "0x12547E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x1254A70", Offset = "0x1254A70", VA = "0x1254A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject parentObj;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool startAtOriginal;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float transitionTime;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color fadeColor;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent doOnFade;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent doAfterReset;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37C64", Offset = "0xA37C64")]
	public GameObject testInjestObj;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isAtOrig;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<RendererAttrs> renderers;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1253B74", Offset = "0x1253B74", VA = "0x1253B74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1253B78", Offset = "0x1253B78", VA = "0x1253B78")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1253E74", Offset = "0x1253E74", VA = "0x1253E74")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CCCC", Offset = "0xA4CCCC")]
	public void TestInjest()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1253E7C", Offset = "0x1253E7C", VA = "0x1253E7C")]
	public void IngestGameObject(GameObject obj)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1253CF8", Offset = "0x1253CF8", VA = "0x1253CF8")]
	public void AddRenderers(Renderer[] toAdd)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x125422C", Offset = "0x125422C", VA = "0x125422C")]
	public void AddRenderer(Renderer toAdd)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1254558", Offset = "0x1254558", VA = "0x1254558")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CD04", Offset = "0xA4CD04")]
	public void Fade()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x12545F4", Offset = "0x12545F4", VA = "0x12545F4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CD3C", Offset = "0xA4CD3C")]
	public void BackToOriginal()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1254680", Offset = "0x1254680", VA = "0x1254680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4CD74", Offset = "0xA4CD74")]
	private IEnumerator DO_Fade(bool toOrig)
	{
		return null;
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1253D70", Offset = "0x1253D70", VA = "0x1253D70")]
	public void FadeImmediately(bool toOrig)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1254730", Offset = "0x1254730", VA = "0x1254730")]
	public FadeToColor()
	{
	}
}
[Token(Token = "0x200003B")]
public class FixLODBias : MonoBehaviour
{
	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bias;

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1256EA8", Offset = "0x1256EA8", VA = "0x1256EA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1256EE4", Offset = "0x1256EE4", VA = "0x1256EE4")]
	public FixLODBias()
	{
	}
}
[Token(Token = "0x200003C")]
public class InitializeHoudiniBuildings : MonoBehaviour
{
	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string digitalAsset;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37C9C", Offset = "0xA37C9C")]
	public List<GameObject> footprintCurves;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool footprintIsMesh;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37CD4", Offset = "0xA37CD4")]
	public Vector2Int floorCountRange;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> wallMaterialPaths;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string roofMaterialPath;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37D0C", Offset = "0xA37D0C")]
	public bool setTrims;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string groundTrimSides;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string firstFloorTrimSides;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string roofTrimSides;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37D44", Offset = "0xA37D44")]
	public bool setModular;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string modularSides;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37D7C", Offset = "0xA37D7C")]
	public bool hasFireEscape;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37DB4", Offset = "0xA37DB4")]
	public GameObject wallPlain;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject wallUpperMain;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject wallUpperWall;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject wallBottom0Main;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject wallBottom0Wall;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject wallBottom1Main;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject wallBottom1Wall;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private HEU_SessionBase session;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1145F48", Offset = "0x1145F48", VA = "0x1145F48")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CDD8", Offset = "0xA4CDD8")]
	public void InitializeBuildings()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x11461D4", Offset = "0x11461D4", VA = "0x11461D4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CE10", Offset = "0xA4CE10")]
	public void UpdateBuildings()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1146018", Offset = "0x1146018", VA = "0x1146018")]
	public void CreateBuilding(int footprint)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x114702C", Offset = "0x114702C", VA = "0x114702C")]
	public static HEU_HoudiniAsset QueryHoudiniAsset(GameObject rootGO)
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1147228", Offset = "0x1147228", VA = "0x1147228")]
	public void CookAsset(HEU_HoudiniAsset houdiniAsset)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1147254", Offset = "0x1147254", VA = "0x1147254")]
	public void InitParmsAndCook(HEU_HoudiniAsset houdiniAsset, int footprint)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1146284", Offset = "0x1146284", VA = "0x1146284")]
	public void UpdateParmsAndCook(HEU_HoudiniAsset houdiniAsset)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1148238", Offset = "0x1148238", VA = "0x1148238")]
	public static void QueryObjects(HEU_HoudiniAsset houdiniAsset)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1148578", Offset = "0x1148578", VA = "0x1148578")]
	public static void QueryGeoParts(HEU_SessionBase session, ref HAPI_GeoInfo geoInfo)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x11489EC", Offset = "0x11489EC", VA = "0x11489EC")]
	public static void QueryPartAttributeByOwner(HEU_SessionBase session, int geoID, int partID, HAPI_AttributeOwner owner, int count, StringBuilder sb)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1148C78", Offset = "0x1148C78", VA = "0x1148C78")]
	public static void QueryAttributeByStorageType(HEU_SessionBase session, int geoID, int partID, ref HAPI_AttributeInfo attrInfo, string attrName)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1148E1C", Offset = "0x1148E1C", VA = "0x1148E1C")]
	public static void QueryAttribute(HEU_HoudiniAsset houdiniAsset, string objName, string geoName, int partID, string attrName)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1149350", Offset = "0x1149350", VA = "0x1149350")]
	public InitializeHoudiniBuildings()
	{
	}
}
[Token(Token = "0x200003D")]
public class LODBiasZone : MonoBehaviour
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bias;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask layers;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onTriggerEnter;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x11574FC", Offset = "0x11574FC", VA = "0x11574FC")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x11575B0", Offset = "0x11575B0", VA = "0x11575B0")]
	public LODBiasZone()
	{
	}
}
[Token(Token = "0x200003E")]
public class LODDistancer : MonoBehaviour
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<float> LODDistances;

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1157620", Offset = "0x1157620", VA = "0x1157620")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CE48", Offset = "0xA4CE48")]
	public void SetDistances()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1157954", Offset = "0x1157954", VA = "0x1157954")]
	public LODDistancer()
	{
	}
}
[Token(Token = "0x200003F")]
public class LayoutSkyboxBuildings : MonoBehaviour
{
	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1158204", Offset = "0x1158204", VA = "0x1158204")]
	public LayoutSkyboxBuildings()
	{
	}
}
[Token(Token = "0x2000040")]
public class LerpMaterialProperty : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000592")]
	public class PropertyLerp
	{
		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA4B2F0", Offset = "0xA4B2F0")]
		public string lerpName;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lerpLength;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA4B328", Offset = "0xA4B328")]
		public List<FloatProperty> floats;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ColorProperty> colors;

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x1158A10", Offset = "0x1158A10", VA = "0x1158A10")]
		public PropertyLerp()
		{
		}
	}

	[Token(Token = "0x2000593")]
	public class MaterialProperty
	{
		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string propertyName;

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0x1158A08", Offset = "0x1158A08", VA = "0x1158A08", Slot = "4")]
		public virtual void SetToBlock(MaterialPropertyBlock block, float value)
		{
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x1158A0C", Offset = "0x1158A0C", VA = "0x1158A0C", Slot = "5")]
		public virtual void SetToBlock(MaterialPropertyBlock block, Color value)
		{
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0x1158988", Offset = "0x1158988", VA = "0x1158988")]
		public MaterialProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000594")]
	public class FloatProperty : MaterialProperty
	{
		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float valueFrom;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float valueTo;

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x11589E0", Offset = "0x11589E0", VA = "0x11589E0", Slot = "4")]
		public override void SetToBlock(MaterialPropertyBlock block, float value)
		{
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0x1158A04", Offset = "0x1158A04", VA = "0x1158A04")]
		public FloatProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000595")]
	public class ColorProperty : MaterialProperty
	{
		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color valueFrom;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color valueTo;

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0x1158924", Offset = "0x1158924", VA = "0x1158924", Slot = "5")]
		public override void SetToBlock(MaterialPropertyBlock block, Color value)
		{
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0x1158948", Offset = "0x1158948", VA = "0x1158948")]
		public ColorProperty()
		{
		}
	}

	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35784", Offset = "0xA35784")]
	private sealed class <DO_Lerp>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LerpMaterialProperty <>4__this;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MaterialPropertyBlock <block>5__2;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <time>5__3;

		[Token(Token = "0x170003B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002804")]
			[Address(RVA = "0x11588B4", Offset = "0x11588B4", VA = "0x11588B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002806")]
			[Address(RVA = "0x115891C", Offset = "0x115891C", VA = "0x115891C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0x1158398", Offset = "0x1158398", VA = "0x1158398")]
		[DebuggerHidden]
		public <DO_Lerp>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002802")]
		[Address(RVA = "0x11584AC", Offset = "0x11584AC", VA = "0x11584AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0x11584B0", Offset = "0x11584B0", VA = "0x11584B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0x11588BC", Offset = "0x11588BC", VA = "0x11588BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37DEC", Offset = "0xA37DEC")]
	public List<Renderer> renderers;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37E24", Offset = "0xA37E24")]
	public List<PropertyLerp> lerps;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PropertyLerp chosenLerp;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<FloatProperty> floats;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ColorProperty> colors;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x115820C", Offset = "0x115820C", VA = "0x115820C")]
	public void Lerp(string lerpName)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1158328", Offset = "0x1158328", VA = "0x1158328")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4CE80", Offset = "0xA4CE80")]
	private IEnumerator DO_Lerp()
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x11583C4", Offset = "0x11583C4", VA = "0x11583C4")]
	public LerpMaterialProperty()
	{
	}
}
[Token(Token = "0x2000041")]
public class LightFade : MonoBehaviour
{
	[Token(Token = "0x2000597")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35794", Offset = "0xA35794")]
	private sealed class <DO_Fade>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightFade <>4__this;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fadeIn;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startIntensity>5__2;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <endIntensity>5__3;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__4;

		[Token(Token = "0x170003BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600280A")]
			[Address(RVA = "0x1159714", Offset = "0x1159714", VA = "0x1159714", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600280C")]
			[Address(RVA = "0x115977C", Offset = "0x115977C", VA = "0x115977C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0x11594F8", Offset = "0x11594F8", VA = "0x11594F8")]
		[DebuggerHidden]
		public <DO_Fade>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002808")]
		[Address(RVA = "0x1159534", Offset = "0x1159534", VA = "0x1159534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0x1159538", Offset = "0x1159538", VA = "0x1159538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0x115971C", Offset = "0x115971C", VA = "0x115971C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light light;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool activeOnStart;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37E5C", Offset = "0xA37E5C")]
	public float originalIntensity;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x11592A4", Offset = "0x11592A4", VA = "0x11592A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x11592F4", Offset = "0x11592F4", VA = "0x11592F4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CEE4", Offset = "0xA4CEE4")]
	public void LightFadeIn()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x11593EC", Offset = "0x11593EC", VA = "0x11593EC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4CF1C", Offset = "0xA4CF1C")]
	public void LightFadeOut()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1159474", Offset = "0x1159474", VA = "0x1159474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4CF54", Offset = "0xA4CF54")]
	private IEnumerator DO_Fade(bool fadeIn)
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1159524", Offset = "0x1159524", VA = "0x1159524")]
	public LightFade()
	{
	}
}
[Token(Token = "0x2000042")]
public class LightFlicker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000598")]
	public class LightForFlicker
	{
		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer mesh;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string shaderPropName;

		[Token(Token = "0x600280D")]
		[Address(RVA = "0x1159844", Offset = "0x1159844", VA = "0x1159844")]
		public void Initialize(float keyframeInterval, float flickerChance, int keyframeCount, string shaderFloatName)
		{
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x1159B58", Offset = "0x1159B58", VA = "0x1159B58")]
		public void Evaluate(float time, MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x1159C78", Offset = "0x1159C78", VA = "0x1159C78")]
		public LightForFlicker()
		{
		}
	}

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isFlickering;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA37E94", Offset = "0xA37E94")]
	public float flickerChance;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float keyframeInterval;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int keyframeCount;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string shaderFloatName;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<LightForFlicker> flickeringLights;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock block;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float time;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1159784", Offset = "0x1159784", VA = "0x1159784")]
	private void Start()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1159A70", Offset = "0x1159A70", VA = "0x1159A70")]
	public void IsFlickering(bool state)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1159A7C", Offset = "0x1159A7C", VA = "0x1159A7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1159BD8", Offset = "0x1159BD8", VA = "0x1159BD8")]
	public LightFlicker()
	{
	}
}
[Token(Token = "0x2000043")]
public class LoopingStreetBlockSection : MonoBehaviour
{
	[Token(Token = "0x2000599")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA357A4", Offset = "0xA357A4")]
	private sealed class <FadeIn>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoopingStreetBlockSection <>4__this;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x170003BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002813")]
			[Address(RVA = "0x132EA98", Offset = "0x132EA98", VA = "0x132EA98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002815")]
			[Address(RVA = "0x132EB00", Offset = "0x132EB00", VA = "0x132EB00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x132E824", Offset = "0x132E824", VA = "0x132E824")]
		[DebuggerHidden]
		public <FadeIn>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x132E8D0", Offset = "0x132E8D0", VA = "0x132E8D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x132E8D4", Offset = "0x132E8D4", VA = "0x132E8D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x132EAA0", Offset = "0x132EAA0", VA = "0x132EAA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action ExitedSection;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] brickMaterials;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer[] brickMeshes;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer fadePlane;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeLength;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock block;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x132E538", Offset = "0x132E538", VA = "0x132E538")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x132E598", Offset = "0x132E598", VA = "0x132E598")]
	public void ExitedTrigger()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x132E5FC", Offset = "0x132E5FC", VA = "0x132E5FC")]
	public void Refresh(bool fadeIn)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x132E7B4", Offset = "0x132E7B4", VA = "0x132E7B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4CFB8", Offset = "0xA4CFB8")]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x132E850", Offset = "0x132E850", VA = "0x132E850")]
	public LoopingStreetBlockSection()
	{
	}
}
[Token(Token = "0x2000044")]
public class LoopingStreetBlocks : MonoBehaviour
{
	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float blockLength;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int frontBackCount;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] blocksBaked;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float roadMoveSpeed;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int blockSelectIndex;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> placedBlocks;

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x132EB08", Offset = "0x132EB08", VA = "0x132EB08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x132ECF8", Offset = "0x132ECF8", VA = "0x132ECF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x132EDBC", Offset = "0x132EDBC", VA = "0x132EDBC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x132EBD0", Offset = "0x132EBD0", VA = "0x132EBD0")]
	private void InitializeBlocks()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x132EEB4", Offset = "0x132EEB4", VA = "0x132EEB4")]
	private void PlaceBlock(Vector3 position)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x132F178", Offset = "0x132F178", VA = "0x132F178")]
	private void EventListener_ExitedSection()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x132F328", Offset = "0x132F328", VA = "0x132F328")]
	public LoopingStreetBlocks()
	{
	}
}
[Token(Token = "0x2000045")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32118", Offset = "0xA32118")]
public class MaterialPreload : MonoBehaviour
{
	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] gatherRoots;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] extraPreloadMaterials;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37EAC", Offset = "0xA37EAC")]
	public List<Material> gatheredMaterials;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x132FDEC", Offset = "0x132FDEC", VA = "0x132FDEC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D01C", Offset = "0xA4D01C")]
	public void GatherMaterials()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x132FFFC", Offset = "0x132FFFC", VA = "0x132FFFC")]
	public MaterialPreload()
	{
	}
}
[Token(Token = "0x2000046")]
public class PlayAnimOffsetRandom : MonoBehaviour
{
	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playOnStart;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool random;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float setNormalizedTime;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float animSpeed;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x113D140", Offset = "0x113D140", VA = "0x113D140")]
	private void Start()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x113D150", Offset = "0x113D150", VA = "0x113D150")]
	public void PlayWithOffset()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x113D250", Offset = "0x113D250", VA = "0x113D250")]
	public PlayAnimOffsetRandom()
	{
	}
}
[Token(Token = "0x2000047")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3217C", Offset = "0xA3217C")]
public class PlaySound : MonoBehaviour
{
	[Token(Token = "0x600013B")]
	[Address(RVA = "0x113D268", Offset = "0x113D268", VA = "0x113D268")]
	public void Play(AudioClip clip)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x113D2F8", Offset = "0x113D2F8", VA = "0x113D2F8")]
	public PlaySound()
	{
	}
}
[Token(Token = "0x2000048")]
public class PrefabDisplayLayout : MonoBehaviour
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spaceBetweenRowItems;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float spaceBetweenRows;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rowItemCount;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x10B64C8", Offset = "0x10B64C8", VA = "0x10B64C8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D054", Offset = "0xA4D054")]
	public void LayoutPrefabs()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x10B668C", Offset = "0x10B668C", VA = "0x10B668C")]
	public PrefabDisplayLayout()
	{
	}
}
[Token(Token = "0x2000049")]
public class RandomSizeRotation : MonoBehaviour
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 sizeRange;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 rotationXRange;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 rotationYRange;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 rotationZRange;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x10B903C", Offset = "0x10B903C", VA = "0x10B903C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D08C", Offset = "0xA4D08C")]
	public void RandomizeRotationX()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x10B9164", Offset = "0x10B9164", VA = "0x10B9164")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D0C4", Offset = "0xA4D0C4")]
	public void RandomizeRotationY()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x10B928C", Offset = "0x10B928C", VA = "0x10B928C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D0FC", Offset = "0xA4D0FC")]
	public void RandomizeRotationZ()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x10B93B8", Offset = "0x10B93B8", VA = "0x10B93B8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D134", Offset = "0xA4D134")]
	public void RandomizeScale()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x10B947C", Offset = "0x10B947C", VA = "0x10B947C")]
	public RandomSizeRotation()
	{
	}
}
[Token(Token = "0x200004A")]
[ExecuteInEditMode]
public class ReLightActor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200059A")]
	public class ReLightPair
	{
		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject duplicateActor;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject lightmapActor;

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x10B9E84", Offset = "0x10B9E84", VA = "0x10B9E84")]
		public ReLightPair()
		{
		}
	}

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ReLightPair> actorPairs;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pairCount;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x10B9B4C", Offset = "0x10B9B4C", VA = "0x10B9B4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x10B9C2C", Offset = "0x10B9C2C", VA = "0x10B9C2C")]
	public void ReLightActors()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x10B9E14", Offset = "0x10B9E14", VA = "0x10B9E14")]
	public ReLightActor()
	{
	}
}
[Token(Token = "0x200004B")]
[ExecuteInEditMode]
public class SmallObjectLightmap : MonoBehaviour
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool updateOnGUI;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sampleHeight;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider[] hideOnSample;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider[] showOnSample;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37EE4", Offset = "0xA37EE4")]
	public int[] lightmapIndex;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4[] scaleOffsets;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer[] renderers;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x11B342C", Offset = "0x11B342C", VA = "0x11B342C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x11B359C", Offset = "0x11B359C", VA = "0x11B359C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x11B35AC", Offset = "0x11B35AC", VA = "0x11B35AC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D16C", Offset = "0xA4D16C")]
	public void SampleLightmaps()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x11B3430", Offset = "0x11B3430", VA = "0x11B3430")]
	private void PlaceOnLightmap()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x11B3B7C", Offset = "0x11B3B7C", VA = "0x11B3B7C")]
	public SmallObjectLightmap()
	{
	}
}
[Token(Token = "0x200004C")]
public class RenderCubemapStatic : MonoBehaviour
{
	[Token(Token = "0x600014C")]
	[Address(RVA = "0x10BAA64", Offset = "0x10BAA64", VA = "0x10BAA64")]
	public RenderCubemapStatic()
	{
	}
}
[Token(Token = "0x200004D")]
public class ReplaceInName : MonoBehaviour
{
	[Token(Token = "0x600014D")]
	[Address(RVA = "0x10BAA6C", Offset = "0x10BAA6C", VA = "0x10BAA6C")]
	public ReplaceInName()
	{
	}
}
[Token(Token = "0x200004E")]
public class RoomHighlight : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200059B")]
	public class RoomProperties
	{
		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Renderer> renderers;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Color> originalColors;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Color> currentColors;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x117E85C", Offset = "0x117E85C", VA = "0x117E85C")]
		public RoomProperties()
		{
		}
	}

	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA357B4", Offset = "0xA357B4")]
	private sealed class <DO_ActivateRoom>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int roomToActivate;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RoomHighlight <>4__this;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RoomProperties <roomActivate>5__2;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<RoomProperties> <roomsDeactivate>5__3;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <time>5__4;

		[Token(Token = "0x170003BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600281B")]
			[Address(RVA = "0x117F2F4", Offset = "0x117F2F4", VA = "0x117F2F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600281D")]
			[Address(RVA = "0x117F35C", Offset = "0x117F35C", VA = "0x117F35C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x117EBC0", Offset = "0x117EBC0", VA = "0x117EBC0")]
		[DebuggerHidden]
		public <DO_ActivateRoom>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x117ED98", Offset = "0x117ED98", VA = "0x117ED98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x117ED9C", Offset = "0x117ED9C", VA = "0x117ED9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x117F2FC", Offset = "0x117F2FC", VA = "0x117F2FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200059D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA357C4", Offset = "0xA357C4")]
	private sealed class <DO_DeactivateAll>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomHighlight <>4__this;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x170003C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002821")]
			[Address(RVA = "0x117F6C0", Offset = "0x117F6C0", VA = "0x117F6C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002823")]
			[Address(RVA = "0x117F728", Offset = "0x117F728", VA = "0x117F728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x117ECBC", Offset = "0x117ECBC", VA = "0x117ECBC")]
		[DebuggerHidden]
		public <DO_DeactivateAll>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x117F364", Offset = "0x117F364", VA = "0x117F364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x117F368", Offset = "0x117F368", VA = "0x117F368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0x117F6C8", Offset = "0x117F6C8", VA = "0x117F6C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> rooms;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float transitionTime;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color offColor;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<RoomProperties> roomStorage;

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x117E518", Offset = "0x117E518", VA = "0x117E518")]
	private void Start()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x117E51C", Offset = "0x117E51C", VA = "0x117E51C")]
	private void StoreOriginals()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x117E914", Offset = "0x117E914", VA = "0x117E914")]
	private void SetRendererColor(Renderer obj, Color color, MaterialPropertyBlock block)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x117E9D0", Offset = "0x117E9D0", VA = "0x117E9D0")]
	public void ActivateRoom(GameObject room)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x117EB40", Offset = "0x117EB40", VA = "0x117EB40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D1A4", Offset = "0xA4D1A4")]
	private IEnumerator DO_ActivateRoom(int roomToActivate)
	{
		return null;
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x117EBEC", Offset = "0x117EBEC", VA = "0x117EBEC")]
	public void DeactivateAll()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x117EC4C", Offset = "0x117EC4C", VA = "0x117EC4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D208", Offset = "0xA4D208")]
	private IEnumerator DO_DeactivateAll()
	{
		return null;
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x117ECE8", Offset = "0x117ECE8", VA = "0x117ECE8")]
	public RoomHighlight()
	{
	}
}
[Token(Token = "0x200004F")]
public class SetMaterialProperty : MonoBehaviour
{
	[Token(Token = "0x200059E")]
	public class MaterialProperty
	{
		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string propertyName;

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x11876E4", Offset = "0x11876E4", VA = "0x11876E4", Slot = "4")]
		public virtual void SetToBlock(MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x1187630", Offset = "0x1187630", VA = "0x1187630")]
		public MaterialProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200059F")]
	public class FloatProperty : MaterialProperty
	{
		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x1187688", Offset = "0x1187688", VA = "0x1187688", Slot = "4")]
		public override void SetToBlock(MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x11876B0", Offset = "0x11876B0", VA = "0x11876B0")]
		public FloatProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005A0")]
	public class IntProperty : MaterialProperty
	{
		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int value;

		[Token(Token = "0x6002828")]
		[Address(RVA = "0x11876B4", Offset = "0x11876B4", VA = "0x11876B4", Slot = "4")]
		public override void SetToBlock(MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0x11876E0", Offset = "0x11876E0", VA = "0x11876E0")]
		public IntProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005A1")]
	public class ColorProperty : MaterialProperty
	{
		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x11875D4", Offset = "0x11875D4", VA = "0x11875D4", Slot = "4")]
		public override void SetToBlock(MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0x1187600", Offset = "0x1187600", VA = "0x1187600")]
		public ColorProperty()
		{
		}
	}

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37F1C", Offset = "0xA37F1C")]
	public List<Renderer> renderers;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37F54", Offset = "0xA37F54")]
	public List<FloatProperty> floats;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<IntProperty> ints;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ColorProperty> colorProperties;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock block;

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x11870EC", Offset = "0x11870EC", VA = "0x11870EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x11874EC", Offset = "0x11874EC", VA = "0x11874EC")]
	public SetMaterialProperty()
	{
	}
}
[Token(Token = "0x2000050")]
public class SetMaterialPropertyRandom : MonoBehaviour
{
	[Token(Token = "0x20005A2")]
	public class RandomProperty
	{
		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string propertyName;

		[Token(Token = "0x600282C")]
		[Address(RVA = "0x1187E38", Offset = "0x1187E38", VA = "0x1187E38", Slot = "4")]
		public virtual void SetToBlock(MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0x1187CA8", Offset = "0x1187CA8", VA = "0x1187CA8")]
		public RandomProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005A3")]
	public class FloatProperty : RandomProperty
	{
		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 randomMinMax;

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x1187D00", Offset = "0x1187D00", VA = "0x1187D00", Slot = "4")]
		public override void SetToBlock(MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x1187D40", Offset = "0x1187D40", VA = "0x1187D40")]
		public FloatProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005A4")]
	public class IntProperty : RandomProperty
	{
		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2Int randomMinMax;

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x1187D84", Offset = "0x1187D84", VA = "0x1187D84", Slot = "4")]
		public override void SetToBlock(MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x1187DF4", Offset = "0x1187DF4", VA = "0x1187DF4")]
		public IntProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005A5")]
	public class ColorProperty : RandomProperty
	{
		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color[] colors;

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x1187BD0", Offset = "0x1187BD0", VA = "0x1187BD0", Slot = "4")]
		public override void SetToBlock(MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x1187C4C", Offset = "0x1187C4C", VA = "0x1187C4C")]
		public ColorProperty()
		{
		}
	}

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37F8C", Offset = "0xA37F8C")]
	public List<Renderer> renderers;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37FC4", Offset = "0xA37FC4")]
	public List<FloatProperty> floats;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<IntProperty> ints;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ColorProperty> colorProperties;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock block;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x11876E8", Offset = "0x11876E8", VA = "0x11876E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1187AE8", Offset = "0x1187AE8", VA = "0x1187AE8")]
	public SetMaterialPropertyRandom()
	{
	}
}
[Token(Token = "0x2000051")]
public class SetMeshAttributes : MonoBehaviour
{
	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1187E3C", Offset = "0x1187E3C", VA = "0x1187E3C")]
	public SetMeshAttributes()
	{
	}
}
[Token(Token = "0x2000052")]
public class SetRandomColor : MonoBehaviour
{
	[Token(Token = "0x20005A6")]
	public enum ColorChoices
	{
		[Token(Token = "0x40025B7")]
		Yellow,
		[Token(Token = "0x40025B8")]
		Orange,
		[Token(Token = "0x40025B9")]
		Blue,
		[Token(Token = "0x40025BA")]
		Green,
		[Token(Token = "0x40025BB")]
		Grey
	}

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorChoices _ChosenColor;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color[] colorChoices;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool setChildren;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool setOnStart;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color _colorChosen;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1187E44", Offset = "0x1187E44", VA = "0x1187E44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x11881E0", Offset = "0x11881E0", VA = "0x11881E0")]
	public void ChangeColor(ColorChoices color)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1187EA8", Offset = "0x1187EA8", VA = "0x1187EA8")]
	private void SetColors()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1188514", Offset = "0x1188514", VA = "0x1188514")]
	public SetRandomColor()
	{
	}
}
[Token(Token = "0x2000053")]
public class SetReflectionProbeSize : MonoBehaviour
{
	[Token(Token = "0x600015F")]
	[Address(RVA = "0x118857C", Offset = "0x118857C", VA = "0x118857C")]
	public SetReflectionProbeSize()
	{
	}
}
[Token(Token = "0x2000054")]
public class SetScaleInLightmap : MonoBehaviour
{
	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1188584", Offset = "0x1188584", VA = "0x1188584")]
	public SetScaleInLightmap()
	{
	}
}
[Token(Token = "0x2000055")]
public class SimpleTriggerEvents : MonoBehaviour
{
	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layers;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onTriggerEnter;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onTriggerExit;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x11AE35C", Offset = "0x11AE35C", VA = "0x11AE35C")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x11AE3F8", Offset = "0x11AE3F8", VA = "0x11AE3F8")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x11AE494", Offset = "0x11AE494", VA = "0x11AE494")]
	public SimpleTriggerEvents()
	{
	}
}
[Token(Token = "0x2000056")]
public class SplitterLODs : MonoBehaviour
{
	[Token(Token = "0x6000164")]
	[Address(RVA = "0x11B7A50", Offset = "0x11B7A50", VA = "0x11B7A50")]
	public SplitterLODs()
	{
	}
}
[Token(Token = "0x2000057")]
public class TardigradeColorRandom : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005A7")]
	public class ColorPalette
	{
		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color splatRed;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color splatGreen;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color splatBlue;

		[Token(Token = "0x6002834")]
		[Address(RVA = "0x10E4D9C", Offset = "0x10E4D9C", VA = "0x10E4D9C")]
		public ColorPalette()
		{
		}
	}

	[Token(Token = "0x20005A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA357D4", Offset = "0xA357D4")]
	private sealed class <DO_Iridescent>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TardigradeColorRandom <>4__this;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool state;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__2;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <intensity>5__3;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__4;

		[Token(Token = "0x170003C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002838")]
			[Address(RVA = "0x10E4D2C", Offset = "0x10E4D2C", VA = "0x10E4D2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600283A")]
			[Address(RVA = "0x10E4D94", Offset = "0x10E4D94", VA = "0x10E4D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x10E49E8", Offset = "0x10E49E8", VA = "0x10E49E8")]
		[DebuggerHidden]
		public <DO_Iridescent>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0x10E4A90", Offset = "0x10E4A90", VA = "0x10E4A90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x10E4A94", Offset = "0x10E4A94", VA = "0x10E4A94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x10E4D34", Offset = "0x10E4D34", VA = "0x10E4D34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA37FFC", Offset = "0xA37FFC")]
	public Renderer[] meshes;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA38034", Offset = "0xA38034")]
	public List<ColorPalette> paletteOptions;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3806C", Offset = "0xA3806C")]
	public float transitionLength;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float iridescentStartValue;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float iridescentIntensity;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<MaterialPropertyBlock> propertyBlocks;

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x10E4698", Offset = "0x10E4698", VA = "0x10E4698")]
	private void Start()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x10E48B0", Offset = "0x10E48B0", VA = "0x10E48B0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D26C", Offset = "0xA4D26C")]
	public void TestIridescentOn()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x10E495C", Offset = "0x10E495C", VA = "0x10E495C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D2A4", Offset = "0xA4D2A4")]
	public void TestIridescentOff()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x10E48B8", Offset = "0x10E48B8", VA = "0x10E48B8")]
	public void SetIridescent(bool state)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x10E4964", Offset = "0x10E4964", VA = "0x10E4964")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D2DC", Offset = "0xA4D2DC")]
	private IEnumerator DO_Iridescent(bool state)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x10E4A14", Offset = "0x10E4A14", VA = "0x10E4A14")]
	public TardigradeColorRandom()
	{
	}
}
[Token(Token = "0x2000058")]
public class TimelineFrameDebugger : MonoBehaviour
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform directorsParent;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro textMesh;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fps;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int initialOffset;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool running;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string currentDirName;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x10F04F4", Offset = "0x10F04F4", VA = "0x10F04F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x10F0750", Offset = "0x10F0750", VA = "0x10F0750")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x10F08C4", Offset = "0x10F08C4", VA = "0x10F08C4")]
	private void Director_Stopped(PlayableDirector obj)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x10F0688", Offset = "0x10F0688", VA = "0x10F0688")]
	private void Director_Played(PlayableDirector obj)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x10F09AC", Offset = "0x10F09AC", VA = "0x10F09AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x10F08CC", Offset = "0x10F08CC", VA = "0x10F08CC")]
	private void SetTimerText()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x10F09F4", Offset = "0x10F09F4", VA = "0x10F09F4")]
	public TimelineFrameDebugger()
	{
	}
}
[Token(Token = "0x2000059")]
public class UpdateMeshes : MonoBehaviour
{
	[Token(Token = "0x6000172")]
	[Address(RVA = "0x14DA070", Offset = "0x14DA070", VA = "0x14DA070")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D340", Offset = "0xA4D340")]
	public void UpdateAll()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x14DA074", Offset = "0x14DA074", VA = "0x14DA074")]
	public UpdateMeshes()
	{
	}
}
[Token(Token = "0x200005A")]
public class VertColorByWeight : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005A9")]
	public class BoneSet
	{
		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Transform> bones;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> affectedVerts;

		[Token(Token = "0x600283B")]
		[Address(RVA = "0x1348968", Offset = "0x1348968", VA = "0x1348968")]
		public BoneSet()
		{
		}
	}

	[Token(Token = "0x20005AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA357E4", Offset = "0xA357E4")]
	private sealed class <TestSetColors>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VertColorByWeight <>4__this;

		[Token(Token = "0x170003C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600283F")]
			[Address(RVA = "0x13488F8", Offset = "0x13488F8", VA = "0x13488F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002841")]
			[Address(RVA = "0x1348960", Offset = "0x1348960", VA = "0x1348960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x1348064", Offset = "0x1348064", VA = "0x1348064")]
		[DebuggerHidden]
		public <TestSetColors>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x13486D4", Offset = "0x13486D4", VA = "0x13486D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x13486D8", Offset = "0x13486D8", VA = "0x13486D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x1348900", Offset = "0x1348900", VA = "0x1348900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BoneSet> boneSets;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA380A4", Offset = "0xA380A4")]
	public int testSetNum;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color[] meshColors;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1347F6C", Offset = "0x1347F6C", VA = "0x1347F6C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x1347FF4", Offset = "0x1347FF4", VA = "0x1347FF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D378", Offset = "0xA4D378")]
	private IEnumerator TestSetColors()
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x1348090", Offset = "0x1348090", VA = "0x1348090")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D3DC", Offset = "0xA4D3DC")]
	public void GatherVerts()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x13483D4", Offset = "0x13483D4", VA = "0x13483D4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4D414", Offset = "0xA4D414")]
	public void TestColors()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x1348544", Offset = "0x1348544", VA = "0x1348544")]
	public void ResetToOriginal()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x13483DC", Offset = "0x13483DC", VA = "0x13483DC")]
	public void AssignColorsToBoneSet(int setNum)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1348654", Offset = "0x1348654", VA = "0x1348654")]
	public VertColorByWeight()
	{
	}
}
[Token(Token = "0x200005B")]
public class BezierRaycaster : ArcRaycaster
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA380DC", Offset = "0xA380DC")]
	public float distance;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38114", Offset = "0xA38114")]
	public float dropHeight;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3814C", Offset = "0xA3814C")]
	public float controlHeight;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38184", Offset = "0xA38184")]
	public int segments;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA381BC", Offset = "0xA381BC")]
	private Vector3 <End>k__BackingField;

	[Token(Token = "0x1700000A")]
	public Vector3 End
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x1207E60", Offset = "0x1207E60", VA = "0x1207E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D44C", Offset = "0xA4D44C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600017C")]
		[Address(RVA = "0x1207E6C", Offset = "0x1207E6C", VA = "0x1207E6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D45C", Offset = "0xA4D45C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public Vector3 Control
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x1207E78", Offset = "0x1207E78", VA = "0x1207E78")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x1207FC4", Offset = "0x1207FC4", VA = "0x1207FC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x1208220", Offset = "0x1208220", VA = "0x1208220")]
	private void Update()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x120854C", Offset = "0x120854C", VA = "0x120854C")]
	private Vector3 SampleCurve(Vector3 start, Vector3 end, Vector3 control, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1208658", Offset = "0x1208658", VA = "0x1208658")]
	public BezierRaycaster()
	{
	}
}
[Token(Token = "0x200005C")]
public class BezierVisualizer : ArcVisualizer
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected BezierRaycaster raycaster;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1208678", Offset = "0x1208678", VA = "0x1208678")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x120896C", Offset = "0x120896C", VA = "0x120896C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1208B00", Offset = "0x1208B00", VA = "0x1208B00")]
	private Vector3 SampleCurve(Vector3 start, Vector3 end, Vector3 control, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1208C0C", Offset = "0x1208C0C", VA = "0x1208C0C")]
	public BezierVisualizer()
	{
	}
}
[Token(Token = "0x200005D")]
public class GearVRPointer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005AB")]
	public class HoverCallback : UnityEvent<Transform>
	{
		[Token(Token = "0x6002842")]
		[Address(RVA = "0x12668E8", Offset = "0x12668E8", VA = "0x12668E8")]
		public HoverCallback()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005AC")]
	public class SelectionCallback : UnityEvent<Transform>
	{
		[Token(Token = "0x6002843")]
		[Address(RVA = "0x1266938", Offset = "0x1266938", VA = "0x1266938")]
		public SelectionCallback()
		{
		}
	}

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA381CC", Offset = "0xA381CC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA381CC", Offset = "0xA381CC")]
	public Transform leftHandAnchor;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3822C", Offset = "0xA3822C")]
	public Transform rightHandAnchor;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38264", Offset = "0xA38264")]
	public Transform centerEyeAnchor;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3829C", Offset = "0xA3829C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3829C", Offset = "0xA3829C")]
	public bool showSelectionRay;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA382FC", Offset = "0xA382FC")]
	public float maxRayDistance;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38334", Offset = "0xA38334")]
	public LayerMask excludeLayers;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA3836C", Offset = "0xA3836C")]
	public HoverCallback onHoverEnter;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HoverCallback onHoverExit;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HoverCallback onHover;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA383A4", Offset = "0xA383A4")]
	public SelectionCallback onTriggerSelect;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SelectionCallback onPadSelect;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SelectionCallback onSelected;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Ray pointer;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform lastHit;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Transform triggerDown;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Transform padDown;

	[Token(Token = "0x1700000C")]
	public Ray Pointer
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x1265A24", Offset = "0x1265A24", VA = "0x1265A24")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x1700000D")]
	public bool IsRayAvailable
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x1265A38", Offset = "0x1265A38", VA = "0x1265A38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	public OVRInput.Controller Controller
	{
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x1265AC8", Offset = "0x1265AC8", VA = "0x1265AC8")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x1700000F")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x1265B7C", Offset = "0x1265B7C", VA = "0x1265B7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1265BCC", Offset = "0x1265BCC", VA = "0x1265BCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1265FAC", Offset = "0x1265FAC", VA = "0x1265FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x12667C4", Offset = "0x12667C4", VA = "0x12667C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x12668D0", Offset = "0x12668D0", VA = "0x12668D0")]
	public GearVRPointer()
	{
	}
}
[Token(Token = "0x200005E")]
public class LoadScene : MonoBehaviour
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Scene scene;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x115BEE8", Offset = "0x115BEE8", VA = "0x115BEE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x115BF54", Offset = "0x115BF54", VA = "0x115BF54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x115C008", Offset = "0x115C008", VA = "0x115C008")]
	public void OnSelect(Transform t)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x115C09C", Offset = "0x115C09C", VA = "0x115C09C")]
	public LoadScene()
	{
	}
}
[Token(Token = "0x200005F")]
public class NoController : MonoBehaviour
{
	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected OVRInput.Controller left;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected OVRInput.Controller right;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Canvas canvas;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_prevControllerConnected;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool m_prevControllerConnectedCached;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x133B204", Offset = "0x133B204", VA = "0x133B204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x133B25C", Offset = "0x133B25C", VA = "0x133B25C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x133B35C", Offset = "0x133B35C", VA = "0x133B35C")]
	public NoController()
	{
	}
}
[Token(Token = "0x2000060")]
public class ParabolicRaycaster : ArcRaycaster
{
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA383DC", Offset = "0xA383DC")]
	public float velocity;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38414", Offset = "0xA38414")]
	public float acceleration;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3844C", Offset = "0xA3844C")]
	public float additionalFlightTime;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38484", Offset = "0xA38484")]
	public int segments;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected List<Vector3> parabola;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA384BC", Offset = "0xA384BC")]
	private float <HitTime>k__BackingField;

	[Token(Token = "0x17000010")]
	public float Angle
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x124D2B4", Offset = "0x124D2B4", VA = "0x124D2B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000011")]
	public Vector3 Velocity
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x124D378", Offset = "0x124D378", VA = "0x124D378")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000012")]
	public Vector3 Acceleration
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x124D418", Offset = "0x124D418", VA = "0x124D418")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000013")]
	public float FlightTime
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x124D4C0", Offset = "0x124D4C0", VA = "0x124D4C0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000014")]
	public float FlightDistance
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x124D55C", Offset = "0x124D55C", VA = "0x124D55C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000015")]
	public float HitTime
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x124D5F8", Offset = "0x124D5F8", VA = "0x124D5F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D46C", Offset = "0xA4D46C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x124D600", Offset = "0x124D600", VA = "0x124D600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D47C", Offset = "0xA4D47C")]
		protected set
		{
		}
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x124D608", Offset = "0x124D608", VA = "0x124D608")]
	public Vector3 SampleCurve(Vector3 p, Vector3 v, Vector3 a, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x124D664", Offset = "0x124D664", VA = "0x124D664")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x124D8C0", Offset = "0x124D8C0", VA = "0x124D8C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x124DBE4", Offset = "0x124DBE4", VA = "0x124DBE4")]
	public ParabolicRaycaster()
	{
	}
}
[Token(Token = "0x2000061")]
public class ParabolicVisualizer : ArcVisualizer
{
	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected ParabolicRaycaster raycaster;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x124DC6C", Offset = "0x124DC6C", VA = "0x124DC6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x124DF60", Offset = "0x124DF60", VA = "0x124DF60")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x124E0E0", Offset = "0x124E0E0", VA = "0x124E0E0")]
	public ParabolicVisualizer()
	{
	}
}
[Token(Token = "0x2000062")]
public class ArcRaycaster : MonoBehaviour
{
	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA384CC", Offset = "0xA384CC")]
	public Transform trackingSpace;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38504", Offset = "0xA38504")]
	public float surfaceAngle;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3853C", Offset = "0xA3853C")]
	public LayerMask excludeLayers;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38574", Offset = "0xA38574")]
	private bool <MakingContact>k__BackingField;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38584", Offset = "0xA38584")]
	private Vector3 <Normal>k__BackingField;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38594", Offset = "0xA38594")]
	private Vector3 <HitPoint>k__BackingField;

	[Token(Token = "0x17000016")]
	public Vector3 Up
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x1298298", Offset = "0x1298298", VA = "0x1298298")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000017")]
	public Vector3 Right
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x12982B4", Offset = "0x12982B4", VA = "0x12982B4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000018")]
	public Vector3 Forward
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x12982D0", Offset = "0x12982D0", VA = "0x12982D0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000019")]
	public Vector3 Start
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x12982EC", Offset = "0x12982EC", VA = "0x12982EC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700001A")]
	public bool MakingContact
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x12983D8", Offset = "0x12983D8", VA = "0x12983D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D48C", Offset = "0xA4D48C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x12983E0", Offset = "0x12983E0", VA = "0x12983E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D49C", Offset = "0xA4D49C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public Vector3 Normal
	{
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x12983EC", Offset = "0x12983EC", VA = "0x12983EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D4AC", Offset = "0xA4D4AC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x12983F8", Offset = "0x12983F8", VA = "0x12983F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D4BC", Offset = "0xA4D4BC")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public Vector3 HitPoint
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x1298404", Offset = "0x1298404", VA = "0x1298404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D4CC", Offset = "0xA4D4CC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x1298410", Offset = "0x1298410", VA = "0x1298410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D4DC", Offset = "0xA4D4DC")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public OVRInput.Controller Controller
	{
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x129841C", Offset = "0x129841C", VA = "0x129841C")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x1700001E")]
	public Vector3 ControllerPosition
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x12982F0", Offset = "0x12982F0", VA = "0x12982F0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700001F")]
	public Vector3 ControllerForward
	{
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x1298534", Offset = "0x1298534", VA = "0x1298534")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000020")]
	public Vector3 ControllerUp
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x12986B8", Offset = "0x12986B8", VA = "0x12986B8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000021")]
	public Vector3 ControllerRight
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x129883C", Offset = "0x129883C", VA = "0x129883C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x12989C0", Offset = "0x12989C0", VA = "0x12989C0")]
	public ArcRaycaster()
	{
	}
}
[Token(Token = "0x2000063")]
public class ArcTeleporter : MonoBehaviour
{
	[Token(Token = "0x20005AD")]
	public enum UpDirection
	{
		[Token(Token = "0x40025CC")]
		World,
		[Token(Token = "0x40025CD")]
		TargetNormal
	}

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA385A4", Offset = "0xA385A4")]
	public ArcRaycaster arcRaycaster;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA385DC", Offset = "0xA385DC")]
	public Transform objectToMove;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38614", Offset = "0xA38614")]
	public float height;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3864C", Offset = "0xA3864C")]
	public UpDirection teleportedUpAxis;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool lastTriggerState;

	[Token(Token = "0x17000022")]
	private OVRInput.Controller Controller
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x1299044", Offset = "0x1299044", VA = "0x1299044")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x17000023")]
	private bool HasController
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x1298E04", Offset = "0x1298E04", VA = "0x1298E04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000024")]
	private Matrix4x4 ControllerToWorldMatrix
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x12990F8", Offset = "0x12990F8", VA = "0x12990F8")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x17000025")]
	private Vector3 TouchpadDirection
	{
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x1298EB8", Offset = "0x1298EB8", VA = "0x1298EB8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x12989D0", Offset = "0x12989D0", VA = "0x12989D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x1298B44", Offset = "0x1298B44", VA = "0x1298B44")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x12992F0", Offset = "0x12992F0", VA = "0x12992F0")]
	public ArcTeleporter()
	{
	}
}
[Token(Token = "0x2000064")]
public class ArcVisualizer : MonoBehaviour
{
	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38684", Offset = "0xA38684")]
	public ArcRaycaster arcRaycaster;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA386BC", Offset = "0xA386BC")]
	public LineRenderer arcRenderer;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA386F4", Offset = "0xA386F4")]
	public Transform contactIndicator;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3872C", Offset = "0xA3872C")]
	public Transform directionIndicator;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38764", Offset = "0xA38764")]
	public int segments;

	[Token(Token = "0x17000026")]
	private bool TouchpadTouched
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x1299894", Offset = "0x1299894", VA = "0x1299894")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000027")]
	private OVRInput.Controller Controller
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x1299A88", Offset = "0x1299A88", VA = "0x1299A88")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x17000028")]
	private Matrix4x4 ControllerToWorldMatrix
	{
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x1299B3C", Offset = "0x1299B3C", VA = "0x1299B3C")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x17000029")]
	private Vector3 TouchpadDirection
	{
		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x12998FC", Offset = "0x12998FC", VA = "0x12998FC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700002A")]
	private bool HasController
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x1299488", Offset = "0x1299488", VA = "0x1299488")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1299304", Offset = "0x1299304", VA = "0x1299304")]
	protected bool EarlyOut()
	{
		return default(bool);
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x129953C", Offset = "0x129953C", VA = "0x129953C")]
	protected void SetCurveVisuals()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1299D34", Offset = "0x1299D34", VA = "0x1299D34")]
	public ArcVisualizer()
	{
	}
}
[Token(Token = "0x2000065")]
public class TallRaycaster : ArcRaycaster
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3879C", Offset = "0xA3879C")]
	public float minControllerAngle;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA387D4", Offset = "0xA387D4")]
	public float maxControllerAngle;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3880C", Offset = "0xA3880C")]
	public float maxDistance;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38844", Offset = "0xA38844")]
	public float minDistance;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3887C", Offset = "0xA3887C")]
	public float castHeight;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA388B4", Offset = "0xA388B4")]
	public float dropMultiplyer;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA388EC", Offset = "0xA388EC")]
	public float extraCastLength;

	[Token(Token = "0x1700002B")]
	public float MaxDistnce
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x10E37B4", Offset = "0x10E37B4", VA = "0x10E37B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002C")]
	private Ray HorizontalRay
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x10E37BC", Offset = "0x10E37BC", VA = "0x10E37BC")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x1700002D")]
	public float HorizontalDistance
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x10E38CC", Offset = "0x10E38CC", VA = "0x10E38CC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002E")]
	private Vector3 PointAlongHorizontalRay
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x10E3A00", Offset = "0x10E3A00", VA = "0x10E3A00")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700002F")]
	private Vector3 CastPosition
	{
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x10E3B3C", Offset = "0x10E3B3C", VA = "0x10E3B3C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000030")]
	private Ray CastRay
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x10E3C2C", Offset = "0x10E3C2C", VA = "0x10E3C2C")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x10E3558", Offset = "0x10E3558", VA = "0x10E3558")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x10E3D50", Offset = "0x10E3D50", VA = "0x10E3D50")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x10E3FC0", Offset = "0x10E3FC0", VA = "0x10E3FC0")]
	public TallRaycaster()
	{
	}
}
[Token(Token = "0x2000066")]
public class TallVisualizer : ArcVisualizer
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38924", Offset = "0xA38924")]
	public float shortControlHeight;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3895C", Offset = "0xA3895C")]
	public float longControlHeight;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected TallRaycaster raycaster;

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x10E3FE8", Offset = "0x10E3FE8", VA = "0x10E3FE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x10E42DC", Offset = "0x10E42DC", VA = "0x10E42DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x10E447C", Offset = "0x10E447C", VA = "0x10E447C")]
	private Vector3 SampleCurve(Vector3 start, Vector3 end, float time, float horizontalDistance, float maxDistance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x10E4684", Offset = "0x10E4684", VA = "0x10E4684")]
	public TallVisualizer()
	{
	}
}
[Token(Token = "0x2000067")]
public class URLButton : MonoBehaviour
{
	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string url;

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x140BBC8", Offset = "0x140BBC8", VA = "0x140BBC8")]
	public void Click()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x140BBD4", Offset = "0x140BBD4", VA = "0x140BBD4")]
	public URLButton()
	{
	}
}
[Token(Token = "0x2000068")]
public class TrainCamera : MonoBehaviour
{
	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform trs;

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x10F152C", Offset = "0x10F152C", VA = "0x10F152C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x10F1554", Offset = "0x10F1554", VA = "0x10F1554")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x10F17D8", Offset = "0x10F17D8", VA = "0x10F17D8")]
	public TrainCamera()
	{
	}
}
[Token(Token = "0x2000069")]
public class ActorCOMTransform : MonoBehaviour
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObiActor actor;

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x128F164", Offset = "0x128F164", VA = "0x128F164")]
	public void Update()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x128F2C4", Offset = "0x128F2C4", VA = "0x128F2C4")]
	public ActorCOMTransform()
	{
	}
}
[Token(Token = "0x200006A")]
public class ActorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiActor template;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int basePhase;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxInstances;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spawnDelay;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int phase;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int instances;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeFromLastSpawn;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x128F2CC", Offset = "0x128F2CC", VA = "0x128F2CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x128F4BC", Offset = "0x128F4BC", VA = "0x128F4BC")]
	public ActorSpawner()
	{
	}
}
[Token(Token = "0x200006B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32200", Offset = "0xA32200")]
public class AddRandomVelocity : MonoBehaviour
{
	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x128F6D4", Offset = "0x128F6D4", VA = "0x128F6D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x128F7C4", Offset = "0x128F7C4", VA = "0x128F7C4")]
	public AddRandomVelocity()
	{
	}
}
[Token(Token = "0x200006C")]
public class Blinker : MonoBehaviour
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color highlightColor;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer rend;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color original;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent m_Event;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isBlinking;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float blinkingTime;

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x1209118", Offset = "0x1209118", VA = "0x1209118")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x1209194", Offset = "0x1209194", VA = "0x1209194")]
	public void Blink()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x12091E8", Offset = "0x12091E8", VA = "0x12091E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x1209350", Offset = "0x1209350", VA = "0x1209350")]
	public Blinker()
	{
	}
}
[Token(Token = "0x200006D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32264", Offset = "0xA32264")]
public class ColliderHighlighter : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x122417C", Offset = "0x122417C", VA = "0x122417C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x12241D4", Offset = "0x12241D4", VA = "0x12241D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1224260", Offset = "0x1224260", VA = "0x1224260")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x12242EC", Offset = "0x12242EC", VA = "0x12242EC")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x122448C", Offset = "0x122448C", VA = "0x122448C")]
	public ColliderHighlighter()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA322C8", Offset = "0xA322C8")]
public class CollisionEventHandler : MonoBehaviour
{
	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiSolver.ObiCollisionEventArgs frame;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1224494", Offset = "0x1224494", VA = "0x1224494")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x12244EC", Offset = "0x12244EC", VA = "0x12244EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x1224578", Offset = "0x1224578", VA = "0x1224578")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1224604", Offset = "0x1224604", VA = "0x1224604")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x122460C", Offset = "0x122460C", VA = "0x122460C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1224904", Offset = "0x1224904", VA = "0x1224904")]
	public CollisionEventHandler()
	{
	}
}
[Token(Token = "0x200006F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3232C", Offset = "0xA3232C")]
public class DebugParticleFrames : MonoBehaviour
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiActor actor;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float size;

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x131126C", Offset = "0x131126C", VA = "0x131126C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x13112C4", Offset = "0x13112C4", VA = "0x13112C4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1311624", Offset = "0x1311624", VA = "0x1311624")]
	public DebugParticleFrames()
	{
	}
}
[Token(Token = "0x2000070")]
public class ExtrapolationCamera : MonoBehaviour
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float extrapolation;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA38994", Offset = "0xA38994")]
	public float smoothness;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA389AC", Offset = "0xA389AC")]
	public float linearSpeed;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA389C4", Offset = "0xA389C4")]
	public float rotationalSpeed;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xA389DC", Offset = "0xA389DC")]
	public float distanceFromTarget;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastPosition;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 extrapolatedPos;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x13F8D90", Offset = "0x13F8D90", VA = "0x13F8D90")]
	private void Start()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x13F8E24", Offset = "0x13F8E24", VA = "0x13F8E24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x13F8FAC", Offset = "0x13F8FAC", VA = "0x13F8FAC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x13F9228", Offset = "0x13F9228", VA = "0x13F9228")]
	public void Teleport(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x13F9348", Offset = "0x13F9348", VA = "0x13F9348")]
	public ExtrapolationCamera()
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA323A0", Offset = "0xA323A0")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float updateInterval;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showMedian;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float medianLearnrate;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeleft;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentFPS;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float median;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float average;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text uguiText;

	[Token(Token = "0x17000031")]
	public float CurrentFPS
	{
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x13F9364", Offset = "0x13F9364", VA = "0x13F9364")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000032")]
	public float FPSMedian
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x13F936C", Offset = "0x13F936C", VA = "0x13F936C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000033")]
	public float FPSAverage
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x13F9374", Offset = "0x13F9374", VA = "0x13F9374")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x13F937C", Offset = "0x13F937C", VA = "0x13F937C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x13F93DC", Offset = "0x13F93DC", VA = "0x13F93DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x13F95B8", Offset = "0x13F95B8", VA = "0x13F95B8")]
	public void ResetMedianAndAverage()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x13F95C0", Offset = "0x13F95C0", VA = "0x13F95C0")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x2000072")]
public class ObiActorTeleport : MonoBehaviour
{
	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiActor actor;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x12AA91C", Offset = "0x12AA91C", VA = "0x12AA91C")]
	public void Teleport()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x12AA9BC", Offset = "0x12AA9BC", VA = "0x12AA9BC")]
	public ObiActorTeleport()
	{
	}
}
[Token(Token = "0x2000073")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32404", Offset = "0xA32404")]
public class ObiParticleCounter : MonoBehaviour
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int counter;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider2D targetCollider;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ObiSolver.ObiCollisionEventArgs frame;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<int> particles;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x12AAD40", Offset = "0x12AAD40", VA = "0x12AAD40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x12AAD98", Offset = "0x12AAD98", VA = "0x12AAD98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x12AAE24", Offset = "0x12AAE24", VA = "0x12AAE24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x12AAEB0", Offset = "0x12AAEB0", VA = "0x12AAEB0")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x12AAFF0", Offset = "0x12AAFF0", VA = "0x12AAFF0")]
	public ObiParticleCounter()
	{
	}
}
[Token(Token = "0x2000074")]
public class ObjectDragger : MonoBehaviour
{
	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 screenPoint;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 offset;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x12AB2E4", Offset = "0x12AB2E4", VA = "0x12AB2E4")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x12AB468", Offset = "0x12AB468", VA = "0x12AB468")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x12AB58C", Offset = "0x12AB58C", VA = "0x12AB58C")]
	public ObjectDragger()
	{
	}
}
[Token(Token = "0x2000075")]
public class ObjectLimit : MonoBehaviour
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minX;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxX;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minY;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxY;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minZ;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxZ;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x12AB9B8", Offset = "0x12AB9B8", VA = "0x12AB9B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x12ABB34", Offset = "0x12ABB34", VA = "0x12ABB34")]
	public ObjectLimit()
	{
	}
}
[Token(Token = "0x2000076")]
public class SlowmoToggler : MonoBehaviour
{
	[Token(Token = "0x6000204")]
	[Address(RVA = "0x11B340C", Offset = "0x11B340C", VA = "0x11B340C")]
	public void Slowmo(bool slowmo)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x11B3424", Offset = "0x11B3424", VA = "0x11B3424")]
	public SlowmoToggler()
	{
	}
}
[Token(Token = "0x2000077")]
public class CharacterControl2D : MonoBehaviour
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxSpeed;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float jumpPower;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody unityRigidbody;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1218548", Offset = "0x1218548", VA = "0x1218548")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x12185A0", Offset = "0x12185A0", VA = "0x12185A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x121871C", Offset = "0x121871C", VA = "0x121871C")]
	public CharacterControl2D()
	{
	}
}
[Token(Token = "0x2000078")]
public class CraneController : MonoBehaviour
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1230A28", Offset = "0x1230A28", VA = "0x1230A28")]
	private void Start()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1230A9C", Offset = "0x1230A9C", VA = "0x1230A9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1230BE8", Offset = "0x1230BE8", VA = "0x1230BE8")]
	public CraneController()
	{
	}
}
[Token(Token = "0x2000079")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32468", Offset = "0xA32468")]
public class CursorController : MonoBehaviour
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minLength;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1234678", Offset = "0x1234678", VA = "0x1234678")]
	private void Start()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x12346E8", Offset = "0x12346E8", VA = "0x12346E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1234970", Offset = "0x1234970", VA = "0x1234970")]
	public CursorController()
	{
	}
}
[Token(Token = "0x200007A")]
public class GrapplingHook : MonoBehaviour
{
	[Token(Token = "0x20005AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA357F4", Offset = "0xA357F4")]
	private sealed class <AttachHook>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrapplingHook <>4__this;

		[Token(Token = "0x170003C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002847")]
			[Address(RVA = "0x1192F08", Offset = "0x1192F08", VA = "0x1192F08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002849")]
			[Address(RVA = "0x1192F70", Offset = "0x1192F70", VA = "0x1192F70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x1192740", Offset = "0x1192740", VA = "0x1192740")]
		[DebuggerHidden]
		public <AttachHook>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0x11928F8", Offset = "0x11928F8", VA = "0x11928F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0x11928FC", Offset = "0x11928FC", VA = "0x11928FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0x1192F10", Offset = "0x1192F10", VA = "0x1192F10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiSolver solver;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObiCollider character;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hookExtendRetractSpeed;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObiRopeSection section;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ObiRope rope;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ObiRopeBlueprint blueprint;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRopeExtrudedRenderer ropeRenderer;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RaycastHit hookAttachment;

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1192300", Offset = "0x1192300", VA = "0x1192300")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x119248C", Offset = "0x119248C", VA = "0x119248C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x11924F8", Offset = "0x11924F8", VA = "0x11924F8")]
	private void LaunchHook()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x11926D0", Offset = "0x11926D0", VA = "0x11926D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D4EC", Offset = "0xA4D4EC")]
	private IEnumerator AttachHook()
	{
		return null;
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x119276C", Offset = "0x119276C", VA = "0x119276C")]
	private void DetachHook()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x11927E8", Offset = "0x11927E8", VA = "0x11927E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x11928E8", Offset = "0x11928E8", VA = "0x11928E8")]
	public GrapplingHook()
	{
	}
}
[Token(Token = "0x200007B")]
public class RobotArmController : MonoBehaviour
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform section1;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform section2;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform actuator;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x10BECE8", Offset = "0x10BECE8", VA = "0x10BECE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x10BEF1C", Offset = "0x10BEF1C", VA = "0x10BEF1C")]
	public RobotArmController()
	{
	}
}
[Token(Token = "0x200007C")]
public class RopeTenser : MonoBehaviour
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x117F730", Offset = "0x117F730", VA = "0x117F730")]
	private void Update()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x117F7D0", Offset = "0x117F7D0", VA = "0x117F7D0")]
	public RopeTenser()
	{
	}
}
[Token(Token = "0x200007D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA324CC", Offset = "0xA324CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA324CC", Offset = "0xA324CC")]
public class RopeTensionColorizer : MonoBehaviour
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTension;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxTension;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color normalColor;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color tensionColor;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RopeTenser tenser;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float tenserThreshold;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float tenserMax;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRope rope;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material localMaterial;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x117F7E0", Offset = "0x117F7E0", VA = "0x117F7E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x117F860", Offset = "0x117F860", VA = "0x117F860")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x117F8CC", Offset = "0x117F8CC", VA = "0x117F8CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x117FA5C", Offset = "0x117FA5C", VA = "0x117FA5C")]
	public RopeTensionColorizer()
	{
	}
}
[Token(Token = "0x200007E")]
public class RuntimeRopeGenerator
{
	[Token(Token = "0x20005AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35804", Offset = "0xA35804")]
	private sealed class <MakeRope>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600284D")]
			[Address(RVA = "0x1180538", Offset = "0x1180538", VA = "0x1180538", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600284F")]
			[Address(RVA = "0x11805A0", Offset = "0x11805A0", VA = "0x11805A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x118044C", Offset = "0x118044C", VA = "0x118044C")]
		[DebuggerHidden]
		public <MakeRope>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x1180498", Offset = "0x1180498", VA = "0x1180498", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x118049C", Offset = "0x118049C", VA = "0x118049C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0x1180540", Offset = "0x1180540", VA = "0x1180540", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ObiSolver solver;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int pinnedParticle;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x11803EC", Offset = "0x11803EC", VA = "0x11803EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D550", Offset = "0xA4D550")]
	public IEnumerator MakeRope(Transform anchoredTo, Vector3 attachmentOffset, float ropeLength)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1180478", Offset = "0x1180478", VA = "0x1180478")]
	public void AddPendulum(ObiCollider pendulum, Vector3 attachmentOffset)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x118047C", Offset = "0x118047C", VA = "0x118047C")]
	public void RemovePendulum()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1180480", Offset = "0x1180480", VA = "0x1180480")]
	public void ChangeRopeLength(float changeAmount)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1180484", Offset = "0x1180484", VA = "0x1180484")]
	private void UpdateTethers()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1180488", Offset = "0x1180488", VA = "0x1180488")]
	public RuntimeRopeGenerator()
	{
	}
}
[Token(Token = "0x200007F")]
public class RuntimeRopeGeneratorUse : MonoBehaviour
{
	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35814", Offset = "0xA35814")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeRopeGeneratorUse <>4__this;

		[Token(Token = "0x170003CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002853")]
			[Address(RVA = "0x11807D8", Offset = "0x11807D8", VA = "0x11807D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002855")]
			[Address(RVA = "0x1180840", Offset = "0x1180840", VA = "0x1180840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x1180618", Offset = "0x1180618", VA = "0x1180618")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x11806AC", Offset = "0x11806AC", VA = "0x11806AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x11806B0", Offset = "0x11806B0", VA = "0x11806B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0x11807E0", Offset = "0x11807E0", VA = "0x11807E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiCollider pendulum;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RuntimeRopeGenerator rg;

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x11805A8", Offset = "0x11805A8", VA = "0x11805A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D5B4", Offset = "0xA4D5B4")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1180644", Offset = "0x1180644", VA = "0x1180644")]
	public void Update()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x11806A4", Offset = "0x11806A4", VA = "0x11806A4")]
	public RuntimeRopeGeneratorUse()
	{
	}
}
[Token(Token = "0x2000080")]
[ExecuteInEditMode]
public class SpiralCurve : MonoBehaviour
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radialStep;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float heightStep;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float points;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationalMass;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x11B6770", Offset = "0x11B6770", VA = "0x11B6770")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x11B6774", Offset = "0x11B6774", VA = "0x11B6774")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x11B6B70", Offset = "0x11B6B70", VA = "0x11B6B70")]
	public SpiralCurve()
	{
	}
}
[Token(Token = "0x2000081")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32568", Offset = "0xA32568")]
public class WrapRopeGameController : MonoBehaviour
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Wrappable[] wrappables;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onFinish;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1352618", Offset = "0x1352618", VA = "0x1352618")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1352670", Offset = "0x1352670", VA = "0x1352670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x13526FC", Offset = "0x13526FC", VA = "0x13526FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1352788", Offset = "0x1352788", VA = "0x1352788")]
	private void Update()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x13527FC", Offset = "0x13527FC", VA = "0x13527FC")]
	private void Solver_OnCollision(ObiSolver s, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1352BEC", Offset = "0x1352BEC", VA = "0x1352BEC")]
	public WrapRopeGameController()
	{
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA325CC", Offset = "0xA325CC")]
public class WrapRopePlayerController : MonoBehaviour
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1352C54", Offset = "0x1352C54", VA = "0x1352C54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1352CAC", Offset = "0x1352CAC", VA = "0x1352CAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1352F6C", Offset = "0x1352F6C", VA = "0x1352F6C")]
	public WrapRopePlayerController()
	{
	}
}
[Token(Token = "0x2000083")]
public class Wrappable : MonoBehaviour
{
	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool wrapped;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color normalColor;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color wrappedColor;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material localMaterial;

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1352F7C", Offset = "0x1352F7C", VA = "0x1352F7C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1352FE4", Offset = "0x1352FE4", VA = "0x1352FE4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1352B90", Offset = "0x1352B90", VA = "0x1352B90")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1352BBC", Offset = "0x1352BBC", VA = "0x1352BBC")]
	public void SetWrapped()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1353050", Offset = "0x1353050", VA = "0x1353050")]
	public bool IsWrapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1353058", Offset = "0x1353058", VA = "0x1353058")]
	public Wrappable()
	{
	}
}
[Token(Token = "0x2000084")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA32630", Offset = "0xA32630")]
public class FastList<T>
{
	[Token(Token = "0x20005B1")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20005B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35824", Offset = "0xA35824")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170003CC")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x600285D")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170003CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600285F")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600285A")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600285B")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600285C")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600285E")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000034")]
	public int Count
	{
		[Token(Token = "0x600023B")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600023C")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public T Item
	{
		[Token(Token = "0x600023D")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600023E")]
		set
		{
		}
	}

	[Token(Token = "0x6000239")]
	public FastList()
	{
	}

	[Token(Token = "0x600023A")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x600023F")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000240")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000241")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000242")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000243")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000244")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000245")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000246")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000247")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000248")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000249")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x600024A")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600024B")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600024C")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600024D")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D618", Offset = "0xA4D618")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600024F")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000250")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000251")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000252")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000085")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string header;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly string message;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x114A1FC", Offset = "0x114A1FC", VA = "0x114A1FC")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000086")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x114A1D0", Offset = "0x114A1D0", VA = "0x114A1D0")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000087")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000255")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x13F5EF8", Offset = "0x13F5EF8", VA = "0x13F5EF8")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000088")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA389F0", Offset = "0xA389F0")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38A28", Offset = "0xA38A28")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38A60", Offset = "0xA38A60")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x115A940", Offset = "0x115A940", VA = "0x115A940")]
	private void Start()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x115A944", Offset = "0x115A944", VA = "0x115A944")]
	private void Update()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x115A9C4", Offset = "0x115A9C4", VA = "0x115A9C4")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x115ABB0", Offset = "0x115ABB0", VA = "0x115ABB0")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000089")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x115ABE0", Offset = "0x115ABE0", VA = "0x115ABE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x115AC84", Offset = "0x115AC84", VA = "0x115AC84")]
	private void Update()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x115AD50", Offset = "0x115AD50", VA = "0x115AD50")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x115AD54", Offset = "0x115AD54", VA = "0x115AD54")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x115AD9C", Offset = "0x115AD9C", VA = "0x115AD9C")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x200008A")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string[] names;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1977CC0", Offset = "0x1977CC0", VA = "0x1977CC0")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x200008B")]
public static class OVRTouchpad
{
	[Token(Token = "0x20005B3")]
	public enum TouchEvent
	{
		[Token(Token = "0x40025DB")]
		SingleTap,
		[Token(Token = "0x40025DC")]
		DoubleTap,
		[Token(Token = "0x40025DD")]
		Left,
		[Token(Token = "0x40025DE")]
		Right,
		[Token(Token = "0x40025DF")]
		Up,
		[Token(Token = "0x40025E0")]
		Down
	}

	[Token(Token = "0x20005B4")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x12A7DE4", Offset = "0x12A7DE4", VA = "0x12A7DE4")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x12A7DE8", Offset = "0x12A7DE8", VA = "0x12A7DE8")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x12A8108", Offset = "0x12A8108", VA = "0x12A8108")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x12A7F58", Offset = "0x12A7F58", VA = "0x12A7F58")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x12A810C", Offset = "0x12A810C", VA = "0x12A810C")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200008C")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000267")]
	[Address(RVA = "0x12A8278", Offset = "0x12A8278", VA = "0x12A8278")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x12A82F4", Offset = "0x12A82F4", VA = "0x12A82F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x12A838C", Offset = "0x12A838C", VA = "0x12A838C")]
	private void Update()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x12A83E8", Offset = "0x12A83E8", VA = "0x12A83E8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x12A844C", Offset = "0x12A844C", VA = "0x12A844C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x12A8450", Offset = "0x12A8450", VA = "0x12A8450")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200008D")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20005B5")]
	public delegate void OnClick();

	[Token(Token = "0x20005B6")]
	public delegate void OnToggleValueChange(UnityEngine.UI.Toggle t);

	[Token(Token = "0x20005B7")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20005B8")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20005B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35834", Offset = "0xA35834")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x1314628", Offset = "0x1314628", VA = "0x1314628")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x1314FC8", Offset = "0x1314FC8", VA = "0x1314FC8")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20005BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35844", Offset = "0xA35844")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x131489C", Offset = "0x131489C", VA = "0x131489C")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x13151EC", Offset = "0x13151EC", VA = "0x13151EC")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20005BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35854", Offset = "0xA35854")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle t;

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x1314AB4", Offset = "0x1314AB4", VA = "0x1314AB4")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x1315464", Offset = "0x1315464", VA = "0x1315464")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20005BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35864", Offset = "0xA35864")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle t;

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x1314C48", Offset = "0x1314C48", VA = "0x1314C48")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x1315818", Offset = "0x1315818", VA = "0x1315818")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20005BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35874", Offset = "0xA35874")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle tb;

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x1314EA0", Offset = "0x1314EA0", VA = "0x1314EA0")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x1315838", Offset = "0x1315838", VA = "0x1315838")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000291")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000292")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000293")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40002A0")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40002A1")]
	private const float marginH = 16f;

	[Token(Token = "0x40002A2")]
	private const float marginV = 16f;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1313518", Offset = "0x1313518", VA = "0x1313518")]
	public void Awake()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x131391C", Offset = "0x131391C", VA = "0x131391C")]
	public void Show()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1313FA4", Offset = "0x1313FA4", VA = "0x1313FA4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1313C94", Offset = "0x1313C94", VA = "0x1313C94")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x131414C", Offset = "0x131414C", VA = "0x131414C")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1314400", Offset = "0x1314400", VA = "0x1314400")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x1314630", Offset = "0x1314630", VA = "0x1314630")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x1314714", Offset = "0x1314714", VA = "0x1314714")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x13148A4", Offset = "0x13148A4", VA = "0x13148A4")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x1314940", Offset = "0x1314940", VA = "0x1314940")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x1314ABC", Offset = "0x1314ABC", VA = "0x1314ABC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1314C50", Offset = "0x1314C50", VA = "0x1314C50")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x1314EA8", Offset = "0x1314EA8", VA = "0x1314EA8")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1314F58", Offset = "0x1314F58", VA = "0x1314F58")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200008E")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_LaserPointerObj;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LaserPointer m_LaserPointer;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x11954B4", Offset = "0x11954B4", VA = "0x11954B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x119553C", Offset = "0x119553C", VA = "0x119553C")]
	private void Update()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x1195640", Offset = "0x1195640", VA = "0x1195640")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x119567C", Offset = "0x119567C", VA = "0x119567C")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200008F")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20005BE")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40025EA")]
		On,
		[Token(Token = "0x40025EB")]
		Off,
		[Token(Token = "0x40025EC")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000036")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x11579D0", Offset = "0x11579D0", VA = "0x11579D0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x11579C4", Offset = "0x11579C4", VA = "0x11579C4")]
		set
		{
		}
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x11579D8", Offset = "0x11579D8", VA = "0x11579D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1157A30", Offset = "0x1157A30", VA = "0x1157A30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1157B48", Offset = "0x1157B48", VA = "0x1157B48", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1157B64", Offset = "0x1157B64", VA = "0x1157B64", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1157BB8", Offset = "0x1157BB8", VA = "0x1157BB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1157E14", Offset = "0x1157E14", VA = "0x1157E14")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1157F14", Offset = "0x1157F14", VA = "0x1157F14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1157FA8", Offset = "0x1157FA8", VA = "0x1157FA8")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1158070", Offset = "0x1158070", VA = "0x1158070")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1158128", Offset = "0x1158128", VA = "0x1158128")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x11581F4", Offset = "0x11581F4", VA = "0x11581F4")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000090")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x120CFF4", Offset = "0x120CFF4", VA = "0x120CFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x120D200", Offset = "0x120D200", VA = "0x120D200")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x120D6A0", Offset = "0x120D6A0", VA = "0x120D6A0")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x2000091")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1192F78", Offset = "0x1192F78", VA = "0x1192F78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x11930AC", Offset = "0x11930AC", VA = "0x11930AC")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x11932FC", Offset = "0x11932FC", VA = "0x11932FC")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000092")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000037")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0x11933A8", Offset = "0x11933A8", VA = "0x11933A8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0x1193008", Offset = "0x1193008", VA = "0x1193008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D67C", Offset = "0xA4D67C")]
		add
		{
		}
		[Token(Token = "0x6000293")]
		[Address(RVA = "0x1193304", Offset = "0x1193304", VA = "0x1193304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D68C", Offset = "0xA4D68C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x11933B4", Offset = "0x11933B4", VA = "0x11933B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x119350C", Offset = "0x119350C", VA = "0x119350C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1193680", Offset = "0x1193680", VA = "0x1193680")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1193688", Offset = "0x1193688", VA = "0x1193688")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000093")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38B68", Offset = "0xA38B68")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38BA0", Offset = "0xA38BA0")]
	public bool EnableCollision;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38BD8", Offset = "0xA38BD8")]
	public float MaxFade;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38C10", Offset = "0xA38C10")]
	public float FadeMinDistance;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38C48", Offset = "0xA38C48")]
	public float FadeMaxDistance;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1217688", Offset = "0x1217688", VA = "0x1217688")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1217710", Offset = "0x1217710", VA = "0x1217710")]
	private void Awake()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1217780", Offset = "0x1217780", VA = "0x1217780")]
	private void Start()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1217784", Offset = "0x1217784", VA = "0x1217784")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x12177A8", Offset = "0x12177A8", VA = "0x12177A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x12177CC", Offset = "0x12177CC", VA = "0x12177CC")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000094")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x115D240", Offset = "0x115D240", VA = "0x115D240")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x115D2EC", Offset = "0x115D2EC", VA = "0x115D2EC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000095")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20005BF")]
	public enum States
	{
		[Token(Token = "0x40025EE")]
		Ready,
		[Token(Token = "0x40025EF")]
		Aim,
		[Token(Token = "0x40025F0")]
		CancelAim,
		[Token(Token = "0x40025F1")]
		PreTeleport,
		[Token(Token = "0x40025F2")]
		CancelTeleport,
		[Token(Token = "0x40025F3")]
		Teleporting,
		[Token(Token = "0x40025F4")]
		PostTeleport
	}

	[Token(Token = "0x20005C0")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40025F6")]
		None,
		[Token(Token = "0x40025F7")]
		Aim,
		[Token(Token = "0x40025F8")]
		PreTeleport,
		[Token(Token = "0x40025F9")]
		Teleport
	}

	[Token(Token = "0x20005C1")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40025FB")]
		Point,
		[Token(Token = "0x40025FC")]
		Sphere,
		[Token(Token = "0x40025FD")]
		Capsule
	}

	[Token(Token = "0x20005C2")]
	public class AimData
	{
		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4B360", Offset = "0xA4B360")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170003CE")]
		public List<Vector3> Points
		{
			[Token(Token = "0x600287F")]
			[Address(RVA = "0x132CDD4", Offset = "0x132CDD4", VA = "0x132CDD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5AF0C", Offset = "0xA5AF0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002880")]
			[Address(RVA = "0x132CDDC", Offset = "0x132CDDC", VA = "0x132CDDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5AF1C", Offset = "0xA5AF1C")]
			private set
			{
			}
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x132CD60", Offset = "0x132CD60", VA = "0x132CD60")]
		public AimData()
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x132CDE4", Offset = "0x132CDE4", VA = "0x132CDE4")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20005C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35884", Offset = "0xA35884")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002885")]
			[Address(RVA = "0x132CBAC", Offset = "0x132CBAC", VA = "0x132CBAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002887")]
			[Address(RVA = "0x132CC14", Offset = "0x132CC14", VA = "0x132CC14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x132B0B0", Offset = "0x132B0B0", VA = "0x132B0B0")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x132CAC4", Offset = "0x132CAC4", VA = "0x132CAC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x132CAC8", Offset = "0x132CAC8", VA = "0x132CAC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x132CBB4", Offset = "0x132CBB4", VA = "0x132CBB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35894", Offset = "0xA35894")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600288B")]
			[Address(RVA = "0x132C58C", Offset = "0x132C58C", VA = "0x132C58C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600288D")]
			[Address(RVA = "0x132C5F4", Offset = "0x132C5F4", VA = "0x132C5F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x132B598", Offset = "0x132B598", VA = "0x132B598")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x132C454", Offset = "0x132C454", VA = "0x132C454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x132C458", Offset = "0x132C458", VA = "0x132C458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x132C594", Offset = "0x132C594", VA = "0x132C594", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA358A4", Offset = "0xA358A4")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002891")]
			[Address(RVA = "0x132C6A0", Offset = "0x132C6A0", VA = "0x132C6A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002893")]
			[Address(RVA = "0x132C708", Offset = "0x132C708", VA = "0x132C708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x132B77C", Offset = "0x132B77C", VA = "0x132B77C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x132C5FC", Offset = "0x132C5FC", VA = "0x132C5FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x132C600", Offset = "0x132C600", VA = "0x132C600", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x132C6A8", Offset = "0x132C6A8", VA = "0x132C6A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA358B4", Offset = "0xA358B4")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002897")]
			[Address(RVA = "0x132CA54", Offset = "0x132CA54", VA = "0x132CA54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002899")]
			[Address(RVA = "0x132CABC", Offset = "0x132CABC", VA = "0x132CABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x132B960", Offset = "0x132B960", VA = "0x132B960")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x132C97C", Offset = "0x132C97C", VA = "0x132C97C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x132C980", Offset = "0x132C980", VA = "0x132C980", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x132CA5C", Offset = "0x132CA5C", VA = "0x132CA5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA358C4", Offset = "0xA358C4")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600289D")]
			[Address(RVA = "0x132C7B4", Offset = "0x132C7B4", VA = "0x132C7B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600289F")]
			[Address(RVA = "0x132C81C", Offset = "0x132C81C", VA = "0x132C81C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x132BB44", Offset = "0x132BB44", VA = "0x132BB44")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x132C710", Offset = "0x132C710", VA = "0x132C710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x132C714", Offset = "0x132C714", VA = "0x132C714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x132C7BC", Offset = "0x132C7BC", VA = "0x132C7BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA358D4", Offset = "0xA358D4")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028A3")]
			[Address(RVA = "0x132CCF0", Offset = "0x132CCF0", VA = "0x132CCF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028A5")]
			[Address(RVA = "0x132CD58", Offset = "0x132CD58", VA = "0x132CD58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x132BD28", Offset = "0x132BD28", VA = "0x132BD28")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x132CC1C", Offset = "0x132CC1C", VA = "0x132CC1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x132CC20", Offset = "0x132CC20", VA = "0x132CC20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x132CCF8", Offset = "0x132CCF8", VA = "0x132CCF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA358E4", Offset = "0xA358E4")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028A9")]
			[Address(RVA = "0x132C90C", Offset = "0x132C90C", VA = "0x132C90C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028AB")]
			[Address(RVA = "0x132C974", Offset = "0x132C974", VA = "0x132C974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x132BF0C", Offset = "0x132BF0C", VA = "0x132BF0C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x132C824", Offset = "0x132C824", VA = "0x132C824", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x132C828", Offset = "0x132C828", VA = "0x132C828", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x132C914", Offset = "0x132C914", VA = "0x132C914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38C80", Offset = "0xA38C80")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38CB8", Offset = "0xA38CB8")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38CF0", Offset = "0xA38CF0")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38D28", Offset = "0xA38D28")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38D60", Offset = "0xA38D60")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38D98", Offset = "0xA38D98")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38DD0", Offset = "0xA38DD0")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38E08", Offset = "0xA38E08")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38E40", Offset = "0xA38E40")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38E50", Offset = "0xA38E50")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38E88", Offset = "0xA38E88")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA38ED0", Offset = "0xA38ED0")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38EE0", Offset = "0xA38EE0")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38F18", Offset = "0xA38F18")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38F50", Offset = "0xA38F50")]
	public float AimCollisionRadius;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA38F88", Offset = "0xA38F88")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000038")]
	public States CurrentState
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x132A5F4", Offset = "0x132A5F4", VA = "0x132A5F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D69C", Offset = "0xA4D69C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x132A5FC", Offset = "0x132A5FC", VA = "0x132A5FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D6AC", Offset = "0xA4D6AC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x132A82C", Offset = "0x132A82C", VA = "0x132A82C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700003A")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x132A854", Offset = "0x132A854", VA = "0x132A854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D6DC", Offset = "0xA4D6DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x132A85C", Offset = "0x132A85C", VA = "0x132A85C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D6EC", Offset = "0xA4D6EC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x132A604", Offset = "0x132A604", VA = "0x132A604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D6BC", Offset = "0xA4D6BC")]
		add
		{
		}
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x132A6A8", Offset = "0x132A6A8", VA = "0x132A6A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D6CC", Offset = "0xA4D6CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x132AF68", Offset = "0x132AF68", VA = "0x132AF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D734", Offset = "0xA4D734")]
		add
		{
		}
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x132B00C", Offset = "0x132B00C", VA = "0x132B00C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D744", Offset = "0xA4D744")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x132B0DC", Offset = "0x132B0DC", VA = "0x132B0DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D7B8", Offset = "0xA4D7B8")]
		add
		{
		}
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x132B180", Offset = "0x132B180", VA = "0x132B180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D7C8", Offset = "0xA4D7C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x132B224", Offset = "0x132B224", VA = "0x132B224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D7D8", Offset = "0xA4D7D8")]
		add
		{
		}
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x132B2C8", Offset = "0x132B2C8", VA = "0x132B2C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D7E8", Offset = "0xA4D7E8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x132B3E0", Offset = "0x132B3E0", VA = "0x132B3E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D7F8", Offset = "0xA4D7F8")]
		add
		{
		}
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x132B484", Offset = "0x132B484", VA = "0x132B484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D808", Offset = "0xA4D808")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x132B5C4", Offset = "0x132B5C4", VA = "0x132B5C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D87C", Offset = "0xA4D87C")]
		add
		{
		}
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x132B668", Offset = "0x132B668", VA = "0x132B668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D88C", Offset = "0xA4D88C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x132B7A8", Offset = "0x132B7A8", VA = "0x132B7A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D900", Offset = "0xA4D900")]
		add
		{
		}
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x132B84C", Offset = "0x132B84C", VA = "0x132B84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D910", Offset = "0xA4D910")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x132B98C", Offset = "0x132B98C", VA = "0x132B98C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D984", Offset = "0xA4D984")]
		add
		{
		}
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x132BA30", Offset = "0x132BA30", VA = "0x132BA30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4D994", Offset = "0xA4D994")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x132BB70", Offset = "0x132BB70", VA = "0x132BB70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DA08", Offset = "0xA4DA08")]
		add
		{
		}
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x132BC14", Offset = "0x132BC14", VA = "0x132BC14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DA18", Offset = "0xA4DA18")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x132BD54", Offset = "0x132BD54", VA = "0x132BD54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DA8C", Offset = "0xA4DA8C")]
		add
		{
		}
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x132BDF8", Offset = "0x132BDF8", VA = "0x132BDF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DA9C", Offset = "0xA4DA9C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x132BF38", Offset = "0x132BF38", VA = "0x132BF38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DB10", Offset = "0xA4DB10")]
		add
		{
		}
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x132BFDC", Offset = "0x132BFDC", VA = "0x132BFDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DB20", Offset = "0xA4DB20")]
		remove
		{
		}
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x132A5AC", Offset = "0x132A5AC", VA = "0x132A5AC")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x132A5D0", Offset = "0x132A5D0", VA = "0x132A5D0")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x132A74C", Offset = "0x132A74C", VA = "0x132A74C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x132A864", Offset = "0x132A864", VA = "0x132A864")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x132ABBC", Offset = "0x132ABBC", VA = "0x132ABBC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA4D6FC", Offset = "0xA4D6FC")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x132AC74", Offset = "0x132AC74", VA = "0x132AC74")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x132AD3C", Offset = "0x132AD3C", VA = "0x132AD3C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x132AD58", Offset = "0x132AD58", VA = "0x132AD58")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x132AE20", Offset = "0x132AE20", VA = "0x132AE20")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x132AE64", Offset = "0x132AE64", VA = "0x132AE64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x132AEC0", Offset = "0x132AEC0", VA = "0x132AEC0", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x132AF60", Offset = "0x132AF60", VA = "0x132AF60", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x132AEF0", Offset = "0x132AEF0", VA = "0x132AEF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D754", Offset = "0xA4D754")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x132B36C", Offset = "0x132B36C", VA = "0x132B36C")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x132B528", Offset = "0x132B528", VA = "0x132B528")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D818", Offset = "0xA4D818")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x132B70C", Offset = "0x132B70C", VA = "0x132B70C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D89C", Offset = "0xA4D89C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x132B8F0", Offset = "0x132B8F0", VA = "0x132B8F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D920", Offset = "0xA4D920")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x132BAD4", Offset = "0x132BAD4", VA = "0x132BAD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4D9A4", Offset = "0xA4D9A4")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x132BCB8", Offset = "0x132BCB8", VA = "0x132BCB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4DA28", Offset = "0xA4DA28")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x132BE9C", Offset = "0x132BE9C", VA = "0x132BE9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4DAAC", Offset = "0xA4DAAC")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x132C080", Offset = "0x132C080", VA = "0x132C080")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x132C1C4", Offset = "0x132C1C4", VA = "0x132C1C4")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x132C1F8", Offset = "0x132C1F8", VA = "0x132C1F8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x132C318", Offset = "0x132C318", VA = "0x132C318")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x132C444", Offset = "0x132C444", VA = "0x132C444")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000096")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x11AD33C", Offset = "0x11AD33C", VA = "0x11AD33C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DB30", Offset = "0xA4DB30")]
		add
		{
		}
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x11AD3E0", Offset = "0x11AD3E0", VA = "0x11AD3E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DB40", Offset = "0xA4DB40")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x11AD484", Offset = "0x11AD484", VA = "0x11AD484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DB50", Offset = "0xA4DB50")]
		add
		{
		}
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x11AD528", Offset = "0x11AD528", VA = "0x11AD528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DB60", Offset = "0xA4DB60")]
		remove
		{
		}
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x11AD5CC", Offset = "0x11AD5CC", VA = "0x11AD5CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x11AD674", Offset = "0x11AD674", VA = "0x11AD674")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x11AD678", Offset = "0x11AD678", VA = "0x11AD678")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x11AD6EC", Offset = "0x11AD6EC", VA = "0x11AD6EC")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x11AD85C", Offset = "0x11AD85C", VA = "0x11AD85C")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x11ADB40", Offset = "0x11ADB40", VA = "0x11ADB40")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x11ADD30", Offset = "0x11ADD30", VA = "0x11ADD30")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000097")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x10E7DA8", Offset = "0x10E7DA8", VA = "0x10E7DA8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x10E7E3C", Offset = "0x10E7E3C", VA = "0x10E7E3C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002E2")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x10E7F0C", Offset = "0x10E7F0C", VA = "0x10E7F0C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000098")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39080", Offset = "0xA39080")]
	public float Range;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x10E7F1C", Offset = "0x10E7F1C", VA = "0x10E7F1C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x10E8078", Offset = "0x10E8078", VA = "0x10E8078")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000099")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA390B8", Offset = "0xA390B8")]
	public float Range;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA390F0", Offset = "0xA390F0")]
	public float MinimumElevation;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39128", Offset = "0xA39128")]
	public float Gravity;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39160", Offset = "0xA39160")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA39160", Offset = "0xA39160")]
	public float AimVelocity;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA391BC", Offset = "0xA391BC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA391BC", Offset = "0xA391BC")]
	public float AimStep;

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x10E8088", Offset = "0x10E8088", VA = "0x10E8088", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x10E82D4", Offset = "0x10E82D4", VA = "0x10E82D4")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200009A")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39214", Offset = "0xA39214")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x10E82E8", Offset = "0x10E82E8", VA = "0x10E82E8")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x10E83CC", Offset = "0x10E83CC", VA = "0x10E83CC")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x10E83FC", Offset = "0x10E83FC", VA = "0x10E83FC")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x10E842C", Offset = "0x10E842C", VA = "0x10E842C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x10E84CC", Offset = "0x10E84CC", VA = "0x10E84CC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x10E8538", Offset = "0x10E8538", VA = "0x10E8538", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x10E85A0", Offset = "0x10E85A0", VA = "0x10E85A0")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200009B")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3924C", Offset = "0xA3924C")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3925C", Offset = "0xA3925C")]
	public Transform PositionIndicator;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39294", Offset = "0xA39294")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA392CC", Offset = "0xA392CC")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700003B")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x10E86BC", Offset = "0x10E86BC", VA = "0x10E86BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DB70", Offset = "0xA4DB70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x10E86C4", Offset = "0x10E86C4", VA = "0x10E86C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DB80", Offset = "0xA4DB80")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x10E8874", Offset = "0x10E8874", VA = "0x10E8874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DB90", Offset = "0xA4DB90")]
		add
		{
		}
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x10E8918", Offset = "0x10E8918", VA = "0x10E8918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DBA0", Offset = "0xA4DBA0")]
		remove
		{
		}
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x10E86D0", Offset = "0x10E86D0", VA = "0x10E86D0")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x10E8758", Offset = "0x10E8758", VA = "0x10E8758")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x10E8830", Offset = "0x10E8830", VA = "0x10E8830")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x10E8870", Offset = "0x10E8870", VA = "0x10E8870")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x10E89BC", Offset = "0x10E89BC", VA = "0x10E89BC")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x10E8A24", Offset = "0x10E8A24", VA = "0x10E8A24")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x10E8A44", Offset = "0x10E8A44", VA = "0x10E8A44", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200009C")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20005CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA358F4", Offset = "0xA358F4")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170003DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028AF")]
			[Address(RVA = "0x10E9108", Offset = "0x10E9108", VA = "0x10E9108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028B1")]
			[Address(RVA = "0x10E9170", Offset = "0x10E9170", VA = "0x10E9170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x10E8E54", Offset = "0x10E8E54", VA = "0x10E8E54")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x10E9078", Offset = "0x10E9078", VA = "0x10E9078", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x10E907C", Offset = "0x10E907C", VA = "0x10E907C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x10E9110", Offset = "0x10E9110", VA = "0x10E9110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35904", Offset = "0xA35904")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170003DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028B5")]
			[Address(RVA = "0x10E9008", Offset = "0x10E9008", VA = "0x10E9008", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x10E9070", Offset = "0x10E9070", VA = "0x10E9070", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x10E8EF0", Offset = "0x10E8EF0", VA = "0x10E8EF0")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x10E8F74", Offset = "0x10E8F74", VA = "0x10E8F74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x10E8F78", Offset = "0x10E8F78", VA = "0x10E8F78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0x10E9010", Offset = "0x10E9010", VA = "0x10E9010", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x10E8C24", Offset = "0x10E8C24", VA = "0x10E8C24")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x10E8CD0", Offset = "0x10E8CD0", VA = "0x10E8CD0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x10E8D28", Offset = "0x10E8D28", VA = "0x10E8D28", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x10E8DE4", Offset = "0x10E8DE4", VA = "0x10E8DE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4DBB0", Offset = "0xA4DBB0")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x10E8E80", Offset = "0x10E8E80", VA = "0x10E8E80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4DC14", Offset = "0xA4DC14")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000300")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x10E8F1C", Offset = "0x10E8F1C", VA = "0x10E8F1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DC78", Offset = "0xA4DC78")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x10E8F48", Offset = "0x10E8F48", VA = "0x10E8F48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DC88", Offset = "0xA4DC88")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200009D")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39314", Offset = "0xA39314")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39324", Offset = "0xA39324")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3935C", Offset = "0xA3935C")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39394", Offset = "0xA39394")]
	public bool FastTeleport;

	[Token(Token = "0x1700003C")]
	public Transform Pointer
	{
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x10E9178", Offset = "0x10E9178", VA = "0x10E9178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DC98", Offset = "0xA4DC98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000304")]
		[Address(RVA = "0x10E9180", Offset = "0x10E9180", VA = "0x10E9180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DCA8", Offset = "0xA4DCA8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x10E9188", Offset = "0x10E9188", VA = "0x10E9188", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x10E92E4", Offset = "0x10E92E4", VA = "0x10E92E4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x10E939C", Offset = "0x10E939C", VA = "0x10E939C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20005CC")]
	public enum InputModes
	{
		[Token(Token = "0x400261F")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4002620")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4002621")]
		ThumbstickTeleport,
		[Token(Token = "0x4002622")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20005CD")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4002624")]
		A,
		[Token(Token = "0x4002625")]
		B,
		[Token(Token = "0x4002626")]
		LeftTrigger,
		[Token(Token = "0x4002627")]
		LeftThumbstick,
		[Token(Token = "0x4002628")]
		RightTrigger,
		[Token(Token = "0x4002629")]
		RightThumbstick,
		[Token(Token = "0x400262A")]
		X,
		[Token(Token = "0x400262B")]
		Y
	}

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA393CC", Offset = "0xA393CC")]
	public InputModes InputMode;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39404", Offset = "0xA39404")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3943C", Offset = "0xA3943C")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39474", Offset = "0xA39474")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x10E93A0", Offset = "0x10E93A0", VA = "0x10E93A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x10E93A4", Offset = "0x10E93A4", VA = "0x10E93A4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x10E97EC", Offset = "0x10E97EC", VA = "0x10E97EC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x10E98AC", Offset = "0x10E98AC", VA = "0x10E98AC")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200009F")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20005CE")]
	public enum OrientationModes
	{
		[Token(Token = "0x400262D")]
		HeadRelative,
		[Token(Token = "0x400262E")]
		ForwardFacing
	}

	[Token(Token = "0x20005CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35914", Offset = "0xA35914")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170003E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0x10E9D3C", Offset = "0x10E9D3C", VA = "0x10E9D3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028BD")]
			[Address(RVA = "0x10E9DA4", Offset = "0x10E9DA4", VA = "0x10E9DA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x10E9B18", Offset = "0x10E9B18", VA = "0x10E9B18")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x10E9C94", Offset = "0x10E9C94", VA = "0x10E9C94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0x10E9C98", Offset = "0x10E9C98", VA = "0x10E9C98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028BC")]
		[Address(RVA = "0x10E9D44", Offset = "0x10E9D44", VA = "0x10E9D44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x10E9958", Offset = "0x10E9958", VA = "0x10E9958")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x10E9A0C", Offset = "0x10E9A0C", VA = "0x10E9A0C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x10E9A14", Offset = "0x10E9A14", VA = "0x10E9A14", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x10E9A60", Offset = "0x10E9A60", VA = "0x10E9A60", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x10E9AA8", Offset = "0x10E9AA8", VA = "0x10E9AA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4DCB8", Offset = "0xA4DCB8")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000311")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000312")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x10E9B44", Offset = "0x10E9B44", VA = "0x10E9B44")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x10E9C68", Offset = "0x10E9C68", VA = "0x10E9C68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DD1C", Offset = "0xA4DD1C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000A0")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000315")]
	[Address(RVA = "0x10E9DAC", Offset = "0x10E9DAC", VA = "0x10E9DAC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x10E9DB0", Offset = "0x10E9DB0", VA = "0x10E9DB0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x10E9E2C", Offset = "0x10E9E2C", VA = "0x10E9E2C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA394AC", Offset = "0xA394AC")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA394E4", Offset = "0xA394E4")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3951C", Offset = "0xA3951C")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39554", Offset = "0xA39554")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x10E9E30", Offset = "0x10E9E30", VA = "0x10E9E30", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x10E9EA0", Offset = "0x10E9EA0", VA = "0x10E9EA0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x10EA318", Offset = "0x10EA318", VA = "0x10EA318")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A2")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3958C", Offset = "0xA3958C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA395C4", Offset = "0xA395C4")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA395FC", Offset = "0xA395FC")]
	public float RotateStickThreshold;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x10EA31C", Offset = "0x10EA31C", VA = "0x10EA31C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x10EA360", Offset = "0x10EA360", VA = "0x10EA360", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x10EA7D0", Offset = "0x10EA7D0", VA = "0x10EA7D0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000A3")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x10EA7E0", Offset = "0x10EA7E0", VA = "0x10EA7E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x10EA7E4", Offset = "0x10EA7E4", VA = "0x10EA7E4")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x10EA7EC", Offset = "0x10EA7EC", VA = "0x10EA7EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x10EA8D4", Offset = "0x10EA8D4", VA = "0x10EA8D4")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x10EA8FC", Offset = "0x10EA8FC", VA = "0x10EA8FC")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000A4")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39634", Offset = "0xA39634")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700003D")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x10EA914", Offset = "0x10EA914", VA = "0x10EA914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DD2C", Offset = "0xA4DD2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x10EA91C", Offset = "0x10EA91C", VA = "0x10EA91C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DD3C", Offset = "0xA4DD3C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x10E7DD8", Offset = "0x10E7DD8", VA = "0x10E7DD8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x10E7EE0", Offset = "0x10E7EE0", VA = "0x10E7EE0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x10EA924", Offset = "0x10EA924", VA = "0x10EA924")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA4DD4C", Offset = "0xA4DD4C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x10E852C", Offset = "0x10E852C", VA = "0x10E852C", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x10E8598", Offset = "0x10E8598", VA = "0x10E8598", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x10E7F14", Offset = "0x10E7F14", VA = "0x10E7F14")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000A5")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20005D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35924", Offset = "0xA35924")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170003E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0x10EAF78", Offset = "0x10EAF78", VA = "0x10EAF78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028C3")]
			[Address(RVA = "0x10EAFE0", Offset = "0x10EAFE0", VA = "0x10EAFE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x10EAB74", Offset = "0x10EAB74", VA = "0x10EAB74")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x10EAD0C", Offset = "0x10EAD0C", VA = "0x10EAD0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0x10EAD10", Offset = "0x10EAD10", VA = "0x10EAD10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x10EAF80", Offset = "0x10EAF80", VA = "0x10EAF80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39644", Offset = "0xA39644")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400033D")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x10EA9EC", Offset = "0x10EA9EC", VA = "0x10EA9EC")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x10EAAB0", Offset = "0x10EAAB0", VA = "0x10EAAB0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x10EAADC", Offset = "0x10EAADC", VA = "0x10EAADC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x10EAB04", Offset = "0x10EAB04", VA = "0x10EAB04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4DD84", Offset = "0xA4DD84")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x10EABA0", Offset = "0x10EABA0", VA = "0x10EABA0", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000330")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x10EABBC", Offset = "0x10EABBC", VA = "0x10EABBC", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x10EACE0", Offset = "0x10EACE0", VA = "0x10EACE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DDE8", Offset = "0xA4DDE8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x10EAFE8", Offset = "0x10EAFE8", VA = "0x10EAFE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x10EB048", Offset = "0x10EB048", VA = "0x10EB048", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x10EB1CC", Offset = "0x10EB1CC", VA = "0x10EB1CC", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x10EB2BC", Offset = "0x10EB2BC", VA = "0x10EB2BC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA4DDF8", Offset = "0xA4DDF8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x10EB2C0", Offset = "0x10EB2C0", VA = "0x10EB2C0")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000A7")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3967C", Offset = "0xA3967C")]
	public float LOSOffset;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA396B4", Offset = "0xA396B4")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x10EB2CC", Offset = "0x10EB2CC", VA = "0x10EB2CC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x10EB4FC", Offset = "0x10EB4FC", VA = "0x10EB4FC")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000A8")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600033A")]
	[Address(RVA = "0x10EB508", Offset = "0x10EB508", VA = "0x10EB508", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x10EB68C", Offset = "0x10EB68C", VA = "0x10EB68C")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000A9")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600033C")]
	[Address(RVA = "0x10EC22C", Offset = "0x10EC22C", VA = "0x10EC22C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x10EC2C4", Offset = "0x10EC2C4", VA = "0x10EC2C4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600033E")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x10EC358", Offset = "0x10EC358", VA = "0x10EC358")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20005D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35934", Offset = "0xA35934")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170003E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028C7")]
			[Address(RVA = "0x10EC6C0", Offset = "0x10EC6C0", VA = "0x10EC6C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028C9")]
			[Address(RVA = "0x10EC728", Offset = "0x10EC728", VA = "0x10EC728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x10EC3FC", Offset = "0x10EC3FC", VA = "0x10EC3FC")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x10EC5C0", Offset = "0x10EC5C0", VA = "0x10EC5C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x10EC5C4", Offset = "0x10EC5C4", VA = "0x10EC5C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x10EC6C8", Offset = "0x10EC6C8", VA = "0x10EC6C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA396EC", Offset = "0xA396EC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA396EC", Offset = "0xA396EC")]
	public float TransitionDuration;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39744", Offset = "0xA39744")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA39744", Offset = "0xA39744")]
	public float TeleportDelay;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39798", Offset = "0xA39798")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x10EC360", Offset = "0x10EC360", VA = "0x10EC360", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x10EC38C", Offset = "0x10EC38C", VA = "0x10EC38C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4DE30", Offset = "0xA4DE30")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x10EC428", Offset = "0x10EC428", VA = "0x10EC428")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000AB")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000343")]
	[Address(RVA = "0x10EC730", Offset = "0x10EC730", VA = "0x10EC730", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x10EC74C", Offset = "0x10EC74C", VA = "0x10EC74C")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000AC")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20005D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35944", Offset = "0xA35944")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170003E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028CD")]
			[Address(RVA = "0x10EC998", Offset = "0x10EC998", VA = "0x10EC998", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028CF")]
			[Address(RVA = "0x10ECA00", Offset = "0x10ECA00", VA = "0x10ECA00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x10EC7F0", Offset = "0x10EC7F0", VA = "0x10EC7F0")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x10EC864", Offset = "0x10EC864", VA = "0x10EC864", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x10EC868", Offset = "0x10EC868", VA = "0x10EC868", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0x10EC9A0", Offset = "0x10EC9A0", VA = "0x10EC9A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA397D0", Offset = "0xA397D0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA397D0", Offset = "0xA397D0")]
	public float TransitionDuration;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x10EC754", Offset = "0x10EC754", VA = "0x10EC754", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x10EC780", Offset = "0x10EC780", VA = "0x10EC780")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4DE94", Offset = "0xA4DE94")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x10EC81C", Offset = "0x10EC81C", VA = "0x10EC81C")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000AD")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700003E")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x133ACA0", Offset = "0x133ACA0", VA = "0x133ACA0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003F")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x133AF5C", Offset = "0x133AF5C", VA = "0x133AF5C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000040")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x133796C", Offset = "0x133796C", VA = "0x133796C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000041")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x1338B8C", Offset = "0x1338B8C", VA = "0x1338B8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000042")]
	public static long Duration
	{
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x1338D70", Offset = "0x1338D70", VA = "0x1338D70")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000043")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x1338C7C", Offset = "0x1338C7C", VA = "0x1338C7C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x1338350", Offset = "0x1338350", VA = "0x1338350")]
		set
		{
		}
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x13393D0", Offset = "0x13393D0", VA = "0x13393D0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1339114", Offset = "0x1339114", VA = "0x1339114")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1337FE0", Offset = "0x1337FE0", VA = "0x1337FE0")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1338164", Offset = "0x1338164", VA = "0x1338164")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1338F3C", Offset = "0x1338F3C", VA = "0x1338F3C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x13395C4", Offset = "0x13395C4", VA = "0x13395C4")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x13389D0", Offset = "0x13389D0", VA = "0x13389D0")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000AE")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x120E158", Offset = "0x120E158", VA = "0x120E158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DEF8", Offset = "0xA4DEF8")]
		add
		{
		}
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x120E1FC", Offset = "0x120E1FC", VA = "0x120E1FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DF08", Offset = "0xA4DF08")]
		remove
		{
		}
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x120E2A0", Offset = "0x120E2A0", VA = "0x120E2A0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x120E2B4", Offset = "0x120E2B4", VA = "0x120E2B4")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000AF")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20005D3")]
	public enum ButtonType
	{
		[Token(Token = "0x4002641")]
		Play,
		[Token(Token = "0x4002642")]
		Pause,
		[Token(Token = "0x4002643")]
		FastForward,
		[Token(Token = "0x4002644")]
		Rewind,
		[Token(Token = "0x4002645")]
		SkipForward,
		[Token(Token = "0x4002646")]
		SkipBack,
		[Token(Token = "0x4002647")]
		Stop
	}

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000044")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600035B")]
		[Address(RVA = "0x13318D4", Offset = "0x13318D4", VA = "0x13318D4")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600035C")]
		[Address(RVA = "0x13318DC", Offset = "0x13318DC", VA = "0x13318DC")]
		set
		{
		}
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1331900", Offset = "0x1331900", VA = "0x1331900", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1332DCC", Offset = "0x1332DCC", VA = "0x1332DCC")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000B0")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20005D4")]
	public enum VideoShape
	{
		[Token(Token = "0x4002649")]
		_360,
		[Token(Token = "0x400264A")]
		_180,
		[Token(Token = "0x400264B")]
		Quad
	}

	[Token(Token = "0x20005D5")]
	public enum VideoStereo
	{
		[Token(Token = "0x400264D")]
		Mono,
		[Token(Token = "0x400264E")]
		TopBottom,
		[Token(Token = "0x400264F")]
		LeftRight
	}

	[Token(Token = "0x20005D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35954", Offset = "0xA35954")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170003E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028D3")]
			[Address(RVA = "0x133988C", Offset = "0x133988C", VA = "0x133988C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028D5")]
			[Address(RVA = "0x13398F4", Offset = "0x13398F4", VA = "0x13398F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028D0")]
		[Address(RVA = "0x1337CDC", Offset = "0x1337CDC", VA = "0x1337CDC")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0x1339708", Offset = "0x1339708", VA = "0x1339708", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0x133970C", Offset = "0x133970C", VA = "0x133970C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0x1339894", Offset = "0x1339894", VA = "0x1339894", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35964", Offset = "0xA35964")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0x1337F44", Offset = "0x1337F44", VA = "0x1337F44")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0x13392FC", Offset = "0x13392FC", VA = "0x13392FC")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39858", Offset = "0xA39858")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39868", Offset = "0xA39868")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA39878", Offset = "0xA39878")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000045")]
	public bool IsPlaying
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0x1337720", Offset = "0x1337720", VA = "0x1337720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DF18", Offset = "0xA4DF18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000360")]
		[Address(RVA = "0x1337728", Offset = "0x1337728", VA = "0x1337728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DF28", Offset = "0xA4DF28")]
		private set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public long Duration
	{
		[Token(Token = "0x6000361")]
		[Address(RVA = "0x1337734", Offset = "0x1337734", VA = "0x1337734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DF38", Offset = "0xA4DF38")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000362")]
		[Address(RVA = "0x133773C", Offset = "0x133773C", VA = "0x133773C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DF48", Offset = "0xA4DF48")]
		private set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000363")]
		[Address(RVA = "0x1337744", Offset = "0x1337744", VA = "0x1337744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DF58", Offset = "0xA4DF58")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000364")]
		[Address(RVA = "0x133774C", Offset = "0x133774C", VA = "0x133774C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DF68", Offset = "0xA4DF68")]
		private set
		{
		}
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1337754", Offset = "0x1337754", VA = "0x1337754")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x13379D4", Offset = "0x13379D4", VA = "0x13379D4")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1337A3C", Offset = "0x1337A3C", VA = "0x1337A3C")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1337C6C", Offset = "0x1337C6C", VA = "0x1337C6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4DF78", Offset = "0xA4DF78")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1337D08", Offset = "0x1337D08", VA = "0x1337D08")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1337F4C", Offset = "0x1337F4C", VA = "0x1337F4C")]
	public void Play()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x13380D4", Offset = "0x13380D4", VA = "0x13380D4")]
	public void Pause()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1338258", Offset = "0x1338258", VA = "0x1338258")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1338490", Offset = "0x1338490", VA = "0x1338490")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1338E64", Offset = "0x1338E64", VA = "0x1338E64")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1339084", Offset = "0x1339084", VA = "0x1339084")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1339208", Offset = "0x1339208", VA = "0x1339208")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x13392EC", Offset = "0x13392EC", VA = "0x13392EC")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000B1")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20005D8")]
	private enum PlaybackState
	{
		[Token(Token = "0x4002657")]
		Playing,
		[Token(Token = "0x4002658")]
		Paused,
		[Token(Token = "0x4002659")]
		Rewinding,
		[Token(Token = "0x400265A")]
		FastForwarding
	}

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.UI.Slider ProgressBar;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x13398FC", Offset = "0x13398FC", VA = "0x13398FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1339BF8", Offset = "0x1339BF8", VA = "0x1339BF8")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1339DD4", Offset = "0x1339DD4", VA = "0x1339DD4")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1339F08", Offset = "0x1339F08", VA = "0x1339F08")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x133A010", Offset = "0x133A010", VA = "0x133A010")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1339EDC", Offset = "0x1339EDC", VA = "0x1339EDC")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x133A0D8", Offset = "0x133A0D8", VA = "0x133A0D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1339AEC", Offset = "0x1339AEC", VA = "0x1339AEC")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x133A4D4", Offset = "0x133A4D4", VA = "0x133A4D4")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000B2")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32668", Offset = "0xA32668")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20005D9")]
	private enum CubeFace
	{
		[Token(Token = "0x400265C")]
		Right,
		[Token(Token = "0x400265D")]
		Left,
		[Token(Token = "0x400265E")]
		Top,
		[Token(Token = "0x400265F")]
		Bottom,
		[Token(Token = "0x4002660")]
		Front,
		[Token(Token = "0x4002661")]
		Back,
		[Token(Token = "0x4002662")]
		COUNT
	}

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1979578", Offset = "0x1979578", VA = "0x1979578")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x19796D8", Offset = "0x19796D8", VA = "0x19796D8")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1979894", Offset = "0x1979894", VA = "0x1979894")]
	private void Update()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1979D6C", Offset = "0x1979D6C", VA = "0x1979D6C")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x197A040", Offset = "0x197A040", VA = "0x197A040")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x197B29C", Offset = "0x197B29C", VA = "0x197B29C")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x197B2FC", Offset = "0x197B2FC", VA = "0x197B2FC")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x197A3C0", Offset = "0x197A3C0", VA = "0x197A3C0")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x197B3E4", Offset = "0x197B3E4", VA = "0x197B3E4")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x197B5D0", Offset = "0x197B5D0", VA = "0x197B5D0")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x197A878", Offset = "0x197A878", VA = "0x197A878")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x197ABA0", Offset = "0x197ABA0", VA = "0x197ABA0")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x197AEF8", Offset = "0x197AEF8", VA = "0x197AEF8")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x197B784", Offset = "0x197B784", VA = "0x197B784")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000B3")]
public static class VectorUtil
{
	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1347D54", Offset = "0x1347D54", VA = "0x1347D54")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000B4")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1315C08", Offset = "0x1315C08", VA = "0x1315C08")]
	private void Start()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1315FD8", Offset = "0x1315FD8", VA = "0x1315FD8")]
	public void TogglePressed(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1316090", Offset = "0x1316090", VA = "0x1316090")]
	public void RadioPressed(string radioLabel, string group, UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1316290", Offset = "0x1316290", VA = "0x1316290")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1316378", Offset = "0x1316378", VA = "0x1316378")]
	private void Update()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1316454", Offset = "0x1316454", VA = "0x1316454")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x13164C0", Offset = "0x13164C0", VA = "0x13164C0")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x13164C8", Offset = "0x13164C8", VA = "0x13164C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DFEC", Offset = "0xA4DFEC")]
	private void <Start>b__2_0(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1316524", Offset = "0x1316524", VA = "0x1316524")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4DFFC", Offset = "0xA4DFFC")]
	private void <Start>b__2_1(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1316580", Offset = "0x1316580", VA = "0x1316580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4E00C", Offset = "0xA4E00C")]
	private void <Start>b__2_2(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x13165DC", Offset = "0x13165DC", VA = "0x13165DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4E01C", Offset = "0xA4E01C")]
	private void <Start>b__2_3(UnityEngine.UI.Toggle t)
	{
	}
}
[Token(Token = "0x20000B5")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20005DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35974", Offset = "0xA35974")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170003EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028DB")]
			[Address(RVA = "0x1195FC0", Offset = "0x1195FC0", VA = "0x1195FC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028DD")]
			[Address(RVA = "0x1196028", Offset = "0x1196028", VA = "0x1196028", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0x1195E70", Offset = "0x1195E70", VA = "0x1195E70")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x1195EA4", Offset = "0x1195EA4", VA = "0x1195EA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x1195EA8", Offset = "0x1195EA8", VA = "0x1195EA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x1195FC8", Offset = "0x1195FC8", VA = "0x1195FC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1195B74", Offset = "0x1195B74", VA = "0x1195B74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1195C74", Offset = "0x1195C74", VA = "0x1195C74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1195C04", Offset = "0x1195C04", VA = "0x1195C04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E02C", Offset = "0xA4E02C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1195E9C", Offset = "0x1195E9C", VA = "0x1195E9C")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000B6")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA39898", Offset = "0xA39898")]
	public int SubdivisionsU;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA398B4", Offset = "0xA398B4")]
	public int SubdivisionsV;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1217A78", Offset = "0x1217A78", VA = "0x1217A78")]
	private void Update()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1218530", Offset = "0x1218530", VA = "0x1218530")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000B7")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000048")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x115D2F4", Offset = "0x115D2F4", VA = "0x115D2F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x115D34C", Offset = "0x115D34C", VA = "0x115D34C")]
	public void Start()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x115D6B0", Offset = "0x115D6B0", VA = "0x115D6B0")]
	public void Update()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x115D794", Offset = "0x115D794", VA = "0x115D794")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA4E090", Offset = "0xA4E090")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60003A0")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60003A2")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60003A3")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60003A4")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60003A5")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60003A6")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60003A7")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x115D7FC", Offset = "0x115D7FC", VA = "0x115D7FC")]
	protected void UpdateToggle(UnityEngine.UI.Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x115D838", Offset = "0x115D838", VA = "0x115D838")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x115D8AC", Offset = "0x115D8AC", VA = "0x115D8AC")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x115D9E8", Offset = "0x115D9E8", VA = "0x115D9E8")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x115DABC", Offset = "0x115DABC", VA = "0x115DABC")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x115D59C", Offset = "0x115D59C", VA = "0x115D59C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x115DB88", Offset = "0x115DB88", VA = "0x115DB88")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x115DBF0", Offset = "0x115DBF0", VA = "0x115DBF0")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x115DCF0", Offset = "0x115DCF0", VA = "0x115DCF0")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000B8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA326FC", Offset = "0xA326FC")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20005DB")]
	public enum DrawMode
	{
		[Token(Token = "0x4002667")]
		Opaque,
		[Token(Token = "0x4002668")]
		OpaqueWithClip,
		[Token(Token = "0x4002669")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400266A")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000049")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x197935C", Offset = "0x197935C", VA = "0x197935C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x19793F0", Offset = "0x19793F0", VA = "0x19793F0")]
		set
		{
		}
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1977CEC", Offset = "0x1977CEC", VA = "0x1977CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x197895C", Offset = "0x197895C", VA = "0x197895C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x19789E0", Offset = "0x19789E0", VA = "0x19789E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1978AD4", Offset = "0x1978AD4", VA = "0x1978AD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1978BC8", Offset = "0x1978BC8", VA = "0x1978BC8", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1978DCC", Offset = "0x1978DCC", VA = "0x1978DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x19794C0", Offset = "0x19794C0", VA = "0x19794C0")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000B9")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20005DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35984", Offset = "0xA35984")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x11B7CC4", Offset = "0x11B7CC4", VA = "0x11B7CC4")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x11B7DD4", Offset = "0x11B7DD4", VA = "0x11B7DD4")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x11B7B04", Offset = "0x11B7B04", VA = "0x11B7B04")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x11B7CCC", Offset = "0x11B7CCC", VA = "0x11B7CCC")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x11B7DCC", Offset = "0x11B7DCC", VA = "0x11B7DCC")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000BA")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA32760", Offset = "0xA32760")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20005DD")]
	public enum RotationAxes
	{
		[Token(Token = "0x400266E")]
		MouseXAndY,
		[Token(Token = "0x400266F")]
		MouseX,
		[Token(Token = "0x4002670")]
		MouseY
	}

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1335F50", Offset = "0x1335F50", VA = "0x1335F50")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x13361B0", Offset = "0x13361B0", VA = "0x13361B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1336270", Offset = "0x1336270", VA = "0x1336270")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000BB")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20005DE")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4002672")]
		Uninitialized = -1,
		[Token(Token = "0x4002673")]
		NotEnabled,
		[Token(Token = "0x4002674")]
		Success,
		[Token(Token = "0x4002675")]
		StreamError,
		[Token(Token = "0x4002676")]
		ProcessError,
		[Token(Token = "0x4002677")]
		MaxStatValue
	}

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700004A")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x133F588", Offset = "0x133F588", VA = "0x133F588")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x133F590", Offset = "0x133F590", VA = "0x133F590")]
		set
		{
		}
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x133F59C", Offset = "0x133F59C", VA = "0x133F59C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x133F7B8", Offset = "0x133F7B8", VA = "0x133F7B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x133FA14", Offset = "0x133FA14", VA = "0x133FA14")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000BC")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20005DF")]
	private enum Parameters
	{
		[Token(Token = "0x4002679")]
		P_GAIN,
		[Token(Token = "0x400267A")]
		P_USEINVSQR,
		[Token(Token = "0x400267B")]
		P_NEAR,
		[Token(Token = "0x400267C")]
		P_FAR,
		[Token(Token = "0x400267D")]
		P_RADIUS,
		[Token(Token = "0x400267E")]
		P_DISABLE_RFL,
		[Token(Token = "0x400267F")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4002680")]
		P_AMBISTAT,
		[Token(Token = "0x4002681")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4002682")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4002683")]
		P_SENDLEVEL,
		[Token(Token = "0x4002684")]
		P_NUM
	}

	[Token(Token = "0x40003CC")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700004B")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x133FC70", Offset = "0x133FC70", VA = "0x133FC70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x133FC78", Offset = "0x133FC78", VA = "0x133FC78")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public float Gain
	{
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x133FC84", Offset = "0x133FC84", VA = "0x133FC84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x133FC8C", Offset = "0x133FC8C", VA = "0x133FC8C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x133FD10", Offset = "0x133FD10", VA = "0x133FD10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x133FD18", Offset = "0x133FD18", VA = "0x133FD18")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public float Near
	{
		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x133FD24", Offset = "0x133FD24", VA = "0x133FD24")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x133FD2C", Offset = "0x133FD2C", VA = "0x133FD2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float Far
	{
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x133FDB4", Offset = "0x133FDB4", VA = "0x133FDB4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x133FDBC", Offset = "0x133FDBC", VA = "0x133FDBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x133FE44", Offset = "0x133FE44", VA = "0x133FE44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x133FE4C", Offset = "0x133FE4C", VA = "0x133FE4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public float ReverbSend
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x133FED4", Offset = "0x133FED4", VA = "0x133FED4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x133FEDC", Offset = "0x133FEDC", VA = "0x133FEDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x133FF64", Offset = "0x133FF64", VA = "0x133FF64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x133FF6C", Offset = "0x133FF6C", VA = "0x133FF6C")]
		set
		{
		}
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x133FA98", Offset = "0x133FA98", VA = "0x133FA98")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA4E0C8", Offset = "0xA4E0C8")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x133FB90", Offset = "0x133FB90", VA = "0x133FB90")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x133FF78", Offset = "0x133FF78", VA = "0x133FF78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x13400EC", Offset = "0x13400EC", VA = "0x13400EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x13400F0", Offset = "0x13400F0", VA = "0x13400F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x133FFE4", Offset = "0x133FFE4", VA = "0x133FFE4")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x13401B8", Offset = "0x13401B8", VA = "0x13401B8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1340618", Offset = "0x1340618", VA = "0x1340618")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x133FB10", Offset = "0x133FB10", VA = "0x133FB10")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x13406E8", Offset = "0x13406E8", VA = "0x13406E8")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000BD")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40003D7")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40003D9")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1340708", Offset = "0x1340708", VA = "0x1340708")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1340714", Offset = "0x1340714", VA = "0x1340714")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x13407CC", Offset = "0x13407CC", VA = "0x13407CC")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x134074C", Offset = "0x134074C", VA = "0x134074C")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x134084C", Offset = "0x134084C", VA = "0x134084C")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000BE")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20005E0")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20005E1")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40003E0")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000053")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x1962AC4", Offset = "0x1962AC4", VA = "0x1962AC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000054")]
	public string filePath
	{
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x1962B50", Offset = "0x1962B50", VA = "0x1962B50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1962BC8", Offset = "0x1962BC8", VA = "0x1962BC8")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1962D10", Offset = "0x1962D10", VA = "0x1962D10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1962D14", Offset = "0x1962D14", VA = "0x1962D14")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x196327C", Offset = "0x196327C", VA = "0x196327C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1963618", Offset = "0x1963618", VA = "0x1963618")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1963778", Offset = "0x1963778", VA = "0x1963778")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1963E50", Offset = "0x1963E50", VA = "0x1963E50")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1963E8C", Offset = "0x1963E8C", VA = "0x1963E8C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1965638", Offset = "0x1965638", VA = "0x1965638")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1965510", Offset = "0x1965510", VA = "0x1965510")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x19630B4", Offset = "0x19630B4", VA = "0x19630B4")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1962EE4", Offset = "0x1962EE4", VA = "0x1962EE4")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1965C50", Offset = "0x1965C50", VA = "0x1965C50")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1966098", Offset = "0x1966098", VA = "0x1966098")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000BF")]
internal class ONSPPropagation
{
	[Token(Token = "0x20005E2")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400268B")]
		Int8,
		[Token(Token = "0x400268C")]
		UInt8,
		[Token(Token = "0x400268D")]
		Int16,
		[Token(Token = "0x400268E")]
		UInt16,
		[Token(Token = "0x400268F")]
		Int32,
		[Token(Token = "0x4002690")]
		UInt32,
		[Token(Token = "0x4002691")]
		Int64,
		[Token(Token = "0x4002692")]
		UInt64,
		[Token(Token = "0x4002693")]
		Float16,
		[Token(Token = "0x4002694")]
		Float32,
		[Token(Token = "0x4002695")]
		Float64
	}

	[Token(Token = "0x20005E3")]
	public class ClientType
	{
		[Token(Token = "0x4002696")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4002697")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4002698")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4002699")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400269A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x400269B")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x400269C")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x400269D")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x400269E")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x400269F")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40026A0")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40026A1")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40026A2")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x40026A3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x1340C2C", Offset = "0x1340C2C", VA = "0x1340C2C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20005E4")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60028E1")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60028E2")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60028E3")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60028E4")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60028E5")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60028E6")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60028E7")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60028E8")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60028E9")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60028EA")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60028EB")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60028EC")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60028ED")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60028EE")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60028EF")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20005E5")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40026A4")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170003ED")]
		private IntPtr context
		{
			[Token(Token = "0x60028F0")]
			[Address(RVA = "0x134189C", Offset = "0x134189C", VA = "0x134189C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x1341900", Offset = "0x1341900", VA = "0x1341900")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x1341990", Offset = "0x1341990", VA = "0x1341990")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x1341A20", Offset = "0x1341A20", VA = "0x1341A20", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x1341A44", Offset = "0x1341A44", VA = "0x1341A44")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x1341AD4", Offset = "0x1341AD4", VA = "0x1341AD4", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x1341AF8", Offset = "0x1341AF8", VA = "0x1341AF8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x1341B84", Offset = "0x1341B84", VA = "0x1341B84", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x1341BA8", Offset = "0x1341BA8", VA = "0x1341BA8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0x1341C28", Offset = "0x1341C28", VA = "0x1341C28", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x1341C30", Offset = "0x1341C30", VA = "0x1341C30")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x1341D50", Offset = "0x1341D50", VA = "0x1341D50", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60028FC")]
		[Address(RVA = "0x1341E48", Offset = "0x1341E48", VA = "0x1341E48")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0x1341EE0", Offset = "0x1341EE0", VA = "0x1341EE0", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60028FE")]
		[Address(RVA = "0x1341EEC", Offset = "0x1341EEC", VA = "0x1341EEC")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x1342018", Offset = "0x1342018", VA = "0x1342018", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002900")]
		[Address(RVA = "0x1342024", Offset = "0x1342024", VA = "0x1342024")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002901")]
		[Address(RVA = "0x13420D0", Offset = "0x13420D0", VA = "0x13420D0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002902")]
		[Address(RVA = "0x13420DC", Offset = "0x13420DC", VA = "0x13420DC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x1342188", Offset = "0x1342188", VA = "0x1342188", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002904")]
		[Address(RVA = "0x1342194", Offset = "0x1342194", VA = "0x1342194")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002905")]
		[Address(RVA = "0x1342240", Offset = "0x1342240", VA = "0x1342240", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002906")]
		[Address(RVA = "0x134224C", Offset = "0x134224C", VA = "0x134224C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002907")]
		[Address(RVA = "0x13422D8", Offset = "0x13422D8", VA = "0x13422D8", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002908")]
		[Address(RVA = "0x13422FC", Offset = "0x13422FC", VA = "0x13422FC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x134237C", Offset = "0x134237C", VA = "0x134237C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600290A")]
		[Address(RVA = "0x1342384", Offset = "0x1342384", VA = "0x1342384")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600290B")]
		[Address(RVA = "0x134242C", Offset = "0x134242C", VA = "0x134242C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600290C")]
		[Address(RVA = "0x1342438", Offset = "0x1342438", VA = "0x1342438")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600290D")]
		[Address(RVA = "0x13424E0", Offset = "0x13424E0", VA = "0x13424E0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600290E")]
		[Address(RVA = "0x13424F0", Offset = "0x13424F0", VA = "0x13424F0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600290F")]
		[Address(RVA = "0x1342580", Offset = "0x1342580", VA = "0x1342580", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0x1340BD8", Offset = "0x1340BD8", VA = "0x1340BD8")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20005E6")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40026A6")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170003EE")]
		private IntPtr context
		{
			[Token(Token = "0x6002911")]
			[Address(RVA = "0x1961D80", Offset = "0x1961D80", VA = "0x1961D80")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002912")]
		[Address(RVA = "0x1961DE4", Offset = "0x1961DE4", VA = "0x1961DE4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002913")]
		[Address(RVA = "0x1961E74", Offset = "0x1961E74", VA = "0x1961E74")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002914")]
		[Address(RVA = "0x1961F04", Offset = "0x1961F04", VA = "0x1961F04", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002915")]
		[Address(RVA = "0x1961F28", Offset = "0x1961F28", VA = "0x1961F28")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002916")]
		[Address(RVA = "0x1961FB8", Offset = "0x1961FB8", VA = "0x1961FB8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002917")]
		[Address(RVA = "0x1961FDC", Offset = "0x1961FDC", VA = "0x1961FDC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002918")]
		[Address(RVA = "0x196206C", Offset = "0x196206C", VA = "0x196206C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002919")]
		[Address(RVA = "0x1962090", Offset = "0x1962090", VA = "0x1962090")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600291A")]
		[Address(RVA = "0x1962110", Offset = "0x1962110", VA = "0x1962110", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600291B")]
		[Address(RVA = "0x1962118", Offset = "0x1962118", VA = "0x1962118")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600291C")]
		[Address(RVA = "0x1962238", Offset = "0x1962238", VA = "0x1962238", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600291D")]
		[Address(RVA = "0x1962330", Offset = "0x1962330", VA = "0x1962330")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600291E")]
		[Address(RVA = "0x19623C8", Offset = "0x19623C8", VA = "0x19623C8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600291F")]
		[Address(RVA = "0x19623D4", Offset = "0x19623D4", VA = "0x19623D4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x1962500", Offset = "0x1962500", VA = "0x1962500", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002921")]
		[Address(RVA = "0x196250C", Offset = "0x196250C", VA = "0x196250C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x19625B8", Offset = "0x19625B8", VA = "0x19625B8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002923")]
		[Address(RVA = "0x19625C4", Offset = "0x19625C4", VA = "0x19625C4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002924")]
		[Address(RVA = "0x1962670", Offset = "0x1962670", VA = "0x1962670", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002925")]
		[Address(RVA = "0x196267C", Offset = "0x196267C", VA = "0x196267C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002926")]
		[Address(RVA = "0x1962728", Offset = "0x1962728", VA = "0x1962728", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002927")]
		[Address(RVA = "0x1962734", Offset = "0x1962734", VA = "0x1962734")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x19627C4", Offset = "0x19627C4", VA = "0x19627C4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002929")]
		[Address(RVA = "0x19627E8", Offset = "0x19627E8", VA = "0x19627E8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600292A")]
		[Address(RVA = "0x1962868", Offset = "0x1962868", VA = "0x1962868", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600292B")]
		[Address(RVA = "0x1962870", Offset = "0x1962870", VA = "0x1962870")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600292C")]
		[Address(RVA = "0x1962918", Offset = "0x1962918", VA = "0x1962918", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600292D")]
		[Address(RVA = "0x1962924", Offset = "0x1962924", VA = "0x1962924")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600292E")]
		[Address(RVA = "0x19629CC", Offset = "0x19629CC", VA = "0x19629CC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600292F")]
		[Address(RVA = "0x19629DC", Offset = "0x19629DC", VA = "0x19629DC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002930")]
		[Address(RVA = "0x1962A6C", Offset = "0x1962A6C", VA = "0x1962A6C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0x1962A78", Offset = "0x1962A78", VA = "0x1962A78")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20005E7")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40026A8")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170003EF")]
		private IntPtr context
		{
			[Token(Token = "0x6002932")]
			[Address(RVA = "0x1340C34", Offset = "0x1340C34", VA = "0x1340C34")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002933")]
		[Address(RVA = "0x1340AFC", Offset = "0x1340AFC", VA = "0x1340AFC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002934")]
		[Address(RVA = "0x1340C98", Offset = "0x1340C98", VA = "0x1340C98")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002935")]
		[Address(RVA = "0x1340D28", Offset = "0x1340D28", VA = "0x1340D28", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002936")]
		[Address(RVA = "0x1340D4C", Offset = "0x1340D4C", VA = "0x1340D4C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x1340DDC", Offset = "0x1340DDC", VA = "0x1340DDC", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002938")]
		[Address(RVA = "0x1340E00", Offset = "0x1340E00", VA = "0x1340E00")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002939")]
		[Address(RVA = "0x1340E90", Offset = "0x1340E90", VA = "0x1340E90", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600293A")]
		[Address(RVA = "0x1340EB4", Offset = "0x1340EB4", VA = "0x1340EB4")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x1340F34", Offset = "0x1340F34", VA = "0x1340F34", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600293C")]
		[Address(RVA = "0x1340F3C", Offset = "0x1340F3C", VA = "0x1340F3C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x134105C", Offset = "0x134105C", VA = "0x134105C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600293E")]
		[Address(RVA = "0x1341154", Offset = "0x1341154", VA = "0x1341154")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600293F")]
		[Address(RVA = "0x13411EC", Offset = "0x13411EC", VA = "0x13411EC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002940")]
		[Address(RVA = "0x13411F8", Offset = "0x13411F8", VA = "0x13411F8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002941")]
		[Address(RVA = "0x1341324", Offset = "0x1341324", VA = "0x1341324", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002942")]
		[Address(RVA = "0x1341330", Offset = "0x1341330", VA = "0x1341330")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002943")]
		[Address(RVA = "0x13413DC", Offset = "0x13413DC", VA = "0x13413DC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002944")]
		[Address(RVA = "0x13413E8", Offset = "0x13413E8", VA = "0x13413E8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002945")]
		[Address(RVA = "0x1341494", Offset = "0x1341494", VA = "0x1341494", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002946")]
		[Address(RVA = "0x13414A0", Offset = "0x13414A0", VA = "0x13414A0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x134154C", Offset = "0x134154C", VA = "0x134154C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002948")]
		[Address(RVA = "0x1341558", Offset = "0x1341558", VA = "0x1341558")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002949")]
		[Address(RVA = "0x13415E8", Offset = "0x13415E8", VA = "0x13415E8", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600294A")]
		[Address(RVA = "0x134160C", Offset = "0x134160C", VA = "0x134160C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x134168C", Offset = "0x134168C", VA = "0x134168C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600294C")]
		[Address(RVA = "0x1341694", Offset = "0x1341694", VA = "0x1341694")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600294D")]
		[Address(RVA = "0x134173C", Offset = "0x134173C", VA = "0x134173C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600294E")]
		[Address(RVA = "0x1341748", Offset = "0x1341748", VA = "0x1341748")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600294F")]
		[Address(RVA = "0x13417F0", Offset = "0x13417F0", VA = "0x13417F0", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002950")]
		[Address(RVA = "0x1341800", Offset = "0x1341800", VA = "0x1341800")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002951")]
		[Address(RVA = "0x1341890", Offset = "0x1341890", VA = "0x1341890", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0x1340B8C", Offset = "0x1340B8C", VA = "0x1340B8C")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000055")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x134085C", Offset = "0x134085C", VA = "0x134085C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x13408CC", Offset = "0x13408CC", VA = "0x13408CC")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1340C24", Offset = "0x1340C24", VA = "0x1340C24")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000C0")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20005E8")]
	public enum Preset
	{
		[Token(Token = "0x40026AB")]
		Custom,
		[Token(Token = "0x40026AC")]
		AcousticTile,
		[Token(Token = "0x40026AD")]
		Brick,
		[Token(Token = "0x40026AE")]
		BrickPainted,
		[Token(Token = "0x40026AF")]
		Carpet,
		[Token(Token = "0x40026B0")]
		CarpetHeavy,
		[Token(Token = "0x40026B1")]
		CarpetHeavyPadded,
		[Token(Token = "0x40026B2")]
		CeramicTile,
		[Token(Token = "0x40026B3")]
		Concrete,
		[Token(Token = "0x40026B4")]
		ConcreteRough,
		[Token(Token = "0x40026B5")]
		ConcreteBlock,
		[Token(Token = "0x40026B6")]
		ConcreteBlockPainted,
		[Token(Token = "0x40026B7")]
		Curtain,
		[Token(Token = "0x40026B8")]
		Foliage,
		[Token(Token = "0x40026B9")]
		Glass,
		[Token(Token = "0x40026BA")]
		GlassHeavy,
		[Token(Token = "0x40026BB")]
		Grass,
		[Token(Token = "0x40026BC")]
		Gravel,
		[Token(Token = "0x40026BD")]
		GypsumBoard,
		[Token(Token = "0x40026BE")]
		PlasterOnBrick,
		[Token(Token = "0x40026BF")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40026C0")]
		Soil,
		[Token(Token = "0x40026C1")]
		SoundProof,
		[Token(Token = "0x40026C2")]
		Snow,
		[Token(Token = "0x40026C3")]
		Steel,
		[Token(Token = "0x40026C4")]
		Water,
		[Token(Token = "0x40026C5")]
		WoodThin,
		[Token(Token = "0x40026C6")]
		WoodThick,
		[Token(Token = "0x40026C7")]
		WoodFloor,
		[Token(Token = "0x40026C8")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20005E9")]
	public sealed class Point
	{
		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6002953")]
		[Address(RVA = "0x196DF88", Offset = "0x196DF88", VA = "0x196DF88")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0x196E0D0", Offset = "0x196E0D0", VA = "0x196E0D0")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0x196E140", Offset = "0x196E140", VA = "0x196E140")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20005EA")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA35994", Offset = "0xA35994")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000891")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA377E8", Offset = "0xA377E8")]
		private sealed class <>c
		{
			[Token(Token = "0x40030B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40030B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6003519")]
			[Address(RVA = "0x196E598", Offset = "0x196E598", VA = "0x196E598")]
			public <>c()
			{
			}

			[Token(Token = "0x600351A")]
			[Address(RVA = "0x196E5A0", Offset = "0x196E5A0", VA = "0x196E5A0")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x600351B")]
			[Address(RVA = "0x196E5B8", Offset = "0x196E5B8", VA = "0x196E5B8")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170003F0")]
		public float Item
		{
			[Token(Token = "0x6002956")]
			[Address(RVA = "0x196E178", Offset = "0x196E178", VA = "0x196E178")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0x196E058", Offset = "0x196E058", VA = "0x196E058")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA399D0", Offset = "0xA399D0")]
	public Spectrum absorption;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39A08", Offset = "0xA39A08")]
	public Spectrum transmission;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA39A40", Offset = "0xA39A40")]
	public Spectrum scattering;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000056")]
	public Preset preset
	{
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x1966170", Offset = "0x1966170", VA = "0x1966170")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x1966178", Offset = "0x1966178", VA = "0x1966178")]
		set
		{
		}
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x19661A0", Offset = "0x19661A0", VA = "0x19661A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1965AE0", Offset = "0x1965AE0", VA = "0x1965AE0")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1966768", Offset = "0x1966768", VA = "0x1966768")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x196676C", Offset = "0x196676C", VA = "0x196676C")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x19661A4", Offset = "0x19661A4", VA = "0x19661A4")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x196537C", Offset = "0x196537C", VA = "0x196537C")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1966854", Offset = "0x1966854", VA = "0x1966854")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1966CB4", Offset = "0x1966CB4", VA = "0x1966CB4")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1967114", Offset = "0x1967114", VA = "0x1967114")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1967574", Offset = "0x1967574", VA = "0x1967574")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x19679D4", Offset = "0x19679D4", VA = "0x19679D4")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1967E34", Offset = "0x1967E34", VA = "0x1967E34")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1968294", Offset = "0x1968294", VA = "0x1968294")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x19686F4", Offset = "0x19686F4", VA = "0x19686F4")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1968B54", Offset = "0x1968B54", VA = "0x1968B54")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1968FB4", Offset = "0x1968FB4", VA = "0x1968FB4")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1969414", Offset = "0x1969414", VA = "0x1969414")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1969874", Offset = "0x1969874", VA = "0x1969874")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1969CD4", Offset = "0x1969CD4", VA = "0x1969CD4")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x196A134", Offset = "0x196A134", VA = "0x196A134")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x196A58C", Offset = "0x196A58C", VA = "0x196A58C")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x196A9EC", Offset = "0x196A9EC", VA = "0x196A9EC")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x196AD28", Offset = "0x196AD28", VA = "0x196AD28")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x196B064", Offset = "0x196B064", VA = "0x196B064")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x196B4C4", Offset = "0x196B4C4", VA = "0x196B4C4")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x196B924", Offset = "0x196B924", VA = "0x196B924")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x196BD84", Offset = "0x196BD84", VA = "0x196BD84")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x196C0C0", Offset = "0x196C0C0", VA = "0x196C0C0")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x196C21C", Offset = "0x196C21C", VA = "0x196C21C")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x196C558", Offset = "0x196C558", VA = "0x196C558")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x196C9B0", Offset = "0x196C9B0", VA = "0x196C9B0")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x196CE10", Offset = "0x196CE10", VA = "0x196CE10")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x196D268", Offset = "0x196D268", VA = "0x196D268")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x196D6C8", Offset = "0x196D6C8", VA = "0x196D6C8")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x196DB28", Offset = "0x196DB28", VA = "0x196DB28")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x196DFC0", Offset = "0x196DFC0", VA = "0x196DFC0")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x196E5D0", Offset = "0x196E5D0", VA = "0x196E5D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x196E6A4", Offset = "0x196E6A4", VA = "0x196E6A4")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000C2")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000057")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000423")]
		[Address(RVA = "0x196EC60", Offset = "0x196EC60", VA = "0x196EC60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x196ED74", Offset = "0x196ED74", VA = "0x196ED74")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000C3")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40003EB")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000425")]
	[Address(RVA = "0x196ED84", Offset = "0x196ED84", VA = "0x196ED84")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x196EE1C", Offset = "0x196EE1C", VA = "0x196EE1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x196EF28", Offset = "0x196EF28", VA = "0x196EF28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x196EF2C", Offset = "0x196EF2C", VA = "0x196EF2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x196EF30", Offset = "0x196EF30", VA = "0x196EF30")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000C4")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20005EB")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x40003FB")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000401")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x123DC58", Offset = "0x123DC58", VA = "0x123DC58")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x123DC90", Offset = "0x123DC90", VA = "0x123DC90")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x123DE60", Offset = "0x123DE60", VA = "0x123DE60")]
	private void Start()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x123DF10", Offset = "0x123DF10", VA = "0x123DF10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x123E004", Offset = "0x123E004", VA = "0x123E004")]
	private void Update()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x123E96C", Offset = "0x123E96C", VA = "0x123E96C")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000430")]
	[Address(RVA = "0x123DEF4", Offset = "0x123DEF4", VA = "0x123DEF4")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000431")]
	[Address(RVA = "0x123DF74", Offset = "0x123DF74", VA = "0x123DF74")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000432")]
	[Address(RVA = "0x123E6D4", Offset = "0x123E6D4", VA = "0x123E6D4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000433")]
	[Address(RVA = "0x123E754", Offset = "0x123E754", VA = "0x123E754")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000434")]
	[Address(RVA = "0x123E7DC", Offset = "0x123E7DC", VA = "0x123E7DC")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000435")]
	[Address(RVA = "0x123E864", Offset = "0x123E864", VA = "0x123E864")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000436")]
	[Address(RVA = "0x123E8E4", Offset = "0x123E8E4", VA = "0x123E8E4")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000437")]
	[Address(RVA = "0x123F7A4", Offset = "0x123F7A4", VA = "0x123F7A4")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000438")]
	[Address(RVA = "0x123F84C", Offset = "0x123F84C", VA = "0x123F84C")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x123F8F4", Offset = "0x123F8F4", VA = "0x123F8F4")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000C5")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000C6")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x196E6B4", Offset = "0x196E6B4", VA = "0x196E6B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x196E6B8", Offset = "0x196E6B8", VA = "0x196E6B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x196E6BC", Offset = "0x196E6BC", VA = "0x196E6BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x196E824", Offset = "0x196E824", VA = "0x196E824")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x196E708", Offset = "0x196E708", VA = "0x196E708")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x196E798", Offset = "0x196E798", VA = "0x196E798")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x196E870", Offset = "0x196E870", VA = "0x196E870")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x196E908", Offset = "0x196E908", VA = "0x196E908")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x196EA70", Offset = "0x196EA70", VA = "0x196EA70")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x196EBD8", Offset = "0x196EBD8", VA = "0x196EBD8")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA32798", Offset = "0xA32798")]
public class iTweenPath : MonoBehaviour
{
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string pathName;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color pathColor;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> nodes;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int nodeCount;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, iTweenPath> paths;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool initialized;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string initialName;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool pathVisible;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1358F70", Offset = "0x1358F70", VA = "0x1358F70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x135905C", Offset = "0x135905C", VA = "0x135905C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x13590F8", Offset = "0x13590F8", VA = "0x13590F8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x13591D4", Offset = "0x13591D4", VA = "0x13591D4")]
	public static Vector3[] GetPath(string requestedName)
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1359334", Offset = "0x1359334", VA = "0x1359334")]
	public static Vector3[] GetPathReversed(string requestedName)
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1359504", Offset = "0x1359504", VA = "0x1359504")]
	public iTweenPath()
	{
	}
}
[Token(Token = "0x20000C8")]
public class qb_Group : MonoBehaviour
{
	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string groupName;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool visible;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool frozen;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1359678", Offset = "0x1359678", VA = "0x1359678")]
	public void AddObject(GameObject newObject)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x13596C8", Offset = "0x13596C8", VA = "0x13596C8")]
	public void Hide()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x13596D0", Offset = "0x13596D0", VA = "0x13596D0")]
	public void Show()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x13596DC", Offset = "0x13596DC", VA = "0x13596DC")]
	public void Freeze()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x13596E8", Offset = "0x13596E8", VA = "0x13596E8")]
	public void UnFreeze()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x13596F0", Offset = "0x13596F0", VA = "0x13596F0")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x135976C", Offset = "0x135976C", VA = "0x135976C")]
	public qb_Group()
	{
	}
}
[Token(Token = "0x20000C9")]
public class qb_Object : MonoBehaviour
{
	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1359774", Offset = "0x1359774", VA = "0x1359774")]
	public qb_Object()
	{
	}
}
[Token(Token = "0x20000CA")]
public class BonesOnlyBlendSystem : BlendSystem
{
	[Token(Token = "0x6000455")]
	[Address(RVA = "0x120A97C", Offset = "0x120A97C", VA = "0x120A97C", Slot = "6")]
	public override void OnVariableChanged()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x120A988", Offset = "0x120A988", VA = "0x120A988")]
	public BonesOnlyBlendSystem()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CB")]
public class GestureInstance
{
	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string gesture;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public AnimationClip clip;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string triggerName;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x12697CC", Offset = "0x12697CC", VA = "0x12697CC")]
	public GestureInstance(string gesture, AnimationClip clip, string triggerName)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x126980C", Offset = "0x126980C", VA = "0x126980C")]
	public bool IsValid(Animator animator)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000CC")]
public class AnimForTimeAction : CreatureAction
{
	[Token(Token = "0x20005EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA359CC", Offset = "0xA359CC")]
	private sealed class <ProcessAction>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimForTimeAction <>4__this;

		[Token(Token = "0x170003F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600295F")]
			[Address(RVA = "0x12960A0", Offset = "0x12960A0", VA = "0x12960A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002961")]
			[Address(RVA = "0x1296108", Offset = "0x1296108", VA = "0x1296108", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x1295ED4", Offset = "0x1295ED4", VA = "0x1295ED4")]
		[DebuggerHidden]
		public <ProcessAction>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0x1295F08", Offset = "0x1295F08", VA = "0x1295F08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0x1295F0C", Offset = "0x1295F0C", VA = "0x1295F0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0x12960A8", Offset = "0x12960A8", VA = "0x12960A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected string _animName;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected float _baseTime;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected float _timeRange;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected bool _blendAnim;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected float _blendTime;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected bool _isBool;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1295E64", Offset = "0x1295E64", VA = "0x1295E64", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E0DC", Offset = "0xA4E0DC")]
	protected override IEnumerator ProcessAction()
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1295F00", Offset = "0x1295F00", VA = "0x1295F00")]
	public AnimForTimeAction()
	{
	}
}
[Token(Token = "0x20000CD")]
public class CommandWaitAction : CreatureAction
{
	[Token(Token = "0x20005ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA359DC", Offset = "0xA359DC")]
	private sealed class <ProcessAction>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandWaitAction <>4__this;

		[Token(Token = "0x170003F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002965")]
			[Address(RVA = "0x1228AC0", Offset = "0x1228AC0", VA = "0x1228AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002967")]
			[Address(RVA = "0x1228B28", Offset = "0x1228B28", VA = "0x1228B28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x12285F0", Offset = "0x12285F0", VA = "0x12285F0")]
		[DebuggerHidden]
		public <ProcessAction>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0x122862C", Offset = "0x122862C", VA = "0x122862C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x1228630", Offset = "0x1228630", VA = "0x1228630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x1228AC8", Offset = "0x1228AC8", VA = "0x1228AC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected string _commandString;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected float _waitTime;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1228580", Offset = "0x1228580", VA = "0x1228580", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E140", Offset = "0xA4E140")]
	protected override IEnumerator ProcessAction()
	{
		return null;
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x122861C", Offset = "0x122861C", VA = "0x122861C")]
	public CommandWaitAction()
	{
	}
}
[Token(Token = "0x20000CE")]
public class MoveToTargetAction : CreatureAction
{
	[Token(Token = "0x20005EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA359EC", Offset = "0xA359EC")]
	private sealed class <ProcessAction>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveToTargetAction <>4__this;

		[Token(Token = "0x170003F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600296B")]
			[Address(RVA = "0x13376B0", Offset = "0x13376B0", VA = "0x13376B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600296D")]
			[Address(RVA = "0x1337718", Offset = "0x1337718", VA = "0x1337718", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x133754C", Offset = "0x133754C", VA = "0x133754C")]
		[DebuggerHidden]
		public <ProcessAction>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x1337580", Offset = "0x1337580", VA = "0x1337580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0x1337584", Offset = "0x1337584", VA = "0x1337584", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0x13376B8", Offset = "0x13376B8", VA = "0x13376B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected string _walkTarget;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected string _walkAnim;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x13374DC", Offset = "0x13374DC", VA = "0x13374DC", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E1A4", Offset = "0xA4E1A4")]
	protected override IEnumerator ProcessAction()
	{
		return null;
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1337578", Offset = "0x1337578", VA = "0x1337578")]
	public MoveToTargetAction()
	{
	}
}
[Token(Token = "0x20000CF")]
public class TurnToRotationAction : CreatureAction
{
	[Token(Token = "0x20005EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA359FC", Offset = "0xA359FC")]
	private sealed class <ProcessAction>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TurnToRotationAction <>4__this;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <maxTime>5__2;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <ct>5__3;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <currentTime>5__4;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <startY>5__5;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <processTarget>5__6;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool <isFacing>5__7;

		[Token(Token = "0x170003F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002971")]
			[Address(RVA = "0x140B418", Offset = "0x140B418", VA = "0x140B418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002973")]
			[Address(RVA = "0x140B480", Offset = "0x140B480", VA = "0x140B480", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x140B158", Offset = "0x140B158", VA = "0x140B158")]
		[DebuggerHidden]
		public <ProcessAction>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x140B194", Offset = "0x140B194", VA = "0x140B194", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0x140B198", Offset = "0x140B198", VA = "0x140B198", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x140B420", Offset = "0x140B420", VA = "0x140B420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _targetY;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float _turnSpeed;

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x140B0E8", Offset = "0x140B0E8", VA = "0x140B0E8", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E208", Offset = "0xA4E208")]
	protected override IEnumerator ProcessAction()
	{
		return null;
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x140B184", Offset = "0x140B184", VA = "0x140B184")]
	public TurnToRotationAction()
	{
	}
}
[Token(Token = "0x20000D0")]
public class TurnToTargetAction : CreatureAction
{
	[Token(Token = "0x20005F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35A0C", Offset = "0xA35A0C")]
	private sealed class <ProcessAction>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TurnToTargetAction <>4__this;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <target>5__2;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <ct>5__3;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <isFacing>5__4;

		[Token(Token = "0x170003F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002977")]
			[Address(RVA = "0x140B840", Offset = "0x140B840", VA = "0x140B840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002979")]
			[Address(RVA = "0x140B8A8", Offset = "0x140B8A8", VA = "0x140B8A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x140B4F8", Offset = "0x140B4F8", VA = "0x140B4F8")]
		[DebuggerHidden]
		public <ProcessAction>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x140B534", Offset = "0x140B534", VA = "0x140B534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x140B538", Offset = "0x140B538", VA = "0x140B538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x140B848", Offset = "0x140B848", VA = "0x140B848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _targetName;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _turnSpeed;

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x140B488", Offset = "0x140B488", VA = "0x140B488", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E26C", Offset = "0xA4E26C")]
	protected override IEnumerator ProcessAction()
	{
		return null;
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x140B524", Offset = "0x140B524", VA = "0x140B524")]
	public TurnToTargetAction()
	{
	}
}
[Token(Token = "0x20000D1")]
public class WaitForAnimAction : CreatureAction
{
	[Token(Token = "0x20005F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35A1C", Offset = "0xA35A1C")]
	private sealed class <ProcessAction>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaitForAnimAction <>4__this;

		[Token(Token = "0x170003FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600297D")]
			[Address(RVA = "0x134E67C", Offset = "0x134E67C", VA = "0x134E67C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600297F")]
			[Address(RVA = "0x134E6E4", Offset = "0x134E6E4", VA = "0x134E6E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x134E58C", Offset = "0x134E58C", VA = "0x134E58C")]
		[DebuggerHidden]
		public <ProcessAction>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x134E5C0", Offset = "0x134E5C0", VA = "0x134E5C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x134E5C4", Offset = "0x134E5C4", VA = "0x134E5C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x134E684", Offset = "0x134E684", VA = "0x134E684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string animName;

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x134E51C", Offset = "0x134E51C", VA = "0x134E51C", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E2D0", Offset = "0xA4E2D0")]
	protected override IEnumerator ProcessAction()
	{
		return null;
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x134E5B8", Offset = "0x134E5B8", VA = "0x134E5B8")]
	public WaitForAnimAction()
	{
	}
}
[Token(Token = "0x20000D2")]
public class AttackCreature : Creature
{
	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected Transform _projectileSpawnPoint;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	protected Collider _projectileHandCollider;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected GameObject _projectilePrefab;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Vector3 _targetPoint;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x129B4FC", Offset = "0x129B4FC", VA = "0x129B4FC", Slot = "14")]
	public virtual void ThrowProjectile()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x129B798", Offset = "0x129B798", VA = "0x129B798", Slot = "15")]
	public virtual void SpawnProjectile()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x129B84C", Offset = "0x129B84C", VA = "0x129B84C", Slot = "16")]
	public virtual void AcquireTargetPoint()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x129B8C4", Offset = "0x129B8C4", VA = "0x129B8C4")]
	public AttackCreature()
	{
	}
}
[Token(Token = "0x20000D3")]
public class BossSpirit : AttackCreature
{
	[Token(Token = "0x20005F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35A2C", Offset = "0xA35A2C")]
	private sealed class <WaitForIdleAndSwitch>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossSpirit <>4__this;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody <rb>5__2;

		[Token(Token = "0x170003FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002983")]
			[Address(RVA = "0x120CF84", Offset = "0x120CF84", VA = "0x120CF84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002985")]
			[Address(RVA = "0x120CFEC", Offset = "0x120CFEC", VA = "0x120CFEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x120C54C", Offset = "0x120C54C", VA = "0x120C54C")]
		[DebuggerHidden]
		public <WaitForIdleAndSwitch>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x120CCCC", Offset = "0x120CCCC", VA = "0x120CCCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x120CCD0", Offset = "0x120CCD0", VA = "0x120CCD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x120CF8C", Offset = "0x120CF8C", VA = "0x120CF8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35A3C", Offset = "0xA35A3C")]
	private sealed class <SlideItemToCenter>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossSpirit <>4__this;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <iT>5__2;

		[Token(Token = "0x170003FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002989")]
			[Address(RVA = "0x120CC5C", Offset = "0x120CC5C", VA = "0x120CC5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000400")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600298B")]
			[Address(RVA = "0x120CCC4", Offset = "0x120CCC4", VA = "0x120CCC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x120C6EC", Offset = "0x120C6EC", VA = "0x120C6EC")]
		[DebuggerHidden]
		public <SlideItemToCenter>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x120CA94", Offset = "0x120CA94", VA = "0x120CA94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x120CA98", Offset = "0x120CA98", VA = "0x120CA98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0x120CC64", Offset = "0x120CC64", VA = "0x120CC64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35A4C", Offset = "0xA35A4C")]
	private sealed class <DebugProjectileSequence>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossSpirit <>4__this;

		[Token(Token = "0x17000401")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600298F")]
			[Address(RVA = "0x120CA24", Offset = "0x120CA24", VA = "0x120CA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000402")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002991")]
			[Address(RVA = "0x120CA8C", Offset = "0x120CA8C", VA = "0x120CA8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0x120C928", Offset = "0x120C928", VA = "0x120C928")]
		[DebuggerHidden]
		public <DebugProjectileSequence>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0x120C964", Offset = "0x120C964", VA = "0x120C964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600298E")]
		[Address(RVA = "0x120C968", Offset = "0x120C968", VA = "0x120C968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x120CA2C", Offset = "0x120CA2C", VA = "0x120CA2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Transform _objectHoldPoint;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool holyFrozen;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool firstTime_NoHoly;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool _firstTimeSoloHoly;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
	[SerializeField]
	private bool _debugTestProjectile;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private NutriHoleSceneManager _sceneManager;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private List<GameObject> _parts;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _introPlaying;

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x120BA68", Offset = "0x120BA68", VA = "0x120BA68", Slot = "4")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x120BB2C", Offset = "0x120BB2C", VA = "0x120BB2C")]
	public void FinishIntro()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x120BB34", Offset = "0x120BB34", VA = "0x120BB34")]
	private void Update()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x120BB38", Offset = "0x120BB38", VA = "0x120BB38", Slot = "7")]
	public override void CollideWithObject(GameObject hitObject)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x120C14C", Offset = "0x120C14C", VA = "0x120C14C", Slot = "9")]
	public override void HitByWaterGun(WaterGun hitObject)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x120C198", Offset = "0x120C198", VA = "0x120C198", Slot = "8")]
	public override void TriggeredByObject(GameObject triggerObject)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x120C4DC", Offset = "0x120C4DC", VA = "0x120C4DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E334", Offset = "0xA4E334")]
	private IEnumerator WaitForIdleAndSwitch()
	{
		return null;
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x120C578", Offset = "0x120C578", VA = "0x120C578")]
	public void GrabItem()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x120C67C", Offset = "0x120C67C", VA = "0x120C67C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E398", Offset = "0xA4E398")]
	private IEnumerator SlideItemToCenter()
	{
		return null;
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x120C718", Offset = "0x120C718", VA = "0x120C718")]
	public void EatItem()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x120C784", Offset = "0x120C784", VA = "0x120C784")]
	public void CheckForDeathReady()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x120C7A0", Offset = "0x120C7A0", VA = "0x120C7A0")]
	public void TeleportMaxHome()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x120C7BC", Offset = "0x120C7BC", VA = "0x120C7BC")]
	private void DisableCreature()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x120C8B8", Offset = "0x120C8B8", VA = "0x120C8B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E3FC", Offset = "0xA4E3FC")]
	private IEnumerator DebugProjectileSequence()
	{
		return null;
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x120C954", Offset = "0x120C954", VA = "0x120C954")]
	public BossSpirit()
	{
	}
}
[Token(Token = "0x20000D4")]
public class HitBreak : StateBreak
{
	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _objectName;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _exactMatch;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _lastHit;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _lastHitObject;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool _useTrigger;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool _weakPointOnly;

	[Token(Token = "0x17000058")]
	public GameObject lastHitObject
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0x11A8B24", Offset = "0x11A8B24", VA = "0x11A8B24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public bool useTrigger
	{
		[Token(Token = "0x6000479")]
		[Address(RVA = "0x11A8B2C", Offset = "0x11A8B2C", VA = "0x11A8B2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005A")]
	public bool weakPointOnly
	{
		[Token(Token = "0x600047A")]
		[Address(RVA = "0x11A8B34", Offset = "0x11A8B34", VA = "0x11A8B34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x11A8B3C", Offset = "0x11A8B3C", VA = "0x11A8B3C", Slot = "4")]
	public override void ResetCondition()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x11A8B8C", Offset = "0x11A8B8C", VA = "0x11A8B8C")]
	public void SetHit(GameObject hitObject)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x11A8BC4", Offset = "0x11A8BC4", VA = "0x11A8BC4", Slot = "5")]
	public override bool CheckBreak()
	{
		return default(bool);
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x11A8C70", Offset = "0x11A8C70", VA = "0x11A8C70")]
	public HitBreak()
	{
	}
}
[Token(Token = "0x20000D5")]
public class HitGrabbableBreak : StateBreak
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<string> _exceptionNames;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _lastHit;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x11A8C78", Offset = "0x11A8C78", VA = "0x11A8C78", Slot = "4")]
	public override void ResetCondition()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x11A8CC8", Offset = "0x11A8CC8", VA = "0x11A8CC8")]
	public bool SetHit(GameObject hitObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x11A8DC4", Offset = "0x11A8DC4", VA = "0x11A8DC4", Slot = "5")]
	public override bool CheckBreak()
	{
		return default(bool);
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x11A8E30", Offset = "0x11A8E30", VA = "0x11A8E30")]
	public HitGrabbableBreak()
	{
	}
}
[Token(Token = "0x20000D6")]
public class LoseSightBreak : StateBreak
{
	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _lookPoint;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _targetName;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _targetTransform;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LayerMask _layerMask;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _lookDistance;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<string> _exceptionNames;

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x132F3C4", Offset = "0x132F3C4", VA = "0x132F3C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x132F450", Offset = "0x132F450", VA = "0x132F450", Slot = "4")]
	public override void ResetCondition()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x132F4EC", Offset = "0x132F4EC", VA = "0x132F4EC", Slot = "5")]
	public override bool CheckBreak()
	{
		return default(bool);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x132FAD8", Offset = "0x132FAD8", VA = "0x132FAD8")]
	public LoseSightBreak()
	{
	}
}
[Token(Token = "0x20000D7")]
public class ObjectHitBreak : StateBreak
{
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ObjectHitTest[] _hitObjects;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _collideName;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _exactMatch;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ObjectHitTest _triggeringObject;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform impactPoint;

	[Token(Token = "0x1700005B")]
	public ObjectHitTest triggeringObject
	{
		[Token(Token = "0x6000487")]
		[Address(RVA = "0x12AB6B4", Offset = "0x12AB6B4", VA = "0x12AB6B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x12AB6BC", Offset = "0x12AB6BC", VA = "0x12AB6BC", Slot = "4")]
	public override void ResetCondition()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x12AB798", Offset = "0x12AB798", VA = "0x12AB798", Slot = "5")]
	public override bool CheckBreak()
	{
		return default(bool);
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x12AB920", Offset = "0x12AB920", VA = "0x12AB920")]
	public ObjectHitBreak()
	{
	}
}
[Token(Token = "0x20000D8")]
public class ObjectHitTest : MonoBehaviour
{
	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lastHitObject;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 impactPoint;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x12AB928", Offset = "0x12AB928", VA = "0x12AB928")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x12AB9B0", Offset = "0x12AB9B0", VA = "0x12AB9B0")]
	public ObjectHitTest()
	{
	}
}
[Token(Token = "0x20000D9")]
public class CerealSpirit : AttackCreature
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject _boxPrefab;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EmptyCerealBox _activeBox;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Transform _holdPoint;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Transform _eye;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool didPlayerSneak;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private CreatureProjectile m_currProjectile;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject playerObj;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float fRange;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private NutriHoleSceneManager _sceneManager;

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1214880", Offset = "0x1214880", VA = "0x1214880", Slot = "4")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x121495C", Offset = "0x121495C", VA = "0x121495C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x1214EE0", Offset = "0x1214EE0", VA = "0x1214EE0")]
	public void GrabItem()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x121505C", Offset = "0x121505C", VA = "0x121505C")]
	public void OpenBox()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x12150F0", Offset = "0x12150F0", VA = "0x12150F0")]
	public void DropBox()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x12151CC", Offset = "0x12151CC", VA = "0x12151CC", Slot = "9")]
	public override void HitByWaterGun(WaterGun hitObject)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x1215378", Offset = "0x1215378", VA = "0x1215378", Slot = "7")]
	public override void CollideWithObject(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x12154B4", Offset = "0x12154B4", VA = "0x12154B4")]
	public CerealSpirit()
	{
	}
}
[Token(Token = "0x20000DA")]
public class Creature : MonoBehaviour
{
	[Token(Token = "0x20005F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35A5C", Offset = "0xA35A5C")]
	private sealed class <ProcessHitFlash>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Creature <>4__this;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x17000403")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002995")]
			[Address(RVA = "0x123231C", Offset = "0x123231C", VA = "0x123231C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000404")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002997")]
			[Address(RVA = "0x1232384", Offset = "0x1232384", VA = "0x1232384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x1231E28", Offset = "0x1231E28", VA = "0x1231E28")]
		[DebuggerHidden]
		public <ProcessHitFlash>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0x1232240", Offset = "0x1232240", VA = "0x1232240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0x1232244", Offset = "0x1232244", VA = "0x1232244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0x1232324", Offset = "0x1232324", VA = "0x1232324", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35A6C", Offset = "0xA35A6C")]
	private sealed class <ProcessMove>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Creature <>4__this;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetPoint;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <creatureT>5__2;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <targetDir>5__3;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool <isFacing>5__4;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <targetPos>5__5;

		[Token(Token = "0x17000405")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600299B")]
			[Address(RVA = "0x1232818", Offset = "0x1232818", VA = "0x1232818", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000406")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600299D")]
			[Address(RVA = "0x1232880", Offset = "0x1232880", VA = "0x1232880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x1232200", Offset = "0x1232200", VA = "0x1232200")]
		[DebuggerHidden]
		public <ProcessMove>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002999")]
		[Address(RVA = "0x123238C", Offset = "0x123238C", VA = "0x123238C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0x1232390", Offset = "0x1232390", VA = "0x1232390", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x1232820", Offset = "0x1232820", VA = "0x1232820", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Animator _anim;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected List<CreatureState> _states;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected CreatureState _currentState;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected GameObject _item;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected List<StateBreak> _breaks;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected string _queuedState;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected GameObject _lastHit;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float _lastHitCount;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	protected float _hitTrackingDuration;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected int _health;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SkinnedMeshRenderer _mesh;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material _mat;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, MethodInfo> _cachedMethods;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Task _spiritTask;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	protected float _moveSpeed;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected bool _isMoving;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected Transform _lookPoint;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private string _debugCommand;

	[Token(Token = "0x1700005C")]
	public CreatureState CurrentState
	{
		[Token(Token = "0x6000495")]
		[Address(RVA = "0x1230BF0", Offset = "0x1230BF0", VA = "0x1230BF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public bool isMoving
	{
		[Token(Token = "0x6000496")]
		[Address(RVA = "0x1230BF8", Offset = "0x1230BF8", VA = "0x1230BF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005E")]
	public Transform lookPoint
	{
		[Token(Token = "0x6000497")]
		[Address(RVA = "0x1230C00", Offset = "0x1230C00", VA = "0x1230C00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1230C08", Offset = "0x1230C08", VA = "0x1230C08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1230C14", Offset = "0x1230C14", VA = "0x1230C14")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1230DF8", Offset = "0x1230DF8", VA = "0x1230DF8", Slot = "4")]
	protected virtual void Initialize()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x12313E8", Offset = "0x12313E8", VA = "0x12313E8")]
	public void SetItem(GameObject newItem)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x12311C8", Offset = "0x12311C8", VA = "0x12311C8")]
	private void StartState(CreatureState state)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x1231738", Offset = "0x1231738", VA = "0x1231738", Slot = "5")]
	public virtual void SwitchToState(string stateName)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1230C18", Offset = "0x1230C18", VA = "0x1230C18")]
	protected void UpdateProcessing()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1231888", Offset = "0x1231888", VA = "0x1231888")]
	private void HandleStateCompleted()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1231940", Offset = "0x1231940", VA = "0x1231940")]
	private void HandleLoopCompleted()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1228700", Offset = "0x1228700", VA = "0x1228700")]
	public void InputCommand(string commandString)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x12319B4", Offset = "0x12319B4", VA = "0x12319B4")]
	protected void SkipToAction(string actionName)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1231BFC", Offset = "0x1231BFC", VA = "0x1231BFC", Slot = "6")]
	protected virtual void DestroyCreature(string info)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1231C78", Offset = "0x1231C78", VA = "0x1231C78")]
	public void TriggerAnimation(string animName)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1231C94", Offset = "0x1231C94", VA = "0x1231C94")]
	public void EnableBoolAnimation(string animName)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1231CB4", Offset = "0x1231CB4", VA = "0x1231CB4")]
	public void DisableBoolAnimation(string animName)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1231CD4", Offset = "0x1231CD4", VA = "0x1231CD4")]
	public void BlendAnimation(string animName, float blendTime = 1f)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1231CF0", Offset = "0x1231CF0", VA = "0x1231CF0")]
	public bool AnimIsPlaying(string animName)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1231D64", Offset = "0x1231D64", VA = "0x1231D64")]
	protected void HitFlash(Color color)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1231D90", Offset = "0x1231D90", VA = "0x1231D90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E460", Offset = "0xA4E460")]
	private IEnumerator ProcessHitFlash(Color color)
	{
		return null;
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1231E54", Offset = "0x1231E54", VA = "0x1231E54", Slot = "7")]
	public virtual void CollideWithObject(GameObject hitObject)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1231EE4", Offset = "0x1231EE4", VA = "0x1231EE4", Slot = "8")]
	public virtual void TriggeredByObject(GameObject triggerObject)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1231FF0", Offset = "0x1231FF0", VA = "0x1231FF0", Slot = "9")]
	public virtual void HitByWaterGun(WaterGun hitObject)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1231FF4", Offset = "0x1231FF4", VA = "0x1231FF4", Slot = "10")]
	public virtual void HitWeakPoint(GameObject hitObject, [Optional] GameObject weakPointHit)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1232084", Offset = "0x1232084", VA = "0x1232084", Slot = "11")]
	public virtual void StartMove(Transform targetPoint)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x12320BC", Offset = "0x12320BC", VA = "0x12320BC", Slot = "12")]
	public virtual void StartMove(string targetName)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1232184", Offset = "0x1232184", VA = "0x1232184", Slot = "13")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E4C4", Offset = "0xA4E4C4")]
	protected virtual IEnumerator ProcessMove(Transform targetPoint)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x123222C", Offset = "0x123222C", VA = "0x123222C")]
	public Creature()
	{
	}
}
[Token(Token = "0x20000DB")]
public class CreatureAction : MonoBehaviour
{
	[Token(Token = "0x20005F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35A7C", Offset = "0xA35A7C")]
	private sealed class <ProcessAction>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreatureAction <>4__this;

		[Token(Token = "0x17000407")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029A1")]
			[Address(RVA = "0x1232AC0", Offset = "0x1232AC0", VA = "0x1232AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000408")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029A3")]
			[Address(RVA = "0x1232B28", Offset = "0x1232B28", VA = "0x1232B28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0x1232950", Offset = "0x1232950", VA = "0x1232950")]
		[DebuggerHidden]
		public <ProcessAction>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0x1232A14", Offset = "0x1232A14", VA = "0x1232A14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0x1232A18", Offset = "0x1232A18", VA = "0x1232A18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x1232AC8", Offset = "0x1232AC8", VA = "0x1232AC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Creature _creature;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action actionComplete;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected string _endingCommand;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine _processing;

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1232888", Offset = "0x1232888", VA = "0x1232888", Slot = "4")]
	public virtual void Initialize(Creature creature)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1232890", Offset = "0x1232890", VA = "0x1232890")]
	public void TakeAction()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x12328CC", Offset = "0x12328CC", VA = "0x12328CC")]
	public void CancelAction()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x12328E0", Offset = "0x12328E0", VA = "0x12328E0", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E528", Offset = "0xA4E528")]
	protected virtual IEnumerator ProcessAction()
	{
		return null;
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x123297C", Offset = "0x123297C", VA = "0x123297C", Slot = "6")]
	protected virtual void CompleteAction()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1228624", Offset = "0x1228624", VA = "0x1228624")]
	public CreatureAction()
	{
	}
}
[Token(Token = "0x20000DC")]
public class CreatureAnimReceiver : MonoBehaviour
{
	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Creature _creature;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1232B30", Offset = "0x1232B30", VA = "0x1232B30")]
	public void Initialize(Creature creature)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1232B38", Offset = "0x1232B38", VA = "0x1232B38")]
	public void SendCommand(string command)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1232BDC", Offset = "0x1232BDC", VA = "0x1232BDC")]
	public CreatureAnimReceiver()
	{
	}
}
[Token(Token = "0x20000DD")]
public class CreatureState : MonoBehaviour
{
	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Creature _creature;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action stateComplete;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action loopCompleted;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<StateBreak> breakConditions;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected string _entryCommand;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected string _endingCommand;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected CreatureAction _introAction;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected bool _introCompleted;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected List<CreatureAction> _creatureActions;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected int _actionIndex;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	protected bool _looping;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	protected bool _isActive;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x12310A0", Offset = "0x12310A0", VA = "0x12310A0")]
	public void Initialize(Creature creature)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1231594", Offset = "0x1231594", VA = "0x1231594")]
	public void ExecuteState()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x12313F0", Offset = "0x12313F0", VA = "0x12313F0")]
	public void CancelStateExecution()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1233EB0", Offset = "0x1233EB0", VA = "0x1233EB0")]
	protected void TakeNextAction()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x12319CC", Offset = "0x12319CC", VA = "0x12319CC")]
	public void SkipToAction(string actionName)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x123425C", Offset = "0x123425C", VA = "0x123425C")]
	protected void SkipToAction(int index)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1234390", Offset = "0x1234390", VA = "0x1234390")]
	protected void HandleActionComplete()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1234570", Offset = "0x1234570", VA = "0x1234570")]
	public CreatureState()
	{
	}
}
[Token(Token = "0x20000DE")]
public class IceCreamSpirit : AttackCreature
{
	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Transform _holdPoint;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 _lastHandPosition;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private IceCreamContainer[] _containers;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Transform _openPoint;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private SlidingDoor _doorHeld;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _holdSteady;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int _containerIndex;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private NutriHoleSceneManager _sceneManager;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private AudioSource[] _idleSounds;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _idleCounter;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x13B9F6C", Offset = "0x13B9F6C", VA = "0x13B9F6C", Slot = "4")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x13BA030", Offset = "0x13BA030", VA = "0x13BA030")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x13BA1C4", Offset = "0x13BA1C4", VA = "0x13BA1C4")]
	public void GrabItemFromContainer()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x13BA3D4", Offset = "0x13BA3D4", VA = "0x13BA3D4")]
	public void DropHeldItem()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x13BA4C4", Offset = "0x13BA4C4", VA = "0x13BA4C4")]
	public void DropItemDestroy()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x13BA5EC", Offset = "0x13BA5EC", VA = "0x13BA5EC")]
	public void DestroyHeldItem()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x13BA6A0", Offset = "0x13BA6A0", VA = "0x13BA6A0")]
	public void ProcessFood()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x13BA8A8", Offset = "0x13BA8A8", VA = "0x13BA8A8")]
	public void SwitchContainer()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x13BA8DC", Offset = "0x13BA8DC", VA = "0x13BA8DC", Slot = "12")]
	public override void StartMove(string targetName)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x13BA9C0", Offset = "0x13BA9C0", VA = "0x13BA9C0")]
	public void GrabDoor(string grab)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x13BAB50", Offset = "0x13BAB50", VA = "0x13BAB50")]
	public void StartAggro()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x13BABFC", Offset = "0x13BABFC", VA = "0x13BABFC", Slot = "7")]
	public override void CollideWithObject(GameObject hitObject)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x13BAEB0", Offset = "0x13BAEB0", VA = "0x13BAEB0", Slot = "9")]
	public override void HitByWaterGun(WaterGun hitObject)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x13BAF0C", Offset = "0x13BAF0C", VA = "0x13BAF0C")]
	public IceCreamSpirit()
	{
	}
}
[Token(Token = "0x20000DF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA327D0", Offset = "0xA327D0")]
public class PrefabAnimSpawnData : ScriptableObject
{
	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PrefabPath;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string TransformParent;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 localPosition;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 localRotation;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 localScale;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float prefabAliveTime;

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x10B6450", Offset = "0x10B6450", VA = "0x10B6450")]
	public PrefabAnimSpawnData()
	{
	}
}
[Token(Token = "0x20000E0")]
public class PrologueMonster : AttackCreature
{
	[Token(Token = "0x20005F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35A8C", Offset = "0xA35A8C")]
	private sealed class <DelayedWPEnable>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PrologueMonster <>4__this;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool enable;

		[Token(Token = "0x17000409")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0x10B8834", Offset = "0x10B8834", VA = "0x10B8834", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029A9")]
			[Address(RVA = "0x10B889C", Offset = "0x10B889C", VA = "0x10B889C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x10B81AC", Offset = "0x10B81AC", VA = "0x10B81AC")]
		[DebuggerHidden]
		public <DelayedWPEnable>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0x10B86D0", Offset = "0x10B86D0", VA = "0x10B86D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0x10B86D4", Offset = "0x10B86D4", VA = "0x10B86D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0x10B883C", Offset = "0x10B883C", VA = "0x10B883C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Collider[] _projectileMouthColliders;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject _interceptTrigger;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RocketLauncherAmmo _incomingRocket;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private PrologueMonsterHead _targetedHead;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private StreetPrologueManager _prologueManager;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private List<PrologueMonsterHead> _monsterHeads;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<PrologueMonsterHead> _activeHeads;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private List<AudioClip> _growlSounds;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private AudioSource _roarSource;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _growlTimer;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private AudioSource _growlLoop;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x10B6A6C", Offset = "0x10B6A6C", VA = "0x10B6A6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x10B6B4C", Offset = "0x10B6B4C", VA = "0x10B6B4C", Slot = "4")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x10B6DC4", Offset = "0x10B6DC4", VA = "0x10B6DC4")]
	private void StartAttack()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x10B6EE0", Offset = "0x10B6EE0", VA = "0x10B6EE0", Slot = "14")]
	public override void ThrowProjectile()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x10B71F4", Offset = "0x10B71F4", VA = "0x10B71F4")]
	public void DefendWithHead()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x10B72F0", Offset = "0x10B72F0", VA = "0x10B72F0")]
	public void DestroyRocket()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x10B77FC", Offset = "0x10B77FC", VA = "0x10B77FC", Slot = "7")]
	public override void CollideWithObject(GameObject hitObject)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x10B7984", Offset = "0x10B7984", VA = "0x10B7984", Slot = "8")]
	public override void TriggeredByObject(GameObject triggerObject)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x10B7AFC", Offset = "0x10B7AFC", VA = "0x10B7AFC", Slot = "10")]
	public override void HitWeakPoint(GameObject hitObject, [Optional] GameObject weakPointHit)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x10B80C8", Offset = "0x10B80C8", VA = "0x10B80C8")]
	public void EnableWeakPoints()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x10B8118", Offset = "0x10B8118", VA = "0x10B8118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E58C", Offset = "0xA4E58C")]
	private IEnumerator DelayedWPEnable(float delay, bool enable)
	{
		return null;
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x10B6CB8", Offset = "0x10B6CB8", VA = "0x10B6CB8")]
	public void DisableWeakPoints()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x10B8288", Offset = "0x10B8288", VA = "0x10B8288")]
	public void ProjectileHitHandler(string hitName)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x10B833C", Offset = "0x10B833C", VA = "0x10B833C")]
	public bool RocketIncoming(RocketLauncherAmmo rla, string headTag)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x10B84D4", Offset = "0x10B84D4", VA = "0x10B84D4")]
	public void StartDistraction(string distractionName)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x10B7F18", Offset = "0x10B7F18", VA = "0x10B7F18")]
	public void DistractionSuccess(bool forceDead = false)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x10B8554", Offset = "0x10B8554", VA = "0x10B8554")]
	public void DistractionFailure()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x10B8570", Offset = "0x10B8570", VA = "0x10B8570")]
	public void PlayRandomGrowl()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x10B6B30", Offset = "0x10B6B30", VA = "0x10B6B30")]
	public void StopIdleGrowlLoop()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x10B86C8", Offset = "0x10B86C8", VA = "0x10B86C8")]
	public PrologueMonster()
	{
	}
}
[Token(Token = "0x20000E1")]
public class PrologueMonsterHead : MonoBehaviour
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool alive;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string headLabel;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] damageTargets;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider[] projectileMouthColliders;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform projectileSpawnPoint;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator mainAnim;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource growlSource;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource roarSource;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource painSource;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject normalHeadCollider;

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x10B88A4", Offset = "0x10B88A4", VA = "0x10B88A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x10B7E7C", Offset = "0x10B7E7C", VA = "0x10B7E7C")]
	public void DamageHead()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x10B88B0", Offset = "0x10B88B0", VA = "0x10B88B0")]
	private void DisableHead()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x10B81D8", Offset = "0x10B81D8", VA = "0x10B81D8")]
	public void EnableWeakPoints(bool enable)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x10B6E70", Offset = "0x10B6E70", VA = "0x10B6E70")]
	public void Attack()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x10B7280", Offset = "0x10B7280", VA = "0x10B7280")]
	public void Defend()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x10B84E0", Offset = "0x10B84E0", VA = "0x10B84E0")]
	public void Die()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x10B868C", Offset = "0x10B868C", VA = "0x10B868C")]
	public void PlayGrowl(AudioClip clip)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x10B8934", Offset = "0x10B8934", VA = "0x10B8934")]
	public PrologueMonsterHead()
	{
	}
}
[Token(Token = "0x20000E2")]
public class SnackSpirit : AttackCreature
{
	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject _bagPrefab;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CreatureProjectile _activeBag;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Collider _mouthCollider;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private List<string> _eatIgnores;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Conversation _hintConvo;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private NutriHoleSceneManager _sceneManager;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int _nonShakenSodaSwallowed;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool _hasOpenedMouthOnce;

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x11B4C68", Offset = "0x11B4C68", VA = "0x11B4C68", Slot = "4")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x11B4EE0", Offset = "0x11B4EE0", VA = "0x11B4EE0")]
	public void HandleIdleEntry()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x11B4E10", Offset = "0x11B4E10", VA = "0x11B4E10")]
	public void SpawnBag()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x11B4FB0", Offset = "0x11B4FB0", VA = "0x11B4FB0")]
	public void TossBag()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x11B505C", Offset = "0x11B505C", VA = "0x11B505C", Slot = "7")]
	public override void CollideWithObject(GameObject hitObject)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x11B5370", Offset = "0x11B5370", VA = "0x11B5370", Slot = "9")]
	public override void HitByWaterGun(WaterGun hitObject)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x11B5438", Offset = "0x11B5438", VA = "0x11B5438", Slot = "8")]
	public override void TriggeredByObject(GameObject triggerObject)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x11B578C", Offset = "0x11B578C", VA = "0x11B578C")]
	public void EnableMouthCollider()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x11B57AC", Offset = "0x11B57AC", VA = "0x11B57AC")]
	public void DisableMouthCollider()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x11B57E8", Offset = "0x11B57E8", VA = "0x11B57E8")]
	public void StartDeathSequence()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x11B5804", Offset = "0x11B5804", VA = "0x11B5804")]
	public void GiveHint()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x11B58DC", Offset = "0x11B58DC", VA = "0x11B58DC")]
	public SnackSpirit()
	{
	}
}
[Token(Token = "0x20000E3")]
public class StateBreak : MonoBehaviour
{
	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _toState;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _waitForStateComplete;

	[Token(Token = "0x1700005F")]
	public string toState
	{
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x11B7DF0", Offset = "0x11B7DF0", VA = "0x11B7DF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000060")]
	public bool waitForStateComplete
	{
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x11B7DF8", Offset = "0x11B7DF8", VA = "0x11B7DF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x11B7E00", Offset = "0x11B7E00", VA = "0x11B7E00", Slot = "4")]
	public virtual void ResetCondition()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x11B7E04", Offset = "0x11B7E04", VA = "0x11B7E04", Slot = "5")]
	public virtual bool CheckBreak()
	{
		return default(bool);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x11B7E0C", Offset = "0x11B7E0C", VA = "0x11B7E0C")]
	public StateBreak()
	{
	}
}
[Token(Token = "0x20000E4")]
public class TeddyTocks : MonoBehaviour
{
	[Token(Token = "0x20005F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35A9C", Offset = "0xA35A9C")]
	private sealed class <FlyUpSequence>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeddyTocks <>4__this;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <targetPos>5__2;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <targetRot>5__3;

		[Token(Token = "0x1700040B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029AD")]
			[Address(RVA = "0x10E77C4", Offset = "0x10E77C4", VA = "0x10E77C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0x10E782C", Offset = "0x10E782C", VA = "0x10E782C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0x10E6230", Offset = "0x10E6230", VA = "0x10E6230")]
		[DebuggerHidden]
		public <FlyUpSequence>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0x10E72CC", Offset = "0x10E72CC", VA = "0x10E72CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x10E72D0", Offset = "0x10E72D0", VA = "0x10E72D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0x10E77CC", Offset = "0x10E77CC", VA = "0x10E77CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35AAC", Offset = "0xA35AAC")]
	private sealed class <AttackSequence>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeddyTocks <>4__this;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <rand>5__2;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <targetPos>5__3;

		[Token(Token = "0x1700040D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029B3")]
			[Address(RVA = "0x10E6C20", Offset = "0x10E6C20", VA = "0x10E6C20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029B5")]
			[Address(RVA = "0x10E6C88", Offset = "0x10E6C88", VA = "0x10E6C88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0x10E62CC", Offset = "0x10E62CC", VA = "0x10E62CC")]
		[DebuggerHidden]
		public <AttackSequence>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0x10E65BC", Offset = "0x10E65BC", VA = "0x10E65BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0x10E65C0", Offset = "0x10E65C0", VA = "0x10E65C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0x10E6C28", Offset = "0x10E6C28", VA = "0x10E6C28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35ABC", Offset = "0xA35ABC")]
	private sealed class <DroneMovementSequence>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeddyTocks <>4__this;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <targetPos>5__2;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <targetRot>5__3;

		[Token(Token = "0x1700040F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029B9")]
			[Address(RVA = "0x10E725C", Offset = "0x10E725C", VA = "0x10E725C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000410")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029BB")]
			[Address(RVA = "0x10E72C4", Offset = "0x10E72C4", VA = "0x10E72C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0x10E6368", Offset = "0x10E6368", VA = "0x10E6368")]
		[DebuggerHidden]
		public <DroneMovementSequence>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0x10E6C90", Offset = "0x10E6C90", VA = "0x10E6C90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0x10E6C94", Offset = "0x10E6C94", VA = "0x10E6C94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0x10E7264", Offset = "0x10E7264", VA = "0x10E7264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35ACC", Offset = "0xA35ACC")]
	private sealed class <ToStandOffSequence>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeddyTocks <>4__this;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <targetPos>5__2;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <targetRot>5__3;

		[Token(Token = "0x17000411")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029BF")]
			[Address(RVA = "0x10E7D38", Offset = "0x10E7D38", VA = "0x10E7D38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000412")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x10E7DA0", Offset = "0x10E7DA0", VA = "0x10E7DA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x10E6500", Offset = "0x10E6500", VA = "0x10E6500")]
		[DebuggerHidden]
		public <ToStandOffSequence>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x10E7834", Offset = "0x10E7834", VA = "0x10E7834", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x10E7838", Offset = "0x10E7838", VA = "0x10E7838", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x10E7D40", Offset = "0x10E7D40", VA = "0x10E7D40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _t;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Character _character;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _flySpeed;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _flyUpPoint;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _flyOverPoint;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _flyDronePoint;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform _flyEndPoint;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] _tocksDropPoints;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _tocksDropIndex;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine _tocksSequence;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private CreatureProjectile _tocksProjectile;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CreatureProjectile _curProjectile;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _tocksProjectileSpawnPoint;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform _playerRef;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _firstDrop;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool playerIsOnRoof;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioSource _hoverTakeOff;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioSource _hoverLoop;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x10E6158", Offset = "0x10E6158", VA = "0x10E6158")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x10DEF74", Offset = "0x10DEF74", VA = "0x10DEF74")]
	public void FlyUpward()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x10E61C0", Offset = "0x10E61C0", VA = "0x10E61C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E5F0", Offset = "0xA4E5F0")]
	private IEnumerator FlyUpSequence()
	{
		return null;
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x10DF02C", Offset = "0x10DF02C", VA = "0x10DF02C")]
	public void StartAttackSequence()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x10E625C", Offset = "0x10E625C", VA = "0x10E625C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E654", Offset = "0xA4E654")]
	private IEnumerator AttackSequence()
	{
		return null;
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x10DF0A8", Offset = "0x10DF0A8", VA = "0x10DF0A8")]
	public void StartDroneSequence()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x10E62F8", Offset = "0x10E62F8", VA = "0x10E62F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E6B8", Offset = "0xA4E6B8")]
	private IEnumerator DroneMovementSequence()
	{
		return null;
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x10E6394", Offset = "0x10E6394", VA = "0x10E6394")]
	public void DropFirstBrick()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x10E639C", Offset = "0x10E639C", VA = "0x10E639C")]
	public void SignalDroneWave()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x10DF36C", Offset = "0x10DF36C", VA = "0x10DF36C")]
	public void EndDroneSequence()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x10E645C", Offset = "0x10E645C", VA = "0x10E645C")]
	public void MoveToStandOff()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x10E6490", Offset = "0x10E6490", VA = "0x10E6490")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E71C", Offset = "0xA4E71C")]
	private IEnumerator ToStandOffSequence()
	{
		return null;
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x10E652C", Offset = "0x10E652C", VA = "0x10E652C")]
	public void StopHoverSFX()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x10E6548", Offset = "0x10E6548", VA = "0x10E6548")]
	public void JumpToStandOffPoint()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x10E65AC", Offset = "0x10E65AC", VA = "0x10E65AC")]
	public TeddyTocks()
	{
	}
}
[Token(Token = "0x20000E5")]
public class Activity : MonoBehaviour
{
	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected CanvasGroup uiCanvasGroup;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected AnimationCurve fadeInCurve;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public TextMeshProUGUI m_ScoreText;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float curveValue;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected int targetAlpha;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float displayedDuration;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float displayLength;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int m_Score;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected bool didSucceed;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float _time;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public TextMeshProUGUI _timeText;

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x128EE00", Offset = "0x128EE00", VA = "0x128EE00")]
	public void ShowUI(bool show = true)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x128EE1C", Offset = "0x128EE1C", VA = "0x128EE1C", Slot = "4")]
	public virtual void AddScore(int score)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x128EEDC", Offset = "0x128EEDC", VA = "0x128EEDC")]
	public int ReportScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x128EE34", Offset = "0x128EE34", VA = "0x128EE34")]
	protected void UpdateText()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x128EF38", Offset = "0x128EF38", VA = "0x128EF38")]
	protected void UpdateTimeText()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x128F144", Offset = "0x128F144", VA = "0x128F144")]
	public Activity()
	{
	}
}
[Token(Token = "0x20000E6")]
public class ActivityManager : MonoBehaviour
{
	[Token(Token = "0x6000516")]
	[Address(RVA = "0x128F154", Offset = "0x128F154", VA = "0x128F154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x128F158", Offset = "0x128F158", VA = "0x128F158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x128F15C", Offset = "0x128F15C", VA = "0x128F15C")]
	public ActivityManager()
	{
	}
}
[Token(Token = "0x20000E7")]
public class AnswerMachine : MonoBehaviour
{
	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AnswerMachineConversationResolver convoResolver;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ButtonExt[] m_AnsweringMachine;

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x129794C", Offset = "0x129794C", VA = "0x129794C")]
	private void Start()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x12979C0", Offset = "0x12979C0", VA = "0x12979C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x1297B3C", Offset = "0x1297B3C", VA = "0x1297B3C")]
	public void OnButtonPressed()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x1297CC8", Offset = "0x1297CC8", VA = "0x1297CC8")]
	public AnswerMachine()
	{
	}
}
[Token(Token = "0x20000E8")]
public class BombCommand
{
	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Enums.WidgitType widgit;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Enums.BombTell tell;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isRealCommand;

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x1209E00", Offset = "0x1209E00", VA = "0x1209E00")]
	public BombCommand(Enums.WidgitType widgitUsed, Enums.BombTell tellUsed, bool isReal)
	{
	}
}
[Token(Token = "0x20000E9")]
public class BombTimer : MonoBehaviour
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BombTimer instance;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro _textField;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _countDown;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _timer;

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x1209E44", Offset = "0x1209E44", VA = "0x1209E44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x1209E98", Offset = "0x1209E98", VA = "0x1209E98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x1209F50", Offset = "0x1209F50", VA = "0x1209F50")]
	public void CountDownFrom(float setTime)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x1209F60", Offset = "0x1209F60", VA = "0x1209F60")]
	public void StopCountDown()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x1209F68", Offset = "0x1209F68", VA = "0x1209F68")]
	public BombTimer()
	{
	}
}
[Token(Token = "0x20000EA")]
public class DistanceWidgit : Widgit
{
	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string _objectName;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _target;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _t;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _checkDistance;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float _repeatDelay;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _activationCount;

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x13204BC", Offset = "0x13204BC", VA = "0x13204BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x1320508", Offset = "0x1320508", VA = "0x1320508")]
	private void Update()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x1320630", Offset = "0x1320630", VA = "0x1320630")]
	public DistanceWidgit()
	{
	}
}
[Token(Token = "0x20000EB")]
public class GrabWidgit : Widgit
{
	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Grabbable _grab;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool _wasHeld;

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x118F66C", Offset = "0x118F66C", VA = "0x118F66C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x118F678", Offset = "0x118F678", VA = "0x118F678", Slot = "4")]
	protected virtual void ProcessUpdates()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x118F6EC", Offset = "0x118F6EC", VA = "0x118F6EC", Slot = "5")]
	protected virtual void OnGrab()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x118F6F4", Offset = "0x118F6F4", VA = "0x118F6F4", Slot = "6")]
	protected virtual void OnRelease()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x118F6F8", Offset = "0x118F6F8", VA = "0x118F6F8")]
	public GrabWidgit()
	{
	}
}
[Token(Token = "0x20000EC")]
public class HeadBomb : MonoBehaviour
{
	[Token(Token = "0x20005FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35ADC", Offset = "0xA35ADC")]
	private sealed class <WaitAndPopOffPanels>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadBomb <>4__this;

		[Token(Token = "0x17000413")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x11A6A0C", Offset = "0x11A6A0C", VA = "0x11A6A0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000414")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029C7")]
			[Address(RVA = "0x11A6A74", Offset = "0x11A6A74", VA = "0x11A6A74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0x11A2E40", Offset = "0x11A2E40", VA = "0x11A2E40")]
		[DebuggerHidden]
		public <WaitAndPopOffPanels>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0x11A69B0", Offset = "0x11A69B0", VA = "0x11A69B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0x11A69B4", Offset = "0x11A69B4", VA = "0x11A69B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x11A6A14", Offset = "0x11A6A14", VA = "0x11A6A14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35AEC", Offset = "0xA35AEC")]
	private sealed class <PlayIntro>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadBomb <>4__this;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StreetTocksManager <stm>5__2;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BombsAwaySceneManager <basm>5__3;

		[Token(Token = "0x17000415")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029CB")]
			[Address(RVA = "0x11A6468", Offset = "0x11A6468", VA = "0x11A6468", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000416")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029CD")]
			[Address(RVA = "0x11A64D0", Offset = "0x11A64D0", VA = "0x11A64D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0x11A2E6C", Offset = "0x11A2E6C", VA = "0x11A2E6C")]
		[DebuggerHidden]
		public <PlayIntro>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0x11A5FC4", Offset = "0x11A5FC4", VA = "0x11A5FC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0x11A5FC8", Offset = "0x11A5FC8", VA = "0x11A5FC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0x11A6470", Offset = "0x11A6470", VA = "0x11A6470", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35AFC", Offset = "0xA35AFC")]
	private sealed class <DiscoPanelSetup>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadBomb <>4__this;

		[Token(Token = "0x17000417")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029D1")]
			[Address(RVA = "0x11A4250", Offset = "0x11A4250", VA = "0x11A4250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000418")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029D3")]
			[Address(RVA = "0x11A42B8", Offset = "0x11A42B8", VA = "0x11A42B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0x11A2F84", Offset = "0x11A2F84", VA = "0x11A2F84")]
		[DebuggerHidden]
		public <DiscoPanelSetup>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0x11A409C", Offset = "0x11A409C", VA = "0x11A409C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0x11A40A0", Offset = "0x11A40A0", VA = "0x11A40A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0x11A4258", Offset = "0x11A4258", VA = "0x11A4258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000600")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35B0C", Offset = "0xA35B0C")]
	private sealed class <ActivateWidgit>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Widgit widgit;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadBomb <>4__this;

		[Token(Token = "0x17000419")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029D7")]
			[Address(RVA = "0x11A3970", Offset = "0x11A3970", VA = "0x11A3970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029D9")]
			[Address(RVA = "0x11A39D8", Offset = "0x11A39D8", VA = "0x11A39D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0x11A2FB0", Offset = "0x11A2FB0", VA = "0x11A2FB0")]
		[DebuggerHidden]
		public <ActivateWidgit>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0x11A37BC", Offset = "0x11A37BC", VA = "0x11A37BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0x11A37C0", Offset = "0x11A37C0", VA = "0x11A37C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x11A3978", Offset = "0x11A3978", VA = "0x11A3978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000601")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35B1C", Offset = "0xA35B1C")]
	private sealed class <SignalFailure>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadBomb <>4__this;

		[Token(Token = "0x1700041B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029DD")]
			[Address(RVA = "0x11A67C4", Offset = "0x11A67C4", VA = "0x11A67C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029DF")]
			[Address(RVA = "0x11A682C", Offset = "0x11A682C", VA = "0x11A682C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0x11A304C", Offset = "0x11A304C", VA = "0x11A304C")]
		[DebuggerHidden]
		public <SignalFailure>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0x11A64D8", Offset = "0x11A64D8", VA = "0x11A64D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0x11A64DC", Offset = "0x11A64DC", VA = "0x11A64DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x11A67CC", Offset = "0x11A67CC", VA = "0x11A67CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000602")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35B2C", Offset = "0xA35B2C")]
	private sealed class <ExecuteCommandSequence>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadBomb <>4__this;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BombCommand <command>5__3;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <wasFailure>5__4;

		[Token(Token = "0x1700041D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029E3")]
			[Address(RVA = "0x11A576C", Offset = "0x11A576C", VA = "0x11A576C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029E5")]
			[Address(RVA = "0x11A57D4", Offset = "0x11A57D4", VA = "0x11A57D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x11A30E8", Offset = "0x11A30E8", VA = "0x11A30E8")]
		[DebuggerHidden]
		public <ExecuteCommandSequence>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x11A42C0", Offset = "0x11A42C0", VA = "0x11A42C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x11A42C4", Offset = "0x11A42C4", VA = "0x11A42C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x11A5774", Offset = "0x11A5774", VA = "0x11A5774", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000603")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35B3C", Offset = "0xA35B3C")]
	private sealed class <FlashEyeColor>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadBomb <>4__this;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x1700041F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029E9")]
			[Address(RVA = "0x11A5F54", Offset = "0x11A5F54", VA = "0x11A5F54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000420")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x11A5FBC", Offset = "0x11A5FBC", VA = "0x11A5FBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x11A334C", Offset = "0x11A334C", VA = "0x11A334C")]
		[DebuggerHidden]
		public <FlashEyeColor>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x11A5DFC", Offset = "0x11A5DFC", VA = "0x11A5DFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0x11A5E00", Offset = "0x11A5E00", VA = "0x11A5E00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0x11A5F5C", Offset = "0x11A5F5C", VA = "0x11A5F5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000604")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35B4C", Offset = "0xA35B4C")]
	private sealed class <BombArmed>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadBomb <>4__this;

		[Token(Token = "0x17000421")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029EF")]
			[Address(RVA = "0x11A3B54", Offset = "0x11A3B54", VA = "0x11A3B54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000422")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029F1")]
			[Address(RVA = "0x11A3BBC", Offset = "0x11A3BBC", VA = "0x11A3BBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0x11A33E8", Offset = "0x11A33E8", VA = "0x11A33E8")]
		[DebuggerHidden]
		public <BombArmed>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x11A39E0", Offset = "0x11A39E0", VA = "0x11A39E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0x11A39E4", Offset = "0x11A39E4", VA = "0x11A39E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x11A3B5C", Offset = "0x11A3B5C", VA = "0x11A3B5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000605")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35B5C", Offset = "0xA35B5C")]
	private sealed class <TriggerAnimationTell>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadBomb <>4__this;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string tell;

		[Token(Token = "0x17000423")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029F5")]
			[Address(RVA = "0x11A6940", Offset = "0x11A6940", VA = "0x11A6940", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000424")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029F7")]
			[Address(RVA = "0x11A69A8", Offset = "0x11A69A8", VA = "0x11A69A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x11A3414", Offset = "0x11A3414", VA = "0x11A3414")]
		[DebuggerHidden]
		public <TriggerAnimationTell>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x11A6834", Offset = "0x11A6834", VA = "0x11A6834", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x11A6838", Offset = "0x11A6838", VA = "0x11A6838", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x11A6948", Offset = "0x11A6948", VA = "0x11A6948", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000606")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35B6C", Offset = "0xA35B6C")]
	private sealed class <ExecuteInnerPanelSequence>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadBomb <>4__this;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InnerPanel panel;

		[Token(Token = "0x17000425")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029FB")]
			[Address(RVA = "0x11A5D8C", Offset = "0x11A5D8C", VA = "0x11A5D8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000426")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029FD")]
			[Address(RVA = "0x11A5DF4", Offset = "0x11A5DF4", VA = "0x11A5DF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x11A345C", Offset = "0x11A345C", VA = "0x11A345C")]
		[DebuggerHidden]
		public <ExecuteInnerPanelSequence>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x11A57DC", Offset = "0x11A57DC", VA = "0x11A57DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x11A57E0", Offset = "0x11A57E0", VA = "0x11A57E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x11A5D94", Offset = "0x11A5D94", VA = "0x11A5D94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000607")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35B7C", Offset = "0xA35B7C")]
	private sealed class <CallColors>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadBomb <>4__this;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool bypassTutorial;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<InnerPanelObject> panelObjects;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BombsAwaySceneManager <bmanager>5__2;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<InnerPanelObject>.Enumerator <>7__wrap2;

		[Token(Token = "0x17000427")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A02")]
			[Address(RVA = "0x11A402C", Offset = "0x11A402C", VA = "0x11A402C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000428")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A04")]
			[Address(RVA = "0x11A4094", Offset = "0x11A4094", VA = "0x11A4094", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x11A3514", Offset = "0x11A3514", VA = "0x11A3514")]
		[DebuggerHidden]
		public <CallColors>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x11A3BC4", Offset = "0x11A3BC4", VA = "0x11A3BC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x11A3C38", Offset = "0x11A3C38", VA = "0x11A3C38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x11A3BE0", Offset = "0x11A3BE0", VA = "0x11A3BE0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x11A4034", Offset = "0x11A4034", VA = "0x11A4034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GenericSceneManager _manager;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Grabbable _grab;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _wasHeld;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SkinnedMeshRenderer _headMesh;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color _baseEyeColor;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator _anim;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<GameObject> _outerPanels;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> _unactivatedPanels;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _firstPanelIndex;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _outerPopOff;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _popOffCount;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<InnerPanel> _innerPanels;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<Transform> _innerPanelPoints;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private List<Transform> _widgitPoints;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private List<Widgit> _headWidgits;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Widgit> _activeWidgits;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<Enums.WidgitType, Widgit> _widgitByEnum;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private string _commandStringBase;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Widgit _firstWidgit;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _introPlayed;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private List<string> _introDialogues;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private List<string> _defuseDialogues;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private List<string> _randomDialogues;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private List<string> _failureDialogues;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<string> _usedRandomDialogues;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<BombCommand> _commandSequence;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int _sequenceIndex;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int _sequencesCompleted;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private int _tellRepeatCount;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int _failureStreak;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<Enums.BombTell> _goodTells;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<Enums.BombTell> _previousGoodTells;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine _commandSequenceRoutine;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Coroutine _tellRoutine;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Coroutine _colorSequenceRoutine;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine _colorDialogueRoutine;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private string _commandResponse;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Color _colorResponse;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _commandTimer;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[SerializeField]
	private float _commandTime;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject _failExplosionVFX;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private bool _endAndResetOnFail;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	[SerializeField]
	private bool _isTutorialHead;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
	[SerializeField]
	private bool _isDiscoHead;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x153")]
	private bool _tutorialCompleted;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool _explainedBoopPoke;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
	[SerializeField]
	private bool _noInnerPanels;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x156")]
	[SerializeField]
	private bool _useTimer;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private BombTimer _bombTimer;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private GameObject _eyeGlow;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private GameObject _noseGlow;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool isBombArmed;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool _wireTutorialPlaying;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int _boopMisses;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int _pokeMisses;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private AudioSource m_BombArmed;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private AudioSource m_BombPing;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private AudioSource m_BombSmoke;

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x11A0E64", Offset = "0x11A0E64", VA = "0x11A0E64")]
	private void Start()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x11A1B98", Offset = "0x11A1B98", VA = "0x11A1B98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x11A2DD0", Offset = "0x11A2DD0", VA = "0x11A2DD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E780", Offset = "0xA4E780")]
	private IEnumerator WaitAndPopOffPanels()
	{
		return null;
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x11A1DA0", Offset = "0x11A1DA0", VA = "0x11A1DA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E7E4", Offset = "0xA4E7E4")]
	private IEnumerator PlayIntro()
	{
		return null;
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x11A28FC", Offset = "0x11A28FC", VA = "0x11A28FC")]
	private void PopOffOuterPanels()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x11A2F14", Offset = "0x11A2F14", VA = "0x11A2F14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E848", Offset = "0xA4E848")]
	private IEnumerator DiscoPanelSetup()
	{
		return null;
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x11A1E10", Offset = "0x11A1E10", VA = "0x11A1E10")]
	private InnerPanel PopOffOuterPanel(bool firstPanel = false)
	{
		return null;
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x11A1384", Offset = "0x11A1384", VA = "0x11A1384")]
	private void GenerateInnerPanels()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x11A2C20", Offset = "0x11A2C20", VA = "0x11A2C20")]
	private void CompleteInnerPanel(InnerPanel ip)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x11A2E98", Offset = "0x11A2E98", VA = "0x11A2E98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E8AC", Offset = "0xA4E8AC")]
	private IEnumerator ActivateWidgit(Widgit widgit)
	{
		return null;
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x11A2850", Offset = "0x11A2850", VA = "0x11A2850")]
	private void WidgitUsed(Enums.WidgitType widgitType)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x11A2FDC", Offset = "0x11A2FDC", VA = "0x11A2FDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E910", Offset = "0xA4E910")]
	private IEnumerator SignalFailure()
	{
		return null;
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x11A21A4", Offset = "0x11A21A4", VA = "0x11A21A4")]
	private void CreateCommandSequence(int sequenceLength, int goodTellCount = 1, int badTellCount = 2)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x11A3078", Offset = "0x11A3078", VA = "0x11A3078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E974", Offset = "0xA4E974")]
	private IEnumerator ExecuteCommandSequence()
	{
		return null;
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x11A3114", Offset = "0x11A3114", VA = "0x11A3114")]
	private void PlayTell(Enums.BombTell tell)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x11A3238", Offset = "0x11A3238", VA = "0x11A3238")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4E9D8", Offset = "0xA4E9D8")]
	private IEnumerator FlashEyeColor(Color color)
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x11A3378", Offset = "0x11A3378", VA = "0x11A3378")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EA3C", Offset = "0xA4EA3C")]
	private IEnumerator BombArmed()
	{
		return null;
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x11A32D0", Offset = "0x11A32D0", VA = "0x11A32D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EAA0", Offset = "0xA4EAA0")]
	private IEnumerator TriggerAnimationTell(string tell)
	{
		return null;
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x11A3440", Offset = "0x11A3440", VA = "0x11A3440")]
	private void ColorObjectUsed(Color colorUsed)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x11A2128", Offset = "0x11A2128", VA = "0x11A2128")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EB04", Offset = "0xA4EB04")]
	private IEnumerator ExecuteInnerPanelSequence(InnerPanel panel)
	{
		return null;
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x11A3488", Offset = "0x11A3488", VA = "0x11A3488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EB68", Offset = "0xA4EB68")]
	private IEnumerator CallColors(List<InnerPanelObject> panelObjects, bool bypassTutorial = false)
	{
		return null;
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x11A3540", Offset = "0x11A3540", VA = "0x11A3540")]
	private string GetColorDialogueString(Color color)
	{
		return null;
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x11A375C", Offset = "0x11A375C", VA = "0x11A375C")]
	public void HighlightEyes(bool glow)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x11A377C", Offset = "0x11A377C", VA = "0x11A377C")]
	public void HighlightNose(bool glow)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x11A379C", Offset = "0x11A379C", VA = "0x11A379C")]
	public HeadBomb()
	{
	}
}
[Token(Token = "0x20000ED")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3281C", Offset = "0xA3281C")]
public class HeadTriggerFade : MonoBehaviour
{
	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRScreenFade _fade;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x11A6A7C", Offset = "0x11A6A7C", VA = "0x11A6A7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x11A6AD4", Offset = "0x11A6AD4", VA = "0x11A6AD4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x11A6B6C", Offset = "0x11A6B6C", VA = "0x11A6B6C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x11A6C04", Offset = "0x11A6C04", VA = "0x11A6C04")]
	public HeadTriggerFade()
	{
	}
}
[Token(Token = "0x20000EE")]
public class InnerPanel : MonoBehaviour
{
	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InnerPanelObject[] _panelObjects;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _completeCount;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<Color> onColorObjectUsed;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<InnerPanel> onComplete;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Widgit hiddenWidgit;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Color> _possibleColors;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<InnerPanelObject> _openSequence;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool _debug;

	[Token(Token = "0x17000061")]
	public List<InnerPanelObject> openSequence
	{
		[Token(Token = "0x6000548")]
		[Address(RVA = "0x1149460", Offset = "0x1149460", VA = "0x1149460")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1149468", Offset = "0x1149468", VA = "0x1149468")]
	private void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1149878", Offset = "0x1149878", VA = "0x1149878")]
	private void Update()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x11497A4", Offset = "0x11497A4", VA = "0x11497A4")]
	public void EnablePanelInteractions(bool enable)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x11498C4", Offset = "0x11498C4", VA = "0x11498C4", Slot = "4")]
	protected virtual void ObjectCompleted(InnerPanelObject ipo)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1149984", Offset = "0x1149984", VA = "0x1149984", Slot = "5")]
	public virtual void ResetPanel()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x11499E8", Offset = "0x11499E8", VA = "0x11499E8")]
	private void WaitAndReset()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1149A64", Offset = "0x1149A64", VA = "0x1149A64")]
	public InnerPanel()
	{
	}
}
[Token(Token = "0x20000EF")]
public class InnerPanelObject : MonoBehaviour
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasBeenCompleted;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected string _tool;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected bool _hideOnComplete;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	protected bool _checkStay;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<InnerPanelObject> onComplete;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color componentColor;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource triggerSFX;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1149B64", Offset = "0x1149B64", VA = "0x1149B64", Slot = "4")]
	public virtual void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1149C20", Offset = "0x1149C20", VA = "0x1149C20", Slot = "5")]
	public virtual void ResetObject()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1149C4C", Offset = "0x1149C4C", VA = "0x1149C4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1149C8C", Offset = "0x1149C8C", VA = "0x1149C8C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1149CE0", Offset = "0x1149CE0", VA = "0x1149CE0", Slot = "6")]
	protected virtual void ProcessInteraction(GameObject otherObject)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1149DEC", Offset = "0x1149DEC", VA = "0x1149DEC")]
	public InnerPanelObject()
	{
	}
}
[Token(Token = "0x20000F0")]
public class PanelWire : InnerPanelObject
{
	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _cutResetDelay;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x124D16C", Offset = "0x124D16C", VA = "0x124D16C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x124D1AC", Offset = "0x124D1AC", VA = "0x124D1AC", Slot = "6")]
	protected override void ProcessInteraction(GameObject otherObject)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x124D2AC", Offset = "0x124D2AC", VA = "0x124D2AC")]
	public PanelWire()
	{
	}
}
[Token(Token = "0x20000F1")]
public class PlungeWidgit : GrabWidgit
{
	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float plungeValue;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x11445DC", Offset = "0x11445DC", VA = "0x11445DC")]
	public void OnPlunge(float val)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x1144610", Offset = "0x1144610", VA = "0x1144610")]
	public PlungeWidgit()
	{
	}
}
[Token(Token = "0x20000F2")]
public class Screw : InnerPanelObject
{
	[Token(Token = "0x2000608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35B8C", Offset = "0xA35B8C")]
	private sealed class <WaitAndAttach>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Screw <>4__this;

		[Token(Token = "0x17000429")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x11861EC", Offset = "0x11861EC", VA = "0x11861EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0x1186254", Offset = "0x1186254", VA = "0x1186254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0x1185880", Offset = "0x1185880", VA = "0x1185880")]
		[DebuggerHidden]
		public <WaitAndAttach>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0x1185C60", Offset = "0x1185C60", VA = "0x1185C60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A07")]
		[Address(RVA = "0x1185C64", Offset = "0x1185C64", VA = "0x1185C64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0x11861F4", Offset = "0x11861F4", VA = "0x11861F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000609")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35B9C", Offset = "0xA35B9C")]
	private sealed class <WaitAndRelease>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Screw <>4__this;

		[Token(Token = "0x1700042B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0x11866FC", Offset = "0x11866FC", VA = "0x11866FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A10")]
			[Address(RVA = "0x1186764", Offset = "0x1186764", VA = "0x1186764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0x1185C18", Offset = "0x1185C18", VA = "0x1185C18")]
		[DebuggerHidden]
		public <WaitAndRelease>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0x118625C", Offset = "0x118625C", VA = "0x118625C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0x1186260", Offset = "0x1186260", VA = "0x1186260", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0x1186704", Offset = "0x1186704", VA = "0x1186704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _t;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _startingParent;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _startingPosition;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 _startingRotation;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _rotationTarget;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ScrewDriverTip _sdt;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private InputBridge _input;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _hasAttached;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _isAttaching;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float _breakDistance;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform _screwDriverContainer;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Grabbable _fakeScrewDriver;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject _fakeScrew;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private HingeHelperExt m_ScrewHinge;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Grabber m_ScrewdriverHand;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private HeadBomb m_HeadBomb;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Rigidbody _rigidToManipulate;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 initPos;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Quaternion initRot;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float m_fPreviousAngle;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float m_fTotalRotation;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float m_fYOffset;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x11850D8", Offset = "0x11850D8", VA = "0x11850D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x1185240", Offset = "0x1185240", VA = "0x1185240", Slot = "4")]
	public override void SetColor(Color color)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x1185300", Offset = "0x1185300", VA = "0x1185300", Slot = "5")]
	public override void ResetObject()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x1185514", Offset = "0x1185514", VA = "0x1185514")]
	private void EnableCollider()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x1185578", Offset = "0x1185578", VA = "0x1185578")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x11856FC", Offset = "0x11856FC", VA = "0x11856FC", Slot = "6")]
	protected override void ProcessInteraction(GameObject otherObject)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x1185810", Offset = "0x1185810", VA = "0x1185810")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EBCC", Offset = "0xA4EBCC")]
	private IEnumerator WaitAndAttach()
	{
		return null;
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x11858AC", Offset = "0x11858AC", VA = "0x11858AC")]
	public void OnSnapChange(float yAngle)
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x1185BA8", Offset = "0x1185BA8", VA = "0x1185BA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EC30", Offset = "0xA4EC30")]
	private IEnumerator WaitAndRelease()
	{
		return null;
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x11856D0", Offset = "0x11856D0", VA = "0x11856D0")]
	private void Detach()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x1185C44", Offset = "0x1185C44", VA = "0x1185C44")]
	public Screw()
	{
	}
}
[Token(Token = "0x20000F3")]
public class ScrewDriverTip : MonoBehaviour
{
	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GrabbableExt grab;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public JointHelper jointLock;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationChange;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _lastRotation;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _t;

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x118676C", Offset = "0x118676C", VA = "0x118676C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x11867CC", Offset = "0x11867CC", VA = "0x11867CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x11868BC", Offset = "0x11868BC", VA = "0x11868BC")]
	public ScrewDriverTip()
	{
	}
}
[Token(Token = "0x20000F4")]
public class ShakeWidgit : Widgit
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Grabbable _headGrab;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _shaken;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _wasHeld;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _shakeOrReleaseCount;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _shakeProgress;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private int _shakeTarget;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _shakeDistance;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> _previousPositions;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int _positionCount;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private InputBridge _input;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x118A468", Offset = "0x118A468", VA = "0x118A468")]
	private void Start()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x118A55C", Offset = "0x118A55C", VA = "0x118A55C")]
	private void Update()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x118A8C0", Offset = "0x118A8C0", VA = "0x118A8C0")]
	public ShakeWidgit()
	{
	}
}
[Token(Token = "0x20000F5")]
public class TouchWidgit : Widgit
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string _objectName;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool _exactMatch;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected InputBridge _input;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _repeatDelay;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _activationCount;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x10F115C", Offset = "0x10F115C", VA = "0x10F115C")]
	private void Start()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x10F120C", Offset = "0x10F120C", VA = "0x10F120C")]
	private void Update()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x10F124C", Offset = "0x10F124C", VA = "0x10F124C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x10F151C", Offset = "0x10F151C", VA = "0x10F151C")]
	public TouchWidgit()
	{
	}
}
[Token(Token = "0x20000F6")]
public class TwistWidgit : GrabWidgit
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float twistThreshold;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x140B8B0", Offset = "0x140B8B0", VA = "0x140B8B0")]
	public void OnTwist(float val)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x140B8E4", Offset = "0x140B8E4", VA = "0x140B8E4")]
	public TwistWidgit()
	{
	}
}
[Token(Token = "0x20000F7")]
public class Widgit : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Enums.WidgitType widgitType;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<Enums.WidgitType> onUsed;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string commandDialogue;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource _onUseSFX;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected AudioSource _onEnableSFX;

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x134F754", Offset = "0x134F754", VA = "0x134F754")]
	protected void SignalUse()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x134F804", Offset = "0x134F804", VA = "0x134F804")]
	public void CollisionIgnore(Collider[] otherColliders)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x134F904", Offset = "0x134F904", VA = "0x134F904")]
	public void PlayEnableSFX()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x134F998", Offset = "0x134F998", VA = "0x134F998")]
	public Widgit()
	{
	}
}
[Token(Token = "0x20000F8")]
public class WireCutters : MonoBehaviour
{
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GrabbableExt _baseGrab;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _offHandle;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _openRot;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _closedRot;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isClosing;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _wasHeld;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _lastTriggerValue;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource _clipSound;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _clipPlayed;

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x134F9A0", Offset = "0x134F9A0", VA = "0x134F9A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x134FAB8", Offset = "0x134FAB8", VA = "0x134FAB8")]
	public void UpdateTriggerValue(float triggerValue)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x134FBD4", Offset = "0x134FBD4", VA = "0x134FBD4")]
	public WireCutters()
	{
	}
}
[Token(Token = "0x20000F9")]
public class YankWidgit : GrabWidgit
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float yankValue;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private BNG.Slider slider;

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1358F30", Offset = "0x1358F30", VA = "0x1358F30")]
	public void OnYank(float val)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1358F60", Offset = "0x1358F60", VA = "0x1358F60")]
	public YankWidgit()
	{
	}
}
[Token(Token = "0x20000FA")]
public class CerealBoxManager : ItemGroupManager
{
	[Token(Token = "0x200060A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35BAC", Offset = "0xA35BAC")]
	private sealed class <SpawnReplacement>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CerealBoxManager <>4__this;

		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 spawnPos;

		[Token(Token = "0x1700042D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0x1213F0C", Offset = "0x1213F0C", VA = "0x1213F0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A16")]
			[Address(RVA = "0x1213F74", Offset = "0x1213F74", VA = "0x1213F74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0x1213D24", Offset = "0x1213D24", VA = "0x1213D24")]
		[DebuggerHidden]
		public <SpawnReplacement>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0x1213D58", Offset = "0x1213D58", VA = "0x1213D58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0x1213D5C", Offset = "0x1213D5C", VA = "0x1213D5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0x1213F14", Offset = "0x1213F14", VA = "0x1213F14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _cerealPrefab;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 _spawnEuler;

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x1213B78", Offset = "0x1213B78", VA = "0x1213B78", Slot = "5")]
	public override void StatusUpdated(ManagedItem item)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x1213C90", Offset = "0x1213C90", VA = "0x1213C90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EC94", Offset = "0xA4EC94")]
	private IEnumerator SpawnReplacement(Vector3 spawnPos)
	{
		return null;
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1213D50", Offset = "0x1213D50", VA = "0x1213D50")]
	public CerealBoxManager()
	{
	}
}
[Token(Token = "0x20000FB")]
public class HolyWater : MonoBehaviour
{
	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource m_PourSFX;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource m_CapSFX;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem[] _holyWaterParticles;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpawnedGrabItem _spawnedGrab;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _bottleCap;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private JointDetection _capJoint;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _capOff;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _pouring;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x11A8E38", Offset = "0x11A8E38", VA = "0x11A8E38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x11A8EA8", Offset = "0x11A8EA8", VA = "0x11A8EA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x11A8F5C", Offset = "0x11A8F5C", VA = "0x11A8F5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x11A9154", Offset = "0x11A9154", VA = "0x11A9154")]
	private void SetPourState(bool pour)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x11A921C", Offset = "0x11A921C", VA = "0x11A921C")]
	public HolyWater()
	{
	}
}
[Token(Token = "0x20000FC")]
public class HolyWaterPour : MonoBehaviour
{
	[Token(Token = "0x6000583")]
	[Address(RVA = "0x11A9224", Offset = "0x11A9224", VA = "0x11A9224")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x11A92BC", Offset = "0x11A92BC", VA = "0x11A92BC")]
	public HolyWaterPour()
	{
	}
}
[Token(Token = "0x20000FD")]
public class MaxKnifeHelper : MonoBehaviour
{
	[Token(Token = "0x200060B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35BBC", Offset = "0xA35BBC")]
	private sealed class <GrabCompleteProcessor>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaxKnifeHelper <>4__this;

		[Token(Token = "0x1700042F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0x1330908", Offset = "0x1330908", VA = "0x1330908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000430")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0x1330970", Offset = "0x1330970", VA = "0x1330970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x133076C", Offset = "0x133076C", VA = "0x133076C")]
		[DebuggerHidden]
		public <GrabCompleteProcessor>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x13307A0", Offset = "0x13307A0", VA = "0x13307A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x13307A4", Offset = "0x13307A4", VA = "0x13307A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x1330910", Offset = "0x1330910", VA = "0x1330910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _trigger;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Character _max;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x13306B0", Offset = "0x13306B0", VA = "0x13306B0")]
	public void SetTriggerActive()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x13306D0", Offset = "0x13306D0", VA = "0x13306D0")]
	public void GrabObjectCompleted()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x13306FC", Offset = "0x13306FC", VA = "0x13306FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4ECF8", Offset = "0xA4ECF8")]
	private IEnumerator GrabCompleteProcessor()
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1330798", Offset = "0x1330798", VA = "0x1330798")]
	public MaxKnifeHelper()
	{
	}
}
[Token(Token = "0x20000FE")]
public class MilkAmmo : MonoBehaviour
{
	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider m_BoxCollider;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_MilkAmount;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_isAttached;

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x13340A0", Offset = "0x13340A0", VA = "0x13340A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1334110", Offset = "0x1334110", VA = "0x1334110")]
	public void Update()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x13341A0", Offset = "0x13341A0", VA = "0x13341A0")]
	public MilkAmmo()
	{
	}
}
[Token(Token = "0x20000FF")]
public class MilkAmmoSlot : MonoBehaviour
{
	[Token(Token = "0x200060C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35BCC", Offset = "0xA35BCC")]
	private sealed class <EjectMagRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable ejectedMag;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MilkAmmoSlot <>4__this;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <ejectRigid>5__2;

		[Token(Token = "0x17000431")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x133522C", Offset = "0x133522C", VA = "0x133522C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000432")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0x1335294", Offset = "0x1335294", VA = "0x1335294", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x1334C6C", Offset = "0x1334C6C", VA = "0x1334C6C")]
		[DebuggerHidden]
		public <EjectMagRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0x1334F04", Offset = "0x1334F04", VA = "0x1334F04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0x1334F08", Offset = "0x1334F08", VA = "0x1334F08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0x1335234", Offset = "0x1335234", VA = "0x1335234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] AcceptableMagazineNames;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GrabbableExt AttachedWeapon;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ClipSnapDistance;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ClipUnsnapDistance;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float EjectForce;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GrabbableExt HeldMagazine;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Collider HeldCollider;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float MagazineDistance;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool magazineInPlace;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool lockedInPlace;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip ClipAttachSound;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip ClipDetachSound;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaterGun parentWeapon;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GrabberArea grabClipArea;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private InputBridge input;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lastEjectTime;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_MilkQuantity;

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x13341B0", Offset = "0x13341B0", VA = "0x13341B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1334508", Offset = "0x1334508", VA = "0x1334508")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x13349D4", Offset = "0x13349D4", VA = "0x13349D4")]
	private void moveMagazine(Vector3 localPosition)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x133466C", Offset = "0x133466C", VA = "0x133466C")]
	private void checkGrabClipInput()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1334308", Offset = "0x1334308", VA = "0x1334308")]
	private void attachMagazine(bool shouldSound = true)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1334820", Offset = "0x1334820", VA = "0x1334820")]
	private Grabbable detachMagazine()
	{
		return null;
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1334BB8", Offset = "0x1334BB8", VA = "0x1334BB8")]
	public void EjectMagazine()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1334BF0", Offset = "0x1334BF0", VA = "0x1334BF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4ED5C", Offset = "0xA4ED5C")]
	private IEnumerator EjectMagRoutine(Grabbable ejectedMag)
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1334A28", Offset = "0x1334A28", VA = "0x1334A28")]
	public void OnGrabClipArea(Grabber grabbedBy)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1334C98", Offset = "0x1334C98", VA = "0x1334C98")]
	private bool isAcceptableName(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1334D24", Offset = "0x1334D24", VA = "0x1334D24")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1334EE0", Offset = "0x1334EE0", VA = "0x1334EE0")]
	public MilkAmmoSlot()
	{
	}
}
[Token(Token = "0x2000100")]
public class SneakTrigger : MonoBehaviour
{
	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CerealSpirit spirit;

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x11B58E4", Offset = "0x11B58E4", VA = "0x11B58E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x11B5978", Offset = "0x11B5978", VA = "0x11B5978")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x11B5A0C", Offset = "0x11B5A0C", VA = "0x11B5A0C")]
	public SneakTrigger()
	{
	}
}
[Token(Token = "0x2000101")]
public class RoachBehavior : MonoBehaviour
{
	[Token(Token = "0x200060D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35BDC", Offset = "0xA35BDC")]
	private sealed class <WaitAndWalk>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoachBehavior <>4__this;

		[Token(Token = "0x17000433")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x10BE948", Offset = "0x10BE948", VA = "0x10BE948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000434")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A28")]
			[Address(RVA = "0x10BE9B0", Offset = "0x10BE9B0", VA = "0x10BE9B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0x10BE6E4", Offset = "0x10BE6E4", VA = "0x10BE6E4")]
		[DebuggerHidden]
		public <WaitAndWalk>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0x10BE87C", Offset = "0x10BE87C", VA = "0x10BE87C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A25")]
		[Address(RVA = "0x10BE880", Offset = "0x10BE880", VA = "0x10BE880", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0x10BE950", Offset = "0x10BE950", VA = "0x10BE950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RoachControl rControl;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RoachLinkedList currentNode;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator anim;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ShootingConversationResolver convoResolver;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float fPathingCancel;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isPathing;

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x10BDE7C", Offset = "0x10BDE7C", VA = "0x10BDE7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x10BE074", Offset = "0x10BE074", VA = "0x10BE074")]
	private void Update()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x10BDFB0", Offset = "0x10BDFB0", VA = "0x10BDFB0")]
	public void SetNextPoint()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x10BE238", Offset = "0x10BE238", VA = "0x10BE238")]
	public void MoveToNextPoint()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x10BE674", Offset = "0x10BE674", VA = "0x10BE674")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EDC0", Offset = "0xA4EDC0")]
	private IEnumerator WaitAndWalk()
	{
		return null;
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x10BE710", Offset = "0x10BE710", VA = "0x10BE710")]
	public void SquashRoach()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x10BE7A4", Offset = "0x10BE7A4", VA = "0x10BE7A4")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x10BE874", Offset = "0x10BE874", VA = "0x10BE874")]
	public RoachBehavior()
	{
	}
}
[Serializable]
[Token(Token = "0x2000102")]
public struct RoachLinkedList
{
	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Transform position;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Transform[] connections;
}
[Token(Token = "0x2000103")]
public class RoachControl : MonoBehaviour
{
	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoachLinkedList[] points;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoachLinkedList[] startPoints;

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x10BE14C", Offset = "0x10BE14C", VA = "0x10BE14C")]
	public RoachLinkedList GetNode(Transform currentNode)
	{
		return default(RoachLinkedList);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x10BE9B8", Offset = "0x10BE9B8", VA = "0x10BE9B8")]
	public RoachControl()
	{
	}
}
[Token(Token = "0x2000104")]
public class Coffee : MonoBehaviour
{
	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Grabbable m_Mug;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator m_Coffee;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_SpillVFX;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hasBeenGrabbed;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CoffeeConversationResolver convoResolver;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hasBeenPlaced;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool hasCoffee;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool hasSugar;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool hasMilk;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int coffeeCount;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int milkCount;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int sugarCount;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool doOnce;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool playAndWait;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float fSpillTime;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool hasBeenGrabbedEmpty;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool interruptedOnce;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool explainedCoffee;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool didCheck;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool waitingToBeHeld;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool doOnceHeld;

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1221F90", Offset = "0x1221F90", VA = "0x1221F90")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x1222004", Offset = "0x1222004", VA = "0x1222004")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1222620", Offset = "0x1222620", VA = "0x1222620")]
	public void FillWithCoffee()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x1222698", Offset = "0x1222698", VA = "0x1222698")]
	public void PlacedInCoffeMachine()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x1222784", Offset = "0x1222784", VA = "0x1222784")]
	private void ResetSpillVFX()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x122281C", Offset = "0x122281C", VA = "0x122281C")]
	private bool CheckSuccessState()
	{
		return default(bool);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x1222528", Offset = "0x1222528", VA = "0x1222528")]
	private bool CheckIfEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x122285C", Offset = "0x122285C", VA = "0x122285C")]
	public void OnCoffeeReset()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1222868", Offset = "0x1222868", VA = "0x1222868")]
	private void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x12228F0", Offset = "0x12228F0", VA = "0x12228F0")]
	private void OnTriggerStay(Collider collision)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1222E7C", Offset = "0x1222E7C", VA = "0x1222E7C")]
	public void EnableGrabbing(float time = 0f)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1222F64", Offset = "0x1222F64", VA = "0x1222F64")]
	private void WaitAndEnable()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1222FE4", Offset = "0x1222FE4", VA = "0x1222FE4")]
	public Coffee()
	{
	}
}
[Token(Token = "0x2000105")]
public class CoffeeMachine : MonoBehaviour
{
	[Token(Token = "0x200060E")]
	public enum PouringOption
	{
		[Token(Token = "0x400275F")]
		Coffee,
		[Token(Token = "0x4002760")]
		Milk,
		[Token(Token = "0x4002761")]
		Sugar
	}

	[Token(Token = "0x200060F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35BEC", Offset = "0xA35BEC")]
	private sealed class <PourOption>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoffeeMachine <>4__this;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject choice;

		[Token(Token = "0x17000435")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0x122410C", Offset = "0x122410C", VA = "0x122410C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000436")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0x1224174", Offset = "0x1224174", VA = "0x1224174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0x1223A1C", Offset = "0x1223A1C", VA = "0x1223A1C")]
		[DebuggerHidden]
		public <PourOption>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0x1224018", Offset = "0x1224018", VA = "0x1224018", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0x122401C", Offset = "0x122401C", VA = "0x122401C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0x1224114", Offset = "0x1224114", VA = "0x1224114", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject coffee;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject milk;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sugar;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool mugInPlace;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool pouredCoffee;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool isPouring;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public PouringOption pouringOption;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coffee m_CoffeeMug;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ButtonExt[] m_CoffeeButtons;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource m_SugarPourSFX;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource m_CoffeePourSFX;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource m_MilkPourSFX;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshPro m_CoffeeCounter;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro m_MilkCounter;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro m_SugarCounter;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Coffee m_Mug;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool hasCooldownPassed;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float fCooldownTimer;

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x1223688", Offset = "0x1223688", VA = "0x1223688")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x12239A0", Offset = "0x12239A0", VA = "0x12239A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EE24", Offset = "0xA4EE24")]
	private IEnumerator PourOption(GameObject choice)
	{
		return null;
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1223A48", Offset = "0x1223A48", VA = "0x1223A48")]
	private void DisablePourOptions()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1223AA0", Offset = "0x1223AA0", VA = "0x1223AA0")]
	public void Pour()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1223BF4", Offset = "0x1223BF4", VA = "0x1223BF4")]
	public void Milk()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1223CF8", Offset = "0x1223CF8", VA = "0x1223CF8")]
	public void Sugar()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x1223DFC", Offset = "0x1223DFC", VA = "0x1223DFC")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1223EC0", Offset = "0x1223EC0", VA = "0x1223EC0")]
	private void OnTriggerStay(Collider collider)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x1223F84", Offset = "0x1223F84", VA = "0x1223F84")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x1224010", Offset = "0x1224010", VA = "0x1224010")]
	public CoffeeMachine()
	{
	}
}
[Token(Token = "0x2000106")]
public class DartBoardActivity : Activity
{
	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DartboardConversationResolver convoResolver;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject m_ThrowableMax;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject m_RealMax;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject throwUIHelper;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool shownHelper;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform DartboardCenter;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool shouldFadeOut;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool doOnce;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool scoreOnce;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int timesHit;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float _waitAndCompleteTimer;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Grabbable _maxGrab;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _dartsCompleted;

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1236B44", Offset = "0x1236B44", VA = "0x1236B44")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x1236BE8", Offset = "0x1236BE8", VA = "0x1236BE8", Slot = "4")]
	public override void AddScore(int score)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1236C18", Offset = "0x1236C18", VA = "0x1236C18")]
	public void WaitForCompletion()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1236CD0", Offset = "0x1236CD0", VA = "0x1236CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1237078", Offset = "0x1237078", VA = "0x1237078")]
	public DartBoardActivity()
	{
	}
}
[Token(Token = "0x2000107")]
public class GlobManager : MonoBehaviour
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SetRandomColor[] m_Globs;

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x126A9A4", Offset = "0x126A9A4", VA = "0x126A9A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x126AFC8", Offset = "0x126AFC8", VA = "0x126AFC8")]
	public GlobManager()
	{
	}
}
[Token(Token = "0x2000108")]
public class HandshakeTrigger : MonoBehaviour
{
	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DiscoExteriorSceneManager _disco;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Enums.Handshakes _shakeType;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _recogTime;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _recognitionTimer;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _lastStayTime;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isInArea;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabber _hand;

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1196030", Offset = "0x1196030", VA = "0x1196030")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x11960E8", Offset = "0x11960E8", VA = "0x11960E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x1196180", Offset = "0x1196180", VA = "0x1196180")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x11962D4", Offset = "0x11962D4", VA = "0x11962D4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x11963C4", Offset = "0x11963C4", VA = "0x11963C4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x11964B8", Offset = "0x11964B8", VA = "0x11964B8")]
	public HandshakeTrigger()
	{
	}
}
[Token(Token = "0x2000109")]
public class DriveActivityController : MonoBehaviour
{
	[Token(Token = "0x2000610")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35BFC", Offset = "0xA35BFC")]
	private sealed class <TimerCheck>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000437")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A32")]
			[Address(RVA = "0x13F0A58", Offset = "0x13F0A58", VA = "0x13F0A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000438")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A34")]
			[Address(RVA = "0x13F0AC0", Offset = "0x13F0AC0", VA = "0x13F0AC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0x13F0328", Offset = "0x13F0328", VA = "0x13F0328")]
		[DebuggerHidden]
		public <TimerCheck>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0x13F0994", Offset = "0x13F0994", VA = "0x13F0994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0x13F0998", Offset = "0x13F0998", VA = "0x13F0998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0x13F0A60", Offset = "0x13F0A60", VA = "0x13F0A60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DriveActivityController _instance;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _activityContainer;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _projectileContainer;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isMoving;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _driveForwardSpeed;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _strafeSpeed;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _strafeMax;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _sideDistanceLock;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _wheelTransform;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _wheelRotation;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform _lightObject;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _lightSpeed;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float _driveTime;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _timePassed;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform _samIcon;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _startIconZ;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _endIconZ;

	[Token(Token = "0x17000062")]
	public static Transform ACTIVITY_CONTAINER
	{
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x13F01AC", Offset = "0x13F01AC", VA = "0x13F01AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000063")]
	public static Transform PROJECTILE_CONTAINER
	{
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x13F0208", Offset = "0x13F0208", VA = "0x13F0208")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x13F0264", Offset = "0x13F0264", VA = "0x13F0264")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x13F02C8", Offset = "0x13F02C8", VA = "0x13F02C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EE88", Offset = "0xA4EE88")]
	private IEnumerator TimerCheck()
	{
		return null;
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x13F0354", Offset = "0x13F0354", VA = "0x13F0354")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x13F04A0", Offset = "0x13F04A0", VA = "0x13F04A0")]
	private void UpdateWheel()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x13F051C", Offset = "0x13F051C", VA = "0x13F051C")]
	private void UpdateMovement()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x13F084C", Offset = "0x13F084C", VA = "0x13F084C")]
	private void UpdateLight()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x13F0964", Offset = "0x13F0964", VA = "0x13F0964")]
	public DriveActivityController()
	{
	}
}
[Token(Token = "0x200010A")]
public class DriveCollisionLink : MonoBehaviour
{
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DriveObstacle _do;

	[Token(Token = "0x17000064")]
	public DriveObstacle parentObstacle
	{
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x13F0AC8", Offset = "0x13F0AC8", VA = "0x13F0AC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x13F0AD0", Offset = "0x13F0AD0", VA = "0x13F0AD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x13F0C00", Offset = "0x13F0C00", VA = "0x13F0C00")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x13F0CE4", Offset = "0x13F0CE4", VA = "0x13F0CE4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x13F0DC8", Offset = "0x13F0DC8", VA = "0x13F0DC8")]
	public DriveCollisionLink()
	{
	}
}
[Token(Token = "0x200010B")]
public class DriveController : MonoBehaviour
{
	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputBridge _input;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _carTransform;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _strafeSpeed;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Grabbable _steeringWheel;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _wheelTransform;

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x13F0DD0", Offset = "0x13F0DD0", VA = "0x13F0DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x13F0E58", Offset = "0x13F0E58", VA = "0x13F0E58")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x13F0E5C", Offset = "0x13F0E5C", VA = "0x13F0E5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x13F0E78", Offset = "0x13F0E78", VA = "0x13F0E78")]
	private void MoveCar(float wheelAngle)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x13F1008", Offset = "0x13F1008", VA = "0x13F1008")]
	public DriveController()
	{
	}
}
[Token(Token = "0x200010C")]
public class DriveEnemy : DriveObstacle
{
	[Token(Token = "0x2000611")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35C0C", Offset = "0xA35C0C")]
	private sealed class <ShotSequence>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DriveEnemy <>4__this;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <rimLightValue>5__2;

		[Token(Token = "0x17000439")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0x13F27B0", Offset = "0x13F27B0", VA = "0x13F27B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0x13F2818", Offset = "0x13F2818", VA = "0x13F2818", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0x13F1754", Offset = "0x13F1754", VA = "0x13F1754")]
		[DebuggerHidden]
		public <ShotSequence>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0x13F25C8", Offset = "0x13F25C8", VA = "0x13F25C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0x13F25CC", Offset = "0x13F25CC", VA = "0x13F25CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0x13F27B8", Offset = "0x13F27B8", VA = "0x13F27B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000612")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35C1C", Offset = "0xA35C1C")]
	private sealed class <ShootProjectile>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DriveEnemy <>4__this;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <playerPos>5__2;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CreatureProjectile <projectile>5__3;

		[Token(Token = "0x1700043B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0x13F23E4", Offset = "0x13F23E4", VA = "0x13F23E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A40")]
			[Address(RVA = "0x13F244C", Offset = "0x13F244C", VA = "0x13F244C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0x13F1B6C", Offset = "0x13F1B6C", VA = "0x13F1B6C")]
		[DebuggerHidden]
		public <ShootProjectile>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0x13F20CC", Offset = "0x13F20CC", VA = "0x13F20CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0x13F20D0", Offset = "0x13F20D0", VA = "0x13F20D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0x13F23EC", Offset = "0x13F23EC", VA = "0x13F23EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000613")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35C2C", Offset = "0xA35C2C")]
	private sealed class <ShootProjectileSequence>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DriveEnemy <>4__this;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700043D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0x13F2558", Offset = "0x13F2558", VA = "0x13F2558", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A46")]
			[Address(RVA = "0x13F25C0", Offset = "0x13F25C0", VA = "0x13F25C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0x13F1C08", Offset = "0x13F1C08", VA = "0x13F1C08")]
		[DebuggerHidden]
		public <ShootProjectileSequence>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0x13F2454", Offset = "0x13F2454", VA = "0x13F2454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0x13F2458", Offset = "0x13F2458", VA = "0x13F2458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0x13F2560", Offset = "0x13F2560", VA = "0x13F2560", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000614")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35C3C", Offset = "0xA35C3C")]
	private sealed class <FlyInPattern>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DriveEnemy <>4__this;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform[] <flightPoints>5__2;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <targetPos>5__4;

		[Token(Token = "0x1700043F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0x13F205C", Offset = "0x13F205C", VA = "0x13F205C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000440")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0x13F20C4", Offset = "0x13F20C4", VA = "0x13F20C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0x13F1CA4", Offset = "0x13F1CA4", VA = "0x13F1CA4")]
		[DebuggerHidden]
		public <FlyInPattern>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002A48")]
		[Address(RVA = "0x13F1D40", Offset = "0x13F1D40", VA = "0x13F1D40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0x13F1D44", Offset = "0x13F1D44", VA = "0x13F1D44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0x13F2064", Offset = "0x13F2064", VA = "0x13F2064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform _p;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _enemyT;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected Animator _anim;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	protected GameObject _shotPrefab;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected Transform _projSpawnPoint;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Collider[] _colliders;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _shotTarget;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float _shootingDistance;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private new Coroutine _shotRoutine;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float _shotRoutineDelay;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _shotRoutineTimer;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	protected string _shotAnimName;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	protected float _shotAnimDelay;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	protected float _shotDelay;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float _flySpeed;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private DroneFlightPattern _flightPattern;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected SkinnedMeshRenderer[] _smr;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool isTGrade;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool doOnce;

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x13F1010", Offset = "0x13F1010", VA = "0x13F1010", Slot = "4")]
	protected override void SetUp()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x13F146C", Offset = "0x13F146C", VA = "0x13F146C", Slot = "5")]
	protected override void ProcessUpdates()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x13F16E4", Offset = "0x13F16E4", VA = "0x13F16E4", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EEEC", Offset = "0xA4EEEC")]
	protected override IEnumerator ShotSequence()
	{
		return null;
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x13F1780", Offset = "0x13F1780", VA = "0x13F1780", Slot = "8")]
	public override void DamagedByWeapon(GameObject other)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x13F1AFC", Offset = "0x13F1AFC", VA = "0x13F1AFC", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EF50", Offset = "0xA4EF50")]
	protected virtual IEnumerator ShootProjectile()
	{
		return null;
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x13F1B98", Offset = "0x13F1B98", VA = "0x13F1B98", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4EFB4", Offset = "0xA4EFB4")]
	protected virtual IEnumerator ShootProjectileSequence()
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x13F1440", Offset = "0x13F1440", VA = "0x13F1440")]
	private void StartFlightPattern()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x13F1C34", Offset = "0x13F1C34", VA = "0x13F1C34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F018", Offset = "0xA4F018")]
	private IEnumerator FlyInPattern()
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x13F1CD0", Offset = "0x13F1CD0", VA = "0x13F1CD0")]
	public DriveEnemy()
	{
	}
}
[Token(Token = "0x200010D")]
public class DriveObstacle : MonoBehaviour
{
	[Token(Token = "0x2000615")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35C4C", Offset = "0xA35C4C")]
	private sealed class <ShotSequence>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DriveObstacle <>4__this;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <rimLightValue>5__2;

		[Token(Token = "0x17000441")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A50")]
			[Address(RVA = "0x13F30E0", Offset = "0x13F30E0", VA = "0x13F30E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000442")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A52")]
			[Address(RVA = "0x13F3148", Offset = "0x13F3148", VA = "0x13F3148", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0x13F2C20", Offset = "0x13F2C20", VA = "0x13F2C20")]
		[DebuggerHidden]
		public <ShotSequence>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x13F2EF8", Offset = "0x13F2EF8", VA = "0x13F2EF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0x13F2EFC", Offset = "0x13F2EFC", VA = "0x13F2EFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0x13F30E8", Offset = "0x13F30E8", VA = "0x13F30E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000616")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35C5C", Offset = "0xA35C5C")]
	private sealed class <DestroySequence>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DriveObstacle <>4__this;

		[Token(Token = "0x17000443")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A56")]
			[Address(RVA = "0x13F2E88", Offset = "0x13F2E88", VA = "0x13F2E88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000444")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A58")]
			[Address(RVA = "0x13F2EF0", Offset = "0x13F2EF0", VA = "0x13F2EF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0x13F2C4C", Offset = "0x13F2C4C", VA = "0x13F2C4C")]
		[DebuggerHidden]
		public <DestroySequence>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0x13F2C78", Offset = "0x13F2C78", VA = "0x13F2C78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0x13F2C7C", Offset = "0x13F2C7C", VA = "0x13F2C7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x13F2E90", Offset = "0x13F2E90", VA = "0x13F2E90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Transform _t;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected bool _canBeDestroyed;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected int _health;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected bool _adjustHealthBySize;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected PlayerManager _player;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected GameObject _destroyVFXPrefab;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected float _destroyWait;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected bool _randomizeRigRotation;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Transform _secondaryRotate;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected bool _randomizeScale;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected float _randomizedScaleValue;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected float _minRandScale;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	protected float _maxRandScale;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected MeshRenderer[] _mr;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Coroutine _shotRoutine;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x13F2820", Offset = "0x13F2820", VA = "0x13F2820")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x13F282C", Offset = "0x13F282C", VA = "0x13F282C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x13F117C", Offset = "0x13F117C", VA = "0x13F117C", Slot = "4")]
	protected virtual void SetUp()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x13F15FC", Offset = "0x13F15FC", VA = "0x13F15FC", Slot = "5")]
	protected virtual void ProcessUpdates()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x13F0CA4", Offset = "0x13F0CA4", VA = "0x13F0CA4")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x13F0D88", Offset = "0x13F0D88", VA = "0x13F0D88")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x13F2838", Offset = "0x13F2838", VA = "0x13F2838", Slot = "6")]
	protected virtual void ProcessCollision(GameObject other)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x13F2AF8", Offset = "0x13F2AF8", VA = "0x13F2AF8", Slot = "7")]
	protected virtual void HitCarOrPlayer(GameObject other)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x13F1978", Offset = "0x13F1978", VA = "0x13F1978", Slot = "8")]
	public virtual void DamagedByWeapon(GameObject other)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x13F2BB0", Offset = "0x13F2BB0", VA = "0x13F2BB0", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F07C", Offset = "0xA4F07C")]
	protected virtual IEnumerator ShotSequence()
	{
		return null;
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x13F2B40", Offset = "0x13F2B40", VA = "0x13F2B40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F0E0", Offset = "0xA4F0E0")]
	protected IEnumerator DestroySequence()
	{
		return null;
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x13F1D38", Offset = "0x13F1D38", VA = "0x13F1D38")]
	public DriveObstacle()
	{
	}
}
[Token(Token = "0x200010E")]
public class InfiniteSpawnControllerExt : InfiniteSpawnController
{
	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1145EA8", Offset = "0x1145EA8", VA = "0x1145EA8")]
	public Transform SpawnSingleItem()
	{
		return null;
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x1145F40", Offset = "0x1145F40", VA = "0x1145F40")]
	public InfiniteSpawnControllerExt()
	{
	}
}
[Token(Token = "0x200010F")]
public class SpawnHelper : MonoBehaviour
{
	[Token(Token = "0x2000617")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35C6C", Offset = "0xA35C6C")]
	private sealed class <WaitForStart>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnHelper <>4__this;

		[Token(Token = "0x17000445")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0x11B5D58", Offset = "0x11B5D58", VA = "0x11B5D58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000446")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0x11B5DC0", Offset = "0x11B5DC0", VA = "0x11B5DC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x11B5C5C", Offset = "0x11B5C5C", VA = "0x11B5C5C")]
		[DebuggerHidden]
		public <WaitForStart>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002A5A")]
		[Address(RVA = "0x11B5C90", Offset = "0x11B5C90", VA = "0x11B5C90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0x11B5C94", Offset = "0x11B5C94", VA = "0x11B5C94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0x11B5D60", Offset = "0x11B5D60", VA = "0x11B5D60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InfiniteSpawnControllerExt _spawnController;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _startDelay;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _preSpawn;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _preSpawnTarget;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _preSpawnZPoint;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _preSpawnDistance;

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x11B5A14", Offset = "0x11B5A14", VA = "0x11B5A14")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x11B5AA8", Offset = "0x11B5AA8", VA = "0x11B5AA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F144", Offset = "0xA4F144")]
	private IEnumerator WaitForStart()
	{
		return null;
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x11B5B18", Offset = "0x11B5B18", VA = "0x11B5B18")]
	private void PreSpawnItems()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x11B5C88", Offset = "0x11B5C88", VA = "0x11B5C88")]
	public SpawnHelper()
	{
	}
}
[Token(Token = "0x2000110")]
public class Drone : MonoBehaviour
{
	[Token(Token = "0x2000618")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35C7C", Offset = "0xA35C7C")]
	private sealed class <ShootProjectileSequence>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Drone <>4__this;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <playerPos>5__2;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x17000447")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x13F4B40", Offset = "0x13F4B40", VA = "0x13F4B40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000448")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A64")]
			[Address(RVA = "0x13F4BA8", Offset = "0x13F4BA8", VA = "0x13F4BA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x13F46D8", Offset = "0x13F46D8", VA = "0x13F46D8")]
		[DebuggerHidden]
		public <ShootProjectileSequence>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x13F4890", Offset = "0x13F4890", VA = "0x13F4890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0x13F4894", Offset = "0x13F4894", VA = "0x13F4894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x13F4B48", Offset = "0x13F4B48", VA = "0x13F4B48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _flySpeed;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _player;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DroneFlightPattern _flightPattern;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _arrivedAtPattern;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _t;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _shotPrefab;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _shotEffect;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform _projSpawnPoint;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider[] _colliders;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _minShotTime;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float _shotVariance;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float _shotDelay;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _deathVFX;

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x13F39D0", Offset = "0x13F39D0", VA = "0x13F39D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x13F3B78", Offset = "0x13F3B78", VA = "0x13F3B78")]
	public void SetFlightPattern(string spawnPath, DroneFlightPattern pattern)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x13F3F8C", Offset = "0x13F3F8C", VA = "0x13F3F8C")]
	private void TransitionToFlight()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x13F4340", Offset = "0x13F4340", VA = "0x13F4340")]
	private void StartFlightPattern()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x13F463C", Offset = "0x13F463C", VA = "0x13F463C")]
	private void StartShotSequence()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x13F4668", Offset = "0x13F4668", VA = "0x13F4668")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F1A8", Offset = "0xA4F1A8")]
	private IEnumerator ShootProjectileSequence()
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x13F4704", Offset = "0x13F4704", VA = "0x13F4704")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x13F4874", Offset = "0x13F4874", VA = "0x13F4874")]
	public Drone()
	{
	}
}
[Token(Token = "0x2000111")]
public class DroneBattleController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000619")]
	public class DroneWave
	{
		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string wave;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<DroneFlightPattern> droneBehaviors;

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x13F5274", Offset = "0x13F5274", VA = "0x13F5274")]
		public DroneWave()
		{
		}
	}

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _hasStarted;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _dronePrefab;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<iTweenPath> _spawnPaths;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<DroneWave> _waves;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _currentWave;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _destroyTarget;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _dronesDestroyed;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Character _tocks;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Drone> _activeDrones;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _isResetting;

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x13F4BB0", Offset = "0x13F4BB0", VA = "0x13F4BB0")]
	private void SpawnDrone(iTweenPath spawnPath, DroneFlightPattern pattern)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x13F4DF0", Offset = "0x13F4DF0", VA = "0x13F4DF0")]
	public void StartWave()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x13F4F44", Offset = "0x13F4F44", VA = "0x13F4F44")]
	private void DroneDestroyed()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x13F5014", Offset = "0x13F5014", VA = "0x13F5014")]
	public void DestroyDrones()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x13F51F4", Offset = "0x13F51F4", VA = "0x13F51F4")]
	public void RestartDrones()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x13F526C", Offset = "0x13F526C", VA = "0x13F526C")]
	public DroneBattleController()
	{
	}
}
[Token(Token = "0x2000112")]
public class DroneFlightPattern : MonoBehaviour
{
	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _t;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _leadInPoint;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform[] _flightPoints;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] flyVectors;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _targetName;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _targetPoint;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool _followTarget;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector3 _targetOffset;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool _useLocalPositions;

	[Token(Token = "0x17000065")]
	public Transform leadInPoint
	{
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x13F527C", Offset = "0x13F527C", VA = "0x13F527C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000066")]
	public Transform[] flightPoints
	{
		[Token(Token = "0x6000606")]
		[Address(RVA = "0x13F5284", Offset = "0x13F5284", VA = "0x13F5284")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x13F528C", Offset = "0x13F528C", VA = "0x13F528C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x13F54C8", Offset = "0x13F54C8", VA = "0x13F54C8")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x13F55B8", Offset = "0x13F55B8", VA = "0x13F55B8")]
	public DroneFlightPattern()
	{
	}
}
[Token(Token = "0x2000113")]
public class GloveMotionDetection : MonoBehaviour
{
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _t;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ControllerHand _handSide;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputBridge _input;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _shaken;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _lastShakeCount;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _shakeProgress;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private int _shakeTarget;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _shakeDistance;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> _previousPositions;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int _positionCount;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private StreetTocksManager _sceneManager;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x118EF90", Offset = "0x118EF90", VA = "0x118EF90")]
	private void Start()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x118F184", Offset = "0x118F184", VA = "0x118F184")]
	private void Update()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x118F508", Offset = "0x118F508", VA = "0x118F508")]
	public GloveMotionDetection()
	{
	}
}
[Token(Token = "0x2000114")]
public class Bat : MonoBehaviour
{
	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable _grab;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _wasHeld;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider[] _handleColliders;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _forceDelay;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _forceMult;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _forceDirCalc;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected InputBridge _input;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x13ED2A4", Offset = "0x13ED2A4", VA = "0x13ED2A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x13ED2FC", Offset = "0x13ED2FC", VA = "0x13ED2FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x13ED3AC", Offset = "0x13ED3AC", VA = "0x13ED3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x13ED4A8", Offset = "0x13ED4A8", VA = "0x13ED4A8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x13ED42C", Offset = "0x13ED42C", VA = "0x13ED42C")]
	private void SetHandleCollision(bool canCollide)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x13ED830", Offset = "0x13ED830", VA = "0x13ED830")]
	public Bat()
	{
	}
}
[Token(Token = "0x2000115")]
public class BatManager : MonoBehaviour
{
	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> bats;

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x13EDC84", Offset = "0x13EDC84", VA = "0x13EDC84")]
	public void DisableRemainingBats()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x13EDD80", Offset = "0x13EDD80", VA = "0x13EDD80")]
	public void RemoveBat(GameObject bat)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x13EDDF0", Offset = "0x13EDDF0", VA = "0x13EDDF0")]
	public BatManager()
	{
	}
}
[Token(Token = "0x2000116")]
public class FizzCan : MonoBehaviour
{
	[Token(Token = "0x200061A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35C8C", Offset = "0xA35C8C")]
	private sealed class <CollisionToggleRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FizzCan <>4__this;

		[Token(Token = "0x17000449")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A69")]
			[Address(RVA = "0x12575F4", Offset = "0x12575F4", VA = "0x12575F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x125765C", Offset = "0x125765C", VA = "0x125765C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0x1257434", Offset = "0x1257434", VA = "0x1257434")]
		[DebuggerHidden]
		public <CollisionToggleRoutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x1257468", Offset = "0x1257468", VA = "0x1257468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0x125746C", Offset = "0x125746C", VA = "0x125746C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0x12575FC", Offset = "0x12575FC", VA = "0x12575FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FizzEffect[] _fizzEffects;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _centerT;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> _previousPos;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider[] _colliders;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _collisionWait;

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1256EF4", Offset = "0x1256EF4", VA = "0x1256EF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1256FEC", Offset = "0x1256FEC", VA = "0x1256FEC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1257118", Offset = "0x1257118", VA = "0x1257118")]
	public Vector3 ImpactCalcPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1257180", Offset = "0x1257180", VA = "0x1257180")]
	public void TakeHit(float forceMagnitude, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x12570A8", Offset = "0x12570A8", VA = "0x12570A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F20C", Offset = "0xA4F20C")]
	private IEnumerator CollisionToggleRoutine()
	{
		return null;
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1257460", Offset = "0x1257460", VA = "0x1257460")]
	public FizzCan()
	{
	}
}
[Token(Token = "0x2000117")]
public class FizzEffect : MonoBehaviour
{
	[Token(Token = "0x200061B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35C9C", Offset = "0xA35C9C")]
	private sealed class <Spray>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FizzEffect <>4__this;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float sprayTime;

		[Token(Token = "0x1700044B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0x125799C", Offset = "0x125799C", VA = "0x125799C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0x1257A04", Offset = "0x1257A04", VA = "0x1257A04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0x1257794", Offset = "0x1257794", VA = "0x1257794")]
		[DebuggerHidden]
		public <Spray>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0x12577C8", Offset = "0x12577C8", VA = "0x12577C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0x12577CC", Offset = "0x12577CC", VA = "0x12577CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0x12579A4", Offset = "0x12579A4", VA = "0x12579A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _forcePoint;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _force;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody _parentRigid;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystem _vfx;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _defaultSprayTime;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool _enableDebug;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool _spraying;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _sprayTimer;

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1257664", Offset = "0x1257664", VA = "0x1257664")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x12576CC", Offset = "0x12576CC", VA = "0x12576CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x12573FC", Offset = "0x12573FC", VA = "0x12573FC")]
	public void TriggerSpray(float sprayTime = 0f)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1257714", Offset = "0x1257714", VA = "0x1257714")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F270", Offset = "0xA4F270")]
	private IEnumerator Spray(float sprayTime)
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x12577C0", Offset = "0x12577C0", VA = "0x12577C0")]
	public FizzEffect()
	{
	}
}
[Token(Token = "0x2000118")]
public class GrabbableBat : Grabbable
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private FizzballSceneManager _sceneManager;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private AudioSource pickupSFX;

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x118F700", Offset = "0x118F700", VA = "0x118F700")]
	private void Start()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x118F704", Offset = "0x118F704", VA = "0x118F704", Slot = "9")]
	public override void GrabItem(Grabber grabbedBy)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x118F748", Offset = "0x118F748", VA = "0x118F748")]
	public GrabbableBat()
	{
	}
}
[Token(Token = "0x2000119")]
public class MaxFloatTrigger : MonoBehaviour
{
	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FizzballSceneManager manager;

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x133068C", Offset = "0x133068C", VA = "0x133068C")]
	public void ActivateFloat()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x13306A8", Offset = "0x13306A8", VA = "0x13306A8")]
	public MaxFloatTrigger()
	{
	}
}
[Token(Token = "0x200011A")]
public class PitchingMachine : MonoBehaviour
{
	[Token(Token = "0x200061C")]
	public enum PitchTypes
	{
		[Token(Token = "0x4002794")]
		Fastball,
		[Token(Token = "0x4002795")]
		Changeup,
		[Token(Token = "0x4002796")]
		Curveball,
		[Token(Token = "0x4002797")]
		StopAndStart,
		[Token(Token = "0x4002798")]
		LoopToLoop
	}

	[Token(Token = "0x200061D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35CAC", Offset = "0xA35CAC")]
	private sealed class <ActivatePitch>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject projectile;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PitchingMachine <>4__this;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <rb>5__2;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator <_canAnim>5__3;

		[Token(Token = "0x1700044D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0x1135C68", Offset = "0x1135C68", VA = "0x1135C68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A77")]
			[Address(RVA = "0x1135CD0", Offset = "0x1135CD0", VA = "0x1135CD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0x11351D8", Offset = "0x11351D8", VA = "0x11351D8")]
		[DebuggerHidden]
		public <ActivatePitch>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0x1135484", Offset = "0x1135484", VA = "0x1135484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0x1135488", Offset = "0x1135488", VA = "0x1135488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0x1135C70", Offset = "0x1135C70", VA = "0x1135C70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200061E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35CBC", Offset = "0xA35CBC")]
	private sealed class <SignalAndThrow>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PitchingMachine <>4__this;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int throws;

		[Token(Token = "0x1700044F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0x1136050", Offset = "0x1136050", VA = "0x1136050", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000450")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0x11360B8", Offset = "0x11360B8", VA = "0x11360B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0x11352C8", Offset = "0x11352C8", VA = "0x11352C8")]
		[DebuggerHidden]
		public <SignalAndThrow>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0x1135CD8", Offset = "0x1135CD8", VA = "0x1135CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0x1135CDC", Offset = "0x1135CDC", VA = "0x1135CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0x1136058", Offset = "0x1136058", VA = "0x1136058", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PitchTypes currentPitch;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FizzballSceneManager _sceneManager;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator _pitcherAnim;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<string> pitchStyles;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator _catcherAnim;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float[] _spawnDelay;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _initialSpawnDelay;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _initalizedFirstThrow;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _throwablePrefab;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform _spawnPoint;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _catchPoint;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<Vector3> _throwForce;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Collider[] _colliders;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioSource _pitchSound;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioSource _pitchSignal;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float _pitchWait;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private int _numPitch;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine _activeCycle;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Vector3 _throwTorque;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float _maxAngleVelocity;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int pitchCount;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int randPitch;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool firstPause;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coroutine pitchRoutine;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1134EB4", Offset = "0x1134EB4", VA = "0x1134EB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1134F0C", Offset = "0x1134F0C", VA = "0x1134F0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x11350F0", Offset = "0x11350F0", VA = "0x11350F0")]
	public Animator GetCatcherAnim()
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x1134F48", Offset = "0x1134F48", VA = "0x1134F48")]
	public void ThrowPitch()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x1135174", Offset = "0x1135174", VA = "0x1135174")]
	private void DeterminePitchType()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x11350F8", Offset = "0x11350F8", VA = "0x11350F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F2D4", Offset = "0xA4F2D4")]
	private IEnumerator ActivatePitch(GameObject projectile)
	{
		return null;
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x1135204", Offset = "0x1135204", VA = "0x1135204")]
	public void PitchCycle()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x1135248", Offset = "0x1135248", VA = "0x1135248")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F338", Offset = "0xA4F338")]
	public IEnumerator SignalAndThrow(int throws)
	{
		return null;
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x11352F4", Offset = "0x11352F4", VA = "0x11352F4")]
	public void CancelPitchRoutine()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x1135320", Offset = "0x1135320", VA = "0x1135320")]
	public void CancelPitchingComplete()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x1135354", Offset = "0x1135354", VA = "0x1135354")]
	public void AttachToCatcher(Transform obj, Rigidbody rBody)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x113546C", Offset = "0x113546C", VA = "0x113546C")]
	public PitchingMachine()
	{
	}
}
[Token(Token = "0x200011B")]
public class ManagedItem : MonoBehaviour
{
	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnItemReset;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ItemGroupManager _igm;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3 _startPos;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected Vector3 _startRot;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _hasBeenUsed;

	[Token(Token = "0x17000067")]
	public bool hasBeenUsed
	{
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x132FD90", Offset = "0x132FD90", VA = "0x132FD90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x132FD98", Offset = "0x132FD98", VA = "0x132FD98")]
		set
		{
		}
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x132FDC0", Offset = "0x132FDC0", VA = "0x132FDC0", Slot = "4")]
	public virtual void ResetItem()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x132FDDC", Offset = "0x132FDDC", VA = "0x132FDDC", Slot = "5")]
	public virtual void SetManager(ItemGroupManager manager)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x132FDE4", Offset = "0x132FDE4", VA = "0x132FDE4")]
	public ManagedItem()
	{
	}
}
[Token(Token = "0x200011C")]
public class SpawnedGrabItem : MonoBehaviour
{
	[Token(Token = "0x200061F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35CCC", Offset = "0xA35CCC")]
	private sealed class <WaitAndEnable>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnedGrabItem <>4__this;

		[Token(Token = "0x17000451")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A81")]
			[Address(RVA = "0x11B6248", Offset = "0x11B6248", VA = "0x11B6248", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000452")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0x11B62B0", Offset = "0x11B62B0", VA = "0x11B62B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0x11B610C", Offset = "0x11B610C", VA = "0x11B610C")]
		[DebuggerHidden]
		public <WaitAndEnable>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0x11B6148", Offset = "0x11B6148", VA = "0x11B6148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x11B614C", Offset = "0x11B614C", VA = "0x11B614C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0x11B6250", Offset = "0x11B6250", VA = "0x11B6250", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable _grab;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody _rigid;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer[] _meshes;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SkinnedMeshRenderer[] _skins;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Collider[] _objColliders;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _initialWait;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _isActive;

	[Token(Token = "0x17000068")]
	public bool isActive
	{
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x11B5DC8", Offset = "0x11B5DC8", VA = "0x11B5DC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x11B5DD0", Offset = "0x11B5DD0", VA = "0x11B5DD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x11B5FE4", Offset = "0x11B5FE4", VA = "0x11B5FE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x11B5F74", Offset = "0x11B5F74", VA = "0x11B5F74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F39C", Offset = "0xA4F39C")]
	private IEnumerator WaitAndEnable()
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x11B6138", Offset = "0x11B6138", VA = "0x11B6138")]
	public SpawnedGrabItem()
	{
	}
}
[Token(Token = "0x200011D")]
public class TriggeredItemSpawner : MonoBehaviour
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _grabbablePrefab;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpawnedGrabItem _activeItem;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SpawnedGrabItem> _allItems;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 _itemOffset;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private int _maxItems;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _trackedGrabber;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ControllerHand _handSide;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x140A860", Offset = "0x140A860", VA = "0x140A860")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x140A8C8", Offset = "0x140A8C8", VA = "0x140A8C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x140AB00", Offset = "0x140AB00", VA = "0x140AB00")]
	private void SpawnItem()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x140A8CC", Offset = "0x140A8CC", VA = "0x140A8CC")]
	private void UpdateActiveItem()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x140AC90", Offset = "0x140AC90", VA = "0x140AC90")]
	public void RemoveAllItems(bool completeRemoval = true)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x140AE54", Offset = "0x140AE54", VA = "0x140AE54")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x140AF7C", Offset = "0x140AF7C", VA = "0x140AF7C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x140B0D0", Offset = "0x140B0D0", VA = "0x140B0D0")]
	public TriggeredItemSpawner()
	{
	}
}
[Token(Token = "0x200011E")]
public class GACJailPuzzle : RandomizedPuzzle
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _trident;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _jailKey;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PuppetMaster _maxPM;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _maxParent;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable[] _maxGrabs;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform _altMaxLocation;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _keyResetObject;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform _keyResetPoint;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioSource _doorOpenSFX;

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x125DD04", Offset = "0x125DD04", VA = "0x125DD04", Slot = "4")]
	protected override void InitializePuzzle()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x125DF2C", Offset = "0x125DF2C", VA = "0x125DF2C")]
	public void KeyTouchesTrident()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x125DFCC", Offset = "0x125DFCC", VA = "0x125DFCC")]
	public void OpenJailDoor()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x125E0B0", Offset = "0x125E0B0", VA = "0x125E0B0")]
	public void ReleaseTridentHold()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x125E224", Offset = "0x125E224", VA = "0x125E224")]
	public void GrabBobbyPin()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x125E2C4", Offset = "0x125E2C4", VA = "0x125E2C4")]
	public void ResetJailKey()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x125E550", Offset = "0x125E550", VA = "0x125E550")]
	public GACJailPuzzle()
	{
	}
}
[Token(Token = "0x200011F")]
public class GACKeyReceptacle : MonoBehaviour
{
	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _keyLocation;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _objectScale;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _isKeyVisible;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool _releaseConstraintsOnReveal;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[SerializeField]
	private bool _scaleUpOnReveal;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _startScale;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _unparentWithoutConstraints;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _key;

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x125E558", Offset = "0x125E558", VA = "0x125E558")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x125E680", Offset = "0x125E680", VA = "0x125E680")]
	public void AddKey(GameObject key)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x125E884", Offset = "0x125E884", VA = "0x125E884")]
	public void ReleaseKey()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x125EA90", Offset = "0x125EA90", VA = "0x125EA90")]
	public GACKeyReceptacle()
	{
	}
}
[Token(Token = "0x2000120")]
public class GACKeyReceptaclePuzzle : RandomizedPuzzle
{
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject[] _keys;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected Transform[] _receptacleLocations;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected GameObject _endingArea;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected GameObject[] _locks;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected GameObject[] _keyLocks;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _lockOpenCount;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected Animator _lockChains;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioSource _chainSFX;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject _microwaveExplosion;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _triedEatCornDog;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _drankSoda;

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x125EAAC", Offset = "0x125EAAC", VA = "0x125EAAC", Slot = "5")]
	protected override void EnableRandomObjects()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x125F148", Offset = "0x125F148", VA = "0x125F148")]
	public void OpenLock(int index)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x125F480", Offset = "0x125F480", VA = "0x125F480")]
	private void ShowExit()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x125F4A0", Offset = "0x125F4A0", VA = "0x125F4A0")]
	public void PutObjectInMouth(GameObject foodObject)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x125F8C4", Offset = "0x125F8C4", VA = "0x125F8C4")]
	public void HandleMicrowaveCompleted(GameObject cookedItem)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x125F998", Offset = "0x125F998", VA = "0x125F998")]
	public GACKeyReceptaclePuzzle()
	{
	}
}
[Token(Token = "0x2000121")]
public class GACLunchBoxPuzzle : RandomizedPuzzle
{
	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _lunchboxTop;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _screwTotal;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _screwCount;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GACKeyReceptacle receptacle;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioSource _openSFX;

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x125F9A0", Offset = "0x125F9A0", VA = "0x125F9A0", Slot = "4")]
	protected override void InitializePuzzle()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x125FAE0", Offset = "0x125FAE0", VA = "0x125FAE0")]
	private void ScrewReleased(InnerPanelObject screw)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x125FAFC", Offset = "0x125FAFC", VA = "0x125FAFC")]
	private void ReleaseTopPanel()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x125FB9C", Offset = "0x125FB9C", VA = "0x125FB9C")]
	public GACLunchBoxPuzzle()
	{
	}
}
[Token(Token = "0x2000122")]
public class GACMouth : MonoBehaviour
{
	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GACKeyReceptaclePuzzle _keyPuzzle;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x125FBA4", Offset = "0x125FBA4", VA = "0x125FBA4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x125FBE0", Offset = "0x125FBE0", VA = "0x125FBE0")]
	public GACMouth()
	{
	}
}
[Token(Token = "0x2000123")]
public class GACRingPop : MonoBehaviour
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _totalLicks;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _remainingLicks;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _ringCandy;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GACKeyReceptacle _keyScript;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _hasPlayedFirstLickConvo;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _hasCompleted;

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x125FBE8", Offset = "0x125FBE8", VA = "0x125FBE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x125F694", Offset = "0x125F694", VA = "0x125F694")]
	public void LickRing()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x125FC48", Offset = "0x125FC48", VA = "0x125FC48")]
	public GACRingPop()
	{
	}
}
[Token(Token = "0x2000124")]
public class GACSafePuzzle : RandomSolutionPuzzle
{
	[Token(Token = "0x2000620")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35CDC", Offset = "0xA35CDC")]
	private sealed class <CheckSafeSolution>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GACSafePuzzle <>4__this;

		[Token(Token = "0x17000453")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A87")]
			[Address(RVA = "0x1260B14", Offset = "0x1260B14", VA = "0x1260B14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000454")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A89")]
			[Address(RVA = "0x1260B7C", Offset = "0x1260B7C", VA = "0x1260B7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0x1260694", Offset = "0x1260694", VA = "0x1260694")]
		[DebuggerHidden]
		public <CheckSafeSolution>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0x126078C", Offset = "0x126078C", VA = "0x126078C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0x1260790", Offset = "0x1260790", VA = "0x1260790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0x1260B1C", Offset = "0x1260B1C", VA = "0x1260B1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _hasSolved;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshPro _digitalClockText;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _correctHour;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _correctHourAngle;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _correctMinute;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _correctMinuteAngle;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Animator _cuckooClock;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform _cuckooHourHand;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _cuckooMinuteHand;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float _handVariance;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<int> _safeCombination;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private int _combinationLength;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro _safeCombinationClue;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<int> _currentSafeInput;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro _safeDisplay;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject _numberPad;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private SafeNumberKey[] _numberPadKeys;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GrabbableExt _safeHandle;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _safeSolved;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Animator _safeAnim;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject _safeDoor;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private AudioSource _cuckooClockSFX;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private AudioSource _safeFailSFX;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private AudioSource _safeOpenSFX;

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x125FC58", Offset = "0x125FC58", VA = "0x125FC58", Slot = "4")]
	protected override void InitializePuzzle()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x12601EC", Offset = "0x12601EC", VA = "0x12601EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x125FCAC", Offset = "0x125FCAC", VA = "0x125FCAC")]
	private void GenerateClockCode()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x12601F0", Offset = "0x12601F0", VA = "0x12601F0")]
	public void CheckForClockSolution()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x1260398", Offset = "0x1260398", VA = "0x1260398")]
	private bool IsHandCorrect(float rotation, float targetRotation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x125FFC0", Offset = "0x125FFC0", VA = "0x125FFC0")]
	private void GenerateSafeCombination()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x126040C", Offset = "0x126040C", VA = "0x126040C")]
	private void SafeKeyPressed(int keyNumber)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x126056C", Offset = "0x126056C", VA = "0x126056C")]
	private void PlaySafeConversation()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x12604FC", Offset = "0x12604FC", VA = "0x12604FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F400", Offset = "0xA4F400")]
	private IEnumerator CheckSafeSolution()
	{
		return null;
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x12606C0", Offset = "0x12606C0", VA = "0x12606C0")]
	private void EnableSafeDoorCollision()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x1260774", Offset = "0x1260774", VA = "0x1260774")]
	public GACSafePuzzle()
	{
	}
}
[Token(Token = "0x2000125")]
public class GACSnowGlobe : MonoBehaviour
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _globeObject;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _vfx;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GACKeyReceptacle _keyRecept;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _krRigid;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider[] _colliders;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _breakPoint;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x1260B84", Offset = "0x1260B84", VA = "0x1260B84")]
	private void Start()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x1260BFC", Offset = "0x1260BFC", VA = "0x1260BFC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x1260D0C", Offset = "0x1260D0C", VA = "0x1260D0C")]
	public GACSnowGlobe()
	{
	}
}
[Token(Token = "0x2000126")]
public class GACSoda : MonoBehaviour
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _closedCan;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _openCan;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _totalPourTime;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _targetPourTime;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _emptyPourTime;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private JointDetection _jointDetect;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem[] _pourParticles;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _pouring;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _hasPoured;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GACKeyReceptacle _keyReceptacle;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _keyReleased;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _canTab;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioSource _drinkSFX;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _firstEnable;

	[Token(Token = "0x17000069")]
	public bool isOpen
	{
		[Token(Token = "0x600066C")]
		[Address(RVA = "0x1260D14", Offset = "0x1260D14", VA = "0x1260D14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006A")]
	public bool pouring
	{
		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1260D30", Offset = "0x1260D30", VA = "0x1260D30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x1260D38", Offset = "0x1260D38", VA = "0x1260D38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x1260DAC", Offset = "0x1260DAC", VA = "0x1260DAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x12610C8", Offset = "0x12610C8", VA = "0x12610C8")]
	public void UpdatePour()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x1260F60", Offset = "0x1260F60", VA = "0x1260F60")]
	private void CanOpened()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1261100", Offset = "0x1261100", VA = "0x1261100")]
	private void EnableTab()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x125F820", Offset = "0x125F820", VA = "0x125F820")]
	public bool ReleaseKey()
	{
		return default(bool);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x1260FA4", Offset = "0x1260FA4", VA = "0x1260FA4")]
	private void SetPourState(bool pour)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x125F870", Offset = "0x125F870", VA = "0x125F870")]
	public void PlayDrinkSFX()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1261120", Offset = "0x1261120", VA = "0x1261120")]
	public GACSoda()
	{
	}
}
[Token(Token = "0x2000127")]
public class GACToolBoxPuzzle : RandomSolutionPuzzle
{
	[Token(Token = "0x40006C1")]
	private const string _alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject[] _fridgeLetters;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] _fridgeRows;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _lettersPerRow;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private LockLetter[] _lockLetters;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int _lettersPerLockPiece;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private string[] _firstRowWords;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private string[] _secondRowWords;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private string[] _thirdRowWords;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private string[] _fourthRowWords;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Animator _lid;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GACKeyReceptacle receptacle;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _solved;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioSource _openSFX;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x126113C", Offset = "0x126113C", VA = "0x126113C", Slot = "7")]
	protected override void GenerateSolution()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x1261548", Offset = "0x1261548", VA = "0x1261548")]
	private void AddWordToFridge(string word, Transform letterContainers)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1261760", Offset = "0x1261760", VA = "0x1261760")]
	private void LockLetterChanged()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x12618A8", Offset = "0x12618A8", VA = "0x12618A8")]
	public GACToolBoxPuzzle()
	{
	}
}
[Token(Token = "0x2000128")]
public class LockLetter : MonoBehaviour
{
	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action onLetterChange;

	[Token(Token = "0x40006D0")]
	private const string _alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro _display;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] _letters;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _letterIndex;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Collider _triggerCollider;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _cooldown;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource _touchSFX;

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x115CD88", Offset = "0x115CD88", VA = "0x115CD88")]
	private void Awake()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x115CDE0", Offset = "0x115CDE0", VA = "0x115CDE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x115CE20", Offset = "0x115CE20", VA = "0x115CE20")]
	public bool IsCorrect()
	{
		return default(bool);
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x115CE30", Offset = "0x115CE30", VA = "0x115CE30")]
	public void SetUpLockLetter(string correctLetter, string restrictedLetters, int totalLetters)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x115D004", Offset = "0x115D004", VA = "0x115D004")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x115D218", Offset = "0x115D218", VA = "0x115D218")]
	public void DisableLock()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x115D238", Offset = "0x115D238", VA = "0x115D238")]
	public LockLetter()
	{
	}
}
[Token(Token = "0x2000129")]
public class MicrowaveMetalObject : Food
{
	[Token(Token = "0x2000621")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35CEC", Offset = "0xA35CEC")]
	private sealed class <DestroySequence>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MicrowaveMetalObject <>4__this;

		[Token(Token = "0x17000455")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0x1334030", Offset = "0x1334030", VA = "0x1334030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000456")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0x1334098", Offset = "0x1334098", VA = "0x1334098", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0x1333D8C", Offset = "0x1333D8C", VA = "0x1333D8C")]
		[DebuggerHidden]
		public <DestroySequence>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0x1333E10", Offset = "0x1333E10", VA = "0x1333E10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0x1333E14", Offset = "0x1333E14", VA = "0x1333E14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0x1334038", Offset = "0x1334038", VA = "0x1334038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GACKeyReceptacle _keyHolder;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _explosionVFX;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string _convoName;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _destroyed;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x1333C80", Offset = "0x1333C80", VA = "0x1333C80")]
	public void DestroyObject()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x1333D50", Offset = "0x1333D50", VA = "0x1333D50")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x1333CE0", Offset = "0x1333CE0", VA = "0x1333CE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F464", Offset = "0xA4F464")]
	private IEnumerator DestroySequence()
	{
		return null;
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x1333DB8", Offset = "0x1333DB8", VA = "0x1333DB8")]
	public MicrowaveMetalObject()
	{
	}
}
[Token(Token = "0x200012A")]
public class RandomSolutionPuzzle : RandomizedPuzzle
{
	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool _solutionOnly;

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x10B9530", Offset = "0x10B9530", VA = "0x10B9530", Slot = "4")]
	protected override void InitializePuzzle()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x10B95F4", Offset = "0x10B95F4", VA = "0x10B95F4", Slot = "7")]
	protected virtual void GenerateSolution()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x10B95F8", Offset = "0x10B95F8", VA = "0x10B95F8")]
	public RandomSolutionPuzzle()
	{
	}
}
[Token(Token = "0x200012B")]
public class RandomizedPuzzle : MonoBehaviour
{
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string puzzleID;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GetAClueSceneManager _sceneManager;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameObject[] _puzzleParts;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected int _partsToActivate;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected GameObject _puzzleObject;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected bool _useDebug;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected int _debugIndex;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x10B9608", Offset = "0x10B9608", VA = "0x10B9608")]
	private void Start()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x10B9568", Offset = "0x10B9568", VA = "0x10B9568", Slot = "4")]
	protected virtual void InitializePuzzle()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x10B96CC", Offset = "0x10B96CC", VA = "0x10B96CC", Slot = "5")]
	protected virtual void EnableRandomObjects()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x10B9858", Offset = "0x10B9858", VA = "0x10B9858", Slot = "6")]
	protected virtual void PlaceObjectAtRandomLocation()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x10B9600", Offset = "0x10B9600", VA = "0x10B9600")]
	public RandomizedPuzzle()
	{
	}
}
[Token(Token = "0x200012C")]
public class SafeHandleHelper : MonoBehaviour
{
	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody _handleRigid;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _handle;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody _doorRigid;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _door;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _doorLocked;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool handleCanUnlock;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GrabbableExt _handleGrab;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _lastHandleZ;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1182828", Offset = "0x1182828", VA = "0x1182828")]
	private void Start()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x11828BC", Offset = "0x11828BC", VA = "0x11828BC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x11829E4", Offset = "0x11829E4", VA = "0x11829E4")]
	public void SetHandleLock(bool locked)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x11829B0", Offset = "0x11829B0", VA = "0x11829B0")]
	public void SetDoorLock(bool locked)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1182A18", Offset = "0x1182A18", VA = "0x1182A18")]
	public SafeHandleHelper()
	{
	}
}
[Token(Token = "0x200012D")]
public class SafeNumberKey : MonoBehaviour
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<int> onKeyPressed;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _number;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider _triggerCollider;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource _touchSFX;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _cooldown;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x1182A20", Offset = "0x1182A20", VA = "0x1182A20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1182A78", Offset = "0x1182A78", VA = "0x1182A78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1182AB8", Offset = "0x1182AB8", VA = "0x1182AB8")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x1182C80", Offset = "0x1182C80", VA = "0x1182C80")]
	public void EnableKeyTouch(bool canTouch)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x1182CA0", Offset = "0x1182CA0", VA = "0x1182CA0")]
	public SafeNumberKey()
	{
	}
}
[Serializable]
[Token(Token = "0x200012E")]
public class GradeMetric
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string metricID;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string metricDescription;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool infoOnly;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int currentScore;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxScore;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isSubtractive;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool stopAtZero;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool isPercentage;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool displayAsDecimal;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isChunked;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ScoreChunk[] scoreChunks;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isTime;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int multiplier;

	[Token(Token = "0x1700006B")]
	public float successPercent
	{
		[Token(Token = "0x6000698")]
		[Address(RVA = "0x1190A4C", Offset = "0x1190A4C", VA = "0x1190A4C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006C")]
	public int calculatedScore
	{
		[Token(Token = "0x6000699")]
		[Address(RVA = "0x1190A60", Offset = "0x1190A60", VA = "0x1190A60")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006D")]
	public string displayOutput
	{
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x1190B5C", Offset = "0x1190B5C", VA = "0x1190B5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1190F40", Offset = "0x1190F40", VA = "0x1190F40")]
	public GradeMetric()
	{
	}
}
[Serializable]
[Token(Token = "0x200012F")]
public class ScoreChunk
{
	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int minCutOff;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int score;

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x1184FE0", Offset = "0x1184FE0", VA = "0x1184FE0")]
	public ScoreChunk()
	{
	}
}
[Serializable]
[Token(Token = "0x2000130")]
public class GradeReport
{
	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string activityName;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int score;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string letterGrade;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] activityMetrics;

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x1190F58", Offset = "0x1190F58", VA = "0x1190F58")]
	public GradeReport()
	{
	}
}
[Token(Token = "0x2000131")]
public class Grading : MonoBehaviour
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Grading _instance;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected string _activityID;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected LetterGradeMetric[] _letterGrades;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GradeMetric[] _taskMetrics;

	[Token(Token = "0x1700006E")]
	public static bool GRADING_ENABLED
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0x1190F60", Offset = "0x1190F60", VA = "0x1190F60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x1190FDC", Offset = "0x1190FDC", VA = "0x1190FDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x11910B8", Offset = "0x11910B8", VA = "0x11910B8")]
	private GradeMetric GetMetric(string metricID)
	{
		return null;
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x1191034", Offset = "0x1191034", VA = "0x1191034")]
	public void ResetGrade()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x119115C", Offset = "0x119115C", VA = "0x119115C")]
	public static void ResetSceneGrade()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1191200", Offset = "0x1191200", VA = "0x1191200")]
	public static void UpdateScore(string metricID, int updateValue)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x1191344", Offset = "0x1191344", VA = "0x1191344")]
	public static void SetScore(string metricID, int score)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x1191438", Offset = "0x1191438", VA = "0x1191438")]
	public static void UpdateMaxScore(string metricID, int updateValue)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x119151C", Offset = "0x119151C", VA = "0x119151C")]
	public static string GetMetricOutput(string metricID)
	{
		return null;
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x11915F4", Offset = "0x11915F4", VA = "0x11915F4")]
	public static void CalculateFinalGrade()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1191C2C", Offset = "0x1191C2C", VA = "0x1191C2C")]
	public static void SaveScore(string activityID, GradeReport report)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x1191F14", Offset = "0x1191F14", VA = "0x1191F14")]
	public static GradeReport LoadScore(string activityID, bool best = false)
	{
		return null;
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1191FFC", Offset = "0x1191FFC", VA = "0x1191FFC")]
	public static void ClearAllGradeData()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x11922F8", Offset = "0x11922F8", VA = "0x11922F8")]
	public Grading()
	{
	}
}
[Serializable]
[Token(Token = "0x2000132")]
public class LetterGradeMetric
{
	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string letterGrade;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int minScore;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1158AC0", Offset = "0x1158AC0", VA = "0x1158AC0")]
	public LetterGradeMetric()
	{
	}
}
[Token(Token = "0x2000133")]
public class IceCreamContainer : MonoBehaviour
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _walkPoint;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SlidingDoor _doorLeft;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SlidingDoor _doorRight;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _popsiclePrefab;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> _burritos;

	[Token(Token = "0x1700006F")]
	public Transform walkPoint
	{
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x13B9494", Offset = "0x13B9494", VA = "0x13B9494")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000070")]
	public SlidingDoor doorLeft
	{
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x13B949C", Offset = "0x13B949C", VA = "0x13B949C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000071")]
	public SlidingDoor doorRight
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x13B94A4", Offset = "0x13B94A4", VA = "0x13B94A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000072")]
	public GameObject popsiclePrefab
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x13B94AC", Offset = "0x13B94AC", VA = "0x13B94AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000073")]
	public GameObject burrito
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x13B94B4", Offset = "0x13B94B4", VA = "0x13B94B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x13B951C", Offset = "0x13B951C", VA = "0x13B951C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x13B9584", Offset = "0x13B9584", VA = "0x13B9584")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x13B96F0", Offset = "0x13B96F0", VA = "0x13B96F0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x13B97AC", Offset = "0x13B97AC", VA = "0x13B97AC")]
	public GameObject GetItemFromContainer()
	{
		return null;
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x13B98A0", Offset = "0x13B98A0", VA = "0x13B98A0")]
	public IceCreamContainer()
	{
	}
}
[Token(Token = "0x2000134")]
public class Popsicle : Food
{
	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MeshRenderer _mesh;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material[] _mats;

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x1145D14", Offset = "0x1145D14", VA = "0x1145D14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x1145D78", Offset = "0x1145D78", VA = "0x1145D78")]
	public Popsicle()
	{
	}
}
[Token(Token = "0x2000135")]
public class SlidingDoor : MonoBehaviour
{
	[Token(Token = "0x2000622")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35CFC", Offset = "0xA35CFC")]
	private sealed class <AutoSlideShut>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlidingDoor <>4__this;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <sliding>5__2;

		[Token(Token = "0x17000457")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A93")]
			[Address(RVA = "0x11B339C", Offset = "0x11B339C", VA = "0x11B339C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000458")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x11B3404", Offset = "0x11B3404", VA = "0x11B3404", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0x11B31A8", Offset = "0x11B31A8", VA = "0x11B31A8")]
		[DebuggerHidden]
		public <AutoSlideShut>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0x11B31DC", Offset = "0x11B31DC", VA = "0x11B31DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0x11B31E0", Offset = "0x11B31E0", VA = "0x11B31E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0x11B33A4", Offset = "0x11B33A4", VA = "0x11B33A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable _handle;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _t;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 _closedPosition;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _slideSpeed;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine _slidingRoutine;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _playerHeld;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _held;

	[Token(Token = "0x17000074")]
	public bool held
	{
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x11B2E9C", Offset = "0x11B2E9C", VA = "0x11B2E9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x11B2EA4", Offset = "0x11B2EA4", VA = "0x11B2EA4")]
		set
		{
		}
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x11B2F74", Offset = "0x11B2F74", VA = "0x11B2F74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x11B305C", Offset = "0x11B305C", VA = "0x11B305C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x11B30E0", Offset = "0x11B30E0", VA = "0x11B30E0")]
	public void UpdateXPosition(float newX)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x11B3144", Offset = "0x11B3144", VA = "0x11B3144")]
	public void AdjustXPosition(float updateX)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x11B2F04", Offset = "0x11B2F04", VA = "0x11B2F04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F4C8", Offset = "0xA4F4C8")]
	private IEnumerator AutoSlideShut()
	{
		return null;
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x11B31D4", Offset = "0x11B31D4", VA = "0x11B31D4")]
	public SlidingDoor()
	{
	}
}
[Token(Token = "0x2000136")]
public class Cannister : MonoBehaviour
{
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer m_CannisterRenderer;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody m_CannisterRigidbody;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public GrabbableExt m_CannisterGrabbable;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_CannisterGlobSFX;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 position;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion rotation;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 localScale;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1212ED4", Offset = "0x1212ED4", VA = "0x1212ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1212F78", Offset = "0x1212F78", VA = "0x1212F78")]
	public void ResetContainer()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x121302C", Offset = "0x121302C", VA = "0x121302C")]
	public void PickedUpGlob(SetRandomColor color)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1213084", Offset = "0x1213084", VA = "0x1213084")]
	public void Drop()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x12130B0", Offset = "0x12130B0", VA = "0x12130B0")]
	public Cannister()
	{
	}
}
[Token(Token = "0x2000137")]
public class Glob : MonoBehaviour
{
	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SetRandomColor _color;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isReachable;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool hasBeenPickedUp;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool hasBeenTasted;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GrabbableExt m_Grabbable;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DiscoInteriorSceneManager discoInterior;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 groundPosition;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 originalPosition;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isFloatingGlob;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 directionSpeed;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 startPosition;

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x126A2A0", Offset = "0x126A2A0", VA = "0x126A2A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x126A510", Offset = "0x126A510", VA = "0x126A510")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x126A6EC", Offset = "0x126A6EC", VA = "0x126A6EC")]
	public void ResetGlob()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x126A764", Offset = "0x126A764", VA = "0x126A764")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x126A940", Offset = "0x126A940", VA = "0x126A940")]
	public Glob()
	{
	}
}
[Token(Token = "0x2000138")]
public class EarTrigger : MonoBehaviour
{
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask validLayers;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_EarIsIn;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x13F5758", Offset = "0x13F5758", VA = "0x13F5758")]
	public bool IsEarIn()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x13F5760", Offset = "0x13F5760", VA = "0x13F5760")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x13F5878", Offset = "0x13F5878", VA = "0x13F5878")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x13F5950", Offset = "0x13F5950", VA = "0x13F5950")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x13F5A2C", Offset = "0x13F5A2C", VA = "0x13F5A2C")]
	public EarTrigger()
	{
	}
}
[Token(Token = "0x2000139")]
public class ListeningCup : MonoBehaviour
{
	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GrabbableExt m_Cup;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LayerMask validLayers;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource m_AmbientSoundStreet;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_AmbientSoundMadLab;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource m_AmbientSoundFlintPaper;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource m_AmbientSoundHallway;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource m_CurrRef;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ConversationTrigger m_Conversation;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private EarTrigger m_Ear;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string currentWall;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isValidLayer;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform m_PlayerFacing;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _playerFacing;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x115AF8C", Offset = "0x115AF8C", VA = "0x115AF8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x115AFF8", Offset = "0x115AFF8", VA = "0x115AFF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x115B3EC", Offset = "0x115B3EC", VA = "0x115B3EC")]
	private bool IsFacingRightWay()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x115B698", Offset = "0x115B698", VA = "0x115B698")]
	private void PlayAudio(AudioSource _audio)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x115B4F0", Offset = "0x115B4F0", VA = "0x115B4F0")]
	private void StopAudio()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x115B768", Offset = "0x115B768", VA = "0x115B768")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x115B9D8", Offset = "0x115B9D8", VA = "0x115B9D8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x115BC20", Offset = "0x115BC20", VA = "0x115BC20")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x115BE90", Offset = "0x115BE90", VA = "0x115BE90")]
	public ListeningCup()
	{
	}
}
[Token(Token = "0x200013A")]
public class Phone : EarTrigger
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ConversationTrigger m_Conversation;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_PhoneReset;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GrabbableObjectEventTrigger m_GrabbableObject;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isPlaced;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool playOnce;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int index;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x11348BC", Offset = "0x11348BC", VA = "0x11348BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x11348C8", Offset = "0x11348C8", VA = "0x11348C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x1134B2C", Offset = "0x1134B2C", VA = "0x1134B2C")]
	public void HangUp()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x1134CA0", Offset = "0x1134CA0", VA = "0x1134CA0")]
	public Phone()
	{
	}
}
[Token(Token = "0x200013B")]
public class RecordPlayer : MonoBehaviour
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource m_NeedleUp;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource m_NeedleDown;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource m_SongLoop;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_Record;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HingeHelperExt m_RecordArm;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform m_RecordArmPlaying;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform m_RecordArmNotPlaying;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Rigidbody m_KnobArm;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject OfficeBGM;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GrabbableExt m_RecordPlayerCase;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isPlaying;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_RotateSpeed;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ConversationListController _convoController;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool shouldPlayConvo;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool doOnce;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool hasBeenHeld;

	[Token(Token = "0x17000075")]
	public bool IsPlaying
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x10B9E9C", Offset = "0x10B9E9C", VA = "0x10B9E9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x10B9EA4", Offset = "0x10B9EA4", VA = "0x10B9EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x10BA048", Offset = "0x10BA048", VA = "0x10BA048")]
	public void MuteMusic()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x10BA068", Offset = "0x10BA068", VA = "0x10BA068")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x10BA6BC", Offset = "0x10BA6BC", VA = "0x10BA6BC")]
	private float getSmoothedValue(float val)
	{
		return default(float);
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x10BA6E0", Offset = "0x10BA6E0", VA = "0x10BA6E0")]
	public RecordPlayer()
	{
	}
}
[Token(Token = "0x200013C")]
public class MaxSniffScan : MonoBehaviour
{
	[Token(Token = "0x2000623")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35D0C", Offset = "0xA35D0C")]
	private sealed class <WaitAndEnableBaster>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaxSniffScan <>4__this;

		[Token(Token = "0x17000459")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A99")]
			[Address(RVA = "0x1331510", Offset = "0x1331510", VA = "0x1331510", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0x1331578", Offset = "0x1331578", VA = "0x1331578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0x13312FC", Offset = "0x13312FC", VA = "0x13312FC")]
		[DebuggerHidden]
		public <WaitAndEnableBaster>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0x1331444", Offset = "0x1331444", VA = "0x1331444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0x1331448", Offset = "0x1331448", VA = "0x1331448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0x1331518", Offset = "0x1331518", VA = "0x1331518", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000624")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35D1C", Offset = "0xA35D1C")]
	private sealed class <WaitForPlayerBasterGrab>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaxSniffScan <>4__this;

		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GrabbableExt <baster>5__2;

		[Token(Token = "0x1700045B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0x13316A0", Offset = "0x13316A0", VA = "0x13316A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AA1")]
			[Address(RVA = "0x1331708", Offset = "0x1331708", VA = "0x1331708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A9C")]
		[Address(RVA = "0x1331328", Offset = "0x1331328", VA = "0x1331328")]
		[DebuggerHidden]
		public <WaitForPlayerBasterGrab>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0x1331580", Offset = "0x1331580", VA = "0x1331580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0x1331584", Offset = "0x1331584", VA = "0x1331584", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0x13316A8", Offset = "0x13316A8", VA = "0x13316A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000625")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35D2C", Offset = "0xA35D2C")]
	private sealed class <WaitForPlayerMaxGrab>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaxSniffScan <>4__this;

		[Token(Token = "0x1700045D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AA5")]
			[Address(RVA = "0x13317C0", Offset = "0x13317C0", VA = "0x13317C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AA7")]
			[Address(RVA = "0x1331828", Offset = "0x1331828", VA = "0x1331828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0x1331354", Offset = "0x1331354", VA = "0x1331354")]
		[DebuggerHidden]
		public <WaitForPlayerMaxGrab>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0x1331710", Offset = "0x1331710", VA = "0x1331710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0x1331714", Offset = "0x1331714", VA = "0x1331714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0x13317C8", Offset = "0x13317C8", VA = "0x13317C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator m_MaxAnim;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_TurkeyBaster;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource[] m_MaxSniffSFX;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_MaxFlipSFX;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource m_MaxBasterRevealSFX;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GrabbableExt m_Max;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isGrabbable;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool wasHeld;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool isResetting;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 initPos;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion initRot;

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1330978", Offset = "0x1330978", VA = "0x1330978")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x1330AD8", Offset = "0x1330AD8", VA = "0x1330AD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x1330C80", Offset = "0x1330C80", VA = "0x1330C80")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1330DDC", Offset = "0x1330DDC", VA = "0x1330DDC")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x1330B30", Offset = "0x1330B30", VA = "0x1330B30")]
	public void ResetMax()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1330F38", Offset = "0x1330F38", VA = "0x1330F38")]
	public void ResetAnims()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1331118", Offset = "0x1331118", VA = "0x1331118")]
	public void ExitHandStand()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x1331188", Offset = "0x1331188", VA = "0x1331188")]
	public void Present()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x133128C", Offset = "0x133128C", VA = "0x133128C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F52C", Offset = "0xA4F52C")]
	private IEnumerator WaitAndEnableBaster()
	{
		return null;
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x133121C", Offset = "0x133121C", VA = "0x133121C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F590", Offset = "0xA4F590")]
	private IEnumerator WaitForPlayerBasterGrab()
	{
		return null;
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x13310B4", Offset = "0x13310B4", VA = "0x13310B4")]
	public void ToggleCollisions(bool detectCollisions)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x1330A68", Offset = "0x1330A68", VA = "0x1330A68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F5F4", Offset = "0xA4F5F4")]
	private IEnumerator WaitForPlayerMaxGrab()
	{
		return null;
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x1331380", Offset = "0x1331380", VA = "0x1331380")]
	public void Point()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x13313E0", Offset = "0x13313E0", VA = "0x13313E0")]
	public void PlaySniff()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x133143C", Offset = "0x133143C", VA = "0x133143C")]
	public MaxSniffScan()
	{
	}
}
[Token(Token = "0x200013D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32880", Offset = "0xA32880")]
public class ParkAnimTrigger : MonoBehaviour
{
	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string playerPrefsKey;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] m_ObjectsToEnable;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] m_ObjectsToDisable;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] m_ObjectsToDestroy;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent m_SkipAction;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x124E0E8", Offset = "0x124E0E8", VA = "0x124E0E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x124E258", Offset = "0x124E258", VA = "0x124E258")]
	public void CompletedTrigger()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x124E1E8", Offset = "0x124E1E8", VA = "0x124E1E8")]
	private void EnableObjects()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x124E314", Offset = "0x124E314", VA = "0x124E314")]
	public ParkAnimTrigger()
	{
	}
}
[Token(Token = "0x200013E")]
public class ParkAudioTrigger : MonoBehaviour
{
	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource m_Audio;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fDelay;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x124E36C", Offset = "0x124E36C", VA = "0x124E36C")]
	public void ParkAudioTriggered()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x124E390", Offset = "0x124E390", VA = "0x124E390")]
	public ParkAudioTrigger()
	{
	}
}
[Token(Token = "0x200013F")]
public class SamPuddle : MonoBehaviour
{
	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isSamPuddle;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SamPuddleTrigger[] m_SamPuddles;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_PuddleVFX;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hasBeenScooped;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool hasDialogue;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParkSceneManager m_SceneManager;

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x11839F8", Offset = "0x11839F8", VA = "0x11839F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1183AB4", Offset = "0x1183AB4", VA = "0x1183AB4")]
	public void MaxNose()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1183BEC", Offset = "0x1183BEC", VA = "0x1183BEC")]
	public void ScoopedWater()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1183D38", Offset = "0x1183D38", VA = "0x1183D38")]
	public SamPuddle()
	{
	}
}
[Token(Token = "0x2000140")]
public class SamPuddleTrigger : EventTrigger
{
	[Token(Token = "0x2000626")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35D3C", Offset = "0xA35D3C")]
	private sealed class <WaitAndInvoke>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SamPuddleTrigger <>4__this;

		[Token(Token = "0x1700045F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0x1184358", Offset = "0x1184358", VA = "0x1184358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000460")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0x11843C0", Offset = "0x11843C0", VA = "0x11843C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA8")]
		[Address(RVA = "0x1184260", Offset = "0x1184260", VA = "0x1184260")]
		[DebuggerHidden]
		public <WaitAndInvoke>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0x1184294", Offset = "0x1184294", VA = "0x1184294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0x1184298", Offset = "0x1184298", VA = "0x1184298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0x1184360", Offset = "0x1184360", VA = "0x1184360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _objectName;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _exactMatch;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _withDelay;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _delayAmount;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LayerMask validLayers;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool _triggerOnStay;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[SerializeField]
	private bool _isTimed;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _timeToActivate;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _lastStayTime;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _timer;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _isInArea;

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x1183D40", Offset = "0x1183D40", VA = "0x1183D40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1183DF4", Offset = "0x1183DF4", VA = "0x1183DF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1183E94", Offset = "0x1183E94", VA = "0x1183E94")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x1184084", Offset = "0x1184084", VA = "0x1184084")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x1184170", Offset = "0x1184170", VA = "0x1184170")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1184244", Offset = "0x1184244", VA = "0x1184244")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4F658", Offset = "0xA4F658")]
	public void DebugActivate()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1184014", Offset = "0x1184014", VA = "0x1184014")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F690", Offset = "0xA4F690")]
	private IEnumerator WaitAndInvoke()
	{
		return null;
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x118428C", Offset = "0x118428C", VA = "0x118428C")]
	public SamPuddleTrigger()
	{
	}
}
[Token(Token = "0x2000141")]
public class Burrito : HeatStickFood
{
	[Token(Token = "0x6000704")]
	[Address(RVA = "0x120DFBC", Offset = "0x120DFBC", VA = "0x120DFBC", Slot = "18")]
	public override void CombineItems()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x120E088", Offset = "0x120E088", VA = "0x120E088", Slot = "19")]
	public override void FinishedMicrowaving()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x120E150", Offset = "0x120E150", VA = "0x120E150")]
	public Burrito()
	{
	}
}
[Token(Token = "0x2000142")]
public class CornDogStick : MonoBehaviour
{
	[Token(Token = "0x6000707")]
	[Address(RVA = "0x122FC70", Offset = "0x122FC70", VA = "0x122FC70")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x122FD4C", Offset = "0x122FD4C", VA = "0x122FD4C")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x122FE28", Offset = "0x122FE28", VA = "0x122FE28")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x122FF04", Offset = "0x122FF04", VA = "0x122FF04")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x122FFE0", Offset = "0x122FFE0", VA = "0x122FFE0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x12300BC", Offset = "0x12300BC", VA = "0x12300BC")]
	public CornDogStick()
	{
	}
}
[Token(Token = "0x2000143")]
public class Corndog : HeatStickFood
{
	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _hasBeenGrabbed;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ConversationListController _convoController;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Task _lunchTask;

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x12300C4", Offset = "0x12300C4", VA = "0x12300C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1230150", Offset = "0x1230150", VA = "0x1230150")]
	private void Update()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x12302C0", Offset = "0x12302C0", VA = "0x12302C0")]
	private void CheckCondition(bool successOnly = false)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1230438", Offset = "0x1230438", VA = "0x1230438")]
	private void PlaySamConversation()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x12304D8", Offset = "0x12304D8", VA = "0x12304D8")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x12305B8", Offset = "0x12305B8", VA = "0x12305B8", Slot = "19")]
	public override void FinishedMicrowaving()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1230694", Offset = "0x1230694", VA = "0x1230694")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1230774", Offset = "0x1230774", VA = "0x1230774")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x1230854", Offset = "0x1230854", VA = "0x1230854")]
	private void OnTriggerStay(Collider collision)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x1230934", Offset = "0x1230934", VA = "0x1230934")]
	public Corndog()
	{
	}
}
[Token(Token = "0x2000144")]
public class Food : MonoBehaviour
{
	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_HeatVFX;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hasBeenMicrowaved;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool itemConfiguredCorrectly;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected LunchConversationResolver convoResolver;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent heatedEvent;

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x125CE94", Offset = "0x125CE94", VA = "0x125CE94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x125CF08", Offset = "0x125CF08", VA = "0x125CF08")]
	public void FinishedMicrowaving()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x125CFC0", Offset = "0x125CFC0", VA = "0x125CFC0")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x125D098", Offset = "0x125D098", VA = "0x125D098")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x125D220", Offset = "0x125D220", VA = "0x125D220")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x125D3E0", Offset = "0x125D3E0", VA = "0x125D3E0")]
	private void OnTriggerStay(Collider collision)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x125D4B8", Offset = "0x125D4B8", VA = "0x125D4B8")]
	public Food()
	{
	}
}
[Token(Token = "0x2000145")]
public class FoodStick : MonoBehaviour
{
	[Token(Token = "0x600071E")]
	[Address(RVA = "0x125D4C0", Offset = "0x125D4C0", VA = "0x125D4C0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x125D5C8", Offset = "0x125D5C8", VA = "0x125D5C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x125D6D0", Offset = "0x125D6D0", VA = "0x125D6D0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x125D7D8", Offset = "0x125D7D8", VA = "0x125D7D8")]
	public FoodStick()
	{
	}
}
[Token(Token = "0x2000146")]
public class HeatStickFood : MonoBehaviour, iStickable, iMicrowavable
{
	[Token(Token = "0x2000627")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35D4C", Offset = "0xA35D4C")]
	private sealed class <ReplaceStickWithCombined>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeatStickFood <>4__this;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Grabber <stickGrabber>5__2;

		[Token(Token = "0x17000461")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0x11A8420", Offset = "0x11A8420", VA = "0x11A8420", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000462")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0x11A8488", Offset = "0x11A8488", VA = "0x11A8488", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0x11A8244", Offset = "0x11A8244", VA = "0x11A8244")]
		[DebuggerHidden]
		public <ReplaceStickWithCombined>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0x11A82AC", Offset = "0x11A82AC", VA = "0x11A82AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0x11A82B0", Offset = "0x11A82B0", VA = "0x11A82B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0x11A8428", Offset = "0x11A8428", VA = "0x11A8428", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B388", Offset = "0xA3B388")]
	private bool <sticked>k__BackingField;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B398", Offset = "0xA3B398")]
	private bool <completedCombine>k__BackingField;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B3A8", Offset = "0xA3B3A8")]
	private bool <itemConfiguredCorrectly>k__BackingField;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _stick;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _hiddenStick;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider _hiddenCollider;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _waitForGrabAdjust;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B3D8", Offset = "0xA3B3D8")]
	private float <microwaveTime>k__BackingField;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B3E8", Offset = "0xA3B3E8")]
	private bool <hasBeenMicrowaved>k__BackingField;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Grabbable _grab;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _itemWasHeld;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float _gripOffset;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _shouldDoHaptics;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InputBridge _input;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject _heatVFX;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource _insertStickSFX;

	[Token(Token = "0x17000076")]
	public bool sticked
	{
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x11A79B4", Offset = "0x11A79B4", VA = "0x11A79B4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F6F4", Offset = "0xA4F6F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000723")]
		[Address(RVA = "0x11A79BC", Offset = "0x11A79BC", VA = "0x11A79BC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F704", Offset = "0xA4F704")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public bool completedCombine
	{
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x11A79C8", Offset = "0x11A79C8", VA = "0x11A79C8", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F714", Offset = "0xA4F714")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x11A79D0", Offset = "0x11A79D0", VA = "0x11A79D0", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F724", Offset = "0xA4F724")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public bool itemConfiguredCorrectly
	{
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x11A79DC", Offset = "0x11A79DC", VA = "0x11A79DC", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F734", Offset = "0xA4F734")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x11A79E4", Offset = "0x11A79E4", VA = "0x11A79E4", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F744", Offset = "0xA4F744")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public float microwaveTime
	{
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x11A79F0", Offset = "0x11A79F0", VA = "0x11A79F0", Slot = "13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F754", Offset = "0xA4F754")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x11A79F8", Offset = "0x11A79F8", VA = "0x11A79F8", Slot = "14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F764", Offset = "0xA4F764")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public bool hasBeenMicrowaved
	{
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x11A7A00", Offset = "0x11A7A00", VA = "0x11A7A00", Slot = "15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F774", Offset = "0xA4F774")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x11A7A08", Offset = "0x11A7A08", VA = "0x11A7A08", Slot = "16")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F784", Offset = "0xA4F784")]
		set
		{
		}
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x11A7A14", Offset = "0x11A7A14", VA = "0x11A7A14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x11A7AE4", Offset = "0x11A7AE4", VA = "0x11A7AE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x11A7E24", Offset = "0x11A7E24", VA = "0x11A7E24", Slot = "10")]
	public void AddStick(GameObject stick)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x11A7F54", Offset = "0x11A7F54", VA = "0x11A7F54", Slot = "11")]
	public void RemoveStick(GameObject stick)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x11A7FE8", Offset = "0x11A7FE8", VA = "0x11A7FE8", Slot = "18")]
	public virtual void CombineItems()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x11A80EC", Offset = "0x11A80EC", VA = "0x11A80EC")]
	private void DestroyStick()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x11A7DB4", Offset = "0x11A7DB4", VA = "0x11A7DB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F794", Offset = "0xA4F794")]
	protected IEnumerator ReplaceStickWithCombined()
	{
		return null;
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x11A8270", Offset = "0x11A8270", VA = "0x11A8270", Slot = "19")]
	public virtual void FinishedMicrowaving()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x11A829C", Offset = "0x11A829C", VA = "0x11A829C")]
	public HeatStickFood()
	{
	}
}
[Token(Token = "0x2000147")]
public class MicrowavableGun : MonoBehaviour, iMicrowavable
{
	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B428", Offset = "0xA3B428")]
	private float <microwaveTime>k__BackingField;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B438", Offset = "0xA3B438")]
	private bool <hasBeenMicrowaved>k__BackingField;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RaycastWeapon _gun;

	[Token(Token = "0x1700007B")]
	public float microwaveTime
	{
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x1332E34", Offset = "0x1332E34", VA = "0x1332E34", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F7F8", Offset = "0xA4F7F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x1332E3C", Offset = "0x1332E3C", VA = "0x1332E3C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F808", Offset = "0xA4F808")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public bool hasBeenMicrowaved
	{
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1332E44", Offset = "0x1332E44", VA = "0x1332E44", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F818", Offset = "0xA4F818")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x1332E4C", Offset = "0x1332E4C", VA = "0x1332E4C", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4F828", Offset = "0xA4F828")]
		set
		{
		}
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1332E58", Offset = "0x1332E58", VA = "0x1332E58")]
	private void Start()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x1332E64", Offset = "0x1332E64", VA = "0x1332E64", Slot = "8")]
	public void FinishedMicrowaving()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x1332EAC", Offset = "0x1332EAC", VA = "0x1332EAC")]
	public MicrowavableGun()
	{
	}
}
[Token(Token = "0x2000148")]
public class Microwave : MonoBehaviour
{
	[Token(Token = "0x2000628")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35D5C", Offset = "0xA35D5C")]
	private sealed class <StartMicrowaving>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Microwave <>4__this;

		[Token(Token = "0x17000463")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x1333C10", Offset = "0x1333C10", VA = "0x1333C10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000464")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AB9")]
			[Address(RVA = "0x1333C78", Offset = "0x1333C78", VA = "0x1333C78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0x13332CC", Offset = "0x13332CC", VA = "0x13332CC")]
		[DebuggerHidden]
		public <StartMicrowaving>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002AB5")]
		[Address(RVA = "0x133390C", Offset = "0x133390C", VA = "0x133390C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0x1333910", Offset = "0x1333910", VA = "0x1333910", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0x1333C18", Offset = "0x1333C18", VA = "0x1333C18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HingeHelperExt m_MicrowaveTimer;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HingeJoint m_MicrowaveDoor;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_MicrowaveLight;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_MicrowaveStartSFX;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource m_MicrowaveLoopSFX;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource m_MicrowaveEndSFX;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool objectInPlace;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float rotationSpeed;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion endRot;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float fTimeMicrowaving;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isMicrowaving;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<int, GameObject> ObjectDictionary;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LunchConversationResolver convoResolver;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool didMicrowaveSomething;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ConversationListController convController;

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x1332EB4", Offset = "0x1332EB4", VA = "0x1332EB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x1332F74", Offset = "0x1332F74", VA = "0x1332F74")]
	public void StartButtonPressed()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x1333010", Offset = "0x1333010", VA = "0x1333010")]
	private void Update()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x1332FA0", Offset = "0x1332FA0", VA = "0x1332FA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F838", Offset = "0xA4F838")]
	private IEnumerator StartMicrowaving()
	{
		return null;
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x13332F8", Offset = "0x13332F8", VA = "0x13332F8")]
	private void PlaySFX()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x1333314", Offset = "0x1333314", VA = "0x1333314")]
	private void MicrowaveCheck()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1333650", Offset = "0x1333650", VA = "0x1333650")]
	public bool isApproximate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x133366C", Offset = "0x133366C", VA = "0x133366C")]
	private bool IsDoorClosed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x13336D0", Offset = "0x13336D0", VA = "0x13336D0")]
	private void OnTriggerStay(Collider collider)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x13337C0", Offset = "0x13337C0", VA = "0x13337C0")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1333894", Offset = "0x1333894", VA = "0x1333894")]
	public Microwave()
	{
	}
}
[Token(Token = "0x2000149")]
public class ObstacleBallandChain : MonoBehaviour
{
	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool shouldMove;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_ObjToMove;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isDisabled;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_fSpeed;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ObstaclePunchingClown m_Clown;

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x12B0190", Offset = "0x12B0190", VA = "0x12B0190")]
	private void Update()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x12B060C", Offset = "0x12B060C", VA = "0x12B060C")]
	public void ResetItem()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x12B0614", Offset = "0x12B0614", VA = "0x12B0614")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x12B0720", Offset = "0x12B0720", VA = "0x12B0720")]
	public ObstacleBallandChain()
	{
	}
}
[Token(Token = "0x200014A")]
public class ObstacleBallandChainActivity : MonoBehaviour
{
	[Token(Token = "0x2000629")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35D6C", Offset = "0xA35D6C")]
	private sealed class <WaitAndSpawnObstacles>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleBallandChainActivity <>4__this;

		[Token(Token = "0x17000465")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0x12B1130", Offset = "0x12B1130", VA = "0x12B1130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000466")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0x12B1198", Offset = "0x12B1198", VA = "0x12B1198", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0x12B0C28", Offset = "0x12B0C28", VA = "0x12B0C28")]
		[DebuggerHidden]
		public <WaitAndSpawnObstacles>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x12B1018", Offset = "0x12B1018", VA = "0x12B1018", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x12B101C", Offset = "0x12B101C", VA = "0x12B101C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0x12B1138", Offset = "0x12B1138", VA = "0x12B1138", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] m_ChainBallPrefab;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform[] m_SpawnPoints;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_TeleportBlocker;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_ConveryorBeltLoop;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource m_ConveryorBeltStart;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CharacterController characterController;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GenericSceneManager m_SceneManager;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<ObstacleBallandChain> m_SpawnedObstacles;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int obstaclesDodged;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int totalObstacles;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int lastIndex;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int previousIndex;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_fSpeed;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool hasStarted;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool poolObjects;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool spawnObjects;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	public bool completed;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool shouldLockHeight;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 playerPos;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CharacterController m_player;

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x12B0738", Offset = "0x12B0738", VA = "0x12B0738")]
	public void PlayerTriggeredBallandChain()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x12B0940", Offset = "0x12B0940", VA = "0x12B0940")]
	public void AddSceneManager(GenericSceneManager sceneManager)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x12B0948", Offset = "0x12B0948", VA = "0x12B0948")]
	public void ResetActivity()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x12B0AAC", Offset = "0x12B0AAC", VA = "0x12B0AAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x12B08D0", Offset = "0x12B08D0", VA = "0x12B08D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F89C", Offset = "0xA4F89C")]
	private IEnumerator WaitAndSpawnObstacles()
	{
		return null;
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x12B0C54", Offset = "0x12B0C54", VA = "0x12B0C54")]
	private void SpawnObstacle()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x12B0F2C", Offset = "0x12B0F2C", VA = "0x12B0F2C")]
	public void OnObstacleComplete()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x12B0F90", Offset = "0x12B0F90", VA = "0x12B0F90")]
	public ObstacleBallandChainActivity()
	{
	}
}
[Token(Token = "0x200014B")]
public class ObstacleBasketball : MonoBehaviour
{
	[Token(Token = "0x200062A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35D7C", Offset = "0xA35D7C")]
	private sealed class <WaitAndDetonate>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleBasketball <>4__this;

		[Token(Token = "0x17000467")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x12B2690", Offset = "0x12B2690", VA = "0x12B2690", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000468")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0x12B26F8", Offset = "0x12B26F8", VA = "0x12B26F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0x12B1A00", Offset = "0x12B1A00", VA = "0x12B1A00")]
		[DebuggerHidden]
		public <WaitAndDetonate>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0x12B2480", Offset = "0x12B2480", VA = "0x12B2480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AC2")]
		[Address(RVA = "0x12B2484", Offset = "0x12B2484", VA = "0x12B2484", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC4")]
		[Address(RVA = "0x12B2698", Offset = "0x12B2698", VA = "0x12B2698", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObstacleBasketballActivity m_BasketballActivity;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject meshRenderer;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_BombVFX;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_BombSFX;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Collider m_BombCollider;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GrabbableExt m_Basketball;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Dart m_BallObj;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_BombFuse;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_BombSmallVFX;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioSource m_FuseSFX;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool countedScore;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool didHitHoop;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool wasHeld;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	private bool didGoThroughHoop;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool doOnce;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool isFuseActive;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool isResetting;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float fTimeRemaining;

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x12B166C", Offset = "0x12B166C", VA = "0x12B166C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x12B172C", Offset = "0x12B172C", VA = "0x12B172C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x12B1910", Offset = "0x12B1910", VA = "0x12B1910")]
	private void OnItemReset()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x12B18A0", Offset = "0x12B18A0", VA = "0x12B18A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F900", Offset = "0xA4F900")]
	private IEnumerator WaitAndDetonate()
	{
		return null;
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x12B1A2C", Offset = "0x12B1A2C", VA = "0x12B1A2C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x12B1D64", Offset = "0x12B1D64", VA = "0x12B1D64")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x12B22C0", Offset = "0x12B22C0", VA = "0x12B22C0")]
	public void BombPrepare()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x12B2398", Offset = "0x12B2398", VA = "0x12B2398")]
	public void BombsReset()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x12B23F8", Offset = "0x12B23F8", VA = "0x12B23F8")]
	public void ToggleCollisions(bool detectCollisions)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x12B1938", Offset = "0x12B1938", VA = "0x12B1938")]
	public void ResetScoring()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x12B2468", Offset = "0x12B2468", VA = "0x12B2468")]
	public ObstacleBasketball()
	{
	}
}
[Token(Token = "0x200014C")]
public class ObstacleBasketballActivity : Activity
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GenericSceneManager m_SceneManager;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string gradeID;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int totalScores;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool doOnce;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Animator m_BasketballGameBooth;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private ReusableItemGroupManager m_Bombs;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Animator m_Basketballs;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject m_BasketVFX;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioSource m_BasketSFX;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioSource m_BombDisepenseSFX;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioSource m_TimerEndSFX;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro timer;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private ObstacleBasketball[] m_BasketBalls;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool isActive;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float gameTimer;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool hasPlayedEndTimer;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _randomConvoCountdown;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _hasStarted;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<int> _usedRandom;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int basketballsMade;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x12B2700", Offset = "0x12B2700", VA = "0x12B2700")]
	private void Start()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x12B2778", Offset = "0x12B2778", VA = "0x12B2778")]
	private void Update()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x12B2BF8", Offset = "0x12B2BF8", VA = "0x12B2BF8")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x12B2C1C", Offset = "0x12B2C1C", VA = "0x12B2C1C")]
	public void AddSceneManager(GenericSceneManager sceneManager)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x12B2030", Offset = "0x12B2030", VA = "0x12B2030")]
	public void AddScore(int score, bool didHitHoop)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x12B1C40", Offset = "0x12B1C40", VA = "0x12B1C40")]
	public void AddMiss(bool didHitHoop)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x12B3020", Offset = "0x12B3020", VA = "0x12B3020")]
	public void EnableBombs()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x12B3070", Offset = "0x12B3070", VA = "0x12B3070")]
	public void ResetBombs()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x12B31B4", Offset = "0x12B31B4", VA = "0x12B31B4")]
	public void PrepareBombs()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x12B32B4", Offset = "0x12B32B4", VA = "0x12B32B4")]
	public void ToggleBombsOn()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x12B32CC", Offset = "0x12B32CC", VA = "0x12B32CC")]
	public void ToggleBombs(bool toggle)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x12B3198", Offset = "0x12B3198", VA = "0x12B3198")]
	public void PlayDispenseBombsSFX()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x12B32F8", Offset = "0x12B32F8", VA = "0x12B32F8")]
	public ObstacleBasketballActivity()
	{
	}
}
[Token(Token = "0x200014D")]
public class ObstacleBasketballTarget : MonoBehaviour
{
	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool TopTarget;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int scorePerBasket;

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x12B3308", Offset = "0x12B3308", VA = "0x12B3308")]
	public int GetScore()
	{
		return default(int);
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x12B3310", Offset = "0x12B3310", VA = "0x12B3310")]
	public ObstacleBasketballTarget()
	{
	}
}
[Token(Token = "0x200014E")]
public class ObstacleCraneGameActivity : MonoBehaviour
{
	[Token(Token = "0x200062B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35D8C", Offset = "0xA35D8C")]
	private sealed class <WaitAndCraneIdle>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCraneGameActivity <>4__this;

		[Token(Token = "0x17000469")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x1115CC0", Offset = "0x1115CC0", VA = "0x1115CC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0x1115D28", Offset = "0x1115D28", VA = "0x1115D28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0x1115BC8", Offset = "0x1115BC8", VA = "0x1115BC8")]
		[DebuggerHidden]
		public <WaitAndCraneIdle>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0x1115BF4", Offset = "0x1115BF4", VA = "0x1115BF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0x1115BF8", Offset = "0x1115BF8", VA = "0x1115BF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ACA")]
		[Address(RVA = "0x1115CC8", Offset = "0x1115CC8", VA = "0x1115CC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200062C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35D9C", Offset = "0xA35D9C")]
	private sealed class <WaitAndAttemptGrab>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCraneGameActivity <>4__this;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RaycastHit <hit>5__2;

		[Token(Token = "0x1700046B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ACF")]
			[Address(RVA = "0x1115B58", Offset = "0x1115B58", VA = "0x1115B58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AD1")]
			[Address(RVA = "0x1115BC0", Offset = "0x1115BC0", VA = "0x1115BC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0x1115458", Offset = "0x1115458", VA = "0x1115458")]
		[DebuggerHidden]
		public <WaitAndAttemptGrab>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0x1115484", Offset = "0x1115484", VA = "0x1115484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0x1115488", Offset = "0x1115488", VA = "0x1115488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0x1115B60", Offset = "0x1115B60", VA = "0x1115B60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private JoystickControl m_JoystickControl;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Grabbable m_Joystick;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_Claw;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator m_ClawAnim;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ButtonExt m_ClawGrabButton;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator m_NextObstacle;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Animator m_ObstacleExit;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_ObjectHolder;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource m_GrabClaw;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioSource m_LowerClaw;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioSource m_ClawMoveX;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource m_ClawMoveY;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioSource m_ClawOpen;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioSource m_ClawStart;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioSource m_ClawEnd;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioSource m_ToyGrab;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioSource m_TimerEndSFX;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float fJoystickSpeed;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float fSpeed;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float userSpeed;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 dropPosition;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float minX;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float minY;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float maxX;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float maxY;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool doOnce;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float grabHeight;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float aimHeight;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float aimOffset;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool isReleasingPrize;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool isMoving;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool isMovingX;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
	private bool isMovingY;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool isGrabbing;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool isPrizeAttached;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int attemptedGrabs;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ObstacleCraneGamePrize m_Prize;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ObstacleCourse03SceneManager m_SceneManager;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject m_GiantMaxTrigger;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool readyToScore;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool didFinish;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	private bool isIdling;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	private bool playOnce;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x12BD8B4", Offset = "0x12BD8B4", VA = "0x12BD8B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x12BD988", Offset = "0x12BD988", VA = "0x12BD988")]
	private void Update()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x12BDA6C", Offset = "0x12BDA6C", VA = "0x12BDA6C")]
	public void OnJoystickChange(float leverX, float leverY)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x12BDF5C", Offset = "0x12BDF5C", VA = "0x12BDF5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F964", Offset = "0xA4F964")]
	private IEnumerator WaitAndCraneIdle()
	{
		return null;
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x12BDFCC", Offset = "0x12BDFCC", VA = "0x12BDFCC")]
	public void OnGrabbedPrize(ObstacleCraneGamePrize obstacleCraneGamePrize)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x12BE074", Offset = "0x12BE074", VA = "0x12BE074")]
	public void OnPrizeScored()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x12BE224", Offset = "0x12BE224", VA = "0x12BE224")]
	public void OnPrizeDropped()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x12BE308", Offset = "0x12BE308", VA = "0x12BE308")]
	public void OnClawGrabButtonDown()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x12BE3D8", Offset = "0x12BE3D8", VA = "0x12BE3D8")]
	private void CloseClaw()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x12BE508", Offset = "0x12BE508", VA = "0x12BE508")]
	public void OnPrizeDropFail(ObstacleCraneGamePrize obstacleCraneGamePrize)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x12BE6AC", Offset = "0x12BE6AC", VA = "0x12BE6AC")]
	private void CloseClawFail()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x12BE70C", Offset = "0x12BE70C", VA = "0x12BE70C")]
	private void OpenClaw()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x12BE368", Offset = "0x12BE368", VA = "0x12BE368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4F9C8", Offset = "0xA4F9C8")]
	private IEnumerator WaitAndAttemptGrab()
	{
		return null;
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x12BD9B4", Offset = "0x12BD9B4", VA = "0x12BD9B4")]
	private void StopAllAudio()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x12BE194", Offset = "0x12BE194", VA = "0x12BE194")]
	private void EnableNextObstacle()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x12BE848", Offset = "0x12BE848", VA = "0x12BE848")]
	public ObstacleCraneGameActivity()
	{
	}
}
[Token(Token = "0x200014F")]
public class ObstacleCraneGamePrize : MonoBehaviour
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObstacleCraneGameActivity m_CraneGame;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x1115D30", Offset = "0x1115D30", VA = "0x1115D30")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x1115DD4", Offset = "0x1115DD4", VA = "0x1115DD4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x1115E78", Offset = "0x1115E78", VA = "0x1115E78")]
	public void EnableGrabbable()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x1115EDC", Offset = "0x1115EDC", VA = "0x1115EDC")]
	public ObstacleCraneGamePrize()
	{
	}
}
[Token(Token = "0x2000150")]
public class ObstacleBall : MonoBehaviour
{
	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Dart m_BallObj;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isDunkBoothBall;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3B798", Offset = "0xA3B798")]
	private bool <CountedScore>k__BackingField;

	[Token(Token = "0x1700007D")]
	public bool CountedScore
	{
		[Token(Token = "0x6000781")]
		[Address(RVA = "0x12AEDB4", Offset = "0x12AEDB4", VA = "0x12AEDB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4FA2C", Offset = "0xA4FA2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000782")]
		[Address(RVA = "0x12AEDBC", Offset = "0x12AEDBC", VA = "0x12AEDBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4FA3C", Offset = "0xA4FA3C")]
		set
		{
		}
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x12AEDC8", Offset = "0x12AEDC8", VA = "0x12AEDC8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x12AF250", Offset = "0x12AF250", VA = "0x12AF250")]
	public ObstacleBall()
	{
	}
}
[Token(Token = "0x2000151")]
public class ObstacleBallToss : MonoBehaviour
{
	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string gradeID;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ObstacleBallTossTarget[] m_Targets;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator m_NextObstacle;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator m_BallTossGameBooth;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int m_TargetsLeft;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ReusableItemGroupManager m_ThrowableItems;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource m_HitSFX;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource m_TimerEndSFX;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int m_ScoreToAdd;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshPro timer;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro score;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float gameTimer;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isActive;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<int> targets;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int totalNumberTargets;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool doOnce;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool hasPlayedEndTimer;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool waitToChangeTarget;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_fWaitTime;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int timesChanged;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int totalScore;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _randomConvoCountdown;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<int> _usedRandom;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<int> _usedSuccess;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<int> _usedFailure;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x12AF258", Offset = "0x12AF258", VA = "0x12AF258")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x12AF448", Offset = "0x12AF448", VA = "0x12AF448")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x12AF45C", Offset = "0x12AF45C", VA = "0x12AF45C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x12AF944", Offset = "0x12AF944", VA = "0x12AF944")]
	public List<int> Shuffle(List<int> list)
	{
		return null;
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x12AF34C", Offset = "0x12AF34C", VA = "0x12AF34C")]
	private void ChangeTarget()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x12AFA68", Offset = "0x12AFA68", VA = "0x12AFA68")]
	public void ObstacleHit(ObstacleBallTossTarget target)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x12AFD70", Offset = "0x12AFD70", VA = "0x12AFD70")]
	public void EnableNextObstacle()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x12AFE14", Offset = "0x12AFE14", VA = "0x12AFE14")]
	public void EnableObstacle()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x12AF094", Offset = "0x12AF094", VA = "0x12AF094")]
	public void PlayMissSound()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x12AFEEC", Offset = "0x12AFEEC", VA = "0x12AFEEC")]
	public ObstacleBallToss()
	{
	}
}
[Token(Token = "0x2000152")]
public class ObstacleBallTossTarget : MonoBehaviour
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnObstacleHit;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x12AFF84", Offset = "0x12AFF84", VA = "0x12AFF84")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x12B0098", Offset = "0x12B0098", VA = "0x12B0098")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x12B0188", Offset = "0x12B0188", VA = "0x12B0188")]
	public ObstacleBallTossTarget()
	{
	}
}
[Token(Token = "0x2000153")]
public class ObstacleBalloon : MonoBehaviour
{
	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hasbeenPopped;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource m_PoppingSound;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] objectsToDisable;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_PoppingVFX;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Damageable m_BalloonDamagable;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LODGroup m_lodGroup;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private BoxCollider m_BalloonCollider;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int balloonsPopped;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x12B11A0", Offset = "0x12B11A0", VA = "0x12B11A0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x12B12D0", Offset = "0x12B12D0", VA = "0x12B12D0")]
	public void PlayerPoppedBalloon()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x12B1660", Offset = "0x12B1660", VA = "0x12B1660")]
	public ObstacleBalloon()
	{
	}
}
[Token(Token = "0x2000154")]
public class ObstacleCharacterGun : MonoBehaviour
{
	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_Bullet;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_ProjectileSpawn;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_Player;

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x12B3320", Offset = "0x12B3320", VA = "0x12B3320")]
	public void ShootGun()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x12B34A0", Offset = "0x12B34A0", VA = "0x12B34A0")]
	public ObstacleCharacterGun()
	{
	}
}
[Token(Token = "0x2000155")]
public class ObstacleCharacterShooting : MonoBehaviour
{
	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator m_CharacterAnim;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_GunAnchor;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool firingAtPlayer;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_Player;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fShootTime;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x12B34A8", Offset = "0x12B34A8", VA = "0x12B34A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x12B34AC", Offset = "0x12B34AC", VA = "0x12B34AC")]
	public void ClearOutGuns()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x12B3574", Offset = "0x12B3574", VA = "0x12B3574")]
	public void Update()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x12B381C", Offset = "0x12B381C", VA = "0x12B381C")]
	public void ToggleShooting(bool toggle)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x12B37C0", Offset = "0x12B37C0", VA = "0x12B37C0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4FA4C", Offset = "0xA4FA4C")]
	public void Shoot()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x12B3828", Offset = "0x12B3828", VA = "0x12B3828")]
	public ObstacleCharacterShooting()
	{
	}
}
[Token(Token = "0x2000156")]
public class ObstacleClimbingActivity : MonoBehaviour
{
	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator m_NextObstacle;

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x12B3838", Offset = "0x12B3838", VA = "0x12B3838")]
	public void EnableNextObstacle()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x12B3898", Offset = "0x12B3898", VA = "0x12B3898")]
	public ObstacleClimbingActivity()
	{
	}
}
[Token(Token = "0x2000157")]
public class ObstacleCrane : MonoBehaviour
{
	[Token(Token = "0x200062D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35DAC", Offset = "0xA35DAC")]
	private sealed class <WaitAndActivateDialogue>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCrane <>4__this;

		[Token(Token = "0x1700046D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AD5")]
			[Address(RVA = "0x12BD844", Offset = "0x12BD844", VA = "0x12BD844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AD7")]
			[Address(RVA = "0x12BD8AC", Offset = "0x12BD8AC", VA = "0x12BD8AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x12BD6C8", Offset = "0x12BD6C8", VA = "0x12BD6C8")]
		[DebuggerHidden]
		public <WaitAndActivateDialogue>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0x12BD75C", Offset = "0x12BD75C", VA = "0x12BD75C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0x12BD760", Offset = "0x12BD760", VA = "0x12BD760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0x12BD84C", Offset = "0x12BD84C", VA = "0x12BD84C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator m_GrapplingHookAnim;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ClimbableExt m_GrapplingHook;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ObstacleCourse01SceneManager m_SceneManager;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_CraneFallSFX;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool hasBeenGrabbed;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool waitingForGrab;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool doOnce;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool playOnce;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasEnabled;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x12BD45C", Offset = "0x12BD45C", VA = "0x12BD45C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x12BD52C", Offset = "0x12BD52C", VA = "0x12BD52C")]
	public void GrapplingHookReset()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x12BD5C0", Offset = "0x12BD5C0", VA = "0x12BD5C0")]
	public void EnableGrapplingHook()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x12BD658", Offset = "0x12BD658", VA = "0x12BD658")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FA84", Offset = "0xA4FA84")]
	private IEnumerator WaitAndActivateDialogue()
	{
		return null;
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x12BD6F4", Offset = "0x12BD6F4", VA = "0x12BD6F4")]
	public void RaiseGrapplingHook()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x12BD528", Offset = "0x12BD528", VA = "0x12BD528")]
	public void GrapplingHookGrabbed()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x12BD754", Offset = "0x12BD754", VA = "0x12BD754")]
	public ObstacleCrane()
	{
	}
}
[Token(Token = "0x2000158")]
public class ObstacleDartActivity : MonoBehaviour
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string gradeID;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_TargetsLeft;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool enableOnStart;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Damageable[] m_DartTargets;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator m_DartGameBooth;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator m_NextObstacle;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int scoreToAdd;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource m_TimerEndSFX;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ReusableItemGroupManager m_ThrowableItems;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool doOnce;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool hasPlayedEndTimer;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshPro timer;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro score;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float gameTimer;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isActive;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int totalScoreGained;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _randomConvoCountdown;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _hasStarted;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<int> _usedRandom;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<int> _usedSuccess;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<int> _usedFailure;

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1115EE4", Offset = "0x1115EE4", VA = "0x1115EE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x111608C", Offset = "0x111608C", VA = "0x111608C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x1116544", Offset = "0x1116544", VA = "0x1116544")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x1116568", Offset = "0x1116568", VA = "0x1116568")]
	public void DartTargetHit(Damageable dart)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x11168B0", Offset = "0x11168B0", VA = "0x11168B0")]
	public void EnableNextObstacle()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x1115FB4", Offset = "0x1115FB4", VA = "0x1115FB4")]
	public void EnableObstacle()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1116954", Offset = "0x1116954", VA = "0x1116954")]
	public void PlayMissSound()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x11163F8", Offset = "0x11163F8", VA = "0x11163F8")]
	private void PlayEndingConversation()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x1116B10", Offset = "0x1116B10", VA = "0x1116B10")]
	public ObstacleDartActivity()
	{
	}
}
[Token(Token = "0x2000159")]
public class ObstacleDunkBoothActivity : MonoBehaviour
{
	[Token(Token = "0x200062E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35DBC", Offset = "0xA35DBC")]
	private sealed class <WaitAndDeactivateBooth>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleDunkBoothActivity <>4__this;

		[Token(Token = "0x1700046F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ADB")]
			[Address(RVA = "0x1117364", Offset = "0x1117364", VA = "0x1117364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000470")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0x11173CC", Offset = "0x11173CC", VA = "0x11173CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0x1116EA4", Offset = "0x1116EA4", VA = "0x1116EA4")]
		[DebuggerHidden]
		public <WaitAndDeactivateBooth>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x1116F30", Offset = "0x1116F30", VA = "0x1116F30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x1116F34", Offset = "0x1116F34", VA = "0x1116F34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x111736C", Offset = "0x111736C", VA = "0x111736C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObstacleDunkBoothTarget m_Target;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator m_GameBooth;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator m_MaxAnimator;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator m_DunkAnimator;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_fAnimationWaitTime;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string m_AnimationTriggerName;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ReusableItemGroupManager m_Balls;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource m_MaxDunkedHitSFX;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource m_MaxDunkedSFX;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshProUGUI score;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool didFinish;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int successfulAttempts;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GenericSceneManager m_SceneManager;

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x1116B30", Offset = "0x1116B30", VA = "0x1116B30")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4FAE8", Offset = "0xA4FAE8")]
	public void ObstacleDunkBoothTargetHit()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x1116D48", Offset = "0x1116D48", VA = "0x1116D48")]
	private void ResetMax()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x1116CD8", Offset = "0x1116CD8", VA = "0x1116CD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FB20", Offset = "0xA4FB20")]
	private IEnumerator WaitAndDeactivateBooth()
	{
		return null;
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x1116ED0", Offset = "0x1116ED0", VA = "0x1116ED0")]
	public ObstacleDunkBoothActivity()
	{
	}
}
[Token(Token = "0x200015A")]
public class ObstacleDunkBoothTarget : MonoBehaviour
{
	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnObstacleHit;

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x11173D4", Offset = "0x11173D4", VA = "0x11173D4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x11174E8", Offset = "0x11174E8", VA = "0x11174E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x11175D8", Offset = "0x11175D8", VA = "0x11175D8")]
	public ObstacleDunkBoothTarget()
	{
	}
}
[Token(Token = "0x200015B")]
public class ObstacleMaxThrowActivity : MonoBehaviour
{
	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObstacleMaxThrowTarget[] m_FirstStackTargets;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ObstacleMaxThrowTarget[] m_SecondStackTargets;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ObstacleMaxThrowTarget[] m_ThirdStackTargets;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] m_HitVFX;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource m_TimerEndSFX;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator m_NextObstacle;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Animator m_MaxThrowGameBooth;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource m_BowlingSFX;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int[] m_TargetsLeft;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int lastTarget;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool didFinish;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float gameTimer;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int totalScore;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isActive;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool waitToChangeTarget;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_fWaitTime;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool didHitObject;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool hasPlayedEndTimer;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ThrowableCharacter m_MaxThrowChar;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro timer;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro score;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GenericSceneManager m_SceneManager;

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1117C98", Offset = "0x1117C98", VA = "0x1117C98")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x1117D50", Offset = "0x1117D50", VA = "0x1117D50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x1117E08", Offset = "0x1117E08", VA = "0x1117E08")]
	public void EnableThrowableMaxCharacter()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1117E0C", Offset = "0x1117E0C", VA = "0x1117E0C")]
	public void PlayerApproachedActivity()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x1117E58", Offset = "0x1117E58", VA = "0x1117E58")]
	public void MaxThrowResetEvent()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1117F4C", Offset = "0x1117F4C", VA = "0x1117F4C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4FB84", Offset = "0xA4FB84")]
	public void ObstacleHitTest()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1118298", Offset = "0x1118298", VA = "0x1118298")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x11182A4", Offset = "0x11182A4", VA = "0x11182A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1117F58", Offset = "0x1117F58", VA = "0x1117F58")]
	public void ObstacleHit(ObstacleMaxThrowTarget target, int stackIndex)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x11184A4", Offset = "0x11184A4", VA = "0x11184A4")]
	public void IndirectHit(ObstacleMaxThrowTarget target, int stackIndex)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x11185E4", Offset = "0x11185E4", VA = "0x11185E4")]
	public void ObstacleMiss()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x111874C", Offset = "0x111874C", VA = "0x111874C")]
	public void EnableNextObstacle()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x11188E4", Offset = "0x11188E4", VA = "0x11188E4")]
	public void EnableObstacle()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x1118944", Offset = "0x1118944", VA = "0x1118944")]
	public ObstacleMaxThrowActivity()
	{
	}
}
[Token(Token = "0x200015C")]
public class ObstacleMaxThrowTarget : MonoBehaviour
{
	[Token(Token = "0x200062F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35DCC", Offset = "0xA35DCC")]
	private sealed class <WaitAndActivate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleMaxThrowTarget <>4__this;

		[Token(Token = "0x17000471")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AE1")]
			[Address(RVA = "0x1118D4C", Offset = "0x1118D4C", VA = "0x1118D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000472")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0x1118DB4", Offset = "0x1118DB4", VA = "0x1118DB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0x1118A70", Offset = "0x1118A70", VA = "0x1118A70")]
		[DebuggerHidden]
		public <WaitAndActivate>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x1118C98", Offset = "0x1118C98", VA = "0x1118C98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x1118C9C", Offset = "0x1118C9C", VA = "0x1118C9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x1118D54", Offset = "0x1118D54", VA = "0x1118D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObstacleMaxThrowActivity m_MaxThrowActivity;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_StackIndex;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isMissedTarget;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool doOnce;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private new bool enabled;

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x11189D4", Offset = "0x11189D4", VA = "0x11189D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1118A00", Offset = "0x1118A00", VA = "0x1118A00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FBBC", Offset = "0xA4FBBC")]
	private IEnumerator WaitAndActivate()
	{
		return null;
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x1118A9C", Offset = "0x1118A9C", VA = "0x1118A9C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1118C90", Offset = "0x1118C90", VA = "0x1118C90")]
	public ObstacleMaxThrowTarget()
	{
	}
}
[Token(Token = "0x200015D")]
public class ObstaclePunchActivity : MonoBehaviour
{
	[Token(Token = "0x2000630")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35DDC", Offset = "0xA35DDC")]
	private sealed class <WaitAndEnablePunchingClowns>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstaclePunchActivity <>4__this;

		[Token(Token = "0x17000473")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0x11199D0", Offset = "0x11199D0", VA = "0x11199D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000474")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x1119A38", Offset = "0x1119A38", VA = "0x1119A38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x11196B8", Offset = "0x11196B8", VA = "0x11196B8")]
		[DebuggerHidden]
		public <WaitAndEnablePunchingClowns>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0x11198C8", Offset = "0x11198C8", VA = "0x11198C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x11198CC", Offset = "0x11198CC", VA = "0x11198CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0x11199D8", Offset = "0x11199D8", VA = "0x11199D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObstaclePunchingClown[] m_PunchingClowns;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator m_PunchingClownAnim;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_PlayerAnchor;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator m_NextObstacle;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int punchedClowns;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isComplete;

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x11195D0", Offset = "0x11195D0", VA = "0x11195D0")]
	public void TriggerPunchingClowns()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x1119648", Offset = "0x1119648", VA = "0x1119648")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FC20", Offset = "0xA4FC20")]
	private IEnumerator WaitAndEnablePunchingClowns()
	{
		return null;
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x11196E4", Offset = "0x11196E4", VA = "0x11196E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x1119860", Offset = "0x1119860", VA = "0x1119860")]
	private void EnableNextObstacle()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x11198C0", Offset = "0x11198C0", VA = "0x11198C0")]
	public ObstaclePunchActivity()
	{
	}
}
[Token(Token = "0x200015E")]
public class ObstaclePunchingClown : MonoBehaviour
{
	[Token(Token = "0x2000631")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35DEC", Offset = "0xA35DEC")]
	private sealed class <WaitAndDisable>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstaclePunchingClown <>4__this;

		[Token(Token = "0x17000475")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AED")]
			[Address(RVA = "0x111A094", Offset = "0x111A094", VA = "0x111A094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000476")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x111A0FC", Offset = "0x111A0FC", VA = "0x111A0FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0x1119F7C", Offset = "0x1119F7C", VA = "0x1119F7C")]
		[DebuggerHidden]
		public <WaitAndDisable>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0x1119FB0", Offset = "0x1119FB0", VA = "0x1119FB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0x1119FB4", Offset = "0x1119FB4", VA = "0x1119FB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0x111A09C", Offset = "0x111A09C", VA = "0x111A09C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CollisionSoundExt m_PunchingClown;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody m_PunchingRigidbody;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody m_ClownRigidbody;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ObstacleBallandChain m_BallandChain;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ObstaclePlayerDamage m_ObsPlayerDamage;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject floatingText;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform m_TextAnchor;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool hasFallen;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool hasBeenCounted;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool doOnce;

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1119A40", Offset = "0x1119A40", VA = "0x1119A40")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x1119C64", Offset = "0x1119C64", VA = "0x1119C64")]
	public void HitTarget()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1119E88", Offset = "0x1119E88", VA = "0x1119E88")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x11199B0", Offset = "0x11199B0", VA = "0x11199B0")]
	public void EnableClown()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x1119F0C", Offset = "0x1119F0C", VA = "0x1119F0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FC84", Offset = "0xA4FC84")]
	private IEnumerator WaitAndDisable()
	{
		return null;
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x1119FA8", Offset = "0x1119FA8", VA = "0x1119FA8")]
	public ObstaclePunchingClown()
	{
	}
}
[Token(Token = "0x200015F")]
public class ObstacleRing : MonoBehaviour
{
	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool doOnce;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x111A104", Offset = "0x111A104", VA = "0x111A104")]
	public void PlayerTriggeredRing()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x111A298", Offset = "0x111A298", VA = "0x111A298")]
	public ObstacleRing()
	{
	}
}
[Token(Token = "0x2000160")]
public class ObstacleWall : MonoBehaviour
{
	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HandholdTimer[] m_ClimbableTimers;

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x111E880", Offset = "0x111E880", VA = "0x111E880")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x111E8D8", Offset = "0x111E8D8", VA = "0x111E8D8")]
	public void Reset(bool disableGroundCheck = false)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x111E998", Offset = "0x111E998", VA = "0x111E998")]
	public ObstacleWall()
	{
	}
}
[Token(Token = "0x2000161")]
public class ObstacleWaterGunActivity : MonoBehaviour
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DamageableExt[] m_Balloons;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource m_CompletedSFX;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator m_ObstacleExit;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator m_NextObstacle;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_Platform;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshPro timer;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshPro score;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GenericSceneManager m_SceneManager;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool bisCompleted;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float gameTimer;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int totalScore;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<int, bool> m_DidFinishBalloon;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isActive;

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x111E9A0", Offset = "0x111E9A0", VA = "0x111E9A0")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x111E9AC", Offset = "0x111E9AC", VA = "0x111E9AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x111ECA8", Offset = "0x111ECA8", VA = "0x111ECA8")]
	public void EnableNextObstacle()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x111EE40", Offset = "0x111EE40", VA = "0x111EE40")]
	public void ObstacleHitbyWaterGun()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x111EE44", Offset = "0x111EE44", VA = "0x111EE44")]
	public ObstacleWaterGunActivity()
	{
	}
}
[Token(Token = "0x2000162")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA328E4", Offset = "0xA328E4")]
public class ObstacleWheelSlide : MonoBehaviour
{
	[Token(Token = "0x2000632")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35DFC", Offset = "0xA35DFC")]
	private sealed class <WaitAndToggleCollisions>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleWheelSlide <>4__this;

		[Token(Token = "0x17000477")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0x1120D60", Offset = "0x1120D60", VA = "0x1120D60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000478")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0x1120DC8", Offset = "0x1120DC8", VA = "0x1120DC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0x1120C54", Offset = "0x1120C54", VA = "0x1120C54")]
		[DebuggerHidden]
		public <WaitAndToggleCollisions>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0x1120C90", Offset = "0x1120C90", VA = "0x1120C90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x1120C94", Offset = "0x1120C94", VA = "0x1120C94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0x1120D68", Offset = "0x1120D68", VA = "0x1120D68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ClimbableExt m_Climb;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator m_WheelSlide;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform m_MomentumDirection;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_ZipLineSFX;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterController m_Player;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BNGPlayerControllerExt m_BNGPlayer;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool doOnce;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool wasHeld;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_fSpeed;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool shouldUseMomentum;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool dialogueTrigger;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool activateOnce;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 velocity;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody rigidBody;

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x1120700", Offset = "0x1120700", VA = "0x1120700")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1120824", Offset = "0x1120824", VA = "0x1120824")]
	public void PlayerTrigger()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x11208C4", Offset = "0x11208C4", VA = "0x11208C4")]
	public void ResetSlider()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x1120934", Offset = "0x1120934", VA = "0x1120934")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1120BE4", Offset = "0x1120BE4", VA = "0x1120BE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FCE8", Offset = "0xA4FCE8")]
	private IEnumerator WaitAndToggleCollisions()
	{
		return null;
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1120B94", Offset = "0x1120B94", VA = "0x1120B94")]
	private bool CheckPlayerGrabber()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1120C80", Offset = "0x1120C80", VA = "0x1120C80")]
	public ObstacleWheelSlide()
	{
	}
}
[Token(Token = "0x2000163")]
public class ObstacleSkeeball : ManagedItem
{
	[Token(Token = "0x2000633")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35E0C", Offset = "0xA35E0C")]
	private sealed class <WaitAndHasBeenUsed>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleSkeeball <>4__this;

		[Token(Token = "0x17000479")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF9")]
			[Address(RVA = "0x111B6F8", Offset = "0x111B6F8", VA = "0x111B6F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0x111B760", Offset = "0x111B760", VA = "0x111B760", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0x111A6A8", Offset = "0x111A6A8", VA = "0x111A6A8")]
		[DebuggerHidden]
		public <WaitAndHasBeenUsed>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x111B648", Offset = "0x111B648", VA = "0x111B648", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x111B64C", Offset = "0x111B64C", VA = "0x111B64C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x111B700", Offset = "0x111B700", VA = "0x111B700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000634")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35E1C", Offset = "0xA35E1C")]
	private sealed class <WaitAndExplode>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fTime;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObstacleSkeeball <>4__this;

		[Token(Token = "0x1700047B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0x111B5D8", Offset = "0x111B5D8", VA = "0x111B5D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x111B640", Offset = "0x111B640", VA = "0x111B640", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x111AAD4", Offset = "0x111AAD4", VA = "0x111AAD4")]
		[DebuggerHidden]
		public <WaitAndExplode>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x111B524", Offset = "0x111B524", VA = "0x111B524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x111B528", Offset = "0x111B528", VA = "0x111B528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0x111B5E0", Offset = "0x111B5E0", VA = "0x111B5E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000635")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35E2C", Offset = "0xA35E2C")]
	private sealed class <Reset>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleSkeeball <>4__this;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody <rB>5__2;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody[] <rigidbodies>5__3;

		[Token(Token = "0x1700047D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B05")]
			[Address(RVA = "0x111B4B4", Offset = "0x111B4B4", VA = "0x111B4B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B07")]
			[Address(RVA = "0x111B51C", Offset = "0x111B51C", VA = "0x111B51C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0x111AD18", Offset = "0x111AD18", VA = "0x111AD18")]
		[DebuggerHidden]
		public <Reset>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0x111AE9C", Offset = "0x111AE9C", VA = "0x111AE9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0x111AEA0", Offset = "0x111AEA0", VA = "0x111AEA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0x111B4BC", Offset = "0x111B4BC", VA = "0x111B4BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ObstacleSkeeballActivity m_SkeeballActivity;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_GrenadeModel;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ObstacleSkeeballGrenadePin m_GrenadePin;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ObstacleSkeeballGrenadePinSlot m_GrenadePinSlot;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject m_GrenadeVFX;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource m_GrenadeSFX;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioSource m_GrenadePinSFX;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Collider[] m_CollidersToDisable;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 initPosition;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Quaternion initRotation;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool countedScore;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool useExtraGravity;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	private bool hasExploded;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
	private bool didReset;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 velocity;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 initOrigPos;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion initOrigRotation;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GrabbableExt m_Ball;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool wasHeld;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool doOnce;

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x111A2A0", Offset = "0x111A2A0", VA = "0x111A2A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x111A3B8", Offset = "0x111A3B8", VA = "0x111A3B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x111A42C", Offset = "0x111A42C", VA = "0x111A42C")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x111A638", Offset = "0x111A638", VA = "0x111A638")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FD4C", Offset = "0xA4FD4C")]
	private IEnumerator WaitAndHasBeenUsed()
	{
		return null;
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x111A6D4", Offset = "0x111A6D4", VA = "0x111A6D4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x111A81C", Offset = "0x111A81C", VA = "0x111A81C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x111AA54", Offset = "0x111AA54", VA = "0x111AA54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FDB0", Offset = "0xA4FDB0")]
	private IEnumerator WaitAndExplode(float fTime)
	{
		return null;
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x111AB00", Offset = "0x111AB00", VA = "0x111AB00", Slot = "4")]
	public override void ResetItem()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x111ACA8", Offset = "0x111ACA8", VA = "0x111ACA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FE14", Offset = "0xA4FE14")]
	private IEnumerator Reset()
	{
		return null;
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x111AD44", Offset = "0x111AD44", VA = "0x111AD44")]
	private void Explode()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x111ADC4", Offset = "0x111ADC4", VA = "0x111ADC4")]
	public void OnAttachedAmmo(GrabbableExt heldMagazine)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x111ADE4", Offset = "0x111ADE4", VA = "0x111ADE4")]
	public void OnDetachedAmmo(GrabbableExt heldMagazine)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x111AE8C", Offset = "0x111AE8C", VA = "0x111AE8C")]
	public ObstacleSkeeball()
	{
	}
}
[Token(Token = "0x2000164")]
public class ObstacleSkeeballActivity : MonoBehaviour
{
	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator m_NextObstacle;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator m_ObstacleExit;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider[] m_Blockers;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI scoreCount;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshPro timer;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource m_TimerEndSFX;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int totalScore;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool doOnce;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float gameTimer;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isActive;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool hasPlayedEndTimer;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool didFinish;

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x111B768", Offset = "0x111B768", VA = "0x111B768")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x111B9B4", Offset = "0x111B9B4", VA = "0x111B9B4")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x111AA10", Offset = "0x111AA10", VA = "0x111AA10")]
	public void AddScore(int score)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x111B9C0", Offset = "0x111B9C0", VA = "0x111B9C0")]
	private void EnableNextObstacle()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x111BA64", Offset = "0x111BA64", VA = "0x111BA64")]
	public ObstacleSkeeballActivity()
	{
	}
}
[Token(Token = "0x2000165")]
public class ObstacleSkeeballGrenadePin : MonoBehaviour
{
	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider m_BoxCollider;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_isAttached;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x111BA74", Offset = "0x111BA74", VA = "0x111BA74")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x111BAE4", Offset = "0x111BAE4", VA = "0x111BAE4")]
	public void Update()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x111BB74", Offset = "0x111BB74", VA = "0x111BB74")]
	public ObstacleSkeeballGrenadePin()
	{
	}
}
[Token(Token = "0x2000166")]
public class ObstacleSkeeballGrenadePinSlot : MonoBehaviour
{
	[Token(Token = "0x2000636")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35E3C", Offset = "0xA35E3C")]
	private sealed class <EjectMagRoutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable ejectedMag;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObstacleSkeeballGrenadePinSlot <>4__this;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <ejectRigid>5__2;

		[Token(Token = "0x1700047F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0x111CC30", Offset = "0x111CC30", VA = "0x111CC30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000480")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0x111CC98", Offset = "0x111CC98", VA = "0x111CC98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x111C690", Offset = "0x111C690", VA = "0x111C690")]
		[DebuggerHidden]
		public <EjectMagRoutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x111C960", Offset = "0x111C960", VA = "0x111C960", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x111C964", Offset = "0x111C964", VA = "0x111C964", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x111CC38", Offset = "0x111CC38", VA = "0x111CC38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] AcceptableMagazineNames;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GrabbableExt AttachedWeapon;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ClipSnapDistance;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ClipUnsnapDistance;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float EjectForce;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GrabbableExt HeldMagazine;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Collider HeldCollider;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float MagazineDistance;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool magazineInPlace;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool lockedInPlace;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip ClipAttachSound;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip ClipDetachSound;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ObstacleSkeeball parentWeapon;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GrabberArea grabClipArea;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private InputBridge input;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lastEjectTime;

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x111BB7C", Offset = "0x111BB7C", VA = "0x111BB7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x111BED8", Offset = "0x111BED8", VA = "0x111BED8")]
	public void ResetPin()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x111BEE0", Offset = "0x111BEE0", VA = "0x111BEE0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x111C3A4", Offset = "0x111C3A4", VA = "0x111C3A4")]
	private void moveMagazine(Vector3 localPosition)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x111C044", Offset = "0x111C044", VA = "0x111C044")]
	private void checkGrabClipInput()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x111BCD4", Offset = "0x111BCD4", VA = "0x111BCD4")]
	private void attachMagazine(bool shouldSound = true)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x111B33C", Offset = "0x111B33C", VA = "0x111B33C")]
	public void AttachGrenadePin(ObstacleSkeeballGrenadePin m_GrenadePin)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x111C1F8", Offset = "0x111C1F8", VA = "0x111C1F8")]
	private Grabbable detachMagazine()
	{
		return null;
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x111C588", Offset = "0x111C588", VA = "0x111C588")]
	public void EjectMagazine()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x111C614", Offset = "0x111C614", VA = "0x111C614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FE78", Offset = "0xA4FE78")]
	private IEnumerator EjectMagRoutine(Grabbable ejectedMag)
	{
		return null;
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x111C3F8", Offset = "0x111C3F8", VA = "0x111C3F8")]
	public void OnGrabClipArea(Grabber grabbedBy)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x111C6BC", Offset = "0x111C6BC", VA = "0x111C6BC")]
	private bool isAcceptableName(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x111C748", Offset = "0x111C748", VA = "0x111C748")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x111C93C", Offset = "0x111C93C", VA = "0x111C93C")]
	public ObstacleSkeeballGrenadePinSlot()
	{
	}
}
[Token(Token = "0x2000167")]
public class ObstacleSkeeballTarget : MonoBehaviour
{
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int m_Score;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource m_ScoreSFX;

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x111CCA0", Offset = "0x111CCA0", VA = "0x111CCA0")]
	public int GetScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x111A9F4", Offset = "0x111A9F4", VA = "0x111A9F4")]
	public void PlayScoreSFX()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x111CCA8", Offset = "0x111CCA8", VA = "0x111CCA8")]
	public ObstacleSkeeballTarget()
	{
	}
}
[Token(Token = "0x2000168")]
public class ObstacleHammerTarget : MonoBehaviour
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObstacleStrengthActivity m_StrengthActivity;

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x11175E0", Offset = "0x11175E0", VA = "0x11175E0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x1117C88", Offset = "0x1117C88", VA = "0x1117C88")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1117C8C", Offset = "0x1117C8C", VA = "0x1117C8C")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1117C90", Offset = "0x1117C90", VA = "0x1117C90")]
	public ObstacleHammerTarget()
	{
	}
}
[Token(Token = "0x2000169")]
public class ObstacleStrengthActivity : MonoBehaviour
{
	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody m_Slider;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Grabbable m_Hammer;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CollisionSound m_Bell;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ObstacleCourse01SceneManager m_SceneManager;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator m_ThisObstacle;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator m_NextObstacle;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource m_ToppleAudio;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int tries;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_fForceMax;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_fForceMin;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_fSwingMax;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_fSwingMin;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 m_SliderStart;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool doOnce;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool inPlace;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool trackSlider;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float highestPoint;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool hasEnded;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float amountForce;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isThemePark;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Animator m_ThemeParkAnim;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject m_ThemeParkWalkIntroDialogue;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] m_ThemeParkHelpers;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Collider[] m_DisableColliders;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioSource m_StrengthIndicatorUpSFX;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioSource m_StrengthIndicatorDownSFX;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AudioSource m_StrengthIndicatorBottomSFX;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private AudioSource m_HammerHitSFX;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	public TextMeshProUGUI m_ScoreText;

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x111CCB0", Offset = "0x111CCB0", VA = "0x111CCB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x111CE64", Offset = "0x111CE64", VA = "0x111CE64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x111D690", Offset = "0x111D690", VA = "0x111D690")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x111D77C", Offset = "0x111D77C", VA = "0x111D77C")]
	private void EnableNextObstacle()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1117758", Offset = "0x1117758", VA = "0x1117758")]
	public void HitTarget(Vector3 force)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x111D820", Offset = "0x111D820", VA = "0x111D820")]
	public ObstacleStrengthActivity()
	{
	}
}
[Token(Token = "0x200016A")]
public class ObstacleCharacterTossUp : MonoBehaviour
{
	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_ToyPrefab;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_ThrowPosition;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x12B3830", Offset = "0x12B3830", VA = "0x12B3830")]
	public ObstacleCharacterTossUp()
	{
	}
}
[Token(Token = "0x200016B")]
public class ObstacleTossUpActivity : MonoBehaviour
{
	[Token(Token = "0x2000637")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35E4C", Offset = "0xA35E4C")]
	private sealed class <TossUpGame>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleTossUpActivity <>4__this;

		[Token(Token = "0x17000481")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B11")]
			[Address(RVA = "0x111E048", Offset = "0x111E048", VA = "0x111E048", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000482")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B13")]
			[Address(RVA = "0x111E0B0", Offset = "0x111E0B0", VA = "0x111E0B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0x111DE5C", Offset = "0x111DE5C", VA = "0x111DE5C")]
		[DebuggerHidden]
		public <TossUpGame>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x111DEA0", Offset = "0x111DEA0", VA = "0x111DEA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0x111DEA4", Offset = "0x111DEA4", VA = "0x111DEA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x111E050", Offset = "0x111E050", VA = "0x111E050", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator m_NextObstacle;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] m_ToyPrefab;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform[] m_Targets;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_ToyLauncherSFX;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider m_boundsBox;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool StartedGame;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float delay;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int timesDelivered;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int samDollsDelivered;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int maxDollsDelivered;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int spawnedPrefab;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int dialogueCounter;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ObstacleCourse03SceneManager m_SceneManager;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioSource m_TimerEndSFX;

	[Token(Token = "0x1700007E")]
	public Collider BoundBox
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x111D844", Offset = "0x111D844", VA = "0x111D844")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x111D84C", Offset = "0x111D84C", VA = "0x111D84C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x111D8A4", Offset = "0x111D8A4", VA = "0x111D8A4")]
	public void DeliveredItem()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x111D98C", Offset = "0x111D98C", VA = "0x111D98C")]
	public void SamDollDelivered()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x111DA94", Offset = "0x111DA94", VA = "0x111DA94")]
	public void MaxDollDelivered()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x111DBA4", Offset = "0x111DBA4", VA = "0x111DBA4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA4FEDC", Offset = "0xA4FEDC")]
	public void StartGame()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x111DC48", Offset = "0x111DC48", VA = "0x111DC48")]
	public void SpawnTossupItem()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x111DBD8", Offset = "0x111DBD8", VA = "0x111DBD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FF14", Offset = "0xA4FF14")]
	private IEnumerator TossUpGame()
	{
		return null;
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x111DE88", Offset = "0x111DE88", VA = "0x111DE88")]
	public ObstacleTossUpActivity()
	{
	}
}
[Token(Token = "0x200016C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32948", Offset = "0xA32948")]
public class ObstacleTossUpItem : MonoBehaviour
{
	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_Speed;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_InitSpeed;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider m_BoundsBox;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GrabbableExt m_Grabbable;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isInit;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isInGoal;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool doOnce;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool didTriggerOnce;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool wasHeldOnce;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider goal;

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x111E0B8", Offset = "0x111E0B8", VA = "0x111E0B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x111E170", Offset = "0x111E170", VA = "0x111E170")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x111E2EC", Offset = "0x111E2EC", VA = "0x111E2EC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x111E3D4", Offset = "0x111E3D4", VA = "0x111E3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x111DDDC", Offset = "0x111DDDC", VA = "0x111DDDC")]
	public void Initialize(Collider boundbox)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x111E6A0", Offset = "0x111E6A0", VA = "0x111E6A0")]
	public ObstacleTossUpItem()
	{
	}
}
[Token(Token = "0x200016D")]
public class ObstacleTossUpLocationEvent : LocationEventTrigger
{
	[Token(Token = "0x6000825")]
	[Address(RVA = "0x111E6B4", Offset = "0x111E6B4", VA = "0x111E6B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x111E878", Offset = "0x111E878", VA = "0x111E878")]
	public ObstacleTossUpLocationEvent()
	{
	}
}
[Token(Token = "0x200016E")]
public class ObstacleWhackABearActivity : MonoBehaviour
{
	[Token(Token = "0x2000638")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35E5C", Offset = "0xA35E5C")]
	private sealed class <WaitAndWhackIdle>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleWhackABearActivity <>4__this;

		[Token(Token = "0x17000483")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B17")]
			[Address(RVA = "0x111FDF4", Offset = "0x111FDF4", VA = "0x111FDF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000484")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B19")]
			[Address(RVA = "0x111FE5C", Offset = "0x111FE5C", VA = "0x111FE5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x111F718", Offset = "0x111F718", VA = "0x111F718")]
		[DebuggerHidden]
		public <WaitAndWhackIdle>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x111FC90", Offset = "0x111FC90", VA = "0x111FC90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x111FC94", Offset = "0x111FC94", VA = "0x111FC94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x111FDFC", Offset = "0x111FDFC", VA = "0x111FDFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Grabbable m_Mallet;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float gameTimer;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int startOnlyBearSpawn;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject whackTargetBearPrefab;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject whackTargetRatPrefab;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject whackTargetRatAltPrefab;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform spawnPoints;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI scoreCount;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshPro timer;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float spawnDuration;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float spawnDecrement;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float minimumSpawnDuration;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioSource scoreSFX;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource buzzerSFX;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Animator m_NextObstacle;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Animator m_ObstacleExit;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Vector3> _spawnPointList;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<GameObject> _whackTargetsInScene;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int m_StartBearSpawnCount;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int m_TotalScore;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool m_DidFinish;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int m_MaxTargets;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float m_SpawnTimer;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float m_MinHitForce;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AudioSource m_AudioSource;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool hasPlayedEndTimer;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ObstacleCourse03SceneManager m_SceneManager;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject[] m_BearHitVFX;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private AudioSource m_TimerEndSFX;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool startedGame;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int ratHits;

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x111EEB4", Offset = "0x111EEB4", VA = "0x111EEB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x111F1A4", Offset = "0x111F1A4", VA = "0x111F1A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x111F3C0", Offset = "0x111F3C0", VA = "0x111F3C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FF78", Offset = "0xA4FF78")]
	private IEnumerator WaitAndWhackIdle()
	{
		return null;
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x111F430", Offset = "0x111F430", VA = "0x111F430")]
	private void CreateWhackTarget()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x111F744", Offset = "0x111F744", VA = "0x111F744")]
	public void DestroyWhackTarget(GameObject whackTarget)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x111F81C", Offset = "0x111F81C", VA = "0x111F81C")]
	public void HitRatAchievementCheck()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x111F8A4", Offset = "0x111F8A4", VA = "0x111F8A4")]
	public void AddScore(int score, ObstacleWhackABearTarget target)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x111F664", Offset = "0x111F664", VA = "0x111F664")]
	private void EnableNextObstacle()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x111FBC4", Offset = "0x111FBC4", VA = "0x111FBC4")]
	public ObstacleWhackABearActivity()
	{
	}
}
[Token(Token = "0x200016F")]
public class ObstacleWhackABearTarget : MonoBehaviour
{
	[Token(Token = "0x2000639")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35E6C", Offset = "0xA35E6C")]
	private sealed class <WaitAndReset>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleWhackABearTarget <>4__this;

		[Token(Token = "0x17000485")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0x1120690", Offset = "0x1120690", VA = "0x1120690", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000486")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0x11206F8", Offset = "0x11206F8", VA = "0x11206F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x1120534", Offset = "0x1120534", VA = "0x1120534")]
		[DebuggerHidden]
		public <WaitAndReset>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x1120590", Offset = "0x1120590", VA = "0x1120590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x1120594", Offset = "0x1120594", VA = "0x1120594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x1120698", Offset = "0x1120698", VA = "0x1120698", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int score;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float visibleHeight;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float riseSpeed;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float hideSpeed;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource m_HitSFX;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ObstacleWhackABearActivity _obstacleWhackABearActivity;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _hasHit;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _scoreTimer;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRat;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fRisenPos;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fHiddingPos;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 spawnPoint;

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x111FE64", Offset = "0x111FE64", VA = "0x111FE64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x11200F8", Offset = "0x11200F8", VA = "0x11200F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x112013C", Offset = "0x112013C", VA = "0x112013C")]
	public void SetActivity(ObstacleWhackABearActivity activity)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x1120144", Offset = "0x1120144", VA = "0x1120144")]
	private void RiseComplete()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1120370", Offset = "0x1120370", VA = "0x1120370")]
	private void HideComplete()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x11203A4", Offset = "0x11203A4", VA = "0x11203A4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x11204C4", Offset = "0x11204C4", VA = "0x11204C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA4FFDC", Offset = "0xA4FFDC")]
	private IEnumerator WaitAndReset()
	{
		return null;
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x1120560", Offset = "0x1120560", VA = "0x1120560")]
	public Vector3 GetSpawnPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x112056C", Offset = "0x112056C", VA = "0x112056C")]
	public ObstacleWhackABearTarget()
	{
	}
}
[Token(Token = "0x2000170")]
public class PunchingClownActivity : Activity
{
	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ClownConversationResolver convoResolver;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int punched;

	[Token(Token = "0x4000946")]
	private const int punchesRequired = 5;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ClownUI clownUI;

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x10B893C", Offset = "0x10B893C", VA = "0x10B893C")]
	private void Start()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x10B89BC", Offset = "0x10B89BC", VA = "0x10B89BC")]
	private void PlayerPunchedNose()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x10B89E8", Offset = "0x10B89E8", VA = "0x10B89E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x10B8BC4", Offset = "0x10B8BC4", VA = "0x10B8BC4")]
	public void PunchedNose()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x10B8BD0", Offset = "0x10B8BD0", VA = "0x10B8BD0")]
	public PunchingClownActivity()
	{
	}
}
[Token(Token = "0x2000171")]
public class PunchingClownNoseTrigger : MonoBehaviour
{
	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CollisionSoundExt m_CollisionSound;

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x10B8BD8", Offset = "0x10B8BD8", VA = "0x10B8BD8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x10B8CB8", Offset = "0x10B8CB8", VA = "0x10B8CB8")]
	public PunchingClownNoseTrigger()
	{
	}
}
[Token(Token = "0x2000172")]
public class Shlurpy : MonoBehaviour
{
	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Grabbable _cup;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator _fill;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _redFill;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _blueFill;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource m_HolySFX;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _isFilled;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _isHoly;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _holyEffect;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _fillCollider;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NutriHoleSceneManager _sceneManager;

	[Token(Token = "0x1700007F")]
	public bool isFilled
	{
		[Token(Token = "0x6000840")]
		[Address(RVA = "0x118A8E0", Offset = "0x118A8E0", VA = "0x118A8E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000080")]
	public bool isHoly
	{
		[Token(Token = "0x6000841")]
		[Address(RVA = "0x118A8E8", Offset = "0x118A8E8", VA = "0x118A8E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000081")]
	public bool isHeld
	{
		[Token(Token = "0x6000842")]
		[Address(RVA = "0x118A8F0", Offset = "0x118A8F0", VA = "0x118A8F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x118A90C", Offset = "0x118A90C", VA = "0x118A90C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x118AA40", Offset = "0x118AA40", VA = "0x118AA40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x118AA44", Offset = "0x118AA44", VA = "0x118AA44")]
	public void FillWithShlurpy(ShlurpyControl.ShlurpyColor color)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x118AB3C", Offset = "0x118AB3C", VA = "0x118AB3C")]
	public void MakeHoly()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x118ABA0", Offset = "0x118ABA0", VA = "0x118ABA0")]
	public void Empty()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x118AC28", Offset = "0x118AC28", VA = "0x118AC28")]
	public Shlurpy()
	{
	}
}
[Token(Token = "0x2000173")]
public class ShlurpyControl : MonoBehaviour
{
	[Token(Token = "0x200063A")]
	public enum ShlurpyColor
	{
		[Token(Token = "0x40027FE")]
		Red,
		[Token(Token = "0x40027FF")]
		Blue
	}

	[Token(Token = "0x200063B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35E7C", Offset = "0xA35E7C")]
	private sealed class <WaitAndFinishPour>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShlurpyControl <>4__this;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shlurpy cup;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShlurpyColor color;

		[Token(Token = "0x17000487")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B23")]
			[Address(RVA = "0x118AFF8", Offset = "0x118AFF8", VA = "0x118AFF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000488")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B25")]
			[Address(RVA = "0x118B060", Offset = "0x118B060", VA = "0x118B060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0x118AE68", Offset = "0x118AE68", VA = "0x118AE68")]
		[DebuggerHidden]
		public <WaitAndFinishPour>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0x118AEC4", Offset = "0x118AEC4", VA = "0x118AEC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x118AEC8", Offset = "0x118AEC8", VA = "0x118AEC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0x118B000", Offset = "0x118B000", VA = "0x118B000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject blueShlurpy;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject redShlurpy;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int _maxShlurpies;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource ShlurpyPourSFX;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shlurpy _redCup;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shlurpy _blueCup;

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x118AC30", Offset = "0x118AC30", VA = "0x118AC30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x118AC34", Offset = "0x118AC34", VA = "0x118AC34")]
	private void Update()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x118AC38", Offset = "0x118AC38", VA = "0x118AC38")]
	private void CheckShlurpies()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x118AD44", Offset = "0x118AD44", VA = "0x118AD44")]
	public void PourBlue()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x118AE18", Offset = "0x118AE18", VA = "0x118AE18")]
	public void PourRed()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x118AD94", Offset = "0x118AD94", VA = "0x118AD94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51040", Offset = "0xA51040")]
	private IEnumerator WaitAndFinishPour(Shlurpy cup, ShlurpyColor color)
	{
		return null;
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x118AE94", Offset = "0x118AE94", VA = "0x118AE94")]
	public void SetShlurpyCup(Shlurpy cup, ShlurpyColor color)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x118AD24", Offset = "0x118AD24", VA = "0x118AD24")]
	public void RemoveShlurpyCup(Shlurpy cup, ShlurpyColor color)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x118AEB4", Offset = "0x118AEB4", VA = "0x118AEB4")]
	public ShlurpyControl()
	{
	}
}
[Token(Token = "0x2000174")]
public class ShlurpyTrigger : MonoBehaviour
{
	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ShlurpyControl _controller;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ShlurpyControl.ShlurpyColor _color;

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x118B068", Offset = "0x118B068", VA = "0x118B068")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x118B13C", Offset = "0x118B13C", VA = "0x118B13C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x118B210", Offset = "0x118B210", VA = "0x118B210")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x118B2E4", Offset = "0x118B2E4", VA = "0x118B2E4")]
	public ShlurpyTrigger()
	{
	}
}
[Token(Token = "0x2000175")]
public class PopUpCharacter : MonoBehaviour
{
	[Token(Token = "0x200063C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35E8C", Offset = "0xA35E8C")]
	private sealed class <DelaySFX>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PopUpCharacter <>4__this;

		[Token(Token = "0x17000489")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B29")]
			[Address(RVA = "0x11456BC", Offset = "0x11456BC", VA = "0x11456BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0x1145724", Offset = "0x1145724", VA = "0x1145724", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x11451EC", Offset = "0x11451EC", VA = "0x11451EC")]
		[DebuggerHidden]
		public <DelaySFX>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x11455FC", Offset = "0x11455FC", VA = "0x11455FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x1145600", Offset = "0x1145600", VA = "0x1145600", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0x11456C4", Offset = "0x11456C4", VA = "0x11456C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Damageable _dmg;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator _anim;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _activated;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 _hidePosition;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<AudioClip> _popUpSFX;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource _audio;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isShort;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ShootingGalleryActivity _sceneManager;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject floatingText;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool alwaysUseIntro;

	[Token(Token = "0x17000082")]
	public Damageable dmg
	{
		[Token(Token = "0x6000856")]
		[Address(RVA = "0x1144E48", Offset = "0x1144E48", VA = "0x1144E48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000083")]
	public bool activated
	{
		[Token(Token = "0x6000857")]
		[Address(RVA = "0x1144E50", Offset = "0x1144E50", VA = "0x1144E50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x1144E58", Offset = "0x1144E58", VA = "0x1144E58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x1144F2C", Offset = "0x1144F2C", VA = "0x1144F2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x1144FA0", Offset = "0x1144FA0", VA = "0x1144FA0")]
	public void PopUp()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x114516C", Offset = "0x114516C", VA = "0x114516C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA510A4", Offset = "0xA510A4")]
	private IEnumerator DelaySFX(float delay)
	{
		return null;
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x1145218", Offset = "0x1145218", VA = "0x1145218")]
	public void ResetControllers()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x1145274", Offset = "0x1145274", VA = "0x1145274")]
	public void TakeHit()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x1145468", Offset = "0x1145468", VA = "0x1145468")]
	public void DropDown()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x11454C8", Offset = "0x11454C8", VA = "0x11454C8")]
	public void HideCharacter()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x114554C", Offset = "0x114554C", VA = "0x114554C")]
	public void IntroCharacter(string animTrigger)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x114556C", Offset = "0x114556C", VA = "0x114556C")]
	public void FinishIntroCharacter(string animTrigger)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x1145420", Offset = "0x1145420", VA = "0x1145420")]
	public void ClearListeners()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x11455EC", Offset = "0x11455EC", VA = "0x11455EC")]
	public PopUpCharacter()
	{
	}
}
[Token(Token = "0x2000176")]
public class PopUpLocation : MonoBehaviour
{
	[Token(Token = "0x200063D")]
	public enum moveDir
	{
		[Token(Token = "0x400280A")]
		None,
		[Token(Token = "0x400280B")]
		Forward,
		[Token(Token = "0x400280C")]
		Right,
		[Token(Token = "0x400280D")]
		Left
	}

	[Token(Token = "0x200063E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35E9C", Offset = "0xA35E9C")]
	private sealed class <Move>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopUpLocation <>4__this;

		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <t>5__2;

		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <targetPos>5__3;

		[Token(Token = "0x1700048B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0x1145CA4", Offset = "0x1145CA4", VA = "0x1145CA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B31")]
			[Address(RVA = "0x1145D0C", Offset = "0x1145D0C", VA = "0x1145D0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x1145944", Offset = "0x1145944", VA = "0x1145944")]
		[DebuggerHidden]
		public <Move>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x1145A38", Offset = "0x1145A38", VA = "0x1145A38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x1145A3C", Offset = "0x1145A3C", VA = "0x1145A3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x1145CAC", Offset = "0x1145CAC", VA = "0x1145CAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _shortAdjust;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private moveDir _move;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine _moveCR;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _startPoint;

	[Token(Token = "0x17000084")]
	public float ShortAdjust
	{
		[Token(Token = "0x6000864")]
		[Address(RVA = "0x114572C", Offset = "0x114572C", VA = "0x114572C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x1145734", Offset = "0x1145734", VA = "0x1145734")]
	private void Start()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x1145770", Offset = "0x1145770", VA = "0x1145770")]
	public void AddCharacter(PopUpCharacter character)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x1145898", Offset = "0x1145898", VA = "0x1145898")]
	public void StartMove()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x11458D4", Offset = "0x11458D4", VA = "0x11458D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51108", Offset = "0xA51108")]
	private IEnumerator Move()
	{
		return null;
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x1145970", Offset = "0x1145970", VA = "0x1145970")]
	public void StopMove()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x11459F0", Offset = "0x11459F0", VA = "0x11459F0")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1145A28", Offset = "0x1145A28", VA = "0x1145A28")]
	public PopUpLocation()
	{
	}
}
[Token(Token = "0x2000177")]
public class ShootingDiorama : MonoBehaviour
{
	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShootingTarget[] targets;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ShootingTarget> highValueTargets;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ShootingTarget> flyingTargets;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PopUpLocation[] popUps;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform samIntroPosition;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform maxIntroPosition;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator anim;

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x118B834", Offset = "0x118B834", VA = "0x118B834")]
	public void Awake()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x118B928", Offset = "0x118B928", VA = "0x118B928")]
	public ShootingDiorama()
	{
	}
}
[Token(Token = "0x2000178")]
public class ShootingGalleryActivity : Activity
{
	[Token(Token = "0x200063F")]
	public enum StageArea
	{
		[Token(Token = "0x4002814")]
		Stage1,
		[Token(Token = "0x4002815")]
		Stage2,
		[Token(Token = "0x4002816")]
		Stage3,
		[Token(Token = "0x4002817")]
		Stage4
	}

	[Token(Token = "0x2000640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35EAC", Offset = "0xA35EAC")]
	private sealed class <IntroFinishDelay>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int delay;

		[Token(Token = "0x400281B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x1700048D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B35")]
			[Address(RVA = "0x118D33C", Offset = "0x118D33C", VA = "0x118D33C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B37")]
			[Address(RVA = "0x118D3A4", Offset = "0x118D3A4", VA = "0x118D3A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x118BF5C", Offset = "0x118BF5C", VA = "0x118BF5C")]
		[DebuggerHidden]
		public <IntroFinishDelay>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x118D270", Offset = "0x118D270", VA = "0x118D270", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0x118D274", Offset = "0x118D274", VA = "0x118D274", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0x118D344", Offset = "0x118D344", VA = "0x118D344", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000641")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35EBC", Offset = "0xA35EBC")]
	private sealed class <DelayTimerAppear>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400281C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x400281F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int timer;

		[Token(Token = "0x1700048F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0x118D200", Offset = "0x118D200", VA = "0x118D200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B3D")]
			[Address(RVA = "0x118D268", Offset = "0x118D268", VA = "0x118D268", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0x118C0A8", Offset = "0x118C0A8", VA = "0x118C0A8")]
		[DebuggerHidden]
		public <DelayTimerAppear>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x118D120", Offset = "0x118D120", VA = "0x118D120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x118D124", Offset = "0x118D124", VA = "0x118D124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0x118D208", Offset = "0x118D208", VA = "0x118D208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000642")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35ECC", Offset = "0xA35ECC")]
	private sealed class <WaitAndTransferOut>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x17000491")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B41")]
			[Address(RVA = "0x11AB1B0", Offset = "0x11AB1B0", VA = "0x11AB1B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000492")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B43")]
			[Address(RVA = "0x11AB218", Offset = "0x11AB218", VA = "0x11AB218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x11AB0CC", Offset = "0x11AB0CC", VA = "0x11AB0CC")]
		[DebuggerHidden]
		public <WaitAndTransferOut>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x11AB0F8", Offset = "0x11AB0F8", VA = "0x11AB0F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x11AB0FC", Offset = "0x11AB0FC", VA = "0x11AB0FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0x11AB1B8", Offset = "0x11AB1B8", VA = "0x11AB1B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000643")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35EDC", Offset = "0xA35EDC")]
	private sealed class <SpawnShootingTargets>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <randomDiorama>5__2;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <randomTimes>5__3;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x17000493")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B47")]
			[Address(RVA = "0x11AAB08", Offset = "0x11AAB08", VA = "0x11AAB08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000494")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B49")]
			[Address(RVA = "0x11AAB70", Offset = "0x11AAB70", VA = "0x11AAB70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0x11AA974", Offset = "0x11AA974", VA = "0x11AA974")]
		[DebuggerHidden]
		public <SpawnShootingTargets>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0x11AA9A0", Offset = "0x11AA9A0", VA = "0x11AA9A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0x11AA9A4", Offset = "0x11AA9A4", VA = "0x11AA9A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0x11AAB10", Offset = "0x11AAB10", VA = "0x11AAB10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000644")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35EEC", Offset = "0xA35EEC")]
	private sealed class <Phase1TargetProcessing>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x17000495")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0x118D5FC", Offset = "0x118D5FC", VA = "0x118D5FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000496")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0x118D664", Offset = "0x118D664", VA = "0x118D664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0x118C718", Offset = "0x118C718", VA = "0x118C718")]
		[DebuggerHidden]
		public <Phase1TargetProcessing>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0x118D3AC", Offset = "0x118D3AC", VA = "0x118D3AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x118D3B0", Offset = "0x118D3B0", VA = "0x118D3B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0x118D604", Offset = "0x118D604", VA = "0x118D604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000645")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35EFC", Offset = "0xA35EFC")]
	private sealed class <Phase2TargetProcessing>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400282C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <index>5__2;

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x17000497")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B53")]
			[Address(RVA = "0x118D92C", Offset = "0x118D92C", VA = "0x118D92C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000498")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B55")]
			[Address(RVA = "0x118D994", Offset = "0x118D994", VA = "0x118D994", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0x118C744", Offset = "0x118C744", VA = "0x118C744")]
		[DebuggerHidden]
		public <Phase2TargetProcessing>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0x118D66C", Offset = "0x118D66C", VA = "0x118D66C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0x118D670", Offset = "0x118D670", VA = "0x118D670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0x118D934", Offset = "0x118D934", VA = "0x118D934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000646")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35F0C", Offset = "0xA35F0C")]
	private sealed class <UpdateActiveDiorama>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x17000499")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B59")]
			[Address(RVA = "0x11AB05C", Offset = "0x11AB05C", VA = "0x11AB05C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0x11AB0C4", Offset = "0x11AB0C4", VA = "0x11AB0C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x11AAB78", Offset = "0x11AAB78", VA = "0x11AAB78")]
		[DebuggerHidden]
		public <UpdateActiveDiorama>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0x11AABA4", Offset = "0x11AABA4", VA = "0x11AABA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x11AABA8", Offset = "0x11AABA8", VA = "0x11AABA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0x11AB064", Offset = "0x11AB064", VA = "0x11AB064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000647")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35F1C", Offset = "0xA35F1C")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShootingTarget shootingTarget;

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0x118C91C", Offset = "0x118C91C", VA = "0x118C91C")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x6002B5D")]
		[Address(RVA = "0x118D08C", Offset = "0x118D08C", VA = "0x118D08C")]
		internal void <SpawnFlyingTarget>b__0()
		{
		}
	}

	[Token(Token = "0x2000648")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35F2C", Offset = "0xA35F2C")]
	private sealed class <>c__DisplayClass50_0
	{
		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShootingTarget shootingTarget;

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0x118CCF8", Offset = "0x118CCF8", VA = "0x118CCF8")]
		public <>c__DisplayClass50_0()
		{
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0x118D0AC", Offset = "0x118D0AC", VA = "0x118D0AC")]
		internal void <SpawnShootingTarget>b__0()
		{
		}
	}

	[Token(Token = "0x2000649")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35F3C", Offset = "0xA35F3C")]
	private sealed class <ShowCharacters>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float initialDelay;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x1700049B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B63")]
			[Address(RVA = "0x11AA904", Offset = "0x11AA904", VA = "0x11AA904", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B65")]
			[Address(RVA = "0x11AA96C", Offset = "0x11AA96C", VA = "0x11AA96C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0x11AA760", Offset = "0x11AA760", VA = "0x11AA760")]
		[DebuggerHidden]
		public <ShowCharacters>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0x11AA78C", Offset = "0x11AA78C", VA = "0x11AA78C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0x11AA790", Offset = "0x11AA790", VA = "0x11AA790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0x11AA90C", Offset = "0x11AA90C", VA = "0x11AA90C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35F4C", Offset = "0xA35F4C")]
	private sealed class <>c__DisplayClass53_0
	{
		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x400283D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0x118D0CC", Offset = "0x118D0CC", VA = "0x118D0CC")]
		public <>c__DisplayClass53_0()
		{
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0x118D0D4", Offset = "0x118D0D4", VA = "0x118D0D4")]
		internal void <ShowCharacter>b__0()
		{
		}
	}

	[Token(Token = "0x200064B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35F5C", Offset = "0xA35F5C")]
	private sealed class <ShowCharacter>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400283F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass53_0 <>8__1;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PopUpLocation <loc>5__2;

		[Token(Token = "0x1700049D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0x118DF20", Offset = "0x118DF20", VA = "0x118DF20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0x118DF88", Offset = "0x118DF88", VA = "0x118DF88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0x118CE74", Offset = "0x118CE74", VA = "0x118CE74")]
		[DebuggerHidden]
		public <ShowCharacter>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0x118DB3C", Offset = "0x118DB3C", VA = "0x118DB3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0x118DB40", Offset = "0x118DB40", VA = "0x118DB40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0x118DF28", Offset = "0x118DF28", VA = "0x118DF28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200064C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35F6C", Offset = "0xA35F6C")]
	private sealed class <RotateBackAndForth>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGalleryActivity <>4__this;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rotateSpeed;

		[Token(Token = "0x1700049F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B71")]
			[Address(RVA = "0x118DACC", Offset = "0x118DACC", VA = "0x118DACC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B73")]
			[Address(RVA = "0x118DB34", Offset = "0x118DB34", VA = "0x118DB34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0x118D028", Offset = "0x118D028", VA = "0x118D028")]
		[DebuggerHidden]
		public <RotateBackAndForth>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0x118D99C", Offset = "0x118D99C", VA = "0x118D99C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0x118D9A0", Offset = "0x118D9A0", VA = "0x118D9A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0x118DAD4", Offset = "0x118DAD4", VA = "0x118DAD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ShootingGalleryManager _shootingGalleryManager;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animator m_DioramaAnimator;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ShootingDiorama[] _dioramas;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PopUpCharacter[] _characters;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<ShootingTarget> _spawnedObjects;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine m_ShootingTargetSpawner;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _currentHitCount;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int _activeDiorama;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _activatingNewDiorama;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float _backForthTime;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Coroutine _motionCoroutine;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public StageArea m_Stage;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float m_fMinSpawnTime;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float m_fMaxSpawnTime;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private float _minCharPopTime;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float _maxCharPopTime;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private float _popUpDuration;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private List<AudioSource> _dioramaActivationSFX;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine _characterManagementRoutine;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Coroutine _popUpRoutine;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private List<AudioSource> _dioramaMusic;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private List<GameObject> _dioramaTimers;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private PopUpLocation lastPopLocation;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int characterSelectIndex;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject transferOutLoader;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private float dioramaTimer;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private float bonusTimer;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool timerActive;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int _targetVarianceCount;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool initializeBonus;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int lookOutCounter;

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x118B930", Offset = "0x118B930", VA = "0x118B930")]
	private void Start()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x118B9A0", Offset = "0x118B9A0", VA = "0x118B9A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x118BEA8", Offset = "0x118BEA8", VA = "0x118BEA8")]
	public int GetCurrentDiorama()
	{
		return default(int);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x118BEB0", Offset = "0x118BEB0", VA = "0x118BEB0")]
	public void IntroFinished(int delay)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x118BEDC", Offset = "0x118BEDC", VA = "0x118BEDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5116C", Offset = "0xA5116C")]
	private IEnumerator IntroFinishDelay(int delay)
	{
		return null;
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x118BF88", Offset = "0x118BF88", VA = "0x118BF88")]
	public float GetTimer()
	{
		return default(float);
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x118BF90", Offset = "0x118BF90", VA = "0x118BF90")]
	public void TurnOffMusic()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x118C028", Offset = "0x118C028", VA = "0x118C028")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA511D0", Offset = "0xA511D0")]
	private IEnumerator DelayTimerAppear(int timer)
	{
		return null;
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x118BB78", Offset = "0x118BB78", VA = "0x118BB78")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x118C2A4", Offset = "0x118C2A4", VA = "0x118C2A4")]
	private void ResetCharacters()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x118C310", Offset = "0x118C310", VA = "0x118C310")]
	private void SetCharactersToIntro()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x118BD44", Offset = "0x118BD44", VA = "0x118BD44")]
	private void EndGame()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x118C6A8", Offset = "0x118C6A8", VA = "0x118C6A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51234", Offset = "0xA51234")]
	private IEnumerator WaitAndTransferOut()
	{
		return null;
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x118C234", Offset = "0x118C234", VA = "0x118C234")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51298", Offset = "0xA51298")]
	private IEnumerator SpawnShootingTargets()
	{
		return null;
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x118C0D4", Offset = "0x118C0D4", VA = "0x118C0D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA512FC", Offset = "0xA512FC")]
	private IEnumerator Phase1TargetProcessing()
	{
		return null;
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x118C1C4", Offset = "0x118C1C4", VA = "0x118C1C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51360", Offset = "0xA51360")]
	private IEnumerator Phase2TargetProcessing()
	{
		return null;
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x118BE38", Offset = "0x118BE38", VA = "0x118BE38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA513C4", Offset = "0xA513C4")]
	private IEnumerator UpdateActiveDiorama()
	{
		return null;
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x118C770", Offset = "0x118C770", VA = "0x118C770")]
	private void SpawnFlyingTarget(int index)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x118C924", Offset = "0x118C924", VA = "0x118C924")]
	private void SpawnShootingTarget(int dioramaIndex)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x118CD00", Offset = "0x118CD00", VA = "0x118CD00")]
	public void ShootingTargetDestroyed(ShootingTarget shootingTarget)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x118C144", Offset = "0x118C144", VA = "0x118C144")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51428", Offset = "0xA51428")]
	private IEnumerator ShowCharacters(float initialDelay = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x118CDF4", Offset = "0x118CDF4", VA = "0x118CDF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5148C", Offset = "0xA5148C")]
	private IEnumerator ShowCharacter(int index)
	{
		return null;
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x118CEA0", Offset = "0x118CEA0", VA = "0x118CEA0")]
	public void CharacterShot(PopUpCharacter targetCharacter)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x118CF48", Offset = "0x118CF48", VA = "0x118CF48")]
	private void SetDefaultRotation()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x118CFA8", Offset = "0x118CFA8", VA = "0x118CFA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA514F0", Offset = "0xA514F0")]
	private IEnumerator RotateBackAndForth(float rotateSpeed)
	{
		return null;
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x118D054", Offset = "0x118D054", VA = "0x118D054")]
	public ShootingGalleryActivity()
	{
	}
}
[Token(Token = "0x2000179")]
public class ShootingTarget : MonoBehaviour
{
	[Token(Token = "0x200064D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35F7C", Offset = "0xA35F7C")]
	private sealed class <DelayFire>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingTarget <>4__this;

		[Token(Token = "0x170004A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B77")]
			[Address(RVA = "0x11AD0B0", Offset = "0x11AD0B0", VA = "0x11AD0B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B79")]
			[Address(RVA = "0x11AD118", Offset = "0x11AD118", VA = "0x11AD118", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x11ACBB4", Offset = "0x11ACBB4", VA = "0x11ACBB4")]
		[DebuggerHidden]
		public <DelayFire>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x11ACF10", Offset = "0x11ACF10", VA = "0x11ACF10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x11ACF14", Offset = "0x11ACF14", VA = "0x11ACF14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x11AD0B8", Offset = "0x11AD0B8", VA = "0x11AD0B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent m_HitTarget;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool highValueTarget;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool disableTimer;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[SerializeField]
	private bool spinningTarget;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _displayTime;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource _spawnSFX;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource _hitSFX;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource _despawnSFX;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource _spinSFX;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float delayProjectile;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Damageable _dmg;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator _anim;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TargetMover _mover;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CreatureProjectile currentProjectile;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _activated;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private CreatureProjectile targetProjectile;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform _targetProjectileSpawnPoint;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform playerLocation;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IEnumerator targetFireRoutine;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float originalProjectileDelay;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject floatingText;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform floatTextTarget;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int scoreAmount;

	[Token(Token = "0x17000085")]
	public Damageable dmg
	{
		[Token(Token = "0x6000888")]
		[Address(RVA = "0x11AC718", Offset = "0x11AC718", VA = "0x11AC718")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000086")]
	public bool activated
	{
		[Token(Token = "0x6000889")]
		[Address(RVA = "0x11AC720", Offset = "0x11AC720", VA = "0x11AC720")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x11AC728", Offset = "0x11AC728", VA = "0x11AC728")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x11AC808", Offset = "0x11AC808", VA = "0x11AC808")]
	private void Update()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x11AC874", Offset = "0x11AC874", VA = "0x11AC874")]
	public bool HasProjectile()
	{
		return default(bool);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x11AC8E4", Offset = "0x11AC8E4", VA = "0x11AC8E4")]
	public void StartTargetMovement()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x11AC978", Offset = "0x11AC978", VA = "0x11AC978")]
	public void StopTargetMovement()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x11ACA0C", Offset = "0x11ACA0C", VA = "0x11ACA0C")]
	public void SpawnTarget()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x11ACAA8", Offset = "0x11ACAA8", VA = "0x11ACAA8")]
	public void TargetFire()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x11ACB44", Offset = "0x11ACB44", VA = "0x11ACB44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51554", Offset = "0xA51554")]
	private IEnumerator DelayFire()
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x11ACBE0", Offset = "0x11ACBE0", VA = "0x11ACBE0")]
	public void HitTarget()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x11AAE1C", Offset = "0x11AAE1C", VA = "0x11AAE1C")]
	public void DeactivateTarget()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x11ACEC8", Offset = "0x11ACEC8", VA = "0x11ACEC8")]
	public void ClearListeners()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x11ACEF0", Offset = "0x11ACEF0", VA = "0x11ACEF0")]
	public ShootingTarget()
	{
	}
}
[Token(Token = "0x200017A")]
public class SpinTarget : MonoBehaviour
{
	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spinTime;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool reverseDirection;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float initialDelay;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float degreeRotation;

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x11B63B8", Offset = "0x11B63B8", VA = "0x11B63B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x11B63FC", Offset = "0x11B63FC", VA = "0x11B63FC")]
	public void RotateObject()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x11B6750", Offset = "0x11B6750", VA = "0x11B6750")]
	public void CompletedRotation()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x11B6758", Offset = "0x11B6758", VA = "0x11B6758")]
	public SpinTarget()
	{
	}
}
[Token(Token = "0x200017B")]
public class TargetMover : MonoBehaviour
{
	[Token(Token = "0x200064E")]
	public enum moveDir
	{
		[Token(Token = "0x400284C")]
		None,
		[Token(Token = "0x400284D")]
		Forward,
		[Token(Token = "0x400284E")]
		Back,
		[Token(Token = "0x400284F")]
		Right,
		[Token(Token = "0x4002850")]
		Left
	}

	[Token(Token = "0x200064F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35F8C", Offset = "0xA35F8C")]
	private sealed class <Move>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetMover <>4__this;

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <t>5__2;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <targetPos>5__3;

		[Token(Token = "0x170004A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0x10E548C", Offset = "0x10E548C", VA = "0x10E548C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0x10E54F4", Offset = "0x10E54F4", VA = "0x10E54F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x10E4FC4", Offset = "0x10E4FC4", VA = "0x10E4FC4")]
		[DebuggerHidden]
		public <Move>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0x10E50C4", Offset = "0x10E50C4", VA = "0x10E50C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x10E50C8", Offset = "0x10E50C8", VA = "0x10E50C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x10E5494", Offset = "0x10E5494", VA = "0x10E5494", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool testActivate;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private moveDir _move;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private moveDir _secondaryMove;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _distance;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _secondaryDistance;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _moveCR;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _startPos;

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x10E4EB0", Offset = "0x10E4EB0", VA = "0x10E4EB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x10E4EEC", Offset = "0x10E4EEC", VA = "0x10E4EEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x10E4F18", Offset = "0x10E4F18", VA = "0x10E4F18")]
	public void StartMove()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x10E4F54", Offset = "0x10E4F54", VA = "0x10E4F54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA515B8", Offset = "0xA515B8")]
	private IEnumerator Move()
	{
		return null;
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x10E4FF0", Offset = "0x10E4FF0", VA = "0x10E4FF0")]
	public void StopMove()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x10E5078", Offset = "0x10E5078", VA = "0x10E5078")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x10E50B0", Offset = "0x10E50B0", VA = "0x10E50B0")]
	public TargetMover()
	{
	}
}
[Token(Token = "0x200017C")]
public class MovingSPTarget : SkyPatrolTarget
{
	[Token(Token = "0x2000650")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35F9C", Offset = "0xA35F9C")]
	private sealed class <MoveCycle>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovingSPTarget <>4__this;

		[Token(Token = "0x170004A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B83")]
			[Address(RVA = "0x133A970", Offset = "0x133A970", VA = "0x133A970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B85")]
			[Address(RVA = "0x133A9D8", Offset = "0x133A9D8", VA = "0x133A9D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0x133A694", Offset = "0x133A694", VA = "0x133A694")]
		[DebuggerHidden]
		public <MoveCycle>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x133A6DC", Offset = "0x133A6DC", VA = "0x133A6DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x133A6E0", Offset = "0x133A6E0", VA = "0x133A6E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x133A978", Offset = "0x133A978", VA = "0x133A978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _startingPos;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _t;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] _pathTargets;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] _pathPoints;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _pathIndex;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float _moveSpeed;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float _pointPauseTime;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float _startMoveDelay;

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x133A4E4", Offset = "0x133A4E4", VA = "0x133A4E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x133A5F0", Offset = "0x133A5F0", VA = "0x133A5F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x133A68C", Offset = "0x133A68C", VA = "0x133A68C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x133A61C", Offset = "0x133A61C", VA = "0x133A61C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5161C", Offset = "0xA5161C")]
	private IEnumerator MoveCycle()
	{
		return null;
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x133A6C0", Offset = "0x133A6C0", VA = "0x133A6C0")]
	public MovingSPTarget()
	{
	}
}
[Token(Token = "0x200017D")]
public class PeriodicSPTarget : SkyPatrolTarget
{
	[Token(Token = "0x2000651")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35FAC", Offset = "0xA35FAC")]
	private sealed class <OpenCloseCycle>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PeriodicSPTarget <>4__this;

		[Token(Token = "0x400285C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <isActive>5__2;

		[Token(Token = "0x170004A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B89")]
			[Address(RVA = "0x1133CE0", Offset = "0x1133CE0", VA = "0x1133CE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0x1133D48", Offset = "0x1133D48", VA = "0x1133D48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x1133A9C", Offset = "0x1133A9C", VA = "0x1133A9C")]
		[DebuggerHidden]
		public <OpenCloseCycle>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0x1133AEC", Offset = "0x1133AEC", VA = "0x1133AEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x1133AF0", Offset = "0x1133AF0", VA = "0x1133AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0x1133CE8", Offset = "0x1133CE8", VA = "0x1133CE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Collider _collision;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private MeshRenderer _mesh;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _blinkDelayMax;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float _upTime;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _downTime;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject _smokeVFX;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool _disableBlinking;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1133918", Offset = "0x1133918", VA = "0x1133918")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1133A94", Offset = "0x1133A94", VA = "0x1133A94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x1133A24", Offset = "0x1133A24", VA = "0x1133A24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51680", Offset = "0xA51680")]
	private IEnumerator OpenCloseCycle()
	{
		return null;
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1133AC8", Offset = "0x1133AC8", VA = "0x1133AC8")]
	public PeriodicSPTarget()
	{
	}
}
[Token(Token = "0x200017E")]
public class SkyPatrolBalloon : MonoBehaviour
{
	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _wasEverHeld;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _hasThrown;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider _collider;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GrabbableExt _grab;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Rigidbody _rigid;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _balloonArt;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _endingVFX;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color[] _balloonColors;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _balloonColorIndex;

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x11AE51C", Offset = "0x11AE51C", VA = "0x11AE51C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x11AE5E8", Offset = "0x11AE5E8", VA = "0x11AE5E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x11AE7B4", Offset = "0x11AE7B4", VA = "0x11AE7B4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x11AF47C", Offset = "0x11AF47C", VA = "0x11AF47C")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x11AF560", Offset = "0x11AF560", VA = "0x11AF560")]
	public SkyPatrolBalloon()
	{
	}
}
[Token(Token = "0x200017F")]
public class SkyPatrolManager : MonoBehaviour
{
	[Token(Token = "0x2000652")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35FBC", Offset = "0xA35FBC")]
	private sealed class <WaitAndStartPatrol>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400285D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400285E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400285F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkyPatrolManager <>4__this;

		[Token(Token = "0x170004A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0x11B2CC0", Offset = "0x11B2CC0", VA = "0x11B2CC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B91")]
			[Address(RVA = "0x11B2D28", Offset = "0x11B2D28", VA = "0x11B2D28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0x11B1700", Offset = "0x11B1700", VA = "0x11B1700")]
		[DebuggerHidden]
		public <WaitAndStartPatrol>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0x11B2A6C", Offset = "0x11B2A6C", VA = "0x11B2A6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0x11B2A70", Offset = "0x11B2A70", VA = "0x11B2A70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0x11B2CC8", Offset = "0x11B2CC8", VA = "0x11B2CC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000653")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35FCC", Offset = "0xA35FCC")]
	private sealed class <ProcessShotAtPlayer>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkyPatrolManager <>4__this;

		[Token(Token = "0x4002863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int positionIndex;

		[Token(Token = "0x170004AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B95")]
			[Address(RVA = "0x11B29FC", Offset = "0x11B29FC", VA = "0x11B29FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B97")]
			[Address(RVA = "0x11B2A64", Offset = "0x11B2A64", VA = "0x11B2A64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0x11B269C", Offset = "0x11B269C", VA = "0x11B269C")]
		[DebuggerHidden]
		public <ProcessShotAtPlayer>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x11B2704", Offset = "0x11B2704", VA = "0x11B2704", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x11B2708", Offset = "0x11B2708", VA = "0x11B2708", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0x11B2A04", Offset = "0x11B2A04", VA = "0x11B2A04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009CC")]
	private const string _convoAlpha = "ABCDEFGHIJK";

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SkyPatrolManager instance;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParkSceneManager _sceneManager;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerManager _pm;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SkyPatrolCarts _carts;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _targetContainer;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] _targetContainers;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _round;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private int _totalRounds;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _score;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _totalThrown;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _lastThrow;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _totalPlayTime;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _hitStreak;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _missStreak;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _badRateTime;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float _badRate;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private int _badAccuracyTime;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _betweenRounds;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _firstTunnelEntranceTrigger;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _firstTunnelExitTrigger;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject _gameColliders;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform[] _maxShootPoints;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Character _max;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject _slingShot;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject _projectilePrefab;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CreatureProjectile _nacho;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform _firePoint;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _slingshotMode;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool inActivity;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<int> _lastMissLine;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<int> _lastStreakEnd;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<int> _lastNotFiring;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<int> _lastFiringWell;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<int> _lastHit2;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<int> _lastHit3;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<int> _lastHit4;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<int> _lastHit5;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject _maxCollider;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _maxInterrupted;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Transform _maxStartingPosition;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject _maxSmokeEffect;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private TextMeshPro _scoreText;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject[] _teleportBlockers;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private GameObject _skyTrigger;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int playerHits;

	[Token(Token = "0x17000087")]
	public Transform playerCart
	{
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x11B0FD8", Offset = "0x11B0FD8", VA = "0x11B0FD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x11B1078", Offset = "0x11B1078", VA = "0x11B1078")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x11B1250", Offset = "0x11B1250", VA = "0x11B1250")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x11B1400", Offset = "0x11B1400", VA = "0x11B1400")]
	public void BeginSkyPatrol()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x11B1690", Offset = "0x11B1690", VA = "0x11B1690")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA516E4", Offset = "0xA516E4")]
	private IEnumerator WaitAndStartPatrol()
	{
		return null;
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x11B172C", Offset = "0x11B172C", VA = "0x11B172C")]
	public void HandleRoundComplete()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x11B1814", Offset = "0x11B1814", VA = "0x11B1814")]
	public void AdvanceToNextRound()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x11B1A50", Offset = "0x11B1A50", VA = "0x11B1A50")]
	private void AdjustEntryExit()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x11B18F0", Offset = "0x11B18F0", VA = "0x11B18F0")]
	public void EndSkyPatrol()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x11B1B18", Offset = "0x11B1B18", VA = "0x11B1B18")]
	private void AddScore(int scoreUpdate)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x11AF1F4", Offset = "0x11AF1F4", VA = "0x11AF1F4")]
	public void BaloonMiss()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x11AE75C", Offset = "0x11AE75C", VA = "0x11AE75C")]
	public void ThrowBalloon()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x11B2078", Offset = "0x11B2078", VA = "0x11B2078")]
	public void PlayStationConversation()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x11B21A8", Offset = "0x11B21A8", VA = "0x11B21A8")]
	public void PlayFinalStationConversation()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x11B1A70", Offset = "0x11B1A70", VA = "0x11B1A70")]
	private void SetSlingshotMode(bool enable)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x11B2288", Offset = "0x11B2288", VA = "0x11B2288")]
	private void SpawnNacho()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x11B2408", Offset = "0x11B2408", VA = "0x11B2408")]
	public void ResetMaxPosition()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x11B249C", Offset = "0x11B249C", VA = "0x11B249C")]
	public void DelayedResetMax()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x11B24F8", Offset = "0x11B24F8", VA = "0x11B24F8")]
	public void MoveMaxToPosition(int positionIndex)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x11B25F0", Offset = "0x11B25F0", VA = "0x11B25F0")]
	public void FireAtPlayer(int positionIndex)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x11B261C", Offset = "0x11B261C", VA = "0x11B261C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51748", Offset = "0xA51748")]
	private IEnumerator ProcessShotAtPlayer(int positionIndex)
	{
		return null;
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x11AF154", Offset = "0x11AF154", VA = "0x11AF154")]
	public void InterruptMax()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x11B26C8", Offset = "0x11B26C8", VA = "0x11B26C8")]
	public void TakeNachoHit()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x11B26FC", Offset = "0x11B26FC", VA = "0x11B26FC")]
	public SkyPatrolManager()
	{
	}
}
[Token(Token = "0x2000180")]
public class SkyPatrolTarget : MonoBehaviour
{
	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<int> onTargetHit;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _maxScore;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int _scoreIncrement;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _centerPoint;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform[] _scoreIncrementPoints;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] _scoreDistances;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _floatingText;

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x11B2D30", Offset = "0x11B2D30", VA = "0x11B2D30")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x11AEE84", Offset = "0x11AEE84", VA = "0x11AEE84")]
	public void HitTarget(Vector3 impactPoint)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x11B2E88", Offset = "0x11B2E88", VA = "0x11B2E88")]
	public SkyPatrolTarget()
	{
	}
}
[Token(Token = "0x2000181")]
public class EnergyDrink : ManagedItem
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Grabbable _edGrab;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _shaken;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool wasHeld;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _releaseCount;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _shakeProgress;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private int _shakeTarget;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _shakeDistance;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> _previousPositions;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int _positionCount;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioSource _shakeSound;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioSource _fizzSound;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _fizzTimer;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody _rigid;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Collider[] _colliders;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected InputBridge _input;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool hasCollidedWithMonster;

	[Token(Token = "0x17000088")]
	public bool shaken
	{
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x13F5F00", Offset = "0x13F5F00", VA = "0x13F5F00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x13F5F08", Offset = "0x13F5F08", VA = "0x13F5F08")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x13F6068", Offset = "0x13F6068", VA = "0x13F6068")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x13F65B0", Offset = "0x13F65B0", VA = "0x13F65B0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x13F66B4", Offset = "0x13F66B4", VA = "0x13F66B4", Slot = "4")]
	public override void ResetItem()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x13F6938", Offset = "0x13F6938", VA = "0x13F6938")]
	public void DisableCan()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x13F6ADC", Offset = "0x13F6ADC", VA = "0x13F6ADC")]
	public EnergyDrink()
	{
	}
}
[Token(Token = "0x2000182")]
public class SpiritManager : MonoBehaviour
{
	[Token(Token = "0x2000654")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35FDC", Offset = "0xA35FDC")]
	private sealed class <WaitAndTalk>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Character <max>5__2;

		[Token(Token = "0x170004AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0x11B79E0", Offset = "0x11B79E0", VA = "0x11B79E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0x11B7A48", Offset = "0x11B7A48", VA = "0x11B7A48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x11B7648", Offset = "0x11B7648", VA = "0x11B7648")]
		[DebuggerHidden]
		public <WaitAndTalk>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0x11B767C", Offset = "0x11B767C", VA = "0x11B767C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x11B7680", Offset = "0x11B7680", VA = "0x11B7680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0x11B79E8", Offset = "0x11B79E8", VA = "0x11B79E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpiritManager _instance;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Creature> _spirits;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Task> _spiritTasks;

	[Token(Token = "0x17000089")]
	public static SpiritManager instance
	{
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x11B6B8C", Offset = "0x11B6B8C", VA = "0x11B6B8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x11B6BDC", Offset = "0x11B6BDC", VA = "0x11B6BDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x11B6E2C", Offset = "0x11B6E2C", VA = "0x11B6E2C")]
	private void SnackSpiritCompleted()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x11B6FA0", Offset = "0x11B6FA0", VA = "0x11B6FA0")]
	private void IceCreamSpiritCompleted()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x11B711C", Offset = "0x11B711C", VA = "0x11B711C")]
	private void CerealSpiritCompleted()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x11B72D0", Offset = "0x11B72D0", VA = "0x11B72D0")]
	private void BossSpiritCompleted()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x11B740C", Offset = "0x11B740C", VA = "0x11B740C")]
	public bool CheckBossDeathReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x11B75E8", Offset = "0x11B75E8", VA = "0x11B75E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA517AC", Offset = "0xA517AC")]
	private IEnumerator WaitAndTalk()
	{
		return null;
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x11B7674", Offset = "0x11B7674", VA = "0x11B7674")]
	public SpiritManager()
	{
	}
}
[Token(Token = "0x2000183")]
public class CerealBox : ManagedItem
{
	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Grabbable _boxGrab;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hasBeenHeld;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource m_OpenCerealSFX;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Collider _boxTop;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Grabbable _topGrab;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Animator _anim;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private FixedJoint _boxTopJoint;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private JointDetection _boxConnection;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform _prize;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private FixedJoint _prizeJoint;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Collider[] _prizeColliders;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _hasOpened;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool _beingDestroyed;

	[Token(Token = "0x1700008A")]
	public Vector3 startPos
	{
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x12136F8", Offset = "0x12136F8", VA = "0x12136F8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1213704", Offset = "0x1213704", VA = "0x1213704")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x1213780", Offset = "0x1213780", VA = "0x1213780")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x1213948", Offset = "0x1213948", VA = "0x1213948")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x1213998", Offset = "0x1213998", VA = "0x1213998")]
	public void DaggerPickUp()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x1213A94", Offset = "0x1213A94", VA = "0x1213A94")]
	public void DaggerRelease()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x1213B4C", Offset = "0x1213B4C", VA = "0x1213B4C")]
	public void AllowBoxOpen()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x1213B70", Offset = "0x1213B70", VA = "0x1213B70")]
	public CerealBox()
	{
	}
}
[Token(Token = "0x2000184")]
public class CerealPrize : MonoBehaviour
{
	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _cerealBox;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _beingDestroyed;

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x12147A8", Offset = "0x12147A8", VA = "0x12147A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1214878", Offset = "0x1214878", VA = "0x1214878")]
	public CerealPrize()
	{
	}
}
[Token(Token = "0x2000185")]
public class EmptyCerealBox : MonoBehaviour
{
	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _anim;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x13F5E1C", Offset = "0x13F5E1C", VA = "0x13F5E1C")]
	public void OpenBox()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x13F5E78", Offset = "0x13F5E78", VA = "0x13F5E78")]
	public void TimedDestroy(float fTime)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x13F5EF0", Offset = "0x13F5EF0", VA = "0x13F5EF0")]
	public EmptyCerealBox()
	{
	}
}
[Token(Token = "0x2000186")]
public class HulaHoop : MonoBehaviour
{
	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _hoop;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody _rigid;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource _holySFX;

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x15969B4", Offset = "0x15969B4", VA = "0x15969B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1596A20", Offset = "0x1596A20", VA = "0x1596A20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x1596C34", Offset = "0x1596C34", VA = "0x1596C34")]
	public HulaHoop()
	{
	}
}
[Token(Token = "0x2000187")]
public class NutriHoleEatTrigger : MonoBehaviour
{
	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x133B370", Offset = "0x133B370", VA = "0x133B370")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x133B770", Offset = "0x133B770", VA = "0x133B770")]
	public NutriHoleEatTrigger()
	{
	}
}
[Token(Token = "0x2000188")]
public class NutriHoleMicrowaveDoor : MonoBehaviour
{
	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _wasClosed;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Door _microwaveDoor;

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x133B778", Offset = "0x133B778", VA = "0x133B778")]
	private void Start()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x133B7D0", Offset = "0x133B7D0", VA = "0x133B7D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x133B8E4", Offset = "0x133B8E4", VA = "0x133B8E4")]
	public NutriHoleMicrowaveDoor()
	{
	}
}
[Token(Token = "0x2000189")]
public class PossessedMax : MonoBehaviour
{
	[Token(Token = "0x2000655")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35FEC", Offset = "0xA35FEC")]
	private sealed class <DelayAndProcess>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform hoop;

		[Token(Token = "0x170004AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0x10B54C8", Offset = "0x10B54C8", VA = "0x10B54C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BA3")]
			[Address(RVA = "0x10B5530", Offset = "0x10B5530", VA = "0x10B5530", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0x10B5288", Offset = "0x10B5288", VA = "0x10B5288")]
		[DebuggerHidden]
		public <DelayAndProcess>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0x10B5414", Offset = "0x10B5414", VA = "0x10B5414", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0x10B5418", Offset = "0x10B5418", VA = "0x10B5418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0x10B54D0", Offset = "0x10B54D0", VA = "0x10B54D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Character _max;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NutriHoleSceneManager _sceneManager;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider _normalCollider;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider _possessedCollider;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _hoopCount;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _numStabbed;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _stabDelay;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform[] _hoopPoints;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<string> _randomLines;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _randomCountDown;

	[Token(Token = "0x1700008B")]
	public bool hoopsFull
	{
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x10B4760", Offset = "0x10B4760", VA = "0x10B4760")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x10B4770", Offset = "0x10B4770", VA = "0x10B4770")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x10B4858", Offset = "0x10B4858", VA = "0x10B4858")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x10B4988", Offset = "0x10B4988", VA = "0x10B4988")]
	public void StartPossession()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x10B4A28", Offset = "0x10B4A28", VA = "0x10B4A28")]
	public void EndPossession()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x10B4B38", Offset = "0x10B4B38", VA = "0x10B4B38")]
	public void AddHoop(Transform hoop)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x10B5218", Offset = "0x10B5218", VA = "0x10B5218")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51810", Offset = "0xA51810")]
	private IEnumerator DelayAndProcess(Transform hoop)
	{
		return null;
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x10B52B4", Offset = "0x10B52B4", VA = "0x10B52B4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x10B540C", Offset = "0x10B540C", VA = "0x10B540C")]
	public PossessedMax()
	{
	}
}
[Token(Token = "0x200018A")]
public class ProjectileHitEffect : MonoBehaviour
{
	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int effectIndex;

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x10B66A4", Offset = "0x10B66A4", VA = "0x10B66A4")]
	public void TriggerEffect()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x10B67DC", Offset = "0x10B67DC", VA = "0x10B67DC")]
	public ProjectileHitEffect()
	{
	}
}
[Token(Token = "0x200018B")]
public class BNGPlayerControllerExt : BNGPlayerController
{
	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private PlayerTeleportExt teleportExt;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _isSitting;

	[Token(Token = "0x1700008C")]
	public PlayerTeleportExt PlayerTeleport
	{
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x13E9A00", Offset = "0x13E9A00", VA = "0x13E9A00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008D")]
	public PlayerRotation PlayerRotation
	{
		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x13E9A08", Offset = "0x13E9A08", VA = "0x13E9A08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008E")]
	public CharacterController CharacterController
	{
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x13E9A10", Offset = "0x13E9A10", VA = "0x13E9A10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x13E9A18", Offset = "0x13E9A18", VA = "0x13E9A18", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x13DC65C", Offset = "0x13DC65C", VA = "0x13DC65C")]
	public void UpdateRigTransform()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x13E9FA0", Offset = "0x13E9FA0", VA = "0x13E9FA0", Slot = "14")]
	public override void ChangeLocomotionType(LocomotionType loc)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x13EA0B4", Offset = "0x13EA0B4", VA = "0x13EA0B4")]
	public void DropAllClimbables()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x13EA1B4", Offset = "0x13EA1B4", VA = "0x13EA1B4", Slot = "16")]
	public override void toggleSmoothLocomotion(bool enabled)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x13EA220", Offset = "0x13EA220", VA = "0x13EA220", Slot = "15")]
	public override void toggleTeleport(bool enabled)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x13EA24C", Offset = "0x13EA24C", VA = "0x13EA24C")]
	public bool CheckClimbers(string gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x13EA374", Offset = "0x13EA374", VA = "0x13EA374")]
	public void SwitchToSit()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x13EA3D0", Offset = "0x13EA3D0", VA = "0x13EA3D0")]
	public void SwitchToStand()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x13EA428", Offset = "0x13EA428", VA = "0x13EA428")]
	public BNGPlayerControllerExt()
	{
	}
}
[Token(Token = "0x200018C")]
public class CharacterConstraintExt : CharacterConstraint
{
	[Token(Token = "0x6000907")]
	[Address(RVA = "0x1218538", Offset = "0x1218538", VA = "0x1218538")]
	private void Start()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x121853C", Offset = "0x121853C", VA = "0x121853C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x1218540", Offset = "0x1218540", VA = "0x1218540")]
	public CharacterConstraintExt()
	{
	}
}
[Token(Token = "0x200018D")]
public class ClimbableExt : Climbable
{
	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float VibrateDuration;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool hasBeenHeld;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private AudioSource m_ClimbableSFX;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool searchForAudio;

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x12215D8", Offset = "0x12215D8", VA = "0x12215D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x1221680", Offset = "0x1221680", VA = "0x1221680", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x12216B4", Offset = "0x12216B4", VA = "0x12216B4", Slot = "9")]
	public override void GrabItem(Grabber grabbedBy)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x12217B0", Offset = "0x12217B0", VA = "0x12217B0", Slot = "13")]
	public override void DropItem(Grabber droppedBy)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x12217B8", Offset = "0x12217B8", VA = "0x12217B8")]
	public ClimbableExt()
	{
	}
}
[Token(Token = "0x200018E")]
public class CollisionSoundLayerExt : MonoBehaviour
{
	[Token(Token = "0x2000656")]
	public enum CollisionType
	{
		[Token(Token = "0x400286B")]
		PrimaryAudio,
		[Token(Token = "0x400286C")]
		SecondaryAudio,
		[Token(Token = "0x400286D")]
		TertiarySound
	}

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CollisionType m_CollisionAudioType;

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x122490C", Offset = "0x122490C", VA = "0x122490C")]
	public CollisionSoundLayerExt()
	{
	}
}
[Token(Token = "0x200018F")]
public class CollisionSoundPlayerExt : CollisionSound
{
	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip SecondaryCollisionAudio;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip TertiaryCollisionAudio;

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x1224914", Offset = "0x1224914", VA = "0x1224914")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x1224A28", Offset = "0x1224A28", VA = "0x1224A28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1224AA4", Offset = "0x1224AA4", VA = "0x1224AA4", Slot = "4")]
	public override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1224E84", Offset = "0x1224E84", VA = "0x1224E84")]
	public void resetLastPlayedSoundExt()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x1224E8C", Offset = "0x1224E8C", VA = "0x1224E8C")]
	public CollisionSoundPlayerExt()
	{
	}
}
[Token(Token = "0x2000190")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA329AC", Offset = "0xA329AC")]
public class DamageableExt : MonoBehaviour
{
	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onWaterGunHit;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool waterBallon;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float inflated;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator m_WaterBalloon;

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x123506C", Offset = "0x123506C", VA = "0x123506C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x123515C", Offset = "0x123515C", VA = "0x123515C")]
	public DamageableExt()
	{
	}
}
[Token(Token = "0x2000191")]
public class GrabbablesInTriggerExt : GrabbablesInTrigger
{
	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 grabPos;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 objPos;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _remoteDistance;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform m_centerEyeAnchor;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BNGPlayerControllerExt m_Player;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LayerMask remoteBlockers;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public LayerMask reachThroughBlockers;

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x118FE28", Offset = "0x118FE28", VA = "0x118FE28", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x118FF64", Offset = "0x118FF64", VA = "0x118FF64", Slot = "5")]
	public override void updateClosestRemoteGrabbables()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x11901E0", Offset = "0x11901E0", VA = "0x11901E0", Slot = "6")]
	public override Grabbable GetClosestGrabbable(Dictionary<Collider, Grabbable> grabbables, bool remoteOnly = false)
	{
		return null;
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x11907AC", Offset = "0x11907AC", VA = "0x11907AC")]
	public GrabbablesInTriggerExt()
	{
	}
}
[Token(Token = "0x2000192")]
public class GrabberAreaExt : GrabberArea
{
	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Grabbable m_ParentGrabbable;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Grabbable m_ToGrab;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x11907B4", Offset = "0x11907B4", VA = "0x11907B4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x11908E4", Offset = "0x11908E4", VA = "0x11908E4")]
	public void OnGrabArea(Grabber grabbedBy)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x11909D0", Offset = "0x11909D0", VA = "0x11909D0")]
	public GrabberAreaExt()
	{
	}
}
[Token(Token = "0x2000193")]
public class GrabberExt : Grabber
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool holdingObiObject;

	[Token(Token = "0x1700008F")]
	public override bool HoldingItem
	{
		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1190A14", Offset = "0x1190A14", VA = "0x1190A14", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x11909D8", Offset = "0x11909D8", VA = "0x11909D8", Slot = "5")]
	public override void Start()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x1190A08", Offset = "0x1190A08", VA = "0x1190A08")]
	public void HoldingObiObject(bool holdingObject)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1190A2C", Offset = "0x1190A2C", VA = "0x1190A2C", Slot = "7")]
	public override bool inputCheckGrab()
	{
		return default(bool);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x1190A44", Offset = "0x1190A44", VA = "0x1190A44")]
	public GrabberExt()
	{
	}
}
[Token(Token = "0x2000194")]
public class HandJetExt : MonoBehaviour
{
	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource m_HoverboardSFX;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource m_HoverboardSFXLaunch;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayerZoneRestriction m_ZoneRestriction;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float JetForce;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool hasCharge;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterController characterController;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BNGPlayerController bngController;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isPlayerOnHoverboard;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool shouldDoHaptics;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool didInitBoost;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Grabber leftGrabber;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Grabber rightGrabber;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float VibrateFrequency;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float VibrateAmplitude;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float VibrateDuration;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private ControllerHand m_lastHandHeld;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool shouldSlowDown;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float slowdownTimer;

	[Token(Token = "0x17000090")]
	public bool HoverboardCharged
	{
		[Token(Token = "0x6000923")]
		[Address(RVA = "0x11938A0", Offset = "0x11938A0", VA = "0x11938A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x11938A8", Offset = "0x11938A8", VA = "0x11938A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1193AB0", Offset = "0x1193AB0", VA = "0x1193AB0")]
	public void ToggleHoverBoard(bool toggle)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1193BB0", Offset = "0x1193BB0", VA = "0x1193BB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1193E34", Offset = "0x1193E34", VA = "0x1193E34")]
	private void doHaptics(ControllerHand touchingHand, bool isEmpty = false)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1193DFC", Offset = "0x1193DFC", VA = "0x1193DFC")]
	public void OnTrigger(float triggerValue, ControllerHand touchingHand)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1193AE4", Offset = "0x1193AE4", VA = "0x1193AE4")]
	public void ChangeGravity(bool gravityOn)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1194330", Offset = "0x1194330", VA = "0x1194330")]
	public void OnRelease()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1194334", Offset = "0x1194334", VA = "0x1194334")]
	private void ResetHaptics()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1193F44", Offset = "0x1193F44", VA = "0x1193F44")]
	private void doJet(float triggerValue)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1194288", Offset = "0x1194288", VA = "0x1194288")]
	private void stopJet()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1193DF8", Offset = "0x1193DF8", VA = "0x1193DF8")]
	public void OnTriggerUp()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x119433C", Offset = "0x119433C", VA = "0x119433C")]
	public void Charge()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1194348", Offset = "0x1194348", VA = "0x1194348")]
	public void Slowdown()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1194384", Offset = "0x1194384", VA = "0x1194384")]
	public HandJetExt()
	{
	}
}
[Token(Token = "0x2000195")]
public class HandModelSelectorExt : HandModelSelector
{
	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<GameObject> _leftHands;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<GameObject> _rightHands;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform _watch;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool _allowOverride;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> _overrideLeftHands;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> _overrideRightHands;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _overrideLeft;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool _overrideRight;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected int _selectedLeftHandGFX;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected int _selectedRightHandGFX;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x11943BC", Offset = "0x11943BC", VA = "0x11943BC")]
	public void NextHandModel()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x11943D4", Offset = "0x11943D4", VA = "0x11943D4")]
	public void ChangeHandsModel(ControllerHand handSide, int childIndex)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1194EC8", Offset = "0x1194EC8", VA = "0x1194EC8", Slot = "4")]
	public override void ChangeHandsModel(int childIndex, bool save = false)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1195464", Offset = "0x1195464", VA = "0x1195464")]
	public void SetHandOverride(ControllerHand hand, bool enable = true)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1194B40", Offset = "0x1194B40", VA = "0x1194B40")]
	public void UpdateHandColor()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x11954AC", Offset = "0x11954AC", VA = "0x11954AC")]
	public HandModelSelectorExt()
	{
	}
}
[Token(Token = "0x2000196")]
public class HingeHelperExt : HingeHelper
{
	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public Grabbable m_Knob;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public bool shouldLockInPlace;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _fSpeed;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool StartAtOffset;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float _offSet;

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x11A85EC", Offset = "0x11A85EC", VA = "0x11A85EC", Slot = "20")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x11A87D8", Offset = "0x11A87D8", VA = "0x11A87D8")]
	public void RotateToOrigin(float fTime)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x11A862C", Offset = "0x11A862C", VA = "0x11A862C")]
	public void RotateToDegrees(float degrees)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x11A89F4", Offset = "0x11A89F4", VA = "0x11A89F4", Slot = "21")]
	public override void Update()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x11A8AD4", Offset = "0x11A8AD4", VA = "0x11A8AD4")]
	public bool IsReset()
	{
		return default(bool);
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x11A8B00", Offset = "0x11A8B00", VA = "0x11A8B00")]
	public HingeHelperExt()
	{
	}
}
[Token(Token = "0x2000197")]
public class InputBridgeExt : InputBridge
{
	[Token(Token = "0x2000657")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA35FFC", Offset = "0xA35FFC")]
	private sealed class <VibrateExt>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400286E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerHand hand;

		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float frequency;

		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float amplitude;

		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InputBridgeExt <>4__this;

		[Token(Token = "0x170004B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0x114A160", Offset = "0x114A160", VA = "0x114A160", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0x114A1C8", Offset = "0x114A1C8", VA = "0x114A1C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0x1149F14", Offset = "0x1149F14", VA = "0x1149F14")]
		[DebuggerHidden]
		public <VibrateExt>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0x1149FA8", Offset = "0x1149FA8", VA = "0x1149FA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x1149FAC", Offset = "0x1149FAC", VA = "0x1149FAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0x114A168", Offset = "0x114A168", VA = "0x114A168", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine leftHand;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine rightHand;

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x1149DF4", Offset = "0x1149DF4", VA = "0x1149DF4", Slot = "15")]
	public override void VibrateController(float frequency, float amplitude, float duration, ControllerHand hand)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x1149E70", Offset = "0x1149E70", VA = "0x1149E70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51874", Offset = "0xA51874")]
	private IEnumerator VibrateExt(float frequency, float amplitude, float duration, ControllerHand hand)
	{
		return null;
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x1149F40", Offset = "0x1149F40", VA = "0x1149F40")]
	public InputBridgeExt()
	{
	}
}
[Token(Token = "0x2000198")]
public class LeverExt : Lever
{
	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion initialRotation;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float activationPercentage;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private float deactivationPercentage;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float maxRotX;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float minRotX;

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x1158AC8", Offset = "0x1158AC8", VA = "0x1158AC8", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x1158B10", Offset = "0x1158B10", VA = "0x1158B10", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x1158D2C", Offset = "0x1158D2C", VA = "0x1158D2C", Slot = "8")]
	public override void doLeverLook()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1159290", Offset = "0x1159290", VA = "0x1159290")]
	public LeverExt()
	{
	}
}
[Token(Token = "0x2000199")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32A10", Offset = "0xA32A10")]
public class ObiContactGrabberExt : MonoBehaviour
{
	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GrabberExt m_HandGrab;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_PlayerVFX;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ObiContactGrabber m_RopeGrabber;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isGrabbing;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource m_ChargingSFX;

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x12AA9C4", Offset = "0x12AA9C4", VA = "0x12AA9C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x12AAA58", Offset = "0x12AAA58", VA = "0x12AAA58")]
	public void OnReleased()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x12AAA80", Offset = "0x12AAA80", VA = "0x12AAA80")]
	public void Blink()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x12AABC8", Offset = "0x12AABC8", VA = "0x12AABC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x12AABF8", Offset = "0x12AABF8", VA = "0x12AABF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x12AAD38", Offset = "0x12AAD38", VA = "0x12AAD38")]
	public ObiContactGrabberExt()
	{
	}
}
[Token(Token = "0x200019A")]
public class PlayerTeleportExt : PlayerTeleport
{
	[Token(Token = "0x2000658")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3600C", Offset = "0xA3600C")]
	private sealed class <WaitAndDisableGrabbableCollision>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerTeleportExt <>4__this;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody <leftRigidbody>5__2;

		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <rightRigidbody>5__3;

		[Token(Token = "0x170004B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0x1143DD0", Offset = "0x1143DD0", VA = "0x1143DD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0x1143E38", Offset = "0x1143E38", VA = "0x1143E38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x1142730", Offset = "0x1142730", VA = "0x1142730")]
		[DebuggerHidden]
		public <WaitAndDisableGrabbableCollision>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0x1143940", Offset = "0x1143940", VA = "0x1143940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0x1143944", Offset = "0x1143944", VA = "0x1143944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0x1143DD8", Offset = "0x1143DD8", VA = "0x1143DD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 initialFacing;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform m_centerEyeAnchor;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Grabber m_LeftHand;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Grabber m_RightHand;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public ParkSceneManager parkSceneManager;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private CharacterFollow _followManager;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private TrickManager _wwTrickFader;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private BNGPlayerControllerExt m_Player;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool sceneHasTeleportIssues;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public LayerMask TeleportationBlockers;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject m_DummyTeleport;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameObject m_WorldSpace;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private float _initialTeleportWait;

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x114181C", Offset = "0x114181C", VA = "0x114181C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x1141A40", Offset = "0x1141A40", VA = "0x1141A40", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1141A44", Offset = "0x1141A44", VA = "0x1141A44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x1141BB0", Offset = "0x1141BB0", VA = "0x1141BB0", Slot = "10")]
	public override void rotateMarker()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x1141D58", Offset = "0x1141D58", VA = "0x1141D58", Slot = "13")]
	public override bool KeyUpFromTeleport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x1141E60", Offset = "0x1141E60", VA = "0x1141E60", Slot = "12")]
	public override bool KeyDownForTeleport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x11423FC", Offset = "0x11423FC", VA = "0x11423FC", Slot = "11")]
	public override void tryTeleport()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x112F2AC", Offset = "0x112F2AC", VA = "0x112F2AC")]
	public void UpdateFollowCharacters()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x11426C0", Offset = "0x11426C0", VA = "0x11426C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA518D8", Offset = "0xA518D8")]
	private IEnumerator WaitAndDisableGrabbableCollision()
	{
		return null;
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x114275C", Offset = "0x114275C", VA = "0x114275C")]
	private void ToggleColliders(Collider[] grabbables, bool toggle)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x11427D8", Offset = "0x11427D8", VA = "0x11427D8", Slot = "9")]
	public override void calculateParabola()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x1143938", Offset = "0x1143938", VA = "0x1143938")]
	public PlayerTeleportExt()
	{
	}
}
[Token(Token = "0x200019B")]
public class PlayerZoneRestriction : MonoBehaviour
{
	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BoxCollider m_BoundBox;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool containsPlayer;

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x11442BC", Offset = "0x11442BC", VA = "0x11442BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1144314", Offset = "0x1144314", VA = "0x1144314")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1144374", Offset = "0x1144374", VA = "0x1144374")]
	private void Update()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x11445D4", Offset = "0x11445D4", VA = "0x11445D4")]
	public PlayerZoneRestriction()
	{
	}
}
[Token(Token = "0x200019C")]
public class UIKitPointerExt : UIKitPointer
{
	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 positionAdjustment;

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x140B8F4", Offset = "0x140B8F4", VA = "0x140B8F4", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x140B998", Offset = "0x140B998", VA = "0x140B998")]
	private void SetToLeft()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x140BA4C", Offset = "0x140BA4C", VA = "0x140BA4C", Slot = "6")]
	protected override void ResetTransform(Transform trans)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x140BBC0", Offset = "0x140BBC0", VA = "0x140BBC0")]
	public UIKitPointerExt()
	{
	}
}
[Token(Token = "0x200019D")]
public class WantedPoster : MonoBehaviour
{
	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _t;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Grabbable _posterGrab;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LayerMask _showsLayers;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _showDistance;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _showDuration;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool _instantShow;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _showTimer;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _lastCharName;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StreetTocksManager _sceneManager;

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x134E6EC", Offset = "0x134E6EC", VA = "0x134E6EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x134E7D4", Offset = "0x134E7D4", VA = "0x134E7D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x134EABC", Offset = "0x134EABC", VA = "0x134EABC")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x134EBA0", Offset = "0x134EBA0", VA = "0x134EBA0")]
	public WantedPoster()
	{
	}
}
[Token(Token = "0x200019E")]
public class Billboard : MonoBehaviour
{
	[Token(Token = "0x2000659")]
	public enum Axis
	{
		[Token(Token = "0x400287B")]
		up,
		[Token(Token = "0x400287C")]
		down,
		[Token(Token = "0x400287D")]
		left,
		[Token(Token = "0x400287E")]
		right,
		[Token(Token = "0x400287F")]
		forward,
		[Token(Token = "0x4002880")]
		back
	}

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera referenceCamera;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool reverseFace;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Axis axis;

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x1208C14", Offset = "0x1208C14", VA = "0x1208C14")]
	public Vector3 GetAxis(Axis refAxis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x1208D88", Offset = "0x1208D88", VA = "0x1208D88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1208E08", Offset = "0x1208E08", VA = "0x1208E08")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1209040", Offset = "0x1209040", VA = "0x1209040")]
	public Billboard()
	{
	}
}
[Token(Token = "0x200019F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32A74", Offset = "0xA32A74")]
public class AchievementUnlockGrabEvent : MonoBehaviour
{
	[Token(Token = "0x200065A")]
	public enum AchievementRequirement
	{
		[Token(Token = "0x4002882")]
		MoonRock,
		[Token(Token = "0x4002883")]
		Scrumpos,
		[Token(Token = "0x4002884")]
		DrDills,
		[Token(Token = "0x4002885")]
		Aquabearium
	}

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement m_Achievement;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Achievement achievement;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Grabbable m_GrabCheck;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool didTrigger;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool achievementCheck;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AchievementRequirement m_AchievementRequirementUnlock;

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x128EC08", Offset = "0x128EC08", VA = "0x128EC08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x128EC68", Offset = "0x128EC68", VA = "0x128EC68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x128EDF8", Offset = "0x128EDF8", VA = "0x128EDF8")]
	public AchievementUnlockGrabEvent()
	{
	}
}
[Token(Token = "0x20001A0")]
public class AnimationBug : MonoBehaviour
{
	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SkinnedMeshRenderer[] toEnable;

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x1296110", Offset = "0x1296110", VA = "0x1296110")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1296114", Offset = "0x1296114", VA = "0x1296114")]
	private void EnableObjects()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x1296184", Offset = "0x1296184", VA = "0x1296184")]
	public AnimationBug()
	{
	}
}
[Token(Token = "0x20001A1")]
public class AnimationCallbackTrigger : MonoBehaviour
{
	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent m_Event;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool doOnce;

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x129618C", Offset = "0x129618C", VA = "0x129618C")]
	public void CallbackTrigger()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x12961CC", Offset = "0x12961CC", VA = "0x12961CC")]
	public AnimationCallbackTrigger()
	{
	}
}
[Token(Token = "0x20001A2")]
public class AnimationEventTrigger : MonoBehaviour
{
	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource[] m_AudioToPlay;

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x12961D4", Offset = "0x12961D4", VA = "0x12961D4")]
	public void AnimEvent(string methodName)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1296288", Offset = "0x1296288", VA = "0x1296288")]
	public void PlayAnimAudio(string audioClip)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x12963D4", Offset = "0x12963D4", VA = "0x12963D4")]
	public void PlayRandomAnimAudio()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x1296440", Offset = "0x1296440", VA = "0x1296440")]
	public void StopAllAnimAudio()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x129652C", Offset = "0x129652C", VA = "0x129652C")]
	public void StopAnimAudio(string audioClip)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x12965E4", Offset = "0x12965E4", VA = "0x12965E4")]
	public void DeattachFlyer()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x1296664", Offset = "0x1296664", VA = "0x1296664")]
	public void PauseTimeline()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x12966E4", Offset = "0x12966E4", VA = "0x12966E4")]
	public AnimationEventTrigger()
	{
	}
}
[Token(Token = "0x20001A3")]
public class AnimationObjectUseTrigger : MonoBehaviour
{
	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] m_ObjectToUse;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem[] m_VFXToUse;

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x12966EC", Offset = "0x12966EC", VA = "0x12966EC")]
	public void PlayParticleSystem(string system)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x129687C", Offset = "0x129687C", VA = "0x129687C")]
	public void UseObject(string objToUse)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1296938", Offset = "0x1296938", VA = "0x1296938")]
	public void UnuseObject(string objToUse)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x12969F4", Offset = "0x12969F4", VA = "0x12969F4")]
	public AnimationObjectUseTrigger()
	{
	}
}
[Token(Token = "0x20001A4")]
public class AnimationPrefabSpawnTrigger : MonoBehaviour
{
	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> spawnedObjects;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, Transform> m_TransformCache;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] m_UsableObjects;

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x12969FC", Offset = "0x12969FC", VA = "0x12969FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1296A28", Offset = "0x1296A28", VA = "0x1296A28")]
	private void PrepareTransformCache(Transform trans)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1296B6C", Offset = "0x1296B6C", VA = "0x1296B6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1296BC4", Offset = "0x1296BC4", VA = "0x1296BC4")]
	public void CreatePrefab(UnityEngine.Object scriptableObject)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1297050", Offset = "0x1297050", VA = "0x1297050")]
	public void UseGameObject(UnityEngine.Object scriptableObject)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1297398", Offset = "0x1297398", VA = "0x1297398")]
	public void UnuseGameObject(string prefabName)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1297508", Offset = "0x1297508", VA = "0x1297508")]
	public void DestroyPrefab(string prefabName)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1296EDC", Offset = "0x1296EDC", VA = "0x1296EDC")]
	private Transform FindTransformName(Transform trans, string transform)
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1297644", Offset = "0x1297644", VA = "0x1297644")]
	public AnimationPrefabSpawnTrigger()
	{
	}
}
[Token(Token = "0x20001A5")]
public class AnimationVFXTrigger : MonoBehaviour
{
	[Token(Token = "0x6000984")]
	[Address(RVA = "0x12976DC", Offset = "0x12976DC", VA = "0x12976DC")]
	public void CreateVFX(string vfxName)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1297834", Offset = "0x1297834", VA = "0x1297834")]
	public AnimationVFXTrigger()
	{
	}
}
[Token(Token = "0x20001A6")]
public class AssignedVFXTrigger : MonoBehaviour
{
	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform vfxParent;

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x129A9C4", Offset = "0x129A9C4", VA = "0x129A9C4")]
	public void CreateAssignedVFX(string vfxName)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x129AB00", Offset = "0x129AB00", VA = "0x129AB00")]
	public AssignedVFXTrigger()
	{
	}
}
[Token(Token = "0x20001A7")]
public class AttachGrabObject : MonoBehaviour
{
	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent _attachAction;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Grabbable _grab;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent _grabAction;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _hasBeenGrabbed;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Collider _trigger;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Collider _objectCollision;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isAttached;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool _canRemove;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool _hideAfterAttach;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float _hideTime;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool _hideImmediate;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _hideObject;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool _mustBeHeld;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	private bool _killCollisionAfterAttach;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<string> _validAttachNames;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool _singleAttachPoint;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _setAttachObject;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3CB18", Offset = "0xA3CB18")]
	private GameObject <setAttachObject>k__BackingField;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Vector3 _attachOffset;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private Vector3 _attachAngle;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Vector3 _scaleAdjust;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject linkedObject;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string _attachAnimTrigger;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject _sfx;

	[Token(Token = "0x17000091")]
	public bool isAttached
	{
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x129AB08", Offset = "0x129AB08", VA = "0x129AB08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000092")]
	public GameObject setAttachObject
	{
		[Token(Token = "0x6000989")]
		[Address(RVA = "0x129AB10", Offset = "0x129AB10", VA = "0x129AB10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5193C", Offset = "0xA5193C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600098A")]
		[Address(RVA = "0x129AB18", Offset = "0x129AB18", VA = "0x129AB18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5194C", Offset = "0xA5194C")]
		set
		{
		}
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x129AB20", Offset = "0x129AB20", VA = "0x129AB20")]
	private void Start()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x129AC40", Offset = "0x129AC40", VA = "0x129AC40")]
	private void Update()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x129AC90", Offset = "0x129AC90", VA = "0x129AC90")]
	public void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x129AE14", Offset = "0x129AE14", VA = "0x129AE14")]
	private void JoinObjectsTogether(GameObject attachmentObject)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x129B1C8", Offset = "0x129B1C8", VA = "0x129B1C8")]
	private void HideObject()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x129B264", Offset = "0x129B264", VA = "0x129B264")]
	public void SwapObjectParent(Transform newParent)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x129B358", Offset = "0x129B358", VA = "0x129B358")]
	public AttachGrabObject()
	{
	}
}
[Token(Token = "0x20001A8")]
public class AudioReceiver : MonoBehaviour
{
	[Token(Token = "0x200065B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3601C", Offset = "0xA3601C")]
	private sealed class <DelayAndPlay>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4002889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioReceiver <>4__this;

		[Token(Token = "0x400288A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int index;

		[Token(Token = "0x170004B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0x129E570", Offset = "0x129E570", VA = "0x129E570", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0x129E5D8", Offset = "0x129E5D8", VA = "0x129E5D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0x129DEE8", Offset = "0x129DEE8", VA = "0x129DEE8")]
		[DebuggerHidden]
		public <DelayAndPlay>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0x129E488", Offset = "0x129E488", VA = "0x129E488", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0x129E48C", Offset = "0x129E48C", VA = "0x129E48C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0x129E578", Offset = "0x129E578", VA = "0x129E578", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] sfx;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _showDebug;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x129D750", Offset = "0x129D750", VA = "0x129D750")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x129D754", Offset = "0x129D754", VA = "0x129D754")]
	public void PlaySFX(int index)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x129D9BC", Offset = "0x129D9BC", VA = "0x129D9BC")]
	public void PlaySFXRepeat(int index)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x129DBF8", Offset = "0x129DBF8", VA = "0x129DBF8")]
	public void PlaySFX(int index, float delay)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x129DE58", Offset = "0x129DE58", VA = "0x129DE58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5195C", Offset = "0xA5195C")]
	public IEnumerator DelayAndPlay(int index, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x129DF14", Offset = "0x129DF14", VA = "0x129DF14")]
	public void StopSFX(int index)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x129E144", Offset = "0x129E144", VA = "0x129E144")]
	public void MuteSFX(int index, bool doMute)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x129E1E8", Offset = "0x129E1E8", VA = "0x129E1E8")]
	public void PlayRandomSFX(string indexList)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x129E480", Offset = "0x129E480", VA = "0x129E480")]
	public AudioReceiver()
	{
	}
}
[Token(Token = "0x20001A9")]
public class CivilianDamagable : Damageable
{
	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ShootingGalleryManager _sceneManager;

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x12213C4", Offset = "0x12213C4", VA = "0x12213C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x1221438", Offset = "0x1221438", VA = "0x1221438", Slot = "4")]
	public override void DealDamage(float damageAmount)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x12214E8", Offset = "0x12214E8", VA = "0x12214E8")]
	public CivilianDamagable()
	{
	}
}
[Token(Token = "0x20001AA")]
public class Character : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200065C")]
	public class CharacterEmote
	{
		[Token(Token = "0x400288B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string emoteTrigger;

		[Token(Token = "0x400288C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string endTrigger;

		[Token(Token = "0x400288D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool nonTalkConstant;

		[Token(Token = "0x400288E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minDuration;

		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxDuration;

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0x1217620", Offset = "0x1217620", VA = "0x1217620")]
		public CharacterEmote()
		{
		}
	}

	[Token(Token = "0x200065D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3602C", Offset = "0xA3602C")]
	private sealed class <RunEmotes>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Character <>4__this;

		[Token(Token = "0x170004B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0x12175B0", Offset = "0x12175B0", VA = "0x12175B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0x1217618", Offset = "0x1217618", VA = "0x1217618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0x121748C", Offset = "0x121748C", VA = "0x121748C")]
		[DebuggerHidden]
		public <RunEmotes>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0x12174C0", Offset = "0x12174C0", VA = "0x12174C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0x12174C4", Offset = "0x12174C4", VA = "0x12174C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0x12175B8", Offset = "0x12175B8", VA = "0x12175B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _characterName;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _hideAfterInit;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator _anim;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LookAtTarget _lookAt;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite _talkSprite;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ConversationTrigger _convoTrigger;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform m_GrabJoint;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject m_GrabbedObject;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ConversationList _conversations;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ConversationResolver _conversationResolver;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject[] _items;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _delayedAnimBool;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _boolDelay;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool isInit;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform lookAtTarget;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected List<ConvoPlayData> _sceneDialogues;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _inConversation;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private CharacterEmote _idleEmote;

	[Token(Token = "0x17000093")]
	public string characterName
	{
		[Token(Token = "0x600099E")]
		[Address(RVA = "0x12154C4", Offset = "0x12154C4", VA = "0x12154C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000094")]
	public Animator anim
	{
		[Token(Token = "0x600099F")]
		[Address(RVA = "0x12154CC", Offset = "0x12154CC", VA = "0x12154CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000095")]
	public LookAtTarget lookAt
	{
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x12154D4", Offset = "0x12154D4", VA = "0x12154D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000096")]
	public Sprite talkSprite
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x12154DC", Offset = "0x12154DC", VA = "0x12154DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000097")]
	public GameObject grabbedObject
	{
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x12154E4", Offset = "0x12154E4", VA = "0x12154E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000098")]
	public ConversationList conversations
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x12154EC", Offset = "0x12154EC", VA = "0x12154EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000099")]
	public ConversationResolver conversationResolver
	{
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x12154F4", Offset = "0x12154F4", VA = "0x12154F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009A")]
	public bool canTriggerConversations
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x12154FC", Offset = "0x12154FC", VA = "0x12154FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x1215558", Offset = "0x1215558", VA = "0x1215558")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x12158DC", Offset = "0x12158DC", VA = "0x12158DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x1215A10", Offset = "0x1215A10", VA = "0x1215A10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1215A18", Offset = "0x1215A18", VA = "0x1215A18")]
	private void Update()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x1215ABC", Offset = "0x1215ABC", VA = "0x1215ABC")]
	public void TriggerConversation()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x1215C58", Offset = "0x1215C58", VA = "0x1215C58")]
	public string GetNextDialogueConversation()
	{
		return null;
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x1215D2C", Offset = "0x1215D2C", VA = "0x1215D2C")]
	public void SetConversationState(bool inConvo)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x1215DAC", Offset = "0x1215DAC", VA = "0x1215DAC", Slot = "4")]
	public virtual void AdjustAnimSpeed(float speed = 1f)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x1215DC8", Offset = "0x1215DC8", VA = "0x1215DC8", Slot = "5")]
	public virtual void CallAnimation(string animName, float codeBlend = -1f, bool forcePlay = false)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x1215EE0", Offset = "0x1215EE0", VA = "0x1215EE0", Slot = "6")]
	public virtual void CallAnimationBool(string boolName, bool status)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x1215F90", Offset = "0x1215F90", VA = "0x1215F90", Slot = "7")]
	public virtual void EnableAnimationBoolDelayed(string boolName, float delay)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x1215F9C", Offset = "0x1215F9C", VA = "0x1215F9C", Slot = "8")]
	public virtual void ClearDelayedBool()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1215FF0", Offset = "0x1215FF0", VA = "0x1215FF0", Slot = "9")]
	public virtual void CallAnimationTrigger(string triggerName)
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x121600C", Offset = "0x121600C", VA = "0x121600C", Slot = "10")]
	public virtual void RemoveTrigger(string triggerName)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x1216028", Offset = "0x1216028", VA = "0x1216028", Slot = "11")]
	public virtual void StopBool(string boolName)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x1216048", Offset = "0x1216048", VA = "0x1216048", Slot = "12")]
	public virtual void CallAnimationInt(string intName, int value)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1216064", Offset = "0x1216064", VA = "0x1216064", Slot = "13")]
	public virtual void PlayAnimAtTime(string animName, float time)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1216084", Offset = "0x1216084", VA = "0x1216084", Slot = "14")]
	public virtual bool AnimIsPlaying(string animName)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x12160F8", Offset = "0x12160F8", VA = "0x12160F8", Slot = "15")]
	public virtual bool GetBoolValue(string animName)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1216114", Offset = "0x1216114", VA = "0x1216114", Slot = "16")]
	public virtual void ClearAnimationVariables()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1216288", Offset = "0x1216288", VA = "0x1216288", Slot = "17")]
	public virtual void BlendIntoIdle(float crossFade = 0.5f)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x12162F4", Offset = "0x12162F4", VA = "0x12162F4")]
	public void GrabObject(string objectToInteract, float fDelay)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x1216480", Offset = "0x1216480", VA = "0x1216480")]
	public void GrabObject(GameObject objectToInteract)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x12164C0", Offset = "0x12164C0", VA = "0x12164C0")]
	private void GrabObjectDelayed()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x12166D8", Offset = "0x12166D8", VA = "0x12166D8")]
	public void ReleaseItem(int itemIndex)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x12169B4", Offset = "0x12169B4", VA = "0x12169B4")]
	public void ReleaseObject(string objectToInteract, float fDelay)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x1216A18", Offset = "0x1216A18", VA = "0x1216A18")]
	private void ReleaseObjectDelayed()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x1216BB8", Offset = "0x1216BB8", VA = "0x1216BB8")]
	public void HoldObject(string objectToInteract, float fDelay)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x1216C84", Offset = "0x1216C84", VA = "0x1216C84")]
	private void ReleaseAndHoldObjectDelayed()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x1216DFC", Offset = "0x1216DFC", VA = "0x1216DFC")]
	public void SetItemActive(int itemIndex, bool enable)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x1217130", Offset = "0x1217130", VA = "0x1217130")]
	public void TransferGrabbedObject(Character targetCharacter)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x1217298", Offset = "0x1217298", VA = "0x1217298", Slot = "18")]
	public virtual void Teleport(Transform target)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x1217328", Offset = "0x1217328", VA = "0x1217328")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x121586C", Offset = "0x121586C", VA = "0x121586C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA519C0", Offset = "0xA519C0")]
	private IEnumerator RunEmotes()
	{
		return null;
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x12174B8", Offset = "0x12174B8", VA = "0x12174B8")]
	public Character()
	{
	}
}
[Token(Token = "0x20001AB")]
public class CharacterAnimReceiver : MonoBehaviour
{
	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Character _character;

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x1217628", Offset = "0x1217628", VA = "0x1217628")]
	public void Initialize(Character character)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x1217630", Offset = "0x1217630", VA = "0x1217630")]
	public void EnableItem(int itemIndex)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x121764C", Offset = "0x121764C", VA = "0x121764C")]
	public void DisableItem(int itemIndex)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x1217668", Offset = "0x1217668", VA = "0x1217668")]
	public void ReleaseItem(int itemIndex)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x1217680", Offset = "0x1217680", VA = "0x1217680")]
	public CharacterAnimReceiver()
	{
	}
}
[Token(Token = "0x20001AC")]
public class CharacterFollow : MonoBehaviour
{
	[Token(Token = "0x200065E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3603C", Offset = "0xA3603C")]
	private sealed class <StartCharacterNavMeshMovement>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterFollow <>4__this;

		[Token(Token = "0x170004B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0x121D628", Offset = "0x121D628", VA = "0x121D628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0x121D690", Offset = "0x121D690", VA = "0x121D690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0x121ACD8", Offset = "0x121ACD8", VA = "0x121ACD8")]
		[DebuggerHidden]
		public <StartCharacterNavMeshMovement>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0x121CB64", Offset = "0x121CB64", VA = "0x121CB64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0x121CB68", Offset = "0x121CB68", VA = "0x121CB68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0x121D630", Offset = "0x121D630", VA = "0x121D630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200065F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3604C", Offset = "0xA3604C")]
	private sealed class <StartCharacterMovement>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterFollow <>4__this;

		[Token(Token = "0x170004BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0x121CAF4", Offset = "0x121CAF4", VA = "0x121CAF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0x121CB5C", Offset = "0x121CB5C", VA = "0x121CB5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0x121AD04", Offset = "0x121AD04", VA = "0x121AD04")]
		[DebuggerHidden]
		public <StartCharacterMovement>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0x121BCDC", Offset = "0x121BCDC", VA = "0x121BCDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0x121BCE0", Offset = "0x121BCE0", VA = "0x121BCE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0x121CAFC", Offset = "0x121CAFC", VA = "0x121CAFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool shouldCharactersFollow;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool usesNavAgents;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Transform> characterTeleportLocations;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Transform> characterMoveToLocations;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<Transform> teleportCharacters;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float raycastYOffset;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform playerLookTarget;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> setLocations;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _moveCR;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float minimumDistance;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NPCTrigger npc;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useNPCLocations;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BNGPlayerControllerExt _player;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform _playerCenter;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SmoothLocomotion _smoothLoc;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float _waitToFollowTime;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _waitTimer;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _hasWalked;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _characterWalkFollowing;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 _moveStartPoint;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _movePointUpdateTimer;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool _updatedForNPC;

	[Token(Token = "0x1700009B")]
	public bool isWalking
	{
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x1218738", Offset = "0x1218738", VA = "0x1218738")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x1218754", Offset = "0x1218754", VA = "0x1218754")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x1218878", Offset = "0x1218878", VA = "0x1218878")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x1218A24", Offset = "0x1218A24", VA = "0x1218A24")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1219D88", Offset = "0x1219D88", VA = "0x1219D88")]
	public void DisableBanter()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x1219E38", Offset = "0x1219E38", VA = "0x1219E38")]
	public void EnableBanter()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x1219EF4", Offset = "0x1219EF4", VA = "0x1219EF4")]
	public void PrepareSkyForPatrol()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x121A1D8", Offset = "0x121A1D8", VA = "0x121A1D8")]
	public void ToggleFollow(bool state)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x121A588", Offset = "0x121A588", VA = "0x121A588")]
	public void CancelGoals()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x121A638", Offset = "0x121A638", VA = "0x121A638")]
	public void WaitAndDisableFollow()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x121A640", Offset = "0x121A640", VA = "0x121A640")]
	public void DisableFollow()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x121A6F4", Offset = "0x121A6F4", VA = "0x121A6F4")]
	public void ActivateFollow()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x121A7AC", Offset = "0x121A7AC", VA = "0x121A7AC")]
	public void TeleportCharacters(int characterIndex = -1, int locationIndex = 0)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x1219AC4", Offset = "0x1219AC4", VA = "0x1219AC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51A24", Offset = "0xA51A24")]
	private IEnumerator StartCharacterNavMeshMovement()
	{
		return null;
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x12196B0", Offset = "0x12196B0", VA = "0x12196B0")]
	public void ClearAnimationVariables(Animator _anim, bool keepTurning = false, bool keepWalking = false)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x121AC68", Offset = "0x121AC68", VA = "0x121AC68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51A88", Offset = "0xA51A88")]
	private IEnumerator StartCharacterMovement()
	{
		return null;
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x121AD30", Offset = "0x121AD30", VA = "0x121AD30")]
	private List<Transform> EvaluateObstacles()
	{
		return null;
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x121B678", Offset = "0x121B678", VA = "0x121B678")]
	public void EnterNPCTrigger(NPCTrigger trigger)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x121B70C", Offset = "0x121B70C", VA = "0x121B70C")]
	public void ExitNPCTrigger()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x121B718", Offset = "0x121B718", VA = "0x121B718")]
	private List<Transform> EvaluateNPCLocations()
	{
		return null;
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x121BAB4", Offset = "0x121BAB4", VA = "0x121BAB4")]
	public bool FollowersAreFar()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x121BCCC", Offset = "0x121BCCC", VA = "0x121BCCC")]
	public CharacterFollow()
	{
	}
}
[Token(Token = "0x20001AD")]
public class CharacterFollowRotation : MonoBehaviour
{
	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LookAtTarget lookAtComponent;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform lookTarget;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform lookTargetHead;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform originalLookTarget;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform originalLookTargetHead;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool flipRotationAnim;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool rotating;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator _anim;

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x121D698", Offset = "0x121D698", VA = "0x121D698")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x121D700", Offset = "0x121D700", VA = "0x121D700")]
	public void SetLookTarget(Transform target)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x121D708", Offset = "0x121D708", VA = "0x121D708")]
	public void SetLookTargetHead(Transform target)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x121D710", Offset = "0x121D710", VA = "0x121D710")]
	public void OrientCharacterToTarget()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x121DBA0", Offset = "0x121DBA0", VA = "0x121DBA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x121CAB0", Offset = "0x121CAB0", VA = "0x121CAB0")]
	public void DisableLook()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x121DC28", Offset = "0x121DC28", VA = "0x121DC28")]
	public void EnableLook()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x121DD70", Offset = "0x121DD70", VA = "0x121DD70")]
	public void RedoRotation()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x121E288", Offset = "0x121E288", VA = "0x121E288")]
	public void ResetLookTargets()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x121E294", Offset = "0x121E294", VA = "0x121E294")]
	public CharacterFollowRotation()
	{
	}
}
[Token(Token = "0x20001AE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32AD8", Offset = "0xA32AD8")]
public class CharacterNavMeshFollow : MonoBehaviour
{
	[Token(Token = "0x2000660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3605C", Offset = "0xA3605C")]
	private sealed class <PlayRandomBanter>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterNavMeshFollow <>4__this;

		[Token(Token = "0x170004BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BCC")]
			[Address(RVA = "0x121E970", Offset = "0x121E970", VA = "0x121E970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0x121E9D8", Offset = "0x121E9D8", VA = "0x121E9D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0x121E840", Offset = "0x121E840", VA = "0x121E840")]
		[DebuggerHidden]
		public <PlayRandomBanter>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0x121E884", Offset = "0x121E884", VA = "0x121E884", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0x121E888", Offset = "0x121E888", VA = "0x121E888", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0x121E978", Offset = "0x121E978", VA = "0x121E978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterFollow followManager;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasDestination;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshAgent m_navAgent;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine waitBanterThread;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParkSceneManager m_Park;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool willPlayAudio;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool shouldPlayAudio;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool canPlayBanter;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> _lastPositions;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _walkPositionCount;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool manualUpdates;

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x121E448", Offset = "0x121E448", VA = "0x121E448")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x121E5C0", Offset = "0x121E5C0", VA = "0x121E5C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x12198C8", Offset = "0x12198C8", VA = "0x12198C8")]
	public void GameplayUpdate()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x121A4DC", Offset = "0x121A4DC", VA = "0x121A4DC")]
	public void EnableAgent()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x121A3D8", Offset = "0x121A3D8", VA = "0x121A3D8")]
	public void DisableAgent()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x121A384", Offset = "0x121A384", VA = "0x121A384")]
	public void PrepareForSkyPatrol()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x1219B34", Offset = "0x1219B34", VA = "0x1219B34")]
	public void SetGoal(Vector3 goal)
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x121E834", Offset = "0x121E834", VA = "0x121E834")]
	public void ToggleBanter(bool banter)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x121E7C4", Offset = "0x121E7C4", VA = "0x121E7C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51AEC", Offset = "0xA51AEC")]
	private IEnumerator PlayRandomBanter()
	{
		return null;
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x121A2A8", Offset = "0x121A2A8", VA = "0x121A2A8")]
	public void CancelGoal()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x121D60C", Offset = "0x121D60C", VA = "0x121D60C")]
	public void Warp(Vector3 vector3)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x1219660", Offset = "0x1219660", VA = "0x1219660")]
	public bool isWalking()
	{
		return default(bool);
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x121D5F0", Offset = "0x121D5F0", VA = "0x121D5F0")]
	public void SetSpeed(float speed = 3.5f)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x121E86C", Offset = "0x121E86C", VA = "0x121E86C")]
	public CharacterNavMeshFollow()
	{
	}
}
[Token(Token = "0x20001AF")]
public class CharacterTeleporter : MonoBehaviour
{
	[Token(Token = "0x2000661")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3606C", Offset = "0xA3606C")]
	private sealed class <ProcessTeleport>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterTeleporter <>4__this;

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform point;

		[Token(Token = "0x170004BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BD2")]
			[Address(RVA = "0x121FA84", Offset = "0x121FA84", VA = "0x121FA84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0x121FAEC", Offset = "0x121FAEC", VA = "0x121FAEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0x121F800", Offset = "0x121F800", VA = "0x121F800")]
		[DebuggerHidden]
		public <ProcessTeleport>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0x121F86C", Offset = "0x121F86C", VA = "0x121F86C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0x121F870", Offset = "0x121F870", VA = "0x121F870", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0x121FA8C", Offset = "0x121FA8C", VA = "0x121FA8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000662")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3607C", Offset = "0xA3607C")]
	private sealed class <ProcessTeleportSwap>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Character outChar;

		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterTeleporter <>4__this;

		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float overrideTime;

		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Character inChar;

		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform point;

		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string enableAnim;

		[Token(Token = "0x170004C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BD8")]
			[Address(RVA = "0x121FE0C", Offset = "0x121FE0C", VA = "0x121FE0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0x121FE74", Offset = "0x121FE74", VA = "0x121FE74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0x121F82C", Offset = "0x121F82C", VA = "0x121F82C")]
		[DebuggerHidden]
		public <ProcessTeleportSwap>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0x121FAF4", Offset = "0x121FAF4", VA = "0x121FAF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0x121FAF8", Offset = "0x121FAF8", VA = "0x121FAF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0x121FE14", Offset = "0x121FE14", VA = "0x121FE14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Character _currentCharacter;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Character _character;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Character[] _alternateRigs;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _outTrigger;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _inTrigger;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _teleportDelay;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string[] _clearBools;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] _points;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine _currentTeleport;

	[Token(Token = "0x1700009C")]
	public string characterName
	{
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x121EAE8", Offset = "0x121EAE8", VA = "0x121EAE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009D")]
	public bool isTeleporting
	{
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x121F6B8", Offset = "0x121F6B8", VA = "0x121F6B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x121F6D0", Offset = "0x121F6D0", VA = "0x121F6D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x121EC24", Offset = "0x121EC24", VA = "0x121EC24")]
	public void Teleport(string pointName)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x121EEA4", Offset = "0x121EEA4", VA = "0x121EEA4")]
	public void Teleport(int pointIndex)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x121F214", Offset = "0x121F214", VA = "0x121F214")]
	public void SwapTeleport(string newCharName, int pointIndex, float overrideTime = -1f, string enableAnim = "")
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x121F6DC", Offset = "0x121F6DC", VA = "0x121F6DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51B50", Offset = "0xA51B50")]
	private IEnumerator ProcessTeleport(Transform point)
	{
		return null;
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x121F758", Offset = "0x121F758", VA = "0x121F758")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51BB4", Offset = "0xA51BB4")]
	private IEnumerator ProcessTeleportSwap(Transform point, Character outChar, Character inChar, float overrideTime = -1f, string enableAnim = "")
	{
		return null;
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x121F620", Offset = "0x121F620", VA = "0x121F620")]
	public void ClearValues()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x121F858", Offset = "0x121F858", VA = "0x121F858")]
	public CharacterTeleporter()
	{
	}
}
[Token(Token = "0x20001B0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32B3C", Offset = "0xA32B3C")]
public class ClimbGrabTrigger : EventTrigger
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Climbable _climb;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _triggered;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _repeatable;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool _wasHeld;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	[SerializeField]
	private bool _releaseEventsActive;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent releaseTrigger;

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x12214F0", Offset = "0x12214F0", VA = "0x12214F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x1221548", Offset = "0x1221548", VA = "0x1221548")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x12215D0", Offset = "0x12215D0", VA = "0x12215D0")]
	public ClimbGrabTrigger()
	{
	}
}
[Token(Token = "0x20001B1")]
public class ControllerManager : MonoBehaviour
{
	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputBridge _input;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DebugSettingsUI _debugSettingsMenu;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HandModelSelectorExt _handSelector;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OfficeEndConversationResolver officeEndHelp;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _xHeldCount;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _xHeldTarget;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _debugOptions;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _debugHeldCount;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _debugHeldTarget;

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x1228C2C", Offset = "0x1228C2C", VA = "0x1228C2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x1228CE8", Offset = "0x1228CE8", VA = "0x1228CE8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x12293F8", Offset = "0x12293F8", VA = "0x12293F8")]
	public ControllerManager()
	{
	}
}
[Token(Token = "0x20001B2")]
public class ConversationTrigger : MonoBehaviour
{
	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ConversationList _conversationList;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isPreIntro;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool _debugInEditor;

	[Token(Token = "0x1700009E")]
	public ConversationList conversationList
	{
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x122F91C", Offset = "0x122F91C", VA = "0x122F91C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x122F924", Offset = "0x122F924", VA = "0x122F924")]
		set
		{
		}
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x122F950", Offset = "0x122F950", VA = "0x122F950")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x122F92C", Offset = "0x122F92C", VA = "0x122F92C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x12218DC", Offset = "0x12218DC", VA = "0x12218DC")]
	public void TriggerConversation()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x122F9D8", Offset = "0x122F9D8", VA = "0x122F9D8")]
	public void ForceConversation()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x1223178", Offset = "0x1223178", VA = "0x1223178")]
	public bool TriggerConversationCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x12234BC", Offset = "0x12234BC", VA = "0x12234BC")]
	public void ResetDialogue(string id)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x12218C4", Offset = "0x12218C4", VA = "0x12218C4")]
	public void SetConversation(string id)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x122FC60", Offset = "0x122FC60", VA = "0x122FC60")]
	public ConversationTrigger()
	{
	}
}
[Token(Token = "0x20001B3")]
public class CountdownEventTrigger : EventTrigger
{
	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float waitTime;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool triggerOnEnable;

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x123093C", Offset = "0x123093C", VA = "0x123093C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x12309B4", Offset = "0x12309B4", VA = "0x12309B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x1230A20", Offset = "0x1230A20", VA = "0x1230A20")]
	public CountdownEventTrigger()
	{
	}
}
[Token(Token = "0x20001B4")]
public class CreatureCollisionLink : MonoBehaviour
{
	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Creature parentCreature;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isWeakPoint;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject weakPoint;

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x1232BE4", Offset = "0x1232BE4", VA = "0x1232BE4")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x1232C74", Offset = "0x1232C74", VA = "0x1232C74")]
	public void TakeHit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x1232CAC", Offset = "0x1232CAC", VA = "0x1232CAC")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x1232CF0", Offset = "0x1232CF0", VA = "0x1232CF0")]
	public CreatureCollisionLink()
	{
	}
}
[Token(Token = "0x20001B5")]
public class CreatureProjectile : MonoBehaviour
{
	[Token(Token = "0x2000663")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3608C", Offset = "0xA3608C")]
	private sealed class <StartLaunch>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreatureProjectile <>4__this;

		[Token(Token = "0x170004C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0x1233E40", Offset = "0x1233E40", VA = "0x1233E40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0x1233EA8", Offset = "0x1233EA8", VA = "0x1233EA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0x12330C8", Offset = "0x12330C8", VA = "0x12330C8")]
		[DebuggerHidden]
		public <StartLaunch>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0x1233D5C", Offset = "0x1233D5C", VA = "0x1233D5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0x1233D60", Offset = "0x1233D60", VA = "0x1233D60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0x1233E48", Offset = "0x1233E48", VA = "0x1233E48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool forCoC;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool breakOnAll;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool faceTarget;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_Damage;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _target;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _useTargetPoint;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _projDir;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _variance;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float _adjustUp;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _delay;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _launched;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider projectileCollider;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody _rb;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<string> _collideObjects;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioSource _throwSound;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource _impactSound;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _impactVFX;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip _destroySound;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private List<AudioClip> _randomDestroySounds;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioSource _travelSound;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private List<string> _destroySFXObjects;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private bool _sfxOnDamageOnly;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[SerializeField]
	private bool _destroySoundOnAll;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool _damageHit;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action<string> hitCallback;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private bool reducePlayerScore;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private int reduceScoreAmount;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private bool _skyPatrolProjectile;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool shouldPreserve;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool preserved;

	[Token(Token = "0x1700009F")]
	public float delay
	{
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x1232CF8", Offset = "0x1232CF8", VA = "0x1232CF8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x1232D00", Offset = "0x1232D00", VA = "0x1232D00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x1232DF0", Offset = "0x1232DF0", VA = "0x1232DF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x1232EF0", Offset = "0x1232EF0", VA = "0x1232EF0")]
	public void Initialize(Vector3 dir)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x1232F94", Offset = "0x1232F94", VA = "0x1232F94")]
	public void InitializeNoCoroutine(Vector3 dir)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x123303C", Offset = "0x123303C", VA = "0x123303C")]
	public void Initialize(Transform target)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x123308C", Offset = "0x123308C", VA = "0x123308C")]
	public void InitializeWithPoint(Vector3 point)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x1232F24", Offset = "0x1232F24", VA = "0x1232F24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51C18", Offset = "0xA51C18")]
	private IEnumerator StartLaunch()
	{
		return null;
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x12330F4", Offset = "0x12330F4", VA = "0x12330F4")]
	private void LaunchProjectile()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x123332C", Offset = "0x123332C", VA = "0x123332C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x1233B30", Offset = "0x1233B30", VA = "0x1233B30")]
	private void PlayDestroySFX(Vector3 pos)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x1233D38", Offset = "0x1233D38", VA = "0x1233D38")]
	public CreatureProjectile()
	{
	}
}
[Token(Token = "0x20001B6")]
public class DoorOpenEventTrigger : EventTrigger
{
	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Door _door;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _openPercent;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _triggered;

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x1320F5C", Offset = "0x1320F5C", VA = "0x1320F5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x1320FB4", Offset = "0x1320FB4", VA = "0x1320FB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x1321008", Offset = "0x1321008", VA = "0x1321008")]
	public DoorOpenEventTrigger()
	{
	}
}
[Token(Token = "0x20001B7")]
public class DropRespawn : MonoBehaviour
{
	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _t;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _startPosition;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion _startRotation;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody _rigid;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _resetHeight;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private bool _lockOnReset;

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x13F55C0", Offset = "0x13F55C0", VA = "0x13F55C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x13F5658", Offset = "0x13F5658", VA = "0x13F5658")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x13F5748", Offset = "0x13F5748", VA = "0x13F5748")]
	public DropRespawn()
	{
	}
}
[Token(Token = "0x20001B8")]
public class Elevator : MonoBehaviour
{
	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_fElevatorSpeed;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_fWaitTime;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_fElevationTime;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _currentTime;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform m_Floor;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_ElevatedFloor;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isElevating;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isIdle;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 floorPos;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BNGPlayerControllerExt playerController;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Collider[] m_colliders;

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x13F5A34", Offset = "0x13F5A34", VA = "0x13F5A34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x13F5B8C", Offset = "0x13F5B8C", VA = "0x13F5B8C")]
	private void ContinueElevation()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x13F5BA0", Offset = "0x13F5BA0", VA = "0x13F5BA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x13F5DF8", Offset = "0x13F5DF8", VA = "0x13F5DF8")]
	public Elevator()
	{
	}
}
[Token(Token = "0x20001B9")]
public class EventTrigger : MonoBehaviour
{
	[Token(Token = "0x2000664")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3609C", Offset = "0xA3609C")]
	private sealed class <WaitAndDisable>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventTrigger <>4__this;

		[Token(Token = "0x170004C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0x13F7990", Offset = "0x13F7990", VA = "0x13F7990", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0x13F79F8", Offset = "0x13F79F8", VA = "0x13F79F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0x13F7798", Offset = "0x13F7798", VA = "0x13F7798")]
		[DebuggerHidden]
		public <WaitAndDisable>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0x13F7924", Offset = "0x13F7924", VA = "0x13F7924", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0x13F7928", Offset = "0x13F7928", VA = "0x13F7928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0x13F7998", Offset = "0x13F7998", VA = "0x13F7998", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000665")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA360AC", Offset = "0xA360AC")]
	private sealed class <WaitAndKill>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventTrigger <>4__this;

		[Token(Token = "0x170004C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0x13F7AB8", Offset = "0x13F7AB8", VA = "0x13F7AB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0x13F7B20", Offset = "0x13F7B20", VA = "0x13F7B20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0x13F78F0", Offset = "0x13F78F0", VA = "0x13F78F0")]
		[DebuggerHidden]
		public <WaitAndKill>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0x13F7A00", Offset = "0x13F7A00", VA = "0x13F7A00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0x13F7A04", Offset = "0x13F7A04", VA = "0x13F7A04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0x13F7AC0", Offset = "0x13F7AC0", VA = "0x13F7AC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent triggerAction;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _killOnTrigger;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool _DisabledOnTrigger;

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x13F7570", Offset = "0x13F7570", VA = "0x13F7570")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x13F7574", Offset = "0x13F7574", VA = "0x13F7574")]
	protected void Initialize()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x13F76AC", Offset = "0x13F76AC", VA = "0x13F76AC")]
	protected void InvokeEvent()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x13F76FC", Offset = "0x13F76FC", VA = "0x13F76FC")]
	private void DisableObject()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x13F7728", Offset = "0x13F7728", VA = "0x13F7728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51C7C", Offset = "0xA51C7C")]
	private IEnumerator WaitAndDisable()
	{
		return null;
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x13F77C4", Offset = "0x13F77C4", VA = "0x13F77C4")]
	private void KillObject()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x13F7880", Offset = "0x13F7880", VA = "0x13F7880")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51CE0", Offset = "0xA51CE0")]
	private IEnumerator WaitAndKill()
	{
		return null;
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x13F791C", Offset = "0x13F791C", VA = "0x13F791C")]
	public EventTrigger()
	{
	}
}
[Token(Token = "0x20001BA")]
public class BallMechanics : MonoBehaviour
{
	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FizzballSceneManager sceneManager;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator _canHitAnim;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<string> _canHitStyles;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GameObject> _canHitVFX;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource _canHitSFX;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource _canBounceSFX;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip[] _bounceClips;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject floatingText;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject floatingTextOut;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject floatingTextStrike;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float startTime;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Collider col;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool triggered;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool hitBat;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int homeRuns;

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x13EA430", Offset = "0x13EA430", VA = "0x13EA430")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x13EA494", Offset = "0x13EA494", VA = "0x13EA494")]
	private void RandomBounceSound()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x13EA50C", Offset = "0x13EA50C", VA = "0x13EA50C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x13EB1D8", Offset = "0x13EB1D8", VA = "0x13EB1D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x13EC088", Offset = "0x13EC088", VA = "0x13EC088")]
	public BallMechanics()
	{
	}
}
[Token(Token = "0x20001BB")]
public class BatCapsule : MonoBehaviour
{
	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BatCapsuleFollower _batCapsuleFollowerPrefab;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool createSFX;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip swingClip;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GrabbableBat batGrabber;

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x13ED838", Offset = "0x13ED838", VA = "0x13ED838")]
	private void SpawnBatCapsuleFollower()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x13ED978", Offset = "0x13ED978", VA = "0x13ED978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x13ED97C", Offset = "0x13ED97C", VA = "0x13ED97C")]
	public BatCapsule()
	{
	}
}
[Token(Token = "0x20001BC")]
public class BatCapsuleFollower : MonoBehaviour
{
	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GrabbableBat batGrabber;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BatCapsule _batFollower;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _velocity;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool skippedFirstSwing;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float delayTimer;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _sensitivity;

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x13ED984", Offset = "0x13ED984", VA = "0x13ED984")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x13ED9DC", Offset = "0x13ED9DC", VA = "0x13ED9DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x13EDC64", Offset = "0x13EDC64", VA = "0x13EDC64")]
	public void SetFollowTarget(BatCapsule batFollower)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x13EDC6C", Offset = "0x13EDC6C", VA = "0x13EDC6C")]
	public void SetBatGrabber(GrabbableBat grabber)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x13EDC74", Offset = "0x13EDC74", VA = "0x13EDC74")]
	public BatCapsuleFollower()
	{
	}
}
[Token(Token = "0x20001BD")]
public class BatReset : MonoBehaviour
{
	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GrabbableBat grabbable;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rBody;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 originPos;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 originRot;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource dropSFX;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip[] dropClips;

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x1206C24", Offset = "0x1206C24", VA = "0x1206C24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x1206CD8", Offset = "0x1206CD8", VA = "0x1206CD8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x1206DD4", Offset = "0x1206DD4", VA = "0x1206DD4")]
	private void RandomDropSound()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x1206E4C", Offset = "0x1206E4C", VA = "0x1206E4C")]
	public BatReset()
	{
	}
}
[Token(Token = "0x20001BE")]
public class FizzballTarget : MonoBehaviour
{
	[Token(Token = "0x2000666")]
	public enum FizzballTargetType
	{
		[Token(Token = "0x40028B2")]
		Out,
		[Token(Token = "0x40028B3")]
		Single,
		[Token(Token = "0x40028B4")]
		Double,
		[Token(Token = "0x40028B5")]
		Triple,
		[Token(Token = "0x40028B6")]
		HomeRun,
		[Token(Token = "0x40028B7")]
		GrandSlam,
		[Token(Token = "0x40028B8")]
		Strike,
		[Token(Token = "0x40028B9")]
		Foul,
		[Token(Token = "0x40028BA")]
		GroundOut,
		[Token(Token = "0x40028BB")]
		Max
	}

	[Token(Token = "0x2000667")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA360BC", Offset = "0xA360BC")]
	private sealed class <ResetVFX>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FizzballTarget <>4__this;

		[Token(Token = "0x170004C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0x125B948", Offset = "0x125B948", VA = "0x125B948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0x125B9B0", Offset = "0x125B9B0", VA = "0x125B9B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0x125A79C", Offset = "0x125A79C", VA = "0x125A79C")]
		[DebuggerHidden]
		public <ResetVFX>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0x125B890", Offset = "0x125B890", VA = "0x125B890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0x125B894", Offset = "0x125B894", VA = "0x125B894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0x125B950", Offset = "0x125B950", VA = "0x125B950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000668")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA360CC", Offset = "0xA360CC")]
	private sealed class <WaitAndAnimate>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FizzballTarget <>4__this;

		[Token(Token = "0x170004CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BF6")]
			[Address(RVA = "0x125BA98", Offset = "0x125BA98", VA = "0x125BA98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0x125BB00", Offset = "0x125BB00", VA = "0x125BB00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0x125A838", Offset = "0x125A838", VA = "0x125A838")]
		[DebuggerHidden]
		public <WaitAndAnimate>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0x125B9B8", Offset = "0x125B9B8", VA = "0x125B9B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0x125B9BC", Offset = "0x125B9BC", VA = "0x125B9BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0x125BAA0", Offset = "0x125BAA0", VA = "0x125BAA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000669")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA360DC", Offset = "0xA360DC")]
	private sealed class <WaitAndMove>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FizzballTarget <>4__this;

		[Token(Token = "0x40028C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <randDir>5__2;

		[Token(Token = "0x170004CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0x125BC04", Offset = "0x125BC04", VA = "0x125BC04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0x125BC6C", Offset = "0x125BC6C", VA = "0x125BC6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0x125A8D4", Offset = "0x125A8D4", VA = "0x125A8D4")]
		[DebuggerHidden]
		public <WaitAndMove>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0x125BB08", Offset = "0x125BB08", VA = "0x125BB08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BFB")]
		[Address(RVA = "0x125BB0C", Offset = "0x125BB0C", VA = "0x125BB0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0x125BC0C", Offset = "0x125BC0C", VA = "0x125BC0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FizzballTargetType targetType;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource hitSFX;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject hitVFX;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator anim;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool startRight;

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x125A67C", Offset = "0x125A67C", VA = "0x125A67C")]
	public void PlayVFX()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x125A72C", Offset = "0x125A72C", VA = "0x125A72C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51D44", Offset = "0xA51D44")]
	private IEnumerator ResetVFX()
	{
		return null;
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x1259208", Offset = "0x1259208", VA = "0x1259208")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x1257ECC", Offset = "0x1257ECC", VA = "0x1257ECC")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x125A7C8", Offset = "0x125A7C8", VA = "0x125A7C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51DA8", Offset = "0xA51DA8")]
	private IEnumerator WaitAndAnimate()
	{
		return null;
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x1257E70", Offset = "0x1257E70", VA = "0x1257E70")]
	public bool IsLooping()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x1259204", Offset = "0x1259204", VA = "0x1259204")]
	public void ResetTriggers()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x1259140", Offset = "0x1259140", VA = "0x1259140")]
	public void TriggerMoving()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x125A864", Offset = "0x125A864", VA = "0x125A864")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51E0C", Offset = "0xA51E0C")]
	private IEnumerator WaitAndMove()
	{
		return null;
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x125A900", Offset = "0x125A900", VA = "0x125A900")]
	public void InitialMove()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x125AC88", Offset = "0x125AC88", VA = "0x125AC88")]
	public void InitialReturn()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x125B1B0", Offset = "0x125B1B0", VA = "0x125B1B0")]
	public void Move()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x125B51C", Offset = "0x125B51C", VA = "0x125B51C")]
	public void MoveBack()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x125B888", Offset = "0x125B888", VA = "0x125B888")]
	public FizzballTarget()
	{
	}
}
[Token(Token = "0x20001BF")]
public class PitcherSFX : MonoBehaviour
{
	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] clips;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource source;

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1134D98", Offset = "0x1134D98", VA = "0x1134D98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1134DF0", Offset = "0x1134DF0", VA = "0x1134DF0")]
	public void Shake()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1134E4C", Offset = "0x1134E4C", VA = "0x1134E4C")]
	public void Throw()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1134EAC", Offset = "0x1134EAC", VA = "0x1134EAC")]
	public PitcherSFX()
	{
	}
}
[Token(Token = "0x20001C0")]
public class SwitchHitter : MonoBehaviour
{
	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool switchHitter;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform leftController;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform rightController;

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x10E1734", Offset = "0x10E1734", VA = "0x10E1734")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x10E1738", Offset = "0x10E1738", VA = "0x10E1738")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x10E18C4", Offset = "0x10E18C4", VA = "0x10E18C4")]
	public SwitchHitter()
	{
	}
}
[Token(Token = "0x20001C1")]
public class TargetAnimationEvent : MonoBehaviour
{
	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x10E4DF0", Offset = "0x10E4DF0", VA = "0x10E4DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x10E4E48", Offset = "0x10E4E48", VA = "0x10E4E48")]
	public void KillLoop()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x10E4EA8", Offset = "0x10E4EA8", VA = "0x10E4EA8")]
	public TargetAnimationEvent()
	{
	}
}
[Token(Token = "0x20001C2")]
public class VelocityDebugger : MonoBehaviour
{
	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxVelocity;

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x1347DE8", Offset = "0x1347DE8", VA = "0x1347DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1347E64", Offset = "0x1347E64", VA = "0x1347E64")]
	private Color ColorForVelocity()
	{
		return default(Color);
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x1347F5C", Offset = "0x1347F5C", VA = "0x1347F5C")]
	public VelocityDebugger()
	{
	}
}
[Token(Token = "0x20001C3")]
public class GrabbableCharacterItem : MonoBehaviour
{
	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotationOffset;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 origPos;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion origRot;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool isAttached;

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x118F750", Offset = "0x118F750", VA = "0x118F750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x118F7AC", Offset = "0x118F7AC", VA = "0x118F7AC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x118F804", Offset = "0x118F804", VA = "0x118F804")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x118F8F0", Offset = "0x118F8F0", VA = "0x118F8F0")]
	public GrabbableCharacterItem()
	{
	}
}
[Token(Token = "0x20001C4")]
public class GrabbableEventTrigger : MonoBehaviour
{
	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Grabbable m_GrabCheck;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool CheckObjectBeingHeld;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent m_GrabbedEvent;

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x118F8F8", Offset = "0x118F8F8", VA = "0x118F8F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x118F9A0", Offset = "0x118F9A0", VA = "0x118F9A0")]
	public GrabbableEventTrigger()
	{
	}
}
[Token(Token = "0x20001C5")]
public class GrabbableObjectEventTrigger : MonoBehaviour
{
	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask validLayers;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string m_ObjectName;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Grabbable m_GrabCheck;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_isObjectIn;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool CheckObjectBeingHeld;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent m_ObjectIn;

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x118FA48", Offset = "0x118FA48", VA = "0x118FA48")]
	public bool IsObjectIn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x118FA50", Offset = "0x118FA50", VA = "0x118FA50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x118FAE8", Offset = "0x118FAE8", VA = "0x118FAE8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x118FC4C", Offset = "0x118FC4C", VA = "0x118FC4C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x118FCF8", Offset = "0x118FCF8", VA = "0x118FCF8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x118FE20", Offset = "0x118FE20", VA = "0x118FE20")]
	public GrabbableObjectEventTrigger()
	{
	}
}
[Token(Token = "0x20001C6")]
public class HandInverseKinematicTrigger : MonoBehaviour
{
	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_HandColliderHelper;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int layerID;

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x1193698", Offset = "0x1193698", VA = "0x1193698")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x1193844", Offset = "0x1193844", VA = "0x1193844")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x1193898", Offset = "0x1193898", VA = "0x1193898")]
	public HandInverseKinematicTrigger()
	{
	}
}
[Token(Token = "0x20001C7")]
public class HelpTaskTrigger : MonoBehaviour
{
	[Token(Token = "0x200066A")]
	public enum TriggerType
	{
		[Token(Token = "0x40028C7")]
		Grabbable
	}

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Grabbable[] m_Grabbables;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TriggerType m_trigger;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string taskName;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string requiredTaskComplete;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool didTrigger;

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x11A8490", Offset = "0x11A8490", VA = "0x11A8490")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x11A8540", Offset = "0x11A8540", VA = "0x11A8540")]
	private bool didCompleteRequired()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x11A85E4", Offset = "0x11A85E4", VA = "0x11A85E4")]
	public HelpTaskTrigger()
	{
	}
}
[Token(Token = "0x20001C8")]
public class InventoryItemReset : MonoBehaviour
{
	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GrabbableExt _grab;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _resetPoint;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _resetTime;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _resetTimer;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _beenHeldOrStored;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _resetToInventory;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SnapZone[] _inventoryPoints;

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x114B294", Offset = "0x114B294", VA = "0x114B294")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x114B344", Offset = "0x114B344", VA = "0x114B344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x114B440", Offset = "0x114B440", VA = "0x114B440")]
	private void ResetItem()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x114B6D0", Offset = "0x114B6D0", VA = "0x114B6D0")]
	public InventoryItemReset()
	{
	}
}
[Token(Token = "0x20001C9")]
public class ItemLockEventTrigger : LocationEventTrigger
{
	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform m_ResetPosition;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool isDillsHead;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool doDillsHeadOnce;

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x114BF0C", Offset = "0x114BF0C", VA = "0x114BF0C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x114C1B8", Offset = "0x114C1B8", VA = "0x114C1B8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x114C464", Offset = "0x114C464", VA = "0x114C464")]
	public ItemLockEventTrigger()
	{
	}
}
[Token(Token = "0x20001CA")]
public class JointDetection : MonoBehaviour
{
	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasBroken;

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x114CB40", Offset = "0x114CB40", VA = "0x114CB40")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x114CB4C", Offset = "0x114CB4C", VA = "0x114CB4C")]
	public JointDetection()
	{
	}
}
[Token(Token = "0x20001CB")]
public class ListenAquabearAchievement : MonoBehaviour
{
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject Ears;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider EarBoundBox;

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x115AE28", Offset = "0x115AE28", VA = "0x115AE28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x115AE9C", Offset = "0x115AE9C", VA = "0x115AE9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x115AF84", Offset = "0x115AF84", VA = "0x115AF84")]
	public ListenAquabearAchievement()
	{
	}
}
[Token(Token = "0x20001CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32BA0", Offset = "0xA32BA0")]
public class LocationEventTeleportTrigger : EventTrigger
{
	[Token(Token = "0x200066B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA360EC", Offset = "0xA360EC")]
	private sealed class <WaitAndInvoke>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocationEventTeleportTrigger <>4__this;

		[Token(Token = "0x170004CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C02")]
			[Address(RVA = "0x115C3D4", Offset = "0x115C3D4", VA = "0x115C3D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C04")]
			[Address(RVA = "0x115C43C", Offset = "0x115C43C", VA = "0x115C43C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BFF")]
		[Address(RVA = "0x115C2DC", Offset = "0x115C2DC", VA = "0x115C2DC")]
		[DebuggerHidden]
		public <WaitAndInvoke>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0x115C310", Offset = "0x115C310", VA = "0x115C310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C01")]
		[Address(RVA = "0x115C314", Offset = "0x115C314", VA = "0x115C314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0x115C3DC", Offset = "0x115C3DC", VA = "0x115C3DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _objectName;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _exactMatch;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _withDelay;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _delayAmount;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform m_TeleportPoint;

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x115C0A4", Offset = "0x115C0A4", VA = "0x115C0A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x115C114", Offset = "0x115C114", VA = "0x115C114")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x115C26C", Offset = "0x115C26C", VA = "0x115C26C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51E70", Offset = "0xA51E70")]
	private IEnumerator WaitAndInvoke()
	{
		return null;
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x115C308", Offset = "0x115C308", VA = "0x115C308")]
	public LocationEventTeleportTrigger()
	{
	}
}
[Token(Token = "0x20001CD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32C04", Offset = "0xA32C04")]
public class LocationEventTrigger : EventTrigger
{
	[Token(Token = "0x200066C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA360FC", Offset = "0xA360FC")]
	private sealed class <WaitAndInvoke>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocationEventTrigger <>4__this;

		[Token(Token = "0x170004D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C08")]
			[Address(RVA = "0x115CD18", Offset = "0x115CD18", VA = "0x115CD18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0x115CD80", Offset = "0x115CD80", VA = "0x115CD80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0x115CC08", Offset = "0x115CC08", VA = "0x115CC08")]
		[DebuggerHidden]
		public <WaitAndInvoke>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002C06")]
		[Address(RVA = "0x115CC34", Offset = "0x115CC34", VA = "0x115CC34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C07")]
		[Address(RVA = "0x115CC38", Offset = "0x115CC38", VA = "0x115CC38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C09")]
		[Address(RVA = "0x115CD20", Offset = "0x115CD20", VA = "0x115CD20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected string _objectName;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected bool _exactMatch;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _withDelay;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected float _delayAmount;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected LayerMask validLayers;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool _triggerOnStay;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[SerializeField]
	private bool _isTimed;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _timeToActivate;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _lastStayTime;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float _timer;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool _isInArea;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[SerializeField]
	private bool _signalExit;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent exitTriggerAction;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent ContactStartTimedTrigger;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _waitingForExit;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool triggerOnce;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	protected bool doOnce;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	private bool timedOnce;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool preventBlocking;

	[Token(Token = "0x170000A0")]
	public string ObjectName
	{
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x115C444", Offset = "0x115C444", VA = "0x115C444")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x115C44C", Offset = "0x115C44C", VA = "0x115C44C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x115C500", Offset = "0x115C500", VA = "0x115C500")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x115C690", Offset = "0x115C690", VA = "0x115C690")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x115C8C8", Offset = "0x115C8C8", VA = "0x115C8C8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x115CA74", Offset = "0x115CA74", VA = "0x115CA74")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x115CBB8", Offset = "0x115CBB8", VA = "0x115CBB8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA51ED4", Offset = "0xA51ED4")]
	public void DebugActivate()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x115C858", Offset = "0x115C858", VA = "0x115C858")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51F0C", Offset = "0xA51F0C")]
	private IEnumerator WaitAndInvoke()
	{
		return null;
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x114C474", Offset = "0x114C474", VA = "0x114C474")]
	public LocationEventTrigger()
	{
	}
}
[Token(Token = "0x20001CE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32C68", Offset = "0xA32C68")]
public class LocomotionTeleportTrigger : EventTrigger
{
	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _objectName;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _exactMatch;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _withDelay;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _delayAmount;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform m_TeleportPoint;

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x132CE48", Offset = "0x132CE48", VA = "0x132CE48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x132CEB8", Offset = "0x132CEB8", VA = "0x132CEB8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x132CFEC", Offset = "0x132CFEC", VA = "0x132CFEC")]
	public LocomotionTeleportTrigger()
	{
	}
}
[Token(Token = "0x20001CF")]
public class MultiCharacterList : MonoBehaviour
{
	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Character> characters;

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x133A9E0", Offset = "0x133A9E0", VA = "0x133A9E0")]
	public MultiCharacterList()
	{
	}
}
[Token(Token = "0x20001D0")]
public class NPCTrigger : MonoBehaviour
{
	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> walkToTransforms;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<bool> walkTransformClaims;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform lookTarget;

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x133ABE4", Offset = "0x133ABE4", VA = "0x133ABE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x133AC98", Offset = "0x133AC98", VA = "0x133AC98")]
	public NPCTrigger()
	{
	}
}
[Token(Token = "0x20001D1")]
public class OC3Ring : MonoBehaviour
{
	[Token(Token = "0x200066D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3610C", Offset = "0xA3610C")]
	private sealed class <DO_Fade>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OC3Ring <>4__this;

		[Token(Token = "0x40028D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool state;

		[Token(Token = "0x40028D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__2;

		[Token(Token = "0x170004D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0x133F518", Offset = "0x133F518", VA = "0x133F518", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C10")]
			[Address(RVA = "0x133F580", Offset = "0x133F580", VA = "0x133F580", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0x133F2D4", Offset = "0x133F2D4", VA = "0x133F2D4")]
		[DebuggerHidden]
		public <DO_Fade>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002C0C")]
		[Address(RVA = "0x133F368", Offset = "0x133F368", VA = "0x133F368", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0x133F36C", Offset = "0x133F36C", VA = "0x133F36C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0x133F520", Offset = "0x133F520", VA = "0x133F520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer ringMesh;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string shaderAttrName;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float attrStartValue;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float attrEndValue;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeLength;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool startOn;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock block;

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x133F02C", Offset = "0x133F02C", VA = "0x133F02C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x133F108", Offset = "0x133F108", VA = "0x133F108")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA51F70", Offset = "0xA51F70")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x133F1D0", Offset = "0x133F1D0", VA = "0x133F1D0")]
	public void Fade(bool state)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x133F250", Offset = "0x133F250", VA = "0x133F250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA51FA8", Offset = "0xA51FA8")]
	private IEnumerator DO_Fade(bool state)
	{
		return null;
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x133F300", Offset = "0x133F300", VA = "0x133F300")]
	public OC3Ring()
	{
	}
}
[Token(Token = "0x20001D2")]
public class RingConsecutiveDisplay : MonoBehaviour
{
	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<OC3Ring> rings;

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x10BDB70", Offset = "0x10BDB70", VA = "0x10BDB70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x10BDBE4", Offset = "0x10BDBE4", VA = "0x10BDBE4")]
	public void FadeInFirstRing()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x10BDC54", Offset = "0x10BDC54", VA = "0x10BDC54")]
	public void ResetRings()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x10BDD50", Offset = "0x10BDD50", VA = "0x10BDD50")]
	public void TriggerNext(OC3Ring ringTriggered)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x10BDE0C", Offset = "0x10BDE0C", VA = "0x10BDE0C")]
	public RingConsecutiveDisplay()
	{
	}
}
[Token(Token = "0x20001D3")]
public class ObjectAnim : MonoBehaviour
{
	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _anim;

	[Token(Token = "0x170000A1")]
	public Animator anim
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x12AB228", Offset = "0x12AB228", VA = "0x12AB228")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x12AB230", Offset = "0x12AB230", VA = "0x12AB230")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x12AB2C0", Offset = "0x12AB2C0", VA = "0x12AB2C0", Slot = "4")]
	public virtual void CallAnimationTrigger(string triggerName)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x12AB2DC", Offset = "0x12AB2DC", VA = "0x12AB2DC")]
	public ObjectAnim()
	{
	}
}
[Token(Token = "0x20001D4")]
public class ObservationObject : MonoBehaviour
{
	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GenericSceneManager _sceneManager;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected bool _grabTriggered;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	protected bool _touchTriggered;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<string> _conversations;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _playOnce;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _numTimesObserved;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _playRandom;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<ObservationObjectLink> _linkedObjects;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string _completionKey;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Grabbable _grab;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _wasHeld;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _touchCooldown;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool _playLocked;

	[Token(Token = "0x170000A2")]
	public bool grabTriggered
	{
		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x12AE624", Offset = "0x12AE624", VA = "0x12AE624")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A3")]
	public bool touchTriggered
	{
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x12AE62C", Offset = "0x12AE62C", VA = "0x12AE62C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x12AE634", Offset = "0x12AE634", VA = "0x12AE634")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x12AE69C", Offset = "0x12AE69C", VA = "0x12AE69C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x12AE738", Offset = "0x12AE738", VA = "0x12AE738")]
	public void AddLink(ObservationObjectLink ool)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x12AE7A0", Offset = "0x12AE7A0", VA = "0x12AE7A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x12AEA64", Offset = "0x12AEA64", VA = "0x12AEA64")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x12AE880", Offset = "0x12AE880", VA = "0x12AE880")]
	public void TriggerObservation()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x12AEB1C", Offset = "0x12AEB1C", VA = "0x12AEB1C")]
	private void PlayConversation(string convoID)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x12AEB5C", Offset = "0x12AEB5C", VA = "0x12AEB5C")]
	public ObservationObject()
	{
	}
}
[Token(Token = "0x20001D5")]
public class ObservationObjectLink : MonoBehaviour
{
	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObservationObject parentObject;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _grabTriggered;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _touchTriggered;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Grabbable _grab;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _wasHeld;

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x12AEB6C", Offset = "0x12AEB6C", VA = "0x12AEB6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x12AECA8", Offset = "0x12AECA8", VA = "0x12AECA8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x12AED04", Offset = "0x12AED04", VA = "0x12AED04")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x12AEDAC", Offset = "0x12AEDAC", VA = "0x12AEDAC")]
	public ObservationObjectLink()
	{
	}
}
[Token(Token = "0x20001D6")]
public class ObstacleCourseDart : MonoBehaviour
{
	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable _grab;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObstacleDartActivity activity;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool dartSuccess;

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x12BD2B0", Offset = "0x12BD2B0", VA = "0x12BD2B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x12BD308", Offset = "0x12BD308", VA = "0x12BD308")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x12BD334", Offset = "0x12BD334", VA = "0x12BD334")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x12BD454", Offset = "0x12BD454", VA = "0x12BD454")]
	public ObstacleCourseDart()
	{
	}
}
[Token(Token = "0x20001D7")]
public class PlayerLandingPadEvent : MonoBehaviour
{
	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource m_PlayerLandingSFX;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool wasTriggered;

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x113EB80", Offset = "0x113EB80", VA = "0x113EB80")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x113EC24", Offset = "0x113EC24", VA = "0x113EC24")]
	public PlayerLandingPadEvent()
	{
	}
}
[Token(Token = "0x20001D8")]
public class SamMaxPlayer : MonoBehaviour
{
	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string SamMaxPlayerID;

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x1182CA8", Offset = "0x1182CA8", VA = "0x1182CA8")]
	public SamMaxPlayer()
	{
	}
}
[Token(Token = "0x20001D9")]
public class SamMaxPose : MonoBehaviour
{
	[Token(Token = "0x200066E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3611C", Offset = "0xA3611C")]
	private sealed class <WaitAndTrigger>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SamMaxPose <>4__this;

		[Token(Token = "0x40028D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool shouldResetAnims;

		[Token(Token = "0x170004D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C14")]
			[Address(RVA = "0x118351C", Offset = "0x118351C", VA = "0x118351C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C16")]
			[Address(RVA = "0x1183584", Offset = "0x1183584", VA = "0x1183584", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0x1183148", Offset = "0x1183148", VA = "0x1183148")]
		[DebuggerHidden]
		public <WaitAndTrigger>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002C12")]
		[Address(RVA = "0x1183314", Offset = "0x1183314", VA = "0x1183314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0x1183318", Offset = "0x1183318", VA = "0x1183318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0x1183524", Offset = "0x1183524", VA = "0x1183524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3D308", Offset = "0xA3D308")]
	public bool MaxIsValid;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA3D340", Offset = "0xA3D340")]
	public bool SamIsValid;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string AnimTrigger;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasSamMaxAttached;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_SamMaxObj;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesLookAt;

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x1182D00", Offset = "0x1182D00", VA = "0x1182D00")]
	public void AttachModel(GameObject sammaxModel, bool shouldResetAnims = true)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x1183014", Offset = "0x1183014", VA = "0x1183014")]
	public void ClearAnimationVariables(Animator _anim)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x1182F90", Offset = "0x1182F90", VA = "0x1182F90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5200C", Offset = "0xA5200C")]
	private IEnumerator WaitAndTrigger(bool shouldResetAnims = true)
	{
		return null;
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x1183174", Offset = "0x1183174", VA = "0x1183174")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x11832B4", Offset = "0x11832B4", VA = "0x11832B4")]
	public SamMaxPose()
	{
	}
}
[Token(Token = "0x20001DA")]
public class SamMaxTimeline : MonoBehaviour
{
	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string SamMaxPoseID;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayableDirector m_Timeline;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_AttachPoint;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isAttached;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isPlaying;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform originalParent;

	[Token(Token = "0x170000A4")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x118358C", Offset = "0x118358C", VA = "0x118358C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x1183594", Offset = "0x1183594", VA = "0x1183594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x11836C8", Offset = "0x11836C8", VA = "0x11836C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x1183798", Offset = "0x1183798", VA = "0x1183798")]
	public void Unattach()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x1183840", Offset = "0x1183840", VA = "0x1183840")]
	public void Attach()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x118384C", Offset = "0x118384C", VA = "0x118384C")]
	public PlayableDirector Play()
	{
		return null;
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x11838EC", Offset = "0x11838EC", VA = "0x11838EC")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x1183998", Offset = "0x1183998", VA = "0x1183998")]
	public SamMaxTimeline()
	{
	}
}
[Token(Token = "0x20001DB")]
public class ScrollingFloor : MonoBehaviour
{
	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int materialIndex;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textureName;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x11868C4", Offset = "0x11868C4", VA = "0x11868C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x1186A10", Offset = "0x1186A10", VA = "0x1186A10")]
	public ScrollingFloor()
	{
	}
}
[Token(Token = "0x20001DC")]
public class SwingingObstacleEvent : MonoBehaviour
{
	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource[] m_AudioToPlay;

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x10E16B4", Offset = "0x10E16B4", VA = "0x10E16B4")]
	public void PlayRandomCreak()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x10E172C", Offset = "0x10E172C", VA = "0x10E172C")]
	public SwingingObstacleEvent()
	{
	}
}
[Token(Token = "0x20001DD")]
public class ObstaclePlayerDamage : MonoBehaviour
{
	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_Damage;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<string> _collideObjects;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource[] _impactSounds;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool shouldDamage;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GenericSceneManager m_SceneManager;

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x1118DBC", Offset = "0x1118DBC", VA = "0x1118DBC")]
	public void TogglePlayerDamage(bool _shouldDamage)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x1118DC8", Offset = "0x1118DC8", VA = "0x1118DC8")]
	public void PlayImpactSound()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x1118E40", Offset = "0x1118E40", VA = "0x1118E40")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x11191FC", Offset = "0x11191FC", VA = "0x11191FC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x11195B8", Offset = "0x11195B8", VA = "0x11195B8")]
	public ObstaclePlayerDamage()
	{
	}
}
[Token(Token = "0x20001DE")]
public class OculusQuestChecker : MonoBehaviour
{
	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool shouldDisableQuest1;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool shouldDisableQuest2;

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x112179C", Offset = "0x112179C", VA = "0x112179C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x1121864", Offset = "0x1121864", VA = "0x1121864")]
	public OculusQuestChecker()
	{
	}
}
[Token(Token = "0x20001DF")]
public class ApproachTrigger : MonoBehaviour
{
	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParkSceneManager _sceneManager;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 _characterPlacement;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 _characterRotation;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string conversationName;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string conversationNameALT;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool ParkApproachTrigger;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool Act1Restricted;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool Act2Restricted;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool Act3Restricted;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool triggered;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool hasAlternateDialogue;

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x1297E10", Offset = "0x1297E10", VA = "0x1297E10")]
	public void TriggerConversation()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x1298024", Offset = "0x1298024", VA = "0x1298024")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x1298284", Offset = "0x1298284", VA = "0x1298284")]
	public void DeactiveTrigger()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x1298290", Offset = "0x1298290", VA = "0x1298290")]
	public ApproachTrigger()
	{
	}
}
[Token(Token = "0x20001E0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32CCC", Offset = "0xA32CCC")]
public class PickUpEventTrigger : EventTrigger
{
	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Grabbable _grab;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _triggered;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _repeatable;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool _wasHeld;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	[SerializeField]
	private bool _releaseEventsActive;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent releaseTrigger;

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x1134CB0", Offset = "0x1134CB0", VA = "0x1134CB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x1134D08", Offset = "0x1134D08", VA = "0x1134D08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x1134D90", Offset = "0x1134D90", VA = "0x1134D90")]
	public PickUpEventTrigger()
	{
	}
}
[Token(Token = "0x20001E1")]
public class PlayerAreaTrigger : MonoBehaviour
{
	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoxCollider m_Area;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterController _character;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isPlayerInside;

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x113D300", Offset = "0x113D300", VA = "0x113D300")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x113D3A8", Offset = "0x113D3A8", VA = "0x113D3A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x113D438", Offset = "0x113D438", VA = "0x113D438")]
	public PlayerAreaTrigger()
	{
	}
}
[Token(Token = "0x20001E2")]
public class PlayerEventTrigger : MonoBehaviour
{
	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask validLayers;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string m_ObjectName;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_isPlayerIn;

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x113DEBC", Offset = "0x113DEBC", VA = "0x113DEBC")]
	public bool IsPlayerIn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x113DEC4", Offset = "0x113DEC4", VA = "0x113DEC4")]
	public void TriggeredEvent()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x113DECC", Offset = "0x113DECC", VA = "0x113DECC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x113DFDC", Offset = "0x113DFDC", VA = "0x113DFDC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x113E0E8", Offset = "0x113E0E8", VA = "0x113E0E8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x113E1F8", Offset = "0x113E1F8", VA = "0x113E1F8")]
	public PlayerEventTrigger()
	{
	}
}
[Token(Token = "0x20001E3")]
public class ProjectileHitReaction : MonoBehaviour
{
	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _requiresHeld;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Grabbable _grab;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent _triggerAction;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _inflictDamage;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _causeScreenFlash;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Color _screenFlashColor;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _hitDelay;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<AudioSource> _hitSFX;

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x10B67E4", Offset = "0x10B67E4", VA = "0x10B67E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x10B6898", Offset = "0x10B6898", VA = "0x10B6898")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x10B68D8", Offset = "0x10B68D8", VA = "0x10B68D8")]
	public void TakeHit(int damage = 0)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x10B6A64", Offset = "0x10B6A64", VA = "0x10B6A64")]
	public ProjectileHitReaction()
	{
	}
}
[Token(Token = "0x20001E4")]
public class RatHoleAnimTrigger : MonoBehaviour
{
	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ConversationTrigger m_RatConversation;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator m_RatAnim;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator m_RatDoorAnim;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_RatAudio;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool debugTrigger;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fDelay;

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x10B99FC", Offset = "0x10B99FC", VA = "0x10B99FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x10B9A54", Offset = "0x10B9A54", VA = "0x10B9A54")]
	public void TriggerConversation()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x10B9B44", Offset = "0x10B9B44", VA = "0x10B9B44")]
	public RatHoleAnimTrigger()
	{
	}
}
[Token(Token = "0x20001E5")]
public class RespawnInventorySlot : MonoBehaviour
{
	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _inUse;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _t;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _inventoryObject;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _objectPhysics;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabbable _objectGrab;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _resetDelay;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _resetTimer;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool _waitForStill;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float _stillnessThreshold;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _wasHeld;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _waitingForReset;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x10BCE30", Offset = "0x10BCE30", VA = "0x10BCE30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x10BCEC4", Offset = "0x10BCEC4", VA = "0x10BCEC4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x10BD0E8", Offset = "0x10BD0E8", VA = "0x10BD0E8")]
	public void EnableInventorySlot(bool enable)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x10BCFB4", Offset = "0x10BCFB4", VA = "0x10BCFB4")]
	private void ResetInventoryObject()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x10BD0F4", Offset = "0x10BD0F4", VA = "0x10BD0F4")]
	public RespawnInventorySlot()
	{
	}
}
[Token(Token = "0x20001E6")]
public class RespawnItem : MonoBehaviour
{
	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _respawnTime;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _startPos;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _startRot;

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x10BD118", Offset = "0x10BD118", VA = "0x10BD118")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x10BD174", Offset = "0x10BD174", VA = "0x10BD174")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x10BD210", Offset = "0x10BD210", VA = "0x10BD210")]
	private void Respawn()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x10BD268", Offset = "0x10BD268", VA = "0x10BD268")]
	public void ManualRespawn()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x10BD2C0", Offset = "0x10BD2C0", VA = "0x10BD2C0")]
	public RespawnItem()
	{
	}
}
[Token(Token = "0x20001E7")]
public class RocketPrediction : MonoBehaviour
{
	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RocketLauncherAmmo _rocket;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PrologueMonster _monster;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LayerMask _hitLayers;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _predictDistance;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string[] _validTargets;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _hasTriggeredResponse;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _responseResetDelay;

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x10C11BC", Offset = "0x10C11BC", VA = "0x10C11BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x10C12B8", Offset = "0x10C12B8", VA = "0x10C12B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x10C14F4", Offset = "0x10C14F4", VA = "0x10C14F4")]
	public RocketPrediction()
	{
	}
}
[Token(Token = "0x20001E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32D30", Offset = "0xA32D30")]
public class StateObject : MonoBehaviour, iStateObject
{
	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool loadingFromData;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D588", Offset = "0xA3D588")]
	private bool <registered>k__BackingField;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D598", Offset = "0xA3D598")]
	private string <loadDataString>k__BackingField;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D5A8", Offset = "0xA3D5A8")]
	private ObjectStateData <objData>k__BackingField;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3D5B8", Offset = "0xA3D5B8")]
	private List<Rigidbody> <objRigidbody>k__BackingField;

	[Token(Token = "0x170000A5")]
	public bool registered
	{
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x11B7E14", Offset = "0x11B7E14", VA = "0x11B7E14", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52070", Offset = "0xA52070")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x11B7E1C", Offset = "0x11B7E1C", VA = "0x11B7E1C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52080", Offset = "0xA52080")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public string loadDataString
	{
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x11B7E28", Offset = "0x11B7E28", VA = "0x11B7E28", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52090", Offset = "0xA52090")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x11B7E30", Offset = "0x11B7E30", VA = "0x11B7E30", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA520A0", Offset = "0xA520A0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public ObjectStateData objData
	{
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x11B7E38", Offset = "0x11B7E38", VA = "0x11B7E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA520B0", Offset = "0xA520B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x11B7E40", Offset = "0x11B7E40", VA = "0x11B7E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA520C0", Offset = "0xA520C0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public List<Rigidbody> objRigidbody
	{
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x11B7E48", Offset = "0x11B7E48", VA = "0x11B7E48", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA520D0", Offset = "0xA520D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x11B7E50", Offset = "0x11B7E50", VA = "0x11B7E50", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA520E0", Offset = "0xA520E0")]
		set
		{
		}
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x11B7E58", Offset = "0x11B7E58", VA = "0x11B7E58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x11B7F18", Offset = "0x11B7F18", VA = "0x11B7F18", Slot = "10")]
	public void InitDefaults()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x11B7F38", Offset = "0x11B7F38", VA = "0x11B7F38", Slot = "11")]
	public void InitRigidbody()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x11B8094", Offset = "0x11B8094", VA = "0x11B8094", Slot = "14")]
	public void ResetRigidbody()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x11B81DC", Offset = "0x11B81DC", VA = "0x11B81DC", Slot = "13")]
	public void ResetObject()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x11B81FC", Offset = "0x11B81FC", VA = "0x11B81FC", Slot = "12")]
	public void RestoreObject()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x11B8230", Offset = "0x11B8230", VA = "0x11B8230", Slot = "15")]
	public void RegisterObject()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x11B82E0", Offset = "0x11B82E0", VA = "0x11B82E0", Slot = "16")]
	public void UnregisterObject()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x11B838C", Offset = "0x11B838C", VA = "0x11B838C", Slot = "17")]
	public void UpdateObjectData()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x11B83AC", Offset = "0x11B83AC", VA = "0x11B83AC", Slot = "18")]
	public string GatherStateData()
	{
		return null;
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x11B7EF0", Offset = "0x11B7EF0", VA = "0x11B7EF0", Slot = "19")]
	public void LoadObjectData()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x11B8498", Offset = "0x11B8498", VA = "0x11B8498")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x11B8548", Offset = "0x11B8548", VA = "0x11B8548")]
	public StateObject()
	{
	}
}
[Token(Token = "0x20001E9")]
public class ObiRopeHelper : MonoBehaviour
{
	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObiRope m_Rope;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 updatePos;

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x12AB060", Offset = "0x12AB060", VA = "0x12AB060")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x12AB064", Offset = "0x12AB064", VA = "0x12AB064")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x12AB220", Offset = "0x12AB220", VA = "0x12AB220")]
	public ObiRopeHelper()
	{
	}
}
[Token(Token = "0x20001EA")]
public class OperatingCrane : MonoBehaviour
{
	[Token(Token = "0x200066F")]
	public enum MaxCraneBehavior
	{
		[Token(Token = "0x40028D8")]
		None,
		[Token(Token = "0x40028D9")]
		DroppingPlayerRoof,
		[Token(Token = "0x40028DA")]
		PickingPlayerUpRoof,
		[Token(Token = "0x40028DB")]
		AttemptingTower,
		[Token(Token = "0x40028DC")]
		DroppingPlayerGround
	}

	[Token(Token = "0x2000670")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3612C", Offset = "0xA3612C")]
	private sealed class <WaitForTowerGrab>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OperatingCrane <>4__this;

		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Collider> <collidersToDisable>5__2;

		[Token(Token = "0x40028E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GrabbableExt <grab>5__3;

		[Token(Token = "0x40028E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OperatingCraneGrab <crane>5__4;

		[Token(Token = "0x40028E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OperatingCraneDillsTower <tower>5__5;

		[Token(Token = "0x40028E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <hookGrabbed>5__6;

		[Token(Token = "0x170004D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0x124B078", Offset = "0x124B078", VA = "0x124B078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0x124B0E0", Offset = "0x124B0E0", VA = "0x124B0E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C17")]
		[Address(RVA = "0x12475F4", Offset = "0x12475F4", VA = "0x12475F4")]
		[DebuggerHidden]
		public <WaitForTowerGrab>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6002C18")]
		[Address(RVA = "0x124ADAC", Offset = "0x124ADAC", VA = "0x124ADAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C19")]
		[Address(RVA = "0x124ADB0", Offset = "0x124ADB0", VA = "0x124ADB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C1B")]
		[Address(RVA = "0x124B080", Offset = "0x124B080", VA = "0x124B080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000671")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3613C", Offset = "0xA3613C")]
	private sealed class <WaitAndCraneGrab>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OperatingCrane <>4__this;

		[Token(Token = "0x170004D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C20")]
			[Address(RVA = "0x1249AB4", Offset = "0x1249AB4", VA = "0x1249AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C22")]
			[Address(RVA = "0x1249B1C", Offset = "0x1249B1C", VA = "0x1249B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C1D")]
		[Address(RVA = "0x12493A4", Offset = "0x12493A4", VA = "0x12493A4")]
		[DebuggerHidden]
		public <WaitAndCraneGrab>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6002C1E")]
		[Address(RVA = "0x124966C", Offset = "0x124966C", VA = "0x124966C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C1F")]
		[Address(RVA = "0x1249670", Offset = "0x1249670", VA = "0x1249670", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0x1249ABC", Offset = "0x1249ABC", VA = "0x1249ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000672")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3614C", Offset = "0xA3614C")]
	private sealed class <WaitAndGrabDillsTower>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OperatingCrane <>4__this;

		[Token(Token = "0x170004DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C26")]
			[Address(RVA = "0x124AD3C", Offset = "0x124AD3C", VA = "0x124AD3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C28")]
			[Address(RVA = "0x124ADA4", Offset = "0x124ADA4", VA = "0x124ADA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C23")]
		[Address(RVA = "0x12495F0", Offset = "0x12495F0", VA = "0x12495F0")]
		[DebuggerHidden]
		public <WaitAndGrabDillsTower>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x6002C24")]
		[Address(RVA = "0x1249B24", Offset = "0x1249B24", VA = "0x1249B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C25")]
		[Address(RVA = "0x1249B28", Offset = "0x1249B28", VA = "0x1249B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C27")]
		[Address(RVA = "0x124AD44", Offset = "0x124AD44", VA = "0x124AD44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_CranePivotJoint;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_CraneBoomEnd;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform m_CraneJoint;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Grabbable m_Joystick;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private JoystickControl m_JoystickControl;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Collider m_CraneBoundBox;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_ReleaseDumpster;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform m_PlayerJoint;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private StreetEndingSceneManager m_StreetEndingManager;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private OperatingCraneHookGrab m_HookCraneGrab;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform m_CraneHelper;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform m_CraneOrigin;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject m_TipTowerTrigger;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private BNGPlayerControllerExt _Player;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OperatingCraneGrab _craneGrab;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioSource m_CraneLowerStart;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioSource m_CraneLowerLoop;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioSource m_CraneLowerStop;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioSource m_CraneRaiseStart;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioSource m_CraneRaiseLoop;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AudioSource m_CraneRaiseStop;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private AudioSource m_CraneRotateStart;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private AudioSource m_CraneRotateLoop;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private AudioSource m_CraneRotateEnd;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private AudioSource m_CraneMoveBoomStart;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private AudioSource m_CraneMoveBoomLoop;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private AudioSource m_CraneMoveBoomEnd;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private AudioSource m_CraneMalfunctionSFX;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject m_ClosedHatch;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject m_OpenHatch;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject[] m_Hook;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject[] m_HookGrabDisable;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private CharacterController _character;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float fCraneRotSpeed;

	[Token(Token = "0x4000C5C")]
	private const float fCraneDropSpeed = 4.5f;

	[Token(Token = "0x4000C5D")]
	private const float fCraneMoveSpeed = 2f;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Quaternion savedRotation;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 savedPosition;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Quaternion savedLocalRotation;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 savedLocalPosition;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float fAngle;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float fPosition;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float fCraneOffset;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool isInCrane;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool isGrabbing;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	private bool hasDumpster;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	private bool hasDillsTower;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool doOnce;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	private bool craneUpDialogue;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	private bool dumpReady;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
	private bool isDumping;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject m_Dumpster;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool thirdDumpsterDialogue;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool MaxOperateDoOnce;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	private bool thirdDumpsterSamDialogue;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
	private bool reachedGoal;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private bool maxRotating;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
	private bool boomUp;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17E")]
	public bool canGrabTower;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17F")]
	public bool canTipTower;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool isRotatingCrane;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float rotatingCraneCheck;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool maxOperatingCrane;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public MaxCraneBehavior m_CurrState;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool didReachBugFix;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	private bool didRotate;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
	private bool didMoveBoom;

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x1245248", Offset = "0x1245248", VA = "0x1245248")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x124532C", Offset = "0x124532C", VA = "0x124532C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x1246FD8", Offset = "0x1246FD8", VA = "0x1246FD8")]
	public void PlayerEnteredCab()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x124701C", Offset = "0x124701C", VA = "0x124701C")]
	public void ResetSound()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x12470AC", Offset = "0x12470AC", VA = "0x12470AC")]
	public void ResetMaxOperating()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x1245754", Offset = "0x1245754", VA = "0x1245754")]
	private void MoveBoomPosition()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x124588C", Offset = "0x124588C", VA = "0x124588C")]
	private void MaxAttemptingPickupTower()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x12456FC", Offset = "0x12456FC", VA = "0x12456FC")]
	private void AllowButtonPress()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x12473FC", Offset = "0x12473FC", VA = "0x12473FC")]
	private void DenyButtonPress()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x1247414", Offset = "0x1247414", VA = "0x1247414")]
	private void EnableGrabbableHook()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x1247584", Offset = "0x1247584", VA = "0x1247584")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA520F0", Offset = "0xA520F0")]
	private IEnumerator WaitForTowerGrab()
	{
		return null;
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x1247620", Offset = "0x1247620", VA = "0x1247620")]
	private void DropCraneOnTower()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x1246948", Offset = "0x1246948", VA = "0x1246948")]
	private void MaxDroppingPlayerGround()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x12461CC", Offset = "0x12461CC", VA = "0x12461CC")]
	private void MaxPickingPlayerRoof()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x1245A30", Offset = "0x1245A30", VA = "0x1245A30")]
	private void MaxDroppingPlayerRoof()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x1247C60", Offset = "0x1247C60", VA = "0x1247C60")]
	public void ToggleHookGrab(bool toggle)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1247CFC", Offset = "0x1247CFC", VA = "0x1247CFC")]
	public bool HookBeingGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x1247D24", Offset = "0x1247D24", VA = "0x1247D24")]
	public void AttemptPickupTower()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x124811C", Offset = "0x124811C", VA = "0x124811C")]
	private void ForceDropPlayer()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x124813C", Offset = "0x124813C", VA = "0x124813C")]
	public void TriggerMaxOperating()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x1248550", Offset = "0x1248550", VA = "0x1248550")]
	public void OnBoomUp()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x1248594", Offset = "0x1248594", VA = "0x1248594")]
	public void ManualDumpsterClimbTriggered()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x12485B0", Offset = "0x12485B0", VA = "0x12485B0")]
	public void ManualDumpsterRelease()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x12486E4", Offset = "0x12486E4", VA = "0x12486E4")]
	public void OnCraneButtonDown()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x1249238", Offset = "0x1249238", VA = "0x1249238")]
	private void ResetDumping()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x1249268", Offset = "0x1249268", VA = "0x1249268")]
	public void StartCraneGrab()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x124932C", Offset = "0x124932C", VA = "0x124932C")]
	public void EndCraneGrab()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x12492BC", Offset = "0x12492BC", VA = "0x12492BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52154", Offset = "0xA52154")]
	private IEnumerator WaitAndCraneGrab()
	{
		return null;
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x12493D0", Offset = "0x12493D0", VA = "0x12493D0")]
	public void OnJoystickChange(float leverX, float leverY)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x12470C0", Offset = "0x12470C0", VA = "0x12470C0")]
	public void OnJoystickChange(float leverX, float leverY, bool isMax)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x12493D8", Offset = "0x12493D8", VA = "0x12493D8")]
	public void GrabbedDumpster(GameObject dumpster, Vector3 contactPos)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x124954C", Offset = "0x124954C", VA = "0x124954C")]
	public void GrabbedTower(OperatingCraneGrab operatingCraneGrab, Transform craneHook)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x1249580", Offset = "0x1249580", VA = "0x1249580")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA521B8", Offset = "0xA521B8")]
	private IEnumerator WaitAndGrabDillsTower(OperatingCraneGrab operatingCraneGrab, Transform craneHook)
	{
		return null;
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x124961C", Offset = "0x124961C", VA = "0x124961C")]
	private void StoppedCrane()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x1249620", Offset = "0x1249620", VA = "0x1249620")]
	public void PickedUpPlayer()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x1245670", Offset = "0x1245670", VA = "0x1245670")]
	public void DeattachPlayer()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x12456B4", Offset = "0x12456B4", VA = "0x12456B4")]
	public void AttachPlayer()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x1249650", Offset = "0x1249650", VA = "0x1249650")]
	public OperatingCrane()
	{
	}
}
[Token(Token = "0x20001EB")]
public class OperatingCraneDillsTower : MonoBehaviour
{
	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Transform m_CraneJoint;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource m_HammerImpact;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StreetEndingSceneManager streetManager;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int hitTowers;

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x124B0E8", Offset = "0x124B0E8", VA = "0x124B0E8")]
	public void HitTarget(Vector3 force)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x124B224", Offset = "0x124B224", VA = "0x124B224")]
	public OperatingCraneDillsTower()
	{
	}
}
[Token(Token = "0x20001EC")]
public class OperatingCraneGrab : MonoBehaviour
{
	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OperatingCrane _crane;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasDumpster;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool doOnce;

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x124B22C", Offset = "0x124B22C", VA = "0x124B22C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x124B2A0", Offset = "0x124B2A0", VA = "0x124B2A0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x1249260", Offset = "0x1249260", VA = "0x1249260")]
	public void ResetCraneGrab()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x124B460", Offset = "0x124B460", VA = "0x124B460")]
	public void ResetTowerGrab()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x124B468", Offset = "0x124B468", VA = "0x124B468")]
	public OperatingCraneGrab()
	{
	}
}
[Token(Token = "0x20001ED")]
public class OperatingCraneHammerTarget : MonoBehaviour
{
	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OperatingCraneDillsTower m_DillsTower;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Grabbable m_Hammer;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] m_Bolts;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool doOnce;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x124B470", Offset = "0x124B470", VA = "0x124B470")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x124B648", Offset = "0x124B648", VA = "0x124B648")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA5221C", Offset = "0xA5221C")]
	public void ReleaseBolts()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x124B7C0", Offset = "0x124B7C0", VA = "0x124B7C0")]
	public void CleanUpBolts()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x124B878", Offset = "0x124B878", VA = "0x124B878")]
	public OperatingCraneHammerTarget()
	{
	}
}
[Token(Token = "0x20001EE")]
public class OperatingCraneHookGrab : MonoBehaviour
{
	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ClimbableExt m_HookGrabPoint;

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x124B880", Offset = "0x124B880", VA = "0x124B880")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x1247C44", Offset = "0x1247C44", VA = "0x1247C44")]
	public bool hasHookGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x1247CB0", Offset = "0x1247CB0", VA = "0x1247CB0")]
	public void ReleaseGrabber()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x124B8A8", Offset = "0x124B8A8", VA = "0x124B8A8")]
	public OperatingCraneHookGrab()
	{
	}
}
[Token(Token = "0x20001EF")]
public class OperatingCraneObstacle : MonoBehaviour
{
	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BNGPlayerControllerExt m_Player;

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x124B8B0", Offset = "0x124B8B0", VA = "0x124B8B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x124B914", Offset = "0x124B914", VA = "0x124B914")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x124B95C", Offset = "0x124B95C", VA = "0x124B95C")]
	public OperatingCraneObstacle()
	{
	}
}
[Token(Token = "0x20001F0")]
public class OperatingSafePuzzle : MonoBehaviour
{
	[Token(Token = "0x2000673")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3615C", Offset = "0xA3615C")]
	private sealed class <CheckSafeSolution>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OperatingSafePuzzle <>4__this;

		[Token(Token = "0x170004DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0x124CA3C", Offset = "0x124CA3C", VA = "0x124CA3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C2E")]
			[Address(RVA = "0x124CAA4", Offset = "0x124CAA4", VA = "0x124CAA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0x124C378", Offset = "0x124C378", VA = "0x124C378")]
		[DebuggerHidden]
		public <CheckSafeSolution>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002C2A")]
		[Address(RVA = "0x124C7A4", Offset = "0x124C7A4", VA = "0x124C7A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C2B")]
		[Address(RVA = "0x124C7A8", Offset = "0x124C7A8", VA = "0x124C7A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0x124CA44", Offset = "0x124CA44", VA = "0x124CA44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _hasSolved;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _correctHour;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _correctHourAngle;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _correctMinute;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _correctMinuteAngle;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator _cuckooClock;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _cuckooHourHand;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _cuckooMinuteHand;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _handVariance;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> _safeCombination;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int _combinationLength;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<int> _currentSafeInput;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshPro _safeDisplay;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _numberPad;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SafeNumberKey[] _numberPadKeys;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GrabbableExt _safeHandle;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _safeSolved;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Animator _safeAnim;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject _safeDoor;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool isForceFieldDown;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Animator _pirateWheelAnim;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioSource[] m_WheelMelody;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GrabbableExt[] m_WheelToyGrabbables;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private AudioSource m_WheelSFX;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private AudioSource m_CuckooSFX;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private AudioSource m_SafeSFX;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<int> _wheelCombination;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<int> _currentWheelInput;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Animator _HatchAnim;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _WheelSolved;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool doWheelHintOnce;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private StreetEndingSceneManager m_EndingSceneManager;

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x124B964", Offset = "0x124B964", VA = "0x124B964")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x124BD78", Offset = "0x124BD78", VA = "0x124BD78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x124BFC4", Offset = "0x124BFC4", VA = "0x124BFC4")]
	public void ForceFieldDownEvent()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x124BA34", Offset = "0x124BA34", VA = "0x124BA34")]
	private void GenerateClockCode()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x124BDF8", Offset = "0x124BDF8", VA = "0x124BDF8")]
	public void CheckForClockSolution()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x124C058", Offset = "0x124C058", VA = "0x124C058")]
	private bool IsHandCorrect(float rotation, float targetRotation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x124BAA8", Offset = "0x124BAA8", VA = "0x124BAA8")]
	private void GenerateSafeCombination()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x124BC98", Offset = "0x124BC98", VA = "0x124BC98")]
	private void GeneratePirateWheelCombination()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x124C0CC", Offset = "0x124C0CC", VA = "0x124C0CC")]
	private void SafeKeyPressed(int keyNumber)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x124C22C", Offset = "0x124C22C", VA = "0x124C22C")]
	private void PlaySafeConversation()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x124C2E4", Offset = "0x124C2E4", VA = "0x124C2E4")]
	private void PlayPirateWheelConversation()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x124C1BC", Offset = "0x124C1BC", VA = "0x124C1BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52254", Offset = "0xA52254")]
	private IEnumerator CheckSafeSolution()
	{
		return null;
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x124C3A4", Offset = "0x124C3A4", VA = "0x124C3A4")]
	private void ChangeSafeDoorCollisionLayer()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x124C478", Offset = "0x124C478", VA = "0x124C478")]
	public void SqueezedToy(int toy)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x124C604", Offset = "0x124C604", VA = "0x124C604")]
	private void CheckForWheelSolution()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x124C78C", Offset = "0x124C78C", VA = "0x124C78C")]
	public OperatingSafePuzzle()
	{
	}
}
[Token(Token = "0x20001F1")]
public class OperatingTowerSpeaker : MonoBehaviour
{
	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource m_AquabearMusic;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StreetEndingSceneManager m_StreetEndingManager;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator m_SpeakerWire;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_RecordPlayerAnchor;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_SpeakerWireTrigger;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RecordPlayer m_RecordPlayer;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GrabbableExt m_RecordObj;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasPlayer;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool doOnceConnect;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool doOncePlaying;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool freezeRecordPlayerOnce;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool speakerWireConnected;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool playMusicOnce;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fPlayTime;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool playingBGMusic;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool speakerTowerDoorOpenedOnce;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool didMaxChangeMusic;

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x124CAAC", Offset = "0x124CAAC", VA = "0x124CAAC")]
	public void HasRecordPlayer(bool toggle)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x124CBB4", Offset = "0x124CBB4", VA = "0x124CBB4")]
	public void SpeakerTowerDoorOpened()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x124CC64", Offset = "0x124CC64", VA = "0x124CC64")]
	public void MaxSwitchedMusic()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x124CCAC", Offset = "0x124CCAC", VA = "0x124CCAC")]
	public void GrabbedSpeakerWire()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x124CD28", Offset = "0x124CD28", VA = "0x124CD28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x124D164", Offset = "0x124D164", VA = "0x124D164")]
	public OperatingTowerSpeaker()
	{
	}
}
[Token(Token = "0x20001F2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32D94", Offset = "0xA32D94")]
public class PlayerAvoidance : MonoBehaviour
{
	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerAreaTrigger m_Player;

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x113D440", Offset = "0x113D440", VA = "0x113D440")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x113D498", Offset = "0x113D498", VA = "0x113D498")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x113D690", Offset = "0x113D690", VA = "0x113D690")]
	public PlayerAvoidance()
	{
	}
}
[Token(Token = "0x20001F3")]
public class PortalMonsterBehavior : MonoBehaviour
{
	[Token(Token = "0x2000674")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3616C", Offset = "0xA3616C")]
	private sealed class <MonsterBehavior>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PortalMonsterBehavior <>4__this;

		[Token(Token = "0x170004DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C32")]
			[Address(RVA = "0x10B3F84", Offset = "0x10B3F84", VA = "0x10B3F84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C34")]
			[Address(RVA = "0x10B3FEC", Offset = "0x10B3FEC", VA = "0x10B3FEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0x10B3C40", Offset = "0x10B3C40", VA = "0x10B3C40")]
		[DebuggerHidden]
		public <MonsterBehavior>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002C30")]
		[Address(RVA = "0x10B3EA4", Offset = "0x10B3EA4", VA = "0x10B3EA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0x10B3EA8", Offset = "0x10B3EA8", VA = "0x10B3EA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0x10B3F8C", Offset = "0x10B3F8C", VA = "0x10B3F8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_ProjectileStart;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_ProjectilePrefab;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isActive;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine m_MonsterBehavior;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_Player;

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x10B3BD0", Offset = "0x10B3BD0", VA = "0x10B3BD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA522B8", Offset = "0xA522B8")]
	private IEnumerator MonsterBehavior()
	{
		return null;
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x10B3C6C", Offset = "0x10B3C6C", VA = "0x10B3C6C")]
	private void ShootProjectile()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x10B3E28", Offset = "0x10B3E28", VA = "0x10B3E28")]
	public void ToggleBehavior(bool toggle)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x10B3E9C", Offset = "0x10B3E9C", VA = "0x10B3E9C")]
	public PortalMonsterBehavior()
	{
	}
}
[Token(Token = "0x20001F4")]
public class PortalShootingManager : MonoBehaviour
{
	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TableCollection m_MaxHand;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem m_WeaponSpawnVFX;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_Weapon;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_WeaponAmmoContainer;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] m_WeaponAmmo;

	[Token(Token = "0x4000CC6")]
	private const int numTargets = 17;

	[Token(Token = "0x4000CC7")]
	private const int dialogueTarget = 4;

	[Token(Token = "0x4000CC8")]
	private const int hatchTargets = 4;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int currNumhatchTargets;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int currNumTargets;

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x10B3FF4", Offset = "0x10B3FF4", VA = "0x10B3FF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x10B4378", Offset = "0x10B4378", VA = "0x10B4378")]
	public void ResetWeapon()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x10B4394", Offset = "0x10B4394", VA = "0x10B4394")]
	public void ResetAmmo()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x10B43B0", Offset = "0x10B43B0", VA = "0x10B43B0")]
	public void HitPortalHatchTargets()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x10B4478", Offset = "0x10B4478", VA = "0x10B4478")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x10B4668", Offset = "0x10B4668", VA = "0x10B4668")]
	public void HitPortalTarget()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x10B4758", Offset = "0x10B4758", VA = "0x10B4758")]
	public PortalShootingManager()
	{
	}
}
[Token(Token = "0x20001F5")]
public class RecordPlayerRespawner : MonoBehaviour
{
	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GrabbableExt m_RecordPlayer;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_ResetTransform;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasBeenPickedUpOnce;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float fTimer;

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x10BA6F0", Offset = "0x10BA6F0", VA = "0x10BA6F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x10BA758", Offset = "0x10BA758", VA = "0x10BA758")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x10BA8C8", Offset = "0x10BA8C8", VA = "0x10BA8C8")]
	public RecordPlayerRespawner()
	{
	}
}
[Token(Token = "0x20001F6")]
public class ScrumposDumpster : MonoBehaviour
{
	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StreetEndingSceneManager m_StreetEndingManager;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasHit;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool doOnce;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 originalPos;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion originalRot;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource m_CraneHook;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PlayerAreaTrigger m_Player;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasBeenGrabbed;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isPlayerOnTop;

	[Token(Token = "0x170000A9")]
	public bool HasBeenGrabbed
	{
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x1186AC0", Offset = "0x1186AC0", VA = "0x1186AC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x1186AC8", Offset = "0x1186AC8", VA = "0x1186AC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x1186B80", Offset = "0x1186B80", VA = "0x1186B80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x1186D48", Offset = "0x1186D48", VA = "0x1186D48")]
	public void ResetScrumpos()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x1186E30", Offset = "0x1186E30", VA = "0x1186E30")]
	public void GrabbedDumpster()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x1186E64", Offset = "0x1186E64", VA = "0x1186E64")]
	public void CleanUpDumpster()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x1186E8C", Offset = "0x1186E8C", VA = "0x1186E8C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x1186F88", Offset = "0x1186F88", VA = "0x1186F88")]
	public ScrumposDumpster()
	{
	}
}
[Token(Token = "0x20001F7")]
public class ThrowableCharacter : MonoBehaviour
{
	[Token(Token = "0x2000675")]
	public enum ThrowableState
	{
		[Token(Token = "0x40028F2")]
		Idle,
		[Token(Token = "0x40028F3")]
		Roll,
		[Token(Token = "0x40028F4")]
		Flying,
		[Token(Token = "0x40028F5")]
		Hit,
		[Token(Token = "0x40028F6")]
		Missed
	}

	[Token(Token = "0x2000676")]
	public enum ThrowableEnvironment
	{
		[Token(Token = "0x40028F8")]
		Office,
		[Token(Token = "0x40028F9")]
		Store,
		[Token(Token = "0x40028FA")]
		Street2,
		[Token(Token = "0x40028FB")]
		ObstacleCourse02
	}

	[Token(Token = "0x2000677")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3617C", Offset = "0xA3617C")]
	private sealed class <WaitAndInitDisable>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThrowableCharacter <>4__this;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Character <character>5__2;

		[Token(Token = "0x170004E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C38")]
			[Address(RVA = "0x10EF97C", Offset = "0x10EF97C", VA = "0x10EF97C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0x10EF9E4", Offset = "0x10EF9E4", VA = "0x10EF9E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0x10ECFEC", Offset = "0x10ECFEC", VA = "0x10ECFEC")]
		[DebuggerHidden]
		public <WaitAndInitDisable>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002C36")]
		[Address(RVA = "0x10EF8A8", Offset = "0x10EF8A8", VA = "0x10EF8A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0x10EF8AC", Offset = "0x10EF8AC", VA = "0x10EF8AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0x10EF984", Offset = "0x10EF984", VA = "0x10EF984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000678")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3618C", Offset = "0xA3618C")]
	private sealed class <WaitAndDisable>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThrowableCharacter <>4__this;

		[Token(Token = "0x170004E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C3E")]
			[Address(RVA = "0x10EF838", Offset = "0x10EF838", VA = "0x10EF838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C40")]
			[Address(RVA = "0x10EF8A0", Offset = "0x10EF8A0", VA = "0x10EF8A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0x10ED088", Offset = "0x10ED088", VA = "0x10ED088")]
		[DebuggerHidden]
		public <WaitAndDisable>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002C3C")]
		[Address(RVA = "0x10EF77C", Offset = "0x10EF77C", VA = "0x10EF77C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0x10EF780", Offset = "0x10EF780", VA = "0x10EF780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0x10EF840", Offset = "0x10EF840", VA = "0x10EF840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000679")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3619C", Offset = "0xA3619C")]
	private sealed class <ThrowCharacterHit>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThrowableCharacter <>4__this;

		[Token(Token = "0x170004E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C44")]
			[Address(RVA = "0x10EF70C", Offset = "0x10EF70C", VA = "0x10EF70C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C46")]
			[Address(RVA = "0x10EF774", Offset = "0x10EF774", VA = "0x10EF774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0x10EE964", Offset = "0x10EE964", VA = "0x10EE964")]
		[DebuggerHidden]
		public <ThrowCharacterHit>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0x10EF364", Offset = "0x10EF364", VA = "0x10EF364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0x10EF368", Offset = "0x10EF368", VA = "0x10EF368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0x10EF714", Offset = "0x10EF714", VA = "0x10EF714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200067A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA361AC", Offset = "0xA361AC")]
	private sealed class <WaitAndResetCharacter>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ThrowableCharacter <>4__this;

		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timePassed>5__2;

		[Token(Token = "0x170004E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0x10F00D4", Offset = "0x10F00D4", VA = "0x10F00D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C4C")]
			[Address(RVA = "0x10F013C", Offset = "0x10F013C", VA = "0x10F013C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0x10EEC28", Offset = "0x10EEC28", VA = "0x10EEC28")]
		[DebuggerHidden]
		public <WaitAndResetCharacter>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0x10EF9EC", Offset = "0x10EF9EC", VA = "0x10EF9EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0x10EF9F0", Offset = "0x10EF9F0", VA = "0x10EF9F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C4B")]
		[Address(RVA = "0x10F00DC", Offset = "0x10F00DC", VA = "0x10F00DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _anim;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_ThrowCharacter;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GrabbableExt m_Grabbable;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider[] m_ThrowCharacterColliderHelpers;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_RealCharacter;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource m_ThrowableCharacterHitSFX;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource m_ThrowableCharacterSecondaryHitSFX;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource m_ThrowableCharacterPickupSFX;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PuppetMaster m_MaxRagdoll;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform m_ThrowableMaxTransform;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public PuppetMaster.StateSettings stateSettings;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 origPosition;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Quaternion origRotation;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public LayerMask ValidLayers;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ThrowableEnvironment m_ThrowEnvironment;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public ThrowableState m_ThrowState;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform m_PuppetMasterResetTransform;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _hitCorrectTarget;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float m_fResetTimer;

	[Token(Token = "0x4000CEC")]
	private const float MAX_FLYTIME = 10f;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float _overrideFlyTime;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _effectiveResetTime;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float _ragDollResetDelay;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Action OnThrowableCharacterReset;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool setUpCorrectly;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Transform m_HomingTarget;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private float m_fHomingSpeed;

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x10ECCAC", Offset = "0x10ECCAC", VA = "0x10ECCAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x10ECF9C", Offset = "0x10ECF9C", VA = "0x10ECF9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x10ECF2C", Offset = "0x10ECF2C", VA = "0x10ECF2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5231C", Offset = "0xA5231C")]
	private IEnumerator WaitAndInitDisable()
	{
		return null;
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x10ED018", Offset = "0x10ED018", VA = "0x10ED018")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52380", Offset = "0xA52380")]
	private IEnumerator WaitAndDisable()
	{
		return null;
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x10ED0B4", Offset = "0x10ED0B4", VA = "0x10ED0B4")]
	private void TestHit()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x10ED3D0", Offset = "0x10ED3D0", VA = "0x10ED3D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x10ECE14", Offset = "0x10ECE14", VA = "0x10ECE14")]
	private void IgnoreCollisions()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x10EDB84", Offset = "0x10EDB84", VA = "0x10EDB84")]
	private void IgnoreCollisionRecursively(Transform t)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x10EDC90", Offset = "0x10EDC90", VA = "0x10EDC90")]
	private void ChangeCollisionLayers(int layer)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x10EDD40", Offset = "0x10EDD40", VA = "0x10EDD40")]
	private void ChangeLayerRecursively(Transform t, int layer)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x10EDDE0", Offset = "0x10EDDE0", VA = "0x10EDDE0")]
	public void TurnAround()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x10EDE38", Offset = "0x10EDE38", VA = "0x10EDE38")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x10EE6C8", Offset = "0x10EE6C8", VA = "0x10EE6C8")]
	public void CollidedWithCharacter(Character character)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x10EE658", Offset = "0x10EE658", VA = "0x10EE658")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA523E4", Offset = "0xA523E4")]
	private IEnumerator ThrowCharacterHit()
	{
		return null;
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x10ED954", Offset = "0x10ED954", VA = "0x10ED954")]
	private void ThrowCharacterMissed(bool shouldPlaySFX = true)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x10EEB6C", Offset = "0x10EEB6C", VA = "0x10EEB6C")]
	private void WaitAndWakeUpMax()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x10EE990", Offset = "0x10EE990", VA = "0x10EE990")]
	private void ToggleGravity(bool useGravity)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x10EEAFC", Offset = "0x10EEAFC", VA = "0x10EEAFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52448", Offset = "0xA52448")]
	private IEnumerator WaitAndResetCharacter()
	{
		return null;
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x10EEC54", Offset = "0x10EEC54", VA = "0x10EEC54")]
	public void WaitAndEnableRealCharacter()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x10ECEB0", Offset = "0x10ECEB0", VA = "0x10ECEB0")]
	public void ToggleCollider(bool doEnable)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x10EEE14", Offset = "0x10EEE14", VA = "0x10EEE14")]
	public void SignalHit()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x10EEFD0", Offset = "0x10EEFD0", VA = "0x10EEFD0", Slot = "4")]
	public virtual void AdjustAnimSpeed(float speed = 1f)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x10EEFEC", Offset = "0x10EEFEC", VA = "0x10EEFEC", Slot = "5")]
	public virtual void CallAnimation(string animName, float codeBlend = -1f, bool forcePlay = false)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x10EF100", Offset = "0x10EF100", VA = "0x10EF100", Slot = "6")]
	public virtual void CallAnimationBool(string boolName, bool status)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x10EF120", Offset = "0x10EF120", VA = "0x10EF120", Slot = "7")]
	public virtual void CallAnimationTrigger(string triggerName)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x10EF13C", Offset = "0x10EF13C", VA = "0x10EF13C", Slot = "8")]
	public virtual void RemoveTrigger(string triggerName)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x10EF158", Offset = "0x10EF158", VA = "0x10EF158", Slot = "9")]
	public virtual void CallAnimationInt(string intName, int value)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x10EF174", Offset = "0x10EF174", VA = "0x10EF174", Slot = "10")]
	public virtual void PlayAnimAtTime(string animName, float time)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x10EF194", Offset = "0x10EF194", VA = "0x10EF194", Slot = "11")]
	public virtual bool AnimIsPlaying(string animName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x10EF208", Offset = "0x10EF208", VA = "0x10EF208", Slot = "12")]
	public virtual bool GetBoolValue(string animName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x10EF224", Offset = "0x10EF224", VA = "0x10EF224")]
	public void FinishedIntro()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x10EF298", Offset = "0x10EF298", VA = "0x10EF298")]
	private void RotateCharacter()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x10ECFB4", Offset = "0x10ECFB4", VA = "0x10ECFB4")]
	public void EnableGrabbing()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x10EF2F0", Offset = "0x10EF2F0", VA = "0x10EF2F0")]
	public void CorrectlySetUp()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x10EF2FC", Offset = "0x10EF2FC", VA = "0x10EF2FC")]
	public ThrowableCharacter()
	{
	}
}
[Token(Token = "0x20001F8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32DF8", Offset = "0xA32DF8")]
public class ThrownObjectTrigger : EventTrigger
{
	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _objectName;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _exactMatch;

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x10F0144", Offset = "0x10F0144", VA = "0x10F0144")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x10F01B4", Offset = "0x10F01B4", VA = "0x10F01B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x10F0334", Offset = "0x10F0334", VA = "0x10F0334")]
	public ThrownObjectTrigger()
	{
	}
}
[Token(Token = "0x20001F9")]
public class TimedDestroy : MonoBehaviour
{
	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float countDownTimer;

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x10F033C", Offset = "0x10F033C", VA = "0x10F033C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x10F03EC", Offset = "0x10F03EC", VA = "0x10F03EC")]
	public TimedDestroy()
	{
	}
}
[Token(Token = "0x20001FA")]
public class TimedDisable : MonoBehaviour
{
	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float countDownTimer;

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x10F03FC", Offset = "0x10F03FC", VA = "0x10F03FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x10F04E4", Offset = "0x10F04E4", VA = "0x10F04E4")]
	public TimedDisable()
	{
	}
}
[Token(Token = "0x20001FB")]
public class HandholdTimer : MonoBehaviour
{
	[Token(Token = "0x200067B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA361BC", Offset = "0xA361BC")]
	private sealed class <FallWaitAndDisable>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandholdTimer <>4__this;

		[Token(Token = "0x170004E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C50")]
			[Address(RVA = "0x1195B04", Offset = "0x1195B04", VA = "0x1195B04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C52")]
			[Address(RVA = "0x1195B6C", Offset = "0x1195B6C", VA = "0x1195B6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C4D")]
		[Address(RVA = "0x11957EC", Offset = "0x11957EC", VA = "0x11957EC")]
		[DebuggerHidden]
		public <FallWaitAndDisable>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002C4E")]
		[Address(RVA = "0x11959D8", Offset = "0x11959D8", VA = "0x11959D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0x11959DC", Offset = "0x11959DC", VA = "0x11959DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C51")]
		[Address(RVA = "0x1195B0C", Offset = "0x1195B0C", VA = "0x1195B0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 timerRange;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float killAfter;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rigidbody;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 savedPos;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion savedRot;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool didFall;

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x1195684", Offset = "0x1195684", VA = "0x1195684")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x1195744", Offset = "0x1195744", VA = "0x1195744")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA524AC", Offset = "0xA524AC")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x119577C", Offset = "0x119577C", VA = "0x119577C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA524E4", Offset = "0xA524E4")]
	private IEnumerator FallWaitAndDisable()
	{
		return null;
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1195818", Offset = "0x1195818", VA = "0x1195818")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA52548", Offset = "0xA52548")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x11958F8", Offset = "0x11958F8", VA = "0x11958F8")]
	private void TimerComplete()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x119593C", Offset = "0x119593C", VA = "0x119593C")]
	private void Kill()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x1195988", Offset = "0x1195988", VA = "0x1195988")]
	public HandholdTimer()
	{
	}
}
[Token(Token = "0x20001FC")]
public class BallTrigger : TrickItemTriggers
{
	[Token(Token = "0x200067C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA361CC", Offset = "0xA361CC")]
	private sealed class <PlayVFX>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400290E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400290F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BallTrigger <>4__this;

		[Token(Token = "0x170004EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C56")]
			[Address(RVA = "0x13ECD38", Offset = "0x13ECD38", VA = "0x13ECD38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C58")]
			[Address(RVA = "0x13ECDA0", Offset = "0x13ECDA0", VA = "0x13ECDA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C53")]
		[Address(RVA = "0x13ECC28", Offset = "0x13ECC28", VA = "0x13ECC28")]
		[DebuggerHidden]
		public <PlayVFX>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002C54")]
		[Address(RVA = "0x13ECC5C", Offset = "0x13ECC5C", VA = "0x13ECC5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C55")]
		[Address(RVA = "0x13ECC60", Offset = "0x13ECC60", VA = "0x13ECC60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C57")]
		[Address(RVA = "0x13ECD40", Offset = "0x13ECD40", VA = "0x13ECD40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject floatingText;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float cooldown;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool onCooldown;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject ballMesh;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject vfx;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource sfx;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioSource scoreSfx;

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x13EC090", Offset = "0x13EC090", VA = "0x13EC090")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x13EC604", Offset = "0x13EC604", VA = "0x13EC604")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x13EC698", Offset = "0x13EC698", VA = "0x13EC698")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x13EC6EC", Offset = "0x13EC6EC", VA = "0x13EC6EC")]
	private void RaiseBall()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x13EC94C", Offset = "0x13EC94C", VA = "0x13EC94C")]
	private void DropBall()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x13EC594", Offset = "0x13EC594", VA = "0x13EC594")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52580", Offset = "0xA52580")]
	private IEnumerator PlayVFX()
	{
		return null;
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x13ECC54", Offset = "0x13ECC54", VA = "0x13ECC54")]
	public BallTrigger()
	{
	}
}
[Token(Token = "0x20001FD")]
public class BellTrigger : TrickItemTriggers
{
	[Token(Token = "0x200067D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA361DC", Offset = "0xA361DC")]
	private sealed class <PlayVFX>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BellTrigger <>4__this;

		[Token(Token = "0x170004ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0x1207DF0", Offset = "0x1207DF0", VA = "0x1207DF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0x1207E58", Offset = "0x1207E58", VA = "0x1207E58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0x1207CE0", Offset = "0x1207CE0", VA = "0x1207CE0")]
		[DebuggerHidden]
		public <PlayVFX>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002C5A")]
		[Address(RVA = "0x1207D14", Offset = "0x1207D14", VA = "0x1207D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0x1207D18", Offset = "0x1207D18", VA = "0x1207D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0x1207DF8", Offset = "0x1207DF8", VA = "0x1207DF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject floatingText;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource sfx;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource scoreSfx;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float cooldown;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool onCooldown;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject bellMesh;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject vfx;

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x1206E54", Offset = "0x1206E54", VA = "0x1206E54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x1206EAC", Offset = "0x1206EAC", VA = "0x1206EAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x12076F0", Offset = "0x12076F0", VA = "0x12076F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x1207348", Offset = "0x1207348", VA = "0x1207348")]
	private void HitBell()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x1207744", Offset = "0x1207744", VA = "0x1207744")]
	private void RotateBack()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x1207A7C", Offset = "0x1207A7C", VA = "0x1207A7C")]
	private void ResetBell()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x1207680", Offset = "0x1207680", VA = "0x1207680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA525E4", Offset = "0xA525E4")]
	private IEnumerator PlayVFX()
	{
		return null;
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x1207D0C", Offset = "0x1207D0C", VA = "0x1207D0C")]
	public BellTrigger()
	{
	}
}
[Token(Token = "0x20001FE")]
public class FishFeed : MonoBehaviour
{
	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x1256698", Offset = "0x1256698", VA = "0x1256698")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x1256708", Offset = "0x1256708", VA = "0x1256708")]
	public FishFeed()
	{
	}
}
[Token(Token = "0x20001FF")]
public class FishInventory : MonoBehaviour
{
	[Token(Token = "0x200067E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA361EC", Offset = "0xA361EC")]
	private sealed class <WaitAndRespawn>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FishInventory <>4__this;

		[Token(Token = "0x170004EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C62")]
			[Address(RVA = "0x1256E38", Offset = "0x1256E38", VA = "0x1256E38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C64")]
			[Address(RVA = "0x1256EA0", Offset = "0x1256EA0", VA = "0x1256EA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0x1256A68", Offset = "0x1256A68", VA = "0x1256A68")]
		[DebuggerHidden]
		public <WaitAndRespawn>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002C60")]
		[Address(RVA = "0x1256D90", Offset = "0x1256D90", VA = "0x1256D90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C61")]
		[Address(RVA = "0x1256D94", Offset = "0x1256D94", VA = "0x1256D94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0x1256E40", Offset = "0x1256E40", VA = "0x1256E40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Grabbable> fish;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> fishPos;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> fishRot;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int topFishIndex;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool waitToRespawn;

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x1256710", Offset = "0x1256710", VA = "0x1256710")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x1256868", Offset = "0x1256868", VA = "0x1256868")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x12569F8", Offset = "0x12569F8", VA = "0x12569F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52648", Offset = "0xA52648")]
	private IEnumerator WaitAndRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x12568BC", Offset = "0x12568BC", VA = "0x12568BC")]
	public bool AllFishUsed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x1256A94", Offset = "0x1256A94", VA = "0x1256A94")]
	public void ResetFish()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x1256D88", Offset = "0x1256D88", VA = "0x1256D88")]
	public FishInventory()
	{
	}
}
[Token(Token = "0x2000200")]
public class GrabbableFish : MonoBehaviour
{
	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inBucket;

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x118F9A8", Offset = "0x118F9A8", VA = "0x118F9A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x118F9AC", Offset = "0x118F9AC", VA = "0x118F9AC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x118FA38", Offset = "0x118FA38", VA = "0x118FA38")]
	public GrabbableFish()
	{
	}
}
[Token(Token = "0x2000201")]
public class HoopTrigger : TrickItemTriggers
{
	[Token(Token = "0x200067F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA361FC", Offset = "0xA361FC")]
	private sealed class <PlayVFX>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoopTrigger <>4__this;

		[Token(Token = "0x170004F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C68")]
			[Address(RVA = "0x1595998", Offset = "0x1595998", VA = "0x1595998", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C6A")]
			[Address(RVA = "0x1595A00", Offset = "0x1595A00", VA = "0x1595A00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0x1595890", Offset = "0x1595890", VA = "0x1595890")]
		[DebuggerHidden]
		public <PlayVFX>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0x15958BC", Offset = "0x15958BC", VA = "0x15958BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0x15958C0", Offset = "0x15958C0", VA = "0x15958C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0x15959A0", Offset = "0x15959A0", VA = "0x15959A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject floatingText;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject vfx;

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x11A92C4", Offset = "0x11A92C4", VA = "0x11A92C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x11A96E8", Offset = "0x11A96E8", VA = "0x11A96E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA526AC", Offset = "0xA526AC")]
	private IEnumerator PlayVFX()
	{
		return null;
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x11A9758", Offset = "0x11A9758", VA = "0x11A9758")]
	public HoopTrigger()
	{
	}
}
[Token(Token = "0x2000202")]
public class PetTracker : MonoBehaviour
{
	[Token(Token = "0x2000680")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3620C", Offset = "0xA3620C")]
	private sealed class <StopPetting>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PetTracker <>4__this;

		[Token(Token = "0x170004F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0x1134660", Offset = "0x1134660", VA = "0x1134660", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C70")]
			[Address(RVA = "0x11346C8", Offset = "0x11346C8", VA = "0x11346C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0x1134534", Offset = "0x1134534", VA = "0x1134534")]
		[DebuggerHidden]
		public <StopPetting>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002C6C")]
		[Address(RVA = "0x113458C", Offset = "0x113458C", VA = "0x113458C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C6D")]
		[Address(RVA = "0x1134590", Offset = "0x1134590", VA = "0x1134590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0x1134668", Offset = "0x1134668", VA = "0x1134668", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputBridge input;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Grabber> playerHands;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator wormAnim;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TrickManager tManager;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource petSFX;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine petting;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool didOnce;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private CanvasGroup petUI;

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1133D50", Offset = "0x1133D50", VA = "0x1133D50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x1133DA8", Offset = "0x1133DA8", VA = "0x1133DA8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x113433C", Offset = "0x113433C", VA = "0x113433C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x1134424", Offset = "0x1134424", VA = "0x1134424")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x11344C4", Offset = "0x11344C4", VA = "0x11344C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52710", Offset = "0xA52710")]
	private IEnumerator StopPetting()
	{
		return null;
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x11341FC", Offset = "0x11341FC", VA = "0x11341FC")]
	private bool IsHolding()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x1134560", Offset = "0x1134560", VA = "0x1134560")]
	public void ResetScoreCheck()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x1134568", Offset = "0x1134568", VA = "0x1134568")]
	public void UpdateUI(float step)
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x1134584", Offset = "0x1134584", VA = "0x1134584")]
	public PetTracker()
	{
	}
}
[Token(Token = "0x2000203")]
public class TrapTrigger : TrickItemTriggers
{
	[Token(Token = "0x2000681")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3621C", Offset = "0xA3621C")]
	private sealed class <PlayVFX>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400291D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrapTrigger <>4__this;

		[Token(Token = "0x170004F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C74")]
			[Address(RVA = "0x10F1F44", Offset = "0x10F1F44", VA = "0x10F1F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C76")]
			[Address(RVA = "0x10F1FAC", Offset = "0x10F1FAC", VA = "0x10F1FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0x10F1E2C", Offset = "0x10F1E2C", VA = "0x10F1E2C")]
		[DebuggerHidden]
		public <PlayVFX>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0x10F1E68", Offset = "0x10F1E68", VA = "0x10F1E68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0x10F1E6C", Offset = "0x10F1E6C", VA = "0x10F1E6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0x10F1F4C", Offset = "0x10F1F4C", VA = "0x10F1F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject floatingText;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float cooldown;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool onCooldown;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject vfx;

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x10F17E8", Offset = "0x10F17E8", VA = "0x10F17E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x10F1DD8", Offset = "0x10F1DD8", VA = "0x10F1DD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x10F1D3C", Offset = "0x10F1D3C", VA = "0x10F1D3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52774", Offset = "0xA52774")]
	private IEnumerator PlayVFX()
	{
		return null;
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x10F1E58", Offset = "0x10F1E58", VA = "0x10F1E58")]
	public TrapTrigger()
	{
	}
}
[Token(Token = "0x2000204")]
public class TrickItem : MonoBehaviour
{
	[Token(Token = "0x2000682")]
	public enum Trick
	{
		[Token(Token = "0x4002920")]
		Power,
		[Token(Token = "0x4002921")]
		Hoop,
		[Token(Token = "0x4002922")]
		Upright,
		[Token(Token = "0x4002923")]
		Somersault,
		[Token(Token = "0x4002924")]
		Call,
		[Token(Token = "0x4002925")]
		None
	}

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debugActivate;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animationParameter;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mainMaterial;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator anim;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource sfx;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float maxUprightTime;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool startTimer;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool timeExceeded;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Trick trickType;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TrickManager trickManager;

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x10F1FB4", Offset = "0x10F1FB4", VA = "0x10F1FB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x10F205C", Offset = "0x10F205C", VA = "0x10F205C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x10F2238", Offset = "0x10F2238", VA = "0x10F2238")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x10F26BC", Offset = "0x10F26BC", VA = "0x10F26BC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x10F2758", Offset = "0x10F2758", VA = "0x10F2758")]
	private void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x10F2870", Offset = "0x10F2870", VA = "0x10F2870")]
	public void SetManager(TrickManager manager)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x10F2164", Offset = "0x10F2164", VA = "0x10F2164")]
	public void DebugActivate()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x10F2878", Offset = "0x10F2878", VA = "0x10F2878")]
	public TrickItem()
	{
	}
}
[Token(Token = "0x2000205")]
public class TrickItemTriggers : MonoBehaviour
{
	[Token(Token = "0x2000683")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3622C", Offset = "0xA3622C")]
	private sealed class <WaitAndRemove>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrickItemTriggers <>4__this;

		[Token(Token = "0x170004F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C7A")]
			[Address(RVA = "0x10F2D9C", Offset = "0x10F2D9C", VA = "0x10F2D9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C7C")]
			[Address(RVA = "0x10F2E04", Offset = "0x10F2E04", VA = "0x10F2E04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0x10F295C", Offset = "0x10F295C", VA = "0x10F295C")]
		[DebuggerHidden]
		public <WaitAndRemove>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0x10F29D0", Offset = "0x10F29D0", VA = "0x10F29D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0x10F29D4", Offset = "0x10F29D4", VA = "0x10F29D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0x10F2DA4", Offset = "0x10F2DA4", VA = "0x10F2DA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrickManager tManager;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource itemOutSfx;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected WormWhispererSceneManager manager;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool isRoundStarted;

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x10F28D8", Offset = "0x10F28D8", VA = "0x10F28D8")]
	public void IntroFinished()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x10F28E4", Offset = "0x10F28E4", VA = "0x10F28E4")]
	public void SetManager(WormWhispererSceneManager sceneManager)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x10F1DAC", Offset = "0x10F1DAC", VA = "0x10F1DAC")]
	public void FloatItemOut()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x10F28EC", Offset = "0x10F28EC", VA = "0x10F28EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA527D8", Offset = "0xA527D8")]
	public IEnumerator WaitAndRemove()
	{
		return null;
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x10F2988", Offset = "0x10F2988", VA = "0x10F2988")]
	public void DisableItem()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x10F1E60", Offset = "0x10F1E60", VA = "0x10F1E60")]
	public TrickItemTriggers()
	{
	}
}
[Token(Token = "0x2000206")]
public class TrickManager : MonoBehaviour
{
	[Token(Token = "0x2000684")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3623C", Offset = "0xA3623C")]
	private sealed class <WaitAndUnparent>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400292A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400292B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrickManager <>4__this;

		[Token(Token = "0x170004F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C80")]
			[Address(RVA = "0x1409AC0", Offset = "0x1409AC0", VA = "0x1409AC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C82")]
			[Address(RVA = "0x1409B28", Offset = "0x1409B28", VA = "0x1409B28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0x14099D8", Offset = "0x14099D8", VA = "0x14099D8")]
		[DebuggerHidden]
		public <WaitAndUnparent>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002C7E")]
		[Address(RVA = "0x1409A04", Offset = "0x1409A04", VA = "0x1409A04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0x1409A08", Offset = "0x1409A08", VA = "0x1409A08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C81")]
		[Address(RVA = "0x1409AC8", Offset = "0x1409AC8", VA = "0x1409AC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000685")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3624C", Offset = "0xA3624C")]
	private sealed class <WaitForTrick>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400292C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400292D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400292E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrickManager <>4__this;

		[Token(Token = "0x170004FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C86")]
			[Address(RVA = "0x1409C34", Offset = "0x1409C34", VA = "0x1409C34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C88")]
			[Address(RVA = "0x1409C9C", Offset = "0x1409C9C", VA = "0x1409C9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0x1409B30", Offset = "0x1409B30", VA = "0x1409B30")]
		[DebuggerHidden]
		public <WaitForTrick>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6002C84")]
		[Address(RVA = "0x1409B5C", Offset = "0x1409B5C", VA = "0x1409B5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C85")]
		[Address(RVA = "0x1409B60", Offset = "0x1409B60", VA = "0x1409B60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C87")]
		[Address(RVA = "0x1409C3C", Offset = "0x1409C3C", VA = "0x1409C3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000686")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3625C", Offset = "0xA3625C")]
	private sealed class <WaitAndStay>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrickManager <>4__this;

		[Token(Token = "0x170004FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0x1409968", Offset = "0x1409968", VA = "0x1409968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C8E")]
			[Address(RVA = "0x14099D0", Offset = "0x14099D0", VA = "0x14099D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C89")]
		[Address(RVA = "0x14097E0", Offset = "0x14097E0", VA = "0x14097E0")]
		[DebuggerHidden]
		public <WaitAndStay>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6002C8A")]
		[Address(RVA = "0x140980C", Offset = "0x140980C", VA = "0x140980C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C8B")]
		[Address(RVA = "0x1409810", Offset = "0x1409810", VA = "0x1409810", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C8D")]
		[Address(RVA = "0x1409970", Offset = "0x1409970", VA = "0x1409970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000687")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3626C", Offset = "0xA3626C")]
	private sealed class <WaitAndContinueSwim>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrickManager <>4__this;

		[Token(Token = "0x170004FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C92")]
			[Address(RVA = "0x1409020", Offset = "0x1409020", VA = "0x1409020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000500")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C94")]
			[Address(RVA = "0x1409088", Offset = "0x1409088", VA = "0x1409088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C8F")]
		[Address(RVA = "0x1408D80", Offset = "0x1408D80", VA = "0x1408D80")]
		[DebuggerHidden]
		public <WaitAndContinueSwim>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6002C90")]
		[Address(RVA = "0x1408DAC", Offset = "0x1408DAC", VA = "0x1408DAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C91")]
		[Address(RVA = "0x1408DB0", Offset = "0x1408DB0", VA = "0x1408DB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C93")]
		[Address(RVA = "0x1409028", Offset = "0x1409028", VA = "0x1409028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000688")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3627C", Offset = "0xA3627C")]
	private sealed class <EatAndContinueSwim>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrickManager <>4__this;

		[Token(Token = "0x17000501")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C98")]
			[Address(RVA = "0x1408928", Offset = "0x1408928", VA = "0x1408928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000502")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C9A")]
			[Address(RVA = "0x1408990", Offset = "0x1408990", VA = "0x1408990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C95")]
		[Address(RVA = "0x14086B4", Offset = "0x14086B4", VA = "0x14086B4")]
		[DebuggerHidden]
		public <EatAndContinueSwim>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6002C96")]
		[Address(RVA = "0x14086E0", Offset = "0x14086E0", VA = "0x14086E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0x14086E4", Offset = "0x14086E4", VA = "0x14086E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0x1408930", Offset = "0x1408930", VA = "0x1408930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000689")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3628C", Offset = "0xA3628C")]
	private sealed class <JumpAndEat>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrickManager <>4__this;

		[Token(Token = "0x17000503")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C9E")]
			[Address(RVA = "0x1408D10", Offset = "0x1408D10", VA = "0x1408D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000504")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CA0")]
			[Address(RVA = "0x1408D78", Offset = "0x1408D78", VA = "0x1408D78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C9B")]
		[Address(RVA = "0x1408B8C", Offset = "0x1408B8C", VA = "0x1408B8C")]
		[DebuggerHidden]
		public <JumpAndEat>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6002C9C")]
		[Address(RVA = "0x1408BB8", Offset = "0x1408BB8", VA = "0x1408BB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0x1408BBC", Offset = "0x1408BBC", VA = "0x1408BBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0x1408D18", Offset = "0x1408D18", VA = "0x1408D18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200068A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3629C", Offset = "0xA3629C")]
	private sealed class <WaitAndRise>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400293B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrickManager <>4__this;

		[Token(Token = "0x17000505")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CA4")]
			[Address(RVA = "0x1409770", Offset = "0x1409770", VA = "0x1409770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000506")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CA6")]
			[Address(RVA = "0x14097D8", Offset = "0x14097D8", VA = "0x14097D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0x14095EC", Offset = "0x14095EC", VA = "0x14095EC")]
		[DebuggerHidden]
		public <WaitAndRise>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0x1409618", Offset = "0x1409618", VA = "0x1409618", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0x140961C", Offset = "0x140961C", VA = "0x140961C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0x1409778", Offset = "0x1409778", VA = "0x1409778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200068B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA362AC", Offset = "0xA362AC")]
	private sealed class <WaitAndFeed>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber grabber;

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrickManager <>4__this;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Grabbable heldItem;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <holdingFish>5__2;

		[Token(Token = "0x17000507")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CAA")]
			[Address(RVA = "0x140957C", Offset = "0x140957C", VA = "0x140957C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000508")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CAC")]
			[Address(RVA = "0x14095E4", Offset = "0x14095E4", VA = "0x14095E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CA7")]
		[Address(RVA = "0x1409090", Offset = "0x1409090", VA = "0x1409090")]
		[DebuggerHidden]
		public <WaitAndFeed>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6002CA8")]
		[Address(RVA = "0x14090BC", Offset = "0x14090BC", VA = "0x14090BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CA9")]
		[Address(RVA = "0x14090C0", Offset = "0x14090C0", VA = "0x14090C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0x1409584", Offset = "0x1409584", VA = "0x1409584", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200068C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA362BC", Offset = "0xA362BC")]
	private sealed class <FallAndDive>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrickManager <>4__this;

		[Token(Token = "0x17000509")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0x1408B1C", Offset = "0x1408B1C", VA = "0x1408B1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CB2")]
			[Address(RVA = "0x1408B84", Offset = "0x1408B84", VA = "0x1408B84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CAD")]
		[Address(RVA = "0x1408998", Offset = "0x1408998", VA = "0x1408998")]
		[DebuggerHidden]
		public <FallAndDive>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6002CAE")]
		[Address(RVA = "0x14089C4", Offset = "0x14089C4", VA = "0x14089C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CAF")]
		[Address(RVA = "0x14089C8", Offset = "0x14089C8", VA = "0x14089C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CB1")]
		[Address(RVA = "0x1408B24", Offset = "0x1408B24", VA = "0x1408B24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool trickSuccess;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rotationTarget;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private WormWhispererSceneManager manager;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<TrickItem> items;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator wormAnimator;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SplineFollower wormFollower;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<Dreamteck.Splines.Node> callNodes;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TrainEngine wormEngine;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject feedWorm;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject feedWormHead;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Animator feedWormAnim;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<Grabber> grabbers;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TrickRackController rackController;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Collider petCollider;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioSource vanishSFX;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool uprightActive;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool holdRotation;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 holdVector;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform originalParent;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 originalPosition;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 splinePosition;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float originalSpeed;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool headingToTarget;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Coroutine feedingPhase;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool checking;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool skippedFirstTime;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int trickCount;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool isTired;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool doingTrick;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int trickDiagCount;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool initUIBar;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool onCooldown;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float cooldownTimer;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float getTiredTimer;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Coroutine waitingPhase;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject floatingText;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private Transform floatingTextPos;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private List<Transform> lookNodes;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject gongVFX;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Coroutine trickReset;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool resetIsRunning;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private CanvasGroup petUI;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool teleportationEnabled;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private SmoothLocomotion locomotion;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool locomotionRackToggle;

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x10F2E0C", Offset = "0x10F2E0C", VA = "0x10F2E0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x10F2E64", Offset = "0x10F2E64", VA = "0x10F2E64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x10F2FC0", Offset = "0x10F2FC0", VA = "0x10F2FC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5283C", Offset = "0xA5283C")]
	private IEnumerator WaitAndUnparent()
	{
		return null;
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x10F3030", Offset = "0x10F3030", VA = "0x10F3030")]
	public void ReparentMove()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x10F3440", Offset = "0x10F3440", VA = "0x10F3440")]
	public void UnparentImmediate()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x10F2374", Offset = "0x10F2374", VA = "0x10F2374")]
	public void HoldRotation(bool state, bool setVector = false)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x10F23D4", Offset = "0x10F23D4", VA = "0x10F23D4")]
	public void ActivateTrick(TrickItem.Trick trickType)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x10F1C24", Offset = "0x10F1C24", VA = "0x10F1C24")]
	public void SetTrickSuccess(TrickItem.Trick trickType)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x10F2184", Offset = "0x10F2184", VA = "0x10F2184")]
	public void DeactivateTrick(TrickItem.Trick trickType)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x10F3468", Offset = "0x10F3468", VA = "0x10F3468")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA528A0", Offset = "0xA528A0")]
	private IEnumerator WaitForTrick()
	{
		return null;
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x10F3A2C", Offset = "0x10F3A2C", VA = "0x10F3A2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x10F4068", Offset = "0x10F4068", VA = "0x10F4068")]
	public void AllBetter()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x10F40F0", Offset = "0x10F40F0", VA = "0x10F40F0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x10F3F30", Offset = "0x10F3F30", VA = "0x10F3F30")]
	private void ResetForceRelease()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x10F43D8", Offset = "0x10F43D8", VA = "0x10F43D8")]
	public void DidPet()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x10F4640", Offset = "0x10F4640", VA = "0x10F4640")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52904", Offset = "0xA52904")]
	private IEnumerator WaitAndStay()
	{
		return null;
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x10F45D0", Offset = "0x10F45D0", VA = "0x10F45D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52968", Offset = "0xA52968")]
	private IEnumerator WaitAndContinueSwim()
	{
		return null;
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x10F46B0", Offset = "0x10F46B0", VA = "0x10F46B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA529CC", Offset = "0xA529CC")]
	private IEnumerator EatAndContinueSwim()
	{
		return null;
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x10F319C", Offset = "0x10F319C", VA = "0x10F319C")]
	public void FindClosestLookNode()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x10F34D8", Offset = "0x10F34D8", VA = "0x10F34D8")]
	public void FindClosestNode()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x10F4720", Offset = "0x10F4720", VA = "0x10F4720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52A30", Offset = "0xA52A30")]
	private IEnumerator JumpAndEat()
	{
		return null;
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x10F4790", Offset = "0x10F4790", VA = "0x10F4790")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52A94", Offset = "0xA52A94")]
	private IEnumerator WaitAndRise()
	{
		return null;
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x10F4100", Offset = "0x10F4100", VA = "0x10F4100")]
	public void CheckForFish()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x10F4884", Offset = "0x10F4884", VA = "0x10F4884")]
	private void CheckForFishImmediate()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x10F4800", Offset = "0x10F4800", VA = "0x10F4800")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52AF8", Offset = "0xA52AF8")]
	private IEnumerator WaitAndFeed(Grabber grabber, Grabbable heldItem)
	{
		return null;
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x10F4D88", Offset = "0x10F4D88", VA = "0x10F4D88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52B5C", Offset = "0xA52B5C")]
	private IEnumerator FallAndDive()
	{
		return null;
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x10F4DF8", Offset = "0x10F4DF8", VA = "0x10F4DF8")]
	public void FedFish(GameObject fish)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x10F4DFC", Offset = "0x10F4DFC", VA = "0x10F4DFC")]
	public void SootheWorm()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x10F4E18", Offset = "0x10F4E18", VA = "0x10F4E18")]
	public TrickManager()
	{
	}
}
[Token(Token = "0x2000207")]
public class TrickRackController : MonoBehaviour
{
	[Token(Token = "0x200068D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA362CC", Offset = "0xA362CC")]
	private sealed class <WaitAndReveal>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrickRackController <>4__this;

		[Token(Token = "0x1700050B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CB6")]
			[Address(RVA = "0x140A7F0", Offset = "0x140A7F0", VA = "0x140A7F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CB8")]
			[Address(RVA = "0x140A858", Offset = "0x140A858", VA = "0x140A858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CB3")]
		[Address(RVA = "0x140A38C", Offset = "0x140A38C", VA = "0x140A38C")]
		[DebuggerHidden]
		public <WaitAndReveal>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002CB4")]
		[Address(RVA = "0x140A658", Offset = "0x140A658", VA = "0x140A658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CB5")]
		[Address(RVA = "0x140A65C", Offset = "0x140A65C", VA = "0x140A65C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CB7")]
		[Address(RVA = "0x140A7F8", Offset = "0x140A7F8", VA = "0x140A7F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200068E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA362DC", Offset = "0xA362DC")]
	private sealed class <WaitAndAnimate>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrickRackController <>4__this;

		[Token(Token = "0x1700050D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CBC")]
			[Address(RVA = "0x140A5E8", Offset = "0x140A5E8", VA = "0x140A5E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0x140A650", Offset = "0x140A650", VA = "0x140A650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CB9")]
		[Address(RVA = "0x140A4D0", Offset = "0x140A4D0", VA = "0x140A4D0")]
		[DebuggerHidden]
		public <WaitAndAnimate>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002CBA")]
		[Address(RVA = "0x140A50C", Offset = "0x140A50C", VA = "0x140A50C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CBB")]
		[Address(RVA = "0x140A510", Offset = "0x140A510", VA = "0x140A510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CBD")]
		[Address(RVA = "0x140A5F0", Offset = "0x140A5F0", VA = "0x140A5F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrickManager trickManager;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject trickRack;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Material> trickMaterials;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<BoxCollider> trickColliders;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator postItAnimator;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool waitForFeed;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float startTime;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool beginLerp;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int lerpDirection;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lerpedAmount;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float currentLerpAmount;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine revealer;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool teleported;

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x1409CA4", Offset = "0x1409CA4", VA = "0x1409CA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x1409CA8", Offset = "0x1409CA8", VA = "0x1409CA8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x1409E58", Offset = "0x1409E58", VA = "0x1409E58")]
	private void LerpTo()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x1409F98", Offset = "0x1409F98", VA = "0x1409F98")]
	private void LerpFrom()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x140A0D4", Offset = "0x140A0D4", VA = "0x140A0D4")]
	public void DissolveImmediate()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x140A268", Offset = "0x140A268", VA = "0x140A268")]
	public void TeleportReveal()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x140A330", Offset = "0x140A330", VA = "0x140A330")]
	public void TeleportRevealImmediate()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x140A2C0", Offset = "0x140A2C0", VA = "0x140A2C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52BC0", Offset = "0xA52BC0")]
	private IEnumerator WaitAndReveal()
	{
		return null;
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x140A3B8", Offset = "0x140A3B8", VA = "0x140A3B8")]
	public void DisableRack()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x14088CC", Offset = "0x14088CC", VA = "0x14088CC")]
	public void EnableRack()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x140A460", Offset = "0x140A460", VA = "0x140A460")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52C24", Offset = "0xA52C24")]
	private IEnumerator WaitAndAnimate()
	{
		return null;
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x1409E9C", Offset = "0x1409E9C", VA = "0x1409E9C")]
	private void DisableColliders()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x1409FD8", Offset = "0x1409FD8", VA = "0x1409FD8")]
	private void EnableColliders()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x140A4FC", Offset = "0x140A4FC", VA = "0x140A4FC")]
	public TrickRackController()
	{
	}
}
[Token(Token = "0x2000208")]
public enum TaskType
{
	[Token(Token = "0x4000D6A")]
	HOOP,
	[Token(Token = "0x4000D6B")]
	BELL,
	[Token(Token = "0x4000D6C")]
	TRAP,
	[Token(Token = "0x4000D6D")]
	BALL
}
[Token(Token = "0x2000209")]
public class WWTask : MonoBehaviour
{
	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public TaskType[] tasks;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] tasksCount;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int taskCheckpoint;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int taskCount;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool completed;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro taskUI;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x134D84C", Offset = "0x134D84C", VA = "0x134D84C")]
	public void TaskReport(TaskType task)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x134D908", Offset = "0x134D908", VA = "0x134D908")]
	public void TaskComplete()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x134D9D4", Offset = "0x134D9D4", VA = "0x134D9D4")]
	public void ResetTask()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x134DC60", Offset = "0x134DC60", VA = "0x134DC60")]
	public WWTask()
	{
	}
}
[Token(Token = "0x200020A")]
public class WWTaskManager : MonoBehaviour
{
	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WWTaskManager m_Instance;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<WWTask> RoundOneTasks;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public List<WWTask> RoundTwoTasks;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<WWTask> RoundThreeTasks;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int roundCount;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool completed;

	[Token(Token = "0x170000AA")]
	public static WWTaskManager Instance
	{
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x134DC68", Offset = "0x134DC68", VA = "0x134DC68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x134DCB8", Offset = "0x134DCB8", VA = "0x134DCB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x134DD0C", Offset = "0x134DD0C", VA = "0x134DD0C")]
	public void ReportTask(TaskType type)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x134D9DC", Offset = "0x134D9DC", VA = "0x134D9DC")]
	public void CompletedTask(WWTask task)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x134DF64", Offset = "0x134DF64", VA = "0x134DF64")]
	public bool VerifyCompletion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x134E2E4", Offset = "0x134E2E4", VA = "0x134E2E4")]
	public void AllTaskReset()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x134E514", Offset = "0x134E514", VA = "0x134E514")]
	public WWTaskManager()
	{
	}
}
[Token(Token = "0x200020B")]
public class WormSFX : MonoBehaviour
{
	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource eatSFX;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource jumpSFX;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource diveSFX;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource walkSFX;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource flipSFX;

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x134FBDC", Offset = "0x134FBDC", VA = "0x134FBDC")]
	public void PlayEat()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x134FBF8", Offset = "0x134FBF8", VA = "0x134FBF8")]
	public void PlayJump()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x134FC14", Offset = "0x134FC14", VA = "0x134FC14")]
	public void PlayDive()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x134FC30", Offset = "0x134FC30", VA = "0x134FC30")]
	public void PlayWalk()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x134FC4C", Offset = "0x134FC4C", VA = "0x134FC4C")]
	public void StopWalk()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x134FC68", Offset = "0x134FC68", VA = "0x134FC68")]
	public void PlayFlip()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x134FC84", Offset = "0x134FC84", VA = "0x134FC84")]
	public WormSFX()
	{
	}
}
[Serializable]
[Token(Token = "0x200020C")]
public class AnimData
{
	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string character;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string animName;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Enums.AnimType type;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string objectToInteract;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float delay;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool lockLook;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string triggerName;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float triggerDelay;

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x1295E5C", Offset = "0x1295E5C", VA = "0x1295E5C")]
	public AnimData()
	{
	}
}
[Serializable]
[Token(Token = "0x200020D")]
public class ConvoPlayData
{
	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string convoName;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] locks;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool blockedByIntro;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool replay;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool hasPlayed;

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x122FC68", Offset = "0x122FC68", VA = "0x122FC68")]
	public ConvoPlayData()
	{
	}
}
[Token(Token = "0x200020E")]
public class GradeModifierData
{
	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Enums.GradeModifierType type;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float amount;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMultiplied;

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x1190F50", Offset = "0x1190F50", VA = "0x1190F50")]
	public GradeModifierData()
	{
	}
}
[Serializable]
[Token(Token = "0x200020F")]
public enum ObjectType
{
	[Token(Token = "0x4000D90")]
	Generic_Interactable,
	[Token(Token = "0x4000D91")]
	Generic_Noninteractable,
	[Token(Token = "0x4000D92")]
	Generic_Task,
	[Token(Token = "0x4000D93")]
	Generic_Conversation,
	[Token(Token = "0x4000D94")]
	CubeTest,
	[Token(Token = "0x4000D95")]
	SphereTest
}
[Token(Token = "0x2000210")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32E5C", Offset = "0xA32E5C")]
public abstract class ObjectStateData : MonoBehaviour
{
	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DEC8", Offset = "0xA3DEC8")]
	private StateObject <stateObj>k__BackingField;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public ObjectType objType;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DEE8", Offset = "0xA3DEE8")]
	private int <objID>k__BackingField;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_autoRegister;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObjectStateManager m_ObjManager;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_canUpdateData;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool m_usesRigidbody;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool m_destroyOnReload;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DEF8", Offset = "0xA3DEF8")]
	private Vector3 <objOriginalPos>k__BackingField;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DF08", Offset = "0xA3DF08")]
	private Quaternion <objOriginalRot>k__BackingField;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DF18", Offset = "0xA3DF18")]
	private Vector3 <objLastKnownPos>k__BackingField;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DF28", Offset = "0xA3DF28")]
	private Quaternion <objLastKnownRot>k__BackingField;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3DF38", Offset = "0xA3DF38")]
	private List<ObjectStateData> <associatedObjects>k__BackingField;

	[Token(Token = "0x170000AB")]
	public StateObject stateObj
	{
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x12ABB4C", Offset = "0x12ABB4C", VA = "0x12ABB4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52C88", Offset = "0xA52C88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x12ABB54", Offset = "0x12ABB54", VA = "0x12ABB54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52C98", Offset = "0xA52C98")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public int objID
	{
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x12ABB5C", Offset = "0x12ABB5C", VA = "0x12ABB5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52CA8", Offset = "0xA52CA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x12ABB64", Offset = "0x12ABB64", VA = "0x12ABB64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52CB8", Offset = "0xA52CB8")]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public Vector3 objOriginalPos
	{
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x12ABB6C", Offset = "0x12ABB6C", VA = "0x12ABB6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52CC8", Offset = "0xA52CC8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x12ABB78", Offset = "0x12ABB78", VA = "0x12ABB78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52CD8", Offset = "0xA52CD8")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public Quaternion objOriginalRot
	{
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x12ABB84", Offset = "0x12ABB84", VA = "0x12ABB84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52CE8", Offset = "0xA52CE8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x12ABB90", Offset = "0x12ABB90", VA = "0x12ABB90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52CF8", Offset = "0xA52CF8")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public Vector3 objLastKnownPos
	{
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x12ABB9C", Offset = "0x12ABB9C", VA = "0x12ABB9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52D08", Offset = "0xA52D08")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x12ABBA8", Offset = "0x12ABBA8", VA = "0x12ABBA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52D18", Offset = "0xA52D18")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public Quaternion objLastKnownRot
	{
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x12ABBB4", Offset = "0x12ABBB4", VA = "0x12ABBB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52D28", Offset = "0xA52D28")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x12ABBC0", Offset = "0x12ABBC0", VA = "0x12ABBC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52D38", Offset = "0xA52D38")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public List<ObjectStateData> associatedObjects
	{
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x12ABBCC", Offset = "0x12ABBCC", VA = "0x12ABBCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52D48", Offset = "0xA52D48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x12ABBD4", Offset = "0x12ABBD4", VA = "0x12ABBD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA52D58", Offset = "0xA52D58")]
		set
		{
		}
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x12ABBDC", Offset = "0x12ABBDC", VA = "0x12ABBDC", Slot = "4")]
	public virtual void InitDefaultData()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x12ABD2C", Offset = "0x12ABD2C", VA = "0x12ABD2C", Slot = "5")]
	public virtual void InitRegistration(ObjectStateManager man)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x12ABD50", Offset = "0x12ABD50", VA = "0x12ABD50", Slot = "6")]
	public virtual void ResetData()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x12ABE28", Offset = "0x12ABE28", VA = "0x12ABE28", Slot = "7")]
	public virtual void RestoreLastData()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x12ABF00", Offset = "0x12ABF00", VA = "0x12ABF00", Slot = "8")]
	public virtual void UpdateData()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x12ABF5C", Offset = "0x12ABF5C", VA = "0x12ABF5C", Slot = "9")]
	public virtual void LoadObjectData(string data)
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x12ABF60", Offset = "0x12ABF60", VA = "0x12ABF60", Slot = "10")]
	public virtual string GatherObjectData()
	{
		return null;
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x12ABFDC", Offset = "0x12ABFDC", VA = "0x12ABFDC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x12AC058", Offset = "0x12AC058", VA = "0x12AC058")]
	protected ObjectStateData()
	{
	}
}
[Token(Token = "0x2000211")]
public class Enums
{
	[Token(Token = "0x200068F")]
	public enum AnimType
	{
		[Token(Token = "0x400294E")]
		Trigger,
		[Token(Token = "0x400294F")]
		Bool,
		[Token(Token = "0x4002950")]
		Name,
		[Token(Token = "0x4002951")]
		Int,
		[Token(Token = "0x4002952")]
		GrabObject,
		[Token(Token = "0x4002953")]
		ReleaseObject,
		[Token(Token = "0x4002954")]
		TurnOffBool,
		[Token(Token = "0x4002955")]
		Idle,
		[Token(Token = "0x4002956")]
		DelayedTrigger,
		[Token(Token = "0x4002957")]
		DelayedBool,
		[Token(Token = "0x4002958")]
		DelayedInt,
		[Token(Token = "0x4002959")]
		HoldObject
	}

	[Token(Token = "0x2000690")]
	public enum TaskProgress
	{
		[Token(Token = "0x400295B")]
		None,
		[Token(Token = "0x400295C")]
		Score,
		[Token(Token = "0x400295D")]
		Timed
	}

	[Token(Token = "0x2000691")]
	public enum GradeModifierType
	{
		[Token(Token = "0x400295F")]
		None,
		[Token(Token = "0x4002960")]
		PlayerDamage,
		[Token(Token = "0x4002961")]
		Mistake
	}

	[Token(Token = "0x2000692")]
	public enum InnerPanelType
	{
		[Token(Token = "0x4002963")]
		Hex,
		[Token(Token = "0x4002964")]
		FlatHead,
		[Token(Token = "0x4002965")]
		Philips,
		[Token(Token = "0x4002966")]
		Wires
	}

	[Token(Token = "0x2000693")]
	public enum WidgitType
	{
		[Token(Token = "0x4002968")]
		Shake,
		[Token(Token = "0x4002969")]
		Kiss,
		[Token(Token = "0x400296A")]
		Boop,
		[Token(Token = "0x400296B")]
		Poke,
		[Token(Token = "0x400296C")]
		Twist,
		[Token(Token = "0x400296D")]
		Yank,
		[Token(Token = "0x400296E")]
		Smack,
		[Token(Token = "0x400296F")]
		Squeeze,
		[Token(Token = "0x4002970")]
		Plunge
	}

	[Token(Token = "0x2000694")]
	public enum BombTell
	{
		[Token(Token = "0x4002972")]
		Eyes_Red,
		[Token(Token = "0x4002973")]
		Eyes_Green,
		[Token(Token = "0x4002974")]
		Eyes_Blue,
		[Token(Token = "0x4002975")]
		Eyes_Yellow,
		[Token(Token = "0x4002976")]
		LookLeft,
		[Token(Token = "0x4002977")]
		LookRight,
		[Token(Token = "0x4002978")]
		LookUp
	}

	[Token(Token = "0x2000695")]
	public enum Handshakes
	{
		[Token(Token = "0x400297A")]
		HighFive,
		[Token(Token = "0x400297B")]
		FistBump,
		[Token(Token = "0x400297C")]
		LowFive
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x13F6AFC", Offset = "0x13F6AFC", VA = "0x13F6AFC")]
	public Enums()
	{
	}
}
[Token(Token = "0x2000212")]
public class AnimatorRandomOffset : MonoBehaviour
{
	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x129783C", Offset = "0x129783C", VA = "0x129783C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x1297944", Offset = "0x1297944", VA = "0x1297944")]
	public AnimatorRandomOffset()
	{
	}
}
[Token(Token = "0x2000213")]
public class BillboardOnEnable : MonoBehaviour
{
	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x1209048", Offset = "0x1209048", VA = "0x1209048")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x1209110", Offset = "0x1209110", VA = "0x1209110")]
	public BillboardOnEnable()
	{
	}
}
[Token(Token = "0x2000214")]
public class BreakGrabParent : MonoBehaviour
{
	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable _grab;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _breakConstraints;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody _rigid;

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x120D6A8", Offset = "0x120D6A8", VA = "0x120D6A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x120D718", Offset = "0x120D718", VA = "0x120D718")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x120D7C0", Offset = "0x120D7C0", VA = "0x120D7C0")]
	public BreakGrabParent()
	{
	}
}
[Token(Token = "0x2000215")]
public class ResetWeapon : MonoBehaviour
{
	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _startPos;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _startRot;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ignoreCollision;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool checkFalls;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fallResetHeight;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _t;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent m_WeaponResetEvent;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Grabbable _grab;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool useDebug;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool checkRestricted;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool checkWalls;

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x10BC964", Offset = "0x10BC964", VA = "0x10BC964")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x10BCA08", Offset = "0x10BCA08", VA = "0x10BCA08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x10BCAC8", Offset = "0x10BCAC8", VA = "0x10BCAC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x10BCD30", Offset = "0x10BCD30", VA = "0x10BCD30")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x10BCB1C", Offset = "0x10BCB1C", VA = "0x10BCB1C")]
	private void ResetItem()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x10BCE20", Offset = "0x10BCE20", VA = "0x10BCE20")]
	public ResetWeapon()
	{
	}
}
[Token(Token = "0x2000216")]
public class TableCollection : MonoBehaviour
{
	[Token(Token = "0x2000696")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA362EC", Offset = "0xA362EC")]
	private sealed class <StaggerActivation>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400297D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700050F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0x10E34E8", Offset = "0x10E34E8", VA = "0x10E34E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000510")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CC4")]
			[Address(RVA = "0x10E3550", Offset = "0x10E3550", VA = "0x10E3550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CBF")]
		[Address(RVA = "0x10E3184", Offset = "0x10E3184", VA = "0x10E3184")]
		[DebuggerHidden]
		public <StaggerActivation>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002CC0")]
		[Address(RVA = "0x10E34B0", Offset = "0x10E34B0", VA = "0x10E34B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CC1")]
		[Address(RVA = "0x10E34B4", Offset = "0x10E34B4", VA = "0x10E34B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CC3")]
		[Address(RVA = "0x10E34F0", Offset = "0x10E34F0", VA = "0x10E34F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Rigidbody> weaponRigidBodies;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> weaponTransforms;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useDebug;

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x10E2F94", Offset = "0x10E2F94", VA = "0x10E2F94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x10E2FFC", Offset = "0x10E2FFC", VA = "0x10E2FFC")]
	public void ActivateWeapons()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x10E3124", Offset = "0x10E3124", VA = "0x10E3124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52D68", Offset = "0xA52D68")]
	private IEnumerator StaggerActivation()
	{
		return null;
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x10E31B0", Offset = "0x10E31B0", VA = "0x10E31B0")]
	public void DisableWeapons()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x10E34A8", Offset = "0x10E34A8", VA = "0x10E34A8")]
	public TableCollection()
	{
	}
}
[Token(Token = "0x2000217")]
public class CenterMenuHelper : MonoBehaviour
{
	[Token(Token = "0x2000697")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA362FC", Offset = "0xA362FC")]
	private sealed class <WaitAndCenter>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400297F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CenterMenuHelper <>4__this;

		[Token(Token = "0x17000511")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CC8")]
			[Address(RVA = "0x1213688", Offset = "0x1213688", VA = "0x1213688", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000512")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0x12136F0", Offset = "0x12136F0", VA = "0x12136F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CC5")]
		[Address(RVA = "0x121358C", Offset = "0x121358C", VA = "0x121358C")]
		[DebuggerHidden]
		public <WaitAndCenter>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002CC6")]
		[Address(RVA = "0x12135C0", Offset = "0x12135C0", VA = "0x12135C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CC7")]
		[Address(RVA = "0x12135C4", Offset = "0x12135C4", VA = "0x12135C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CC9")]
		[Address(RVA = "0x1213690", Offset = "0x1213690", VA = "0x1213690", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject centeringObj;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntroFade centeringComponent;

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x12134F0", Offset = "0x12134F0", VA = "0x12134F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x121351C", Offset = "0x121351C", VA = "0x121351C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52DCC", Offset = "0xA52DCC")]
	private IEnumerator WaitAndCenter()
	{
		return null;
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x12135B8", Offset = "0x12135B8", VA = "0x12135B8")]
	public CenterMenuHelper()
	{
	}
}
[Token(Token = "0x2000218")]
public class AnswerMachineConversationResolver : ConversationResolver
{
	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool playing;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] waitTimes;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int index;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool cooldown;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float cooldownTimer;

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x1297CD0", Offset = "0x1297CD0", VA = "0x1297CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x1297BAC", Offset = "0x1297BAC", VA = "0x1297BAC")]
	public void PlayMessage()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x1297D24", Offset = "0x1297D24", VA = "0x1297D24")]
	public AnswerMachineConversationResolver()
	{
	}
}
[Token(Token = "0x2000219")]
public class BossConversationResolver : ConversationResolver
{
	[Token(Token = "0x2000698")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3630C", Offset = "0xA3630C")]
	private sealed class <TeleportAndStartIntro>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossConversationResolver <>4__this;

		[Token(Token = "0x17000513")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CCE")]
			[Address(RVA = "0x120B840", Offset = "0x120B840", VA = "0x120B840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000514")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0x120B8A8", Offset = "0x120B8A8", VA = "0x120B8A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CCB")]
		[Address(RVA = "0x120AAFC", Offset = "0x120AAFC", VA = "0x120AAFC")]
		[DebuggerHidden]
		public <TeleportAndStartIntro>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002CCC")]
		[Address(RVA = "0x120B71C", Offset = "0x120B71C", VA = "0x120B71C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CCD")]
		[Address(RVA = "0x120B720", Offset = "0x120B720", VA = "0x120B720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CCF")]
		[Address(RVA = "0x120B848", Offset = "0x120B848", VA = "0x120B848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000699")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3631C", Offset = "0xA3631C")]
	private sealed class <MoveToKnifePoint>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossConversationResolver <>4__this;

		[Token(Token = "0x4002988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string convoID;

		[Token(Token = "0x4002989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Character <max>5__2;

		[Token(Token = "0x17000515")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CD4")]
			[Address(RVA = "0x120B558", Offset = "0x120B558", VA = "0x120B558", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000516")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0x120B5C0", Offset = "0x120B5C0", VA = "0x120B5C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CD1")]
		[Address(RVA = "0x120AE58", Offset = "0x120AE58", VA = "0x120AE58")]
		[DebuggerHidden]
		public <MoveToKnifePoint>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002CD2")]
		[Address(RVA = "0x120B1D4", Offset = "0x120B1D4", VA = "0x120B1D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CD3")]
		[Address(RVA = "0x120B1D8", Offset = "0x120B1D8", VA = "0x120B1D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0x120B560", Offset = "0x120B560", VA = "0x120B560", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200069A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3632C", Offset = "0xA3632C")]
	private sealed class <TeleportAndStartBossSuccess>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400298A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400298B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400298C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossConversationResolver <>4__this;

		[Token(Token = "0x17000517")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CDA")]
			[Address(RVA = "0x120B6AC", Offset = "0x120B6AC", VA = "0x120B6AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000518")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CDC")]
			[Address(RVA = "0x120B714", Offset = "0x120B714", VA = "0x120B714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CD7")]
		[Address(RVA = "0x120B090", Offset = "0x120B090", VA = "0x120B090")]
		[DebuggerHidden]
		public <TeleportAndStartBossSuccess>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002CD8")]
		[Address(RVA = "0x120B5C8", Offset = "0x120B5C8", VA = "0x120B5C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CD9")]
		[Address(RVA = "0x120B5CC", Offset = "0x120B5CC", VA = "0x120B5CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CDB")]
		[Address(RVA = "0x120B6B4", Offset = "0x120B6B4", VA = "0x120B6B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200069B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3633C", Offset = "0xA3633C")]
	private sealed class <WaitAndExit>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400298D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400298E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000519")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0x120B9F8", Offset = "0x120B9F8", VA = "0x120B9F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CE2")]
			[Address(RVA = "0x120BA60", Offset = "0x120BA60", VA = "0x120BA60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CDD")]
		[Address(RVA = "0x120B1A0", Offset = "0x120B1A0", VA = "0x120B1A0")]
		[DebuggerHidden]
		public <WaitAndExit>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002CDE")]
		[Address(RVA = "0x120B8B0", Offset = "0x120B8B0", VA = "0x120B8B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CDF")]
		[Address(RVA = "0x120B8B4", Offset = "0x120B8B4", VA = "0x120B8B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0x120BA00", Offset = "0x120BA00", VA = "0x120BA00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool maxHasKnife;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool explained;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool maxHadKnife;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool maxDidNotHaveKnife;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool foundKnifeFast;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool foundKnifeSlow;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private bool noHolyWater;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	private bool noShlurpee;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool showOnce;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputBridge _input;

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x120A990", Offset = "0x120A990", VA = "0x120A990", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x120AA0C", Offset = "0x120AA0C", VA = "0x120AA0C")]
	public void StartBossIntro()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x120AA8C", Offset = "0x120AA8C", VA = "0x120AA8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52E30", Offset = "0xA52E30")]
	private IEnumerator TeleportAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x120AB28", Offset = "0x120AB28", VA = "0x120AB28")]
	public void StartBossCorrectKnife()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x120AC5C", Offset = "0x120AC5C", VA = "0x120AC5C")]
	public void StartBossCorrectNoKnife()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x120ACE4", Offset = "0x120ACE4", VA = "0x120ACE4")]
	public void StartBossKnife()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x120ADDC", Offset = "0x120ADDC", VA = "0x120ADDC")]
	public void StartBossKnifeAfter()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x120AD60", Offset = "0x120AD60", VA = "0x120AD60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52E94", Offset = "0xA52E94")]
	private IEnumerator MoveToKnifePoint(string convoID)
	{
		return null;
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x120AE84", Offset = "0x120AE84", VA = "0x120AE84")]
	public void StartBossNoHolyWater()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x120AF0C", Offset = "0x120AF0C", VA = "0x120AF0C")]
	public void StartBossNoShlurpee()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x120AF94", Offset = "0x120AF94", VA = "0x120AF94")]
	public void StartBossSuccess()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x120B020", Offset = "0x120B020", VA = "0x120B020")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52EF8", Offset = "0xA52EF8")]
	private IEnumerator TeleportAndStartBossSuccess()
	{
		return null;
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x120B0BC", Offset = "0x120B0BC", VA = "0x120B0BC")]
	public void StartPostSuccess()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x120B19C", Offset = "0x120B19C", VA = "0x120B19C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x120B13C", Offset = "0x120B13C", VA = "0x120B13C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52F5C", Offset = "0xA52F5C")]
	private IEnumerator WaitAndExit()
	{
		return null;
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x120B1CC", Offset = "0x120B1CC", VA = "0x120B1CC")]
	public BossConversationResolver()
	{
	}
}
[Token(Token = "0x200021A")]
public class CerealConversationResolver : ConversationResolver
{
	[Token(Token = "0x200069C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3634C", Offset = "0xA3634C")]
	private sealed class <TeleportAndStartIntro>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400298F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CerealConversationResolver <>4__this;

		[Token(Token = "0x1700051B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0x12144BC", Offset = "0x12144BC", VA = "0x12144BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0x1214524", Offset = "0x1214524", VA = "0x1214524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CE3")]
		[Address(RVA = "0x121406C", Offset = "0x121406C", VA = "0x121406C")]
		[DebuggerHidden]
		public <TeleportAndStartIntro>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002CE4")]
		[Address(RVA = "0x1214220", Offset = "0x1214220", VA = "0x1214220", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0x1214224", Offset = "0x1214224", VA = "0x1214224", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0x12144C4", Offset = "0x12144C4", VA = "0x12144C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200069D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3635C", Offset = "0xA3635C")]
	private sealed class <TeleportAndStartSuccess>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CerealConversationResolver <>4__this;

		[Token(Token = "0x1700051D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0x1214738", Offset = "0x1214738", VA = "0x1214738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0x12147A0", Offset = "0x12147A0", VA = "0x12147A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0x12141A0", Offset = "0x12141A0", VA = "0x12141A0")]
		[DebuggerHidden]
		public <TeleportAndStartSuccess>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0x121452C", Offset = "0x121452C", VA = "0x121452C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0x1214530", Offset = "0x1214530", VA = "0x1214530", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0x1214740", Offset = "0x1214740", VA = "0x1214740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool explained;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject enableNext;

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x1213F7C", Offset = "0x1213F7C", VA = "0x1213F7C")]
	public void StartCerealIntro()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x1213FFC", Offset = "0x1213FFC", VA = "0x1213FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA52FC0", Offset = "0xA52FC0")]
	private IEnumerator TeleportAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x1214098", Offset = "0x1214098", VA = "0x1214098")]
	public void StartCerealHint()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x1214104", Offset = "0x1214104", VA = "0x1214104")]
	public void StartCerealSuccess()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x1214130", Offset = "0x1214130", VA = "0x1214130")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53024", Offset = "0xA53024")]
	private IEnumerator TeleportAndStartSuccess()
	{
		return null;
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x12141CC", Offset = "0x12141CC", VA = "0x12141CC")]
	public void EnableNext()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x1214218", Offset = "0x1214218", VA = "0x1214218")]
	public CerealConversationResolver()
	{
	}
}
[Token(Token = "0x200021B")]
public class ClownConversationResolver : ConversationResolver
{
	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool explained;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CollisionSoundExt clownObjRef;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int timesHit;

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x12217C8", Offset = "0x12217C8", VA = "0x12217C8")]
	public void StartClownExplain()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x1221C70", Offset = "0x1221C70", VA = "0x1221C70")]
	public void StartClownSuccess()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x1221CF8", Offset = "0x1221CF8", VA = "0x1221CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x1221D80", Offset = "0x1221D80", VA = "0x1221D80")]
	private void CheckObjRef()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x1221DA4", Offset = "0x1221DA4", VA = "0x1221DA4")]
	public ClownConversationResolver()
	{
	}
}
[Token(Token = "0x200021C")]
public class CoffeeConversationResolver : ConversationResolver
{
	[Token(Token = "0x200069E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3636C", Offset = "0xA3636C")]
	private sealed class <WaitAndPlayCoffee>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoffeeConversationResolver <>4__this;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string convo;

		[Token(Token = "0x1700051F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0x1223618", Offset = "0x1223618", VA = "0x1223618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000520")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CF4")]
			[Address(RVA = "0x1223680", Offset = "0x1223680", VA = "0x1223680", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CEF")]
		[Address(RVA = "0x12230C4", Offset = "0x12230C4", VA = "0x12230C4")]
		[DebuggerHidden]
		public <WaitAndPlayCoffee>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF0")]
		[Address(RVA = "0x12234DC", Offset = "0x12234DC", VA = "0x12234DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CF1")]
		[Address(RVA = "0x12234E0", Offset = "0x12234E0", VA = "0x12234E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0x1223620", Offset = "0x1223620", VA = "0x1223620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent coffeeSuccess;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent coffeeFail;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool forgetIt;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool doOnce;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine coffee;

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x1222FEC", Offset = "0x1222FEC", VA = "0x1222FEC")]
	public void WaitAndPlayconversation(string convo)
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x1223048", Offset = "0x1223048", VA = "0x1223048")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53088", Offset = "0xA53088")]
	private IEnumerator WaitAndPlayCoffee(string convo)
	{
		return null;
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x1222458", Offset = "0x1222458", VA = "0x1222458")]
	public bool StartCoffeeExplain()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x1222B68", Offset = "0x1222B68", VA = "0x1222B68")]
	public void StartCoffeeSuccess()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x1222C4C", Offset = "0x1222C4C", VA = "0x1222C4C")]
	public void StartCoffeeWrong()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x1222DE0", Offset = "0x1222DE0", VA = "0x1222DE0")]
	public void StartCoffeeMax()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x1222D58", Offset = "0x1222D58", VA = "0x1222D58")]
	public void StartCoffeeEmpty()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x1222550", Offset = "0x1222550", VA = "0x1222550")]
	public bool StartCoffeeExplainEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x12226F8", Offset = "0x12226F8", VA = "0x12226F8")]
	public bool StartCoffeeMachineExplainEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x12234D4", Offset = "0x12234D4", VA = "0x12234D4")]
	public CoffeeConversationResolver()
	{
	}
}
[Token(Token = "0x200021D")]
public class ConversationResolver : MonoBehaviour
{
	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool triggered;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	protected bool stopConvoReplay;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected ConversationTrigger resolverTrigger;

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x122F888", Offset = "0x122F888", VA = "0x122F888", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x122F918", Offset = "0x122F918", VA = "0x122F918", Slot = "5")]
	public virtual void TriggerResponse()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x122186C", Offset = "0x122186C", VA = "0x122186C")]
	protected bool IsIntroPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x1221DAC", Offset = "0x1221DAC", VA = "0x1221DAC")]
	public ConversationResolver()
	{
	}
}
[Token(Token = "0x200021E")]
public class DartboardConversationResolver : ConversationResolver
{
	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool explained;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool threwAway;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool hitClown;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool hitSam;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool hitMax;

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x123590C", Offset = "0x123590C", VA = "0x123590C")]
	public bool StartDartboardExplain()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x123726C", Offset = "0x123726C", VA = "0x123726C")]
	public void StartDartboardThrowAway()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x1236840", Offset = "0x1236840", VA = "0x1236840")]
	public void StartDartboardClown()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x12368D0", Offset = "0x12368D0", VA = "0x12368D0")]
	public void StartDartboardSam()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x1236960", Offset = "0x1236960", VA = "0x1236960")]
	public void StartDartboardMax()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x12372FC", Offset = "0x12372FC", VA = "0x12372FC")]
	public void StartDartboardSuccess()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x1236FF8", Offset = "0x1236FF8", VA = "0x1236FF8")]
	public void StartDartboardThrowMax()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x1237384", Offset = "0x1237384", VA = "0x1237384")]
	public DartboardConversationResolver()
	{
	}
}
[Token(Token = "0x200021F")]
public class DrawerConversationResolver : MonoBehaviour
{
	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x1321018", Offset = "0x1321018", VA = "0x1321018")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x132101C", Offset = "0x132101C", VA = "0x132101C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x1321020", Offset = "0x1321020", VA = "0x1321020")]
	public DrawerConversationResolver()
	{
	}
}
[Token(Token = "0x2000220")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32EC0", Offset = "0xA32EC0")]
public class DrawerOpenConversationResolver : MonoBehaviour
{
	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hasConversationPlayed;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BNG.Slider m_Slider;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ConversationListController _convoController;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_SliderPercentageOpen;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string m_ItemConversationID;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject m_ObjToEnable;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Animator m_AnimObj;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string animTrigger;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isAnimTrigger;

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x1321028", Offset = "0x1321028", VA = "0x1321028")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x13210B4", Offset = "0x13210B4", VA = "0x13210B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x1321298", Offset = "0x1321298", VA = "0x1321298")]
	public DrawerOpenConversationResolver()
	{
	}
}
[Token(Token = "0x2000221")]
public class IceCreamConversationResolver : ConversationResolver
{
	[Token(Token = "0x200069F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3637C", Offset = "0xA3637C")]
	private sealed class <TeleportAndStartIntro>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400299A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400299B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IceCreamConversationResolver <>4__this;

		[Token(Token = "0x17000521")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CF8")]
			[Address(RVA = "0x13B9CEC", Offset = "0x13B9CEC", VA = "0x13B9CEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000522")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0x13B9D54", Offset = "0x13B9D54", VA = "0x13B9D54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0x13B9998", Offset = "0x13B9998", VA = "0x13B9998")]
		[DebuggerHidden]
		public <TeleportAndStartIntro>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF6")]
		[Address(RVA = "0x13B9B4C", Offset = "0x13B9B4C", VA = "0x13B9B4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CF7")]
		[Address(RVA = "0x13B9B50", Offset = "0x13B9B50", VA = "0x13B9B50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0x13B9CF4", Offset = "0x13B9CF4", VA = "0x13B9CF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3638C", Offset = "0xA3638C")]
	private sealed class <TeleportAndStartSuccess>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IceCreamConversationResolver <>4__this;

		[Token(Token = "0x17000523")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CFE")]
			[Address(RVA = "0x13B9EFC", Offset = "0x13B9EFC", VA = "0x13B9EFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000524")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D00")]
			[Address(RVA = "0x13B9F64", Offset = "0x13B9F64", VA = "0x13B9F64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CFB")]
		[Address(RVA = "0x13B9ACC", Offset = "0x13B9ACC", VA = "0x13B9ACC")]
		[DebuggerHidden]
		public <TeleportAndStartSuccess>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002CFC")]
		[Address(RVA = "0x13B9D5C", Offset = "0x13B9D5C", VA = "0x13B9D5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CFD")]
		[Address(RVA = "0x13B9D60", Offset = "0x13B9D60", VA = "0x13B9D60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFF")]
		[Address(RVA = "0x13B9F04", Offset = "0x13B9F04", VA = "0x13B9F04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool explained;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject enableNext;

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x13B98A8", Offset = "0x13B98A8", VA = "0x13B98A8")]
	public void StartIceIntro()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x13B9928", Offset = "0x13B9928", VA = "0x13B9928")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA530EC", Offset = "0xA530EC")]
	private IEnumerator TeleportAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x13B99C4", Offset = "0x13B99C4", VA = "0x13B99C4")]
	public void StartIceHint()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x13B9A30", Offset = "0x13B9A30", VA = "0x13B9A30")]
	public void StartIceSuccess()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x13B9A5C", Offset = "0x13B9A5C", VA = "0x13B9A5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53150", Offset = "0xA53150")]
	private IEnumerator TeleportAndStartSuccess()
	{
		return null;
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x13B9AF8", Offset = "0x13B9AF8", VA = "0x13B9AF8")]
	public void EnableNext()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x13B9B44", Offset = "0x13B9B44", VA = "0x13B9B44")]
	public IceCreamConversationResolver()
	{
	}
}
[Token(Token = "0x2000222")]
public class ItemGrabConversationResolver : MonoBehaviour
{
	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable _grab;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _hasBeenGrabbed;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ConversationListController _convoController;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DialogueSystemController _dialogueController;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string m_ItemConversationID;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent triggerAction;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool usesConversationController;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool shouldInterruptIntro;

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x114B790", Offset = "0x114B790", VA = "0x114B790")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x114B850", Offset = "0x114B850", VA = "0x114B850")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x114BADC", Offset = "0x114BADC", VA = "0x114BADC")]
	public ItemGrabConversationResolver()
	{
	}
}
[Token(Token = "0x2000223")]
public class ItemLookAtConversationResolver : MonoBehaviour
{
	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_lookAtTime;

	[Token(Token = "0x4000DEB")]
	private const float m_fTotalLookAtTime = 3f;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isPlayerLookingAt;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool hasConversationPlayed;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ConversationListController _convoController;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string m_ItemConversationID;

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x114C484", Offset = "0x114C484", VA = "0x114C484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x114C4F8", Offset = "0x114C4F8", VA = "0x114C4F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x114C5CC", Offset = "0x114C5CC", VA = "0x114C5CC")]
	public void PlayerLookAt(bool isPlayerLooking)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x114C5D8", Offset = "0x114C5D8", VA = "0x114C5D8")]
	public ItemLookAtConversationResolver()
	{
	}
}
[Token(Token = "0x2000224")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32F24", Offset = "0xA32F24")]
public class ItemTouchConversationResolver : MonoBehaviour
{
	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ConversationListController _convoController;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string m_ItemConversationID;

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x114C5E0", Offset = "0x114C5E0", VA = "0x114C5E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x114C654", Offset = "0x114C654", VA = "0x114C654")]
	public void OnTouch()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x114C6F0", Offset = "0x114C6F0", VA = "0x114C6F0")]
	public ItemTouchConversationResolver()
	{
	}
}
[Token(Token = "0x2000225")]
public class KnockConversationResolver : ConversationResolver
{
	[Token(Token = "0x20006A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3639C", Offset = "0xA3639C")]
	private sealed class <WaitForKnock>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KnockConversationResolver <>4__this;

		[Token(Token = "0x17000525")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D04")]
			[Address(RVA = "0x114D734", Offset = "0x114D734", VA = "0x114D734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000526")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D06")]
			[Address(RVA = "0x114D79C", Offset = "0x114D79C", VA = "0x114D79C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D01")]
		[Address(RVA = "0x114D144", Offset = "0x114D144", VA = "0x114D144")]
		[DebuggerHidden]
		public <WaitForKnock>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002D02")]
		[Address(RVA = "0x114D5A8", Offset = "0x114D5A8", VA = "0x114D5A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D03")]
		[Address(RVA = "0x114D5AC", Offset = "0x114D5AC", VA = "0x114D5AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0x114D73C", Offset = "0x114D73C", VA = "0x114D73C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA363AC", Offset = "0xA363AC")]
	private sealed class <WaitAndUnlock>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KnockConversationResolver <>4__this;

		[Token(Token = "0x17000527")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D0A")]
			[Address(RVA = "0x114D538", Offset = "0x114D538", VA = "0x114D538", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000528")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D0C")]
			[Address(RVA = "0x114D5A0", Offset = "0x114D5A0", VA = "0x114D5A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0x114D1E0", Offset = "0x114D1E0", VA = "0x114D1E0")]
		[DebuggerHidden]
		public <WaitAndUnlock>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0x114D3E8", Offset = "0x114D3E8", VA = "0x114D3E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D09")]
		[Address(RVA = "0x114D3EC", Offset = "0x114D3EC", VA = "0x114D3EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D0B")]
		[Address(RVA = "0x114D540", Offset = "0x114D540", VA = "0x114D540", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA363BC", Offset = "0xA363BC")]
	private sealed class <WaitAndTrigger>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KnockConversationResolver <>4__this;

		[Token(Token = "0x17000529")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D10")]
			[Address(RVA = "0x114D378", Offset = "0x114D378", VA = "0x114D378", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D12")]
			[Address(RVA = "0x114D3E0", Offset = "0x114D3E0", VA = "0x114D3E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D0D")]
		[Address(RVA = "0x114D27C", Offset = "0x114D27C", VA = "0x114D27C")]
		[DebuggerHidden]
		public <WaitAndTrigger>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002D0E")]
		[Address(RVA = "0x114D2B0", Offset = "0x114D2B0", VA = "0x114D2B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D0F")]
		[Address(RVA = "0x114D2B4", Offset = "0x114D2B4", VA = "0x114D2B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0x114D380", Offset = "0x114D380", VA = "0x114D380", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CollisionSoundExt knockObjRef;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConversationTrigger triggerToAlter;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OfficeSceneManager m_OfficeSceneManager;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool doOnce;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine m_WaitForKnock;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int index;

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x114CD38", Offset = "0x114CD38", VA = "0x114CD38", Slot = "5")]
	public override void TriggerResponse()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x114CD40", Offset = "0x114CD40", VA = "0x114CD40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x114D09C", Offset = "0x114D09C", VA = "0x114D09C")]
	public void CompleteTask()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x114CED0", Offset = "0x114CED0", VA = "0x114CED0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA531B4", Offset = "0xA531B4")]
	private IEnumerator WaitForKnock()
	{
		return null;
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x114CF40", Offset = "0x114CF40", VA = "0x114CF40")]
	private void CheckObjRef()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x114D170", Offset = "0x114D170", VA = "0x114D170")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53218", Offset = "0xA53218")]
	private IEnumerator WaitAndUnlock()
	{
		return null;
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x114D20C", Offset = "0x114D20C", VA = "0x114D20C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5327C", Offset = "0xA5327C")]
	private IEnumerator WaitAndTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x114D2A8", Offset = "0x114D2A8", VA = "0x114D2A8")]
	public KnockConversationResolver()
	{
	}
}
[Token(Token = "0x2000226")]
public class LunchConversationResolver : ConversationResolver
{
	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool explainedOnce;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool forgetIt;

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x132FAE0", Offset = "0x132FAE0", VA = "0x132FAE0")]
	public void StartLunchExplain()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x132FB80", Offset = "0x132FB80", VA = "0x132FB80")]
	public void StartLunchNoStick()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x132FC10", Offset = "0x132FC10", VA = "0x132FC10")]
	public void StartLunchSuccess()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x132FC90", Offset = "0x132FC90", VA = "0x132FC90")]
	public void StartLunchWrong()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x132FD20", Offset = "0x132FD20", VA = "0x132FD20")]
	public LunchConversationResolver()
	{
	}
}
[Token(Token = "0x2000227")]
public class OfficeEndConversationResolver : ConversationResolver
{
	[Token(Token = "0x20006A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA363CC", Offset = "0xA363CC")]
	private sealed class <WaitAndPlayEnd>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OfficeEndConversationResolver <>4__this;

		[Token(Token = "0x1700052B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D16")]
			[Address(RVA = "0x1240A98", Offset = "0x1240A98", VA = "0x1240A98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D18")]
			[Address(RVA = "0x1240B00", Offset = "0x1240B00", VA = "0x1240B00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D13")]
		[Address(RVA = "0x12403B4", Offset = "0x12403B4", VA = "0x12403B4")]
		[DebuggerHidden]
		public <WaitAndPlayEnd>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002D14")]
		[Address(RVA = "0x1240854", Offset = "0x1240854", VA = "0x1240854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D15")]
		[Address(RVA = "0x1240858", Offset = "0x1240858", VA = "0x1240858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D17")]
		[Address(RVA = "0x1240AA0", Offset = "0x1240AA0", VA = "0x1240AA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA363DC", Offset = "0xA363DC")]
	private sealed class <WaitAndPlayDialogue>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OfficeEndConversationResolver <>4__this;

		[Token(Token = "0x40029AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fTime>5__2;

		[Token(Token = "0x40029AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <coffeeConvo>5__3;

		[Token(Token = "0x1700052D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D1C")]
			[Address(RVA = "0x12407E4", Offset = "0x12407E4", VA = "0x12407E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0x124084C", Offset = "0x124084C", VA = "0x124084C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D19")]
		[Address(RVA = "0x12403E0", Offset = "0x12403E0", VA = "0x12403E0")]
		[DebuggerHidden]
		public <WaitAndPlayDialogue>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002D1A")]
		[Address(RVA = "0x1240518", Offset = "0x1240518", VA = "0x1240518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D1B")]
		[Address(RVA = "0x124051C", Offset = "0x124051C", VA = "0x124051C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0x12407EC", Offset = "0x12407EC", VA = "0x12407EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool tasksCompleted;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool waitingForReady;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool didHitReady;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool didComplete;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int index;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool doOnce;

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x12401F8", Offset = "0x12401F8", VA = "0x12401F8", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x1240200", Offset = "0x1240200", VA = "0x1240200")]
	public void StartPreHeadset()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x1240314", Offset = "0x1240314", VA = "0x1240314")]
	public void StartPostHeadset()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x1240318", Offset = "0x1240318", VA = "0x1240318")]
	public void StartReadyPromptDialogue()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x1240344", Offset = "0x1240344", VA = "0x1240344")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA532E0", Offset = "0xA532E0")]
	private IEnumerator WaitAndPlayEnd()
	{
		return null;
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x12402A4", Offset = "0x12402A4", VA = "0x12402A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53344", Offset = "0xA53344")]
	private IEnumerator WaitAndPlayDialogue()
	{
		return null;
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x124040C", Offset = "0x124040C", VA = "0x124040C")]
	public void PlayNotReady()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x1240510", Offset = "0x1240510", VA = "0x1240510")]
	public OfficeEndConversationResolver()
	{
	}
}
[Token(Token = "0x2000228")]
public class PreIntroConversationResolver : ConversationResolver
{
	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool startTimer;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool continueNoDelay;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlayableDirector m_Timeline;

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x10B5678", Offset = "0x10B5678", VA = "0x10B5678")]
	public void StartMaxToSam()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x10B56E4", Offset = "0x10B56E4", VA = "0x10B56E4")]
	public void StartSamToMax()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x10B5794", Offset = "0x10B5794", VA = "0x10B5794")]
	public void StartSamBackToMax()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x10B5844", Offset = "0x10B5844", VA = "0x10B5844")]
	public void StartNoticePlayer()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x10B58F4", Offset = "0x10B58F4", VA = "0x10B58F4")]
	public void StartMaxHandOff()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x10B59A4", Offset = "0x10B59A4", VA = "0x10B59A4")]
	public void KillAndWait()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x10B5A54", Offset = "0x10B5A54", VA = "0x10B5A54")]
	public void StartDelayConvo()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x10B5B04", Offset = "0x10B5B04", VA = "0x10B5B04")]
	public void StartSuccess()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x10B5BB8", Offset = "0x10B5BB8", VA = "0x10B5BB8")]
	public void StartFail()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x10B5C6C", Offset = "0x10B5C6C", VA = "0x10B5C6C")]
	public void PauseTimeline()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x10B5D28", Offset = "0x10B5D28", VA = "0x10B5D28")]
	public void ContinueTimeline()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x10B5DEC", Offset = "0x10B5DEC", VA = "0x10B5DEC")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x10B5DF8", Offset = "0x10B5DF8", VA = "0x10B5DF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x10B5F28", Offset = "0x10B5F28", VA = "0x10B5F28")]
	public PreIntroConversationResolver()
	{
	}
}
[Token(Token = "0x2000229")]
public class RemoteLookAtConversationResolver : MonoBehaviour
{
	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x10BA8D8", Offset = "0x10BA8D8", VA = "0x10BA8D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x10BA99C", Offset = "0x10BA99C", VA = "0x10BA99C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x10BAA5C", Offset = "0x10BAA5C", VA = "0x10BAA5C")]
	public RemoteLookAtConversationResolver()
	{
	}
}
[Token(Token = "0x200022A")]
public class ShootingConversationResolver : ConversationResolver
{
	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hitClown;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool hitSam;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool hitMax;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool reachedClosetWithGun;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool reachedClosetNoGun;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool firstPickup;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private bool forgetIt;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int shootingIndex;

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x118B2EC", Offset = "0x118B2EC", VA = "0x118B2EC")]
	public void DetermineTaskState()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x118B37C", Offset = "0x118B37C", VA = "0x118B37C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x118B3B8", Offset = "0x118B3B8", VA = "0x118B3B8")]
	public void StartShootingExplain()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x118B2F0", Offset = "0x118B2F0", VA = "0x118B2F0")]
	public void StartShootingClosetGun()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x118B44C", Offset = "0x118B44C", VA = "0x118B44C")]
	public void StartShootingClosetNoGun()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x118B494", Offset = "0x118B494", VA = "0x118B494")]
	public void StartShootingSuccess()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x118B514", Offset = "0x118B514", VA = "0x118B514")]
	public void StartShootingHit()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x118B63C", Offset = "0x118B63C", VA = "0x118B63C")]
	public void StartShootingMiss()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x118B6D4", Offset = "0x118B6D4", VA = "0x118B6D4")]
	public void StartShootingClown()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x118B70C", Offset = "0x118B70C", VA = "0x118B70C")]
	public void StartShootingSam()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x118B79C", Offset = "0x118B79C", VA = "0x118B79C")]
	public void StartShootingMax()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x118B82C", Offset = "0x118B82C", VA = "0x118B82C")]
	public ShootingConversationResolver()
	{
	}
}
[Token(Token = "0x200022B")]
public class SnackConversationResolver : ConversationResolver
{
	[Token(Token = "0x20006A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA363EC", Offset = "0xA363EC")]
	private sealed class <TeleportAndStartIntro>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SnackConversationResolver <>4__this;

		[Token(Token = "0x1700052F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D22")]
			[Address(RVA = "0x11B4BF8", Offset = "0x11B4BF8", VA = "0x11B4BF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000530")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D24")]
			[Address(RVA = "0x11B4C60", Offset = "0x11B4C60", VA = "0x11B4C60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D1F")]
		[Address(RVA = "0x11B4900", Offset = "0x11B4900", VA = "0x11B4900")]
		[DebuggerHidden]
		public <TeleportAndStartIntro>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002D20")]
		[Address(RVA = "0x11B4A58", Offset = "0x11B4A58", VA = "0x11B4A58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D21")]
		[Address(RVA = "0x11B4A5C", Offset = "0x11B4A5C", VA = "0x11B4A5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0x11B4C00", Offset = "0x11B4C00", VA = "0x11B4C00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool explained;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject enableNext;

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x11B4850", Offset = "0x11B4850", VA = "0x11B4850")]
	public void StartSnackIntro()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x11B4890", Offset = "0x11B4890", VA = "0x11B4890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA533A8", Offset = "0xA533A8")]
	private IEnumerator TeleportAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x11B492C", Offset = "0x11B492C", VA = "0x11B492C")]
	public void StartSnackHint()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x11B4998", Offset = "0x11B4998", VA = "0x11B4998")]
	public void StartSnackSuccess()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x11B4A04", Offset = "0x11B4A04", VA = "0x11B4A04")]
	public void EnableNext()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x11B4A50", Offset = "0x11B4A50", VA = "0x11B4A50")]
	public SnackConversationResolver()
	{
	}
}
[Token(Token = "0x200022C")]
public class StoreHintsConversationResolver : ConversationResolver
{
	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x11B8AD4", Offset = "0x11B8AD4", VA = "0x11B8AD4")]
	public string SetCharacterHint()
	{
		return null;
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x11B8B3C", Offset = "0x11B8B3C", VA = "0x11B8B3C")]
	private string DetermineStoreProgression()
	{
		return null;
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x11B8C20", Offset = "0x11B8C20", VA = "0x11B8C20")]
	public StoreHintsConversationResolver()
	{
	}
}
[Token(Token = "0x200022D")]
public class StoreIntroConversationResolver : ConversationResolver
{
	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objToEnable;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject charToEnable;

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x11B87DC", Offset = "0x11B87DC", VA = "0x11B87DC")]
	public void EnableSpirit()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x11B8C28", Offset = "0x11B8C28", VA = "0x11B8C28")]
	public StoreIntroConversationResolver()
	{
	}
}
[Token(Token = "0x200022E")]
public class DamageFlash : MonoBehaviour
{
	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _anim;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SpriteRenderer _image;

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x1234FCC", Offset = "0x1234FCC", VA = "0x1234FCC")]
	public void FlashDamage(Color color)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x1235064", Offset = "0x1235064", VA = "0x1235064")]
	public DamageFlash()
	{
	}
}
[Token(Token = "0x200022F")]
public class DestroyCollider : MonoBehaviour
{
	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x131683C", Offset = "0x131683C", VA = "0x131683C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x1316894", Offset = "0x1316894", VA = "0x1316894")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x1316898", Offset = "0x1316898", VA = "0x1316898")]
	public void FindAllColliders()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x1316AE8", Offset = "0x1316AE8", VA = "0x1316AE8")]
	public DestroyCollider()
	{
	}
}
[Token(Token = "0x2000230")]
public class ItemGrabSequenceEvent : MonoBehaviour
{
	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable _grab;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _hasBeenGrabbed;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _hasBeenTriggered;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string m_ItemConversationID;

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x114BAEC", Offset = "0x114BAEC", VA = "0x114BAEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x114BB44", Offset = "0x114BB44", VA = "0x114BB44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x114BD54", Offset = "0x114BD54", VA = "0x114BD54")]
	public ItemGrabSequenceEvent()
	{
	}
}
[Token(Token = "0x2000231")]
public class DistanceGrabBreak : MonoBehaviour
{
	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Grabbable grab;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform testPoint;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float breakDistance;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Grabber _grabber;

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x132022C", Offset = "0x132022C", VA = "0x132022C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x132030C", Offset = "0x132030C", VA = "0x132030C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x13204AC", Offset = "0x13204AC", VA = "0x13204AC")]
	public DistanceGrabBreak()
	{
	}
}
[Token(Token = "0x2000232")]
public class Door : MonoBehaviour
{
	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HingeJoint m_DoorJoint;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DoorHandle m_DoorHandles;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip DoorClose;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip DoorOpen;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody m_DoorRigidBody;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent doorOpenEvent;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MinDegrees;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float MaxDegrees;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float closedDegrees;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float doorPercentage;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool doorClosed;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool pastThreshold;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool isReleasing;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[SerializeField]
	private bool m_DoubleSidedDoor;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	public bool isLockedDoor;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public AudioSource lockedDoor;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Collider m_DoorBlocker;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected InputBridge input;

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x1320734", Offset = "0x1320734", VA = "0x1320734")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x1320838", Offset = "0x1320838", VA = "0x1320838")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x1320DC8", Offset = "0x1320DC8", VA = "0x1320DC8")]
	public Door()
	{
	}
}
[Token(Token = "0x2000233")]
public class DoorHandle : MonoBehaviour
{
	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Grabbable[] m_CheckedGrabbed;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody m_DoorRigidBody;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Door m_Door;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool isRoachDoor;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HingeJoint m_DoorHinge;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool beingHeld;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider _doorCollision;

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x1320DEC", Offset = "0x1320DEC", VA = "0x1320DEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x1320E44", Offset = "0x1320E44", VA = "0x1320E44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x1320CDC", Offset = "0x1320CDC", VA = "0x1320CDC")]
	public bool CheckIfGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x1320D48", Offset = "0x1320D48", VA = "0x1320D48")]
	public ControllerHand GetGrabberHand()
	{
		return default(ControllerHand);
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x1320F54", Offset = "0x1320F54", VA = "0x1320F54")]
	public DoorHandle()
	{
	}
}
[Token(Token = "0x2000234")]
public class FaceAndReflect : MonoBehaviour
{
	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _t;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _target;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _reflection;

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x1253844", Offset = "0x1253844", VA = "0x1253844")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x125386C", Offset = "0x125386C", VA = "0x125386C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x12538EC", Offset = "0x12538EC", VA = "0x12538EC")]
	public FaceAndReflect()
	{
	}
}
[Token(Token = "0x2000235")]
public class HeadsetFaceHelper : MonoBehaviour
{
	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_Headset;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _hasTriggered;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool shouldAttach;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject eyeCenter;

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x11A6C0C", Offset = "0x11A6C0C", VA = "0x11A6C0C")]
	public void DisableHeadset()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x11A6E84", Offset = "0x11A6E84", VA = "0x11A6E84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x11A6FE4", Offset = "0x11A6FE4", VA = "0x11A6FE4")]
	public void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x11A70D8", Offset = "0x11A70D8", VA = "0x11A70D8")]
	private void OnCollisionStay(Collision collider)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x11A71CC", Offset = "0x11A71CC", VA = "0x11A71CC")]
	private void OnCollisionEnter(Collision collider)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x11A72C0", Offset = "0x11A72C0", VA = "0x11A72C0")]
	private void OnCollisionExit(Collision collider)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x11A73B4", Offset = "0x11A73B4", VA = "0x11A73B4")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x11A74A8", Offset = "0x11A74A8", VA = "0x11A74A8")]
	private void OnTriggerStay(Collider collider)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x11A759C", Offset = "0x11A759C", VA = "0x11A759C")]
	public HeadsetFaceHelper()
	{
	}
}
[Token(Token = "0x2000236")]
public class HoverboardHelper : MonoBehaviour
{
	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_AttachJoint;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 localPos;

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x1595A08", Offset = "0x1595A08", VA = "0x1595A08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x1595A44", Offset = "0x1595A44", VA = "0x1595A44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x1595B30", Offset = "0x1595B30", VA = "0x1595B30")]
	public HoverboardHelper()
	{
	}
}
[Token(Token = "0x2000237")]
public class IgnoreCollision : MonoBehaviour
{
	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x1145D80", Offset = "0x1145D80", VA = "0x1145D80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x1145E94", Offset = "0x1145E94", VA = "0x1145E94")]
	public IgnoreCollision()
	{
	}
}
[Token(Token = "0x2000238")]
public class IgnorePlayerCollision : MonoBehaviour
{
	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x1145E9C", Offset = "0x1145E9C", VA = "0x1145E9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x1145EA0", Offset = "0x1145EA0", VA = "0x1145EA0")]
	public IgnorePlayerCollision()
	{
	}
}
[Token(Token = "0x2000239")]
public class ItemTransferTrigger : MonoBehaviour
{
	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Character _character;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Creature _creature;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _holdPoint;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string[] _itemNames;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _disableOnGrab;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent _grabCallback;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private string _callbackItemName;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float _callbackDelay;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _itemT;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool _applyCorrection;

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x114C6F8", Offset = "0x114C6F8", VA = "0x114C6F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x114C7DC", Offset = "0x114C7DC", VA = "0x114C7DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x114CB1C", Offset = "0x114CB1C", VA = "0x114CB1C")]
	private void TriggerCallback()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x114CB38", Offset = "0x114CB38", VA = "0x114CB38")]
	public ItemTransferTrigger()
	{
	}
}
[Token(Token = "0x200023A")]
public class KnifeGrabHelper : MonoBehaviour
{
	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable grabber;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasBeenGrabbed;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float timer;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool startTimer;

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x114CB54", Offset = "0x114CB54", VA = "0x114CB54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x114CBD8", Offset = "0x114CBD8", VA = "0x114CBD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x114CD2C", Offset = "0x114CD2C", VA = "0x114CD2C")]
	public KnifeGrabHelper()
	{
	}
}
[Token(Token = "0x200023B")]
public class LookAtTarget : MonoBehaviour
{
	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LookAtIK _lookAtIK;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _forceNonIK;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool _lookAtTarget;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _maxAngle;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _maxVert;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _minVert;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _rotateSmoothness;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _smoothNeckOrigin;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _lookTarget;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform _neckBone;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion _nbr;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion _originRot;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool _useLimitQuat;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float _minX;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float _maxX;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float _minY;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float _maxY;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float _minZ;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float _maxZ;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float _minW;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float _maxW;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private bool _useAnimVersion;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Animator _anim;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform _animLookPoint;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private string _verticalValueName;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _currentVerticalValue;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private float _lookUpLimit;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float _lookDownLimit;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string _horizontalValueName;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _currentHorizontalValue;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float _lookLeftRightLimit;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float _animLookAtSpeed;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool _invertAnimVert;

	[Token(Token = "0x170000B2")]
	public bool lookAtTarget
	{
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x132D248", Offset = "0x132D248", VA = "0x132D248")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x132D190", Offset = "0x132D190", VA = "0x132D190")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public float maxAngle
	{
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x132D250", Offset = "0x132D250", VA = "0x132D250")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B4")]
	public bool smoothNeckOrigin
	{
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x132D264", Offset = "0x132D264", VA = "0x132D264")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x132D258", Offset = "0x132D258", VA = "0x132D258")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public Transform lookTarget
	{
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x132D26C", Offset = "0x132D26C", VA = "0x132D26C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B6")]
	public bool hasLookTarget
	{
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x132D274", Offset = "0x132D274", VA = "0x132D274")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x132D184", Offset = "0x132D184", VA = "0x132D184")]
	public void DisableLookAt()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x132D2E4", Offset = "0x132D2E4", VA = "0x132D2E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x132D3F8", Offset = "0x132D3F8", VA = "0x132D3F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x132D014", Offset = "0x132D014", VA = "0x132D014")]
	public void SetLookTarget(Transform lookTarget)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x132DF14", Offset = "0x132DF14", VA = "0x132DF14")]
	public void ClearLookTarget()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x132DFC0", Offset = "0x132DFC0", VA = "0x132DFC0")]
	public void AdjustRotationSmoothness(float speed = 5f)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x132DFC8", Offset = "0x132DFC8", VA = "0x132DFC8")]
	public void SetMinMaxVertValues(float min, float max)
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x132DFD0", Offset = "0x132DFD0", VA = "0x132DFD0")]
	public void ForceUpdateNeckForward()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x132D9E0", Offset = "0x132D9E0", VA = "0x132D9E0")]
	public void LookTowardsTarget()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x132E008", Offset = "0x132E008", VA = "0x132E008")]
	public void SmoothNeckOrigin()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x132E144", Offset = "0x132E144", VA = "0x132E144")]
	public bool isApproximate(Quaternion left, Quaternion right, float fPrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x132D414", Offset = "0x132D414", VA = "0x132D414")]
	public void AnimLookTowardsTarget()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x132E24C", Offset = "0x132E24C", VA = "0x132E24C")]
	private float AngleInPlane(Transform from, Vector3 to, Vector3 planeNormal)
	{
		return default(float);
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x132E380", Offset = "0x132E380", VA = "0x132E380")]
	private Vector3 Project(Vector3 v, Vector3 onto)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x132E48C", Offset = "0x132E48C", VA = "0x132E48C")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x200023C")]
public class MaterialRandomizer : MonoBehaviour
{
	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x1330004", Offset = "0x1330004", VA = "0x1330004")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x13300E0", Offset = "0x13300E0", VA = "0x13300E0")]
	public MaterialRandomizer()
	{
	}
}
[Token(Token = "0x200023D")]
public class MaterialSwap : MonoBehaviour
{
	[Token(Token = "0x20006A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA363FC", Offset = "0xA363FC")]
	private sealed class <FadeTo>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialSwap <>4__this;

		[Token(Token = "0x40029B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x40029B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__2;

		[Token(Token = "0x40029B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool <goingDown>5__3;

		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__4;

		[Token(Token = "0x17000531")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D28")]
			[Address(RVA = "0x133061C", Offset = "0x133061C", VA = "0x133061C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000532")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0x1330684", Offset = "0x1330684", VA = "0x1330684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D25")]
		[Address(RVA = "0x1330270", Offset = "0x1330270", VA = "0x1330270")]
		[DebuggerHidden]
		public <FadeTo>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002D26")]
		[Address(RVA = "0x13302A4", Offset = "0x13302A4", VA = "0x13302A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D27")]
		[Address(RVA = "0x13302A8", Offset = "0x13302A8", VA = "0x13302A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D29")]
		[Address(RVA = "0x1330624", Offset = "0x1330624", VA = "0x1330624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer thisMesh;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material originalMat;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material alternateMat;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool usingAlt;

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x13300E8", Offset = "0x13300E8", VA = "0x13300E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x133015C", Offset = "0x133015C", VA = "0x133015C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x1330168", Offset = "0x1330168", VA = "0x1330168")]
	public void SwapMat(int state)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x13301C4", Offset = "0x13301C4", VA = "0x13301C4")]
	public void LerpAlpha(float time)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x13301F0", Offset = "0x13301F0", VA = "0x13301F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5340C", Offset = "0xA5340C")]
	private IEnumerator FadeTo(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x133029C", Offset = "0x133029C", VA = "0x133029C")]
	public MaterialSwap()
	{
	}
}
[Token(Token = "0x200023E")]
public class MaxSplat : MonoBehaviour
{
	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x1331830", Offset = "0x1331830", VA = "0x1331830")]
	public void WaitAndComplete()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x13318CC", Offset = "0x13318CC", VA = "0x13318CC")]
	public MaxSplat()
	{
	}
}
[Token(Token = "0x200023F")]
public class NPCCharacterHelper : MonoBehaviour
{
	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CharacterFollow playerFollow;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool triggered;

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x133A9E8", Offset = "0x133A9E8", VA = "0x133A9E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x133AADC", Offset = "0x133AADC", VA = "0x133AADC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x133ABA8", Offset = "0x133ABA8", VA = "0x133ABA8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x133ABDC", Offset = "0x133ABDC", VA = "0x133ABDC")]
	public NPCCharacterHelper()
	{
	}
}
[Token(Token = "0x2000240")]
public class ForceObjectMinHeight : MonoBehaviour
{
	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _checkPoint;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _t;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float resetCheckHeight;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float resetHeight;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool flatten;

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x125D7E0", Offset = "0x125D7E0", VA = "0x125D7E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x125D808", Offset = "0x125D808", VA = "0x125D808")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x125D968", Offset = "0x125D968", VA = "0x125D968")]
	public ForceObjectMinHeight()
	{
	}
}
[Token(Token = "0x2000241")]
public class ObjectForceDrop : MonoBehaviour
{
	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputBridge _input;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GrabbableExt _grab;

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x12AB594", Offset = "0x12AB594", VA = "0x12AB594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x12AB618", Offset = "0x12AB618", VA = "0x12AB618")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x12AB6AC", Offset = "0x12AB6AC", VA = "0x12AB6AC")]
	public ObjectForceDrop()
	{
	}
}
[Token(Token = "0x2000242")]
public class PlayerGrabPhysicsLock : MonoBehaviour
{
	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable _grab;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _wasHeld;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider[] _colliders;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<Collider> _exceptedColliders;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _reenableOnRelease;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool _allowGrabbers;

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x113E200", Offset = "0x113E200", VA = "0x113E200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x113E274", Offset = "0x113E274", VA = "0x113E274")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x113E2DC", Offset = "0x113E2DC", VA = "0x113E2DC")]
	private void EnableInteractions(bool enable)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x113E550", Offset = "0x113E550", VA = "0x113E550")]
	public PlayerGrabPhysicsLock()
	{
	}
}
[Token(Token = "0x2000243")]
public class RotationUnlock : MonoBehaviour
{
	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _maxAngleVelocity;

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x118032C", Offset = "0x118032C", VA = "0x118032C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x11803DC", Offset = "0x11803DC", VA = "0x11803DC")]
	public RotationUnlock()
	{
	}
}
[Token(Token = "0x2000244")]
public class PreIntroManager : MonoBehaviour
{
	[Token(Token = "0x20006A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3640C", Offset = "0xA3640C")]
	private sealed class <WaitAndKill>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PreIntroManager <>4__this;

		[Token(Token = "0x17000533")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D2E")]
			[Address(RVA = "0x10B63E0", Offset = "0x10B63E0", VA = "0x10B63E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000534")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D30")]
			[Address(RVA = "0x10B6448", Offset = "0x10B6448", VA = "0x10B6448", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D2B")]
		[Address(RVA = "0x10B62C0", Offset = "0x10B62C0", VA = "0x10B62C0")]
		[DebuggerHidden]
		public <WaitAndKill>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002D2C")]
		[Address(RVA = "0x10B62F4", Offset = "0x10B62F4", VA = "0x10B62F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D2D")]
		[Address(RVA = "0x10B62F8", Offset = "0x10B62F8", VA = "0x10B62F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D2F")]
		[Address(RVA = "0x10B63E8", Offset = "0x10B63E8", VA = "0x10B63E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PreIntroManager _instance;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] originalRigs;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] preRigs;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject timelineObj;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoxCollider introTrigger;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource m_BombFuseSFX;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource m_IntroMusic;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource m_OfficeMusic;

	[Token(Token = "0x170000B7")]
	public static PreIntroManager instance
	{
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x10B5F30", Offset = "0x10B5F30", VA = "0x10B5F30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x10B5F80", Offset = "0x10B5F80", VA = "0x10B5F80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x10B5FD4", Offset = "0x10B5FD4", VA = "0x10B5FD4")]
	public void EnablePreIntro()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x10B5FD8", Offset = "0x10B5FD8", VA = "0x10B5FD8")]
	public void DisablePreIntro()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x10B5FDC", Offset = "0x10B5FDC", VA = "0x10B5FDC")]
	public void EnablePreIntroSequence()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x10B5FFC", Offset = "0x10B5FFC", VA = "0x10B5FFC")]
	public void DisablePreIntroFail()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x10B6078", Offset = "0x10B6078", VA = "0x10B6078")]
	public void DisablePreIntroSuccess()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x10B6224", Offset = "0x10B6224", VA = "0x10B6224")]
	public void StartWaitAndKill()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x10B6250", Offset = "0x10B6250", VA = "0x10B6250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53470", Offset = "0xA53470")]
	public IEnumerator WaitAndKill()
	{
		return null;
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x10B62EC", Offset = "0x10B62EC", VA = "0x10B62EC")]
	public PreIntroManager()
	{
	}
}
[Token(Token = "0x2000245")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA32F88", Offset = "0xA32F88")]
public class RotationDriver : MonoBehaviour
{
	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_ObjToRotate;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_TestObject;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Grabbable m_Grababble;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Grabber m_Hand;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_TwistSpeed;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_TwistAmount;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_StartedGrab;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool rotationEnabled;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion initRot;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion lastRot;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 initHandUp;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 lastHandUp;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 lastPos;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 initUp;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 crossProduct;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float MINROT;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float MAXROT;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool rotatingLeft;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[SerializeField]
	private bool _xRot;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	[SerializeField]
	private bool _zRot;

	[Token(Token = "0x4000E9D")]
	private const float MaxAngle = 60f;

	[Token(Token = "0x4000E9E")]
	private const float DeadZone = 0.2f;

	[Token(Token = "0x4000E9F")]
	private const float PitchAngleOffset = 45f;

	[Token(Token = "0x170000B8")]
	public bool xRotation
	{
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x117FAB8", Offset = "0x117FAB8", VA = "0x117FAB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B9")]
	public bool zRotation
	{
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x117FAC0", Offset = "0x117FAC0", VA = "0x117FAC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BA")]
	private OVRInput.Controller Controller
	{
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x117FB20", Offset = "0x117FB20", VA = "0x117FB20")]
		get
		{
			return default(OVRInput.Controller);
		}
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x117FAC8", Offset = "0x117FAC8", VA = "0x117FAC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x117FBEC", Offset = "0x117FBEC", VA = "0x117FBEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x117FDC4", Offset = "0x117FDC4", VA = "0x117FDC4")]
	public void CalculateYawPitchRoll(Quaternion rotation, out float yaw, out float pitch, out float roll)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x1180304", Offset = "0x1180304", VA = "0x1180304")]
	public RotationDriver()
	{
	}
}
[Token(Token = "0x2000246")]
public class SFXSequence : MonoBehaviour
{
	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SFXPiece> sfx;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _index;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool playOnAwake;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool playingSFX;

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x1180850", Offset = "0x1180850", VA = "0x1180850")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x1180918", Offset = "0x1180918", VA = "0x1180918")]
	public void StartPlaying()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x1180860", Offset = "0x1180860", VA = "0x1180860")]
	private void PlayNext()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x118092C", Offset = "0x118092C", VA = "0x118092C")]
	private void TriggerSFX()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x1180A3C", Offset = "0x1180A3C", VA = "0x1180A3C")]
	public SFXSequence()
	{
	}
}
[Serializable]
[Token(Token = "0x2000247")]
public class SFXPiece
{
	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioSource audio;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayBefore;

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x1180848", Offset = "0x1180848", VA = "0x1180848")]
	public SFXPiece()
	{
	}
}
[Token(Token = "0x2000248")]
public class SceneLoadHelper : MonoBehaviour
{
	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string sceneToLoad;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool triggerOnce;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool shouldCompleteLevel;

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x11843C8", Offset = "0x11843C8", VA = "0x11843C8")]
	public void LoadNextScene()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x118484C", Offset = "0x118484C", VA = "0x118484C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x11849E8", Offset = "0x11849E8", VA = "0x11849E8")]
	public SceneLoadHelper()
	{
	}
}
[Token(Token = "0x2000249")]
public class SelectiveIgnoreCollision : MonoBehaviour
{
	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider[] _setOne;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider[] _setTwo;

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x1186F90", Offset = "0x1186F90", VA = "0x1186F90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x11870E4", Offset = "0x11870E4", VA = "0x11870E4")]
	public SelectiveIgnoreCollision()
	{
	}
}
[Token(Token = "0x200024A")]
public class SimpleObjectRef : MonoBehaviour
{
	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject reference;

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x11AE354", Offset = "0x11AE354", VA = "0x11AE354")]
	public SimpleObjectRef()
	{
	}
}
[Token(Token = "0x200024B")]
public class ThrowVectorCancel : MonoBehaviour
{
	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ThrowVectorCancel _instance;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float multiplier;

	[Token(Token = "0x170000BB")]
	public static bool ADJUST_ENABLED
	{
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x10ECB6C", Offset = "0x10ECB6C", VA = "0x10ECB6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BC")]
	public static float MULTIPLIER
	{
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x10ECBE8", Offset = "0x10ECBE8", VA = "0x10ECBE8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x10ECC50", Offset = "0x10ECC50", VA = "0x10ECC50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x10ECCA4", Offset = "0x10ECCA4", VA = "0x10ECCA4")]
	public ThrowVectorCancel()
	{
	}
}
[Token(Token = "0x200024C")]
public class TocksAnimReceiver : MonoBehaviour
{
	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TeddyTocks tocks;

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x10F0A58", Offset = "0x10F0A58", VA = "0x10F0A58")]
	public void SignalDroneWave()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x10F0A70", Offset = "0x10F0A70", VA = "0x10F0A70")]
	public TocksAnimReceiver()
	{
	}
}
[Token(Token = "0x200024D")]
public interface iStateObject
{
	[Token(Token = "0x170000BD")]
	bool registered
	{
		[Token(Token = "0x6000D57")]
		get;
		[Token(Token = "0x6000D58")]
		set;
	}

	[Token(Token = "0x170000BE")]
	string loadDataString
	{
		[Token(Token = "0x6000D59")]
		get;
		[Token(Token = "0x6000D5A")]
		set;
	}

	[Token(Token = "0x170000BF")]
	List<Rigidbody> objRigidbody
	{
		[Token(Token = "0x6000D5B")]
		get;
		[Token(Token = "0x6000D5C")]
		set;
	}

	[Token(Token = "0x6000D5D")]
	void InitDefaults();

	[Token(Token = "0x6000D5E")]
	void InitRigidbody();

	[Token(Token = "0x6000D5F")]
	void RestoreObject();

	[Token(Token = "0x6000D60")]
	void ResetObject();

	[Token(Token = "0x6000D61")]
	void ResetRigidbody();

	[Token(Token = "0x6000D62")]
	void RegisterObject();

	[Token(Token = "0x6000D63")]
	void UnregisterObject();

	[Token(Token = "0x6000D64")]
	void UpdateObjectData();

	[Token(Token = "0x6000D65")]
	string GatherStateData();

	[Token(Token = "0x6000D66")]
	void LoadObjectData();
}
[Token(Token = "0x200024E")]
public interface iMicrowavable
{
	[Token(Token = "0x170000C0")]
	float microwaveTime
	{
		[Token(Token = "0x6000D67")]
		get;
		[Token(Token = "0x6000D68")]
		set;
	}

	[Token(Token = "0x170000C1")]
	bool hasBeenMicrowaved
	{
		[Token(Token = "0x6000D69")]
		get;
		[Token(Token = "0x6000D6A")]
		set;
	}

	[Token(Token = "0x6000D6B")]
	void FinishedMicrowaving();
}
[Token(Token = "0x200024F")]
public interface iStickable
{
	[Token(Token = "0x170000C2")]
	bool sticked
	{
		[Token(Token = "0x6000D6C")]
		get;
		[Token(Token = "0x6000D6D")]
		set;
	}

	[Token(Token = "0x170000C3")]
	bool completedCombine
	{
		[Token(Token = "0x6000D6E")]
		get;
		[Token(Token = "0x6000D6F")]
		set;
	}

	[Token(Token = "0x170000C4")]
	bool itemConfiguredCorrectly
	{
		[Token(Token = "0x6000D70")]
		get;
		[Token(Token = "0x6000D71")]
		set;
	}

	[Token(Token = "0x6000D72")]
	void AddStick(GameObject stick);

	[Token(Token = "0x6000D73")]
	void RemoveStick(GameObject stick);

	[Token(Token = "0x6000D74")]
	void CombineItems();
}
[Token(Token = "0x2000250")]
public class AchievementManager
{
	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool[] m_OfficeAchievements;

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x128E264", Offset = "0x128E264", VA = "0x128E264")]
	public static void ResetOfficeAchievements()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x128E330", Offset = "0x128E330", VA = "0x128E330")]
	public static void AchievementSuccessCheck()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x128E564", Offset = "0x128E564", VA = "0x128E564")]
	public static void PlayerGrabbedMoonRock()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x128E5F0", Offset = "0x128E5F0", VA = "0x128E5F0")]
	public static void PlayerPlayedRecordPlayer()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x128E680", Offset = "0x128E680", VA = "0x128E680")]
	public static void PlayerTriggeredRat()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x128E710", Offset = "0x128E710", VA = "0x128E710")]
	public static void PlayerGrabbedScrumpos()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x128E7A0", Offset = "0x128E7A0", VA = "0x128E7A0")]
	internal static void PlayerGrabbedAquabearium()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x128E830", Offset = "0x128E830", VA = "0x128E830")]
	public static void PlayerGrabbedDills()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x128E8C0", Offset = "0x128E8C0", VA = "0x128E8C0")]
	public static void PlayerUsedPhone()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x128E950", Offset = "0x128E950", VA = "0x128E950")]
	public static void UsedListeningCup()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x128E9E0", Offset = "0x128E9E0", VA = "0x128E9E0")]
	public static void PlayedAnsweringMachine()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x128EA70", Offset = "0x128EA70", VA = "0x128EA70")]
	public static void PlayerTriggeredHornets()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x128E4D0", Offset = "0x128E4D0", VA = "0x128E4D0")]
	public static void UnlockAchievement(Achievement achievement)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x128EB00", Offset = "0x128EB00", VA = "0x128EB00")]
	public static void UpdateAchievementProgress(Achievement achievement, ulong progress = 1uL)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x128EB9C", Offset = "0x128EB9C", VA = "0x128EB9C")]
	public AchievementManager()
	{
	}
}
[Token(Token = "0x2000251")]
public enum Achievement
{
	[Token(Token = "0x4000EB1")]
	None,
	[Token(Token = "0x4000EB2")]
	Global_A01,
	[Token(Token = "0x4000EB3")]
	TitleScreen_A02,
	[Token(Token = "0x4000EB4")]
	Prologue_B01,
	[Token(Token = "0x4000EB5")]
	Prologue_B02,
	[Token(Token = "0x4000EB6")]
	Prologue_B03,
	[Token(Token = "0x4000EB7")]
	Office_C01,
	[Token(Token = "0x4000EB8")]
	Office_C02,
	[Token(Token = "0x4000EB9")]
	Office_C03,
	[Token(Token = "0x4000EBA")]
	Office_C04,
	[Token(Token = "0x4000EBB")]
	ParkIntro_D01,
	[Token(Token = "0x4000EBC")]
	CircleOfCarnage_E01,
	[Token(Token = "0x4000EBD")]
	BombsAway_F01,
	[Token(Token = "0x4000EBE")]
	VoyageOfPain_G01,
	[Token(Token = "0x4000EBF")]
	VoyageOfPain_G02,
	[Token(Token = "0x4000EC0")]
	VoyageOfPain_G03,
	[Token(Token = "0x4000EC1")]
	VoyageOfPain_G04,
	[Token(Token = "0x4000EC2")]
	VoyageOfPain_G05,
	[Token(Token = "0x4000EC3")]
	TeddyTocks_H01,
	[Token(Token = "0x4000EC4")]
	ParkIntro_I01,
	[Token(Token = "0x4000EC5")]
	FizzBall_J01,
	[Token(Token = "0x4000EC6")]
	Fizzball_J02,
	[Token(Token = "0x4000EC7")]
	GetAClue_K01,
	[Token(Token = "0x4000EC8")]
	TunnelOfToughLove_L01,
	[Token(Token = "0x4000EC9")]
	Nutrihole_N01,
	[Token(Token = "0x4000ECA")]
	ParkIntro_O01,
	[Token(Token = "0x4000ECB")]
	SkyPatrol_P01,
	[Token(Token = "0x4000ECC")]
	SkyPatrol_P02,
	[Token(Token = "0x4000ECD")]
	NoFunHouse_Q01,
	[Token(Token = "0x4000ECE")]
	NoFunHouse_Q02,
	[Token(Token = "0x4000ECF")]
	NoFunHouse_Q03,
	[Token(Token = "0x4000ED0")]
	MonsterWhisperer_R01,
	[Token(Token = "0x4000ED1")]
	MonsterWhisperer_R02,
	[Token(Token = "0x4000ED2")]
	FauxGrad_S01,
	[Token(Token = "0x4000ED3")]
	FauxGrad_S02,
	[Token(Token = "0x4000ED4")]
	EntertheNanoverse_T01,
	[Token(Token = "0x4000ED5")]
	SecretMeetingExt_U01,
	[Token(Token = "0x4000ED6")]
	SecretMeetingInt_V01,
	[Token(Token = "0x4000ED7")]
	SecretMeetingInt_V02,
	[Token(Token = "0x4000ED8")]
	SecretMeetingInt_V03,
	[Token(Token = "0x4000ED9")]
	EscapetheNanoverse_W01,
	[Token(Token = "0x4000EDA")]
	StreetShowdown_X01,
	[Token(Token = "0x4000EDB")]
	StreetShowdown_X02,
	[Token(Token = "0x4000EDC")]
	Graduation_Y01,
	[Token(Token = "0x4000EDD")]
	Graduation_Y02,
	[Token(Token = "0x4000EDE")]
	Graduation_Y03
}
[Token(Token = "0x2000252")]
public class ApplicationManager : MonoBehaviour
{
	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x1297D2C", Offset = "0x1297D2C", VA = "0x1297D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x1297DA8", Offset = "0x1297DA8", VA = "0x1297DA8")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x1297E08", Offset = "0x1297E08", VA = "0x1297E08")]
	public ApplicationManager()
	{
	}
}
[Token(Token = "0x2000253")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x20006A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3641C", Offset = "0xA3641C")]
	private sealed class <WaitAndFadeNoise>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fVolume;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <volume>5__3;

		[Token(Token = "0x17000535")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D34")]
			[Address(RVA = "0x129D6E0", Offset = "0x129D6E0", VA = "0x129D6E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000536")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D36")]
			[Address(RVA = "0x129D748", Offset = "0x129D748", VA = "0x129D748", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D31")]
		[Address(RVA = "0x129C220", Offset = "0x129C220", VA = "0x129C220")]
		[DebuggerHidden]
		public <WaitAndFadeNoise>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002D32")]
		[Address(RVA = "0x129D518", Offset = "0x129D518", VA = "0x129D518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D33")]
		[Address(RVA = "0x129D51C", Offset = "0x129D51C", VA = "0x129D51C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D35")]
		[Address(RVA = "0x129D6E8", Offset = "0x129D6E8", VA = "0x129D6E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3642C", Offset = "0xA3642C")]
	private sealed class <WaitAndFadeMusic>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fVolume;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x40029C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x40029C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <volume>5__3;

		[Token(Token = "0x17000537")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D3A")]
			[Address(RVA = "0x129D4A8", Offset = "0x129D4A8", VA = "0x129D4A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000538")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D3C")]
			[Address(RVA = "0x129D510", Offset = "0x129D510", VA = "0x129D510", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D37")]
		[Address(RVA = "0x129C2C8", Offset = "0x129C2C8", VA = "0x129C2C8")]
		[DebuggerHidden]
		public <WaitAndFadeMusic>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002D38")]
		[Address(RVA = "0x129D2E0", Offset = "0x129D2E0", VA = "0x129D2E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D39")]
		[Address(RVA = "0x129D2E4", Offset = "0x129D2E4", VA = "0x129D2E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D3B")]
		[Address(RVA = "0x129D4B0", Offset = "0x129D4B0", VA = "0x129D4B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3643C", Offset = "0xA3643C")]
	private sealed class <FadeFromTrackToNext>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeOutTime;

		[Token(Token = "0x40029CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioManager <>4__this;

		[Token(Token = "0x40029CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string trackName;

		[Token(Token = "0x40029CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeInTime;

		[Token(Token = "0x40029CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float volume;

		[Token(Token = "0x40029D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <fadeCounter>5__2;

		[Token(Token = "0x40029D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <audioStart>5__3;

		[Token(Token = "0x17000539")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D40")]
			[Address(RVA = "0x129D0F8", Offset = "0x129D0F8", VA = "0x129D0F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D42")]
			[Address(RVA = "0x129D160", Offset = "0x129D160", VA = "0x129D160", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D3D")]
		[Address(RVA = "0x129C498", Offset = "0x129C498", VA = "0x129C498")]
		[DebuggerHidden]
		public <FadeFromTrackToNext>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0x129CE88", Offset = "0x129CE88", VA = "0x129CE88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D3F")]
		[Address(RVA = "0x129CE8C", Offset = "0x129CE8C", VA = "0x129CE8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D41")]
		[Address(RVA = "0x129D100", Offset = "0x129D100", VA = "0x129D100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3644C", Offset = "0xA3644C")]
	private sealed class <WaitAndDestroyAudioClip>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource sfx;

		[Token(Token = "0x1700053B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D46")]
			[Address(RVA = "0x129D270", Offset = "0x129D270", VA = "0x129D270", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D48")]
			[Address(RVA = "0x129D2D8", Offset = "0x129D2D8", VA = "0x129D2D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D43")]
		[Address(RVA = "0x129CDF8", Offset = "0x129CDF8", VA = "0x129CDF8")]
		[DebuggerHidden]
		public <WaitAndDestroyAudioClip>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002D44")]
		[Address(RVA = "0x129D168", Offset = "0x129D168", VA = "0x129D168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D45")]
		[Address(RVA = "0x129D16C", Offset = "0x129D16C", VA = "0x129D16C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D47")]
		[Address(RVA = "0x129D278", Offset = "0x129D278", VA = "0x129D278", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioManager m_instance;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource m_bgMusic;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_currentTrack;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource m_bgNoise;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_musicFadeTime;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_musicFadeCounter;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_musicFadeAudioStart;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_noiseFadeTime;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_noiseFadeCounter;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_noiseFadeAudioStart;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float sfxVolumeModifier;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float musicVolumeModifier;

	[Token(Token = "0x170000C5")]
	public static float SFXVolumeModifier
	{
		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x129B8CC", Offset = "0x129B8CC", VA = "0x129B8CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x129B934", Offset = "0x129B934", VA = "0x129B934")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public static float MusicVolumeModifier
	{
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x129B9F8", Offset = "0x129B9F8", VA = "0x129B9F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x129BA60", Offset = "0x129BA60", VA = "0x129BA60")]
		set
		{
		}
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x129BB24", Offset = "0x129BB24", VA = "0x129BB24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x129BB90", Offset = "0x129BB90", VA = "0x129BB90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x129BD28", Offset = "0x129BD28", VA = "0x129BD28")]
	public static void PlayMusic(string trackName, float volume = 0.1f)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x129BEC0", Offset = "0x129BEC0", VA = "0x129BEC0")]
	public static void PlayMusic()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x129BF6C", Offset = "0x129BF6C", VA = "0x129BF6C")]
	public static void ChangeMusicVolume(float fVolume, bool shouldFade = false, float fFadeTime = 2f)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x129C088", Offset = "0x129C088", VA = "0x129C088")]
	public static void ChangeBGVolume(float fVolume, bool shouldFade = false, float fFadeTime = 2f)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x129C178", Offset = "0x129C178", VA = "0x129C178")]
	private void FadeNoise(float duration, float fVolume)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x129C1A4", Offset = "0x129C1A4", VA = "0x129C1A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA534D4", Offset = "0xA534D4")]
	private IEnumerator WaitAndFadeNoise(float duration, float fVolume)
	{
		return null;
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x129C05C", Offset = "0x129C05C", VA = "0x129C05C")]
	private void FadeMusic(float duration, float fVolume)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x129C24C", Offset = "0x129C24C", VA = "0x129C24C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53538", Offset = "0xA53538")]
	private IEnumerator WaitAndFadeMusic(float duration, float fVolume)
	{
		return null;
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x129C2F4", Offset = "0x129C2F4", VA = "0x129C2F4")]
	public static void FadeToMusic(string trackName, float volume = 0.1f, float fadeOutTime = 1f, float fadeInTime = 1f)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x129C3F8", Offset = "0x129C3F8", VA = "0x129C3F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5359C", Offset = "0xA5359C")]
	private IEnumerator FadeFromTrackToNext(string trackName, float volume = 0.1f, float fadeOutTime = 1f, float fadeInTime = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x129C4C4", Offset = "0x129C4C4", VA = "0x129C4C4")]
	public static void PauseMusic(bool isPause)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x129C604", Offset = "0x129C604", VA = "0x129C604")]
	public static void StopMusic()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x129C6B0", Offset = "0x129C6B0", VA = "0x129C6B0")]
	public static void FadeMusic(float fadeTime)
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x129C78C", Offset = "0x129C78C", VA = "0x129C78C")]
	public static void PlayBGNoise(string trackName, float volume = 1f)
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x129C8A0", Offset = "0x129C8A0", VA = "0x129C8A0")]
	public static void StopBGNoise()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x129C93C", Offset = "0x129C93C", VA = "0x129C93C")]
	public static void FadeBGNoise(float fadeTime)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x129CA18", Offset = "0x129CA18", VA = "0x129CA18")]
	public static void Play3DSFX(string sfxName, Vector3 position, [Optional] Transform parent, float volume = 0.25f, string baseAudioObject = "SpatialAudioSource")
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x129CBD4", Offset = "0x129CBD4", VA = "0x129CBD4")]
	public static AudioSource Play2DSFX(string sfxName, float volume = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x129CC90", Offset = "0x129CC90", VA = "0x129CC90")]
	public static AudioSource Play2DSFX(AudioClip sfxClip, float volume = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x129CD88", Offset = "0x129CD88", VA = "0x129CD88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53600", Offset = "0xA53600")]
	private static IEnumerator WaitAndDestroyAudioClip(AudioSource sfx)
	{
		return null;
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x129CE24", Offset = "0x129CE24", VA = "0x129CE24")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x2000254")]
public class CharacterManager : MonoBehaviour
{
	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CharacterManager _instance;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, Character> _characters;

	[Token(Token = "0x170000C7")]
	public static CharacterManager instance
	{
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x121E29C", Offset = "0x121E29C", VA = "0x121E29C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C8")]
	public static Dictionary<string, Character> characters
	{
		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x121E2EC", Offset = "0x121E2EC", VA = "0x121E2EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x121E3C4", Offset = "0x121E3C4", VA = "0x121E3C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x12157F0", Offset = "0x12157F0", VA = "0x12157F0")]
	public static void AddCharacter(Character character)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x120B330", Offset = "0x120B330", VA = "0x120B330")]
	public static Character GetCharacter(string characterName)
	{
		return null;
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x121E440", Offset = "0x121E440", VA = "0x121E440")]
	public CharacterManager()
	{
	}
}
[Token(Token = "0x2000255")]
public class CharacterTeleportManager : MonoBehaviour
{
	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CharacterTeleportManager _instance;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, CharacterTeleporter> _teleporters;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x121E9E0", Offset = "0x121E9E0", VA = "0x121E9E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x121EB04", Offset = "0x121EB04", VA = "0x121EB04")]
	public static void TeleportToPoint(string characterName, string pointName)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x120B438", Offset = "0x120B438", VA = "0x120B438")]
	public static void TeleportToPoint(string characterName, int pointIndex)
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x121F0C4", Offset = "0x121F0C4", VA = "0x121F0C4")]
	public static void TeleportSwapToPoint(string characterName, int pointIndex, string newCharName, float overrideTime = -1f, string enableAnim = "")
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x121F514", Offset = "0x121F514", VA = "0x121F514")]
	public static void ClearValues(string characterName)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x12143A4", Offset = "0x12143A4", VA = "0x12143A4")]
	public static bool IsCharacterTeleporting(string characterName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x121F6C8", Offset = "0x121F6C8", VA = "0x121F6C8")]
	public CharacterTeleportManager()
	{
	}
}
[Token(Token = "0x2000256")]
public class FontManager : MonoBehaviour
{
	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FontManager instance;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_FontAsset WesternFont;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset ChineseFont;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_FontAsset ChineseUIFont;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_FontAsset ChineseNoOutline;

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x125C294", Offset = "0x125C294", VA = "0x125C294")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x125C324", Offset = "0x125C324", VA = "0x125C324")]
	public static bool ShouldChangeFont()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x125C670", Offset = "0x125C670", VA = "0x125C670")]
	public static bool IsSymbolLanguage()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x125C6E4", Offset = "0x125C6E4", VA = "0x125C6E4")]
	public static TMP_FontAsset LanguageFont(bool useDialogueFont = true, bool useNoOutline = false)
	{
		return null;
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x125C884", Offset = "0x125C884", VA = "0x125C884")]
	public FontManager()
	{
	}
}
[Token(Token = "0x2000257")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x20006AD")]
	public enum ThemeParkAct
	{
		[Token(Token = "0x40029D6")]
		None,
		[Token(Token = "0x40029D7")]
		Act1,
		[Token(Token = "0x40029D8")]
		Act2,
		[Token(Token = "0x40029D9")]
		Act3
	}

	[Serializable]
	[Token(Token = "0x20006AE")]
	public class Progression
	{
		[Token(Token = "0x40029DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ProgressionName;

		[Token(Token = "0x40029DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> Requirements;

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool wasIntroPlayed;

		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool wasCompleted;

		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool wasOutroPlayed;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string NextProgression;

		[Token(Token = "0x6002D49")]
		[Address(RVA = "0x1264FBC", Offset = "0x1264FBC", VA = "0x1264FBC")]
		public Progression()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20006AF")]
	public class Level
	{
		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LevelName;

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool introPlayed;

		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool outroPlayed;

		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool wasCompleted;

		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool wasUnlocked;

		[Token(Token = "0x6002D4A")]
		[Address(RVA = "0x1264FB4", Offset = "0x1264FB4", VA = "0x1264FB4")]
		public Level()
		{
		}
	}

	[Token(Token = "0x20006B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3645C", Offset = "0xA3645C")]
	private sealed class <LoadBlankScene>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <asyncOperation>5__2;

		[Token(Token = "0x1700053D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D4E")]
			[Address(RVA = "0x1264D24", Offset = "0x1264D24", VA = "0x1264D24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700053E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D50")]
			[Address(RVA = "0x1264D8C", Offset = "0x1264D8C", VA = "0x1264D8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D4B")]
		[Address(RVA = "0x1262E94", Offset = "0x1262E94", VA = "0x1262E94")]
		[DebuggerHidden]
		public <LoadBlankScene>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002D4C")]
		[Address(RVA = "0x1264A40", Offset = "0x1264A40", VA = "0x1264A40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D4D")]
		[Address(RVA = "0x1264A44", Offset = "0x1264A44", VA = "0x1264A44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D4F")]
		[Address(RVA = "0x1264D2C", Offset = "0x1264D2C", VA = "0x1264D2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3646C", Offset = "0xA3646C")]
	private sealed class <WaitAndLoadScene>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncOperation>5__2;

		[Token(Token = "0x1700053F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D54")]
			[Address(RVA = "0x1264F44", Offset = "0x1264F44", VA = "0x1264F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000540")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D56")]
			[Address(RVA = "0x1264FAC", Offset = "0x1264FAC", VA = "0x1264FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D51")]
		[Address(RVA = "0x1262EC0", Offset = "0x1262EC0", VA = "0x1262EC0")]
		[DebuggerHidden]
		public <WaitAndLoadScene>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002D52")]
		[Address(RVA = "0x1264D94", Offset = "0x1264D94", VA = "0x1264D94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D53")]
		[Address(RVA = "0x1264D98", Offset = "0x1264D98", VA = "0x1264D98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0x1264F4C", Offset = "0x1264F4C", VA = "0x1264F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameManager Instance;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AchievementManager _achievements;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, Progression> m_GameProgression;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, Level> m_Levels;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, int> m_LevelPlayedTimes;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string loadingSceneName;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string lastCompletedChallenge;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ThemeParkAct m_ActToLoad;

	[Token(Token = "0x170000C9")]
	public ThemeParkAct ActToLoad
	{
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x12618C0", Offset = "0x12618C0", VA = "0x12618C0")]
		get
		{
			return default(ThemeParkAct);
		}
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x1261928", Offset = "0x1261928", VA = "0x1261928")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x1261EFC", Offset = "0x1261EFC", VA = "0x1261EFC")]
	private void QuickSaveCheck()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x12620F0", Offset = "0x12620F0", VA = "0x12620F0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x12620FC", Offset = "0x12620FC", VA = "0x12620FC")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x1262108", Offset = "0x1262108", VA = "0x1262108")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x1254F88", Offset = "0x1254F88", VA = "0x1254F88")]
	public void ResetProgression()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x12621E4", Offset = "0x12621E4", VA = "0x12621E4")]
	public string GetLastChallengeCompleted()
	{
		return null;
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x12621EC", Offset = "0x12621EC", VA = "0x12621EC")]
	public void ResetLastChallengeCompleted()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x126223C", Offset = "0x126223C", VA = "0x126223C")]
	public void SetActLoad(ThemeParkAct act)
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x12622A8", Offset = "0x12622A8", VA = "0x12622A8")]
	public void ActLoaded()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x1262310", Offset = "0x1262310", VA = "0x1262310")]
	public bool DidCompleteRequirements(string progressionName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x1262400", Offset = "0x1262400", VA = "0x1262400")]
	public bool hasProgression(string progressoinName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x1262468", Offset = "0x1262468", VA = "0x1262468")]
	public void CompleteProgression(string progressionName)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x1262514", Offset = "0x1262514", VA = "0x1262514")]
	public bool CheckProgression(string progressionName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x12625B8", Offset = "0x12625B8", VA = "0x12625B8")]
	public void CompleteIntro(string progressionName)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x1262630", Offset = "0x1262630", VA = "0x1262630")]
	public void CompleteOutro(string progressionName)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x12626A8", Offset = "0x12626A8", VA = "0x12626A8")]
	public Progression GetProgression(string progression)
	{
		return null;
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x1258CFC", Offset = "0x1258CFC", VA = "0x1258CFC")]
	public void CompletedLevel(string level)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x1262710", Offset = "0x1262710", VA = "0x1262710")]
	public bool CompletionAchievementCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x1262820", Offset = "0x1262820", VA = "0x1262820")]
	public bool DidCompleteLevel(string level)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x1262024", Offset = "0x1262024", VA = "0x1262024")]
	public void UnlockedLevel(string level)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x1254E98", Offset = "0x1254E98", VA = "0x1254E98")]
	public bool isLevelUnlocked(string level)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x12628C4", Offset = "0x12628C4", VA = "0x12628C4")]
	public bool isLevelComplete(string level)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x12629B4", Offset = "0x12629B4", VA = "0x12629B4")]
	public void LoadNextScene(string sceneName, SceneLoadingManager manager)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x1262AFC", Offset = "0x1262AFC", VA = "0x1262AFC")]
	private void SceneManager_sceneLoaded(Scene arg0, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x1262C9C", Offset = "0x1262C9C", VA = "0x1262C9C")]
	public void LoadScene()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x1262D38", Offset = "0x1262D38", VA = "0x1262D38")]
	public bool LoadingCheckPointCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x1262DA8", Offset = "0x1262DA8", VA = "0x1262DA8")]
	private void SceneCleanup(Scene arg0, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x1262A9C", Offset = "0x1262A9C", VA = "0x1262A9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53664", Offset = "0xA53664")]
	private IEnumerator LoadBlankScene()
	{
		return null;
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x1262CC8", Offset = "0x1262CC8", VA = "0x1262CC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA536C8", Offset = "0xA536C8")]
	private IEnumerator WaitAndLoadScene()
	{
		return null;
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x126210C", Offset = "0x126210C", VA = "0x126210C")]
	public void SaveProgression()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x1261ADC", Offset = "0x1261ADC", VA = "0x1261ADC")]
	private void InitGame()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x1262EEC", Offset = "0x1262EEC", VA = "0x1262EEC")]
	public bool didCompleteTwoChallenges(ThemeParkAct act)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x1263030", Offset = "0x1263030", VA = "0x1263030")]
	public bool DidCompleteRide()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x1263188", Offset = "0x1263188", VA = "0x1263188")]
	public bool IsPark1Challenge()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x1263224", Offset = "0x1263224", VA = "0x1263224")]
	public bool IsPark2Challenge()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x12632C0", Offset = "0x12632C0", VA = "0x12632C0")]
	public bool IsPark3Challenge()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x126335C", Offset = "0x126335C", VA = "0x126335C")]
	public static void LoadedNewLevel()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x12634EC", Offset = "0x12634EC", VA = "0x12634EC")]
	public static void LoadedNewLevel(GameObject singleton)
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x12635E0", Offset = "0x12635E0", VA = "0x12635E0")]
	public void DebugTesting(string debugLevel, string challengeCompleted = "")
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x12648F8", Offset = "0x12648F8", VA = "0x12648F8")]
	public GameManager()
	{
	}
}
[Token(Token = "0x2000258")]
public class GameSettings
{
	[Token(Token = "0x20006B2")]
	public enum Setting
	{
		[Token(Token = "0x40029ED")]
		None,
		[Token(Token = "0x40029EE")]
		ShowSubtitles,
		[Token(Token = "0x40029EF")]
		SittingMode,
		[Token(Token = "0x40029F0")]
		HandColor,
		[Token(Token = "0x40029F1")]
		GloveHand,
		[Token(Token = "0x40029F2")]
		HandSide,
		[Token(Token = "0x40029F3")]
		Language
	}

	[Token(Token = "0x20006B3")]
	public enum Languages
	{
		[Token(Token = "0x40029F5")]
		English,
		[Token(Token = "0x40029F6")]
		Chinese,
		[Token(Token = "0x40029F7")]
		French,
		[Token(Token = "0x40029F8")]
		Italian,
		[Token(Token = "0x40029F9")]
		German,
		[Token(Token = "0x40029FA")]
		Korean,
		[Token(Token = "0x40029FB")]
		Japanese,
		[Token(Token = "0x40029FC")]
		Spanish
	}

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool gloveHandDirty;

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x1264FC4", Offset = "0x1264FC4", VA = "0x1264FC4")]
	public static bool GetSetting(Setting setting)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x1265064", Offset = "0x1265064", VA = "0x1265064")]
	public static void ChangeSetting(Setting setting, bool value)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x1265100", Offset = "0x1265100", VA = "0x1265100")]
	public static void ChangeSubtitles(bool value)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x1265170", Offset = "0x1265170", VA = "0x1265170")]
	public static Color GetHandColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x12653FC", Offset = "0x12653FC", VA = "0x12653FC")]
	public static void ChangeHandColor(Color color)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x1265688", Offset = "0x1265688", VA = "0x1265688")]
	public static string GetGloveHand()
	{
		return null;
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x126575C", Offset = "0x126575C", VA = "0x126575C")]
	public static void SetGloveHand(string side)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x1265838", Offset = "0x1265838", VA = "0x1265838")]
	public static void ChangeLanguage(Languages language)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x125C474", Offset = "0x125C474", VA = "0x125C474")]
	public static Languages GetLanguage()
	{
		return default(Languages);
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x1265998", Offset = "0x1265998", VA = "0x1265998")]
	public static string GetLanguageCode()
	{
		return null;
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x1265930", Offset = "0x1265930", VA = "0x1265930")]
	public static string GetCodeFromLanguage(Languages language)
	{
		return null;
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x1265A18", Offset = "0x1265A18", VA = "0x1265A18")]
	public GameSettings()
	{
	}
}
[Token(Token = "0x2000259")]
public class HeadsetVisibilityManager : MonoBehaviour
{
	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRScreenFade m_Fader;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LayerMask validLayers;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool shouldFadeOut;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float FadeOutTimer;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float fadeoutTime;

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x11A75A4", Offset = "0x11A75A4", VA = "0x11A75A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x11A7618", Offset = "0x11A7618", VA = "0x11A7618")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x11A7678", Offset = "0x11A7678", VA = "0x11A7678")]
	private void ToggleFade(bool toggle)
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x11A76E0", Offset = "0x11A76E0", VA = "0x11A76E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x11A77D0", Offset = "0x11A77D0", VA = "0x11A77D0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x11A78B4", Offset = "0x11A78B4", VA = "0x11A78B4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x11A79A4", Offset = "0x11A79A4", VA = "0x11A79A4")]
	public HeadsetVisibilityManager()
	{
	}
}
[Token(Token = "0x200025A")]
public class ItemGroupManager : MonoBehaviour
{
	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<ManagedItem> _items;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x114BD5C", Offset = "0x114BD5C", VA = "0x114BD5C")]
	public List<ManagedItem> GetItems()
	{
		return null;
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x114BD64", Offset = "0x114BD64", VA = "0x114BD64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x114BE00", Offset = "0x114BE00", VA = "0x114BE00", Slot = "4")]
	protected virtual void Initialize()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x114BF00", Offset = "0x114BF00", VA = "0x114BF00", Slot = "5")]
	public virtual void StatusUpdated(ManagedItem item)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x114BF04", Offset = "0x114BF04", VA = "0x114BF04")]
	public ItemGroupManager()
	{
	}
}
[Token(Token = "0x200025B")]
public class ReusableItemGroupManager : ItemGroupManager
{
	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnItemReset;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnItemDeployed;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _resetting;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float resetDelay;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _enableDebug;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private KeyCode _debugResetKey;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool usingAnimator;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool constantlyCheck;

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x10BD2D0", Offset = "0x10BD2D0", VA = "0x10BD2D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x10BD40C", Offset = "0x10BD40C", VA = "0x10BD40C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x10BD538", Offset = "0x10BD538", VA = "0x10BD538", Slot = "5")]
	public override void StatusUpdated(ManagedItem item)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x10BD688", Offset = "0x10BD688", VA = "0x10BD688")]
	private void ResetAllItems()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x10BD8AC", Offset = "0x10BD8AC", VA = "0x10BD8AC")]
	private void DeployItems()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x10BD93C", Offset = "0x10BD93C", VA = "0x10BD93C")]
	public ReusableItemGroupManager()
	{
	}
}
[Token(Token = "0x200025C")]
public class ReusableItemPrefabManager : MonoBehaviour
{
	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_Prefab;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_ReusableItems;

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x10BD94C", Offset = "0x10BD94C", VA = "0x10BD94C")]
	public void ResetItemPrefabs()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x10BDB68", Offset = "0x10BDB68", VA = "0x10BDB68")]
	public ReusableItemPrefabManager()
	{
	}
}
[Token(Token = "0x200025D")]
public class SceneLoadingManager : MonoBehaviour
{
	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SceneLoadingManager _instance;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GameObject loadingUI;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Image loadProgressUI;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public HubMenuRotator loadingUIRotator;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public GameObject[] m_LoadingUIComponents;

	[Token(Token = "0x170000CA")]
	public static SceneLoadingManager instance
	{
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x11849F0", Offset = "0x11849F0", VA = "0x11849F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x1184A40", Offset = "0x1184A40", VA = "0x1184A40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x1184DF8", Offset = "0x1184DF8", VA = "0x1184DF8")]
	public void FixPositioning()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x1184C3C", Offset = "0x1184C3C", VA = "0x1184C3C")]
	public void DontDestroy(Transform transform)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x1184564", Offset = "0x1184564", VA = "0x1184564")]
	public void LoadNextScene(string sceneName)
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x1184E14", Offset = "0x1184E14", VA = "0x1184E14")]
	public void StartedLoading()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x1184EFC", Offset = "0x1184EFC", VA = "0x1184EFC")]
	public void ToggleUI(bool toggle)
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x1184D60", Offset = "0x1184D60", VA = "0x1184D60")]
	public void FinishedLoading()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x1184F78", Offset = "0x1184F78", VA = "0x1184F78")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x1184FD8", Offset = "0x1184FD8", VA = "0x1184FD8")]
	public SceneLoadingManager()
	{
	}
}
[Token(Token = "0x200025E")]
public class BombsAwaySceneManager : GenericSceneManager
{
	[Token(Token = "0x20006B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3647C", Offset = "0xA3647C")]
	private sealed class <WaitAndStartIntro>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BombsAwaySceneManager <>4__this;

		[Token(Token = "0x17000541")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D5A")]
			[Address(RVA = "0x120A90C", Offset = "0x120A90C", VA = "0x120A90C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000542")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D5C")]
			[Address(RVA = "0x120A974", Offset = "0x120A974", VA = "0x120A974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D57")]
		[Address(RVA = "0x120A1A0", Offset = "0x120A1A0", VA = "0x120A1A0")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002D58")]
		[Address(RVA = "0x120A760", Offset = "0x120A760", VA = "0x120A760", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D59")]
		[Address(RVA = "0x120A764", Offset = "0x120A764", VA = "0x120A764", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D5B")]
		[Address(RVA = "0x120A914", Offset = "0x120A914", VA = "0x120A914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3648C", Offset = "0xA3648C")]
	private sealed class <EndingSequence>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BombsAwaySceneManager <>4__this;

		[Token(Token = "0x17000543")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D60")]
			[Address(RVA = "0x120A6F0", Offset = "0x120A6F0", VA = "0x120A6F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000544")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D62")]
			[Address(RVA = "0x120A758", Offset = "0x120A758", VA = "0x120A758", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D5D")]
		[Address(RVA = "0x120A3D0", Offset = "0x120A3D0", VA = "0x120A3D0")]
		[DebuggerHidden]
		public <EndingSequence>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002D5E")]
		[Address(RVA = "0x120A40C", Offset = "0x120A40C", VA = "0x120A40C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D5F")]
		[Address(RVA = "0x120A410", Offset = "0x120A410", VA = "0x120A410", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0x120A6F8", Offset = "0x120A6F8", VA = "0x120A6F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private PlayerManager _playerManager;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private List<Collider> _headMainColliders;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject _toolContainer;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool _introCompleted;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool _hasPickedUpTool;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private string[] _winDialog;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int _totalHeadsDisarmed;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[SerializeField]
	private int _headDisarmTarget;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _failures;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private TextMeshPro _wallTimer;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _timerActive;

	[Token(Token = "0x170000CB")]
	public bool introComplete
	{
		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x1209F70", Offset = "0x1209F70", VA = "0x1209F70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x1209F78", Offset = "0x1209F78", VA = "0x1209F78", Slot = "4")]
	protected override void InitializeManager()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x120A130", Offset = "0x120A130", VA = "0x120A130")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5372C", Offset = "0xA5372C")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x120A1CC", Offset = "0x120A1CC", VA = "0x120A1CC")]
	public void CompleteIntro()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x120A230", Offset = "0x120A230", VA = "0x120A230", Slot = "6")]
	protected override void UpdateProcessing()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x120A290", Offset = "0x120A290", VA = "0x120A290")]
	public bool WaitingForPicking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x120A2A0", Offset = "0x120A2A0", VA = "0x120A2A0")]
	public void StartToolWait()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x120A2A4", Offset = "0x120A2A4", VA = "0x120A2A4")]
	public void ToolPickedUp()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x120A2B0", Offset = "0x120A2B0", VA = "0x120A2B0")]
	public void AddFailure()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x120A310", Offset = "0x120A310", VA = "0x120A310")]
	public void HeadDisarmed(string headName)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x120A360", Offset = "0x120A360", VA = "0x120A360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53790", Offset = "0xA53790")]
	public IEnumerator EndingSequence()
	{
		return null;
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x120A3FC", Offset = "0x120A3FC", VA = "0x120A3FC")]
	public BombsAwaySceneManager()
	{
	}
}
[Token(Token = "0x200025F")]
public class DiscoExteriorSceneManager : GenericSceneManager
{
	[Token(Token = "0x20006B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3649C", Offset = "0xA3649C")]
	private sealed class <WaitAndStartIntro>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoExteriorSceneManager <>4__this;

		[Token(Token = "0x17000545")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D66")]
			[Address(RVA = "0x131AF38", Offset = "0x131AF38", VA = "0x131AF38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000546")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D68")]
			[Address(RVA = "0x131AFA0", Offset = "0x131AFA0", VA = "0x131AFA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D63")]
		[Address(RVA = "0x1317260", Offset = "0x1317260", VA = "0x1317260")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0x131AD90", Offset = "0x131AD90", VA = "0x131AD90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D65")]
		[Address(RVA = "0x131AD94", Offset = "0x131AD94", VA = "0x131AD94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D67")]
		[Address(RVA = "0x131AF40", Offset = "0x131AF40", VA = "0x131AF40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA364AC", Offset = "0xA364AC")]
	private sealed class <ProcessPatronLine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoExteriorSceneManager <>4__this;

		[Token(Token = "0x17000547")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D6C")]
			[Address(RVA = "0x131A83C", Offset = "0x131A83C", VA = "0x131A83C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000548")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D6E")]
			[Address(RVA = "0x131A8A4", Offset = "0x131A8A4", VA = "0x131A8A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D69")]
		[Address(RVA = "0x131771C", Offset = "0x131771C", VA = "0x131771C")]
		[DebuggerHidden]
		public <ProcessPatronLine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0x131A4AC", Offset = "0x131A4AC", VA = "0x131A4AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D6B")]
		[Address(RVA = "0x131A4B0", Offset = "0x131A4B0", VA = "0x131A4B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D6D")]
		[Address(RVA = "0x131A844", Offset = "0x131A844", VA = "0x131A844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA364BC", Offset = "0xA364BC")]
	private sealed class <MovePatron>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoExteriorSceneManager <>4__this;

		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Character <patron>5__2;

		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <patronT>5__3;

		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <movePoint>5__4;

		[Token(Token = "0x17000549")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D72")]
			[Address(RVA = "0x1319B68", Offset = "0x1319B68", VA = "0x1319B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D74")]
			[Address(RVA = "0x1319BD0", Offset = "0x1319BD0", VA = "0x1319BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D6F")]
		[Address(RVA = "0x13177C8", Offset = "0x13177C8", VA = "0x13177C8")]
		[DebuggerHidden]
		public <MovePatron>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0x1319748", Offset = "0x1319748", VA = "0x1319748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D71")]
		[Address(RVA = "0x131974C", Offset = "0x131974C", VA = "0x131974C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D73")]
		[Address(RVA = "0x1319B70", Offset = "0x1319B70", VA = "0x1319B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA364CC", Offset = "0xA364CC")]
	private sealed class <MakePatronExit>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoExteriorSceneManager <>4__this;

		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Character <patron>5__2;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <patronT>5__3;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <movePoint>5__4;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <doorOpened>5__5;

		[Token(Token = "0x1700054B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D78")]
			[Address(RVA = "0x13196D8", Offset = "0x13196D8", VA = "0x13196D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D7A")]
			[Address(RVA = "0x1319740", Offset = "0x1319740", VA = "0x1319740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D75")]
		[Address(RVA = "0x1317864", Offset = "0x1317864", VA = "0x1317864")]
		[DebuggerHidden]
		public <MakePatronExit>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002D76")]
		[Address(RVA = "0x1319238", Offset = "0x1319238", VA = "0x1319238", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D77")]
		[Address(RVA = "0x131923C", Offset = "0x131923C", VA = "0x131923C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D79")]
		[Address(RVA = "0x13196E0", Offset = "0x13196E0", VA = "0x13196E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA364DC", Offset = "0xA364DC")]
	private sealed class <SpawnNewPatron>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoExteriorSceneManager <>4__this;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Character <patron>5__2;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <patronT>5__3;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <movePoint>5__4;

		[Token(Token = "0x1700054D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D7E")]
			[Address(RVA = "0x131AD20", Offset = "0x131AD20", VA = "0x131AD20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D80")]
			[Address(RVA = "0x131AD88", Offset = "0x131AD88", VA = "0x131AD88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D7B")]
		[Address(RVA = "0x1317900", Offset = "0x1317900", VA = "0x1317900")]
		[DebuggerHidden]
		public <SpawnNewPatron>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002D7C")]
		[Address(RVA = "0x131A8AC", Offset = "0x131A8AC", VA = "0x131A8AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D7D")]
		[Address(RVA = "0x131A8B0", Offset = "0x131A8B0", VA = "0x131A8B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0x131AD28", Offset = "0x131AD28", VA = "0x131AD28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA364EC", Offset = "0xA364EC")]
	private sealed class <ProcessMaxDisguiseJump>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoExteriorSceneManager <>4__this;

		[Token(Token = "0x1700054F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D84")]
			[Address(RVA = "0x131A43C", Offset = "0x131A43C", VA = "0x131A43C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000550")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D86")]
			[Address(RVA = "0x131A4A4", Offset = "0x131A4A4", VA = "0x131A4A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D81")]
		[Address(RVA = "0x1317AD4", Offset = "0x1317AD4", VA = "0x1317AD4")]
		[DebuggerHidden]
		public <ProcessMaxDisguiseJump>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6002D82")]
		[Address(RVA = "0x131A29C", Offset = "0x131A29C", VA = "0x131A29C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D83")]
		[Address(RVA = "0x131A2A0", Offset = "0x131A2A0", VA = "0x131A2A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D85")]
		[Address(RVA = "0x131A444", Offset = "0x131A444", VA = "0x131A444", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA364FC", Offset = "0xA364FC")]
	private sealed class <ProcessHandshakeSequence>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoExteriorSceneManager <>4__this;

		[Token(Token = "0x17000551")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D8A")]
			[Address(RVA = "0x131A22C", Offset = "0x131A22C", VA = "0x131A22C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000552")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D8C")]
			[Address(RVA = "0x131A294", Offset = "0x131A294", VA = "0x131A294", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D87")]
		[Address(RVA = "0x1318A34", Offset = "0x1318A34", VA = "0x1318A34")]
		[DebuggerHidden]
		public <ProcessHandshakeSequence>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002D88")]
		[Address(RVA = "0x1319FAC", Offset = "0x1319FAC", VA = "0x1319FAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D89")]
		[Address(RVA = "0x1319FB0", Offset = "0x1319FB0", VA = "0x1319FB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D8B")]
		[Address(RVA = "0x131A234", Offset = "0x131A234", VA = "0x131A234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3650C", Offset = "0xA3650C")]
	private sealed class <NoCostumeFailure>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoExteriorSceneManager <>4__this;

		[Token(Token = "0x17000553")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D90")]
			[Address(RVA = "0x1319DE4", Offset = "0x1319DE4", VA = "0x1319DE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000554")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D92")]
			[Address(RVA = "0x1319E4C", Offset = "0x1319E4C", VA = "0x1319E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D8D")]
		[Address(RVA = "0x1318A60", Offset = "0x1318A60", VA = "0x1318A60")]
		[DebuggerHidden]
		public <NoCostumeFailure>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6002D8E")]
		[Address(RVA = "0x1319BD8", Offset = "0x1319BD8", VA = "0x1319BD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D8F")]
		[Address(RVA = "0x1319BDC", Offset = "0x1319BDC", VA = "0x1319BDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D91")]
		[Address(RVA = "0x1319DEC", Offset = "0x1319DEC", VA = "0x1319DEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3651C", Offset = "0xA3651C")]
	private sealed class <HandshakeFail>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoExteriorSceneManager <>4__this;

		[Token(Token = "0x17000555")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D96")]
			[Address(RVA = "0x1318ECC", Offset = "0x1318ECC", VA = "0x1318ECC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000556")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D98")]
			[Address(RVA = "0x1318F34", Offset = "0x1318F34", VA = "0x1318F34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D93")]
		[Address(RVA = "0x1318A8C", Offset = "0x1318A8C", VA = "0x1318A8C")]
		[DebuggerHidden]
		public <HandshakeFail>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6002D94")]
		[Address(RVA = "0x1318D44", Offset = "0x1318D44", VA = "0x1318D44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D95")]
		[Address(RVA = "0x1318D48", Offset = "0x1318D48", VA = "0x1318D48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D97")]
		[Address(RVA = "0x1318ED4", Offset = "0x1318ED4", VA = "0x1318ED4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3652C", Offset = "0xA3652C")]
	private sealed class <HandshakeSuccess>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoExteriorSceneManager <>4__this;

		[Token(Token = "0x17000557")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D9C")]
			[Address(RVA = "0x13191C8", Offset = "0x13191C8", VA = "0x13191C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000558")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D9E")]
			[Address(RVA = "0x1319230", Offset = "0x1319230", VA = "0x1319230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D99")]
		[Address(RVA = "0x1318AB8", Offset = "0x1318AB8", VA = "0x1318AB8")]
		[DebuggerHidden]
		public <HandshakeSuccess>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6002D9A")]
		[Address(RVA = "0x1318F3C", Offset = "0x1318F3C", VA = "0x1318F3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D9B")]
		[Address(RVA = "0x1318F40", Offset = "0x1318F40", VA = "0x1318F40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9D")]
		[Address(RVA = "0x13191D0", Offset = "0x13191D0", VA = "0x13191D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3653C", Offset = "0xA3653C")]
	private sealed class <ProcessDoor>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoExteriorSceneManager <>4__this;

		[Token(Token = "0x17000559")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DA2")]
			[Address(RVA = "0x1319F3C", Offset = "0x1319F3C", VA = "0x1319F3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DA4")]
			[Address(RVA = "0x1319FA4", Offset = "0x1319FA4", VA = "0x1319FA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D9F")]
		[Address(RVA = "0x1318B54", Offset = "0x1318B54", VA = "0x1318B54")]
		[DebuggerHidden]
		public <ProcessDoor>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6002DA0")]
		[Address(RVA = "0x1319E54", Offset = "0x1319E54", VA = "0x1319E54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DA1")]
		[Address(RVA = "0x1319E58", Offset = "0x1319E58", VA = "0x1319E58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0x1319F44", Offset = "0x1319F44", VA = "0x1319F44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Transform _playerHead;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private HandModelSelectorExt _handSelector;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GrabbableExt _tgradeCostume;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Animator _tgradeCostumeInterior;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool _hasTalkedToBouncer;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool _inLineWithNoCostume;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
	private bool _pickedUpCostume;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
	private bool _foundCostume;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private GameObject _max;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private Collider _maxCollision;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject _maxShadow;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _wearingCostume;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int _failCount;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private string[] _failedEntryConvos;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private string[] _entryMimicConvos;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject _exitToInterior;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private List<Enums.Handshakes> _handshakeOrder;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int _handshakeIndex;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private Character _tGradeBouncer;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private List<Character> _tGradePatrons;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private Transform[] _patronMovePoints;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private Transform _patronExitPoint;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private Transform _patronSpawnPoint;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Coroutine _spawnRoutine;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private float _tgradeWalkSpeed;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private int _currentWalkRoutines;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool _playerInLine;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Coroutine _bouncerShakeRoutine;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private GameObject _handshakePanel;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private Animator _doors;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool _playerHasSucceeded;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private Collider[] _doorBlocker;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private AudioSource _playerSuccessSound;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool _playingInitialCostumeFail;

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x1316EEC", Offset = "0x1316EEC", VA = "0x1316EEC", Slot = "4")]
	protected override void InitializeManager()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1316EF4", Offset = "0x1316EF4", VA = "0x1316EF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x13171F0", Offset = "0x13171F0", VA = "0x13171F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA537F4", Offset = "0xA537F4")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x131728C", Offset = "0x131728C", VA = "0x131728C")]
	public void FindCostume()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x1317350", Offset = "0x1317350", VA = "0x1317350")]
	public void PutOnCostume()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x13175DC", Offset = "0x13175DC", VA = "0x13175DC")]
	public void StepInFrontOfBouncer()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x1316FBC", Offset = "0x1316FBC", VA = "0x1316FBC")]
	private void CreateHandshakeOrder()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x1317180", Offset = "0x1317180", VA = "0x1317180")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53858", Offset = "0xA53858")]
	private IEnumerator ProcessPatronLine()
	{
		return null;
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x1317748", Offset = "0x1317748", VA = "0x1317748")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA538BC", Offset = "0xA538BC")]
	private IEnumerator MovePatron(int index)
	{
		return null;
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x13177F4", Offset = "0x13177F4", VA = "0x13177F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53920", Offset = "0xA53920")]
	private IEnumerator MakePatronExit()
	{
		return null;
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x1317890", Offset = "0x1317890", VA = "0x1317890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53984", Offset = "0xA53984")]
	private IEnumerator SpawnNewPatron()
	{
		return null;
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x131792C", Offset = "0x131792C", VA = "0x131792C")]
	public void ChangePlayerLineState(bool enteringLine)
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x1317574", Offset = "0x1317574", VA = "0x1317574")]
	public void SetPlayerMovement(bool enabled)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x1317A18", Offset = "0x1317A18", VA = "0x1317A18")]
	public void MaxDiguiseStart()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x1317A64", Offset = "0x1317A64", VA = "0x1317A64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA539E8", Offset = "0xA539E8")]
	private IEnumerator ProcessMaxDisguiseJump()
	{
		return null;
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x1317B00", Offset = "0x1317B00", VA = "0x1317B00")]
	public void MaxJumpOnPlayer()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x13181A4", Offset = "0x13181A4", VA = "0x13181A4")]
	public void MaxLandedOnPlayer()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x131855C", Offset = "0x131855C", VA = "0x131855C")]
	public void PerformedHandshake(Enums.Handshakes hType, Grabber hand)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x131763C", Offset = "0x131763C", VA = "0x131763C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53A4C", Offset = "0xA53A4C")]
	private IEnumerator ProcessHandshakeSequence()
	{
		return null;
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x13176AC", Offset = "0x13176AC", VA = "0x13176AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53AB0", Offset = "0xA53AB0")]
	private IEnumerator NoCostumeFailure()
	{
		return null;
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x1318954", Offset = "0x1318954", VA = "0x1318954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53B14", Offset = "0xA53B14")]
	private IEnumerator HandshakeFail()
	{
		return null;
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x13189C4", Offset = "0x13189C4", VA = "0x13189C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53B78", Offset = "0xA53B78")]
	private IEnumerator HandshakeSuccess()
	{
		return null;
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x1318AE4", Offset = "0x1318AE4", VA = "0x1318AE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53BDC", Offset = "0xA53BDC")]
	private IEnumerator ProcessDoor()
	{
		return null;
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x1318B80", Offset = "0x1318B80", VA = "0x1318B80", Slot = "44")]
	protected override void DebugTesting()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x1318D34", Offset = "0x1318D34", VA = "0x1318D34")]
	public DiscoExteriorSceneManager()
	{
	}
}
[Token(Token = "0x2000260")]
public class DiscoInteriorSceneManager : GenericSceneManager
{
	[Token(Token = "0x20006C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3654C", Offset = "0xA3654C")]
	private sealed class <WaitAndStartIntro>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x1700055B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DA8")]
			[Address(RVA = "0x131FA5C", Offset = "0x131FA5C", VA = "0x131FA5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DAA")]
			[Address(RVA = "0x131FAC4", Offset = "0x131FAC4", VA = "0x131FAC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DA5")]
		[Address(RVA = "0x131B184", Offset = "0x131B184", VA = "0x131B184")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6002DA6")]
		[Address(RVA = "0x131F608", Offset = "0x131F608", VA = "0x131F608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0x131F60C", Offset = "0x131F60C", VA = "0x131F60C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA9")]
		[Address(RVA = "0x131FA64", Offset = "0x131FA64", VA = "0x131FA64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3655C", Offset = "0xA3655C")]
	private sealed class <WaitAndPlayEatingSFX>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetRandomColor.ColorChoices color;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x4002A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string conversation;

		[Token(Token = "0x1700055D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DAE")]
			[Address(RVA = "0x131F270", Offset = "0x131F270", VA = "0x131F270", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DB0")]
			[Address(RVA = "0x131F2D8", Offset = "0x131F2D8", VA = "0x131F2D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DAB")]
		[Address(RVA = "0x131BA20", Offset = "0x131BA20", VA = "0x131BA20")]
		[DebuggerHidden]
		public <WaitAndPlayEatingSFX>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6002DAC")]
		[Address(RVA = "0x131EFB4", Offset = "0x131EFB4", VA = "0x131EFB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DAD")]
		[Address(RVA = "0x131EFB8", Offset = "0x131EFB8", VA = "0x131EFB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DAF")]
		[Address(RVA = "0x131F278", Offset = "0x131F278", VA = "0x131F278", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3656C", Offset = "0xA3656C")]
	private sealed class <ColorPicked>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetRandomColor.ColorChoices chosenColor;

		[Token(Token = "0x4002A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x4002A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <containsOrange>5__2;

		[Token(Token = "0x4002A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool <containsYellow>5__3;

		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <yellowAdded>5__4;

		[Token(Token = "0x1700055F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DB4")]
			[Address(RVA = "0x131E630", Offset = "0x131E630", VA = "0x131E630", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000560")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DB6")]
			[Address(RVA = "0x131E698", Offset = "0x131E698", VA = "0x131E698", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DB1")]
		[Address(RVA = "0x131BD58", Offset = "0x131BD58", VA = "0x131BD58")]
		[DebuggerHidden]
		public <ColorPicked>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6002DB2")]
		[Address(RVA = "0x131E224", Offset = "0x131E224", VA = "0x131E224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DB3")]
		[Address(RVA = "0x131E228", Offset = "0x131E228", VA = "0x131E228", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0x131E638", Offset = "0x131E638", VA = "0x131E638", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3657C", Offset = "0xA3657C")]
	private sealed class <WaitAndFoam>d__88 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x17000561")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DBA")]
			[Address(RVA = "0x131EF44", Offset = "0x131EF44", VA = "0x131EF44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000562")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DBC")]
			[Address(RVA = "0x131EFAC", Offset = "0x131EFAC", VA = "0x131EFAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DB7")]
		[Address(RVA = "0x131CEF4", Offset = "0x131CEF4", VA = "0x131CEF4")]
		[DebuggerHidden]
		public <WaitAndFoam>d__88(int <>1__state)
		{
		}

		[Token(Token = "0x6002DB8")]
		[Address(RVA = "0x131EE54", Offset = "0x131EE54", VA = "0x131EE54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DB9")]
		[Address(RVA = "0x131EE58", Offset = "0x131EE58", VA = "0x131EE58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DBB")]
		[Address(RVA = "0x131EF4C", Offset = "0x131EF4C", VA = "0x131EF4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3658C", Offset = "0xA3658C")]
	private sealed class <WaitAndActivateSleepFoam>d__89 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x4002A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool containsOrange;

		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool containsYellow;

		[Token(Token = "0x17000563")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DC0")]
			[Address(RVA = "0x131EDE4", Offset = "0x131EDE4", VA = "0x131EDE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000564")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DC2")]
			[Address(RVA = "0x131EE4C", Offset = "0x131EE4C", VA = "0x131EE4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DBD")]
		[Address(RVA = "0x131CF20", Offset = "0x131CF20", VA = "0x131CF20")]
		[DebuggerHidden]
		public <WaitAndActivateSleepFoam>d__89(int <>1__state)
		{
		}

		[Token(Token = "0x6002DBE")]
		[Address(RVA = "0x131E99C", Offset = "0x131E99C", VA = "0x131E99C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DBF")]
		[Address(RVA = "0x131E9A0", Offset = "0x131E9A0", VA = "0x131E9A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC1")]
		[Address(RVA = "0x131EDEC", Offset = "0x131EDEC", VA = "0x131EDEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3659C", Offset = "0xA3659C")]
	private sealed class <WaitForDillsPickup>d__96 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x17000565")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DC6")]
			[Address(RVA = "0x1320008", Offset = "0x1320008", VA = "0x1320008", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000566")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DC8")]
			[Address(RVA = "0x1320070", Offset = "0x1320070", VA = "0x1320070", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DC3")]
		[Address(RVA = "0x131D2E4", Offset = "0x131D2E4", VA = "0x131D2E4")]
		[DebuggerHidden]
		public <WaitForDillsPickup>d__96(int <>1__state)
		{
		}

		[Token(Token = "0x6002DC4")]
		[Address(RVA = "0x131FEE4", Offset = "0x131FEE4", VA = "0x131FEE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DC5")]
		[Address(RVA = "0x131FEE8", Offset = "0x131FEE8", VA = "0x131FEE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC7")]
		[Address(RVA = "0x1320010", Offset = "0x1320010", VA = "0x1320010", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA365AC", Offset = "0xA365AC")]
	private sealed class <WaitForArmedDillsPlacement>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x17000567")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DCC")]
			[Address(RVA = "0x131FB98", Offset = "0x131FB98", VA = "0x131FB98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000568")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DCE")]
			[Address(RVA = "0x131FC00", Offset = "0x131FC00", VA = "0x131FC00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DC9")]
		[Address(RVA = "0x131D52C", Offset = "0x131D52C", VA = "0x131D52C")]
		[DebuggerHidden]
		public <WaitForArmedDillsPlacement>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x6002DCA")]
		[Address(RVA = "0x131FACC", Offset = "0x131FACC", VA = "0x131FACC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DCB")]
		[Address(RVA = "0x131FAD0", Offset = "0x131FAD0", VA = "0x131FAD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DCD")]
		[Address(RVA = "0x131FBA0", Offset = "0x131FBA0", VA = "0x131FBA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA365BC", Offset = "0xA365BC")]
	private sealed class <WaitForPlayerCar>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fWaitTime>5__2;

		[Token(Token = "0x4002A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <playOnce>5__3;

		[Token(Token = "0x17000569")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DD2")]
			[Address(RVA = "0x13201BC", Offset = "0x13201BC", VA = "0x13201BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DD4")]
			[Address(RVA = "0x1320224", Offset = "0x1320224", VA = "0x1320224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DCF")]
		[Address(RVA = "0x131D558", Offset = "0x131D558", VA = "0x131D558")]
		[DebuggerHidden]
		public <WaitForPlayerCar>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x6002DD0")]
		[Address(RVA = "0x1320078", Offset = "0x1320078", VA = "0x1320078", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DD1")]
		[Address(RVA = "0x132007C", Offset = "0x132007C", VA = "0x132007C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DD3")]
		[Address(RVA = "0x13201C4", Offset = "0x13201C4", VA = "0x13201C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA365CC", Offset = "0xA365CC")]
	private sealed class <WaitAndSayLockPickLine>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x1700056B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DD8")]
			[Address(RVA = "0x131F598", Offset = "0x131F598", VA = "0x131F598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DDA")]
			[Address(RVA = "0x131F600", Offset = "0x131F600", VA = "0x131F600", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DD5")]
		[Address(RVA = "0x131D744", Offset = "0x131D744", VA = "0x131D744")]
		[DebuggerHidden]
		public <WaitAndSayLockPickLine>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6002DD6")]
		[Address(RVA = "0x131F488", Offset = "0x131F488", VA = "0x131F488", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DD7")]
		[Address(RVA = "0x131F48C", Offset = "0x131F48C", VA = "0x131F48C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DD9")]
		[Address(RVA = "0x131F5A0", Offset = "0x131F5A0", VA = "0x131F5A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA365DC", Offset = "0xA365DC")]
	private sealed class <WaitAndPlaySamDillsDialogue>d__110 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x1700056D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DDE")]
			[Address(RVA = "0x131F418", Offset = "0x131F418", VA = "0x131F418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DE0")]
			[Address(RVA = "0x131F480", Offset = "0x131F480", VA = "0x131F480", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DDB")]
		[Address(RVA = "0x131D968", Offset = "0x131D968", VA = "0x131D968")]
		[DebuggerHidden]
		public <WaitAndPlaySamDillsDialogue>d__110(int <>1__state)
		{
		}

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0x131F2E0", Offset = "0x131F2E0", VA = "0x131F2E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DDD")]
		[Address(RVA = "0x131F2E4", Offset = "0x131F2E4", VA = "0x131F2E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DDF")]
		[Address(RVA = "0x131F420", Offset = "0x131F420", VA = "0x131F420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA365EC", Offset = "0xA365EC")]
	private sealed class <WaitForConversationFinish>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x1700056F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DE4")]
			[Address(RVA = "0x131FE74", Offset = "0x131FE74", VA = "0x131FE74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000570")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DE6")]
			[Address(RVA = "0x131FEDC", Offset = "0x131FEDC", VA = "0x131FEDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DE1")]
		[Address(RVA = "0x131DF34", Offset = "0x131DF34", VA = "0x131DF34")]
		[DebuggerHidden]
		public <WaitForConversationFinish>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x6002DE2")]
		[Address(RVA = "0x131FC08", Offset = "0x131FC08", VA = "0x131FC08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DE3")]
		[Address(RVA = "0x131FC0C", Offset = "0x131FC0C", VA = "0x131FC0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE5")]
		[Address(RVA = "0x131FE7C", Offset = "0x131FE7C", VA = "0x131FE7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA365FC", Offset = "0xA365FC")]
	private sealed class <TriggerDJGrab>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DiscoInteriorSceneManager <>4__this;

		[Token(Token = "0x17000571")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DEA")]
			[Address(RVA = "0x131E92C", Offset = "0x131E92C", VA = "0x131E92C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000572")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DEC")]
			[Address(RVA = "0x131E994", Offset = "0x131E994", VA = "0x131E994", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DE7")]
		[Address(RVA = "0x131DF60", Offset = "0x131DF60", VA = "0x131DF60")]
		[DebuggerHidden]
		public <TriggerDJGrab>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6002DE8")]
		[Address(RVA = "0x131E6A0", Offset = "0x131E6A0", VA = "0x131E6A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DE9")]
		[Address(RVA = "0x131E6A4", Offset = "0x131E6A4", VA = "0x131E6A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DEB")]
		[Address(RVA = "0x131E934", Offset = "0x131E934", VA = "0x131E934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private BNGPlayerControllerExt m_Player;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Animator m_PlayerCostume;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject m_AwakeTriggers;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private GameObject m_SleepTriggers;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject m_FoamVFX;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private AudioManager m_AudioManager;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private Cannister m_Cannister;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private Animator[] m_TGradesAnim;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GrabbableExt m_MTARecord;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private Transform m_RecordJoint;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private Animator DJAnimator;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject m_Max;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private Transform m_MaxLandLocation;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject _carPlayerSlot;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject _carTeleport;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private TardigradeColorRandom[] m_TGradeColors;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private Collider[] m_AwakeColliders;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private Collider[] m_AsleepColliders;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject m_BobbyPin;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private SceneLoadHelper m_EscapeToNanoverseLoader;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private AudioSource m_LockSFX;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private GameObject m_CarColliders;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private Transform m_PlayerStartPosition;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private Transform m_CannisterMachine;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private Animator m_CannisterAnim;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private Animator m_DillsShield;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private GameObject m_DillsTrigger;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private Collider m_Techie;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private GrabbableExt m_DillsBomb;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private AudioSource m_MaxsVoice;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	private AudioSource m_MaxsOrangeEating;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	private AudioSource m_MaxsRedEating;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	private AudioSource m_MaxsBlueEating;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	private AudioSource m_MaxsGreenEating;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	private AudioSource m_MaxsGreyEating;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	private AudioSource m_FireFoamEmpty;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	private AudioSource m_FireFoamFull;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	private AudioSource m_FoamLoaded;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[SerializeField]
	private AudioSource m_CostumeOffSFX;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	private AudioSource m_MaxLandSFX;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	private GameObject m_TalkHelpers;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	private GameObject m_DJTalkHelperUI;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	private GameObject m_DJTalkHelperIcon;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[SerializeField]
	private GameObject[] _remoteGrabbers;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[SerializeField]
	private List<StreetTocksManager.TalkHelper> _talkHelpers;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public bool isMTAMusicPlaying;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
	private bool remoteGrabbingActive;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x282")]
	private bool didFoam;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x283")]
	private bool didSleep;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public bool _FirstGlobGrab;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x285")]
	private bool maxHasTastedOnce;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x286")]
	private bool hasCannister;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x287")]
	private bool firingFoamMachine;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Dictionary<SetRandomColor.ColorChoices, bool> _tastedColors;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private List<SetRandomColor.ColorChoices> m_GlobContainer;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private int angrySam;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private int randomTries;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private int locksPicked;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public bool noLongerInCostume;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A5")]
	private bool foundSam;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A6")]
	private bool freedSam;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A7")]
	private bool notFoundSamPlayOnce;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private bool FoundSamPlayOnce;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A9")]
	private bool findDillsOnce;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AA")]
	private bool bombArmOnce;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private string lastConvoStarted;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private List<Coroutine> colorsPicked;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private bool doLeverOnce;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C1")]
	private bool walkByOnce;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Dictionary<int, bool> locks;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private bool gotInCarOnce;

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x131AFA8", Offset = "0x131AFA8", VA = "0x131AFA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x131B114", Offset = "0x131B114", VA = "0x131B114")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53C40", Offset = "0xA53C40")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x131B1B0", Offset = "0x131B1B0", VA = "0x131B1B0", Slot = "38")]
	public override void TalkToCharacter(Character character)
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x131B38C", Offset = "0x131B38C", VA = "0x131B38C")]
	public void ShowTalkHelperUI(string characterName)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x131B4A8", Offset = "0x131B4A8", VA = "0x131B4A8")]
	public void HideTalkHelperUI(string characterName)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x131B594", Offset = "0x131B594", VA = "0x131B594")]
	public void SetRemoteGrabberActive(bool enable)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x131B6E4", Offset = "0x131B6E4", VA = "0x131B6E4")]
	private void PlayPrioConversation(string conversation, bool attemptPause = false)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x131B99C", Offset = "0x131B99C", VA = "0x131B99C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53CA4", Offset = "0xA53CA4")]
	private IEnumerator WaitAndPlayEatingSFX(SetRandomColor.ColorChoices color, string conversation)
	{
		return null;
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x131BA4C", Offset = "0x131BA4C", VA = "0x131BA4C")]
	public bool HasMaxTastedColor(SetRandomColor.ColorChoices color, GameObject glob)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x131BC50", Offset = "0x131BC50", VA = "0x131BC50")]
	public void ContainerColorPickedUp(SetRandomColor.ColorChoices chosenColor)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x131BCD8", Offset = "0x131BCD8", VA = "0x131BCD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53D08", Offset = "0xA53D08")]
	private IEnumerator ColorPicked(SetRandomColor.ColorChoices chosenColor)
	{
		return null;
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x131BD84", Offset = "0x131BD84", VA = "0x131BD84")]
	public void PlayerMachineTriggered()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x131BDD8", Offset = "0x131BDD8", VA = "0x131BDD8")]
	public void FoamMachineTriggered()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x131C05C", Offset = "0x131C05C", VA = "0x131C05C")]
	public void FiredFoamMachine()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x131C204", Offset = "0x131C204", VA = "0x131C204")]
	public void TriggerTGradeBoo()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x131C344", Offset = "0x131C344", VA = "0x131C344")]
	public void TriggerTGradeCheer()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x131C484", Offset = "0x131C484", VA = "0x131C484")]
	public void MaxGetCar()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x131CC84", Offset = "0x131CC84", VA = "0x131CC84")]
	public void MaxLanded()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x131CCA0", Offset = "0x131CCA0", VA = "0x131CCA0")]
	public void MaxFinishedTalkingGetCar()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x131CD14", Offset = "0x131CD14", VA = "0x131CD14")]
	public void FoamEvent()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x131CD18", Offset = "0x131CD18", VA = "0x131CD18")]
	public void SleepEvent()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x131CE84", Offset = "0x131CE84", VA = "0x131CE84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53D6C", Offset = "0xA53D6C")]
	private IEnumerator WaitAndFoam()
	{
		return null;
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x131C174", Offset = "0x131C174", VA = "0x131C174")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53DD0", Offset = "0xA53DD0")]
	private IEnumerator WaitAndActivateSleepFoam(bool containsOrange, bool containsYellow)
	{
		return null;
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x131CF4C", Offset = "0x131CF4C", VA = "0x131CF4C")]
	public void CheckFirstGlobGrab(SetRandomColor color)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x131CFBC", Offset = "0x131CFBC", VA = "0x131CFBC")]
	public void PlayerPulledDillsLever()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x131D184", Offset = "0x131D184", VA = "0x131D184")]
	public void SwitchMusic()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x131D200", Offset = "0x131D200", VA = "0x131D200")]
	public void RaiseMusicCarComingIn()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x131D034", Offset = "0x131D034", VA = "0x131D034")]
	public void PlayerTriggeredDills()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x131D274", Offset = "0x131D274", VA = "0x131D274")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53E34", Offset = "0xA53E34")]
	private IEnumerator WaitForDillsPickup()
	{
		return null;
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x131D310", Offset = "0x131D310", VA = "0x131D310")]
	public void StartEscapeDillsRant()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x131D3F4", Offset = "0x131D3F4", VA = "0x131D3F4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA53E98", Offset = "0xA53E98")]
	public void PlayerArmedBomb()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x131D460", Offset = "0x131D460", VA = "0x131D460")]
	public void PlayerTriggeredBomb()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x131D4BC", Offset = "0x131D4BC", VA = "0x131D4BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53ED0", Offset = "0xA53ED0")]
	private IEnumerator WaitForArmedDillsPlacement()
	{
		return null;
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x131D384", Offset = "0x131D384", VA = "0x131D384")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53F34", Offset = "0xA53F34")]
	private IEnumerator WaitForPlayerCar()
	{
		return null;
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x131D584", Offset = "0x131D584", VA = "0x131D584")]
	public void PlayerTriggeredAwakeSam()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x131D5FC", Offset = "0x131D5FC", VA = "0x131D5FC")]
	public void PlayerTriggeredAwakeSamAgain()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x131D658", Offset = "0x131D658", VA = "0x131D658")]
	public void PlayerTriggeredSleepSam()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x131D6D4", Offset = "0x131D6D4", VA = "0x131D6D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53F98", Offset = "0xA53F98")]
	private IEnumerator WaitAndSayLockPickLine()
	{
		return null;
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x131D770", Offset = "0x131D770", VA = "0x131D770")]
	public void PickedLock(int index)
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x131D844", Offset = "0x131D844", VA = "0x131D844")]
	public void PlayerFreedSam()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x131D8F8", Offset = "0x131D8F8", VA = "0x131D8F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA53FFC", Offset = "0xA53FFC")]
	private IEnumerator WaitAndPlaySamDillsDialogue()
	{
		return null;
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x131D994", Offset = "0x131D994", VA = "0x131D994")]
	public void PlayerTriggeredDJ()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x131D9F0", Offset = "0x131D9F0", VA = "0x131D9F0")]
	public void PlayerTriggeredAlbums()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x131DA4C", Offset = "0x131DA4C", VA = "0x131DA4C")]
	public void TurnOffHelperUI()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x131DAC8", Offset = "0x131DAC8", VA = "0x131DAC8")]
	public void PlayerDeliveredAlbum()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x131DBB4", Offset = "0x131DBB4", VA = "0x131DBB4")]
	public void LoadNanoVerse()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x131DC48", Offset = "0x131DC48", VA = "0x131DC48")]
	public void PlayerGotInCar()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x131DEC4", Offset = "0x131DEC4", VA = "0x131DEC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54060", Offset = "0xA54060")]
	private IEnumerator WaitForConversationFinish()
	{
		return null;
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x131DB44", Offset = "0x131DB44", VA = "0x131DB44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA540C4", Offset = "0xA540C4")]
	private IEnumerator TriggerDJGrab()
	{
		return null;
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x131DF8C", Offset = "0x131DF8C", VA = "0x131DF8C")]
	public void ChangeMusic()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x131E118", Offset = "0x131E118", VA = "0x131E118")]
	public void PlayerTriggeredTechie()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x131E11C", Offset = "0x131E11C", VA = "0x131E11C")]
	public DiscoInteriorSceneManager()
	{
	}
}
[Token(Token = "0x2000261")]
public class DriveToNanoverseSceneManager : GenericSceneManager
{
	[Token(Token = "0x20006CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3660C", Offset = "0xA3660C")]
	private sealed class <WaitAndStartIntro>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DriveToNanoverseSceneManager <>4__this;

		[Token(Token = "0x17000573")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DF0")]
			[Address(RVA = "0x13F3960", Offset = "0x13F3960", VA = "0x13F3960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000574")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DF2")]
			[Address(RVA = "0x13F39C8", Offset = "0x13F39C8", VA = "0x13F39C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DED")]
		[Address(RVA = "0x13F322C", Offset = "0x13F322C", VA = "0x13F322C")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002DEE")]
		[Address(RVA = "0x13F37B8", Offset = "0x13F37B8", VA = "0x13F37B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DEF")]
		[Address(RVA = "0x13F37BC", Offset = "0x13F37BC", VA = "0x13F37BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF1")]
		[Address(RVA = "0x13F3968", Offset = "0x13F3968", VA = "0x13F3968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool _hasPlayedCarHit;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject _gunObjects;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _gunGiven;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float _lastShot;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private float _badRateTime;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private List<string> _randomConversations;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private float _randomConvoMaxTime;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float _randomCheckTime;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float _lastRandomTimer;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int tGrades;

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x13F3150", Offset = "0x13F3150", VA = "0x13F3150", Slot = "4")]
	protected override void InitializeManager()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x13F3190", Offset = "0x13F3190", VA = "0x13F3190")]
	public void Start()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x13F31BC", Offset = "0x13F31BC", VA = "0x13F31BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54128", Offset = "0xA54128")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x13F3258", Offset = "0x13F3258", VA = "0x13F3258", Slot = "6")]
	protected override void UpdateProcessing()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x13F341C", Offset = "0x13F341C", VA = "0x13F341C")]
	public void PlayCarHit()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x13F34A4", Offset = "0x13F34A4", VA = "0x13F34A4")]
	public void GiveGun()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x13F3520", Offset = "0x13F3520", VA = "0x13F3520", Slot = "41")]
	public override void OnShoot()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x13F3528", Offset = "0x13F3528", VA = "0x13F3528")]
	public void PlayShootWorm()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x13F359C", Offset = "0x13F359C", VA = "0x13F359C")]
	public void PlaySamExplain()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x13F3610", Offset = "0x13F3610", VA = "0x13F3610")]
	public void StartDiscoMusic()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x13F368C", Offset = "0x13F368C", VA = "0x13F368C")]
	public void LoadNextScene()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x13F18F0", Offset = "0x13F18F0", VA = "0x13F18F0")]
	public void ShotTGrade()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x13F37A0", Offset = "0x13F37A0", VA = "0x13F37A0")]
	public DriveToNanoverseSceneManager()
	{
	}
}
[Token(Token = "0x2000262")]
public class EscapeFromNanoverseManager : GenericSceneManager
{
	[Token(Token = "0x20006CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3661C", Offset = "0xA3661C")]
	private sealed class <WaitAndStartIntro>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EscapeFromNanoverseManager <>4__this;

		[Token(Token = "0x17000575")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DF6")]
			[Address(RVA = "0x13F71FC", Offset = "0x13F71FC", VA = "0x13F71FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000576")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DF8")]
			[Address(RVA = "0x13F7264", Offset = "0x13F7264", VA = "0x13F7264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DF3")]
		[Address(RVA = "0x13F6BA0", Offset = "0x13F6BA0", VA = "0x13F6BA0")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002DF4")]
		[Address(RVA = "0x13F6EB8", Offset = "0x13F6EB8", VA = "0x13F6EB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DF5")]
		[Address(RVA = "0x13F6EBC", Offset = "0x13F6EBC", VA = "0x13F6EBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF7")]
		[Address(RVA = "0x13F7204", Offset = "0x13F7204", VA = "0x13F7204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3662C", Offset = "0xA3662C")]
	private sealed class <WaitForPlayerShooting>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EscapeFromNanoverseManager <>4__this;

		[Token(Token = "0x17000577")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002DFC")]
			[Address(RVA = "0x13F731C", Offset = "0x13F731C", VA = "0x13F731C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000578")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002DFE")]
			[Address(RVA = "0x13F7384", Offset = "0x13F7384", VA = "0x13F7384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DF9")]
		[Address(RVA = "0x13F6C84", Offset = "0x13F6C84", VA = "0x13F6C84")]
		[DebuggerHidden]
		public <WaitForPlayerShooting>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0x13F726C", Offset = "0x13F726C", VA = "0x13F726C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002DFB")]
		[Address(RVA = "0x13F7270", Offset = "0x13F7270", VA = "0x13F7270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DFD")]
		[Address(RVA = "0x13F7324", Offset = "0x13F7324", VA = "0x13F7324", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3663C", Offset = "0xA3663C")]
	private sealed class <WaitForTimelinePause>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EscapeFromNanoverseManager <>4__this;

		[Token(Token = "0x17000579")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E02")]
			[Address(RVA = "0x13F7500", Offset = "0x13F7500", VA = "0x13F7500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E04")]
			[Address(RVA = "0x13F7568", Offset = "0x13F7568", VA = "0x13F7568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DFF")]
		[Address(RVA = "0x13F6D90", Offset = "0x13F6D90", VA = "0x13F6D90")]
		[DebuggerHidden]
		public <WaitForTimelinePause>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002E00")]
		[Address(RVA = "0x13F738C", Offset = "0x13F738C", VA = "0x13F738C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E01")]
		[Address(RVA = "0x13F7390", Offset = "0x13F7390", VA = "0x13F7390", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E03")]
		[Address(RVA = "0x13F7508", Offset = "0x13F7508", VA = "0x13F7508", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Damageable m_Capn;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private SceneLoadHelper m_LoadHelper;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Animator m_CapnAnim;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private AudioSource m_SamAudio;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private new Transform m_StartPosition;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool didShootCapn;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	private bool isPaused;

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x13F6B04", Offset = "0x13F6B04", VA = "0x13F6B04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x13F6B30", Offset = "0x13F6B30", VA = "0x13F6B30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5418C", Offset = "0xA5418C")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x13F6BCC", Offset = "0x13F6BCC", VA = "0x13F6BCC")]
	public void WaitingPlayerShoot()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x13F6C14", Offset = "0x13F6C14", VA = "0x13F6C14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA541F0", Offset = "0xA541F0")]
	private IEnumerator WaitForPlayerShooting()
	{
		return null;
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x13F6CB0", Offset = "0x13F6CB0", VA = "0x13F6CB0", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x13F6CB8", Offset = "0x13F6CB8", VA = "0x13F6CB8")]
	public void EscapeTimelinePaused()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x13F6D20", Offset = "0x13F6D20", VA = "0x13F6D20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54254", Offset = "0xA54254")]
	private IEnumerator WaitForTimelinePause()
	{
		return null;
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x13F6DBC", Offset = "0x13F6DBC", VA = "0x13F6DBC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA542B8", Offset = "0xA542B8")]
	public void PlayerShotEvent()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x13F6EB0", Offset = "0x13F6EB0", VA = "0x13F6EB0")]
	public EscapeFromNanoverseManager()
	{
	}
}
[Token(Token = "0x2000263")]
public class FinalGradSceneManager : GenericSceneManager
{
	[Token(Token = "0x20006D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3664C", Offset = "0xA3664C")]
	private sealed class <WaitAndStartIntro>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FinalGradSceneManager <>4__this;

		[Token(Token = "0x1700057B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E08")]
			[Address(RVA = "0x1256628", Offset = "0x1256628", VA = "0x1256628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E0A")]
			[Address(RVA = "0x1256690", Offset = "0x1256690", VA = "0x1256690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E05")]
		[Address(RVA = "0x12555A0", Offset = "0x12555A0", VA = "0x12555A0")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002E06")]
		[Address(RVA = "0x1256240", Offset = "0x1256240", VA = "0x1256240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E07")]
		[Address(RVA = "0x1256244", Offset = "0x1256244", VA = "0x1256244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E09")]
		[Address(RVA = "0x1256630", Offset = "0x1256630", VA = "0x1256630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3665C", Offset = "0xA3665C")]
	private sealed class <ProcessCreditsDialogue>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FinalGradSceneManager <>4__this;

		[Token(Token = "0x4002A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700057D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E0E")]
			[Address(RVA = "0x1255F04", Offset = "0x1255F04", VA = "0x1255F04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E10")]
			[Address(RVA = "0x1255F6C", Offset = "0x1255F6C", VA = "0x1255F6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0x125580C", Offset = "0x125580C", VA = "0x125580C")]
		[DebuggerHidden]
		public <ProcessCreditsDialogue>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0x1255BE4", Offset = "0x1255BE4", VA = "0x1255BE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E0D")]
		[Address(RVA = "0x1255BE8", Offset = "0x1255BE8", VA = "0x1255BE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0x1255F0C", Offset = "0x1255F0C", VA = "0x1255F0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3666C", Offset = "0xA3666C")]
	private sealed class <ProcessFinalFadeAndDialogue>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FinalGradSceneManager <>4__this;

		[Token(Token = "0x1700057F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E14")]
			[Address(RVA = "0x12561D0", Offset = "0x12561D0", VA = "0x12561D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000580")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E16")]
			[Address(RVA = "0x1256238", Offset = "0x1256238", VA = "0x1256238", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0x12558D4", Offset = "0x12558D4", VA = "0x12558D4")]
		[DebuggerHidden]
		public <ProcessFinalFadeAndDialogue>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0x1255F74", Offset = "0x1255F74", VA = "0x1255F74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0x1255F78", Offset = "0x1255F78", VA = "0x1255F78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E15")]
		[Address(RVA = "0x12561D8", Offset = "0x12561D8", VA = "0x12561D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private string[] _creditsConversations;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private float _creditConvoDelay;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private string _finalConversation;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Collider _diplomaCollider;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject _aquabeariumColliders;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private OVRScreenFade _fade;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool _waitingForPickUp;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool _hasGrabbedDiploma;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
	private bool _hasGrabbedAquabearium;

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x1255504", Offset = "0x1255504", VA = "0x1255504")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x1255530", Offset = "0x1255530", VA = "0x1255530")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA542F0", Offset = "0xA542F0")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x12555CC", Offset = "0x12555CC", VA = "0x12555CC")]
	public void TakeObjectAndUnpause()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x125563C", Offset = "0x125563C", VA = "0x125563C")]
	public void PickupDiploma()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x1255660", Offset = "0x1255660", VA = "0x1255660")]
	public void CheckDiplomaStatus()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x12556D8", Offset = "0x12556D8", VA = "0x12556D8")]
	public void PickUpAquaBearium()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x12556FC", Offset = "0x12556FC", VA = "0x12556FC")]
	public void CheckAquabeariumStatus()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x1255770", Offset = "0x1255770", VA = "0x1255770")]
	public void PlayCreditsDialogue()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x125579C", Offset = "0x125579C", VA = "0x125579C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54354", Offset = "0xA54354")]
	private IEnumerator ProcessCreditsDialogue()
	{
		return null;
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x1255838", Offset = "0x1255838", VA = "0x1255838")]
	public void PlayFinalDialogue()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x1255864", Offset = "0x1255864", VA = "0x1255864")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA543B8", Offset = "0xA543B8")]
	private IEnumerator ProcessFinalFadeAndDialogue()
	{
		return null;
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x1255900", Offset = "0x1255900", VA = "0x1255900", Slot = "44")]
	protected override void DebugTesting()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x1255AD0", Offset = "0x1255AD0", VA = "0x1255AD0")]
	public FinalGradSceneManager()
	{
	}
}
[Token(Token = "0x2000264")]
public class FizzballSceneManager : GenericSceneManager
{
	[Token(Token = "0x20006D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3667C", Offset = "0xA3667C")]
	private sealed class <WaitAndStartIntro>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FizzballSceneManager <>4__this;

		[Token(Token = "0x17000581")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E1A")]
			[Address(RVA = "0x125A3A4", Offset = "0x125A3A4", VA = "0x125A3A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000582")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E1C")]
			[Address(RVA = "0x125A40C", Offset = "0x125A40C", VA = "0x125A40C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E17")]
		[Address(RVA = "0x1257BB0", Offset = "0x1257BB0", VA = "0x1257BB0")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002E18")]
		[Address(RVA = "0x125A0DC", Offset = "0x125A0DC", VA = "0x125A0DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E19")]
		[Address(RVA = "0x125A0E0", Offset = "0x125A0E0", VA = "0x125A0E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0x125A3AC", Offset = "0x125A3AC", VA = "0x125A3AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3668C", Offset = "0xA3668C")]
	private sealed class <PlayFireworks>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FizzballSceneManager <>4__this;

		[Token(Token = "0x17000583")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E20")]
			[Address(RVA = "0x125A06C", Offset = "0x125A06C", VA = "0x125A06C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000584")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E22")]
			[Address(RVA = "0x125A0D4", Offset = "0x125A0D4", VA = "0x125A0D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E1D")]
		[Address(RVA = "0x1258060", Offset = "0x1258060", VA = "0x1258060")]
		[DebuggerHidden]
		public <PlayFireworks>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6002E1E")]
		[Address(RVA = "0x1259F90", Offset = "0x1259F90", VA = "0x1259F90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E1F")]
		[Address(RVA = "0x1259F94", Offset = "0x1259F94", VA = "0x1259F94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E21")]
		[Address(RVA = "0x125A074", Offset = "0x125A074", VA = "0x125A074", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject loadHelper;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject timelineObj;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private bool skipIntro;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Character _max;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Character _sam;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private PitchingMachine _pitchMachine;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private List<GameObject> _runners;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private Transform strikeUIAnchor;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int inning;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int score;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int outs;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private int totalOuts;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int hits;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private int strikes;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<int> bases;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool dialogueFinished;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private List<string> _introDialogue;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private List<string> _strikeDialogue;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private List<string> _strikeoutDialogue;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private List<string> _singleDialogue;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private List<string> _doubleDialogue;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private List<string> _tripleDialogue;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private List<string> _homerDialogue;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private List<string> _banterDialogue;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private List<string> _flyoutDialogue;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private List<string> _groundoutDialogue;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private List<string> _inningDialogue;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private List<string> _pinwheelDialogue;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private List<string> _cannonballDialogue;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private List<string> _ufoDialogue;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private List<string> _timebombDialogue;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private List<string> _endingDialogue;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private List<string> _maxFloat;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private bool tryFloatDiag;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	private List<string> _pausePitch;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private int pausePitchIndex;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public bool pausePitchDiagFinished;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21D")]
	private bool playerHasBat;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21E")]
	private bool pitchingStarted;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21F")]
	private bool introFinished;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	private AudioSource homeRunSFX;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	private AudioSource runSFX;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	private GameObject homeRunVFX;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	private AudioSource[] stadiumSounds;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	private FizzballTarget[] targets;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[SerializeField]
	private Animator maxBalloon;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private bool startAnimations;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private float targetAnimateTimer;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private int homeRuns;

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x1257A0C", Offset = "0x1257A0C", VA = "0x1257A0C", Slot = "4")]
	protected override void InitializeManager()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x1257B40", Offset = "0x1257B40", VA = "0x1257B40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5441C", Offset = "0xA5441C")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x1257BDC", Offset = "0x1257BDC", VA = "0x1257BDC")]
	private void ForceTeleport()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x1257C78", Offset = "0x1257C78", VA = "0x1257C78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x1257D34", Offset = "0x1257D34", VA = "0x1257D34", Slot = "6")]
	protected override void UpdateProcessing()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x1257FC4", Offset = "0x1257FC4", VA = "0x1257FC4")]
	public void ActivateFloatDialogue()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x1257FD0", Offset = "0x1257FD0", VA = "0x1257FD0")]
	public void StartPitching()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x1257FDC", Offset = "0x1257FDC", VA = "0x1257FDC")]
	public void DialogueFinished()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x1257FE4", Offset = "0x1257FE4", VA = "0x1257FE4")]
	public void PlayerHasBat()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x1257FF0", Offset = "0x1257FF0", VA = "0x1257FF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54480", Offset = "0xA54480")]
	public IEnumerator PlayFireworks()
	{
		return null;
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x125808C", Offset = "0x125808C", VA = "0x125808C")]
	public void UpdateRunners(int basesToAdvance)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x1258B1C", Offset = "0x1258B1C", VA = "0x1258B1C")]
	private int CalculateOnBaseRunners()
	{
		return default(int);
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x1258BB0", Offset = "0x1258BB0", VA = "0x1258BB0")]
	public void ClearRunners()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x1258C68", Offset = "0x1258C68", VA = "0x1258C68")]
	public void EnableLoadHelper()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x1258ED4", Offset = "0x1258ED4", VA = "0x1258ED4")]
	public PitchingMachine GetPitch()
	{
		return null;
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x1258EDC", Offset = "0x1258EDC", VA = "0x1258EDC")]
	public int GetOuts()
	{
		return default(int);
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x1258EE4", Offset = "0x1258EE4", VA = "0x1258EE4")]
	public int GetTotalOuts()
	{
		return default(int);
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x1258EEC", Offset = "0x1258EEC", VA = "0x1258EEC")]
	public int GetHits()
	{
		return default(int);
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x1258EF4", Offset = "0x1258EF4", VA = "0x1258EF4")]
	public int GetScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x1258EFC", Offset = "0x1258EFC", VA = "0x1258EFC")]
	public int GetStrikes()
	{
		return default(int);
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x1258F04", Offset = "0x1258F04", VA = "0x1258F04")]
	public int GetInning()
	{
		return default(int);
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x1258F0C", Offset = "0x1258F0C", VA = "0x1258F0C")]
	public void IncreaseInning()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x125916C", Offset = "0x125916C", VA = "0x125916C")]
	public void RandomizeTargets()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x125920C", Offset = "0x125920C", VA = "0x125920C")]
	public void IncreaseHit(int amount)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x1259220", Offset = "0x1259220", VA = "0x1259220")]
	public void IncreaseOut(int amount)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x125928C", Offset = "0x125928C", VA = "0x125928C")]
	public void IncreaseStrikes(int amount)
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x1259490", Offset = "0x1259490", VA = "0x1259490")]
	public void ResetStrikeCount()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x1258B0C", Offset = "0x1258B0C", VA = "0x1258B0C")]
	public void IncreaseScore(int amount)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x1259498", Offset = "0x1259498", VA = "0x1259498")]
	public Transform GetStrikeAnchor()
	{
		return null;
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x1259000", Offset = "0x1259000", VA = "0x1259000")]
	public void PlayInning()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x1257EF8", Offset = "0x1257EF8", VA = "0x1257EF8")]
	public void PlayMaxFloat()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x12594A0", Offset = "0x12594A0", VA = "0x12594A0")]
	public void PlayPausePitch()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x12593C8", Offset = "0x12593C8", VA = "0x12593C8")]
	public void PlayStrike()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x1259300", Offset = "0x1259300", VA = "0x1259300")]
	public void PlayStrikeOut()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x125958C", Offset = "0x125958C", VA = "0x125958C")]
	public void PlaySingle()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x1259654", Offset = "0x1259654", VA = "0x1259654")]
	public void PlayDouble()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x125971C", Offset = "0x125971C", VA = "0x125971C")]
	public void PlayTriple()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x12597E4", Offset = "0x12597E4", VA = "0x12597E4")]
	private void HomerunAchievementCheck()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x125986C", Offset = "0x125986C", VA = "0x125986C")]
	public void PlayHomer()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x125993C", Offset = "0x125993C", VA = "0x125993C")]
	public void PlayBanter()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x1259A04", Offset = "0x1259A04", VA = "0x1259A04")]
	public void PlayFlyOut()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x1259ACC", Offset = "0x1259ACC", VA = "0x1259ACC")]
	public void PlayGroundOut()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x1259B94", Offset = "0x1259B94", VA = "0x1259B94")]
	public void PlayPinwheel()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x1259C5C", Offset = "0x1259C5C", VA = "0x1259C5C")]
	public void PlayCannonball()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x1259D24", Offset = "0x1259D24", VA = "0x1259D24")]
	public void PlayUfo()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x1259DEC", Offset = "0x1259DEC", VA = "0x1259DEC")]
	public void PlayTimeBomb()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x1259EB4", Offset = "0x1259EB4", VA = "0x1259EB4")]
	public void PlayEnding()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x1259F7C", Offset = "0x1259F7C", VA = "0x1259F7C")]
	public FizzballSceneManager()
	{
	}
}
[Token(Token = "0x2000265")]
public class GenericSceneManager : MonoBehaviour
{
	[Token(Token = "0x20006D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3669C", Offset = "0xA3669C")]
	private sealed class <WaitAndExecute>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action func;

		[Token(Token = "0x17000585")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E26")]
			[Address(RVA = "0x1269484", Offset = "0x1269484", VA = "0x1269484", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000586")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E28")]
			[Address(RVA = "0x12694EC", Offset = "0x12694EC", VA = "0x12694EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E23")]
		[Address(RVA = "0x1266B04", Offset = "0x1266B04", VA = "0x1266B04")]
		[DebuggerHidden]
		public <WaitAndExecute>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002E24")]
		[Address(RVA = "0x12693CC", Offset = "0x12693CC", VA = "0x12693CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E25")]
		[Address(RVA = "0x12693D0", Offset = "0x12693D0", VA = "0x12693D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E27")]
		[Address(RVA = "0x126948C", Offset = "0x126948C", VA = "0x126948C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA366AC", Offset = "0xA366AC")]
	private sealed class <WaitAndTeleportPlayer>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GenericSceneManager <>4__this;

		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string poseId;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x17000587")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E2C")]
			[Address(RVA = "0x126975C", Offset = "0x126975C", VA = "0x126975C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000588")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E2E")]
			[Address(RVA = "0x12697C4", Offset = "0x12697C4", VA = "0x12697C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E29")]
		[Address(RVA = "0x1267190", Offset = "0x1267190", VA = "0x1267190")]
		[DebuggerHidden]
		public <WaitAndTeleportPlayer>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6002E2A")]
		[Address(RVA = "0x12694F4", Offset = "0x12694F4", VA = "0x12694F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E2B")]
		[Address(RVA = "0x12694F8", Offset = "0x12694F8", VA = "0x12694F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E2D")]
		[Address(RVA = "0x1269764", Offset = "0x1269764", VA = "0x1269764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA366BC", Offset = "0xA366BC")]
	private sealed class <DelayPlayConversation>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool queueUp;

		[Token(Token = "0x4002A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GenericSceneManager <>4__this;

		[Token(Token = "0x4002A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delay;

		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string convoName;

		[Token(Token = "0x17000589")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E32")]
			[Address(RVA = "0x126904C", Offset = "0x126904C", VA = "0x126904C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E34")]
			[Address(RVA = "0x12690B4", Offset = "0x12690B4", VA = "0x12690B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E2F")]
		[Address(RVA = "0x1268494", Offset = "0x1268494", VA = "0x1268494")]
		[DebuggerHidden]
		public <DelayPlayConversation>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6002E30")]
		[Address(RVA = "0x1268F0C", Offset = "0x1268F0C", VA = "0x1268F0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E31")]
		[Address(RVA = "0x1268F10", Offset = "0x1268F10", VA = "0x1268F10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E33")]
		[Address(RVA = "0x1269054", Offset = "0x1269054", VA = "0x1269054", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA366CC", Offset = "0xA366CC")]
	private sealed class <ProcessFailureSequence>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GenericSceneManager <>4__this;

		[Token(Token = "0x1700058B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E38")]
			[Address(RVA = "0x126935C", Offset = "0x126935C", VA = "0x126935C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E3A")]
			[Address(RVA = "0x12693C4", Offset = "0x12693C4", VA = "0x12693C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E35")]
		[Address(RVA = "0x1268BD4", Offset = "0x1268BD4", VA = "0x1268BD4")]
		[DebuggerHidden]
		public <ProcessFailureSequence>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6002E36")]
		[Address(RVA = "0x1269290", Offset = "0x1269290", VA = "0x1269290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0x1269294", Offset = "0x1269294", VA = "0x1269294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E39")]
		[Address(RVA = "0x1269364", Offset = "0x1269364", VA = "0x1269364", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA366DC", Offset = "0xA366DC")]
	private sealed class <ProcessDeathToCheckpoint>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GenericSceneManager <>4__this;

		[Token(Token = "0x1700058D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E3E")]
			[Address(RVA = "0x1269220", Offset = "0x1269220", VA = "0x1269220", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700058E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E40")]
			[Address(RVA = "0x1269288", Offset = "0x1269288", VA = "0x1269288", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E3B")]
		[Address(RVA = "0x1268EC0", Offset = "0x1268EC0", VA = "0x1268EC0")]
		[DebuggerHidden]
		public <ProcessDeathToCheckpoint>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6002E3C")]
		[Address(RVA = "0x12690BC", Offset = "0x12690BC", VA = "0x12690BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E3D")]
		[Address(RVA = "0x12690C0", Offset = "0x12690C0", VA = "0x12690C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E3F")]
		[Address(RVA = "0x1269228", Offset = "0x1269228", VA = "0x1269228", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GenericSceneManager _instance;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Camera _player;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected CharacterFollow _charFollow;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected LayerMask _talkLayers;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected bool _lockTalkCovnersations;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected PlayableDirector[] _timelines;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected PlayableDirector _activeTimeline;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected DialogueSystemController _dialogue;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected DialogueSystemController _secondaryDialogue;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _preventInterruption;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _interruptCheckDelay;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected GameObject[] _convoTriggers;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected Character[] _talkCharacters;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected float _interactionCheckRadius;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Dictionary<string, MethodInfo> _cachedMethods;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected float _failureTimer;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected string _failureCommand;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Coroutine _failureRoutine;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool isIntro;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool voAvailable;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected SamMaxPlayer[] _samMaxPlayerPositions;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	protected SamMaxTimeline[] _samMaxTimelines;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected GameObject _samPose;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected GameObject _maxPose;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected GameObject m_checkPoint;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	protected Transform _lastCheckPoint;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent ResetAction;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	protected List<string> _deathDialogue;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<Character> _conversationCharacters;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected Coroutine _queuedConversation;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected OVRScreenFade m_fader;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected bool isEnding;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	public Transform m_StartPosition;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected string lastPoseID;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected PlayableDirector m_SamMaxTimeline;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<string> deathDialogue;

	[Token(Token = "0x170000CC")]
	public static GenericSceneManager Instance
	{
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x1266988", Offset = "0x1266988", VA = "0x1266988")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CD")]
	public static bool VO_AVAILABLE
	{
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x12669D8", Offset = "0x12669D8", VA = "0x12669D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x1266A84", Offset = "0x1266A84", VA = "0x1266A84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA544E4", Offset = "0xA544E4")]
	protected IEnumerator WaitAndExecute(Action func, float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x1266B30", Offset = "0x1266B30", VA = "0x1266B30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x1266B3C", Offset = "0x1266B3C", VA = "0x1266B3C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x1257A70", Offset = "0x1257A70", VA = "0x1257A70", Slot = "4")]
	protected virtual void InitializeManager()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x1266B8C", Offset = "0x1266B8C", VA = "0x1266B8C", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x1266B98", Offset = "0x1266B98", VA = "0x1266B98", Slot = "6")]
	protected virtual void UpdateProcessing()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x1266D20", Offset = "0x1266D20", VA = "0x1266D20", Slot = "7")]
	public virtual void PlaySamMaxPlayer(string poseId)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x1266DC8", Offset = "0x1266DC8", VA = "0x1266DC8", Slot = "8")]
	public virtual void PauseSamMaxTimeline(int timelineIndex)
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x1266E4C", Offset = "0x1266E4C", VA = "0x1266E4C", Slot = "9")]
	public virtual void PlaySamMaxTimeline(string timelineName)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x1267084", Offset = "0x1267084", VA = "0x1267084", Slot = "10")]
	public virtual void PauseSamMaxTimeline()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x1267108", Offset = "0x1267108", VA = "0x1267108", Slot = "11")]
	public virtual void ContinueSamMaxTimeline()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x1266D4C", Offset = "0x1266D4C", VA = "0x1266D4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54548", Offset = "0xA54548")]
	public IEnumerator WaitAndTeleportPlayer(string poseId)
	{
		return null;
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x12671BC", Offset = "0x12671BC", VA = "0x12671BC", Slot = "12")]
	public virtual void ExitSamMaxPose()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x12672EC", Offset = "0x12672EC", VA = "0x12672EC", Slot = "13")]
	public virtual void PlaySamMaxPose(string poseId, bool shouldResetAnims = true, int allCharacters = 0)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x1267480", Offset = "0x1267480", VA = "0x1267480", Slot = "14")]
	public virtual void PlaySamMaxPose(string poseId, bool isMaxValid, bool isSamValid, bool shouldResetAnims = true)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x126760C", Offset = "0x126760C", VA = "0x126760C", Slot = "15")]
	public virtual void SetCheckPoint(Transform checkpoint)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x12677C4", Offset = "0x12677C4", VA = "0x12677C4", Slot = "16")]
	public virtual void StopAllTimelines()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x1267830", Offset = "0x1267830", VA = "0x1267830", Slot = "17")]
	public virtual void PlayTimeline(string timelineName)
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x12678DC", Offset = "0x12678DC", VA = "0x12678DC", Slot = "18")]
	public virtual void PlayTimeline(int timelineIndex)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x1267AB0", Offset = "0x1267AB0", VA = "0x1267AB0", Slot = "19")]
	public virtual void PauseTimeline(string timelineName)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x1267B5C", Offset = "0x1267B5C", VA = "0x1267B5C", Slot = "20")]
	public virtual void PauseTimeline(int timelineIndex)
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x1267C90", Offset = "0x1267C90", VA = "0x1267C90")]
	public string GetRandomDeathDialogue()
	{
		return null;
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x1267D10", Offset = "0x1267D10", VA = "0x1267D10", Slot = "21")]
	public virtual void PauseTimeline()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x1267D94", Offset = "0x1267D94", VA = "0x1267D94", Slot = "22")]
	public virtual void ContinueTimeline(string timelineName)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x1267E40", Offset = "0x1267E40", VA = "0x1267E40", Slot = "23")]
	public virtual void ContinueTimeline(int timelineIndex)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x1267F74", Offset = "0x1267F74", VA = "0x1267F74", Slot = "24")]
	public virtual void ContinueTimeline()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x1267FF8", Offset = "0x1267FF8", VA = "0x1267FF8", Slot = "25")]
	public virtual bool IntroInterruptCheck(Conversation convo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x1268000", Offset = "0x1268000", VA = "0x1268000", Slot = "26")]
	public virtual void IntroInterrupt(Conversation convo)
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x1268004", Offset = "0x1268004", VA = "0x1268004")]
	protected bool CanInterrupt()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x1268054", Offset = "0x1268054", VA = "0x1268054", Slot = "27")]
	public virtual void PlayConversation(string convoName)
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x12680B4", Offset = "0x12680B4", VA = "0x12680B4", Slot = "28")]
	public virtual void PlaySecondaryConversation(string convoName)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x1268114", Offset = "0x1268114", VA = "0x1268114", Slot = "29")]
	public virtual void PlayConversationNoInterrupt(string convoName)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x1268160", Offset = "0x1268160", VA = "0x1268160", Slot = "30")]
	public virtual void PlayConversation(string convoName, bool simultaneous)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x126827C", Offset = "0x126827C", VA = "0x126827C", Slot = "31")]
	public virtual void StopConversation(bool endSecondary = false, bool endBoth = false)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x126834C", Offset = "0x126834C", VA = "0x126834C", Slot = "32")]
	public virtual void QueueConversation(string convoName, float delay)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x12683C8", Offset = "0x12683C8", VA = "0x12683C8", Slot = "33")]
	public virtual void EmptyConversationQueue()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x12683F8", Offset = "0x12683F8", VA = "0x12683F8", Slot = "34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA545AC", Offset = "0xA545AC")]
	protected virtual IEnumerator DelayPlayConversation(string convoName, float delay, bool queueUp = false)
	{
		return null;
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x12684C0", Offset = "0x12684C0", VA = "0x12684C0", Slot = "35")]
	public virtual void PlayLockedConversation(string convoName, bool interrupt = true)
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x1266C74", Offset = "0x1266C74", VA = "0x1266C74")]
	public void SetConversationLock(bool lockDown)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x126853C", Offset = "0x126853C", VA = "0x126853C", Slot = "36")]
	public virtual void SetConversationTrigger(string triggerName, bool enable)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x1268614", Offset = "0x1268614", VA = "0x1268614", Slot = "37")]
	public virtual void SendSequencerMessage(string message)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x1268684", Offset = "0x1268684", VA = "0x1268684")]
	public static bool InteractWithObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x1268A14", Offset = "0x1268A14", VA = "0x1268A14", Slot = "38")]
	public virtual void TalkToCharacter(Character character)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x1268AF8", Offset = "0x1268AF8", VA = "0x1268AF8", Slot = "39")]
	public virtual void ObserveObject(ObservationObject observed)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x1266C8C", Offset = "0x1266C8C", VA = "0x1266C8C")]
	private void EndConversationStates()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x1255DA0", Offset = "0x1255DA0", VA = "0x1255DA0")]
	public static bool ConversationIsPlaying(bool useSecondary = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x1268B28", Offset = "0x1268B28", VA = "0x1268B28")]
	protected void StartFailureSequence(float time, string command)
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x1268B64", Offset = "0x1268B64", VA = "0x1268B64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54610", Offset = "0xA54610")]
	protected IEnumerator ProcessFailureSequence()
	{
		return null;
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x1268C00", Offset = "0x1268C00", VA = "0x1268C00", Slot = "40")]
	public virtual void OnMiss()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x1268C04", Offset = "0x1268C04", VA = "0x1268C04", Slot = "41")]
	public virtual void OnShoot()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x1268C08", Offset = "0x1268C08", VA = "0x1268C08")]
	private void ProcessCommand(string command)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x1268DAC", Offset = "0x1268DAC", VA = "0x1268DAC")]
	public static void RevertToCheckpoint()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x1268E04", Offset = "0x1268E04", VA = "0x1268E04")]
	private void CheckpointReset()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x1268E50", Offset = "0x1268E50", VA = "0x1268E50", Slot = "42")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54674", Offset = "0xA54674")]
	protected virtual IEnumerator ProcessDeathToCheckpoint()
	{
		return null;
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x1268EEC", Offset = "0x1268EEC", VA = "0x1268EEC", Slot = "43")]
	public virtual void SetCharacterFollow(bool follow)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x1255988", Offset = "0x1255988", VA = "0x1255988", Slot = "44")]
	protected virtual void DebugTesting()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x1255ADC", Offset = "0x1255ADC", VA = "0x1255ADC")]
	public GenericSceneManager()
	{
	}
}
[Token(Token = "0x2000266")]
public class GetAClueSceneManager : GenericSceneManager
{
	[Token(Token = "0x20006DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA366EC", Offset = "0xA366EC")]
	private sealed class <WaitAndStartIntro>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetAClueSceneManager <>4__this;

		[Token(Token = "0x1700058F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E44")]
			[Address(RVA = "0x126A230", Offset = "0x126A230", VA = "0x126A230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000590")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E46")]
			[Address(RVA = "0x126A298", Offset = "0x126A298", VA = "0x126A298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E41")]
		[Address(RVA = "0x1269AB0", Offset = "0x1269AB0", VA = "0x1269AB0")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002E42")]
		[Address(RVA = "0x126A004", Offset = "0x126A004", VA = "0x126A004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E43")]
		[Address(RVA = "0x126A008", Offset = "0x126A008", VA = "0x126A008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E45")]
		[Address(RVA = "0x126A238", Offset = "0x126A238", VA = "0x126A238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA366FC", Offset = "0xA366FC")]
	private sealed class <PlayCellAfterDelay>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetAClueSceneManager <>4__this;

		[Token(Token = "0x17000591")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E4A")]
			[Address(RVA = "0x1269F94", Offset = "0x1269F94", VA = "0x1269F94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000592")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E4C")]
			[Address(RVA = "0x1269FFC", Offset = "0x1269FFC", VA = "0x1269FFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E47")]
		[Address(RVA = "0x1269C5C", Offset = "0x1269C5C", VA = "0x1269C5C")]
		[DebuggerHidden]
		public <PlayCellAfterDelay>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002E48")]
		[Address(RVA = "0x1269E30", Offset = "0x1269E30", VA = "0x1269E30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E49")]
		[Address(RVA = "0x1269E34", Offset = "0x1269E34", VA = "0x1269E34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E4B")]
		[Address(RVA = "0x1269F9C", Offset = "0x1269F9C", VA = "0x1269F9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private PlayerManager _playerManager;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private List<string> _randomConvos;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float _randomTimeCount;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float _randomConvoTarget;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float _randomConvoVariance;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private TextMeshPro _wallTimer;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool _timerActive;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GrabbableExt[] _keys;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private new Transform m_StartPosition;

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x12698C8", Offset = "0x12698C8", VA = "0x12698C8", Slot = "6")]
	protected override void UpdateProcessing()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x1269A40", Offset = "0x1269A40", VA = "0x1269A40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA546D8", Offset = "0xA546D8")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x1269ADC", Offset = "0x1269ADC", VA = "0x1269ADC")]
	public void PlayIntro()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x1269B08", Offset = "0x1269B08", VA = "0x1269B08")]
	public void PlayDoorConversation()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x1269BC0", Offset = "0x1269BC0", VA = "0x1269BC0")]
	public void PlayCellConversation()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x1269BEC", Offset = "0x1269BEC", VA = "0x1269BEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5473C", Offset = "0xA5473C")]
	private IEnumerator PlayCellAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x1269C88", Offset = "0x1269C88", VA = "0x1269C88")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x1269CB0", Offset = "0x1269CB0", VA = "0x1269CB0")]
	public void ClosetDoorOpened()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x125F3C0", Offset = "0x125F3C0", VA = "0x125F3C0")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x1269D0C", Offset = "0x1269D0C", VA = "0x1269D0C")]
	public void ExitToThemePark()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x1269E18", Offset = "0x1269E18", VA = "0x1269E18")]
	public GetAClueSceneManager()
	{
	}
}
[Token(Token = "0x2000267")]
public class MainMenuSceneManager : GenericSceneManager
{
	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x132FD28", Offset = "0x132FD28", VA = "0x132FD28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x132FD88", Offset = "0x132FD88", VA = "0x132FD88")]
	public MainMenuSceneManager()
	{
	}
}
[Token(Token = "0x2000268")]
public class NutriHoleSceneManager : GenericSceneManager
{
	[Token(Token = "0x20006DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3670C", Offset = "0xA3670C")]
	private sealed class <WaitAndStartIntro>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NutriHoleSceneManager <>4__this;

		[Token(Token = "0x17000593")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E50")]
			[Address(RVA = "0x133EFBC", Offset = "0x133EFBC", VA = "0x133EFBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000594")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E52")]
			[Address(RVA = "0x133F024", Offset = "0x133F024", VA = "0x133F024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E4D")]
		[Address(RVA = "0x133B998", Offset = "0x133B998", VA = "0x133B998")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6002E4E")]
		[Address(RVA = "0x133EDA4", Offset = "0x133EDA4", VA = "0x133EDA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E4F")]
		[Address(RVA = "0x133EDA8", Offset = "0x133EDA8", VA = "0x133EDA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E51")]
		[Address(RVA = "0x133EFC4", Offset = "0x133EFC4", VA = "0x133EFC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private List<Creature> _demons;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Transform _maxHidingSpot;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Transform _maxDemonSpot;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Transform[] _samMovePoints;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Transform _throwableMaxHoldPoint;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private PossessedMax _possessedMax;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private MaxKnifeHelper _samHandTrigger;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform _usedKnife;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject[] _hitEffects;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private float _hintTime;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float _demonHintTimer;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int _hintsGiven;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool _snackDemonDefeated;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	private bool _beenCloseToSnackDemon;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	private bool _hasShakenCan;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
	private bool _snackHitWithKnife;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool _snackHitWithShlurpy;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	private bool _snackSquirted;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	private bool _iceCreamDemonDefeated;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int _beenCloseToIceCreamDemon;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool _hasPickedUpBurrito;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int _icdProjectileHits;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool _icdHitWithBurrito;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool _icdHitWithCooked;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
	private bool _putFrozenBurritoInFreezer;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x183")]
	private bool _icdEatenFrozenBurrito;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private bool _icdBurritoTooHot;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	private bool _pickedUpPopsicleStick;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x186")]
	private bool _stickInFrozenBurrito;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x187")]
	private bool _stickInCookedBurrito;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool _burritoHasBeenCooked;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool _openWithCookedBurrito;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
	private bool _pickedUpCookedBurrito;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
	private bool _putDisguiesedBurritoInFreezer;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private bool _icdHitWithKnife;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
	private bool _icdHitWithShlurpy;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18E")]
	private bool _icdSquirted;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int _playerEatBurrito;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool _cerealDemonDefeated;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
	private bool _hasPickedUpSquirtGun;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
	private bool _hasFoundMilk;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x197")]
	private bool _cashierDemonDefeated;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private LayerMask _maxThrowCheckLayers;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private Transform _throwMaxCenter;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool _hasThrownAtCashD;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	private bool _hasThrownSlushyAtCashD;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
	private bool _hasThrownHolySlushyAtCashD;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AB")]
	private bool _hasPickedUpDagger;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private bool _playerHoldingDagger;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
	private bool _cashierHitWithKnife;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AE")]
	private bool _playerDrinkShlurpy;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AF")]
	private bool _madeShlurpy;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool _cashDHasEatenSlushy;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	private bool _cashDHasEatenHolySlushy;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
	private bool _maxThrownNoKnife;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B3")]
	private bool _gaveMaxKnife;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private Transform _knifeContainer;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private FadeToColor[] _fades;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private List<Rigidbody> _hoopRigids;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private TriggeredItemSpawner _hoopSpawner;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool _hasPickedUpHulaHoop;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	private bool _givenHulaHoopHint;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	private bool _hasThrownHulaHoop;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DB")]
	private bool _givenThrowHint;

	[Token(Token = "0x170000CE")]
	public bool gaveMaxKnife
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x133B8F4", Offset = "0x133B8F4", VA = "0x133B8F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x133B8FC", Offset = "0x133B8FC", VA = "0x133B8FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x133B928", Offset = "0x133B928", VA = "0x133B928")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA547A0", Offset = "0xA547A0")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x133B9C4", Offset = "0x133B9C4", VA = "0x133B9C4", Slot = "6")]
	protected override void UpdateProcessing()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x133BC28", Offset = "0x133BC28", VA = "0x133BC28")]
	public void MoveMaxToBack()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x133BC2C", Offset = "0x133BC2C", VA = "0x133BC2C")]
	public void PlaySecondIntro()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x133BCBC", Offset = "0x133BCBC", VA = "0x133BCBC")]
	private void RevealSnackDemon()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x133BDA4", Offset = "0x133BDA4", VA = "0x133BDA4")]
	public void ApproachSnackDemon(int distanceLevel)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x133BEEC", Offset = "0x133BEEC", VA = "0x133BEEC")]
	public void SodaCanShaken()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x133BF64", Offset = "0x133BF64", VA = "0x133BF64")]
	public void SnackDemonHit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x133C0C4", Offset = "0x133C0C4", VA = "0x133C0C4")]
	public void SnackDemonSquirted()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x133C13C", Offset = "0x133C13C", VA = "0x133C13C")]
	public void DefeatedSnackDemon()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x133C1A8", Offset = "0x133C1A8", VA = "0x133C1A8")]
	public void RevealIceCreamDemon()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x133C2AC", Offset = "0x133C2AC", VA = "0x133C2AC")]
	public void StartIceCreamDemon()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x133C354", Offset = "0x133C354", VA = "0x133C354")]
	public void ApproachIceCreamDemon()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x133C3D8", Offset = "0x133C3D8", VA = "0x133C3D8")]
	public void PickUpBurrito(Burrito burrito)
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x133C4AC", Offset = "0x133C4AC", VA = "0x133C4AC")]
	public void PickUpPopsicleStick()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x133C534", Offset = "0x133C534", VA = "0x133C534")]
	public void JoinBurritoToStick(Burrito burrito)
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x133C604", Offset = "0x133C604", VA = "0x133C604")]
	public void IceCreamDemonHit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x133C860", Offset = "0x133C860", VA = "0x133C860")]
	public void IceCreamDemonSquirted()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x133C8D8", Offset = "0x133C8D8", VA = "0x133C8D8")]
	public void PutBurritoInFreezer(Burrito burrito)
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x133C9A8", Offset = "0x133C9A8", VA = "0x133C9A8")]
	public void DemonHandlesBurrito(Burrito burrito)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x133B56C", Offset = "0x133B56C", VA = "0x133B56C")]
	public void PlayerEatsBurrito(Burrito burrito)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x133CAFC", Offset = "0x133CAFC", VA = "0x133CAFC")]
	public void CookedBurrito()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x133B8C8", Offset = "0x133B8C8", VA = "0x133B8C8")]
	public void MicrowaveOpened()
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x133CB6C", Offset = "0x133CB6C", VA = "0x133CB6C")]
	public void RevealCerealDemon()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x133CC34", Offset = "0x133CC34", VA = "0x133CC34")]
	public void StartCerealDemon()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x133CCF8", Offset = "0x133CCF8", VA = "0x133CCF8")]
	public void DefeatedCerealDemon()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x133CDB0", Offset = "0x133CDB0", VA = "0x133CDB0")]
	public void WaterGunPickedUp()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x133CE38", Offset = "0x133CE38", VA = "0x133CE38")]
	public void MilkPickedUp()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x133CE54", Offset = "0x133CE54", VA = "0x133CE54")]
	public void WaitForRevealCashierDemon()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x133CEAC", Offset = "0x133CEAC", VA = "0x133CEAC")]
	public void RevealCashierDemon()
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x133CFF4", Offset = "0x133CFF4", VA = "0x133CFF4")]
	public void ApproachCashierDemon()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x133D050", Offset = "0x133D050", VA = "0x133D050")]
	public void CashierDemonHit(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x133D25C", Offset = "0x133D25C", VA = "0x133D25C")]
	public void CashierDemonEats(GameObject hitObject)
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x133D3A8", Offset = "0x133D3A8", VA = "0x133D3A8")]
	public void DaggerPickUp()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x133D558", Offset = "0x133D558", VA = "0x133D558")]
	public void DaggerRelease()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x133D610", Offset = "0x133D610", VA = "0x133D610")]
	public void MakeShlurpy()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x133B6BC", Offset = "0x133B6BC", VA = "0x133B6BC")]
	public void PlayerDrinkShlurpy(Shlurpy shlurpy)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x133D688", Offset = "0x133D688", VA = "0x133D688")]
	public void EnableMaxThrowing()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x133D6D8", Offset = "0x133D6D8", VA = "0x133D6D8")]
	public void MaxNoKnifeReset()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x133D768", Offset = "0x133D768", VA = "0x133D768")]
	public void GiveMaxKnife()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x133D7E4", Offset = "0x133D7E4", VA = "0x133D7E4")]
	public void MaxGimmeKnife()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x133D8F8", Offset = "0x133D8F8", VA = "0x133D8F8")]
	public void PredictMaxHit()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x133DB18", Offset = "0x133DB18", VA = "0x133DB18")]
	public void MaxThrown()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x133DB78", Offset = "0x133DB78", VA = "0x133DB78")]
	public void MaxKnifeThrowCompleted()
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x133DC58", Offset = "0x133DC58", VA = "0x133DC58")]
	public void HandleMaxHitDemon()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x133DD6C", Offset = "0x133DD6C", VA = "0x133DD6C")]
	public void DropKnife()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x133DFB0", Offset = "0x133DFB0", VA = "0x133DFB0")]
	private void DelayedKnifeGravity()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x133E018", Offset = "0x133E018", VA = "0x133E018")]
	public void SwapInNormalMax()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x133E12C", Offset = "0x133E12C", VA = "0x133E12C")]
	public void SetMaxPossessed(bool possessed)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x133E278", Offset = "0x133E278", VA = "0x133E278")]
	private void SecondStageEndPossession()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x133E1F4", Offset = "0x133E1F4", VA = "0x133E1F4")]
	public void SetPossessedLighting(bool possessed)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x133E448", Offset = "0x133E448", VA = "0x133E448")]
	public void RegisterSpawnedItem(GameObject go)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x133E488", Offset = "0x133E488", VA = "0x133E488")]
	public void PickUpHulaHoop()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x133E500", Offset = "0x133E500", VA = "0x133E500")]
	public void HitMaxWithHulaHoop(int hitNumber)
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x133E08C", Offset = "0x133E08C", VA = "0x133E08C")]
	public void StabMaxUpdate(int count)
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x133E33C", Offset = "0x133E33C", VA = "0x133E33C")]
	private void RemoveMaxHoops()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x133E5F0", Offset = "0x133E5F0", VA = "0x133E5F0")]
	private void EnableHulaHoopsPhysics()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x133E858", Offset = "0x133E858", VA = "0x133E858")]
	public void AddHulaHoopRigid(Rigidbody hoopRigid)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x133E8F0", Offset = "0x133E8F0", VA = "0x133E8F0")]
	public void ReadySamForKnife()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x133E908", Offset = "0x133E908", VA = "0x133E908")]
	public void KnifeGrabbedBySam()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x133E978", Offset = "0x133E978", VA = "0x133E978")]
	public void TakeKnifeFromSam()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x133E9C0", Offset = "0x133E9C0", VA = "0x133E9C0")]
	public void CompleteScene()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x133EB30", Offset = "0x133EB30", VA = "0x133EB30")]
	public void TriggerDamageEffect(int effectIndex)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x133ECF8", Offset = "0x133ECF8", VA = "0x133ECF8", Slot = "44")]
	protected override void DebugTesting()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x133ED94", Offset = "0x133ED94", VA = "0x133ED94")]
	public NutriHoleSceneManager()
	{
	}
}
[Token(Token = "0x2000269")]
public class ObstacleCourse01SceneManager : GenericSceneManager
{
	[Token(Token = "0x20006DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3671C", Offset = "0xA3671C")]
	private sealed class <ProcessDeathToCheckpoint>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x17000595")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E56")]
			[Address(RVA = "0x12B5B18", Offset = "0x12B5B18", VA = "0x12B5B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000596")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E58")]
			[Address(RVA = "0x12B5B80", Offset = "0x12B5B80", VA = "0x12B5B80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E53")]
		[Address(RVA = "0x12B3D0C", Offset = "0x12B3D0C", VA = "0x12B3D0C")]
		[DebuggerHidden]
		public <ProcessDeathToCheckpoint>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002E54")]
		[Address(RVA = "0x12B5924", Offset = "0x12B5924", VA = "0x12B5924", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E55")]
		[Address(RVA = "0x12B5928", Offset = "0x12B5928", VA = "0x12B5928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E57")]
		[Address(RVA = "0x12B5B20", Offset = "0x12B5B20", VA = "0x12B5B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3672C", Offset = "0xA3672C")]
	private sealed class <WaitAndStartIntro>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x17000597")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E5C")]
			[Address(RVA = "0x12B6878", Offset = "0x12B6878", VA = "0x12B6878", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000598")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E5E")]
			[Address(RVA = "0x12B68E0", Offset = "0x12B68E0", VA = "0x12B68E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E59")]
		[Address(RVA = "0x12B3D38", Offset = "0x12B3D38", VA = "0x12B3D38")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002E5A")]
		[Address(RVA = "0x12B647C", Offset = "0x12B647C", VA = "0x12B647C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E5B")]
		[Address(RVA = "0x12B6480", Offset = "0x12B6480", VA = "0x12B6480", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E5D")]
		[Address(RVA = "0x12B6880", Offset = "0x12B6880", VA = "0x12B6880", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3673C", Offset = "0xA3673C")]
	private sealed class <WaitandExitPose>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x17000599")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E62")]
			[Address(RVA = "0x12B6D60", Offset = "0x12B6D60", VA = "0x12B6D60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E64")]
			[Address(RVA = "0x12B6DC8", Offset = "0x12B6DC8", VA = "0x12B6DC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E5F")]
		[Address(RVA = "0x12B4138", Offset = "0x12B4138", VA = "0x12B4138")]
		[DebuggerHidden]
		public <WaitandExitPose>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002E60")]
		[Address(RVA = "0x12B6CE8", Offset = "0x12B6CE8", VA = "0x12B6CE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E61")]
		[Address(RVA = "0x12B6CEC", Offset = "0x12B6CEC", VA = "0x12B6CEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E63")]
		[Address(RVA = "0x12B6D68", Offset = "0x12B6D68", VA = "0x12B6D68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3674C", Offset = "0xA3674C")]
	private sealed class <WaitForPlayerTunnel>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <alphabetStart>5__2;

		[Token(Token = "0x1700059B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E68")]
			[Address(RVA = "0x12B6C78", Offset = "0x12B6C78", VA = "0x12B6C78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0x12B6CE0", Offset = "0x12B6CE0", VA = "0x12B6CE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E65")]
		[Address(RVA = "0x12B42C4", Offset = "0x12B42C4", VA = "0x12B42C4")]
		[DebuggerHidden]
		public <WaitForPlayerTunnel>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6002E66")]
		[Address(RVA = "0x12B6B24", Offset = "0x12B6B24", VA = "0x12B6B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E67")]
		[Address(RVA = "0x12B6B28", Offset = "0x12B6B28", VA = "0x12B6B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E69")]
		[Address(RVA = "0x12B6C80", Offset = "0x12B6C80", VA = "0x12B6C80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3675C", Offset = "0xA3675C")]
	private sealed class <PlayerClimbingWallStart>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x1700059D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0x12B58B4", Offset = "0x12B58B4", VA = "0x12B58B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E70")]
			[Address(RVA = "0x12B591C", Offset = "0x12B591C", VA = "0x12B591C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E6B")]
		[Address(RVA = "0x12B4470", Offset = "0x12B4470", VA = "0x12B4470")]
		[DebuggerHidden]
		public <PlayerClimbingWallStart>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002E6C")]
		[Address(RVA = "0x12B57B4", Offset = "0x12B57B4", VA = "0x12B57B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E6D")]
		[Address(RVA = "0x12B57B8", Offset = "0x12B57B8", VA = "0x12B57B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E6F")]
		[Address(RVA = "0x12B58BC", Offset = "0x12B58BC", VA = "0x12B58BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3676C", Offset = "0xA3676C")]
	private sealed class <PlayerClimbingWallFell>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x1700059F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E74")]
			[Address(RVA = "0x12B5744", Offset = "0x12B5744", VA = "0x12B5744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E76")]
			[Address(RVA = "0x12B57AC", Offset = "0x12B57AC", VA = "0x12B57AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E71")]
		[Address(RVA = "0x12B449C", Offset = "0x12B449C", VA = "0x12B449C")]
		[DebuggerHidden]
		public <PlayerClimbingWallFell>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6002E72")]
		[Address(RVA = "0x12B5588", Offset = "0x12B5588", VA = "0x12B5588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E73")]
		[Address(RVA = "0x12B558C", Offset = "0x12B558C", VA = "0x12B558C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E75")]
		[Address(RVA = "0x12B574C", Offset = "0x12B574C", VA = "0x12B574C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3677C", Offset = "0xA3677C")]
	private sealed class <PlayerClimbingWall>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x170005A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E7A")]
			[Address(RVA = "0x12B5518", Offset = "0x12B5518", VA = "0x12B5518", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E7C")]
			[Address(RVA = "0x12B5580", Offset = "0x12B5580", VA = "0x12B5580", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E77")]
		[Address(RVA = "0x12B4538", Offset = "0x12B4538", VA = "0x12B4538")]
		[DebuggerHidden]
		public <PlayerClimbingWall>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002E78")]
		[Address(RVA = "0x12B51E8", Offset = "0x12B51E8", VA = "0x12B51E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E79")]
		[Address(RVA = "0x12B51EC", Offset = "0x12B51EC", VA = "0x12B51EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E7B")]
		[Address(RVA = "0x12B5520", Offset = "0x12B5520", VA = "0x12B5520", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3678C", Offset = "0xA3678C")]
	private sealed class <WaitAndApproachBallToss>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x170005A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E80")]
			[Address(RVA = "0x12B5CF4", Offset = "0x12B5CF4", VA = "0x12B5CF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E82")]
			[Address(RVA = "0x12B5D5C", Offset = "0x12B5D5C", VA = "0x12B5D5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E7D")]
		[Address(RVA = "0x12B46BC", Offset = "0x12B46BC", VA = "0x12B46BC")]
		[DebuggerHidden]
		public <WaitAndApproachBallToss>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002E7E")]
		[Address(RVA = "0x12B5B88", Offset = "0x12B5B88", VA = "0x12B5B88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E7F")]
		[Address(RVA = "0x12B5B8C", Offset = "0x12B5B8C", VA = "0x12B5B8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E81")]
		[Address(RVA = "0x12B5CFC", Offset = "0x12B5CFC", VA = "0x12B5CFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3679C", Offset = "0xA3679C")]
	private sealed class <WaitForGrabHook>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x4002AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <alphabetStart>5__2;

		[Token(Token = "0x4002AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <alphabetEnd>5__3;

		[Token(Token = "0x4002AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <alphabetRandom>5__4;

		[Token(Token = "0x170005A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E86")]
			[Address(RVA = "0x12B6AB4", Offset = "0x12B6AB4", VA = "0x12B6AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E88")]
			[Address(RVA = "0x12B6B1C", Offset = "0x12B6B1C", VA = "0x12B6B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E83")]
		[Address(RVA = "0x12B49AC", Offset = "0x12B49AC", VA = "0x12B49AC")]
		[DebuggerHidden]
		public <WaitForGrabHook>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0x12B68E8", Offset = "0x12B68E8", VA = "0x12B68E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E85")]
		[Address(RVA = "0x12B68EC", Offset = "0x12B68EC", VA = "0x12B68EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E87")]
		[Address(RVA = "0x12B6ABC", Offset = "0x12B6ABC", VA = "0x12B6ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA367AC", Offset = "0xA367AC")]
	private sealed class <WaitAndApproachDarts>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x170005A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E8C")]
			[Address(RVA = "0x12B5EF8", Offset = "0x12B5EF8", VA = "0x12B5EF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E8E")]
			[Address(RVA = "0x12B5F60", Offset = "0x12B5F60", VA = "0x12B5F60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E89")]
		[Address(RVA = "0x12B4BAC", Offset = "0x12B4BAC", VA = "0x12B4BAC")]
		[DebuggerHidden]
		public <WaitAndApproachDarts>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0x12B5D64", Offset = "0x12B5D64", VA = "0x12B5D64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0x12B5D68", Offset = "0x12B5D68", VA = "0x12B5D68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E8D")]
		[Address(RVA = "0x12B5F00", Offset = "0x12B5F00", VA = "0x12B5F00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA367BC", Offset = "0xA367BC")]
	private sealed class <WaitAndEnableBombs>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x170005A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E92")]
			[Address(RVA = "0x12B5FDC", Offset = "0x12B5FDC", VA = "0x12B5FDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E94")]
			[Address(RVA = "0x12B6044", Offset = "0x12B6044", VA = "0x12B6044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E8F")]
		[Address(RVA = "0x12B4D60", Offset = "0x12B4D60", VA = "0x12B4D60")]
		[DebuggerHidden]
		public <WaitAndEnableBombs>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6002E90")]
		[Address(RVA = "0x12B5F68", Offset = "0x12B5F68", VA = "0x12B5F68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E91")]
		[Address(RVA = "0x12B5F6C", Offset = "0x12B5F6C", VA = "0x12B5F6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E93")]
		[Address(RVA = "0x12B5FE4", Offset = "0x12B5FE4", VA = "0x12B5FE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA367CC", Offset = "0xA367CC")]
	private sealed class <WaitAndPlayHammerLine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x170005AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E98")]
			[Address(RVA = "0x12B6168", Offset = "0x12B6168", VA = "0x12B6168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E9A")]
			[Address(RVA = "0x12B61D0", Offset = "0x12B61D0", VA = "0x12B61D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E95")]
		[Address(RVA = "0x12B4F28", Offset = "0x12B4F28", VA = "0x12B4F28")]
		[DebuggerHidden]
		public <WaitAndPlayHammerLine>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6002E96")]
		[Address(RVA = "0x12B604C", Offset = "0x12B604C", VA = "0x12B604C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E97")]
		[Address(RVA = "0x12B6050", Offset = "0x12B6050", VA = "0x12B6050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E99")]
		[Address(RVA = "0x12B6170", Offset = "0x12B6170", VA = "0x12B6170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA367DC", Offset = "0xA367DC")]
	private sealed class <WaitAndStartEnding>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse01SceneManager <>4__this;

		[Token(Token = "0x170005AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E9E")]
			[Address(RVA = "0x12B640C", Offset = "0x12B640C", VA = "0x12B640C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EA0")]
			[Address(RVA = "0x12B6474", Offset = "0x12B6474", VA = "0x12B6474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E9B")]
		[Address(RVA = "0x12B511C", Offset = "0x12B511C", VA = "0x12B511C")]
		[DebuggerHidden]
		public <WaitAndStartEnding>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6002E9C")]
		[Address(RVA = "0x12B61D8", Offset = "0x12B61D8", VA = "0x12B61D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E9D")]
		[Address(RVA = "0x12B61DC", Offset = "0x12B61DC", VA = "0x12B61DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E9F")]
		[Address(RVA = "0x12B6414", Offset = "0x12B6414", VA = "0x12B6414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private ObstacleBallandChainActivity m_PitActivity;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private PlayerEventTrigger m_ClimbingWall;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private PlayerEventTrigger m_PlayerGrounded;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private ObstacleBasketballActivity m_BasketballActivity;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private ClimbableExt m_GrapplingHook;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private AudioSource m_ObstacleCourseBGM;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private SceneLoadHelper m_EndingTrigger;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private AudioSource m_PlayerFellSFX;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private AudioSource m_PlayerFallingSFX;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private AudioSource m_PlayerFinishClimbingSFX;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private new Transform m_StartPosition;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	protected List<string> _SamWallDialogue;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	protected List<string> _MaxWallDialogue;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private List<int> _playedSamLines;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private List<int> _playedMaxLines;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool isClimbing;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	private bool isSamDialogue;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Coroutine m_WallClimbing;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private BNGPlayerControllerExt m_Player;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int m_Deaths;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private int m_NumFalls;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int m_NumHits;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private int m_NumBasketBallScored;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool isBasketBallMissCooldown;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float basketballCooldown;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int pitLevel;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private bool playOnce;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int dartMisses;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private int dartHits;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private List<int> _bbUsedSuccess;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private List<int> _bbUsedSuccessHitHoop;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private List<int> _bbUsedFailure;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private List<int> _bbUsedFailureHitHoop;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int lastFallRandom;

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x12B38A0", Offset = "0x12B38A0", VA = "0x12B38A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x12B3B08", Offset = "0x12B3B08", VA = "0x12B3B08", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x12B3C9C", Offset = "0x12B3C9C", VA = "0x12B3C9C", Slot = "42")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54804", Offset = "0xA54804")]
	protected override IEnumerator ProcessDeathToCheckpoint()
	{
		return null;
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x12B3A98", Offset = "0x12B3A98", VA = "0x12B3A98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54868", Offset = "0xA54868")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x12B3D64", Offset = "0x12B3D64", VA = "0x12B3D64")]
	public void PlayerLeftScene()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x12B3E14", Offset = "0x12B3E14", VA = "0x12B3E14")]
	private void LoadPark()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x12B3E30", Offset = "0x12B3E30", VA = "0x12B3E30")]
	public void PlayerFinishedClimbing()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x12B3E54", Offset = "0x12B3E54", VA = "0x12B3E54")]
	public void PitObstacleHit()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x12B40C8", Offset = "0x12B40C8", VA = "0x12B40C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA548CC", Offset = "0xA548CC")]
	private IEnumerator WaitandExitPose()
	{
		return null;
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x12B4164", Offset = "0x12B4164", VA = "0x12B4164")]
	public void SetPitLevel(int level)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x12B416C", Offset = "0x12B416C", VA = "0x12B416C")]
	public void ApproachingPit()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x12B4254", Offset = "0x12B4254", VA = "0x12B4254")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54930", Offset = "0xA54930")]
	private IEnumerator WaitForPlayerTunnel()
	{
		return null;
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x12B42F0", Offset = "0x12B42F0", VA = "0x12B42F0")]
	public void ApproachingWall()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x12B4400", Offset = "0x12B4400", VA = "0x12B4400")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54994", Offset = "0xA54994")]
	private IEnumerator PlayerClimbingWallStart()
	{
		return null;
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x12B3C2C", Offset = "0x12B3C2C", VA = "0x12B3C2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA549F8", Offset = "0xA549F8")]
	private IEnumerator PlayerClimbingWallFell()
	{
		return null;
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x12B44C8", Offset = "0x12B44C8", VA = "0x12B44C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54A5C", Offset = "0xA54A5C")]
	private IEnumerator PlayerClimbingWall()
	{
		return null;
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x12B4564", Offset = "0x12B4564", VA = "0x12B4564")]
	public void BallTossPose()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x12B45C8", Offset = "0x12B45C8", VA = "0x12B45C8")]
	public void ApproachingBallToss()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x12B464C", Offset = "0x12B464C", VA = "0x12B464C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54AC0", Offset = "0xA54AC0")]
	private IEnumerator WaitAndApproachBallToss()
	{
		return null;
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x12B46E8", Offset = "0x12B46E8", VA = "0x12B46E8")]
	public void ApproachingLadder()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x12B47E8", Offset = "0x12B47E8", VA = "0x12B47E8")]
	public void ApproachingCraneDialogue()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x12B4948", Offset = "0x12B4948", VA = "0x12B4948")]
	public void ApproachingCrane()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x12B48D8", Offset = "0x12B48D8", VA = "0x12B48D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54B24", Offset = "0xA54B24")]
	private IEnumerator WaitForGrabHook()
	{
		return null;
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x12B49D8", Offset = "0x12B49D8", VA = "0x12B49D8")]
	public void ApproachingSlide()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x12B4AD8", Offset = "0x12B4AD8", VA = "0x12B4AD8")]
	public void ApproachingDarts()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x12B4B3C", Offset = "0x12B4B3C", VA = "0x12B4B3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54B88", Offset = "0xA54B88")]
	private IEnumerator WaitAndApproachDarts()
	{
		return null;
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x12B4BD8", Offset = "0x12B4BD8", VA = "0x12B4BD8")]
	public void ApproachingBasketball()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x12B4CF0", Offset = "0x12B4CF0", VA = "0x12B4CF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54BEC", Offset = "0xA54BEC")]
	private IEnumerator WaitAndEnableBombs()
	{
		return null;
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x12B4D8C", Offset = "0x12B4D8C", VA = "0x12B4D8C", Slot = "44")]
	protected override void DebugTesting()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x12B2C24", Offset = "0x12B2C24", VA = "0x12B2C24")]
	public void BasketBallScored(bool didHitHoop)
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x12B2E2C", Offset = "0x12B2E2C", VA = "0x12B2E2C")]
	public void BasketBallMissed(bool didHitHoop)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x12B4E28", Offset = "0x12B4E28", VA = "0x12B4E28")]
	public void ApproachingHammer()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x12B4EB8", Offset = "0x12B4EB8", VA = "0x12B4EB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54C50", Offset = "0xA54C50")]
	private IEnumerator WaitAndPlayHammerLine()
	{
		return null;
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x12B4F54", Offset = "0x12B4F54", VA = "0x12B4F54")]
	public void StartEnding()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x12B50AC", Offset = "0x12B50AC", VA = "0x12B50AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54CB4", Offset = "0xA54CB4")]
	private IEnumerator WaitAndStartEnding()
	{
		return null;
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x12B5148", Offset = "0x12B5148", VA = "0x12B5148")]
	public ObstacleCourse01SceneManager()
	{
	}
}
[Token(Token = "0x200026A")]
public class ObstacleCourse02SceneManager : GenericSceneManager
{
	[Token(Token = "0x20006EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA367EC", Offset = "0xA367EC")]
	private sealed class <ProcessDeathToCheckpoint>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x170005AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EA4")]
			[Address(RVA = "0x12B9598", Offset = "0x12B9598", VA = "0x12B9598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EA6")]
			[Address(RVA = "0x12B9600", Offset = "0x12B9600", VA = "0x12B9600", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EA1")]
		[Address(RVA = "0x12B74E4", Offset = "0x12B74E4", VA = "0x12B74E4")]
		[DebuggerHidden]
		public <ProcessDeathToCheckpoint>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002EA2")]
		[Address(RVA = "0x12B9384", Offset = "0x12B9384", VA = "0x12B9384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EA3")]
		[Address(RVA = "0x12B9388", Offset = "0x12B9388", VA = "0x12B9388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EA5")]
		[Address(RVA = "0x12B95A0", Offset = "0x12B95A0", VA = "0x12B95A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA367FC", Offset = "0xA367FC")]
	private sealed class <WaitAndStartIntro>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x170005B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EAA")]
			[Address(RVA = "0x12BA910", Offset = "0x12BA910", VA = "0x12BA910", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EAC")]
			[Address(RVA = "0x12BA978", Offset = "0x12BA978", VA = "0x12BA978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EA7")]
		[Address(RVA = "0x12B7510", Offset = "0x12B7510", VA = "0x12B7510")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002EA8")]
		[Address(RVA = "0x12BA56C", Offset = "0x12BA56C", VA = "0x12BA56C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EA9")]
		[Address(RVA = "0x12BA570", Offset = "0x12BA570", VA = "0x12BA570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EAB")]
		[Address(RVA = "0x12BA918", Offset = "0x12BA918", VA = "0x12BA918", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3680C", Offset = "0xA3680C")]
	private sealed class <WaitandExitPose>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x170005B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EB0")]
			[Address(RVA = "0x12BA9F8", Offset = "0x12BA9F8", VA = "0x12BA9F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EB2")]
			[Address(RVA = "0x12BAA60", Offset = "0x12BAA60", VA = "0x12BAA60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EAD")]
		[Address(RVA = "0x12B7788", Offset = "0x12B7788", VA = "0x12B7788")]
		[DebuggerHidden]
		public <WaitandExitPose>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002EAE")]
		[Address(RVA = "0x12BA980", Offset = "0x12BA980", VA = "0x12BA980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EAF")]
		[Address(RVA = "0x12BA984", Offset = "0x12BA984", VA = "0x12BA984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB1")]
		[Address(RVA = "0x12BAA00", Offset = "0x12BAA00", VA = "0x12BAA00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3681C", Offset = "0xA3681C")]
	private sealed class <PlayerClimbingWallStart>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x170005B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EB6")]
			[Address(RVA = "0x12B9314", Offset = "0x12B9314", VA = "0x12B9314", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EB8")]
			[Address(RVA = "0x12B937C", Offset = "0x12B937C", VA = "0x12B937C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EB3")]
		[Address(RVA = "0x12B7D3C", Offset = "0x12B7D3C", VA = "0x12B7D3C")]
		[DebuggerHidden]
		public <PlayerClimbingWallStart>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002EB4")]
		[Address(RVA = "0x12B91BC", Offset = "0x12B91BC", VA = "0x12B91BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EB5")]
		[Address(RVA = "0x12B91C0", Offset = "0x12B91C0", VA = "0x12B91C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EB7")]
		[Address(RVA = "0x12B931C", Offset = "0x12B931C", VA = "0x12B931C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3682C", Offset = "0xA3682C")]
	private sealed class <PlayerClimbingWallFell>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x170005B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EBC")]
			[Address(RVA = "0x12B914C", Offset = "0x12B914C", VA = "0x12B914C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EBE")]
			[Address(RVA = "0x12B91B4", Offset = "0x12B91B4", VA = "0x12B91B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EB9")]
		[Address(RVA = "0x12B7D68", Offset = "0x12B7D68", VA = "0x12B7D68")]
		[DebuggerHidden]
		public <PlayerClimbingWallFell>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6002EBA")]
		[Address(RVA = "0x12B8FC8", Offset = "0x12B8FC8", VA = "0x12B8FC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EBB")]
		[Address(RVA = "0x12B8FCC", Offset = "0x12B8FCC", VA = "0x12B8FCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EBD")]
		[Address(RVA = "0x12B9154", Offset = "0x12B9154", VA = "0x12B9154", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3683C", Offset = "0xA3683C")]
	private sealed class <WaitAndRandomizeWaterGunDialogue>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> <randomizedArr>5__2;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x170005B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EC2")]
			[Address(RVA = "0x12BA194", Offset = "0x12BA194", VA = "0x12BA194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EC4")]
			[Address(RVA = "0x12BA1FC", Offset = "0x12BA1FC", VA = "0x12BA1FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EBF")]
		[Address(RVA = "0x12B7EF0", Offset = "0x12B7EF0", VA = "0x12B7EF0")]
		[DebuggerHidden]
		public <WaitAndRandomizeWaterGunDialogue>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6002EC0")]
		[Address(RVA = "0x12B9F5C", Offset = "0x12B9F5C", VA = "0x12B9F5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EC1")]
		[Address(RVA = "0x12B9F60", Offset = "0x12B9F60", VA = "0x12B9F60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EC3")]
		[Address(RVA = "0x12BA19C", Offset = "0x12BA19C", VA = "0x12BA19C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3684C", Offset = "0xA3684C")]
	private sealed class <WaitAndRandomizeMaxGrabHandDialogue>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x4002AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> <randomizedArr>5__2;

		[Token(Token = "0x4002ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x170005BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EC8")]
			[Address(RVA = "0x12B9EEC", Offset = "0x12B9EEC", VA = "0x12B9EEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ECA")]
			[Address(RVA = "0x12B9F54", Offset = "0x12B9F54", VA = "0x12B9F54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EC5")]
		[Address(RVA = "0x12B8038", Offset = "0x12B8038", VA = "0x12B8038")]
		[DebuggerHidden]
		public <WaitAndRandomizeMaxGrabHandDialogue>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6002EC6")]
		[Address(RVA = "0x12B9CB4", Offset = "0x12B9CB4", VA = "0x12B9CB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EC7")]
		[Address(RVA = "0x12B9CB8", Offset = "0x12B9CB8", VA = "0x12B9CB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EC9")]
		[Address(RVA = "0x12B9EF4", Offset = "0x12B9EF4", VA = "0x12B9EF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3685C", Offset = "0xA3685C")]
	private sealed class <WaitAndRandomizeGrenadeBallDialogue>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> <randomizedArr>5__2;

		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x170005BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ECE")]
			[Address(RVA = "0x12B9C44", Offset = "0x12B9C44", VA = "0x12B9C44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ED0")]
			[Address(RVA = "0x12B9CAC", Offset = "0x12B9CAC", VA = "0x12B9CAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ECB")]
		[Address(RVA = "0x12B84F8", Offset = "0x12B84F8", VA = "0x12B84F8")]
		[DebuggerHidden]
		public <WaitAndRandomizeGrenadeBallDialogue>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6002ECC")]
		[Address(RVA = "0x12B99F8", Offset = "0x12B99F8", VA = "0x12B99F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ECD")]
		[Address(RVA = "0x12B99FC", Offset = "0x12B99FC", VA = "0x12B99FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ECF")]
		[Address(RVA = "0x12B9C4C", Offset = "0x12B9C4C", VA = "0x12B9C4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3686C", Offset = "0xA3686C")]
	private sealed class <WaitAndSetDunkPose>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x170005BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ED4")]
			[Address(RVA = "0x12BA2DC", Offset = "0x12BA2DC", VA = "0x12BA2DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ED6")]
			[Address(RVA = "0x12BA344", Offset = "0x12BA344", VA = "0x12BA344", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ED1")]
		[Address(RVA = "0x12B87A0", Offset = "0x12B87A0", VA = "0x12B87A0")]
		[DebuggerHidden]
		public <WaitAndSetDunkPose>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6002ED2")]
		[Address(RVA = "0x12BA204", Offset = "0x12BA204", VA = "0x12BA204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ED3")]
		[Address(RVA = "0x12BA208", Offset = "0x12BA208", VA = "0x12BA208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED5")]
		[Address(RVA = "0x12BA2E4", Offset = "0x12BA2E4", VA = "0x12BA2E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3687C", Offset = "0xA3687C")]
	private sealed class <WaitAndRandomizeDunkBoothDialogue>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> <randomizedArr>5__2;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x170005C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EDA")]
			[Address(RVA = "0x12B9988", Offset = "0x12B9988", VA = "0x12B9988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EDC")]
			[Address(RVA = "0x12B99F0", Offset = "0x12B99F0", VA = "0x12B99F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ED7")]
		[Address(RVA = "0x12B8900", Offset = "0x12B8900", VA = "0x12B8900")]
		[DebuggerHidden]
		public <WaitAndRandomizeDunkBoothDialogue>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6002ED8")]
		[Address(RVA = "0x12B9740", Offset = "0x12B9740", VA = "0x12B9740", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ED9")]
		[Address(RVA = "0x12B9744", Offset = "0x12B9744", VA = "0x12B9744", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EDB")]
		[Address(RVA = "0x12B9990", Offset = "0x12B9990", VA = "0x12B9990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3688C", Offset = "0xA3688C")]
	private sealed class <WaitAndChangePose>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x170005C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EE0")]
			[Address(RVA = "0x12B96D0", Offset = "0x12B96D0", VA = "0x12B96D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EE2")]
			[Address(RVA = "0x12B9738", Offset = "0x12B9738", VA = "0x12B9738", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EDD")]
		[Address(RVA = "0x12B8C70", Offset = "0x12B8C70", VA = "0x12B8C70")]
		[DebuggerHidden]
		public <WaitAndChangePose>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6002EDE")]
		[Address(RVA = "0x12B9608", Offset = "0x12B9608", VA = "0x12B9608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EDF")]
		[Address(RVA = "0x12B960C", Offset = "0x12B960C", VA = "0x12B960C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE1")]
		[Address(RVA = "0x12B96D8", Offset = "0x12B96D8", VA = "0x12B96D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3689C", Offset = "0xA3689C")]
	private sealed class <WaitAndStartEnding>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse02SceneManager <>4__this;

		[Token(Token = "0x170005C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EE6")]
			[Address(RVA = "0x12BA4FC", Offset = "0x12BA4FC", VA = "0x12BA4FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EE8")]
			[Address(RVA = "0x12BA564", Offset = "0x12BA564", VA = "0x12BA564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EE3")]
		[Address(RVA = "0x12B8EBC", Offset = "0x12B8EBC", VA = "0x12B8EBC")]
		[DebuggerHidden]
		public <WaitAndStartEnding>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6002EE4")]
		[Address(RVA = "0x12BA34C", Offset = "0x12BA34C", VA = "0x12BA34C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EE5")]
		[Address(RVA = "0x12BA350", Offset = "0x12BA350", VA = "0x12BA350", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE7")]
		[Address(RVA = "0x12BA504", Offset = "0x12BA504", VA = "0x12BA504", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private AudioSource m_ObstacleCourseBGM;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private PlayerEventTrigger m_ClimbingWall;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private PlayerEventTrigger m_PlayerGrounded;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private ObstacleBallandChainActivity m_ClownPunchActivity;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private ObstacleSkeeballActivity m_SkeeballActivity;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private ObstacleWaterGunActivity m_WaterGunActivity;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private ObstacleCrane m_Crane;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private ObstacleDunkBoothActivity m_DunkBoothActivity;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private ObstacleWall m_ObstacleWall;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private SceneLoadHelper m_EndingTrigger;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private AudioSource m_PlayerFellSFX;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private AudioSource m_PlayerFallingSFX;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private AudioSource m_PlayerFinishClimbingSFX;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	protected List<string> _SamWallDialogue;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	protected List<string> _MaxWallDialogue;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private ObstacleMaxThrowActivity m_MaxThrow;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private List<int> _playedSamLines;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private List<int> _playedMaxLines;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool isSamDialogue;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	private bool isClimbing;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
	private bool doneClimbing;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Coroutine m_WallClimbing;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private BNGPlayerControllerExt m_Player;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float fHeightClimbed;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private int m_NumFalls;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int m_NumHits;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private int m_Deaths;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private string clownHitPose;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private int dartMisses;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private int dartHits;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool playOnce;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Dictionary<int, bool> playedSamLines;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Dictionary<int, bool> playedMaxLines;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private int lastFallRandom;

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x12B6DD0", Offset = "0x12B6DD0", VA = "0x12B6DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x12B6F90", Offset = "0x12B6F90", VA = "0x12B6F90", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x12B7124", Offset = "0x12B7124", VA = "0x12B7124")]
	private void PlayRandomWallConversation(bool isExclusive = false, bool isSam = false)
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x12B7474", Offset = "0x12B7474", VA = "0x12B7474", Slot = "42")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54D18", Offset = "0xA54D18")]
	protected override IEnumerator ProcessDeathToCheckpoint()
	{
		return null;
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x12B6F20", Offset = "0x12B6F20", VA = "0x12B6F20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54D7C", Offset = "0xA54D7C")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x12B753C", Offset = "0x12B753C", VA = "0x12B753C")]
	public void PitObstacleHit()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x12B7718", Offset = "0x12B7718", VA = "0x12B7718")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54DE0", Offset = "0xA54DE0")]
	private IEnumerator WaitandExitPose()
	{
		return null;
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x12B77B4", Offset = "0x12B77B4", VA = "0x12B77B4")]
	public void ApproachWheel()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x12B7888", Offset = "0x12B7888", VA = "0x12B7888")]
	public void ApproachEndWheel()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x12B7934", Offset = "0x12B7934", VA = "0x12B7934")]
	public void ApproachingWall()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x12B7AB4", Offset = "0x12B7AB4", VA = "0x12B7AB4")]
	public void ApproachingWall2()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x12B7B28", Offset = "0x12B7B28", VA = "0x12B7B28")]
	public void ApproachingWall3()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x12B7B9C", Offset = "0x12B7B9C", VA = "0x12B7B9C")]
	public void ApproachingWall4()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x12B7C20", Offset = "0x12B7C20", VA = "0x12B7C20")]
	public void ApproachingWall5()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x12B7C94", Offset = "0x12B7C94", VA = "0x12B7C94")]
	public void ApproachingWall6()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x12B7D08", Offset = "0x12B7D08", VA = "0x12B7D08")]
	public void ExitClimbing()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x12B7A44", Offset = "0x12B7A44", VA = "0x12B7A44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54E44", Offset = "0xA54E44")]
	private IEnumerator PlayerClimbingWallStart()
	{
		return null;
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x12B70B4", Offset = "0x12B70B4", VA = "0x12B70B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54EA8", Offset = "0xA54EA8")]
	private IEnumerator PlayerClimbingWallFell()
	{
		return null;
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x12B7D94", Offset = "0x12B7D94", VA = "0x12B7D94")]
	public void ApproachWaterGun()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x12B7E80", Offset = "0x12B7E80", VA = "0x12B7E80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54F0C", Offset = "0xA54F0C")]
	private IEnumerator WaitAndRandomizeWaterGunDialogue()
	{
		return null;
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x12B7F1C", Offset = "0x12B7F1C", VA = "0x12B7F1C")]
	public void ApproachMaxGrabHand()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x12B7FC8", Offset = "0x12B7FC8", VA = "0x12B7FC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54F70", Offset = "0xA54F70")]
	private IEnumerator WaitAndRandomizeMaxGrabHandDialogue()
	{
		return null;
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x12B8064", Offset = "0x12B8064", VA = "0x12B8064")]
	public void ApproachMaxThrow()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x12B814C", Offset = "0x12B814C", VA = "0x12B814C")]
	public void MaxThrowHit()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x12B81F8", Offset = "0x12B81F8", VA = "0x12B81F8")]
	public void MaxThrowMiss()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x12B82A4", Offset = "0x12B82A4", VA = "0x12B82A4")]
	public void ApproachGrenadeBall()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x12B8400", Offset = "0x12B8400", VA = "0x12B8400")]
	private List<int> randomizeArray(List<int> arr)
	{
		return null;
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x12B8390", Offset = "0x12B8390", VA = "0x12B8390")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA54FD4", Offset = "0xA54FD4")]
	private IEnumerator WaitAndRandomizeGrenadeBallDialogue()
	{
		return null;
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x12B8524", Offset = "0x12B8524", VA = "0x12B8524")]
	public void ApproachRings()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x12B85D0", Offset = "0x12B85D0", VA = "0x12B85D0")]
	public void DunkTankHit()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x12B8698", Offset = "0x12B8698", VA = "0x12B8698")]
	public void SetMaxDunkPose(bool shouldWait = true)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x12B8730", Offset = "0x12B8730", VA = "0x12B8730")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55038", Offset = "0xA55038")]
	private IEnumerator WaitAndSetDunkPose()
	{
		return null;
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x12B87CC", Offset = "0x12B87CC", VA = "0x12B87CC")]
	public void ApproachDunkbooth()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x12B8890", Offset = "0x12B8890", VA = "0x12B8890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5509C", Offset = "0xA5509C")]
	private IEnumerator WaitAndRandomizeDunkBoothDialogue()
	{
		return null;
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x12B892C", Offset = "0x12B892C", VA = "0x12B892C")]
	public void ApproachTunnel()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x12B89E8", Offset = "0x12B89E8", VA = "0x12B89E8")]
	public void ApproachTunnel2()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x12B8A38", Offset = "0x12B8A38", VA = "0x12B8A38")]
	public void ApproachTunnel3()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x12B8A88", Offset = "0x12B8A88", VA = "0x12B8A88")]
	public void ApproachTunnel4()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x12B8AD8", Offset = "0x12B8AD8", VA = "0x12B8AD8")]
	public void ApproachTunnel5()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x12B8B28", Offset = "0x12B8B28", VA = "0x12B8B28")]
	public void ApproachMonkeyBars()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x12B8BD4", Offset = "0x12B8BD4", VA = "0x12B8BD4")]
	public void ChangeExitPose()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x12B8C00", Offset = "0x12B8C00", VA = "0x12B8C00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55100", Offset = "0xA55100")]
	private IEnumerator WaitAndChangePose()
	{
		return null;
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x12B8C9C", Offset = "0x12B8C9C", VA = "0x12B8C9C")]
	public void StartEnding()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x12B8E00", Offset = "0x12B8E00", VA = "0x12B8E00")]
	public void PlayerLeftSceneEarly()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x12B8EA0", Offset = "0x12B8EA0", VA = "0x12B8EA0")]
	private void LoadPark()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x12B8D90", Offset = "0x12B8D90", VA = "0x12B8D90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55164", Offset = "0xA55164")]
	private IEnumerator WaitAndStartEnding()
	{
		return null;
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x12B8EE8", Offset = "0x12B8EE8", VA = "0x12B8EE8")]
	public ObstacleCourse02SceneManager()
	{
	}
}
[Token(Token = "0x200026B")]
public class ObstacleCourse03SceneManager : GenericSceneManager
{
	[Token(Token = "0x20006F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA368AC", Offset = "0xA368AC")]
	private sealed class <ProcessDeathToCheckpoint>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse03SceneManager <>4__this;

		[Token(Token = "0x170005C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EEC")]
			[Address(RVA = "0x12BCC58", Offset = "0x12BCC58", VA = "0x12BCC58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EEE")]
			[Address(RVA = "0x12BCCC0", Offset = "0x12BCCC0", VA = "0x12BCCC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EE9")]
		[Address(RVA = "0x12BADA8", Offset = "0x12BADA8", VA = "0x12BADA8")]
		[DebuggerHidden]
		public <ProcessDeathToCheckpoint>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002EEA")]
		[Address(RVA = "0x12BC9EC", Offset = "0x12BC9EC", VA = "0x12BC9EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EEB")]
		[Address(RVA = "0x12BC9F0", Offset = "0x12BC9F0", VA = "0x12BC9F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EED")]
		[Address(RVA = "0x12BCC60", Offset = "0x12BCC60", VA = "0x12BCC60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA368BC", Offset = "0xA368BC")]
	private sealed class <WaitAndStartIntro>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObstacleCourse03SceneManager <>4__this;

		[Token(Token = "0x170005C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EF2")]
			[Address(RVA = "0x12BD240", Offset = "0x12BD240", VA = "0x12BD240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EF4")]
			[Address(RVA = "0x12BD2A8", Offset = "0x12BD2A8", VA = "0x12BD2A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EEF")]
		[Address(RVA = "0x12BADD4", Offset = "0x12BADD4", VA = "0x12BADD4")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002EF0")]
		[Address(RVA = "0x12BCCC8", Offset = "0x12BCCC8", VA = "0x12BCCC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EF1")]
		[Address(RVA = "0x12BCCCC", Offset = "0x12BCCCC", VA = "0x12BCCCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF3")]
		[Address(RVA = "0x12BD248", Offset = "0x12BD248", VA = "0x12BD248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private AudioSource m_ObstacleCourseBGM;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private ObstacleCharacterShooting[] m_ShootingCharacters;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private ObstacleCharacterTossUp[] m_TossUpCharacters;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private ObstacleTossUpActivity m_TossUpActivity;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private BNGPlayerControllerExt m_Player;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int m_Deaths;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool balloonsCollected;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int ringsCollected;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Dictionary<string, bool> m_PlayedLines;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool doOnce;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private string lastConvo;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<string> m_RandomDialogue;

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x12BAA68", Offset = "0x12BAA68", VA = "0x12BAA68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x12BABF8", Offset = "0x12BABF8", VA = "0x12BABF8", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x12BACA8", Offset = "0x12BACA8", VA = "0x12BACA8")]
	public void RingCollected()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x12B15D8", Offset = "0x12B15D8", VA = "0x12B15D8")]
	public void BalloonsCollected()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x12BAD38", Offset = "0x12BAD38", VA = "0x12BAD38", Slot = "42")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA551C8", Offset = "0xA551C8")]
	protected override IEnumerator ProcessDeathToCheckpoint()
	{
		return null;
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x12BAB88", Offset = "0x12BAB88", VA = "0x12BAB88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5522C", Offset = "0xA5522C")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x12BAE00", Offset = "0x12BAE00", VA = "0x12BAE00")]
	public void PlayDoorUnlocked()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x12BAEA8", Offset = "0x12BAEA8", VA = "0x12BAEA8")]
	public void ApproachingFlying()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x12BAF48", Offset = "0x12BAF48", VA = "0x12BAF48")]
	public void ApproachingRingsA()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x12BB074", Offset = "0x12BB074", VA = "0x12BB074")]
	public void ApproachingDoor()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x12BB1A0", Offset = "0x12BB1A0", VA = "0x12BB1A0")]
	public bool isConversationPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x12BB1BC", Offset = "0x12BB1BC", VA = "0x12BB1BC")]
	public void StartWhackIdle()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x12BB238", Offset = "0x12BB238", VA = "0x12BB238")]
	public void PlayWhackIdle()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x12BB390", Offset = "0x12BB390", VA = "0x12BB390")]
	public void PlayCraneIdle()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x12BB4E8", Offset = "0x12BB4E8", VA = "0x12BB4E8")]
	public void ApproachingFans()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x12BB588", Offset = "0x12BB588", VA = "0x12BB588")]
	public void ApproachingTossUp()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x12BB6E8", Offset = "0x12BB6E8", VA = "0x12BB6E8")]
	public void ApproachingWhackABear()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x12BB814", Offset = "0x12BB814", VA = "0x12BB814")]
	public void ApproachingRingsB01()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x12BB990", Offset = "0x12BB990", VA = "0x12BB990")]
	public void ApproachingRingsB02()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x12BB994", Offset = "0x12BB994", VA = "0x12BB994")]
	public void ApproachingRingsB03()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x12BB998", Offset = "0x12BB998", VA = "0x12BB998")]
	public void ApproachingCrane()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x12BBB10", Offset = "0x12BBB10", VA = "0x12BBB10")]
	public void ApproachingCrane2()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x12BBC3C", Offset = "0x12BBC3C", VA = "0x12BBC3C")]
	public void ApproachingExit()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x12BBD68", Offset = "0x12BBD68", VA = "0x12BBD68")]
	public void FailedCrane()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x12BBF64", Offset = "0x12BBF64", VA = "0x12BBF64")]
	public bool TossUpDoll()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x12BC040", Offset = "0x12BC040", VA = "0x12BC040")]
	public void RandomDialogue()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x12BC120", Offset = "0x12BC120", VA = "0x12BC120")]
	public void ApproachingRingsA01SamMaxPose()
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x12BC184", Offset = "0x12BC184", VA = "0x12BC184")]
	public void ApproachingRingsA02SamMaxPose()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x12BC1E8", Offset = "0x12BC1E8", VA = "0x12BC1E8")]
	public void ApproachingRingsA03SamMaxPose()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x12BC24C", Offset = "0x12BC24C", VA = "0x12BC24C")]
	public void ApproachingFansSamMaxPose()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x12BC2B0", Offset = "0x12BC2B0", VA = "0x12BC2B0")]
	public void ApproachingTossUpSamMaxPose()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x12BC314", Offset = "0x12BC314", VA = "0x12BC314")]
	public void ApproachingWhackABearSamMaxPose()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x12BC378", Offset = "0x12BC378", VA = "0x12BC378")]
	public void ApproachingRingsB01SamMaxPose()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x12BC3DC", Offset = "0x12BC3DC", VA = "0x12BC3DC")]
	public void ApproachingRingsB02SamMaxPose()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x12BC48C", Offset = "0x12BC48C", VA = "0x12BC48C")]
	public void ApproachingRingsB03SamMaxPose()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x12BC53C", Offset = "0x12BC53C", VA = "0x12BC53C")]
	public void ApproachingRingsB04SamMaxPose()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x12BC5EC", Offset = "0x12BC5EC", VA = "0x12BC5EC")]
	public void ApproachingRingsB05SamMaxPose()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x12BC69C", Offset = "0x12BC69C", VA = "0x12BC69C")]
	public void ApproachingCraneSamMaxPose()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x12BC74C", Offset = "0x12BC74C", VA = "0x12BC74C")]
	public void ApproachingExitSamMaxPose()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x12BC7B0", Offset = "0x12BC7B0", VA = "0x12BC7B0")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x12BC884", Offset = "0x12BC884", VA = "0x12BC884")]
	public ObstacleCourse03SceneManager()
	{
	}
}
[Token(Token = "0x200026C")]
public class OfficeHubSceneManager : GenericSceneManager
{
	[Token(Token = "0x20006F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA368CC", Offset = "0xA368CC")]
	private sealed class <WaitAndStartIntro>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OfficeHubSceneManager <>4__this;

		[Token(Token = "0x170005CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EF8")]
			[Address(RVA = "0x124136C", Offset = "0x124136C", VA = "0x124136C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002EFA")]
			[Address(RVA = "0x12413D4", Offset = "0x12413D4", VA = "0x12413D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EF5")]
		[Address(RVA = "0x1241190", Offset = "0x1241190", VA = "0x1241190")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002EF6")]
		[Address(RVA = "0x12411C4", Offset = "0x12411C4", VA = "0x12411C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0x12411C8", Offset = "0x12411C8", VA = "0x12411C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF9")]
		[Address(RVA = "0x1241374", Offset = "0x1241374", VA = "0x1241374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x12410F4", Offset = "0x12410F4", VA = "0x12410F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x1241120", Offset = "0x1241120", VA = "0x1241120")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55290", Offset = "0xA55290")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x12411BC", Offset = "0x12411BC", VA = "0x12411BC")]
	public OfficeHubSceneManager()
	{
	}
}
[Token(Token = "0x200026D")]
public class OfficeSceneManager : GenericSceneManager
{
	[Token(Token = "0x20006FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA368DC", Offset = "0xA368DC")]
	private sealed class <WaitAndStartIntro>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OfficeSceneManager <>4__this;

		[Token(Token = "0x170005CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002EFE")]
			[Address(RVA = "0x12447D4", Offset = "0x12447D4", VA = "0x12447D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F00")]
			[Address(RVA = "0x124483C", Offset = "0x124483C", VA = "0x124483C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EFB")]
		[Address(RVA = "0x1242534", Offset = "0x1242534", VA = "0x1242534")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002EFC")]
		[Address(RVA = "0x12444E8", Offset = "0x12444E8", VA = "0x12444E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002EFD")]
		[Address(RVA = "0x12444EC", Offset = "0x12444EC", VA = "0x12444EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EFF")]
		[Address(RVA = "0x12447DC", Offset = "0x12447DC", VA = "0x12447DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA368EC", Offset = "0xA368EC")]
	private sealed class <WaitForEnter>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OfficeSceneManager <>4__this;

		[Token(Token = "0x170005CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F04")]
			[Address(RVA = "0x1244BEC", Offset = "0x1244BEC", VA = "0x1244BEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F06")]
			[Address(RVA = "0x1244C54", Offset = "0x1244C54", VA = "0x1244C54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F01")]
		[Address(RVA = "0x12426FC", Offset = "0x12426FC", VA = "0x12426FC")]
		[DebuggerHidden]
		public <WaitForEnter>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002F02")]
		[Address(RVA = "0x1244A20", Offset = "0x1244A20", VA = "0x1244A20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F03")]
		[Address(RVA = "0x1244A24", Offset = "0x1244A24", VA = "0x1244A24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F05")]
		[Address(RVA = "0x1244BF4", Offset = "0x1244BF4", VA = "0x1244BF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA368FC", Offset = "0xA368FC")]
	private sealed class <WaitForIntroFinish>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OfficeSceneManager <>4__this;

		[Token(Token = "0x170005D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F0A")]
			[Address(RVA = "0x12451D8", Offset = "0x12451D8", VA = "0x12451D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F0C")]
			[Address(RVA = "0x1245240", Offset = "0x1245240", VA = "0x1245240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F07")]
		[Address(RVA = "0x1242834", Offset = "0x1242834", VA = "0x1242834")]
		[DebuggerHidden]
		public <WaitForIntroFinish>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002F08")]
		[Address(RVA = "0x1244E40", Offset = "0x1244E40", VA = "0x1244E40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F09")]
		[Address(RVA = "0x1244E44", Offset = "0x1244E44", VA = "0x1244E44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0B")]
		[Address(RVA = "0x12451E0", Offset = "0x12451E0", VA = "0x12451E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3690C", Offset = "0xA3690C")]
	private sealed class <WaitForIntroEnd>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OfficeSceneManager <>4__this;

		[Token(Token = "0x170005D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F10")]
			[Address(RVA = "0x1244DD0", Offset = "0x1244DD0", VA = "0x1244DD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F12")]
			[Address(RVA = "0x1244E38", Offset = "0x1244E38", VA = "0x1244E38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F0D")]
		[Address(RVA = "0x12428D0", Offset = "0x12428D0", VA = "0x12428D0")]
		[DebuggerHidden]
		public <WaitForIntroEnd>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0x1244C5C", Offset = "0x1244C5C", VA = "0x1244C5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F0F")]
		[Address(RVA = "0x1244C60", Offset = "0x1244C60", VA = "0x1244C60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F11")]
		[Address(RVA = "0x1244DD8", Offset = "0x1244DD8", VA = "0x1244DD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20006FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3691C", Offset = "0xA3691C")]
	private sealed class <WaitForBomb>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OfficeSceneManager <>4__this;

		[Token(Token = "0x4002B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <hasBomb>5__2;

		[Token(Token = "0x170005D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F16")]
			[Address(RVA = "0x12449B0", Offset = "0x12449B0", VA = "0x12449B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F18")]
			[Address(RVA = "0x1244A18", Offset = "0x1244A18", VA = "0x1244A18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F13")]
		[Address(RVA = "0x1243CE4", Offset = "0x1243CE4", VA = "0x1243CE4")]
		[DebuggerHidden]
		public <WaitForBomb>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002F14")]
		[Address(RVA = "0x1244844", Offset = "0x1244844", VA = "0x1244844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F15")]
		[Address(RVA = "0x1244848", Offset = "0x1244848", VA = "0x1244848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F17")]
		[Address(RVA = "0x12449B8", Offset = "0x12449B8", VA = "0x12449B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject m_Max;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Animator m_MaxAnim;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Transform m_MaxLeftHand;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private CapsuleCollider m_MaxCollider;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform m_OriginalFlyerParent;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Transform m_OriginalMaxParent;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private Transform _playerHead;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject Flyer;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private ConversationTrigger resolverTrigger;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private Transform m_MaxLanding;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private CharacterController m_Player;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private Grabbable[] m_ToEnable;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private AudioSource m_PlacePaper;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private AudioSource m_TakePaper;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private Transform m_PlayerLock;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private new Transform m_StartPosition;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Coroutine m_IntroCoroutine;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Coroutine m_WaitForEnter;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int index;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private bool isInterrupting;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
	private bool waitingForEnter;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AE")]
	private bool attachItemMax;

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x12423E0", Offset = "0x12423E0", VA = "0x12423E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x12424C4", Offset = "0x12424C4", VA = "0x12424C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA552F4", Offset = "0xA552F4")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x1242560", Offset = "0x1242560", VA = "0x1242560")]
	public void DoorKnockTrigger()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x1242654", Offset = "0x1242654", VA = "0x1242654")]
	public void DoorEnteredTrigger()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x12425E4", Offset = "0x12425E4", VA = "0x12425E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55358", Offset = "0xA55358")]
	private IEnumerator WaitForEnter()
	{
		return null;
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x1242728", Offset = "0x1242728", VA = "0x1242728", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x124268C", Offset = "0x124268C", VA = "0x124268C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA553BC", Offset = "0xA553BC")]
	private IEnumerator WaitForIntroFinish()
	{
		return null;
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x1242860", Offset = "0x1242860", VA = "0x1242860")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55420", Offset = "0xA55420")]
	private IEnumerator WaitForIntroEnd()
	{
		return null;
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x12428FC", Offset = "0x12428FC", VA = "0x12428FC")]
	public bool InterruptIntroCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x1242AA8", Offset = "0x1242AA8", VA = "0x1242AA8", Slot = "26")]
	public override void IntroInterrupt(Conversation convo)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x1242BA8", Offset = "0x1242BA8", VA = "0x1242BA8", Slot = "25")]
	public override bool IntroInterruptCheck(Conversation convo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x1242C9C", Offset = "0x1242C9C", VA = "0x1242C9C")]
	public void StartIntroTimeline()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x12429F0", Offset = "0x12429F0", VA = "0x12429F0")]
	public void InterruptIntro()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x1242CF8", Offset = "0x1242CF8", VA = "0x1242CF8")]
	private void EnableDrawers()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x1242D68", Offset = "0x1242D68", VA = "0x1242D68")]
	public void AttachFlyerToMax()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x1242FE8", Offset = "0x1242FE8", VA = "0x1242FE8")]
	public void DeattachFlyerFromMax()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x124313C", Offset = "0x124313C", VA = "0x124313C")]
	public void MaxJumpOnPlayer()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x12434F8", Offset = "0x12434F8", VA = "0x12434F8")]
	public void MaxLandedOnPlayer()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x1243C48", Offset = "0x1243C48", VA = "0x1243C48")]
	public void MaxLandedOnGround()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x1243C74", Offset = "0x1243C74", VA = "0x1243C74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55484", Offset = "0xA55484")]
	private IEnumerator WaitForBomb()
	{
		return null;
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x1243D10", Offset = "0x1243D10", VA = "0x1243D10")]
	public void MaxAttatchedToPlayer()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x1243D6C", Offset = "0x1243D6C", VA = "0x1243D6C")]
	public void DeattachMax()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x1243BD4", Offset = "0x1243BD4", VA = "0x1243BD4")]
	public void AttachMax()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x1244470", Offset = "0x1244470", VA = "0x1244470")]
	public void EnableMax()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x12444E0", Offset = "0x12444E0", VA = "0x12444E0")]
	public OfficeSceneManager()
	{
	}
}
[Token(Token = "0x200026E")]
public class ParkSceneManager : GenericSceneManager
{
	[Token(Token = "0x20006FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3692C", Offset = "0xA3692C")]
	private sealed class <WaitAndProcessPierDeath>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x170005D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F1C")]
			[Address(RVA = "0x11307BC", Offset = "0x11307BC", VA = "0x11307BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F1E")]
			[Address(RVA = "0x1130824", Offset = "0x1130824", VA = "0x1130824", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F19")]
		[Address(RVA = "0x11304C8", Offset = "0x11304C8", VA = "0x11304C8")]
		[DebuggerHidden]
		public <WaitAndProcessPierDeath>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6002F1A")]
		[Address(RVA = "0x11304F4", Offset = "0x11304F4", VA = "0x11304F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F1B")]
		[Address(RVA = "0x11304F8", Offset = "0x11304F8", VA = "0x11304F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F1D")]
		[Address(RVA = "0x11307C4", Offset = "0x11307C4", VA = "0x11307C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000700")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3693C", Offset = "0xA3693C")]
	private sealed class <WaitAndEndSkyPatrol>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x170005D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F22")]
			[Address(RVA = "0x112F9F0", Offset = "0x112F9F0", VA = "0x112F9F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F24")]
			[Address(RVA = "0x112FA58", Offset = "0x112FA58", VA = "0x112FA58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F1F")]
		[Address(RVA = "0x112F3B4", Offset = "0x112F3B4", VA = "0x112F3B4")]
		[DebuggerHidden]
		public <WaitAndEndSkyPatrol>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6002F20")]
		[Address(RVA = "0x112F3E0", Offset = "0x112F3E0", VA = "0x112F3E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F21")]
		[Address(RVA = "0x112F3E4", Offset = "0x112F3E4", VA = "0x112F3E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F23")]
		[Address(RVA = "0x112F9F8", Offset = "0x112F9F8", VA = "0x112F9F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000701")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3694C", Offset = "0xA3694C")]
	private sealed class <ProcessDeathToCheckpoint>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x170005DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F28")]
			[Address(RVA = "0x112EEA8", Offset = "0x112EEA8", VA = "0x112EEA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F2A")]
			[Address(RVA = "0x112EF10", Offset = "0x112EF10", VA = "0x112EF10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F25")]
		[Address(RVA = "0x112E9AC", Offset = "0x112E9AC", VA = "0x112E9AC")]
		[DebuggerHidden]
		public <ProcessDeathToCheckpoint>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6002F26")]
		[Address(RVA = "0x112E9D8", Offset = "0x112E9D8", VA = "0x112E9D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F27")]
		[Address(RVA = "0x112E9DC", Offset = "0x112E9DC", VA = "0x112E9DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F29")]
		[Address(RVA = "0x112EEB0", Offset = "0x112EEB0", VA = "0x112EEB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000702")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3695C", Offset = "0xA3695C")]
	private sealed class <WaitAndFadeIn>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x4002B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <shouldLoadSkyPatrol>5__2;

		[Token(Token = "0x170005DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F2E")]
			[Address(RVA = "0x112FC68", Offset = "0x112FC68", VA = "0x112FC68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F30")]
			[Address(RVA = "0x112FCD0", Offset = "0x112FCD0", VA = "0x112FCD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F2B")]
		[Address(RVA = "0x112FA60", Offset = "0x112FA60", VA = "0x112FA60")]
		[DebuggerHidden]
		public <WaitAndFadeIn>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6002F2C")]
		[Address(RVA = "0x112FA8C", Offset = "0x112FA8C", VA = "0x112FA8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F2D")]
		[Address(RVA = "0x112FA90", Offset = "0x112FA90", VA = "0x112FA90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F2F")]
		[Address(RVA = "0x112FC70", Offset = "0x112FC70", VA = "0x112FC70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000703")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3696C", Offset = "0xA3696C")]
	private sealed class <WaitAndStartFade>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x170005DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F34")]
			[Address(RVA = "0x11320E8", Offset = "0x11320E8", VA = "0x11320E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F36")]
			[Address(RVA = "0x1132150", Offset = "0x1132150", VA = "0x1132150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F31")]
		[Address(RVA = "0x1131DF0", Offset = "0x1131DF0", VA = "0x1131DF0")]
		[DebuggerHidden]
		public <WaitAndStartFade>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x6002F32")]
		[Address(RVA = "0x1131E1C", Offset = "0x1131E1C", VA = "0x1131E1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F33")]
		[Address(RVA = "0x1131E20", Offset = "0x1131E20", VA = "0x1131E20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F35")]
		[Address(RVA = "0x11320F0", Offset = "0x11320F0", VA = "0x11320F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000704")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3697C", Offset = "0xA3697C")]
	private sealed class <WaitAndStartIntro>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x4002B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showResults;

		[Token(Token = "0x4002B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isPark1Intro;

		[Token(Token = "0x4002B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool shouldEnableCharacterFollow;

		[Token(Token = "0x4002B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		private bool <shouldPlayAquabear>5__2;

		[Token(Token = "0x4002B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private GameManager.ThemeParkAct <act>5__3;

		[Token(Token = "0x170005E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F3A")]
			[Address(RVA = "0x1132AB4", Offset = "0x1132AB4", VA = "0x1132AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F3C")]
			[Address(RVA = "0x1132B1C", Offset = "0x1132B1C", VA = "0x1132B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F37")]
		[Address(RVA = "0x1132158", Offset = "0x1132158", VA = "0x1132158")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6002F38")]
		[Address(RVA = "0x1132184", Offset = "0x1132184", VA = "0x1132184", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0x1132188", Offset = "0x1132188", VA = "0x1132188", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F3B")]
		[Address(RVA = "0x1132ABC", Offset = "0x1132ABC", VA = "0x1132ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000705")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3698C", Offset = "0xA3698C")]
	private sealed class <WaitAndStartAct1Outro>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x4002B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showResults;

		[Token(Token = "0x170005E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F40")]
			[Address(RVA = "0x1131090", Offset = "0x1131090", VA = "0x1131090", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F42")]
			[Address(RVA = "0x11310F8", Offset = "0x11310F8", VA = "0x11310F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F3D")]
		[Address(RVA = "0x1130ABC", Offset = "0x1130ABC", VA = "0x1130ABC")]
		[DebuggerHidden]
		public <WaitAndStartAct1Outro>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0x1130AE8", Offset = "0x1130AE8", VA = "0x1130AE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0x1130AEC", Offset = "0x1130AEC", VA = "0x1130AEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0x1131098", Offset = "0x1131098", VA = "0x1131098", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000706")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3699C", Offset = "0xA3699C")]
	private sealed class <WaitAndStartAct2Outro>d__85 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x4002B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showResults;

		[Token(Token = "0x170005E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F46")]
			[Address(RVA = "0x11316FC", Offset = "0x11316FC", VA = "0x11316FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F48")]
			[Address(RVA = "0x1131764", Offset = "0x1131764", VA = "0x1131764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0x1131100", Offset = "0x1131100", VA = "0x1131100")]
		[DebuggerHidden]
		public <WaitAndStartAct2Outro>d__85(int <>1__state)
		{
		}

		[Token(Token = "0x6002F44")]
		[Address(RVA = "0x113112C", Offset = "0x113112C", VA = "0x113112C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F45")]
		[Address(RVA = "0x1131130", Offset = "0x1131130", VA = "0x1131130", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F47")]
		[Address(RVA = "0x1131704", Offset = "0x1131704", VA = "0x1131704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000707")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA369AC", Offset = "0xA369AC")]
	private sealed class <WaitAndStartAct3Outro>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x4002B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showResults;

		[Token(Token = "0x170005E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F4C")]
			[Address(RVA = "0x1131D80", Offset = "0x1131D80", VA = "0x1131D80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F4E")]
			[Address(RVA = "0x1131DE8", Offset = "0x1131DE8", VA = "0x1131DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F49")]
		[Address(RVA = "0x113176C", Offset = "0x113176C", VA = "0x113176C")]
		[DebuggerHidden]
		public <WaitAndStartAct3Outro>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x6002F4A")]
		[Address(RVA = "0x1131798", Offset = "0x1131798", VA = "0x1131798", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F4B")]
		[Address(RVA = "0x113179C", Offset = "0x113179C", VA = "0x113179C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F4D")]
		[Address(RVA = "0x1131D88", Offset = "0x1131D88", VA = "0x1131D88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000708")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA369BC", Offset = "0xA369BC")]
	private sealed class <WaitAndPresentTurkeyBaster>d__88 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x170005E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F52")]
			[Address(RVA = "0x1130458", Offset = "0x1130458", VA = "0x1130458", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F54")]
			[Address(RVA = "0x11304C0", Offset = "0x11304C0", VA = "0x11304C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F4F")]
		[Address(RVA = "0x1130278", Offset = "0x1130278", VA = "0x1130278")]
		[DebuggerHidden]
		public <WaitAndPresentTurkeyBaster>d__88(int <>1__state)
		{
		}

		[Token(Token = "0x6002F50")]
		[Address(RVA = "0x11302A4", Offset = "0x11302A4", VA = "0x11302A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F51")]
		[Address(RVA = "0x11302A8", Offset = "0x11302A8", VA = "0x11302A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F53")]
		[Address(RVA = "0x1130460", Offset = "0x1130460", VA = "0x1130460", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000709")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA369CC", Offset = "0xA369CC")]
	private sealed class <WaitAndSlapWatch>d__102 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x170005EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F58")]
			[Address(RVA = "0x1130A4C", Offset = "0x1130A4C", VA = "0x1130A4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F5A")]
			[Address(RVA = "0x1130AB4", Offset = "0x1130AB4", VA = "0x1130AB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F55")]
		[Address(RVA = "0x113082C", Offset = "0x113082C", VA = "0x113082C")]
		[DebuggerHidden]
		public <WaitAndSlapWatch>d__102(int <>1__state)
		{
		}

		[Token(Token = "0x6002F56")]
		[Address(RVA = "0x1130858", Offset = "0x1130858", VA = "0x1130858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F57")]
		[Address(RVA = "0x113085C", Offset = "0x113085C", VA = "0x113085C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F59")]
		[Address(RVA = "0x1130A54", Offset = "0x1130A54", VA = "0x1130A54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200070A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA369DC", Offset = "0xA369DC")]
	private sealed class <WaitAndHoldBaster>d__103 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x4002B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Grabber <Hand>5__2;

		[Token(Token = "0x170005ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F5E")]
			[Address(RVA = "0x112FF58", Offset = "0x112FF58", VA = "0x112FF58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F60")]
			[Address(RVA = "0x112FFC0", Offset = "0x112FFC0", VA = "0x112FFC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F5B")]
		[Address(RVA = "0x112FCD8", Offset = "0x112FCD8", VA = "0x112FCD8")]
		[DebuggerHidden]
		public <WaitAndHoldBaster>d__103(int <>1__state)
		{
		}

		[Token(Token = "0x6002F5C")]
		[Address(RVA = "0x112FD04", Offset = "0x112FD04", VA = "0x112FD04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F5D")]
		[Address(RVA = "0x112FD08", Offset = "0x112FD08", VA = "0x112FD08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F5F")]
		[Address(RVA = "0x112FF60", Offset = "0x112FF60", VA = "0x112FF60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200070B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA369EC", Offset = "0xA369EC")]
	private sealed class <WaitAndStartMicroscopeIntro>d__104 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x170005EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F64")]
			[Address(RVA = "0x1132EB4", Offset = "0x1132EB4", VA = "0x1132EB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F66")]
			[Address(RVA = "0x1132F1C", Offset = "0x1132F1C", VA = "0x1132F1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F61")]
		[Address(RVA = "0x1132B24", Offset = "0x1132B24", VA = "0x1132B24")]
		[DebuggerHidden]
		public <WaitAndStartMicroscopeIntro>d__104(int <>1__state)
		{
		}

		[Token(Token = "0x6002F62")]
		[Address(RVA = "0x1132B50", Offset = "0x1132B50", VA = "0x1132B50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F63")]
		[Address(RVA = "0x1132B54", Offset = "0x1132B54", VA = "0x1132B54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F65")]
		[Address(RVA = "0x1132EBC", Offset = "0x1132EBC", VA = "0x1132EBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200070C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA369FC", Offset = "0xA369FC")]
	private sealed class <WaitForMaxPickup>d__107 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x4002B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GrabbableExt <max>5__2;

		[Token(Token = "0x4002B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timePassed>5__3;

		[Token(Token = "0x170005F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F6A")]
			[Address(RVA = "0x11330B0", Offset = "0x11330B0", VA = "0x11330B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F6C")]
			[Address(RVA = "0x1133118", Offset = "0x1133118", VA = "0x1133118", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F67")]
		[Address(RVA = "0x1132F24", Offset = "0x1132F24", VA = "0x1132F24")]
		[DebuggerHidden]
		public <WaitForMaxPickup>d__107(int <>1__state)
		{
		}

		[Token(Token = "0x6002F68")]
		[Address(RVA = "0x1132F50", Offset = "0x1132F50", VA = "0x1132F50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F69")]
		[Address(RVA = "0x1132F54", Offset = "0x1132F54", VA = "0x1132F54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F6B")]
		[Address(RVA = "0x11330B8", Offset = "0x11330B8", VA = "0x11330B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200070D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36A0C", Offset = "0xA36A0C")]
	private sealed class <WaitAndDoHubIntro>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x170005F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F70")]
			[Address(RVA = "0x112F344", Offset = "0x112F344", VA = "0x112F344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F72")]
			[Address(RVA = "0x112F3AC", Offset = "0x112F3AC", VA = "0x112F3AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F6D")]
		[Address(RVA = "0x112EF18", Offset = "0x112EF18", VA = "0x112EF18")]
		[DebuggerHidden]
		public <WaitAndDoHubIntro>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6002F6E")]
		[Address(RVA = "0x112EF44", Offset = "0x112EF44", VA = "0x112EF44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F6F")]
		[Address(RVA = "0x112EF48", Offset = "0x112EF48", VA = "0x112EF48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F71")]
		[Address(RVA = "0x112F34C", Offset = "0x112F34C", VA = "0x112F34C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200070E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36A1C", Offset = "0xA36A1C")]
	private sealed class <WaitForSequenceMessage>d__113 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x4002B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string message;

		[Token(Token = "0x4002B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <sentMessage>5__2;

		[Token(Token = "0x170005F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F76")]
			[Address(RVA = "0x11338A8", Offset = "0x11338A8", VA = "0x11338A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F78")]
			[Address(RVA = "0x1133910", Offset = "0x1133910", VA = "0x1133910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F73")]
		[Address(RVA = "0x1133604", Offset = "0x1133604", VA = "0x1133604")]
		[DebuggerHidden]
		public <WaitForSequenceMessage>d__113(int <>1__state)
		{
		}

		[Token(Token = "0x6002F74")]
		[Address(RVA = "0x1133630", Offset = "0x1133630", VA = "0x1133630", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F75")]
		[Address(RVA = "0x1133634", Offset = "0x1133634", VA = "0x1133634", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F77")]
		[Address(RVA = "0x11338B0", Offset = "0x11338B0", VA = "0x11338B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200070F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36A2C", Offset = "0xA36A2C")]
	private sealed class <WaitAndPresentButton>d__123 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x170005F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F7C")]
			[Address(RVA = "0x1130208", Offset = "0x1130208", VA = "0x1130208", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F7E")]
			[Address(RVA = "0x1130270", Offset = "0x1130270", VA = "0x1130270", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0x112FFC8", Offset = "0x112FFC8", VA = "0x112FFC8")]
		[DebuggerHidden]
		public <WaitAndPresentButton>d__123(int <>1__state)
		{
		}

		[Token(Token = "0x6002F7A")]
		[Address(RVA = "0x112FFF4", Offset = "0x112FFF4", VA = "0x112FFF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F7B")]
		[Address(RVA = "0x112FFF8", Offset = "0x112FFF8", VA = "0x112FFF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F7D")]
		[Address(RVA = "0x1130210", Offset = "0x1130210", VA = "0x1130210", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000710")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36A3C", Offset = "0xA36A3C")]
	private sealed class <WaitForPlayerBasterGrabMicroscope>d__128 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParkSceneManager <>4__this;

		[Token(Token = "0x4002B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform joint;

		[Token(Token = "0x4002B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabber <Hand>5__2;

		[Token(Token = "0x170005F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F82")]
			[Address(RVA = "0x1133594", Offset = "0x1133594", VA = "0x1133594", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F84")]
			[Address(RVA = "0x11335FC", Offset = "0x11335FC", VA = "0x11335FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F7F")]
		[Address(RVA = "0x1133120", Offset = "0x1133120", VA = "0x1133120")]
		[DebuggerHidden]
		public <WaitForPlayerBasterGrabMicroscope>d__128(int <>1__state)
		{
		}

		[Token(Token = "0x6002F80")]
		[Address(RVA = "0x113314C", Offset = "0x113314C", VA = "0x113314C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F81")]
		[Address(RVA = "0x1133150", Offset = "0x1133150", VA = "0x1133150", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F83")]
		[Address(RVA = "0x113359C", Offset = "0x113359C", VA = "0x113359C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private CharacterFollow m_CharacterFollow;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject m_ApproachTriggers;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Character _max;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Character _sam;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Transform _characterContainer;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private List<string> _banterOptions;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private List<ApproachTrigger> _approachTriggers;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private MeshCollider _Act3HeadTrigger;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int _banterOptionIndex;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool _hasBeenNudged;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float _nudgeActivationTimer;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float _banterActivationTimer;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool _waitForConversationToEnd;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string startConvo;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private BNGPlayerControllerExt m_Player;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool startNudgeCounter;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private SceneLoadHelper m_Ending1Trigger;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private SceneLoadHelper m_Ending2Trigger;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private SceneLoadHelper m_Ending3Trigger;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private SceneLoadHelper m_MicroscopeTrigger;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject m_MicroscopeHelpers;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GrabbableExt m_TurkeyBasterObj;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private GameObject m_TurkeyBasterTrigger;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private GameObject m_GrabbableMax;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private GameObject[] m_SamPuddles;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private GameObject _fakeWatch;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private GrabbableExt m_TurkeyMicroscopeBasterObj;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private GameObject _carPlayerSlot;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private GameObject _carTeleport;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private GameObject _carPlayerTrigger;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private GameObject _carStartButton;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private Transform _playerSkyPatrolTeleport;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	private GameObject _park3IntroHead;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	private GameObject m_CarButton;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	private GameObject m_Park2Blockers;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	private GameObject m_Park3Blockers;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	private GameObject m_Hammer;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	private GameObject m_CharacterContainer;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private string reportCardData;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private SamPuddle m_RealSam;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Vector3 samPosition;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private float distanceToSam;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private bool didGaveItem;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
	private bool didPourSam;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25A")]
	public bool playerLeftEntrance;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25B")]
	public bool playingBanter;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	private SkyPatrolManager _skyPatrol;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	private Animator m_BasterFakeAnim;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[SerializeField]
	private Animator m_BasterAnim;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[SerializeField]
	private GameObject m_Act1Spying;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[SerializeField]
	private AudioSource m_Act1SpyingSFX;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	private Animator m_Act1SpyingAnimator;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	private GameObject m_Act3Spying;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	private AudioSource m_Act3SpyingSFX;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[SerializeField]
	private Animator m_Act3SpyingAnimator;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[SerializeField]
	private GameObject m_DillsStatueTrigger;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public PlayerAreaTrigger m_PlayerExiting;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public bool gradInterrupted;

	[Token(Token = "0x40010DE")]
	private const string _convoAlpha = "ABCDEFGHIJKLMNOPQR";

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private List<int> _speakerConvosPlayed;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private float _speakerTimer;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private bool _countForSpeaker;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[SerializeField]
	private GameObject _speakerContainer;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private float _braceletCounter;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[SerializeField]
	private GameObject[] m_Challenges;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private List<string> m_Park1Banter;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private List<string> m_Park2Banter;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private List<string> m_Park3Banter;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private bool hasExited;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x301")]
	private bool teleportBugFix;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x302")]
	private bool carButtonFix;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x303")]
	private bool carButtonPressed;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	private float _timeForDebug;

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x124E398", Offset = "0x124E398", VA = "0x124E398")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x124F94C", Offset = "0x124F94C", VA = "0x124F94C")]
	public void ProcessDeath()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x124F978", Offset = "0x124F978", VA = "0x124F978")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA554E8", Offset = "0xA554E8")]
	private IEnumerator WaitAndProcessPierDeath()
	{
		return null;
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x124F9E8", Offset = "0x124F9E8", VA = "0x124F9E8")]
	public void ToggleAct1SpyingAquabear(bool toggle)
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x124FABC", Offset = "0x124FABC", VA = "0x124FABC")]
	public void DisableAct1SpyingAquabear()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x124FADC", Offset = "0x124FADC", VA = "0x124FADC")]
	public void ToggleAct3SpyingAquabear(bool toggle)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x124FBB0", Offset = "0x124FBB0", VA = "0x124FBB0")]
	public void DisableAct3SpyingAquabear()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x124FBD0", Offset = "0x124FBD0", VA = "0x124FBD0")]
	public void PlayerLeftEntrance()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x124FBDC", Offset = "0x124FBDC", VA = "0x124FBDC")]
	public void PrepareSkyPatrol()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x124FDDC", Offset = "0x124FDDC", VA = "0x124FDDC")]
	public void BeginSkyPatrol()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x124FEB0", Offset = "0x124FEB0", VA = "0x124FEB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5554C", Offset = "0xA5554C")]
	private IEnumerator WaitAndEndSkyPatrol()
	{
		return null;
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x124F56C", Offset = "0x124F56C", VA = "0x124F56C")]
	private void DisableApproachTrigger(string name)
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x124FF20", Offset = "0x124FF20", VA = "0x124FF20", Slot = "42")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA555B0", Offset = "0xA555B0")]
	protected override IEnumerator ProcessDeathToCheckpoint()
	{
		return null;
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x124FF90", Offset = "0x124FF90", VA = "0x124FF90")]
	public void ToggleGrabbableMax(bool toggle)
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x12500E4", Offset = "0x12500E4", VA = "0x12500E4")]
	public void PlayFauxGradMusic(bool shouldPlay)
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x1250218", Offset = "0x1250218", VA = "0x1250218")]
	public void FadeOutFauxGradMusic()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x124F3E8", Offset = "0x124F3E8", VA = "0x124F3E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55614", Offset = "0xA55614")]
	private IEnumerator WaitAndFadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x124F378", Offset = "0x124F378", VA = "0x124F378")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55678", Offset = "0xA55678")]
	private IEnumerator WaitAndStartFade()
	{
		return null;
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x124F458", Offset = "0x124F458", VA = "0x124F458")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA556DC", Offset = "0xA556DC")]
	private IEnumerator WaitAndStartIntro(bool isPark1Intro = false, bool showResults = false, bool shouldEnableCharacterFollow = true)
	{
		return null;
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x124F7C0", Offset = "0x124F7C0", VA = "0x124F7C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55740", Offset = "0xA55740")]
	private IEnumerator WaitAndStartAct1Outro(bool showResults)
	{
		return null;
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x124F844", Offset = "0x124F844", VA = "0x124F844")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA557A4", Offset = "0xA557A4")]
	private IEnumerator WaitAndStartAct2Outro(bool showResults)
	{
		return null;
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x124F8C8", Offset = "0x124F8C8", VA = "0x124F8C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55808", Offset = "0xA55808")]
	private IEnumerator WaitAndStartAct3Outro(bool showResults)
	{
		return null;
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x124F4FC", Offset = "0x124F4FC", VA = "0x124F4FC")]
	public void DisableChallenges()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x1250294", Offset = "0x1250294", VA = "0x1250294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5586C", Offset = "0xA5586C")]
	private IEnumerator WaitAndPresentTurkeyBaster()
	{
		return null;
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x1250304", Offset = "0x1250304", VA = "0x1250304")]
	public void SmelledPuddle(bool isSamPuddle, SamPuddle puddleScooped)
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x1250900", Offset = "0x1250900", VA = "0x1250900")]
	public void ColdPuddleDialogue()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x125095C", Offset = "0x125095C", VA = "0x125095C")]
	public void WarmPuddleDialogue()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x12509B8", Offset = "0x12509B8", VA = "0x12509B8")]
	public void ScoopedPuddle(bool isSamPuddle, SamPuddle puddleScooped)
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x1250A5C", Offset = "0x1250A5C", VA = "0x1250A5C")]
	public void StartBraceletOnConversation()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x1250A68", Offset = "0x1250A68", VA = "0x1250A68")]
	public void StartIntroFinish()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x1250A74", Offset = "0x1250A74", VA = "0x1250A74")]
	public void PresentWatch()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x1250BC8", Offset = "0x1250BC8", VA = "0x1250BC8")]
	public void SlapOnWatch()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x1250DA0", Offset = "0x1250DA0", VA = "0x1250DA0")]
	public void PlayRandomBanter()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x1250D30", Offset = "0x1250D30", VA = "0x1250D30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA558D0", Offset = "0xA558D0")]
	private IEnumerator WaitAndSlapWatch()
	{
		return null;
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x12511C8", Offset = "0x12511C8", VA = "0x12511C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55934", Offset = "0xA55934")]
	private IEnumerator WaitAndHoldBaster()
	{
		return null;
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x12509EC", Offset = "0x12509EC", VA = "0x12509EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55998", Offset = "0xA55998")]
	private IEnumerator WaitAndStartMicroscopeIntro()
	{
		return null;
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x1251238", Offset = "0x1251238", VA = "0x1251238")]
	public void EnablePuddles()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x12512A8", Offset = "0x12512A8", VA = "0x12512A8")]
	public void EnableSamPuddle()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x12513F4", Offset = "0x12513F4", VA = "0x12513F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA559FC", Offset = "0xA559FC")]
	private IEnumerator WaitForMaxPickup()
	{
		return null;
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x1251464", Offset = "0x1251464", VA = "0x1251464")]
	public void EnableTeleportation()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x12514C4", Offset = "0x12514C4", VA = "0x12514C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55A60", Offset = "0xA55A60")]
	private IEnumerator WaitAndDoHubIntro()
	{
		return null;
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x1251534", Offset = "0x1251534", VA = "0x1251534")]
	public void StartHub2Intro()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x1251598", Offset = "0x1251598", VA = "0x1251598")]
	public void StartHub3Intro()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x12515FC", Offset = "0x12515FC", VA = "0x12515FC", Slot = "37")]
	public override void SendSequencerMessage(string message)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x1251628", Offset = "0x1251628", VA = "0x1251628")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55AC4", Offset = "0xA55AC4")]
	private IEnumerator WaitForSequenceMessage(string message)
	{
		return null;
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x124FC98", Offset = "0x124FC98", VA = "0x124FC98")]
	private ApproachTrigger SearchForApproach(string triggerName)
	{
		return null;
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x12516A4", Offset = "0x12516A4", VA = "0x12516A4", Slot = "6")]
	protected override void UpdateProcessing()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x1251B40", Offset = "0x1251B40", VA = "0x1251B40")]
	public void PlayerTeleportedCar()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x1251E6C", Offset = "0x1251E6C", VA = "0x1251E6C")]
	public void PresentCarButton()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x1251E78", Offset = "0x1251E78", VA = "0x1251E78")]
	public void PausedCarTimeline()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x1251E8C", Offset = "0x1251E8C", VA = "0x1251E8C")]
	public void PresentButtonPressed()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x1251DFC", Offset = "0x1251DFC", VA = "0x1251DFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55B28", Offset = "0xA55B28")]
	private IEnumerator WaitAndPresentButton()
	{
		return null;
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x1251E90", Offset = "0x1251E90", VA = "0x1251E90")]
	public void PlayerClimbedMicroscopeLadder()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x1251F04", Offset = "0x1251F04", VA = "0x1251F04")]
	public void PlayerPressedButton()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x1251F10", Offset = "0x1251F10", VA = "0x1251F10")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA55B8C", Offset = "0xA55B8C")]
	public void PlayerPouredSamMicroscope()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x1251FC4", Offset = "0x1251FC4", VA = "0x1251FC4")]
	public void PlayerGaveBasterToMax(Transform joint)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x1252008", Offset = "0x1252008", VA = "0x1252008")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55BC4", Offset = "0xA55BC4")]
	private IEnumerator WaitForPlayerBasterGrabMicroscope(Transform joint)
	{
		return null;
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x1252084", Offset = "0x1252084", VA = "0x1252084")]
	public void StartBraceletConversation()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x1251818", Offset = "0x1251818", VA = "0x1251818")]
	public void StartNudgeConvo()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x12520F8", Offset = "0x12520F8", VA = "0x12520F8")]
	public void StopNudgeConvo()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x12518A4", Offset = "0x12518A4", VA = "0x12518A4")]
	public void StartBanterOption()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x1252190", Offset = "0x1252190", VA = "0x1252190")]
	public void ShowSkyPatrolResults()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x125243C", Offset = "0x125243C", VA = "0x125243C")]
	public void StartApproachConversation(string convoName, Vector3 characterPlacement, Vector3 characterRotation, bool shouldWait = false)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x12524D0", Offset = "0x12524D0", VA = "0x12524D0")]
	public bool isConversationActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x12524EC", Offset = "0x12524EC", VA = "0x12524EC")]
	public void ContinueDialogue()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x125257C", Offset = "0x125257C", VA = "0x125257C")]
	public void EnableCarButton()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x125259C", Offset = "0x125259C", VA = "0x125259C")]
	public void DisableCarButton()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x12525BC", Offset = "0x12525BC", VA = "0x12525BC")]
	public void StartNudgeTimer()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x12525C8", Offset = "0x12525C8", VA = "0x12525C8")]
	public void ResetWait()
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x12525D0", Offset = "0x12525D0", VA = "0x12525D0")]
	public bool IsWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x12525D8", Offset = "0x12525D8", VA = "0x12525D8")]
	public void ToggleSpeaker(bool enable, float toggleTime = 45f)
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x1252718", Offset = "0x1252718", VA = "0x1252718")]
	private void EnableSpeakerCount()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x125273C", Offset = "0x125273C", VA = "0x125273C")]
	private void DisableSpeakerCount()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x1251964", Offset = "0x1251964", VA = "0x1251964")]
	private void PlayParkSpeakerConvo()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x1252744", Offset = "0x1252744", VA = "0x1252744", Slot = "44")]
	protected override void DebugTesting()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x1252788", Offset = "0x1252788", VA = "0x1252788")]
	public ParkSceneManager()
	{
	}
}
[Token(Token = "0x200026F")]
public class ShootingGalleryManager : GenericSceneManager
{
	[Token(Token = "0x2000711")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36A4C", Offset = "0xA36A4C")]
	private sealed class <WaitAndStartIntro>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGalleryManager <>4__this;

		[Token(Token = "0x170005FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F88")]
			[Address(RVA = "0x11AC380", Offset = "0x11AC380", VA = "0x11AC380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F8A")]
			[Address(RVA = "0x11AC3E8", Offset = "0x11AC3E8", VA = "0x11AC3E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F85")]
		[Address(RVA = "0x11AB37C", Offset = "0x11AB37C", VA = "0x11AB37C")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002F86")]
		[Address(RVA = "0x11AC0C8", Offset = "0x11AC0C8", VA = "0x11AC0C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F87")]
		[Address(RVA = "0x11AC0CC", Offset = "0x11AC0CC", VA = "0x11AC0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F89")]
		[Address(RVA = "0x11AC388", Offset = "0x11AC388", VA = "0x11AC388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000712")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36A5C", Offset = "0xA36A5C")]
	private sealed class <StartFirstDioaramIntro>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGalleryManager <>4__this;

		[Token(Token = "0x170005FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F8E")]
			[Address(RVA = "0x11AC058", Offset = "0x11AC058", VA = "0x11AC058", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F90")]
			[Address(RVA = "0x11AC0C0", Offset = "0x11AC0C0", VA = "0x11AC0C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F8B")]
		[Address(RVA = "0x11AB5C4", Offset = "0x11AB5C4", VA = "0x11AB5C4")]
		[DebuggerHidden]
		public <StartFirstDioaramIntro>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002F8C")]
		[Address(RVA = "0x11ABF68", Offset = "0x11ABF68", VA = "0x11ABF68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F8D")]
		[Address(RVA = "0x11ABF6C", Offset = "0x11ABF6C", VA = "0x11ABF6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F8F")]
		[Address(RVA = "0x11AC060", Offset = "0x11AC060", VA = "0x11AC060", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000713")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36A6C", Offset = "0xA36A6C")]
	private sealed class <WeaponActivation>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x4002B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShootingGalleryManager <>4__this;

		[Token(Token = "0x170005FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F94")]
			[Address(RVA = "0x11AC6A8", Offset = "0x11AC6A8", VA = "0x11AC6A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000600")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F96")]
			[Address(RVA = "0x11AC710", Offset = "0x11AC710", VA = "0x11AC710", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F91")]
		[Address(RVA = "0x11AB750", Offset = "0x11AB750", VA = "0x11AB750")]
		[DebuggerHidden]
		public <WeaponActivation>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6002F92")]
		[Address(RVA = "0x11AC524", Offset = "0x11AC524", VA = "0x11AC524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F93")]
		[Address(RVA = "0x11AC528", Offset = "0x11AC528", VA = "0x11AC528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F95")]
		[Address(RVA = "0x11AC6B0", Offset = "0x11AC6B0", VA = "0x11AC6B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000714")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36A7C", Offset = "0xA36A7C")]
	private sealed class <WaitToConfirmMiss>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShootingGalleryManager <>4__this;

		[Token(Token = "0x17000601")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002F9A")]
			[Address(RVA = "0x11AC4B4", Offset = "0x11AC4B4", VA = "0x11AC4B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000602")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002F9C")]
			[Address(RVA = "0x11AC51C", Offset = "0x11AC51C", VA = "0x11AC51C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F97")]
		[Address(RVA = "0x11ABD38", Offset = "0x11ABD38", VA = "0x11ABD38")]
		[DebuggerHidden]
		public <WaitToConfirmMiss>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6002F98")]
		[Address(RVA = "0x11AC3F0", Offset = "0x11AC3F0", VA = "0x11AC3F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F99")]
		[Address(RVA = "0x11AC3F4", Offset = "0x11AC3F4", VA = "0x11AC3F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F9B")]
		[Address(RVA = "0x11AC4BC", Offset = "0x11AC4BC", VA = "0x11AC4BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool _checkingForHoldGun;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	private bool _isHoldingGun;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Character _max;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Character _sam;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private List<GameObject> _tableVFX;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private float vfxToWeaponDelay;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private List<TableCollection> _tableCollections;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _missedTargetCount;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int _totalMisses;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int _targetHitCount;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private int _totalHits;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _waitToTally;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool _checkMiss;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float _inactivityTimer;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int _dioramaIndex;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private int _praiseIndex;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int _slamIndex;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private int _hurryIndex;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int _civilianIndex;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int _lookoutIndex;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool onStage2;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private List<string> _galleryIntros;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private List<string> _genericPraise;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private List<string> _genericSlam;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private List<string> _westernPraise;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private List<string> _westernSlams;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private List<string> _graveyardPraise;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private List<string> _graveyardSlams;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private List<string> _moonPraise;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private List<string> _moonSlams;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private List<string> _cityPraise;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private List<string> _citySlams;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private List<string> _hurryConvo;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private List<string> _noCivilians;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private List<string> _lookout;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private AudioSource _reloadSource;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private List<AudioClip> _reload;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private bool reloadSwitch;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private int reloadCounter;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	private string _bonusRoundDiag;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	private ShootingGalleryActivity _shootingGalleryActivity;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	private List<string> dioramaCue;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	private new Transform m_StartPosition;

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x11AB220", Offset = "0x11AB220", VA = "0x11AB220")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x11AB22C", Offset = "0x11AB22C", VA = "0x11AB22C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x11AB30C", Offset = "0x11AB30C", VA = "0x11AB30C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55C28", Offset = "0xA55C28")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x11AB3A8", Offset = "0x11AB3A8", VA = "0x11AB3A8", Slot = "6")]
	protected override void UpdateProcessing()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x11AB4A0", Offset = "0x11AB4A0", VA = "0x11AB4A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55C8C", Offset = "0xA55C8C")]
	private IEnumerator StartFirstDioaramIntro()
	{
		return null;
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x11AAF70", Offset = "0x11AAF70", VA = "0x11AAF70")]
	public void StartNextDiorama()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x11AB680", Offset = "0x11AB680", VA = "0x11AB680")]
	public void SaveFinalGrade()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x11AB5F0", Offset = "0x11AB5F0", VA = "0x11AB5F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55CF0", Offset = "0xA55CF0")]
	private IEnumerator WeaponActivation(int index)
	{
		return null;
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x11AB510", Offset = "0x11AB510", VA = "0x11AB510")]
	private void PlayHurryConvo()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x11AB77C", Offset = "0x11AB77C", VA = "0x11AB77C")]
	public void StartGunHoldCheck()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x11AB788", Offset = "0x11AB788", VA = "0x11AB788")]
	public void PlayReload()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x11AB884", Offset = "0x11AB884", VA = "0x11AB884")]
	public void PlayBonusRound()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x11AB8C4", Offset = "0x11AB8C4", VA = "0x11AB8C4")]
	public void SetHoldingGun(bool isHeld)
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x11AB8D0", Offset = "0x11AB8D0", VA = "0x11AB8D0")]
	public void SetWaitForTally(bool state)
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x11AB8DC", Offset = "0x11AB8DC", VA = "0x11AB8DC")]
	public void ActivateFirstTable()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x11AB90C", Offset = "0x11AB90C", VA = "0x11AB90C")]
	public void HitTarget()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x11ABA9C", Offset = "0x11ABA9C", VA = "0x11ABA9C", Slot = "40")]
	public override void OnMiss()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x11ABB8C", Offset = "0x11ABB8C", VA = "0x11ABB8C")]
	public void HitCivilian()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x11ABC64", Offset = "0x11ABC64", VA = "0x11ABC64")]
	public void LookOut()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x11ABB1C", Offset = "0x11ABB1C", VA = "0x11ABB1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55D54", Offset = "0xA55D54")]
	private IEnumerator WaitToConfirmMiss()
	{
		return null;
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x11AB670", Offset = "0x11AB670", VA = "0x11AB670")]
	private void ResetIndices()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x11AB960", Offset = "0x11AB960", VA = "0x11AB960")]
	public void PlayPraise()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x11ABD64", Offset = "0x11ABD64", VA = "0x11ABD64")]
	public void PlaySlam()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x11ABEA0", Offset = "0x11ABEA0", VA = "0x11ABEA0")]
	public void PlayMusicCue(int diorama)
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x11ABF50", Offset = "0x11ABF50", VA = "0x11ABF50")]
	public ShootingGalleryManager()
	{
	}
}
[Token(Token = "0x2000270")]
public class StreetEndingSceneManager : GenericSceneManager
{
	[Token(Token = "0x2000715")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36A8C", Offset = "0xA36A8C")]
	private sealed class <WaitForSequenceMessage>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x4002B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string message;

		[Token(Token = "0x4002B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <sentMessage>5__2;

		[Token(Token = "0x17000603")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FA0")]
			[Address(RVA = "0x11BE8DC", Offset = "0x11BE8DC", VA = "0x11BE8DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000604")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FA2")]
			[Address(RVA = "0x11BE944", Offset = "0x11BE944", VA = "0x11BE944", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F9D")]
		[Address(RVA = "0x11B8F60", Offset = "0x11B8F60", VA = "0x11B8F60")]
		[DebuggerHidden]
		public <WaitForSequenceMessage>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6002F9E")]
		[Address(RVA = "0x11BE664", Offset = "0x11BE664", VA = "0x11BE664", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002F9F")]
		[Address(RVA = "0x11BE668", Offset = "0x11BE668", VA = "0x11BE668", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA1")]
		[Address(RVA = "0x11BE8E4", Offset = "0x11BE8E4", VA = "0x11BE8E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000716")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36A9C", Offset = "0xA36A9C")]
	private sealed class <WaitAndStartIntro>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x4002B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timePassed>5__2;

		[Token(Token = "0x4002B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timeToWait>5__3;

		[Token(Token = "0x17000605")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FA6")]
			[Address(RVA = "0x11BDE58", Offset = "0x11BDE58", VA = "0x11BDE58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000606")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FA8")]
			[Address(RVA = "0x11BDEC0", Offset = "0x11BDEC0", VA = "0x11BDEC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FA3")]
		[Address(RVA = "0x11B9170", Offset = "0x11B9170", VA = "0x11B9170")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6002FA4")]
		[Address(RVA = "0x11BDAF0", Offset = "0x11BDAF0", VA = "0x11BDAF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FA5")]
		[Address(RVA = "0x11BDAF4", Offset = "0x11BDAF4", VA = "0x11BDAF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA7")]
		[Address(RVA = "0x11BDE60", Offset = "0x11BDE60", VA = "0x11BDE60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000717")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36AAC", Offset = "0xA36AAC")]
	private sealed class <WaitAndGiveHoverboardHint>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x17000607")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FAC")]
			[Address(RVA = "0x11BD2B4", Offset = "0x11BD2B4", VA = "0x11BD2B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000608")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FAE")]
			[Address(RVA = "0x11BD31C", Offset = "0x11BD31C", VA = "0x11BD31C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FA9")]
		[Address(RVA = "0x11B92FC", Offset = "0x11B92FC", VA = "0x11B92FC")]
		[DebuggerHidden]
		public <WaitAndGiveHoverboardHint>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6002FAA")]
		[Address(RVA = "0x11BD15C", Offset = "0x11BD15C", VA = "0x11BD15C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FAB")]
		[Address(RVA = "0x11BD160", Offset = "0x11BD160", VA = "0x11BD160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FAD")]
		[Address(RVA = "0x11BD2BC", Offset = "0x11BD2BC", VA = "0x11BD2BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000718")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36ABC", Offset = "0xA36ABC")]
	private sealed class <WaitAndGiveSpeakerTowerHint>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x17000609")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FB2")]
			[Address(RVA = "0x11BD3FC", Offset = "0x11BD3FC", VA = "0x11BD3FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FB4")]
			[Address(RVA = "0x11BD464", Offset = "0x11BD464", VA = "0x11BD464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FAF")]
		[Address(RVA = "0x11B9518", Offset = "0x11B9518", VA = "0x11B9518")]
		[DebuggerHidden]
		public <WaitAndGiveSpeakerTowerHint>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6002FB0")]
		[Address(RVA = "0x11BD324", Offset = "0x11BD324", VA = "0x11BD324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FB1")]
		[Address(RVA = "0x11BD328", Offset = "0x11BD328", VA = "0x11BD328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB3")]
		[Address(RVA = "0x11BD404", Offset = "0x11BD404", VA = "0x11BD404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000719")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36ACC", Offset = "0xA36ACC")]
	private sealed class <WaitAndStartIntroTimeline>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x1700060B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FB8")]
			[Address(RVA = "0x11BDFC4", Offset = "0x11BDFC4", VA = "0x11BDFC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FBA")]
			[Address(RVA = "0x11BE02C", Offset = "0x11BE02C", VA = "0x11BE02C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FB5")]
		[Address(RVA = "0x11B970C", Offset = "0x11B970C", VA = "0x11B970C")]
		[DebuggerHidden]
		public <WaitAndStartIntroTimeline>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6002FB6")]
		[Address(RVA = "0x11BDEC8", Offset = "0x11BDEC8", VA = "0x11BDEC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FB7")]
		[Address(RVA = "0x11BDECC", Offset = "0x11BDECC", VA = "0x11BDECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB9")]
		[Address(RVA = "0x11BDFCC", Offset = "0x11BDFCC", VA = "0x11BDFCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36ADC", Offset = "0xA36ADC")]
	private sealed class <WaitAndActivateCraneTimeline>d__90 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x4002B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fTimePassed>5__2;

		[Token(Token = "0x1700060D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FBE")]
			[Address(RVA = "0x11BCDBC", Offset = "0x11BCDBC", VA = "0x11BCDBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FC0")]
			[Address(RVA = "0x11BCE24", Offset = "0x11BCE24", VA = "0x11BCE24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0x11B9994", Offset = "0x11B9994", VA = "0x11B9994")]
		[DebuggerHidden]
		public <WaitAndActivateCraneTimeline>d__90(int <>1__state)
		{
		}

		[Token(Token = "0x6002FBC")]
		[Address(RVA = "0x11BCAF4", Offset = "0x11BCAF4", VA = "0x11BCAF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FBD")]
		[Address(RVA = "0x11BCAF8", Offset = "0x11BCAF8", VA = "0x11BCAF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FBF")]
		[Address(RVA = "0x11BCDC4", Offset = "0x11BCDC4", VA = "0x11BCDC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36AEC", Offset = "0xA36AEC")]
	private sealed class <ProcessDeathToCheckpoint>d__92 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x1700060F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FC4")]
			[Address(RVA = "0x11BCA84", Offset = "0x11BCA84", VA = "0x11BCA84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000610")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FC6")]
			[Address(RVA = "0x11BCAEC", Offset = "0x11BCAEC", VA = "0x11BCAEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FC1")]
		[Address(RVA = "0x11B9AB8", Offset = "0x11B9AB8", VA = "0x11B9AB8")]
		[DebuggerHidden]
		public <ProcessDeathToCheckpoint>d__92(int <>1__state)
		{
		}

		[Token(Token = "0x6002FC2")]
		[Address(RVA = "0x11BC8C4", Offset = "0x11BC8C4", VA = "0x11BC8C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FC3")]
		[Address(RVA = "0x11BC8C8", Offset = "0x11BC8C8", VA = "0x11BC8C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FC5")]
		[Address(RVA = "0x11BCA8C", Offset = "0x11BCA8C", VA = "0x11BCA8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36AFC", Offset = "0xA36AFC")]
	private sealed class <WaitAndEnableHand>d__104 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x17000611")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FCA")]
			[Address(RVA = "0x11BD0EC", Offset = "0x11BD0EC", VA = "0x11BD0EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000612")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FCC")]
			[Address(RVA = "0x11BD154", Offset = "0x11BD154", VA = "0x11BD154", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FC7")]
		[Address(RVA = "0x11BA360", Offset = "0x11BA360", VA = "0x11BA360")]
		[DebuggerHidden]
		public <WaitAndEnableHand>d__104(int <>1__state)
		{
		}

		[Token(Token = "0x6002FC8")]
		[Address(RVA = "0x11BCFA0", Offset = "0x11BCFA0", VA = "0x11BCFA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FC9")]
		[Address(RVA = "0x11BCFA4", Offset = "0x11BCFA4", VA = "0x11BCFA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCB")]
		[Address(RVA = "0x11BD0F4", Offset = "0x11BD0F4", VA = "0x11BD0F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36B0C", Offset = "0xA36B0C")]
	private sealed class <WaitForMaxRunning>d__115 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x17000613")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FD0")]
			[Address(RVA = "0x11BE5F4", Offset = "0x11BE5F4", VA = "0x11BE5F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000614")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FD2")]
			[Address(RVA = "0x11BE65C", Offset = "0x11BE65C", VA = "0x11BE65C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FCD")]
		[Address(RVA = "0x11BA838", Offset = "0x11BA838", VA = "0x11BA838")]
		[DebuggerHidden]
		public <WaitForMaxRunning>d__115(int <>1__state)
		{
		}

		[Token(Token = "0x6002FCE")]
		[Address(RVA = "0x11BE4F0", Offset = "0x11BE4F0", VA = "0x11BE4F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FCF")]
		[Address(RVA = "0x11BE4F4", Offset = "0x11BE4F4", VA = "0x11BE4F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD1")]
		[Address(RVA = "0x11BE5FC", Offset = "0x11BE5FC", VA = "0x11BE5FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36B1C", Offset = "0xA36B1C")]
	private sealed class <WaitAndTriggerSamGroundDialogue>d__122 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x4002B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fTimePassed>5__2;

		[Token(Token = "0x4002B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fWaitTime>5__3;

		[Token(Token = "0x17000615")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FD6")]
			[Address(RVA = "0x11BE480", Offset = "0x11BE480", VA = "0x11BE480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000616")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FD8")]
			[Address(RVA = "0x11BE4E8", Offset = "0x11BE4E8", VA = "0x11BE4E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FD3")]
		[Address(RVA = "0x11BABBC", Offset = "0x11BABBC", VA = "0x11BABBC")]
		[DebuggerHidden]
		public <WaitAndTriggerSamGroundDialogue>d__122(int <>1__state)
		{
		}

		[Token(Token = "0x6002FD4")]
		[Address(RVA = "0x11BE1C8", Offset = "0x11BE1C8", VA = "0x11BE1C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FD5")]
		[Address(RVA = "0x11BE1CC", Offset = "0x11BE1CC", VA = "0x11BE1CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FD7")]
		[Address(RVA = "0x11BE488", Offset = "0x11BE488", VA = "0x11BE488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200071F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36B2C", Offset = "0xA36B2C")]
	private sealed class <WaitAndPlayDialogue>d__125 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x4002B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string convoID;

		[Token(Token = "0x17000617")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FDC")]
			[Address(RVA = "0x11BD600", Offset = "0x11BD600", VA = "0x11BD600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000618")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FDE")]
			[Address(RVA = "0x11BD668", Offset = "0x11BD668", VA = "0x11BD668", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FD9")]
		[Address(RVA = "0x11BAE08", Offset = "0x11BAE08", VA = "0x11BAE08")]
		[DebuggerHidden]
		public <WaitAndPlayDialogue>d__125(int <>1__state)
		{
		}

		[Token(Token = "0x6002FDA")]
		[Address(RVA = "0x11BD584", Offset = "0x11BD584", VA = "0x11BD584", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0x11BD588", Offset = "0x11BD588", VA = "0x11BD588", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FDD")]
		[Address(RVA = "0x11BD608", Offset = "0x11BD608", VA = "0x11BD608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000720")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36B3C", Offset = "0xA36B3C")]
	private sealed class <WaitAndTalkThirdDumpster>d__129 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x17000619")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FE2")]
			[Address(RVA = "0x11BE158", Offset = "0x11BE158", VA = "0x11BE158", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FE4")]
			[Address(RVA = "0x11BE1C0", Offset = "0x11BE1C0", VA = "0x11BE1C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FDF")]
		[Address(RVA = "0x11BB050", Offset = "0x11BB050", VA = "0x11BB050")]
		[DebuggerHidden]
		public <WaitAndTalkThirdDumpster>d__129(int <>1__state)
		{
		}

		[Token(Token = "0x6002FE0")]
		[Address(RVA = "0x11BE034", Offset = "0x11BE034", VA = "0x11BE034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FE1")]
		[Address(RVA = "0x11BE038", Offset = "0x11BE038", VA = "0x11BE038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE3")]
		[Address(RVA = "0x11BE160", Offset = "0x11BE160", VA = "0x11BE160", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000721")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36B4C", Offset = "0xA36B4C")]
	private sealed class <WaitAndStartEndingConversation>d__141 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x1700061B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FE8")]
			[Address(RVA = "0x11BDA80", Offset = "0x11BDA80", VA = "0x11BDA80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FEA")]
			[Address(RVA = "0x11BDAE8", Offset = "0x11BDAE8", VA = "0x11BDAE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FE5")]
		[Address(RVA = "0x11BB664", Offset = "0x11BB664", VA = "0x11BB664")]
		[DebuggerHidden]
		public <WaitAndStartEndingConversation>d__141(int <>1__state)
		{
		}

		[Token(Token = "0x6002FE6")]
		[Address(RVA = "0x11BD9A8", Offset = "0x11BD9A8", VA = "0x11BD9A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FE7")]
		[Address(RVA = "0x11BD9AC", Offset = "0x11BD9AC", VA = "0x11BD9AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE9")]
		[Address(RVA = "0x11BDA88", Offset = "0x11BDA88", VA = "0x11BDA88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000722")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36B5C", Offset = "0xA36B5C")]
	private sealed class <WaitAndAttemptDillsTower>d__146 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x1700061D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FEE")]
			[Address(RVA = "0x11BCF30", Offset = "0x11BCF30", VA = "0x11BCF30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700061E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FF0")]
			[Address(RVA = "0x11BCF98", Offset = "0x11BCF98", VA = "0x11BCF98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FEB")]
		[Address(RVA = "0x11BB9A0", Offset = "0x11BB9A0", VA = "0x11BB9A0")]
		[DebuggerHidden]
		public <WaitAndAttemptDillsTower>d__146(int <>1__state)
		{
		}

		[Token(Token = "0x6002FEC")]
		[Address(RVA = "0x11BCE2C", Offset = "0x11BCE2C", VA = "0x11BCE2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FED")]
		[Address(RVA = "0x11BCE30", Offset = "0x11BCE30", VA = "0x11BCE30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FEF")]
		[Address(RVA = "0x11BCF38", Offset = "0x11BCF38", VA = "0x11BCF38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000723")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36B6C", Offset = "0xA36B6C")]
	private sealed class <WaitAndPlayHitDialogue>d__149 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x1700061F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FF4")]
			[Address(RVA = "0x11BD938", Offset = "0x11BD938", VA = "0x11BD938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000620")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FF6")]
			[Address(RVA = "0x11BD9A0", Offset = "0x11BD9A0", VA = "0x11BD9A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FF1")]
		[Address(RVA = "0x11BBC00", Offset = "0x11BBC00", VA = "0x11BBC00")]
		[DebuggerHidden]
		public <WaitAndPlayHitDialogue>d__149(int <>1__state)
		{
		}

		[Token(Token = "0x6002FF2")]
		[Address(RVA = "0x11BD670", Offset = "0x11BD670", VA = "0x11BD670", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FF3")]
		[Address(RVA = "0x11BD674", Offset = "0x11BD674", VA = "0x11BD674", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FF5")]
		[Address(RVA = "0x11BD940", Offset = "0x11BD940", VA = "0x11BD940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000724")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36B7C", Offset = "0xA36B7C")]
	private sealed class <WaitAndPlayCraneCab>d__155 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetEndingSceneManager <>4__this;

		[Token(Token = "0x17000621")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002FFA")]
			[Address(RVA = "0x11BD514", Offset = "0x11BD514", VA = "0x11BD514", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000622")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002FFC")]
			[Address(RVA = "0x11BD57C", Offset = "0x11BD57C", VA = "0x11BD57C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FF7")]
		[Address(RVA = "0x11BBED4", Offset = "0x11BBED4", VA = "0x11BBED4")]
		[DebuggerHidden]
		public <WaitAndPlayCraneCab>d__155(int <>1__state)
		{
		}

		[Token(Token = "0x6002FF8")]
		[Address(RVA = "0x11BD46C", Offset = "0x11BD46C", VA = "0x11BD46C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FF9")]
		[Address(RVA = "0x11BD470", Offset = "0x11BD470", VA = "0x11BD470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FFB")]
		[Address(RVA = "0x11BD51C", Offset = "0x11BD51C", VA = "0x11BD51C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject m_DialogueTriggers;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject m_RecordDialogueTriggers;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Animator m_Sam;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Animator m_Max;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Transform m_MaxPlayerSlot;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private Animator m_CapnAquabear;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private Animator m_DillsTower;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private Collider m_PortalForceField;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject m_DillsTowerCraneTrigger;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private OperatingCrane m_Crane;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private SkinnedMeshRenderer[] m_CaptainAquabearRenderer;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private MeshRenderer m_CaptainAquabearSwordRenderer;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private Material m_CaptainAquaBearWet;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private Material m_CaptainAquaBearSwordWet;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject m_FakeHoverboard;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject[] m_RopeInteractionSystem;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject m_MaxHandGround;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject m_MaxHandWeapons;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject m_MaxHandPortalTargets;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject m_MaxHandPortalHatchTargets;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private OperatingSafePuzzle m_SafePuzzle;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private Animator m_PortalAnim;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private LocationEventTrigger m_MaxHandTrigger;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private LocationEventTrigger m_MaxHandLandTrigger;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private AudioSource m_MaxsVoice;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private AudioSource m_SamsVoice;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private AudioSource m_DumpsterImpactSFX;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private AudioSource m_DillsPourSFX;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private AudioSource m_DillsImpactSFX;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private AudioSource m_DillsTowerPushSFX;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	private OperatingTowerSpeaker m_Speaker;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	private ThrowableCharacter m_MaxThrowChar;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	private AudioSource m_PortalSFX;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	private AudioSource m_PortalOffSFX;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	private AudioSource m_RealPortalSFX;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	private AudioSource m_RealPortalOnSFX;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	private AudioSource m_RealPortalOffSFX;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	private GameObject m_ForceFieldVFX;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[SerializeField]
	private AudioSource m_ForceFieldSFX;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	private GameObject m_DamagedPortalVFX;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	private AudioSource m_DamagedPortalSFX;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	private GameObject m_CraneInstantDeathTrigger;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	private GameObject m_TowerDropInstantDeathTrigger;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[SerializeField]
	private Transform m_TowerDropCheckpoint;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[SerializeField]
	private AudioSource m_DillsTowerAudio;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[SerializeField]
	private AudioSource m_DillsTowerSizzleAudio;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	private Collider[] m_TeleportBlockers;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	private GameObject m_DillsTowerColliders;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	private GameObject m_HandReset;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[SerializeField]
	private BoxCollider m_DillsBuilding;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private bool towerPlayingMusic;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A9")]
	private bool reachedGround;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AA")]
	private bool doOnce;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AB")]
	private bool pickUpPlayerOnce;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private bool playerHitPortal;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AD")]
	private bool introTeleport;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AE")]
	private bool playerGrabbedRecordPlayer;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AF")]
	private bool samAudioBugOverrideFix;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private BNGPlayerControllerExt m_Player;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[SerializeField]
	private AudioSource m_CapnSurprise;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private int _dumpstersDropped;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private bool didChargeHoverboard;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C5")]
	private bool foundSpeakerTower;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C6")]
	private bool maxRunningTimelinePaused;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C7")]
	private bool didReachCraneTop;

	[Token(Token = "0x170000CF")]
	public int DumpstersDropped
	{
		[Token(Token = "0x6001040")]
		[Address(RVA = "0x11B8C30", Offset = "0x11B8C30", VA = "0x11B8C30")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x11B8C38", Offset = "0x11B8C38", VA = "0x11B8C38")]
	private void Start()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x11B8DE0", Offset = "0x11B8DE0", VA = "0x11B8DE0")]
	public void ToggleColliders(bool toggle)
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x11B8E74", Offset = "0x11B8E74", VA = "0x11B8E74", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x11B8EB8", Offset = "0x11B8EB8", VA = "0x11B8EB8", Slot = "37")]
	public override void SendSequencerMessage(string message)
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x11B8EE4", Offset = "0x11B8EE4", VA = "0x11B8EE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55DB8", Offset = "0xA55DB8")]
	private IEnumerator WaitForSequenceMessage(string message)
	{
		return null;
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x11B8F8C", Offset = "0x11B8F8C", VA = "0x11B8F8C")]
	public void MaxSwitchMusicEvent()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x11B9018", Offset = "0x11B9018", VA = "0x11B9018")]
	public void BringMusicUp()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x11B908C", Offset = "0x11B908C", VA = "0x11B908C")]
	public void StopBanjoAndSwitchMusic()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x11B9100", Offset = "0x11B9100", VA = "0x11B9100")]
	public void StopMusic()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x11B8D70", Offset = "0x11B8D70", VA = "0x11B8D70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55E1C", Offset = "0xA55E1C")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x11B919C", Offset = "0x11B919C", VA = "0x11B919C")]
	public void PlayerTriggeredHoverboard()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x11B928C", Offset = "0x11B928C", VA = "0x11B928C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55E80", Offset = "0xA55E80")]
	private IEnumerator WaitAndGiveHoverboardHint()
	{
		return null;
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x11B9328", Offset = "0x11B9328", VA = "0x11B9328")]
	public void PlayerGrabbedRope(string ropeName)
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x11B93B0", Offset = "0x11B93B0", VA = "0x11B93B0")]
	public void PlayerTriggeredHoverboardCharge()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x11B94A8", Offset = "0x11B94A8", VA = "0x11B94A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55EE4", Offset = "0xA55EE4")]
	private IEnumerator WaitAndGiveSpeakerTowerHint()
	{
		return null;
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x11B9544", Offset = "0x11B9544", VA = "0x11B9544")]
	public void PortalTriggeredOn()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x11B9580", Offset = "0x11B9580", VA = "0x11B9580")]
	public void PortalTriggeredOff()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x11B95BC", Offset = "0x11B95BC", VA = "0x11B95BC")]
	private void DisableElectricalCable()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x11B962C", Offset = "0x11B962C", VA = "0x11B962C")]
	public void EnableElectricalCable()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x11B969C", Offset = "0x11B969C", VA = "0x11B969C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55F48", Offset = "0xA55F48")]
	private IEnumerator WaitAndStartIntroTimeline()
	{
		return null;
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x11B9738", Offset = "0x11B9738", VA = "0x11B9738")]
	public void MaxWasThrown()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x11B9794", Offset = "0x11B9794", VA = "0x11B9794")]
	public void MaxThrownMiss()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x11B9834", Offset = "0x11B9834", VA = "0x11B9834")]
	public void PlayerTriggeredTowerDialogue()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x11B9898", Offset = "0x11B9898", VA = "0x11B9898")]
	public void SetupSamWithRecordPlayer()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x11B9920", Offset = "0x11B9920", VA = "0x11B9920")]
	public void SetupRopeInteractionSystem()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x11B9924", Offset = "0x11B9924", VA = "0x11B9924")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA55FAC", Offset = "0xA55FAC")]
	private IEnumerator WaitAndActivateCraneTimeline()
	{
		return null;
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x11B99C0", Offset = "0x11B99C0", VA = "0x11B99C0")]
	private void SpilledDills()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x11B9A48", Offset = "0x11B9A48", VA = "0x11B9A48", Slot = "42")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56010", Offset = "0xA56010")]
	protected override IEnumerator ProcessDeathToCheckpoint()
	{
		return null;
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x11B9AE4", Offset = "0x11B9AE4", VA = "0x11B9AE4")]
	public void FellToDeath()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x11B9B50", Offset = "0x11B9B50", VA = "0x11B9B50")]
	public void ResetMaxsHand()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x11B9D00", Offset = "0x11B9D00", VA = "0x11B9D00")]
	public void StartCraneInspection()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x11B9D8C", Offset = "0x11B9D8C", VA = "0x11B9D8C")]
	public void CapnCraneInspect()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x11B9DE8", Offset = "0x11B9DE8", VA = "0x11B9DE8")]
	public void PlayerHitLastBolt()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x11B9E58", Offset = "0x11B9E58", VA = "0x11B9E58")]
	public void PlayerTriggeredDillsRoofHammer()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x11B9EC4", Offset = "0x11B9EC4", VA = "0x11B9EC4")]
	public void PlayerTriggeredDillsRoofCrane()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x11B9EC8", Offset = "0x11B9EC8", VA = "0x11B9EC8")]
	public void PlayerTriggeredDillsRoof()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x11B9F44", Offset = "0x11B9F44", VA = "0x11B9F44")]
	public void PlayerTriggeredCraneCab()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x11B9FA0", Offset = "0x11B9FA0", VA = "0x11B9FA0")]
	public void PlayerTriggeredRecordPlayerTower()
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x11BA010", Offset = "0x11BA010", VA = "0x11BA010")]
	public void MaxPickUpPlayer()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x11BA2F0", Offset = "0x11BA2F0", VA = "0x11BA2F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56074", Offset = "0xA56074")]
	private IEnumerator WaitAndEnableHand()
	{
		return null;
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x11BA38C", Offset = "0x11BA38C", VA = "0x11BA38C")]
	public void EnableMaxHandWeapons()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x11BA418", Offset = "0x11BA418", VA = "0x11BA418")]
	public void PlayerShotMultipleRadarEvent()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x11BA474", Offset = "0x11BA474", VA = "0x11BA474")]
	public void PlayerShotAllRadarEvent()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x11BA55C", Offset = "0x11BA55C", VA = "0x11BA55C")]
	public void ToggleHandReset(bool toggle)
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x11BA05C", Offset = "0x11BA05C", VA = "0x11BA05C")]
	public void AttachPlayer()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x11BA57C", Offset = "0x11BA57C", VA = "0x11BA57C")]
	public void DeattachPlayer()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x11BA6B0", Offset = "0x11BA6B0", VA = "0x11BA6B0")]
	public void MaxStartedRunning()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x11BA734", Offset = "0x11BA734", VA = "0x11BA734")]
	public void MaxRunningPauseTimeline()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x11BA79C", Offset = "0x11BA79C", VA = "0x11BA79C")]
	public void PlayerTriggeredCraneStart()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x11BA7C8", Offset = "0x11BA7C8", VA = "0x11BA7C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA560D8", Offset = "0xA560D8")]
	private IEnumerator WaitForMaxRunning()
	{
		return null;
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x11BA864", Offset = "0x11BA864", VA = "0x11BA864")]
	public void SamAudioBugFix()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x11BA870", Offset = "0x11BA870", VA = "0x11BA870")]
	public void PirateWheelSolved()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x11BA950", Offset = "0x11BA950", VA = "0x11BA950")]
	public void StartPortalMonsterBehavior()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x11BA9CC", Offset = "0x11BA9CC", VA = "0x11BA9CC")]
	public void StopPortalMonsterBehavior()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x11BAA48", Offset = "0x11BAA48", VA = "0x11BAA48")]
	public void PlayerLeftMaxHandEvent()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x11BAAC4", Offset = "0x11BAAC4", VA = "0x11BAAC4")]
	public void SmallMaxConversation()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x11BAB4C", Offset = "0x11BAB4C", VA = "0x11BAB4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5613C", Offset = "0xA5613C")]
	private IEnumerator WaitAndTriggerSamGroundDialogue()
	{
		return null;
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x11BABE8", Offset = "0x11BABE8", VA = "0x11BABE8")]
	private void PlayGiantBattle()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x11BAD2C", Offset = "0x11BAD2C", VA = "0x11BAD2C")]
	public void PlayerTriggeredCraneDeck()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x11BAD8C", Offset = "0x11BAD8C", VA = "0x11BAD8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA561A0", Offset = "0xA561A0")]
	private IEnumerator WaitAndPlayDialogue(string convoID)
	{
		return null;
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x11BAE34", Offset = "0x11BAE34", VA = "0x11BAE34")]
	public void PlayerGrabbedDumpster()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x11BAF14", Offset = "0x11BAF14", VA = "0x11BAF14")]
	public void PlayerBroughtDumpsterUp()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x11BAFB4", Offset = "0x11BAFB4", VA = "0x11BAFB4")]
	public void PlayerPouredDumpsterDown()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x11BAFE0", Offset = "0x11BAFE0", VA = "0x11BAFE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56204", Offset = "0xA56204")]
	private IEnumerator WaitAndTalkThirdDumpster()
	{
		return null;
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x11BB07C", Offset = "0x11BB07C", VA = "0x11BB07C")]
	public void PlayerPushedDillsTower()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x11BB194", Offset = "0x11BB194", VA = "0x11BB194")]
	public void MaxGiantReturns()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x11BB1F0", Offset = "0x11BB1F0", VA = "0x11BB1F0")]
	public void MaxShovedCapnPortal()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x11BB24C", Offset = "0x11BB24C", VA = "0x11BB24C")]
	public void MaxAttemptingDillsTowerGrab()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x11BB2A8", Offset = "0x11BB2A8", VA = "0x11BB2A8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA56268", Offset = "0xA56268")]
	public void EnableCraneTowerGrab()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x11BB374", Offset = "0x11BB374", VA = "0x11BB374")]
	public void CanTipTower()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x11BB3E0", Offset = "0x11BB3E0", VA = "0x11BB3E0")]
	public void PlayerHasRecordPlayer()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x11BB484", Offset = "0x11BB484", VA = "0x11BB484")]
	public void PlayerHasRPG()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x11BB4E0", Offset = "0x11BB4E0", VA = "0x11BB4E0")]
	public void StartMaxGrenadeTimeline()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x11BB53C", Offset = "0x11BB53C", VA = "0x11BB53C")]
	public void EnableMaxGrenadeThrow()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x11BB558", Offset = "0x11BB558", VA = "0x11BB558")]
	public void PlayerHitMonsterWithMax()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x11BB5F4", Offset = "0x11BB5F4", VA = "0x11BB5F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA562A0", Offset = "0xA562A0")]
	private IEnumerator WaitAndStartEndingConversation()
	{
		return null;
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x11BB690", Offset = "0x11BB690", VA = "0x11BB690")]
	public void LoadGraduation()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x11BB760", Offset = "0x11BB760", VA = "0x11BB760")]
	public void PlayerShotAllHatchPortalEvent()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x11BB818", Offset = "0x11BB818", VA = "0x11BB818")]
	public void PlayerShotHatchPortalEvent(int currNumhatchTargets)
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x11BB944", Offset = "0x11BB944", VA = "0x11BB944")]
	public void MaxDialogueRoofPlayerDrop()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x11BB124", Offset = "0x11BB124", VA = "0x11BB124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56304", Offset = "0xA56304")]
	private IEnumerator WaitAndAttemptDillsTower()
	{
		return null;
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x11BB9CC", Offset = "0x11BB9CC", VA = "0x11BB9CC", Slot = "15")]
	public override void SetCheckPoint(Transform checkpoint)
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x11BBB64", Offset = "0x11BBB64", VA = "0x11BBB64")]
	public void HitCapnAquaBear()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x11BBB90", Offset = "0x11BBB90", VA = "0x11BBB90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56368", Offset = "0xA56368")]
	private IEnumerator WaitAndPlayHitDialogue()
	{
		return null;
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x11BBC2C", Offset = "0x11BBC2C", VA = "0x11BBC2C")]
	public void ManualDumpsterClimbTrigger()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x11BBCC4", Offset = "0x11BBCC4", VA = "0x11BBCC4")]
	private void GetMaxInCrane()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x11BBD4C", Offset = "0x11BBD4C", VA = "0x11BBD4C")]
	public void ReachedCraneTop()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x11BBE38", Offset = "0x11BBE38", VA = "0x11BBE38")]
	public void ReachedCraneCab()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x11BBE64", Offset = "0x11BBE64", VA = "0x11BBE64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA563CC", Offset = "0xA563CC")]
	private IEnumerator WaitAndPlayCraneCab()
	{
		return null;
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x11BBF00", Offset = "0x11BBF00", VA = "0x11BBF00")]
	public void MaxKeepClimbing()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x11BBF5C", Offset = "0x11BBF5C", VA = "0x11BBF5C")]
	public void MaxKeepClimbing2()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x11BBFB8", Offset = "0x11BBFB8", VA = "0x11BBFB8")]
	public void BlowUpPortal()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x11BB0C8", Offset = "0x11BB0C8", VA = "0x11BB0C8")]
	public void ShakeTower()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x11BC094", Offset = "0x11BC094", VA = "0x11BC094")]
	public void MaxAskPlayerGrabHook()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x11BC118", Offset = "0x11BC118", VA = "0x11BC118")]
	public void StartIntro()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x11BC22C", Offset = "0x11BC22C", VA = "0x11BC22C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA56430", Offset = "0xA56430")]
	public void StartIntroEditor()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x11BC360", Offset = "0x11BC360", VA = "0x11BC360")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA56468", Offset = "0xA56468")]
	private void PlayerTriggeredCraneStartEditor()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x11BC38C", Offset = "0x11BC38C", VA = "0x11BC38C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA564A0", Offset = "0xA564A0")]
	public void HitCapnAquabearEditor()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x11BC3B8", Offset = "0x11BC3B8", VA = "0x11BC3B8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA564D8", Offset = "0xA564D8")]
	public void PlayerDestroyedTower()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x11BC510", Offset = "0x11BC510", VA = "0x11BC510")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA56510", Offset = "0xA56510")]
	public void MaxAskPlayerGrabHookEditor()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x11BC580", Offset = "0x11BC580", VA = "0x11BC580")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA56548", Offset = "0xA56548")]
	public void StartCranePush()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x11BC5AC", Offset = "0x11BC5AC", VA = "0x11BC5AC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA56580", Offset = "0xA56580")]
	public void PlayerTriggeredRecordPlayerTowerPlaying()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x11BC6F8", Offset = "0x11BC6F8", VA = "0x11BC6F8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA565B8", Offset = "0xA565B8")]
	public void PlayerTriggeredHoverboardLanding()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x11BC788", Offset = "0x11BC788", VA = "0x11BC788")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA565F0", Offset = "0xA565F0")]
	public void PlayerHitPortal()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x11BC794", Offset = "0x11BC794", VA = "0x11BC794")]
	public StreetEndingSceneManager()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x11BC7A4", Offset = "0x11BC7A4", VA = "0x11BC7A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA56628", Offset = "0xA56628")]
	private void <PlayerShotAllRadarEvent>b__107_0()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x11BC838", Offset = "0x11BC838", VA = "0x11BC838")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA56638", Offset = "0xA56638")]
	private void <ReachedCraneTop>b__153_0()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x11BC894", Offset = "0x11BC894", VA = "0x11BC894")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA56648", Offset = "0xA56648")]
	private void <BlowUpPortal>b__158_0()
	{
	}
}
[Token(Token = "0x2000271")]
public class StreetMenuSceneManager : GenericSceneManager
{
	[Token(Token = "0x2000725")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36B8C", Offset = "0xA36B8C")]
	private sealed class <RadioCycle>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetMenuSceneManager <>4__this;

		[Token(Token = "0x4002B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <animLength>5__2;

		[Token(Token = "0x4002B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <firstTime>5__3;

		[Token(Token = "0x17000623")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003000")]
			[Address(RVA = "0x11BEF74", Offset = "0x11BEF74", VA = "0x11BEF74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000624")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003002")]
			[Address(RVA = "0x11BEFDC", Offset = "0x11BEFDC", VA = "0x11BEFDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FFD")]
		[Address(RVA = "0x11BEB9C", Offset = "0x11BEB9C", VA = "0x11BEB9C")]
		[DebuggerHidden]
		public <RadioCycle>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002FFE")]
		[Address(RVA = "0x11BEBD0", Offset = "0x11BEBD0", VA = "0x11BEBD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002FFF")]
		[Address(RVA = "0x11BEBD4", Offset = "0x11BEBD4", VA = "0x11BEBD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003001")]
		[Address(RVA = "0x11BEF7C", Offset = "0x11BEF7C", VA = "0x11BEF7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private AudioSource _radioAudio;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private string[] _radioSounds;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private AudioClip[] _radioStatic;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int _radioIndex;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Character _sam;

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x11BE94C", Offset = "0x11BE94C", VA = "0x11BE94C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x11BEB14", Offset = "0x11BEB14", VA = "0x11BEB14")]
	private void StartFading()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x11BEB30", Offset = "0x11BEB30", VA = "0x11BEB30")]
	public void ChangeMusicVolume()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x11BEAA4", Offset = "0x11BEAA4", VA = "0x11BEAA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56658", Offset = "0xA56658")]
	private IEnumerator RadioCycle()
	{
		return null;
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x11BEBC8", Offset = "0x11BEBC8", VA = "0x11BEBC8")]
	public StreetMenuSceneManager()
	{
	}
}
[Token(Token = "0x2000272")]
public class StreetPrologueManager : GenericSceneManager
{
	[Token(Token = "0x2000726")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36B9C", Offset = "0xA36B9C")]
	private sealed class <WaitAndStartIntro>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetPrologueManager <>4__this;

		[Token(Token = "0x17000625")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003006")]
			[Address(RVA = "0x10DCF70", Offset = "0x10DCF70", VA = "0x10DCF70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000626")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003008")]
			[Address(RVA = "0x10DCFD8", Offset = "0x10DCFD8", VA = "0x10DCFD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003003")]
		[Address(RVA = "0x10DCDBC", Offset = "0x10DCDBC", VA = "0x10DCDBC")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6003004")]
		[Address(RVA = "0x10DCDE8", Offset = "0x10DCDE8", VA = "0x10DCDE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003005")]
		[Address(RVA = "0x10DCDEC", Offset = "0x10DCDEC", VA = "0x10DCDEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003007")]
		[Address(RVA = "0x10DCF78", Offset = "0x10DCF78", VA = "0x10DCF78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000727")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36BAC", Offset = "0xA36BAC")]
	private sealed class <ProcessFlyerDisplay>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetPrologueManager <>4__this;

		[Token(Token = "0x17000627")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600300C")]
			[Address(RVA = "0x11C1CF8", Offset = "0x11C1CF8", VA = "0x11C1CF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000628")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600300E")]
			[Address(RVA = "0x11C1D60", Offset = "0x11C1D60", VA = "0x11C1D60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003009")]
		[Address(RVA = "0x11C0424", Offset = "0x11C0424", VA = "0x11C0424")]
		[DebuggerHidden]
		public <ProcessFlyerDisplay>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x600300A")]
		[Address(RVA = "0x11C1BD0", Offset = "0x11C1BD0", VA = "0x11C1BD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600300B")]
		[Address(RVA = "0x11C1BD4", Offset = "0x11C1BD4", VA = "0x11C1BD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600300D")]
		[Address(RVA = "0x11C1D00", Offset = "0x11C1D00", VA = "0x11C1D00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000728")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36BBC", Offset = "0xA36BBC")]
	private sealed class <ProcessDistractionStart>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetPrologueManager <>4__this;

		[Token(Token = "0x4002BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DistractionData <dd>5__2;

		[Token(Token = "0x17000629")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003012")]
			[Address(RVA = "0x11C19D8", Offset = "0x11C19D8", VA = "0x11C19D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003014")]
			[Address(RVA = "0x11C1A40", Offset = "0x11C1A40", VA = "0x11C1A40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600300F")]
		[Address(RVA = "0x11C08D8", Offset = "0x11C08D8", VA = "0x11C08D8")]
		[DebuggerHidden]
		public <ProcessDistractionStart>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6003010")]
		[Address(RVA = "0x11C16D4", Offset = "0x11C16D4", VA = "0x11C16D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003011")]
		[Address(RVA = "0x11C16D8", Offset = "0x11C16D8", VA = "0x11C16D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003013")]
		[Address(RVA = "0x11C19E0", Offset = "0x11C19E0", VA = "0x11C19E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000729")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36BCC", Offset = "0xA36BCC")]
	private sealed class <ProcessEndingSequence>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetPrologueManager <>4__this;

		[Token(Token = "0x1700062B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003018")]
			[Address(RVA = "0x11C1B60", Offset = "0x11C1B60", VA = "0x11C1B60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600301A")]
			[Address(RVA = "0x11C1BC8", Offset = "0x11C1BC8", VA = "0x11C1BC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003015")]
		[Address(RVA = "0x11C0D54", Offset = "0x11C0D54", VA = "0x11C0D54")]
		[DebuggerHidden]
		public <ProcessEndingSequence>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6003016")]
		[Address(RVA = "0x11C1A48", Offset = "0x11C1A48", VA = "0x11C1A48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003017")]
		[Address(RVA = "0x11C1A4C", Offset = "0x11C1A4C", VA = "0x11C1A4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003019")]
		[Address(RVA = "0x11C1B68", Offset = "0x11C1B68", VA = "0x11C1B68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200072A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36BDC", Offset = "0xA36BDC")]
	private sealed class <ShowRocketLauncherSequence>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetPrologueManager <>4__this;

		[Token(Token = "0x1700062D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600301E")]
			[Address(RVA = "0x10DCD4C", Offset = "0x10DCD4C", VA = "0x10DCD4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003020")]
			[Address(RVA = "0x10DCDB4", Offset = "0x10DCDB4", VA = "0x10DCDB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600301B")]
		[Address(RVA = "0x10DCC30", Offset = "0x10DCC30", VA = "0x10DCC30")]
		[DebuggerHidden]
		public <ShowRocketLauncherSequence>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x600301C")]
		[Address(RVA = "0x10DCC5C", Offset = "0x10DCC5C", VA = "0x10DCC5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600301D")]
		[Address(RVA = "0x10DCC60", Offset = "0x10DCC60", VA = "0x10DCC60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600301F")]
		[Address(RVA = "0x10DCD54", Offset = "0x10DCD54", VA = "0x10DCD54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200072B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36BEC", Offset = "0xA36BEC")]
	private sealed class <ProcessDeathToCheckpoint>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetPrologueManager <>4__this;

		[Token(Token = "0x1700062F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003024")]
			[Address(RVA = "0x11C1664", Offset = "0x11C1664", VA = "0x11C1664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000630")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003026")]
			[Address(RVA = "0x11C16CC", Offset = "0x11C16CC", VA = "0x11C16CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003021")]
		[Address(RVA = "0x11C1118", Offset = "0x11C1118", VA = "0x11C1118")]
		[DebuggerHidden]
		public <ProcessDeathToCheckpoint>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6003022")]
		[Address(RVA = "0x11C1454", Offset = "0x11C1454", VA = "0x11C1454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003023")]
		[Address(RVA = "0x11C1458", Offset = "0x11C1458", VA = "0x11C1458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003025")]
		[Address(RVA = "0x11C166C", Offset = "0x11C166C", VA = "0x11C166C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200072C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36BFC", Offset = "0xA36BFC")]
	private sealed class <RunDistractionSequence>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetPrologueManager <>4__this;

		[Token(Token = "0x17000631")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600302A")]
			[Address(RVA = "0x11C20B0", Offset = "0x11C20B0", VA = "0x11C20B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000632")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600302C")]
			[Address(RVA = "0x11C2118", Offset = "0x11C2118", VA = "0x11C2118", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003027")]
		[Address(RVA = "0x11C13E8", Offset = "0x11C13E8", VA = "0x11C13E8")]
		[DebuggerHidden]
		public <RunDistractionSequence>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6003028")]
		[Address(RVA = "0x11C1D68", Offset = "0x11C1D68", VA = "0x11C1D68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003029")]
		[Address(RVA = "0x11C1D6C", Offset = "0x11C1D6C", VA = "0x11C1D6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600302B")]
		[Address(RVA = "0x11C20B8", Offset = "0x11C20B8", VA = "0x11C20B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200072D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36C0C", Offset = "0xA36C0C")]
	private sealed class <RunEndingSequence>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetPrologueManager <>4__this;

		[Token(Token = "0x17000633")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003030")]
			[Address(RVA = "0x11C2304", Offset = "0x11C2304", VA = "0x11C2304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000634")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003032")]
			[Address(RVA = "0x11C236C", Offset = "0x11C236C", VA = "0x11C236C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600302D")]
		[Address(RVA = "0x11C1414", Offset = "0x11C1414", VA = "0x11C1414")]
		[DebuggerHidden]
		public <RunEndingSequence>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600302E")]
		[Address(RVA = "0x11C2120", Offset = "0x11C2120", VA = "0x11C2120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600302F")]
		[Address(RVA = "0x11C2124", Offset = "0x11C2124", VA = "0x11C2124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003031")]
		[Address(RVA = "0x11C230C", Offset = "0x11C230C", VA = "0x11C230C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Transform _playerHead;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Transform _playerLeftHand;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Transform _playerRightHand;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool _checkingForHandLift;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool _checkingForRocket;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private PrologueMonster _worm;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private Character _max;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private Character _sam;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject _rocketLauncher;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _readyForRocketConvo;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool _rocketLauncherGrabbed;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	private bool _checkingForPlayerDodge;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int _dodgeFailCount;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private List<DistractionData> _distractions;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int _distractionIndex;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private int _distractionsCompleted;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float _distractionTriggerDelay;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private bool _checkingForFlyer;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	private bool _hasGrabbedFlyer;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int _noFlyerIndex;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private string[] _noFlyerConvos;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private List<GameObject> _helperUIObjects;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private AudioSource _banjoMusic;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject _flyer;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private List<string> _goodHits;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private string _firstGoodHit;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private string _lastGoodHit;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private List<string> _takeHitsWarning;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private string _finalWarning;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int _hitsTaken;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Coroutine _distractionCR;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private BNGPlayerControllerExt m_Player;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float savedVolume;

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x11BEFE4", Offset = "0x11BEFE4", VA = "0x11BEFE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x11BF0D0", Offset = "0x11BF0D0", VA = "0x11BF0D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA566BC", Offset = "0xA566BC")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x11BF140", Offset = "0x11BF140", VA = "0x11BF140", Slot = "6")]
	protected override void UpdateProcessing()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x11BF344", Offset = "0x11BF344", VA = "0x11BF344")]
	public void StartHandLiftCheck()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x11BF2A8", Offset = "0x11BF2A8", VA = "0x11BF2A8")]
	private bool CheckHandLift()
	{
		return default(bool);
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x11BF434", Offset = "0x11BF434", VA = "0x11BF434")]
	public void EnableDesotoTrigger(bool enable)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x11BF5C8", Offset = "0x11BF5C8", VA = "0x11BF5C8")]
	public void StartRocketChecking()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x11BF6C4", Offset = "0x11BF6C4", VA = "0x11BF6C4")]
	public void ReadyForRocketConversation()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x11BF744", Offset = "0x11BF744", VA = "0x11BF744")]
	public void GrabRocketLauncher()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x11BF8C8", Offset = "0x11BF8C8", VA = "0x11BF8C8")]
	public void FailedFirstLift()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x11BF954", Offset = "0x11BF954", VA = "0x11BF954")]
	public void FailedSecondLift()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x11BFA10", Offset = "0x11BFA10", VA = "0x11BFA10")]
	public void FailedGetToCar()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x11BFA70", Offset = "0x11BFA70", VA = "0x11BFA70")]
	public void FailedPickUpRocketLauncher()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x11BFAD0", Offset = "0x11BFAD0", VA = "0x11BFAD0")]
	public void EnableDodgeUI()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x11BFC48", Offset = "0x11BFC48", VA = "0x11BFC48")]
	public void EnableTeleportUI()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x11BFDFC", Offset = "0x11BFDFC", VA = "0x11BFDFC")]
	public void TriggerMonsterThrowCar()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x11BFE5C", Offset = "0x11BFE5C", VA = "0x11BFE5C")]
	public void TriggerMonsterSingleAttack()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x11BFFF4", Offset = "0x11BFFF4", VA = "0x11BFFF4")]
	public void TriggerMonsterAttackSequence()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x11C0054", Offset = "0x11C0054", VA = "0x11C0054")]
	public void StartDodgeChecking()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x11C0060", Offset = "0x11C0060", VA = "0x11C0060")]
	public void PlayerMissed()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x11C0110", Offset = "0x11C0110", VA = "0x11C0110")]
	public void PlayerHit()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x11C0388", Offset = "0x11C0388", VA = "0x11C0388")]
	public void DisplayFlyer()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x11C03B4", Offset = "0x11C03B4", VA = "0x11C03B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56720", Offset = "0xA56720")]
	private IEnumerator ProcessFlyerDisplay()
	{
		return null;
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x11C0450", Offset = "0x11C0450", VA = "0x11C0450")]
	public void StartFlyerChecking()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x11C04B0", Offset = "0x11C04B0", VA = "0x11C04B0")]
	public void FlyerFailure()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x11C0580", Offset = "0x11C0580", VA = "0x11C0580")]
	public void FlyerGrabbed()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x11C06E0", Offset = "0x11C06E0", VA = "0x11C06E0")]
	private void LoadIntoOffice()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x11C07A8", Offset = "0x11C07A8", VA = "0x11C07A8")]
	public void PlayNextDistraction()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x11C0868", Offset = "0x11C0868", VA = "0x11C0868")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56784", Offset = "0xA56784")]
	private IEnumerator ProcessDistractionStart()
	{
		return null;
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x11C0904", Offset = "0x11C0904", VA = "0x11C0904")]
	public void ReplayDistraction()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x11C0938", Offset = "0x11C0938", VA = "0x11C0938")]
	public void StopDistraction(string character)
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x11C0A10", Offset = "0x11C0A10", VA = "0x11C0A10")]
	public void DistractionFailure()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x11C0A88", Offset = "0x11C0A88", VA = "0x11C0A88")]
	public void DistractionSuccess()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x11C0CB8", Offset = "0x11C0CB8", VA = "0x11C0CB8")]
	public void StartEndingSequence()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x11C0CE4", Offset = "0x11C0CE4", VA = "0x11C0CE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA567E8", Offset = "0xA567E8")]
	private IEnumerator ProcessEndingSequence()
	{
		return null;
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x11C0D80", Offset = "0x11C0D80", VA = "0x11C0D80")]
	public void PlayBanjo(bool enable)
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x11C0E34", Offset = "0x11C0E34", VA = "0x11C0E34")]
	public void StopBanjo()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x11C0EB0", Offset = "0x11C0EB0", VA = "0x11C0EB0")]
	public void ChangeMusicVolume()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x11C0BB8", Offset = "0x11C0BB8", VA = "0x11C0BB8")]
	private void PlayGoodHit()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x11C0F3C", Offset = "0x11C0F3C", VA = "0x11C0F3C")]
	public void MaxBeckons()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x11C0F9C", Offset = "0x11C0F9C", VA = "0x11C0F9C")]
	public void MaxShowsRocketLauncher()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x11C0FC8", Offset = "0x11C0FC8", VA = "0x11C0FC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5684C", Offset = "0xA5684C")]
	private IEnumerator ShowRocketLauncherSequence()
	{
		return null;
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x11BF864", Offset = "0x11BF864", VA = "0x11BF864")]
	public void StopMaxShowing()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x11C1038", Offset = "0x11C1038", VA = "0x11C1038")]
	public void SwapAmbientNoise()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x11C10A8", Offset = "0x11C10A8", VA = "0x11C10A8", Slot = "42")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA568B0", Offset = "0xA568B0")]
	protected override IEnumerator ProcessDeathToCheckpoint()
	{
		return null;
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x11C1144", Offset = "0x11C1144", VA = "0x11C1144", Slot = "44")]
	protected override void DebugTesting()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x11C1308", Offset = "0x11C1308", VA = "0x11C1308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56914", Offset = "0xA56914")]
	private IEnumerator RunDistractionSequence()
	{
		return null;
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x11C1378", Offset = "0x11C1378", VA = "0x11C1378")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56978", Offset = "0xA56978")]
	private IEnumerator RunEndingSequence()
	{
		return null;
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x11C1440", Offset = "0x11C1440", VA = "0x11C1440")]
	public StreetPrologueManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000273")]
public class DistractionData
{
	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string participants;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string exitParticipants;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string completeConvoName;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string timelineName;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string monsterState;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string charTrigger;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool completed;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float monsterDistractWait;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float beforeExitWait;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float afterExitWait;

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x1320644", Offset = "0x1320644", VA = "0x1320644")]
	public DistractionData()
	{
	}
}
[Token(Token = "0x2000274")]
public class StreetTocksManager : GenericSceneManager
{
	[Serializable]
	[Token(Token = "0x200072E")]
	public class SamMaxLocation
	{
		[Token(Token = "0x4002BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string triggeringConversation;

		[Token(Token = "0x4002BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform samPosition;

		[Token(Token = "0x4002BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform maxPosition;

		[Token(Token = "0x6003033")]
		[Address(RVA = "0x10E15B0", Offset = "0x10E15B0", VA = "0x10E15B0")]
		public SamMaxLocation()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200072F")]
	public class TalkHelper
	{
		[Token(Token = "0x4002BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string characterName;

		[Token(Token = "0x4002BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool hasTalked;

		[Token(Token = "0x4002BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject helperUI;

		[Token(Token = "0x6003034")]
		[Address(RVA = "0x10E15B8", Offset = "0x10E15B8", VA = "0x10E15B8")]
		public TalkHelper()
		{
		}
	}

	[Token(Token = "0x2000730")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36C1C", Offset = "0xA36C1C")]
	private sealed class <WaitAndStartIntro>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetTocksManager <>4__this;

		[Token(Token = "0x17000635")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003038")]
			[Address(RVA = "0x10E1540", Offset = "0x10E1540", VA = "0x10E1540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000636")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600303A")]
			[Address(RVA = "0x10E15A8", Offset = "0x10E15A8", VA = "0x10E15A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003035")]
		[Address(RVA = "0x10DD270", Offset = "0x10DD270", VA = "0x10DD270")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6003036")]
		[Address(RVA = "0x10E118C", Offset = "0x10E118C", VA = "0x10E118C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003037")]
		[Address(RVA = "0x10E1190", Offset = "0x10E1190", VA = "0x10E1190", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003039")]
		[Address(RVA = "0x10E1548", Offset = "0x10E1548", VA = "0x10E1548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000731")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36C2C", Offset = "0xA36C2C")]
	private sealed class <ProcessDeathToCheckpoint>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetTocksManager <>4__this;

		[Token(Token = "0x17000637")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600303E")]
			[Address(RVA = "0x10E0C94", Offset = "0x10E0C94", VA = "0x10E0C94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000638")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003040")]
			[Address(RVA = "0x10E0CFC", Offset = "0x10E0CFC", VA = "0x10E0CFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600303B")]
		[Address(RVA = "0x10DD6D8", Offset = "0x10DD6D8", VA = "0x10DD6D8")]
		[DebuggerHidden]
		public <ProcessDeathToCheckpoint>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x600303C")]
		[Address(RVA = "0x10E0A84", Offset = "0x10E0A84", VA = "0x10E0A84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600303D")]
		[Address(RVA = "0x10E0A88", Offset = "0x10E0A88", VA = "0x10E0A88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600303F")]
		[Address(RVA = "0x10E0C9C", Offset = "0x10E0C9C", VA = "0x10E0C9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000732")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36C3C", Offset = "0xA36C3C")]
	private sealed class <ReenableConversationTrigger>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetTocksManager <>4__this;

		[Token(Token = "0x4002BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string convoName;

		[Token(Token = "0x17000639")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003044")]
			[Address(RVA = "0x10E0E40", Offset = "0x10E0E40", VA = "0x10E0E40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003046")]
			[Address(RVA = "0x10E0EA8", Offset = "0x10E0EA8", VA = "0x10E0EA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003041")]
		[Address(RVA = "0x10DDC88", Offset = "0x10DDC88", VA = "0x10DDC88")]
		[DebuggerHidden]
		public <ReenableConversationTrigger>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6003042")]
		[Address(RVA = "0x10E0D04", Offset = "0x10E0D04", VA = "0x10E0D04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003043")]
		[Address(RVA = "0x10E0D08", Offset = "0x10E0D08", VA = "0x10E0D08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003045")]
		[Address(RVA = "0x10E0E48", Offset = "0x10E0E48", VA = "0x10E0E48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000733")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36C4C", Offset = "0xA36C4C")]
	private sealed class <TardigradeShrinkRoutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreetTocksManager <>4__this;

		[Token(Token = "0x4002BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <tgTrans>5__2;

		[Token(Token = "0x4002BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <scale>5__3;

		[Token(Token = "0x4002BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <scaleDownSpeed>5__4;

		[Token(Token = "0x1700063B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600304A")]
			[Address(RVA = "0x10E111C", Offset = "0x10E111C", VA = "0x10E111C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600304C")]
			[Address(RVA = "0x10E1184", Offset = "0x10E1184", VA = "0x10E1184", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003047")]
		[Address(RVA = "0x10DDD28", Offset = "0x10DDD28", VA = "0x10DDD28")]
		[DebuggerHidden]
		public <TardigradeShrinkRoutine>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6003048")]
		[Address(RVA = "0x10E0EB0", Offset = "0x10E0EB0", VA = "0x10E0EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003049")]
		[Address(RVA = "0x10E0EB4", Offset = "0x10E0EB4", VA = "0x10E0EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600304B")]
		[Address(RVA = "0x10E1124", Offset = "0x10E1124", VA = "0x10E1124", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private PlayerTeleportExt _playerTeleport;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private HandModelSelectorExt _handSelector;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject _playerWatch;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private GameObject _playerLeftHand;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject _playerRightHand;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private GameObject[] _gloveLeftHand;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject[] _gloveRightHand;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private AttachGrabObject _tocksHeadset;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private AttachGrabObject _tocksGlove;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private ControllerHand _gloveHandSide;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private AttachGrabObject _tocksWifi;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int _tocksGearCount;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private bool _gogglesPutOn;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private List<SamMaxLocation> _movementLocations;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private TeddyTocks _tocks;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private DroneBattleController _droneController;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject _towerClimbObject;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject _maxGun;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private string[] _clueDialoguesNames;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int _clueIndex;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private bool _whisperHints;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private string _clueFailedDialogue;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private Transform _endingTardigradePoint;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool _hasTakenPoster;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private List<MeshRenderer> _gloveMeshes;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private List<SkinnedMeshRenderer> _gloveSkins;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private List<Material> _gloveMaterials;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private GameObject _posterContainer;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool _waitingForWave;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private GameObject _dillsHeadBomb;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private Transform _headBombContainer;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private GameObject _dillsHeadProp;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private bool _readyToDisarm;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	private GameObject[] _remoteGrabbers;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	private GameObject[] _radarObjects;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	private List<TalkHelper> _talkHelpers;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private bool _canHideSamAndMax;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x229")]
	[SerializeField]
	private bool _debugTocksEarly;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	private GameObject _tocksNPCArea;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private bool _hasPlayedRobot;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	private GameObject _waveHelpUI;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[SerializeField]
	private Transform[] _checkPoints;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float _deathResetTimer;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	private GameObject _tocksAlleyBlocker;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	private AudioSource[] _musicStings;

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x10DCFE0", Offset = "0x10DCFE0", VA = "0x10DCFE0", Slot = "4")]
	protected override void InitializeManager()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x10DCFE8", Offset = "0x10DCFE8", VA = "0x10DCFE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x10DD200", Offset = "0x10DD200", VA = "0x10DD200")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA569DC", Offset = "0xA569DC")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x10DD29C", Offset = "0x10DD29C", VA = "0x10DD29C")]
	private void DisableTeleportation()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x10DD304", Offset = "0x10DD304", VA = "0x10DD304")]
	private void EnableGloveEarly()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x10DD620", Offset = "0x10DD620", VA = "0x10DD620", Slot = "6")]
	protected override void UpdateProcessing()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x10DD668", Offset = "0x10DD668", VA = "0x10DD668", Slot = "42")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56A40", Offset = "0xA56A40")]
	protected override IEnumerator ProcessDeathToCheckpoint()
	{
		return null;
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x10DD704", Offset = "0x10DD704", VA = "0x10DD704")]
	public void PlayStoreConversation(string convoName)
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x10DD7D8", Offset = "0x10DD7D8", VA = "0x10DD7D8")]
	public void PlayConversationWithMovement(string convoName, bool forceStart = false)
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x10DD980", Offset = "0x10DD980", VA = "0x10DD980")]
	public void PlayDelayedConversationWithMovement(string convoName, float delay)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x10DDB18", Offset = "0x10DDB18", VA = "0x10DDB18")]
	public void TakeWantedPoster()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x10DDBAC", Offset = "0x10DDBAC", VA = "0x10DDBAC")]
	public void EnableShopConversationTriggers()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x10DD75C", Offset = "0x10DD75C", VA = "0x10DD75C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56AA4", Offset = "0xA56AA4")]
	public IEnumerator ReenableConversationTrigger(string convoName)
	{
		return null;
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x10DDCB4", Offset = "0x10DDCB4", VA = "0x10DDCB4")]
	public void ActivateTardigrade()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x10DDCB8", Offset = "0x10DDCB8", VA = "0x10DDCB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56B08", Offset = "0xA56B08")]
	private IEnumerator TardigradeShrinkRoutine()
	{
		return null;
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x10DDD54", Offset = "0x10DDD54", VA = "0x10DDD54")]
	public void SendPosterMessage(string characterName)
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x10DDDCC", Offset = "0x10DDDCC", VA = "0x10DDDCC")]
	public void AttachBombToContainer()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x10DDECC", Offset = "0x10DDECC", VA = "0x10DDECC")]
	public void RevealGoggles()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x10DDEFC", Offset = "0x10DDEFC", VA = "0x10DDEFC")]
	public void RevealGlove()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x10DDF2C", Offset = "0x10DDF2C", VA = "0x10DDF2C")]
	public void RevealWifi()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x10DDF5C", Offset = "0x10DDF5C", VA = "0x10DDF5C")]
	public void PickupGoggles()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x10DDFDC", Offset = "0x10DDFDC", VA = "0x10DDFDC")]
	public void PickupGlove()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x10DE05C", Offset = "0x10DE05C", VA = "0x10DE05C")]
	public void PickupWifi()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x10DE0DC", Offset = "0x10DE0DC", VA = "0x10DE0DC")]
	public void WearGoggles()
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x10DD3C4", Offset = "0x10DD3C4", VA = "0x10DD3C4")]
	public void WearGloveLeft()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x10DE3DC", Offset = "0x10DE3DC", VA = "0x10DE3DC")]
	public void WearGloveRight()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x10DE63C", Offset = "0x10DE63C", VA = "0x10DE63C")]
	public void CombineGloveAndWifi()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x10DE834", Offset = "0x10DE834", VA = "0x10DE834")]
	public void ChangeGloveMaterial(int index)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x10DEBB4", Offset = "0x10DEBB4", VA = "0x10DEBB4")]
	private void TurnRadarOn()
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x10DE1CC", Offset = "0x10DE1CC", VA = "0x10DE1CC")]
	private void RevealTocks()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x10DEC24", Offset = "0x10DEC24", VA = "0x10DEC24")]
	public void StartFindTocksSequence()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x10DEDE8", Offset = "0x10DEDE8", VA = "0x10DEDE8")]
	private void ShowGoggleFrame()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x10DEE2C", Offset = "0x10DEE2C", VA = "0x10DEE2C")]
	public void FlyTocksUpward()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x10DEFA8", Offset = "0x10DEFA8", VA = "0x10DEFA8")]
	public void StartTocksAttackSequence()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x10DF060", Offset = "0x10DF060", VA = "0x10DF060")]
	public void StartTocksDroneSequence()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x10DF1B8", Offset = "0x10DF1B8", VA = "0x10DF1B8")]
	public void PlayerReachesRoof()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x10DF1E8", Offset = "0x10DF1E8", VA = "0x10DF1E8")]
	public void PlayDroneConversation()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x10DF23C", Offset = "0x10DF23C", VA = "0x10DF23C")]
	public void StartDroneAttack()
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x10DF258", Offset = "0x10DF258", VA = "0x10DF258")]
	public void ThrowGun()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x10DF278", Offset = "0x10DF278", VA = "0x10DF278")]
	public void EndDroneAttack()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x10DF380", Offset = "0x10DF380", VA = "0x10DF380")]
	public void MoveMaxToRoof()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x10DF424", Offset = "0x10DF424", VA = "0x10DF424")]
	public void TriggerRooftopStandoff()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x10DF4AC", Offset = "0x10DF4AC", VA = "0x10DF4AC")]
	public void StandoffSecondStatge()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x10DF508", Offset = "0x10DF508", VA = "0x10DF508")]
	public void PlayNextClue()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x10DF50C", Offset = "0x10DF50C", VA = "0x10DF50C")]
	public void WaitAndPlayNextClue(float time)
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x10DF510", Offset = "0x10DF510", VA = "0x10DF510")]
	public void PlayClueFailed()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x10DF514", Offset = "0x10DF514", VA = "0x10DF514")]
	public void PickedUpMax()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x10DF518", Offset = "0x10DF518", VA = "0x10DF518")]
	public void MaxHitsTocks()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x10DF51C", Offset = "0x10DF51C", VA = "0x10DF51C")]
	public void BrickDistraction()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x10DF604", Offset = "0x10DF604", VA = "0x10DF604")]
	public void MaxPounce()
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x10DF918", Offset = "0x10DF918", VA = "0x10DF918")]
	public void ReadyForWave()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x10DF984", Offset = "0x10DF984", VA = "0x10DF984")]
	public bool SignalWave()
	{
		return default(bool);
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x10DFAA4", Offset = "0x10DFAA4", VA = "0x10DFAA4")]
	public void ShowWaveUI()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x10DFAD0", Offset = "0x10DFAD0", VA = "0x10DFAD0")]
	public void BombIsReady()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x10DFB84", Offset = "0x10DFB84", VA = "0x10DFB84")]
	public bool IsBombReady()
	{
		return default(bool);
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x10DFB8C", Offset = "0x10DFB8C", VA = "0x10DFB8C")]
	public void HandleBombTell(Enums.BombTell tell)
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x10DFC24", Offset = "0x10DFC24", VA = "0x10DFC24")]
	public void BombSuccess()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x10DFCFC", Offset = "0x10DFCFC", VA = "0x10DFCFC")]
	public void ContinueBombSuccess()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x10DFDA0", Offset = "0x10DFDA0", VA = "0x10DFDA0")]
	public void MaxReachOut()
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x10DFDE4", Offset = "0x10DFDE4", VA = "0x10DFDE4")]
	public void TriggerMaxGrab()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x10DFE80", Offset = "0x10DFE80", VA = "0x10DFE80")]
	public void ContinueFinale()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x10DFF5C", Offset = "0x10DFF5C", VA = "0x10DFF5C")]
	public void WaitAndExit()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x10DFFB8", Offset = "0x10DFFB8", VA = "0x10DFFB8")]
	public void LoadIntoPark()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x10E0150", Offset = "0x10E0150", VA = "0x10E0150")]
	public void SetRemoteGrabberActive(bool enable)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x10E0284", Offset = "0x10E0284", VA = "0x10E0284")]
	public void HideSamAndMax()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x10E0294", Offset = "0x10E0294", VA = "0x10E0294", Slot = "38")]
	public override void TalkToCharacter(Character character)
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x10E0428", Offset = "0x10E0428", VA = "0x10E0428")]
	public void ShowTalkHelperUI(string characterName)
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x10E0544", Offset = "0x10E0544", VA = "0x10E0544")]
	public void HideTalkHelperUI(string characterName)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x10E0630", Offset = "0x10E0630", VA = "0x10E0630")]
	public void DelayPlayRobotDialogue()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x10E069C", Offset = "0x10E069C", VA = "0x10E069C")]
	public void PlayRobotDialogue()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x10E0718", Offset = "0x10E0718", VA = "0x10E0718", Slot = "44")]
	protected override void DebugTesting()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x10E0A70", Offset = "0x10E0A70", VA = "0x10E0A70")]
	public StreetTocksManager()
	{
	}
}
[Token(Token = "0x2000275")]
public class WormWhispererSceneManager : GenericSceneManager
{
	[Token(Token = "0x2000734")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36C5C", Offset = "0xA36C5C")]
	private sealed class <WaitAndStartIntro>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WormWhispererSceneManager <>4__this;

		[Token(Token = "0x1700063D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003050")]
			[Address(RVA = "0x1352384", Offset = "0x1352384", VA = "0x1352384", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003052")]
			[Address(RVA = "0x13523EC", Offset = "0x13523EC", VA = "0x13523EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600304D")]
		[Address(RVA = "0x134FD28", Offset = "0x134FD28", VA = "0x134FD28")]
		[DebuggerHidden]
		public <WaitAndStartIntro>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x600304E")]
		[Address(RVA = "0x1352064", Offset = "0x1352064", VA = "0x1352064", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600304F")]
		[Address(RVA = "0x1352068", Offset = "0x1352068", VA = "0x1352068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003051")]
		[Address(RVA = "0x135238C", Offset = "0x135238C", VA = "0x135238C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000735")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36C6C", Offset = "0xA36C6C")]
	private sealed class <WaitAndExit>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WormWhispererSceneManager <>4__this;

		[Token(Token = "0x1700063F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003056")]
			[Address(RVA = "0x1351FF4", Offset = "0x1351FF4", VA = "0x1351FF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000640")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003058")]
			[Address(RVA = "0x135205C", Offset = "0x135205C", VA = "0x135205C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003053")]
		[Address(RVA = "0x1350ADC", Offset = "0x1350ADC", VA = "0x1350ADC")]
		[DebuggerHidden]
		public <WaitAndExit>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6003054")]
		[Address(RVA = "0x1351EE0", Offset = "0x1351EE0", VA = "0x1351EE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003055")]
		[Address(RVA = "0x1351EE4", Offset = "0x1351EE4", VA = "0x1351EE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003057")]
		[Address(RVA = "0x1351FFC", Offset = "0x1351FFC", VA = "0x1351FFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000736")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36C7C", Offset = "0xA36C7C")]
	private sealed class <WaitForNextRound>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WormWhispererSceneManager <>4__this;

		[Token(Token = "0x17000641")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600305C")]
			[Address(RVA = "0x13525A8", Offset = "0x13525A8", VA = "0x13525A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000642")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600305E")]
			[Address(RVA = "0x1352610", Offset = "0x1352610", VA = "0x1352610", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003059")]
		[Address(RVA = "0x135194C", Offset = "0x135194C", VA = "0x135194C")]
		[DebuggerHidden]
		public <WaitForNextRound>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x600305A")]
		[Address(RVA = "0x13523F4", Offset = "0x13523F4", VA = "0x13523F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600305B")]
		[Address(RVA = "0x13523F8", Offset = "0x13523F8", VA = "0x13523F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600305D")]
		[Address(RVA = "0x13525B0", Offset = "0x13525B0", VA = "0x13525B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private List<Animator> characterAnimators;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private List<string> reactions;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private List<string> animReactions;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private List<string> powerJumpDialogue;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private List<string> hoopJumpDialogue;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private List<string> somersaultJumpDialogue;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private List<string> swimUprightDialogue;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public List<string> foodDialogue;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private List<string> fedDialogue;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private List<string> roundDialogue;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private List<string> walkReaction;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private List<string> hoopReaction;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private List<string> somersaultReaction;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private List<string> highReaction;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private List<string> randomDialogue;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public List<string> petDialogue;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private List<string> sootheDialogue;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private List<TrickItemTriggers> roundItems;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private AudioSource music;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private List<GameObject> roundObjects;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private float roundTimer;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private GameObject transferOutGO;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private GameObject[] roundUI;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private new Transform m_StartPosition;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float _roundTimer;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private int round;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool roundStarted;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public float mentionTimer;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public bool pauseMentionTimer;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	public bool introFinished;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
	public bool waitForDialogue;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public int consecutiveTrickSuccess;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool fadeout;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float fadeoutTimer;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public int totalScore;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private bool bellPrompt;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FD")]
	private bool ballPrompt;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FE")]
	private bool hoopPrompt;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FF")]
	private bool barPrompt;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private int randomDiagIndex;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private int ballReactIndex;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private int bellReactIndex;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private int hoopReactIndex;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private int barReactIndex;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private int goodReactIndex;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public int foodPromptIndex;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private int foodReactIndex;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public int petPromptIndex;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private int petReactIndex;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private string lastDiagPrompt;

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x134FC8C", Offset = "0x134FC8C", VA = "0x134FC8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x134FCB8", Offset = "0x134FCB8", VA = "0x134FCB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56B6C", Offset = "0xA56B6C")]
	private IEnumerator WaitAndStartIntro()
	{
		return null;
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x134FD54", Offset = "0x134FD54", VA = "0x134FD54")]
	public void IntroFinished()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x13501BC", Offset = "0x13501BC", VA = "0x13501BC")]
	public void DialogueFinished()
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x13501C4", Offset = "0x13501C4", VA = "0x13501C4")]
	public void PlayPowerJumpRequest()
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x1350278", Offset = "0x1350278", VA = "0x1350278")]
	public void PlayHoopJumpRequest()
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x135032C", Offset = "0x135032C", VA = "0x135032C")]
	public void PlaySomersaultRequest()
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0x13503E0", Offset = "0x13503E0", VA = "0x13503E0")]
	public void PlaySwimUpright()
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0x1350494", Offset = "0x1350494", VA = "0x1350494")]
	public void PlayFoodDialogue()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0x1350598", Offset = "0x1350598", VA = "0x1350598")]
	public void PlayPetDialogue()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x135069C", Offset = "0x135069C", VA = "0x135069C")]
	public void PlayFedDialogue()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x135076C", Offset = "0x135076C", VA = "0x135076C")]
	public void PlaySootheDialogue()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x135083C", Offset = "0x135083C", VA = "0x135083C")]
	public void ReplayDialogue()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x13508C4", Offset = "0x13508C4", VA = "0x13508C4")]
	public void PlayActDialogue(int round)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x13509B0", Offset = "0x13509B0", VA = "0x13509B0")]
	public void PlayOutro()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x1350A40", Offset = "0x1350A40", VA = "0x1350A40")]
	public void GoForExit()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x1350A6C", Offset = "0x1350A6C", VA = "0x1350A6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56BD0", Offset = "0xA56BD0")]
	private IEnumerator WaitAndExit()
	{
		return null;
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x1350B08", Offset = "0x1350B08", VA = "0x1350B08")]
	public void PlaySMAnimations()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x1350CE8", Offset = "0x1350CE8", VA = "0x1350CE8")]
	public void PlayWalkReaction()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x1350EC8", Offset = "0x1350EC8", VA = "0x1350EC8")]
	public void PlayHoopReaction()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x13510A8", Offset = "0x13510A8", VA = "0x13510A8")]
	public void PlaySomersaultReaction()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x1351288", Offset = "0x1351288", VA = "0x1351288")]
	public void PlayHighReaction()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x1351468", Offset = "0x1351468", VA = "0x1351468", Slot = "6")]
	protected override void UpdateProcessing()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x1351854", Offset = "0x1351854", VA = "0x1351854")]
	public float GetTime()
	{
		return default(float);
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x135185C", Offset = "0x135185C", VA = "0x135185C")]
	private void SetNextRound()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x13517E4", Offset = "0x13517E4", VA = "0x13517E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56C34", Offset = "0xA56C34")]
	private IEnumerator WaitForNextRound()
	{
		return null;
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x134FE9C", Offset = "0x134FE9C", VA = "0x134FE9C")]
	public void FloatRoundItemsIn()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x1351978", Offset = "0x1351978", VA = "0x1351978")]
	public void FloatRoundItemsOut()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x1351CDC", Offset = "0x1351CDC", VA = "0x1351CDC")]
	public void DisableRoundObjects()
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x1351D5C", Offset = "0x1351D5C", VA = "0x1351D5C")]
	public void CheckForRoundComplete()
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x1351748", Offset = "0x1351748", VA = "0x1351748")]
	public int GetItemsActive()
	{
		return default(int);
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x1351E6C", Offset = "0x1351E6C", VA = "0x1351E6C")]
	public WormWhispererSceneManager()
	{
	}
}
[Token(Token = "0x2000276")]
public abstract class ObjectStateManager : MonoBehaviour
{
	[Token(Token = "0x2000737")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36C8C", Offset = "0xA36C8C")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4002BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StateObject obj;

		[Token(Token = "0x600305F")]
		[Address(RVA = "0x12AC520", Offset = "0x12AC520", VA = "0x12AC520")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6003060")]
		[Address(RVA = "0x12AD4D0", Offset = "0x12AD4D0", VA = "0x12AD4D0")]
		internal bool <DeregisterObject>b__0(StateObject stateObjects)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000738")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36C9C", Offset = "0xA36C9C")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4002BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x6003061")]
		[Address(RVA = "0x12AC7A8", Offset = "0x12AC7A8", VA = "0x12AC7A8")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6003062")]
		[Address(RVA = "0x12AD510", Offset = "0x12AD510", VA = "0x12AD510")]
		internal bool <GetObjectByID>b__0(StateObject stateObjects)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000739")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36CAC", Offset = "0xA36CAC")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4002BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StateObject obj;

		[Token(Token = "0x6003063")]
		[Address(RVA = "0x12ACE2C", Offset = "0x12ACE2C", VA = "0x12ACE2C")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6003064")]
		[Address(RVA = "0x12AD410", Offset = "0x12AD410", VA = "0x12AD410")]
		internal bool <ResetObject>b__0(StateObject stateObjects)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200073A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36CBC", Offset = "0xA36CBC")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4002BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StateObject obj;

		[Token(Token = "0x6003065")]
		[Address(RVA = "0x12ACF68", Offset = "0x12ACF68", VA = "0x12ACF68")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6003066")]
		[Address(RVA = "0x12AD450", Offset = "0x12AD450", VA = "0x12AD450")]
		internal bool <RestoreObject>b__0(StateObject stateObjects)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200073B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36CCC", Offset = "0xA36CCC")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4002BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StateObject obj;

		[Token(Token = "0x6003067")]
		[Address(RVA = "0x12AD1B8", Offset = "0x12AD1B8", VA = "0x12AD1B8")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6003068")]
		[Address(RVA = "0x12AD490", Offset = "0x12AD490", VA = "0x12AD490")]
		internal bool <UpdateObject>b__0(StateObject stateObjects)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableDebug;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FDA8", Offset = "0xA3FDA8")]
	private readonly List<StateObject> <stateObjects>k__BackingField;

	[Token(Token = "0x170000D0")]
	public List<StateObject> stateObjects
	{
		[Token(Token = "0x600114C")]
		[Address(RVA = "0x12AC070", Offset = "0x12AC070", VA = "0x12AC070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA56C98", Offset = "0xA56C98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x12AC078", Offset = "0x12AC078", VA = "0x12AC078")]
	public void RegisterNewObject(StateObject obj)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x12AC268", Offset = "0x12AC268", VA = "0x12AC268")]
	public void DeregisterObject(StateObject obj)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x12AC528", Offset = "0x12AC528", VA = "0x12AC528", Slot = "4")]
	public virtual StateObject[] GetObjectsByType(ObjectType objType)
	{
		return null;
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x12AC6A0", Offset = "0x12AC6A0", VA = "0x12AC6A0", Slot = "5")]
	public virtual StateObject GetObjectByID(int id)
	{
		return null;
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x12AC7B0", Offset = "0x12AC7B0", VA = "0x12AC7B0", Slot = "6")]
	public virtual void AssociateObjects(StateObject obj1, StateObject obj2)
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x12AC844", Offset = "0x12AC844", VA = "0x12AC844", Slot = "7")]
	public virtual void AssociateObjectsToTarget(StateObject target, StateObject[] objs)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x12AC900", Offset = "0x12AC900", VA = "0x12AC900", Slot = "8")]
	public virtual void ResetAllObjects()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x12AC9F8", Offset = "0x12AC9F8", VA = "0x12AC9F8", Slot = "9")]
	public virtual void ResetAllRigidbody()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x12ACAF0", Offset = "0x12ACAF0", VA = "0x12ACAF0", Slot = "10")]
	public virtual void ResetAllObjectsAndRigidbody()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x12ACBF8", Offset = "0x12ACBF8", VA = "0x12ACBF8", Slot = "11")]
	public virtual void RestoreAllObjects()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x12ACD0C", Offset = "0x12ACD0C", VA = "0x12ACD0C", Slot = "12")]
	public virtual void ResetObject(StateObject obj)
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x12ACE34", Offset = "0x12ACE34", VA = "0x12ACE34", Slot = "13")]
	public virtual void RestoreObject(StateObject obj)
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x12ACF70", Offset = "0x12ACF70", VA = "0x12ACF70", Slot = "14")]
	public virtual void UpdateAllObjects()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x12AD084", Offset = "0x12AD084", VA = "0x12AD084", Slot = "15")]
	public virtual void UpdateObject(StateObject obj)
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x12AD1C0", Offset = "0x12AD1C0", VA = "0x12AD1C0")]
	public void CollectSaveData()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x12AD308", Offset = "0x12AD308", VA = "0x12AD308")]
	public void DistributeLoadData()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x12AD30C", Offset = "0x12AD30C", VA = "0x12AD30C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x12AD3A0", Offset = "0x12AD3A0", VA = "0x12AD3A0")]
	protected ObjectStateManager()
	{
	}
}
[Token(Token = "0x2000277")]
public class PlayerManager : MonoBehaviour
{
	[Token(Token = "0x200073C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36CDC", Offset = "0xA36CDC")]
	private sealed class <WaitForPlayerToBeGrounded>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerManager <>4__this;

		[Token(Token = "0x4002BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform teleportPoint;

		[Token(Token = "0x4002BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterController <characterController>5__2;

		[Token(Token = "0x17000643")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600306C")]
			[Address(RVA = "0x11417AC", Offset = "0x11417AC", VA = "0x11417AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000644")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600306E")]
			[Address(RVA = "0x1141814", Offset = "0x1141814", VA = "0x1141814", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003069")]
		[Address(RVA = "0x1140324", Offset = "0x1140324", VA = "0x1140324")]
		[DebuggerHidden]
		public <WaitForPlayerToBeGrounded>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x600306A")]
		[Address(RVA = "0x1141694", Offset = "0x1141694", VA = "0x1141694", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600306B")]
		[Address(RVA = "0x1141698", Offset = "0x1141698", VA = "0x1141698", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600306D")]
		[Address(RVA = "0x11417B4", Offset = "0x11417B4", VA = "0x11417B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200073D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36CEC", Offset = "0xA36CEC")]
	private sealed class <DropAndFade>d__130 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerManager <>4__this;

		[Token(Token = "0x4002BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterController <cc>5__2;

		[Token(Token = "0x4002BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <savedPos>5__3;

		[Token(Token = "0x4002BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <pos>5__4;

		[Token(Token = "0x4002BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <_usesHoverboard>5__5;

		[Token(Token = "0x4002BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <savedOffset>5__6;

		[Token(Token = "0x17000645")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003072")]
			[Address(RVA = "0x114147C", Offset = "0x114147C", VA = "0x114147C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000646")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003074")]
			[Address(RVA = "0x11414E4", Offset = "0x11414E4", VA = "0x11414E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600306F")]
		[Address(RVA = "0x1140D10", Offset = "0x1140D10", VA = "0x1140D10")]
		[DebuggerHidden]
		public <DropAndFade>d__130(int <>1__state)
		{
		}

		[Token(Token = "0x6003070")]
		[Address(RVA = "0x1140F40", Offset = "0x1140F40", VA = "0x1140F40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003071")]
		[Address(RVA = "0x1140F44", Offset = "0x1140F44", VA = "0x1140F44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003073")]
		[Address(RVA = "0x1141484", Offset = "0x1141484", VA = "0x1141484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200073E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36CFC", Offset = "0xA36CFC")]
	private sealed class <RegenerateHealth>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerManager <>4__this;

		[Token(Token = "0x17000647")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003078")]
			[Address(RVA = "0x1141624", Offset = "0x1141624", VA = "0x1141624", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000648")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600307A")]
			[Address(RVA = "0x114168C", Offset = "0x114168C", VA = "0x114168C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003075")]
		[Address(RVA = "0x1140D88", Offset = "0x1140D88", VA = "0x1140D88")]
		[DebuggerHidden]
		public <RegenerateHealth>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6003076")]
		[Address(RVA = "0x11414EC", Offset = "0x11414EC", VA = "0x11414EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003077")]
		[Address(RVA = "0x11414F0", Offset = "0x11414F0", VA = "0x11414F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003079")]
		[Address(RVA = "0x114162C", Offset = "0x114162C", VA = "0x114162C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerManager m_Instance;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_FlashObj;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DamageFlash m_Flash;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator _damageIndicator;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _damageIndex;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _damageStages;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent damageCallback;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject m_VRTransitionVFX;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_ReportCard;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_GameWatch;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_GameWatchLeftHand;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject m_GameWatchRightHand;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshProUGUI m_TimerText;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshProUGUI m_ScoreText;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int m_Health;

	[Token(Token = "0x40011FA")]
	public const int MAX_HEALTH = 100;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool allowDeath;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool allowRevive;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action healthChangeEvent;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action closedReportCard;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool showReportCardOnce;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FE58", Offset = "0xA3FE58")]
	private PlayerHealthBar <healthBar>k__BackingField;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool usesWatch;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool shouldUseTimer;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool hasFallDamage;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	public bool fallDamageOnWalk;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool usesHoverboard;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA3FE68", Offset = "0xA3FE68")]
	private int <m_Score>k__BackingField;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool hasTakenDamage;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float fSecondsPassed;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PlayerTeleport m_playerTeleport;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private SmoothLocomotion m_playerLocomotion;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isTeleporting;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool isFalling;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool isDying;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float fallTime;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private bool playDamageFlash;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	[SerializeField]
	private bool noDamage;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Collider[] _colliders;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject DebugMenu;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject HubMenu;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private BNGPlayerControllerExt _playerController;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject[] _hands;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private float _minDeathHeight;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private CharacterController _characterController;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject m_Hoverboard;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject m_HoverboardGlove;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject m_HoverboardGloveAlternate;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Coroutine _healthRegenRoutine;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private float _regenWaitTime;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[SerializeField]
	private float _regenTickTime;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private int _regenTickAmount;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[SerializeField]
	private float _maxFallTime;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private float _minFallDamageTime;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private Grabber[] m_Hands;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool isPlayerLocked;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private LocomotionType _locomotion;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool gravityEnabled;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float gravityAmount;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float yOffset;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private HandJetExt handJets;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject m_Characters;

	[Token(Token = "0x170000D1")]
	public static PlayerManager Instance
	{
		[Token(Token = "0x600115F")]
		[Address(RVA = "0x113EC2C", Offset = "0x113EC2C", VA = "0x113EC2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D2")]
	public bool watchActive
	{
		[Token(Token = "0x6001160")]
		[Address(RVA = "0x113EC7C", Offset = "0x113EC7C", VA = "0x113EC7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D3")]
	public int Health
	{
		[Token(Token = "0x6001161")]
		[Address(RVA = "0x113ED14", Offset = "0x113ED14", VA = "0x113ED14")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D4")]
	public PlayerHealthBar healthBar
	{
		[Token(Token = "0x6001162")]
		[Address(RVA = "0x113ED1C", Offset = "0x113ED1C", VA = "0x113ED1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA56CA8", Offset = "0xA56CA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001163")]
		[Address(RVA = "0x113ED24", Offset = "0x113ED24", VA = "0x113ED24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA56CB8", Offset = "0xA56CB8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public int m_Score
	{
		[Token(Token = "0x6001164")]
		[Address(RVA = "0x113ED2C", Offset = "0x113ED2C", VA = "0x113ED2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA56CC8", Offset = "0xA56CC8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001165")]
		[Address(RVA = "0x113ED34", Offset = "0x113ED34", VA = "0x113ED34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA56CD8", Offset = "0xA56CD8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public BNGPlayerControllerExt PlayerController
	{
		[Token(Token = "0x6001166")]
		[Address(RVA = "0x113ED3C", Offset = "0x113ED3C", VA = "0x113ED3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D7")]
	public bool PlayerLocked
	{
		[Token(Token = "0x6001167")]
		[Address(RVA = "0x113ED44", Offset = "0x113ED44", VA = "0x113ED44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D8")]
	public bool PlayerOnHoverboard
	{
		[Token(Token = "0x6001169")]
		[Address(RVA = "0x113F444", Offset = "0x113F444", VA = "0x113F444")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D9")]
	public bool HoverboardCharged
	{
		[Token(Token = "0x600116A")]
		[Address(RVA = "0x113F460", Offset = "0x113F460", VA = "0x113F460")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DA")]
	public static Collider[] Colliders
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0x113E468", Offset = "0x113E468", VA = "0x113E468")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x113ED4C", Offset = "0x113ED4C", VA = "0x113ED4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x113F47C", Offset = "0x113F47C", VA = "0x113F47C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x113F490", Offset = "0x113F490", VA = "0x113F490")]
	private void ToggleHands(bool hands)
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x113F680", Offset = "0x113F680", VA = "0x113F680")]
	public void ChargeHoverboard()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x113F6E0", Offset = "0x113F6E0", VA = "0x113F6E0")]
	public void EnableHoverboardGlove()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x113F7B4", Offset = "0x113F7B4", VA = "0x113F7B4")]
	public void TogglePlayerRotation(bool shouldSnap)
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x113F824", Offset = "0x113F824", VA = "0x113F824")]
	public void ToggleGravity(bool gravityOn)
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x113F844", Offset = "0x113F844", VA = "0x113F844")]
	public void ToggleHoverboard(bool _toggle, bool disableMesh = true)
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x113FA9C", Offset = "0x113FA9C", VA = "0x113FA9C")]
	public void ToggleWatch(bool shouldUseWatch)
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x113F23C", Offset = "0x113F23C", VA = "0x113F23C")]
	private void CheckWatchPos()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x113FB4C", Offset = "0x113FB4C", VA = "0x113FB4C")]
	public void SetWatchHandLeft()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x113FC90", Offset = "0x113FC90", VA = "0x113FC90")]
	public void SetWatchHandRight()
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x113FDD4", Offset = "0x113FDD4", VA = "0x113FDD4")]
	public void SetWatchOffset(ControllerHand handside, GameObject handOffset)
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x113FDEC", Offset = "0x113FDEC", VA = "0x113FDEC")]
	public void SetWatchOffset(GameObject leftHandOffset, GameObject rightHandOffset)
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x113FDF4", Offset = "0x113FDF4", VA = "0x113FDF4")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x113FE04", Offset = "0x113FE04", VA = "0x113FE04")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x113FE0C", Offset = "0x113FE0C", VA = "0x113FE0C")]
	public float GetTimePassed()
	{
		return default(float);
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x113FE14", Offset = "0x113FE14", VA = "0x113FE14")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x112EC8C", Offset = "0x112EC8C", VA = "0x112EC8C")]
	public void LockPlayer(bool shouldLock)
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x11401E0", Offset = "0x11401E0", VA = "0x11401E0")]
	public void Show()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x11401C0", Offset = "0x11401C0", VA = "0x11401C0")]
	public void Hide()
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x1140200", Offset = "0x1140200", VA = "0x1140200")]
	public void ToggleHelpMenu()
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x112EE70", Offset = "0x112EE70", VA = "0x112EE70")]
	public void Revive()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x112EC24", Offset = "0x112EC24", VA = "0x112EC24")]
	public void TeleportPlayer(Transform teleportPoint, bool teleportImmediately = false)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x11402A8", Offset = "0x11402A8", VA = "0x11402A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56CE8", Offset = "0xA56CE8")]
	private IEnumerator WaitForPlayerToBeGrounded(Transform teleportPoint)
	{
		return null;
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x1140350", Offset = "0x1140350", VA = "0x1140350")]
	public void ToggleCharacterController(bool toggle)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x113F3A0", Offset = "0x113F3A0", VA = "0x113F3A0")]
	public void SetTime()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x1140408", Offset = "0x1140408", VA = "0x1140408")]
	public void SetTime(float time)
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x1140370", Offset = "0x1140370", VA = "0x1140370")]
	public string GetTimeString()
	{
		return null;
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x11404C0", Offset = "0x11404C0", VA = "0x11404C0")]
	public void AddScore(int score)
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x1140584", Offset = "0x1140584", VA = "0x1140584")]
	public void SetScore(int score)
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x114063C", Offset = "0x114063C", VA = "0x114063C")]
	public void PlaySceneTransitionVFX()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x11406AC", Offset = "0x11406AC", VA = "0x11406AC")]
	public void LoadScene()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x113E6E4", Offset = "0x113E6E4", VA = "0x113E6E4")]
	public void RegisterHealthBar(PlayerHealthBar playerHealthBar)
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x1140738", Offset = "0x1140738", VA = "0x1140738")]
	public void ShowHealthBar(bool show = true)
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x112F784", Offset = "0x112F784", VA = "0x112F784")]
	public void ShowReportCard(bool show = true, string reportCardDataKey = "", bool forceOn = false, bool blackboard = false)
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x112F958", Offset = "0x112F958", VA = "0x112F958")]
	public bool isReportCardShowing()
	{
		return default(bool);
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x1140764", Offset = "0x1140764", VA = "0x1140764")]
	public void AddGrabbableItem(GameObject grabbableItem)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x1140768", Offset = "0x1140768", VA = "0x1140768")]
	public void InstantDeath()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x113EB04", Offset = "0x113EB04", VA = "0x113EB04")]
	public void InflictDamage(int damage)
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x1140820", Offset = "0x1140820", VA = "0x1140820")]
	public void InflictDamage(int damage, bool slowdownHoverboard = false)
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x1140974", Offset = "0x1140974", VA = "0x1140974")]
	public void PlayFlash()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x1140A70", Offset = "0x1140A70", VA = "0x1140A70")]
	public void PlayFlash(Color color)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x1140B20", Offset = "0x1140B20", VA = "0x1140B20")]
	public void DisableFlash()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x1140B40", Offset = "0x1140B40", VA = "0x1140B40")]
	private void UpdateDamageIndicator()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x1140B44", Offset = "0x1140B44", VA = "0x1140B44")]
	private void CheckForDeath()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x113076C", Offset = "0x113076C", VA = "0x113076C")]
	public void ToggleFreezePlayer(bool freeze)
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x1140B54", Offset = "0x1140B54", VA = "0x1140B54")]
	private void HandleDeath()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x1140CF4", Offset = "0x1140CF4", VA = "0x1140CF4")]
	public bool TeleportationEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x1140C84", Offset = "0x1140C84", VA = "0x1140C84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56D4C", Offset = "0xA56D4C")]
	private IEnumerator DropAndFade()
	{
		return null;
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x1140D3C", Offset = "0x1140D3C", VA = "0x1140D3C")]
	public void ResetHealth()
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x1140A00", Offset = "0x1140A00", VA = "0x1140A00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56DB0", Offset = "0xA56DB0")]
	private IEnumerator RegenerateHealth()
	{
		return null;
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x1140DB4", Offset = "0x1140DB4", VA = "0x1140DB4")]
	private void ToggleCharacters()
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x1140EBC", Offset = "0x1140EBC", VA = "0x1140EBC")]
	public void DropAllClimbables()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x1140EE4", Offset = "0x1140EE4", VA = "0x1140EE4")]
	public PlayerManager()
	{
	}
}
[Token(Token = "0x2000278")]
public class PlayerWatchManager : MonoBehaviour
{
	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer m_Color;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource m_WatchAudioSource;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource m_WatchTuningAudioSource;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_WatchSignalLockAudioSource;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource m_characterAudioSource;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_savedVolume;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _watchTalkEffect;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isPlayingWatchAudio;

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x1143E40", Offset = "0x1143E40", VA = "0x1143E40")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x1143E8C", Offset = "0x1143E8C", VA = "0x1143E8C")]
	public void TopButtonLeftPressed()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x1143F4C", Offset = "0x1143F4C", VA = "0x1143F4C")]
	public void TopButtonRightPressed()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x114400C", Offset = "0x114400C", VA = "0x114400C")]
	public void BottomButtonLeftPressed()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x11440CC", Offset = "0x11440CC", VA = "0x11440CC")]
	public void BottomButtonRightPressed()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x11391C4", Offset = "0x11391C4", VA = "0x11391C4")]
	public void PlayWatchAudio(AudioClip audioClip, AudioSource character, float savedVolume)
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x114418C", Offset = "0x114418C", VA = "0x114418C")]
	public void WatchSignalLock()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x1144210", Offset = "0x1144210", VA = "0x1144210")]
	public void WatchTuning()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x1144294", Offset = "0x1144294", VA = "0x1144294")]
	public void StopWatchEffect()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x1138644", Offset = "0x1138644", VA = "0x1138644")]
	public void StopWatchAudio()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x1138900", Offset = "0x1138900", VA = "0x1138900")]
	public void ResumeWatchAudio()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x11387E4", Offset = "0x11387E4", VA = "0x11387E4")]
	public void PauseWatchAudio()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x11442AC", Offset = "0x11442AC", VA = "0x11442AC")]
	public PlayerWatchManager()
	{
	}
}
[Token(Token = "0x2000279")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA32FEC", Offset = "0xA32FEC")]
public class ChatAnimList : ChatPiece
{
	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string character;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool shouldDelay;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AnimData> AnimSequence;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string lookAtCharacter;

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x1220E7C", Offset = "0x1220E7C", VA = "0x1220E7C")]
	public ChatAnimList()
	{
	}
}
[Token(Token = "0x200027A")]
public class ChatChoice : ChatPiece
{
	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x1220E8C", Offset = "0x1220E8C", VA = "0x1220E8C")]
	public ChatChoice()
	{
	}
}
[Token(Token = "0x200027B")]
public class ChatPiece : ScriptableObject
{
	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string completeAction;

	[Token(Token = "0x170000DB")]
	public string id
	{
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1220E94", Offset = "0x1220E94", VA = "0x1220E94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x1220E84", Offset = "0x1220E84", VA = "0x1220E84")]
	public ChatPiece()
	{
	}
}
[Token(Token = "0x200027C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33038", Offset = "0xA33038")]
public class ChatSequence : ScriptableObject
{
	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ChatPiece> steps;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int _stepIndex;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string completeAction;

	[Token(Token = "0x170000DC")]
	public string id
	{
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x1220E9C", Offset = "0x1220E9C", VA = "0x1220E9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DD")]
	public ChatPiece Current
	{
		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x1220EAC", Offset = "0x1220EAC", VA = "0x1220EAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x1220EA4", Offset = "0x1220EA4", VA = "0x1220EA4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x1220F2C", Offset = "0x1220F2C", VA = "0x1220F2C")]
	public ChatPiece GetNext()
	{
		return null;
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x1220F4C", Offset = "0x1220F4C", VA = "0x1220F4C")]
	public ChatPiece GetIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x1220F3C", Offset = "0x1220F3C", VA = "0x1220F3C")]
	public void ProgressSequence()
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x1220FD0", Offset = "0x1220FD0", VA = "0x1220FD0")]
	public ChatPiece SkipToStep(int stepNum)
	{
		return null;
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x12211B4", Offset = "0x12211B4", VA = "0x12211B4")]
	public ChatPiece SkipToStep(string stepID)
	{
		return null;
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x12213AC", Offset = "0x12213AC", VA = "0x12213AC")]
	public ChatSequence()
	{
	}
}
[Token(Token = "0x200027D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33084", Offset = "0xA33084")]
public class ChatText : ChatPiece
{
	[Serializable]
	[Token(Token = "0x200073F")]
	public class CharacterToLookAt
	{
		[Token(Token = "0x4002BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_Character;

		[Token(Token = "0x4002BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_CharacterToLookAt;

		[Token(Token = "0x600307B")]
		[Address(RVA = "0x12213BC", Offset = "0x12213BC", VA = "0x12213BC")]
		public CharacterToLookAt()
		{
		}
	}

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string text;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string character;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimData anim;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool delayFurther;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool delayBeforePlay;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float delayPlayTime;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string lookAtCharacter;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CharacterToLookAt[] CharacterLookAts;

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x12213B4", Offset = "0x12213B4", VA = "0x12213B4")]
	public ChatText()
	{
	}
}
[Token(Token = "0x200027E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA330D0", Offset = "0xA330D0")]
public class Conversation : ScriptableObject
{
	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ChatSequence> sequences;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int _sequenceIndex;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string completeAction;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isPriority;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool autoProgress;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool sequential;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool isIntro;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isInterruptable;

	[Token(Token = "0x170000DE")]
	public string id
	{
		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x1229410", Offset = "0x1229410", VA = "0x1229410")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	public ChatSequence Current
	{
		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x122950C", Offset = "0x122950C", VA = "0x122950C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E0")]
	public int CurrentIndex
	{
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x122958C", Offset = "0x122958C", VA = "0x122958C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E1")]
	public ChatPiece CurrentStep
	{
		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x1229594", Offset = "0x1229594", VA = "0x1229594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x1229418", Offset = "0x1229418", VA = "0x1229418", Slot = "4")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x1229608", Offset = "0x1229608", VA = "0x1229608")]
	public ChatSequence Progress()
	{
		return null;
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x1229698", Offset = "0x1229698", VA = "0x1229698")]
	public bool OnLastSequence()
	{
		return default(bool);
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x12296F8", Offset = "0x12296F8", VA = "0x12296F8")]
	public Conversation()
	{
	}
}
[Token(Token = "0x200027F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA3311C", Offset = "0xA3311C")]
public class ConversationList : ScriptableObject
{
	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Conversation> _conversations;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _index;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _resetOnStart;

	[Token(Token = "0x170000E2")]
	public List<Conversation> conversations
	{
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x1229708", Offset = "0x1229708", VA = "0x1229708")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E3")]
	public int index
	{
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x1229710", Offset = "0x1229710", VA = "0x1229710")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x1229718", Offset = "0x1229718", VA = "0x1229718")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x1229728", Offset = "0x1229728", VA = "0x1229728")]
	public void Revert()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x1229828", Offset = "0x1229828", VA = "0x1229828")]
	public Conversation MoveToNext()
	{
		return null;
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x1229838", Offset = "0x1229838", VA = "0x1229838")]
	public Conversation Current()
	{
		return null;
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x12298B8", Offset = "0x12298B8", VA = "0x12298B8")]
	public void ResetDialogue(string id)
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x1229BB0", Offset = "0x1229BB0", VA = "0x1229BB0")]
	public void SetAsCurrent(string id)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x1229D78", Offset = "0x1229D78", VA = "0x1229D78")]
	public Conversation GetConversationByID(string id)
	{
		return null;
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x1229F1C", Offset = "0x1229F1C", VA = "0x1229F1C")]
	public ConversationList()
	{
	}
}
[Token(Token = "0x2000280")]
public class ConversationListController : MonoBehaviour
{
	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ConversationList _convoList;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ConvoPlayData[] _data;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, ConvoPlayData> _dataRef;

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x1229F2C", Offset = "0x1229F2C", VA = "0x1229F2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x122A018", Offset = "0x122A018", VA = "0x122A018")]
	public bool PlayConversation(string convoName, bool shouldInterruptIntro = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x122A5BC", Offset = "0x122A5BC", VA = "0x122A5BC")]
	public ConversationListController()
	{
	}
}
[Token(Token = "0x2000281")]
public class ConversationManager : MonoBehaviour
{
	[Token(Token = "0x2000740")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36D0C", Offset = "0xA36D0C")]
	private sealed class <WaitAndCompleteSetUp>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConversationManager <>4__this;

		[Token(Token = "0x17000649")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600307F")]
			[Address(RVA = "0x122F5B0", Offset = "0x122F5B0", VA = "0x122F5B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700064A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003081")]
			[Address(RVA = "0x122F618", Offset = "0x122F618", VA = "0x122F618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600307C")]
		[Address(RVA = "0x122AA34", Offset = "0x122AA34", VA = "0x122AA34")]
		[DebuggerHidden]
		public <WaitAndCompleteSetUp>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600307D")]
		[Address(RVA = "0x122F4F0", Offset = "0x122F4F0", VA = "0x122F4F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600307E")]
		[Address(RVA = "0x122F4F4", Offset = "0x122F4F4", VA = "0x122F4F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003080")]
		[Address(RVA = "0x122F5B8", Offset = "0x122F5B8", VA = "0x122F5B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000741")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36D1C", Offset = "0xA36D1C")]
	private sealed class <ProcessConversation>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Conversation convo;

		[Token(Token = "0x4002BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConversationManager <>4__this;

		[Token(Token = "0x4002BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ChatSequence <curSequence>5__2;

		[Token(Token = "0x4002BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ChatPiece <step>5__3;

		[Token(Token = "0x4002BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ChatText <textStep>5__4;

		[Token(Token = "0x4002BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <textString>5__5;

		[Token(Token = "0x4002BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Character <currentChar>5__6;

		[Token(Token = "0x1700064B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003085")]
			[Address(RVA = "0x122F2D8", Offset = "0x122F2D8", VA = "0x122F2D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700064C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003087")]
			[Address(RVA = "0x122F340", Offset = "0x122F340", VA = "0x122F340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003082")]
		[Address(RVA = "0x122BC14", Offset = "0x122BC14", VA = "0x122BC14")]
		[DebuggerHidden]
		public <ProcessConversation>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6003083")]
		[Address(RVA = "0x122DB88", Offset = "0x122DB88", VA = "0x122DB88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003084")]
		[Address(RVA = "0x122DB8C", Offset = "0x122DB8C", VA = "0x122DB8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003086")]
		[Address(RVA = "0x122F2E0", Offset = "0x122F2E0", VA = "0x122F2E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000742")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36D2C", Offset = "0xA36D2C")]
	private sealed class <PlayAnimList>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConversationManager <>4__this;

		[Token(Token = "0x4002BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChatAnimList animList;

		[Token(Token = "0x4002BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x1700064D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600308B")]
			[Address(RVA = "0x122DB18", Offset = "0x122DB18", VA = "0x122DB18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700064E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600308D")]
			[Address(RVA = "0x122DB80", Offset = "0x122DB80", VA = "0x122DB80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003088")]
		[Address(RVA = "0x122BD14", Offset = "0x122BD14", VA = "0x122BD14")]
		[DebuggerHidden]
		public <PlayAnimList>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6003089")]
		[Address(RVA = "0x122CD90", Offset = "0x122CD90", VA = "0x122CD90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600308A")]
		[Address(RVA = "0x122CD94", Offset = "0x122CD94", VA = "0x122CD94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600308C")]
		[Address(RVA = "0x122DB20", Offset = "0x122DB20", VA = "0x122DB20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000743")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36D3C", Offset = "0xA36D3C")]
	private sealed class <WaitAndPerformAnimationSequence>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fTime;

		[Token(Token = "0x4002BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConversationManager <>4__this;

		[Token(Token = "0x4002BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimData animData;

		[Token(Token = "0x1700064F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003091")]
			[Address(RVA = "0x122F6D8", Offset = "0x122F6D8", VA = "0x122F6D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000650")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003093")]
			[Address(RVA = "0x122F740", Offset = "0x122F740", VA = "0x122F740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600308E")]
		[Address(RVA = "0x122BDCC", Offset = "0x122BDCC", VA = "0x122BDCC")]
		[DebuggerHidden]
		public <WaitAndPerformAnimationSequence>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x600308F")]
		[Address(RVA = "0x122F620", Offset = "0x122F620", VA = "0x122F620", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003090")]
		[Address(RVA = "0x122F624", Offset = "0x122F624", VA = "0x122F624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003092")]
		[Address(RVA = "0x122F6E0", Offset = "0x122F6E0", VA = "0x122F6E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000744")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36D4C", Offset = "0xA36D4C")]
	private sealed class <TrackAudioSource>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConversationManager <>4__this;

		[Token(Token = "0x4002BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource sfx;

		[Token(Token = "0x4002C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float clipLength;

		[Token(Token = "0x17000651")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003097")]
			[Address(RVA = "0x122F480", Offset = "0x122F480", VA = "0x122F480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000652")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003099")]
			[Address(RVA = "0x122F4E8", Offset = "0x122F4E8", VA = "0x122F4E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003094")]
		[Address(RVA = "0x122C584", Offset = "0x122C584", VA = "0x122C584")]
		[DebuggerHidden]
		public <TrackAudioSource>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6003095")]
		[Address(RVA = "0x122F348", Offset = "0x122F348", VA = "0x122F348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003096")]
		[Address(RVA = "0x122F34C", Offset = "0x122F34C", VA = "0x122F34C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003098")]
		[Address(RVA = "0x122F488", Offset = "0x122F488", VA = "0x122F488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000745")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36D5C", Offset = "0xA36D5C")]
	private sealed class <WaitAndTrigger>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimData data;

		[Token(Token = "0x4002C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Character animChar;

		[Token(Token = "0x17000653")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600309D")]
			[Address(RVA = "0x122F818", Offset = "0x122F818", VA = "0x122F818", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000654")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600309F")]
			[Address(RVA = "0x122F880", Offset = "0x122F880", VA = "0x122F880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600309A")]
		[Address(RVA = "0x122C838", Offset = "0x122C838", VA = "0x122C838")]
		[DebuggerHidden]
		public <WaitAndTrigger>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x600309B")]
		[Address(RVA = "0x122F748", Offset = "0x122F748", VA = "0x122F748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600309C")]
		[Address(RVA = "0x122F74C", Offset = "0x122F74C", VA = "0x122F74C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600309E")]
		[Address(RVA = "0x122F820", Offset = "0x122F820", VA = "0x122F820", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ConversationManager _instance;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Dictionary<string, Character> _characters;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected GameObject _textPrefab;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected TextMeshPro _screenText;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected SpriteRenderer _screenSprite;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected StandardUISubtitlePanel _npcSubPanel;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Camera _player;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Transform _playerSceneObj;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected LayerMask _talkLayers;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Conversation interruptionConvo;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool _initialized;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Conversation _activeConvo;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Coroutine _currentConversationAnim;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected List<Coroutine> _currentConversations;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Dictionary<string, MethodInfo> _cachedMethods;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected AudioSource _currentAudio;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Action _onSequenceComplete;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Action _onConversationComplete;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool useTranslations;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[SerializeField]
	protected bool _useDebugInput;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<AudioSource> m_VoiceOver;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Conversation m_NextConversation;

	[Token(Token = "0x170000E4")]
	public static ConversationManager instance
	{
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x122A5C4", Offset = "0x122A5C4", VA = "0x122A5C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E5")]
	public static Action OnSequenceComplete
	{
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x122A614", Offset = "0x122A614", VA = "0x122A614")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E6")]
	public static Action OnConversationComplete
	{
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x122A670", Offset = "0x122A670", VA = "0x122A670")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x122A6CC", Offset = "0x122A6CC", VA = "0x122A6CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x122A8CC", Offset = "0x122A8CC", VA = "0x122A8CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x122A764", Offset = "0x122A764", VA = "0x122A764")]
	private void SetUpCameraAndText()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x122A85C", Offset = "0x122A85C", VA = "0x122A85C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56E14", Offset = "0xA56E14")]
	private IEnumerator WaitAndCompleteSetUp()
	{
		return null;
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x12230F0", Offset = "0x12230F0", VA = "0x12230F0")]
	public bool isConvoActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x122AA60", Offset = "0x122AA60", VA = "0x122AA60")]
	public bool isConvoActive(string conversationId)
	{
		return default(bool);
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x1222330", Offset = "0x1222330", VA = "0x1222330")]
	public bool isConvoIntro()
	{
		return default(bool);
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x122AB6C", Offset = "0x122AB6C", VA = "0x122AB6C")]
	public void InterruptConversation(bool shouldReset = false, bool shouldCheckMax = true)
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x122B3D0", Offset = "0x122B3D0", VA = "0x122B3D0")]
	public void ReleaseAllObjects()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x122AD7C", Offset = "0x122AD7C", VA = "0x122AD7C")]
	private void ResetConversation()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x122A328", Offset = "0x122A328", VA = "0x122A328")]
	public static bool StartConversation(Conversation convo)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x122B8D0", Offset = "0x122B8D0", VA = "0x122B8D0")]
	private void AddConversationQueue(Conversation convo)
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x122B4E0", Offset = "0x122B4E0", VA = "0x122B4E0")]
	public void OfficeMaxCheck()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x122B154", Offset = "0x122B154", VA = "0x122B154")]
	public void StopAllConversations()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x122B868", Offset = "0x122B868", VA = "0x122B868")]
	public void AddConversation(Coroutine conversation)
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x122B600", Offset = "0x122B600", VA = "0x122B600")]
	public void KillTalk(Conversation convo)
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x122BA60", Offset = "0x122BA60", VA = "0x122BA60")]
	public bool ShouldInterruptConversation()
	{
		return default(bool);
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x122B7EC", Offset = "0x122B7EC", VA = "0x122B7EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56E78", Offset = "0xA56E78")]
	private IEnumerator ProcessConversation(Conversation convo)
	{
		return null;
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x122BC40", Offset = "0x122BC40", VA = "0x122BC40")]
	private void PlayAnimations(ChatAnimList animList)
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x122BC98", Offset = "0x122BC98", VA = "0x122BC98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56EDC", Offset = "0xA56EDC")]
	private IEnumerator PlayAnimList(ChatAnimList animList)
	{
		return null;
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x122BD40", Offset = "0x122BD40", VA = "0x122BD40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56F40", Offset = "0xA56F40")]
	private IEnumerator WaitAndPerformAnimationSequence(float fTime, AnimData animData)
	{
		return null;
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x122BA44", Offset = "0x122BA44", VA = "0x122BA44")]
	private void SetScreenText(string text)
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x122BDF8", Offset = "0x122BDF8", VA = "0x122BDF8")]
	private float TriggerAudio(string audioName, [Optional] Transform target, bool delayAudioMore = false)
	{
		return default(float);
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x122C144", Offset = "0x122C144", VA = "0x122C144")]
	private float TriggerAudioPath(string audioPath, [Optional] Transform target, bool delayAudioMore = false, bool shouldLipSync = false, string CharacterName = "Max")
	{
		return default(float);
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x122C0B8", Offset = "0x122C0B8", VA = "0x122C0B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA56FA4", Offset = "0xA56FA4")]
	private IEnumerator TrackAudioSource(AudioSource sfx, float clipLength)
	{
		return null;
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x122AE04", Offset = "0x122AE04", VA = "0x122AE04")]
	private void CancelAllVoiceAudio()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x122C5B0", Offset = "0x122C5B0", VA = "0x122C5B0")]
	private void TriggerAnimation(AnimData data)
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x122C7BC", Offset = "0x122C7BC", VA = "0x122C7BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57008", Offset = "0xA57008")]
	private IEnumerator WaitAndTrigger(Character animChar, AnimData data)
	{
		return null;
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x122C864", Offset = "0x122C864", VA = "0x122C864")]
	private void StopTriggerAnimation(AnimData data)
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x122B8D8", Offset = "0x122B8D8", VA = "0x122B8D8")]
	private void ClearOutLookValues()
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x1229158", Offset = "0x1229158", VA = "0x1229158")]
	public static bool TalkTo()
	{
		return default(bool);
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x122C9CC", Offset = "0x122C9CC", VA = "0x122C9CC", Slot = "4")]
	protected virtual void HandleStepComplete(ChatPiece step)
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x122C9D0", Offset = "0x122C9D0", VA = "0x122C9D0", Slot = "5")]
	protected virtual void HandleSequenceComplete(ChatSequence sequence)
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x122CBB4", Offset = "0x122CBB4", VA = "0x122CBB4", Slot = "6")]
	protected virtual void HandleConversationComplete(Conversation conversation)
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x122CA10", Offset = "0x122CA10", VA = "0x122CA10")]
	private void ProcessCommand(string command)
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x122CBF4", Offset = "0x122CBF4", VA = "0x122CBF4")]
	public void SetCharacterConversation(string charID, string convoID)
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x122CCF8", Offset = "0x122CCF8", VA = "0x122CCF8")]
	public ConversationManager()
	{
	}
}
[Token(Token = "0x2000282")]
public class DialogueDisplay : MonoBehaviour
{
	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DialogueDisplay _instance;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static DialogueDisplay _secondaryInstance;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _text;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image _icon;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool shouldOverrideSetting;

	[Token(Token = "0x170000E7")]
	public bool ShouldOverrideSetting
	{
		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x1316AF0", Offset = "0x1316AF0", VA = "0x1316AF0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x1316AF8", Offset = "0x1316AF8", VA = "0x1316AF8")]
		set
		{
		}
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x1316B04", Offset = "0x1316B04", VA = "0x1316B04")]
	private void Start()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x1316E30", Offset = "0x1316E30", VA = "0x1316E30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x1316BE0", Offset = "0x1316BE0", VA = "0x1316BE0")]
	public static void UpdateDisplay()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x1316E80", Offset = "0x1316E80", VA = "0x1316E80")]
	public DialogueDisplay()
	{
	}
}
[Token(Token = "0x2000283")]
public class DialogueDisplayOldSystem : MonoBehaviour
{
	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro _text;

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x1316E88", Offset = "0x1316E88", VA = "0x1316E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x1316EE4", Offset = "0x1316EE4", VA = "0x1316EE4")]
	public DialogueDisplayOldSystem()
	{
	}
}
[Token(Token = "0x2000284")]
public class AttachToScreen : MonoBehaviour
{
	[Token(Token = "0x6001202")]
	[Address(RVA = "0x129B3D8", Offset = "0x129B3D8", VA = "0x129B3D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x129B4F4", Offset = "0x129B4F4", VA = "0x129B4F4")]
	public AttachToScreen()
	{
	}
}
[Token(Token = "0x2000285")]
public class LipSyncHelper : MonoBehaviour
{
	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LipSync _lipsync;

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x115ADAC", Offset = "0x115ADAC", VA = "0x115ADAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x115AE04", Offset = "0x115AE04", VA = "0x115AE04")]
	public void PlayAudio(LipSyncData audioData)
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x115AE20", Offset = "0x115AE20", VA = "0x115AE20")]
	public LipSyncHelper()
	{
	}
}
[Token(Token = "0x2000286")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33168", Offset = "0xA33168")]
public class RandomDialog : Conversation
{
	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> _indexesUsed;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<int> _remainingIndexes;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool _resetOnComplete;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool _smartReset;

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x10B8CC0", Offset = "0x10B8CC0", VA = "0x10B8CC0", Slot = "4")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x10B8DF4", Offset = "0x10B8DF4", VA = "0x10B8DF4")]
	public ChatSequence NextRandomSequence()
	{
		return null;
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x10B902C", Offset = "0x10B902C", VA = "0x10B902C")]
	public RandomDialog()
	{
	}
}
[Token(Token = "0x2000287")]
public class OfficeConversationManager : ConversationManager
{
	[Token(Token = "0x600120A")]
	[Address(RVA = "0x123FEF8", Offset = "0x123FEF8", VA = "0x123FEF8", Slot = "6")]
	protected override void HandleConversationComplete(Conversation conversation)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x1240104", Offset = "0x1240104", VA = "0x1240104")]
	public void EnableCoffee(string length)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x12401F0", Offset = "0x12401F0", VA = "0x12401F0")]
	public OfficeConversationManager()
	{
	}
}
[Token(Token = "0x2000288")]
public class StoreConversationManager : ConversationManager
{
	[Token(Token = "0x600120D")]
	[Address(RVA = "0x11B8550", Offset = "0x11B8550", VA = "0x11B8550", Slot = "6")]
	protected override void HandleConversationComplete(Conversation conversation)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x11B8884", Offset = "0x11B8884", VA = "0x11B8884")]
	public void TeleportCharacter(string charID, string point, string boolEnable = "")
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x11B89F0", Offset = "0x11B89F0", VA = "0x11B89F0")]
	public void CheckBossDeathReady()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x11B8A48", Offset = "0x11B8A48", VA = "0x11B8A48")]
	public void EnableMaxThrow()
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x11B8ACC", Offset = "0x11B8ACC", VA = "0x11B8ACC")]
	public StoreConversationManager()
	{
	}
}
[Token(Token = "0x2000289")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA331B4", Offset = "0xA331B4")]
public class GrabHelpItemHelper : MonoBehaviour
{
	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable _grab;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent m_GrabEvent;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasBeenGrabbed;

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x118F528", Offset = "0x118F528", VA = "0x118F528")]
	private void Start()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x118F580", Offset = "0x118F580", VA = "0x118F580")]
	private void Update()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x118F664", Offset = "0x118F664", VA = "0x118F664")]
	public GrabHelpItemHelper()
	{
	}
}
[Token(Token = "0x200028A")]
public class TaskDisplay : MonoBehaviour
{
	[Token(Token = "0x2000746")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36D6C", Offset = "0xA36D6C")]
	private sealed class <WaitAndUpdateDisplay>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TaskDisplay <>4__this;

		[Token(Token = "0x17000655")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030A3")]
			[Address(RVA = "0x10E5AB8", Offset = "0x10E5AB8", VA = "0x10E5AB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000656")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030A5")]
			[Address(RVA = "0x10E5B20", Offset = "0x10E5B20", VA = "0x10E5B20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030A0")]
		[Address(RVA = "0x10E56EC", Offset = "0x10E56EC", VA = "0x10E56EC")]
		[DebuggerHidden]
		public <WaitAndUpdateDisplay>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60030A1")]
		[Address(RVA = "0x10E5A0C", Offset = "0x10E5A0C", VA = "0x10E5A0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030A2")]
		[Address(RVA = "0x10E5A10", Offset = "0x10E5A10", VA = "0x10E5A10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030A4")]
		[Address(RVA = "0x10E5AC0", Offset = "0x10E5AC0", VA = "0x10E5AC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI taskNameLabel;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject completedGO;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Task initialTask;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string taskName;

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x10E54FC", Offset = "0x10E54FC", VA = "0x10E54FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x10E5648", Offset = "0x10E5648", VA = "0x10E5648")]
	public void SetTask(Task task)
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x10E567C", Offset = "0x10E567C", VA = "0x10E567C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5706C", Offset = "0xA5706C")]
	private IEnumerator WaitAndUpdateDisplay()
	{
		return null;
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x10E5718", Offset = "0x10E5718", VA = "0x10E5718")]
	private void UpdateOnChange()
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x10E58B4", Offset = "0x10E58B4", VA = "0x10E58B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x10E571C", Offset = "0x10E571C", VA = "0x10E571C")]
	public void UpdateDisplay()
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x10E58B8", Offset = "0x10E58B8", VA = "0x10E58B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x10E5A04", Offset = "0x10E5A04", VA = "0x10E5A04")]
	public TaskDisplay()
	{
	}
}
[Token(Token = "0x200028B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33218", Offset = "0xA33218")]
public class AddForceTest : ObjectStateData
{
	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool booleanTest;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float floatTest;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string stringTest;

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x128F4DC", Offset = "0x128F4DC", VA = "0x128F4DC")]
	public void AddForceToObject(float gravity)
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x128F60C", Offset = "0x128F60C", VA = "0x128F60C", Slot = "8")]
	public override void UpdateData()
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x128F614", Offset = "0x128F614", VA = "0x128F614", Slot = "6")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x128F61C", Offset = "0x128F61C", VA = "0x128F61C", Slot = "7")]
	public override void RestoreLastData()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x128F624", Offset = "0x128F624", VA = "0x128F624", Slot = "10")]
	public override string GatherObjectData()
	{
		return null;
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x128F66C", Offset = "0x128F66C", VA = "0x128F66C", Slot = "9")]
	public override void LoadObjectData(string data)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x128F674", Offset = "0x128F674", VA = "0x128F674")]
	public AddForceTest()
	{
	}
}
[Token(Token = "0x200028C")]
public class AutoTriggerConvo : MonoBehaviour
{
	[Token(Token = "0x2000747")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36D7C", Offset = "0xA36D7C")]
	private sealed class <WaitAndTrigger>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoTriggerConvo <>4__this;

		[Token(Token = "0x17000657")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030A9")]
			[Address(RVA = "0x129E77C", Offset = "0x129E77C", VA = "0x129E77C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000658")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030AB")]
			[Address(RVA = "0x129E7E4", Offset = "0x129E7E4", VA = "0x129E7E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030A6")]
		[Address(RVA = "0x129E67C", Offset = "0x129E67C", VA = "0x129E67C")]
		[DebuggerHidden]
		public <WaitAndTrigger>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60030A7")]
		[Address(RVA = "0x129E6B8", Offset = "0x129E6B8", VA = "0x129E6B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030A8")]
		[Address(RVA = "0x129E6BC", Offset = "0x129E6BC", VA = "0x129E6BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030AA")]
		[Address(RVA = "0x129E784", Offset = "0x129E784", VA = "0x129E784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Character character;

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x129E5E0", Offset = "0x129E5E0", VA = "0x129E5E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x129E60C", Offset = "0x129E60C", VA = "0x129E60C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA570D0", Offset = "0xA570D0")]
	private IEnumerator WaitAndTrigger()
	{
		return null;
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x129E6A8", Offset = "0x129E6A8", VA = "0x129E6A8")]
	public AutoTriggerConvo()
	{
	}
}
[Token(Token = "0x200028D")]
public class CollisionTesting : MonoBehaviour
{
	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Collider> mainColliders;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> interactionObjects;

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x1224E94", Offset = "0x1224E94", VA = "0x1224E94")]
	private void Start()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x1225134", Offset = "0x1225134", VA = "0x1225134")]
	public CollisionTesting()
	{
	}
}
[Token(Token = "0x200028E")]
public class CubeStateManager : ObjectStateManager
{
	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA400D8", Offset = "0xA400D8")]
	private static CubeStateManager <Instance>k__BackingField;

	[Token(Token = "0x170000E8")]
	public static CubeStateManager Instance
	{
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1234578", Offset = "0x1234578", VA = "0x1234578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA57134", Offset = "0xA57134")]
		get
		{
			return null;
		}
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x12345C8", Offset = "0x12345C8", VA = "0x12345C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA57144", Offset = "0xA57144")]
		private set
		{
		}
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x123461C", Offset = "0x123461C", VA = "0x123461C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x1234670", Offset = "0x1234670", VA = "0x1234670")]
	public CubeStateManager()
	{
	}
}
[Token(Token = "0x200028F")]
public class DebugTextOutput : MonoBehaviour
{
	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text _text;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DebugTextOutput _instance;

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x131316C", Offset = "0x131316C", VA = "0x131316C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x13131D8", Offset = "0x13131D8", VA = "0x13131D8")]
	public static void AddText(string text)
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x13132C0", Offset = "0x13132C0", VA = "0x13132C0")]
	public DebugTextOutput()
	{
	}
}
[Token(Token = "0x2000290")]
public class LookAtDebug : MonoBehaviour
{
	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LookAtTarget targetScript;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetPoint;

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x132CFF4", Offset = "0x132CFF4", VA = "0x132CFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x132D124", Offset = "0x132D124", VA = "0x132D124")]
	private void Update()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x132D17C", Offset = "0x132D17C", VA = "0x132D17C")]
	public LookAtDebug()
	{
	}
}
[Token(Token = "0x2000291")]
public class ObjectStateTester : MonoBehaviour
{
	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject forceCubePrefab;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject forceCubeUnregisteredPrefab;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject forceSpherePrefab;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> cubes;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> spheres;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA400E8", Offset = "0xA400E8")]
	public float gravity;

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x12AD540", Offset = "0x12AD540", VA = "0x12AD540")]
	private void Start()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x12AD5E0", Offset = "0x12AD5E0", VA = "0x12AD5E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x12AD8B8", Offset = "0x12AD8B8", VA = "0x12AD8B8")]
	private void CreateForce()
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x12ADAB0", Offset = "0x12ADAB0", VA = "0x12ADAB0")]
	private void AddForceCubeDefault()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x12AE094", Offset = "0x12AE094", VA = "0x12AE094")]
	private void AddForceSphereDefault()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x12ADCFC", Offset = "0x12ADCFC", VA = "0x12ADCFC")]
	private void AddForceCubeUnregistered()
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x12AE2E0", Offset = "0x12AE2E0", VA = "0x12AE2E0")]
	private void RegisterAllUnregistered()
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x12ADEEC", Offset = "0x12ADEEC", VA = "0x12ADEEC")]
	private void RemoveEarliestCube()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x12ADFC0", Offset = "0x12ADFC0", VA = "0x12ADFC0")]
	private void RemoveEarliestSphere()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x12AE610", Offset = "0x12AE610", VA = "0x12AE610")]
	public ObjectStateTester()
	{
	}
}
[Token(Token = "0x2000292")]
public class SphereStateManager : ObjectStateManager
{
	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40108", Offset = "0xA40108")]
	private static SphereStateManager <Instance>k__BackingField;

	[Token(Token = "0x170000E9")]
	public static SphereStateManager Instance
	{
		[Token(Token = "0x600123D")]
		[Address(RVA = "0x11B62B8", Offset = "0x11B62B8", VA = "0x11B62B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA57154", Offset = "0xA57154")]
		get
		{
			return null;
		}
		[Token(Token = "0x600123E")]
		[Address(RVA = "0x11B6308", Offset = "0x11B6308", VA = "0x11B6308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA57164", Offset = "0xA57164")]
		private set
		{
		}
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x11B635C", Offset = "0x11B635C", VA = "0x11B635C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x11B63B0", Offset = "0x11B63B0", VA = "0x11B63B0")]
	public SphereStateManager()
	{
	}
}
[Token(Token = "0x2000293")]
public class ClownUI : MonoBehaviour
{
	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.UI.Toggle[] noseToggles;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int iterator;

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x1221DB4", Offset = "0x1221DB4", VA = "0x1221DB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x1221E88", Offset = "0x1221E88", VA = "0x1221E88")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA57174", Offset = "0xA57174")]
	public void PunchClown()
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x1221E10", Offset = "0x1221E10", VA = "0x1221E10")]
	public void ResetPunches()
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x1221F80", Offset = "0x1221F80", VA = "0x1221F80")]
	public ClownUI()
	{
	}
}
[Token(Token = "0x2000294")]
public class CommandDetection : MonoBehaviour
{
	[Token(Token = "0x2000748")]
	private enum CommandType
	{
		[Token(Token = "0x4002C0C")]
		None,
		[Token(Token = "0x4002C0D")]
		Left,
		[Token(Token = "0x4002C0E")]
		Up,
		[Token(Token = "0x4002C0F")]
		Right,
		[Token(Token = "0x4002C10")]
		Down
	}

	[Token(Token = "0x2000749")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36D8C", Offset = "0xA36D8C")]
	private sealed class <DeparentCanvas>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandDetection <>4__this;

		[Token(Token = "0x17000659")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030AF")]
			[Address(RVA = "0x1227C3C", Offset = "0x1227C3C", VA = "0x1227C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700065A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030B1")]
			[Address(RVA = "0x1227CA4", Offset = "0x1227CA4", VA = "0x1227CA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030AC")]
		[Address(RVA = "0x1225294", Offset = "0x1225294", VA = "0x1225294")]
		[DebuggerHidden]
		public <DeparentCanvas>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60030AD")]
		[Address(RVA = "0x1227B28", Offset = "0x1227B28", VA = "0x1227B28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030AE")]
		[Address(RVA = "0x1227B2C", Offset = "0x1227B2C", VA = "0x1227B2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030B0")]
		[Address(RVA = "0x1227C44", Offset = "0x1227C44", VA = "0x1227C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WormWhispererSceneManager _manager;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rotationTarget;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool initialized;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool givingCommand;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CommandType leftHand;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CommandType rightHand;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float xTolerance;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float yTolerance;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float leftOffset;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float upOffset;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rightOffset;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float downOffset;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float fillDuration;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI debugTextLeft;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI debugTextRight;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshProUGUI debugTextCommand;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject gestureCanvas;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform leftButton;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform upButton;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform rightButton;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform downButton;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Image leftImage;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Image upImage;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Image rightImage;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Image downImage;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float leftTimer;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float rightTimer;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool leftFilled;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool upFilled;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool rightFilled;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	private bool downFilled;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Transform leftController;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Transform rightController;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float commandTimer;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<int> commandSequence;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool sequenceStarted;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool leftHandActive;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private bool rightHandActive;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private CommandType lastLeftHandHeld;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private CommandType lastRightHandHeld;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private List<SplineComputer> _splines;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private TrainEngine _wormEngine;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private List<JunctionSwitch> _junctionAlpha;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private List<JunctionSwitch> _junctionBeta;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool onMain;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool onAlpha;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
	private bool onBeta;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
	private bool leftArrow;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool rightArrow;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Animator wormAnimator;

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x122513C", Offset = "0x122513C", VA = "0x122513C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x1225224", Offset = "0x1225224", VA = "0x1225224")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA571AC", Offset = "0xA571AC")]
	private IEnumerator DeparentCanvas()
	{
		return null;
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x12252C0", Offset = "0x12252C0", VA = "0x12252C0")]
	private void UpdateFillState()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x12257E0", Offset = "0x12257E0", VA = "0x12257E0")]
	private void UpdateJunctionStates()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x1225374", Offset = "0x1225374", VA = "0x1225374")]
	private void ActivateJunction()
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x1225F80", Offset = "0x1225F80", VA = "0x1225F80")]
	private void DetectHandTapCommand(string hand, CommandType command)
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x1226088", Offset = "0x1226088", VA = "0x1226088")]
	private void DetectHandFilledCommand(string hand, CommandType command)
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x12262D8", Offset = "0x12262D8", VA = "0x12262D8")]
	private void DetectCommandSequence()
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x1226E20", Offset = "0x1226E20", VA = "0x1226E20")]
	private void ClearCommandSequence()
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x1226E84", Offset = "0x1226E84", VA = "0x1226E84")]
	private void Update()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x1227AF0", Offset = "0x1227AF0", VA = "0x1227AF0")]
	public CommandDetection()
	{
	}
}
[Token(Token = "0x2000295")]
public class CommandFader : MonoBehaviour
{
	[Token(Token = "0x200074A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36D9C", Offset = "0xA36D9C")]
	private sealed class <WaitAndDisplay>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandFader <>4__this;

		[Token(Token = "0x1700065B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030B5")]
			[Address(RVA = "0x1228510", Offset = "0x1228510", VA = "0x1228510", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700065C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030B7")]
			[Address(RVA = "0x1228578", Offset = "0x1228578", VA = "0x1228578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030B2")]
		[Address(RVA = "0x1227F2C", Offset = "0x1227F2C", VA = "0x1227F2C")]
		[DebuggerHidden]
		public <WaitAndDisplay>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60030B3")]
		[Address(RVA = "0x1228454", Offset = "0x1228454", VA = "0x1228454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030B4")]
		[Address(RVA = "0x1228458", Offset = "0x1228458", VA = "0x1228458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030B6")]
		[Address(RVA = "0x1228518", Offset = "0x1228518", VA = "0x1228518", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200074B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36DAC", Offset = "0xA36DAC")]
	private sealed class <FadeInUI>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandFader <>4__this;

		[Token(Token = "0x1700065D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030BB")]
			[Address(RVA = "0x12283E4", Offset = "0x12283E4", VA = "0x12283E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700065E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030BD")]
			[Address(RVA = "0x122844C", Offset = "0x122844C", VA = "0x122844C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030B8")]
		[Address(RVA = "0x1227FF4", Offset = "0x1227FF4", VA = "0x1227FF4")]
		[DebuggerHidden]
		public <FadeInUI>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60030B9")]
		[Address(RVA = "0x12282A0", Offset = "0x12282A0", VA = "0x12282A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030BA")]
		[Address(RVA = "0x12282A4", Offset = "0x12282A4", VA = "0x12282A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030BC")]
		[Address(RVA = "0x12283EC", Offset = "0x12283EC", VA = "0x12283EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200074C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36DBC", Offset = "0xA36DBC")]
	private sealed class <FadeCanvas>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4002C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CanvasGroup canvas;

		[Token(Token = "0x4002C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float startAlpha;

		[Token(Token = "0x4002C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float endAlpha;

		[Token(Token = "0x4002C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startTime>5__2;

		[Token(Token = "0x4002C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <endTime>5__3;

		[Token(Token = "0x1700065F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030C1")]
			[Address(RVA = "0x1228230", Offset = "0x1228230", VA = "0x1228230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000660")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030C3")]
			[Address(RVA = "0x1228298", Offset = "0x1228298", VA = "0x1228298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030BE")]
		[Address(RVA = "0x12280B4", Offset = "0x12280B4", VA = "0x12280B4")]
		[DebuggerHidden]
		public <FadeCanvas>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60030BF")]
		[Address(RVA = "0x12280E8", Offset = "0x12280E8", VA = "0x12280E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030C0")]
		[Address(RVA = "0x12280EC", Offset = "0x12280EC", VA = "0x12280EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030C2")]
		[Address(RVA = "0x1228238", Offset = "0x1228238", VA = "0x1228238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup _canvasGroup;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _parentTransform;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine _displayRoutine;

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x1227CAC", Offset = "0x1227CAC", VA = "0x1227CAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x1227CF0", Offset = "0x1227CF0", VA = "0x1227CF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x1227D48", Offset = "0x1227D48", VA = "0x1227D48")]
	public void DeactivateUI()
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x1227EBC", Offset = "0x1227EBC", VA = "0x1227EBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57210", Offset = "0xA57210")]
	private IEnumerator WaitAndDisplay()
	{
		return null;
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x1227F58", Offset = "0x1227F58", VA = "0x1227F58")]
	public void ActivateUI()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x1227F84", Offset = "0x1227F84", VA = "0x1227F84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57274", Offset = "0xA57274")]
	private IEnumerator FadeInUI()
	{
		return null;
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x1228020", Offset = "0x1228020", VA = "0x1228020")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA572D8", Offset = "0xA572D8")]
	private IEnumerator FadeCanvas(CanvasGroup canvas, float startAlpha, float endAlpha, float duration)
	{
		return null;
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x12280E0", Offset = "0x12280E0", VA = "0x12280E0")]
	public CommandFader()
	{
	}
}
[Token(Token = "0x2000296")]
public class DebugSettingsUI : MonoBehaviour
{
	[Token(Token = "0x200074D")]
	public delegate void OnClick(int i);

	[Token(Token = "0x200074E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36DCC", Offset = "0xA36DCC")]
	private sealed class <Initialize>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugSettingsUI <>4__this;

		[Token(Token = "0x17000661")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030CB")]
			[Address(RVA = "0x1313064", Offset = "0x1313064", VA = "0x1313064", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000662")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030CD")]
			[Address(RVA = "0x13130CC", Offset = "0x13130CC", VA = "0x13130CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030C8")]
		[Address(RVA = "0x13116D0", Offset = "0x13116D0", VA = "0x13116D0")]
		[DebuggerHidden]
		public <Initialize>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60030C9")]
		[Address(RVA = "0x1312ABC", Offset = "0x1312ABC", VA = "0x1312ABC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030CA")]
		[Address(RVA = "0x1312AC0", Offset = "0x1312AC0", VA = "0x1312AC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030CC")]
		[Address(RVA = "0x131306C", Offset = "0x131306C", VA = "0x131306C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200074F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36DDC", Offset = "0xA36DDC")]
	private sealed class <AssignReferences>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugSettingsUI <>4__this;

		[Token(Token = "0x17000663")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030D1")]
			[Address(RVA = "0x1312A4C", Offset = "0x1312A4C", VA = "0x1312A4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000664")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030D3")]
			[Address(RVA = "0x1312AB4", Offset = "0x1312AB4", VA = "0x1312AB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030CE")]
		[Address(RVA = "0x13117F8", Offset = "0x13117F8", VA = "0x13117F8")]
		[DebuggerHidden]
		public <AssignReferences>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60030CF")]
		[Address(RVA = "0x13126F4", Offset = "0x13126F4", VA = "0x13126F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030D0")]
		[Address(RVA = "0x13126F8", Offset = "0x13126F8", VA = "0x13126F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030D2")]
		[Address(RVA = "0x1312A54", Offset = "0x1312A54", VA = "0x1312A54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000750")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36DEC", Offset = "0xA36DEC")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4002C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x4002C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x60030D4")]
		[Address(RVA = "0x1312464", Offset = "0x1312464", VA = "0x1312464")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x60030D5")]
		[Address(RVA = "0x1312474", Offset = "0x1312474", VA = "0x1312474")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _playerHead;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRCameraRig _rig;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LaserPointer _lp;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LineRenderer _lr;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _sceneCanvas;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject _fpsCounter;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject _debugLog;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRDebugInfo _ovrDebug;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DebugToggle[] _toggles;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform _contentPanel;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<RectTransform> _insertedElements;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x1311634", Offset = "0x1311634", VA = "0x1311634")]
	public void Start()
	{
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x1311660", Offset = "0x1311660", VA = "0x1311660")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5733C", Offset = "0xA5733C")]
	private IEnumerator Initialize()
	{
		return null;
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0x13116FC", Offset = "0x13116FC", VA = "0x13116FC")]
	public void LoadStreetPrologue()
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0x1311788", Offset = "0x1311788", VA = "0x1311788")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA573A0", Offset = "0xA573A0")]
	private IEnumerator AssignReferences()
	{
		return null;
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0x1311824", Offset = "0x1311824", VA = "0x1311824")]
	public void Show()
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x1311C78", Offset = "0x1311C78", VA = "0x1311C78")]
	public void Hide()
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x1311CCC", Offset = "0x1311CCC", VA = "0x1311CCC")]
	public void ToggleMenuVisible()
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x13119EC", Offset = "0x13119EC", VA = "0x13119EC")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x1311D18", Offset = "0x1311D18", VA = "0x1311D18")]
	public void ShowSceneCanvas()
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x1311F38", Offset = "0x1311F38", VA = "0x1311F38")]
	public void ToggleFPS()
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x1311F78", Offset = "0x1311F78", VA = "0x1311F78")]
	public void ToggleSceneElement(int index)
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0x1311A9C", Offset = "0x1311A9C", VA = "0x1311A9C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0x13121B0", Offset = "0x13121B0", VA = "0x13121B0")]
	private void AddRect(RectTransform r)
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0x1312270", Offset = "0x1312270", VA = "0x1312270")]
	public RectTransform AddButton(string label, OnClick handler, int index)
	{
		return null;
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0x131246C", Offset = "0x131246C", VA = "0x131246C")]
	public DebugSettingsUI()
	{
	}
}
[Token(Token = "0x2000297")]
public class DebugToggle : MonoBehaviour
{
	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string label;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] toggleObjects;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useSequence;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _sequenceIndex;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] sequenceStrings;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int>[] _sequences;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useSetting;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameSettings.Setting setting;

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x13132C8", Offset = "0x13132C8", VA = "0x13132C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x1311FB8", Offset = "0x1311FB8", VA = "0x1311FB8")]
	public void NextObjectState()
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x1313510", Offset = "0x1313510", VA = "0x1313510")]
	public DebugToggle()
	{
	}
}
[Token(Token = "0x2000298")]
public class FadeToggle : MonoBehaviour
{
	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected CanvasGroup uiCanvasGroup;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected AnimationCurve fadeInCurve;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float curveValue;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected int targetAlpha;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool autoFadeAfterDuration;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float autoFadeDelay;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float displayedDuration;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool shouldFade;

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x1254AE4", Offset = "0x1254AE4", VA = "0x1254AE4")]
	public void Show(bool show = true)
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x1254B00", Offset = "0x1254B00", VA = "0x1254B00")]
	private void Update()
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x1254C50", Offset = "0x1254C50", VA = "0x1254C50")]
	public FadeToggle()
	{
	}
}
[Token(Token = "0x2000299")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3327C", Offset = "0xA3327C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3327C", Offset = "0xA3327C")]
public class FillUI : MonoBehaviour
{
	[Token(Token = "0x2000751")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36DFC", Offset = "0xA36DFC")]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FillUI <>4__this;

		[Token(Token = "0x17000665")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030D9")]
			[Address(RVA = "0x1255324", Offset = "0x1255324", VA = "0x1255324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000666")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030DB")]
			[Address(RVA = "0x125538C", Offset = "0x125538C", VA = "0x125538C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030D6")]
		[Address(RVA = "0x1254D48", Offset = "0x1254D48", VA = "0x1254D48")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60030D7")]
		[Address(RVA = "0x12551F4", Offset = "0x12551F4", VA = "0x12551F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030D8")]
		[Address(RVA = "0x12551F8", Offset = "0x12551F8", VA = "0x12551F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030DA")]
		[Address(RVA = "0x125532C", Offset = "0x125532C", VA = "0x125532C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HubUIManager hubUIManager;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isNewGameButton;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool isRestartButton;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BoxCollider gameBoxUICollider;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float delay;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator _animator;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.UI.Button _button;

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x1254C68", Offset = "0x1254C68", VA = "0x1254C68")]
	private void Awake()
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x1254CD8", Offset = "0x1254CD8", VA = "0x1254CD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57404", Offset = "0xA57404")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x1254D74", Offset = "0x1254D74", VA = "0x1254D74")]
	private void FillComplete()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x12551E4", Offset = "0x12551E4", VA = "0x12551E4")]
	public FillUI()
	{
	}
}
[Token(Token = "0x200029A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33308", Offset = "0xA33308")]
public class FinalGradOculusName : MonoBehaviour
{
	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TMP_Text _text;

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x1255394", Offset = "0x1255394", VA = "0x1255394")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x12553EC", Offset = "0x12553EC", VA = "0x12553EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x12554FC", Offset = "0x12554FC", VA = "0x12554FC")]
	public FinalGradOculusName()
	{
	}
}
[Token(Token = "0x200029B")]
public class FizzballScoreboard : MonoBehaviour
{
	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FizzballSceneManager _sceneManager;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI scoreCount;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI outCount;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI batAverage;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI inningCount;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI strikeCount;

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x125A414", Offset = "0x125A414", VA = "0x125A414")]
	private void Update()
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x125A674", Offset = "0x125A674", VA = "0x125A674")]
	public FizzballScoreboard()
	{
	}
}
[Token(Token = "0x200029C")]
public class FloatingText : MonoBehaviour
{
	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro tMesh;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Billboard bBoard;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool holdPosition;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 localPos;

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x125BC74", Offset = "0x125BC74", VA = "0x125BC74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x125BD1C", Offset = "0x125BD1C", VA = "0x125BD1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x125BD58", Offset = "0x125BD58", VA = "0x125BD58")]
	private void Update()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x125BDA4", Offset = "0x125BDA4", VA = "0x125BDA4")]
	public void ApplyColor(Color c)
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x125BDC8", Offset = "0x125BDC8", VA = "0x125BDC8")]
	public void CutoutAnimate(bool isCharacter = false)
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x125C27C", Offset = "0x125C27C", VA = "0x125C27C")]
	public FloatingText()
	{
	}
}
[Token(Token = "0x200029D")]
public class FontSwap : MonoBehaviour
{
	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _useOverlay;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool _noOutline;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FontAdjustSettings[] _languageAdjustments;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _lockedFont;

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x125C88C", Offset = "0x125C88C", VA = "0x125C88C")]
	private void Start()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x125CE8C", Offset = "0x125CE8C", VA = "0x125CE8C")]
	public FontSwap()
	{
	}
}
[Serializable]
[Token(Token = "0x200029E")]
public class FontAdjustSettings
{
	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameSettings.Languages language;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float fontSize;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool removeBold;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 positionChange;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool hideObject;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool zeroSpacing;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float lineSpacing;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float charSpacing;

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x125C284", Offset = "0x125C284", VA = "0x125C284")]
	public FontAdjustSettings()
	{
	}
}
[Token(Token = "0x200029F")]
public class HubMenuPlacement : MonoBehaviour
{
	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _centerEyeAnchor;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _placementDistance;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LayerMask _stopLayers;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool tempPrevent;

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x1595B38", Offset = "0x1595B38", VA = "0x1595B38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x1595BD4", Offset = "0x1595BD4", VA = "0x1595BD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x1595C90", Offset = "0x1595C90", VA = "0x1595C90")]
	private void PlaceMenuInFront()
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x1595FF4", Offset = "0x1595FF4", VA = "0x1595FF4")]
	public HubMenuPlacement()
	{
	}
}
[Token(Token = "0x20002A0")]
public class HubMenuRotator : MonoBehaviour
{
	[Token(Token = "0x2000752")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36E0C", Offset = "0xA36E0C")]
	private sealed class <WaitAndUnparent>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HubMenuRotator <>4__this;

		[Token(Token = "0x17000667")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030DF")]
			[Address(RVA = "0x159678C", Offset = "0x159678C", VA = "0x159678C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000668")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030E1")]
			[Address(RVA = "0x15967F4", Offset = "0x15967F4", VA = "0x15967F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030DC")]
		[Address(RVA = "0x159664C", Offset = "0x159664C", VA = "0x159664C")]
		[DebuggerHidden]
		public <WaitAndUnparent>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60030DD")]
		[Address(RVA = "0x15966BC", Offset = "0x15966BC", VA = "0x15966BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030DE")]
		[Address(RVA = "0x15966C0", Offset = "0x15966C0", VA = "0x15966C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030E0")]
		[Address(RVA = "0x1596794", Offset = "0x1596794", VA = "0x1596794", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform centerEyeAnchor;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rotationTarget;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float moveSpeed;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _isInitialized;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool sceneLoadHelper;

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x1596008", Offset = "0x1596008", VA = "0x1596008")]
	private void Start()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x1596184", Offset = "0x1596184", VA = "0x1596184")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x1596310", Offset = "0x1596310", VA = "0x1596310")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x1596424", Offset = "0x1596424", VA = "0x1596424")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x1596480", Offset = "0x1596480", VA = "0x1596480")]
	private void Update()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x15963B4", Offset = "0x15963B4", VA = "0x15963B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57468", Offset = "0xA57468")]
	private IEnumerator WaitAndUnparent()
	{
		return null;
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x1596678", Offset = "0x1596678", VA = "0x1596678")]
	private void Reparent()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x15966AC", Offset = "0x15966AC", VA = "0x15966AC")]
	public HubMenuRotator()
	{
	}
}
[Token(Token = "0x20002A1")]
public class HubUIManager : MonoBehaviour
{
	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject warning;

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x15967FC", Offset = "0x15967FC", VA = "0x15967FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x1596804", Offset = "0x1596804", VA = "0x1596804")]
	public void NewGame()
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x1596890", Offset = "0x1596890", VA = "0x1596890")]
	public void LoadGame()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x159691C", Offset = "0x159691C", VA = "0x159691C")]
	public void LoadHub()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x15969A8", Offset = "0x15969A8", VA = "0x15969A8")]
	public void OpenSettings()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x15969AC", Offset = "0x15969AC", VA = "0x15969AC")]
	public HubUIManager()
	{
	}
}
[Token(Token = "0x20002A2")]
public class IntroFade : MonoBehaviour
{
	[Token(Token = "0x2000753")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36E1C", Offset = "0xA36E1C")]
	private sealed class <DelayAndStartFade>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroFade <>4__this;

		[Token(Token = "0x4002C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <uiSettings>5__2;

		[Token(Token = "0x17000669")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030E5")]
			[Address(RVA = "0x114B224", Offset = "0x114B224", VA = "0x114B224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700066A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030E7")]
			[Address(RVA = "0x114B28C", Offset = "0x114B28C", VA = "0x114B28C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030E2")]
		[Address(RVA = "0x114AA68", Offset = "0x114AA68", VA = "0x114AA68")]
		[DebuggerHidden]
		public <DelayAndStartFade>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60030E3")]
		[Address(RVA = "0x114AF08", Offset = "0x114AF08", VA = "0x114AF08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030E4")]
		[Address(RVA = "0x114AF0C", Offset = "0x114AF0C", VA = "0x114AF0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030E6")]
		[Address(RVA = "0x114B22C", Offset = "0x114B22C", VA = "0x114B22C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject uiContainer;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform playerUILookTarget;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject applicationManager;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CanvasGroup logoCanvas;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CanvasGroup titleCanvas;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CanvasGroup menuCanvas;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private OVRManager ovrManager;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeAnchor;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private OVRScreenFade m_Fader;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEngine.UI.Button m_StandingButton;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEngine.UI.Button m_SittingButton;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UnityEngine.UI.Button m_TeleportingButton;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UnityEngine.UI.Button m_AnalogButton;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SettingsToggleHandModels _handSetting;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SettingsHandColor _handColors;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private UnityEngine.UI.Button _subtitleOnButton;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private UnityEngine.UI.Button _subtitleOffButton;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SettingsToggleHandSide _handSide;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int handType;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SettingsLanguage _language;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool initialized;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool readjusting;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool startPressed;

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x114A234", Offset = "0x114A234", VA = "0x114A234")]
	private void Start()
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x114A428", Offset = "0x114A428", VA = "0x114A428")]
	public void CenterMenu()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x114A560", Offset = "0x114A560", VA = "0x114A560")]
	public void StartButtonPressed()
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x114A5C4", Offset = "0x114A5C4", VA = "0x114A5C4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA574CC", Offset = "0xA574CC")]
	public void RestoreDefaultSettings()
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x114A864", Offset = "0x114A864", VA = "0x114A864")]
	public void StandingSelected()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x114A8D4", Offset = "0x114A8D4", VA = "0x114A8D4")]
	public void SittingSelected()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x114A944", Offset = "0x114A944", VA = "0x114A944")]
	public void TeleportingSelected()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x114A99C", Offset = "0x114A99C", VA = "0x114A99C")]
	public void AnalogSelected()
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x114A9F4", Offset = "0x114A9F4", VA = "0x114A9F4")]
	public void SubtitleSelected(bool subsOn)
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x114A3B8", Offset = "0x114A3B8", VA = "0x114A3B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57504", Offset = "0xA57504")]
	private IEnumerator DelayAndStartFade()
	{
		return null;
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x114AA94", Offset = "0x114AA94", VA = "0x114AA94")]
	private void DisplayImmediate()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x114AAB4", Offset = "0x114AAB4", VA = "0x114AAB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x114AC84", Offset = "0x114AC84", VA = "0x114AC84")]
	private void MoveMenu()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x114AEF8", Offset = "0x114AEF8", VA = "0x114AEF8")]
	public void ResetAdjusting()
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x114AF00", Offset = "0x114AF00", VA = "0x114AF00")]
	public IntroFade()
	{
	}
}
[Token(Token = "0x20002A3")]
public class FadeEffect : MonoBehaviour
{
	[Token(Token = "0x2000754")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36E2C", Offset = "0xA36E2C")]
	private sealed class <FadeCanvas>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4002C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CanvasGroup canvas;

		[Token(Token = "0x4002C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float startAlpha;

		[Token(Token = "0x4002C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float endAlpha;

		[Token(Token = "0x4002C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startTime>5__2;

		[Token(Token = "0x4002C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <endTime>5__3;

		[Token(Token = "0x1700066B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030EB")]
			[Address(RVA = "0x1253B04", Offset = "0x1253B04", VA = "0x1253B04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700066C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030ED")]
			[Address(RVA = "0x1253B6C", Offset = "0x1253B6C", VA = "0x1253B6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030E8")]
		[Address(RVA = "0x1253988", Offset = "0x1253988", VA = "0x1253988")]
		[DebuggerHidden]
		public <FadeCanvas>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60030E9")]
		[Address(RVA = "0x12539BC", Offset = "0x12539BC", VA = "0x12539BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030EA")]
		[Address(RVA = "0x12539C0", Offset = "0x12539C0", VA = "0x12539C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030EC")]
		[Address(RVA = "0x1253B0C", Offset = "0x1253B0C", VA = "0x1253B0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x12538F4", Offset = "0x12538F4", VA = "0x12538F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57568", Offset = "0xA57568")]
	public static IEnumerator FadeCanvas(CanvasGroup canvas, float startAlpha, float endAlpha, float duration)
	{
		return null;
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x12539B4", Offset = "0x12539B4", VA = "0x12539B4")]
	public FadeEffect()
	{
	}
}
[Token(Token = "0x20002A4")]
public class OfficeHubButton : MonoBehaviour
{
	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_Completed;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_Incompleted;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string levelToLoad;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject button;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_CheckMark;

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x1240B08", Offset = "0x1240B08", VA = "0x1240B08")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x1240F54", Offset = "0x1240F54", VA = "0x1240F54")]
	public void ToggleButtonCompletion(bool isUnlocked, bool didComplete)
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x124109C", Offset = "0x124109C", VA = "0x124109C")]
	public OfficeHubButton()
	{
	}
}
[Token(Token = "0x20002A5")]
public class OfficeHubUIManager : MonoBehaviour
{
	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject m_NewGame;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_LoadGame;

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x12413DC", Offset = "0x12413DC", VA = "0x12413DC")]
	public void NotImplemented()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x12413E0", Offset = "0x12413E0", VA = "0x12413E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x1241454", Offset = "0x1241454", VA = "0x1241454")]
	public void UnlockAllLevels()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x1241558", Offset = "0x1241558", VA = "0x1241558")]
	public void LoadGetAClue()
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x12415E4", Offset = "0x12415E4", VA = "0x12415E4")]
	public void LoadBombsAway()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x1241670", Offset = "0x1241670", VA = "0x1241670")]
	public void LoadOffice()
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x12416FC", Offset = "0x12416FC", VA = "0x12416FC")]
	public void LoadObstacleCourse01()
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x1241788", Offset = "0x1241788", VA = "0x1241788")]
	public void LoadObstacleCourse02()
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x1241814", Offset = "0x1241814", VA = "0x1241814")]
	public void LoadObstacleCourse03()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x12418A0", Offset = "0x12418A0", VA = "0x12418A0")]
	public void LoadThemePark()
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x1241968", Offset = "0x1241968", VA = "0x1241968")]
	public void LoadThemePark2Intro()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x1241A30", Offset = "0x1241A30", VA = "0x1241A30")]
	public void LoadThemePark3Intro()
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x1241AF8", Offset = "0x1241AF8", VA = "0x1241AF8")]
	public void LoadFauxGraduation()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x1241BF4", Offset = "0x1241BF4", VA = "0x1241BF4")]
	public void LoadNanoDriving()
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x1241C80", Offset = "0x1241C80", VA = "0x1241C80")]
	public void LoadStreetEnding()
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x1241D0C", Offset = "0x1241D0C", VA = "0x1241D0C")]
	public void LoadOfficeGraduation()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x1241D98", Offset = "0x1241D98", VA = "0x1241D98")]
	public void LoadTGradeMeeting()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x1241E24", Offset = "0x1241E24", VA = "0x1241E24")]
	public void LoadStore()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x1241EB0", Offset = "0x1241EB0", VA = "0x1241EB0")]
	public void LoadStreet()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x1241F3C", Offset = "0x1241F3C", VA = "0x1241F3C")]
	public void LoadStreetPrologue()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x1241FC8", Offset = "0x1241FC8", VA = "0x1241FC8")]
	public void LoadShootingGallery()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x1242054", Offset = "0x1242054", VA = "0x1242054")]
	public void LoadFizzball()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x12420E0", Offset = "0x12420E0", VA = "0x12420E0")]
	public void LoadHub()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x124214C", Offset = "0x124214C", VA = "0x124214C")]
	public void LoadStreetChase()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x12421D8", Offset = "0x12421D8", VA = "0x12421D8")]
	public void LoadWormWhisperer()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x1242264", Offset = "0x1242264", VA = "0x1242264")]
	public void LoadSkyPatrol()
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x1242340", Offset = "0x1242340", VA = "0x1242340")]
	public void ShowGrades()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x12423D8", Offset = "0x12423D8", VA = "0x12423D8")]
	public OfficeHubUIManager()
	{
	}
}
[Token(Token = "0x20002A6")]
public class PhasedHelpText : MonoBehaviour
{
	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool activeInScene;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int phasesRevealed;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _phasesUnlocked;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] helpText;

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x11346D0", Offset = "0x11346D0", VA = "0x11346D0")]
	public static void UpdatePhase()
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x1134740", Offset = "0x1134740", VA = "0x1134740")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x1134820", Offset = "0x1134820", VA = "0x1134820")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x11348B0", Offset = "0x11348B0", VA = "0x11348B0")]
	public PhasedHelpText()
	{
	}
}
[Token(Token = "0x20002A7")]
public class PlayerHealthBar : MonoBehaviour
{
	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FadeToggle fader;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image fillBar;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color _normalHealthColor;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color _dangerHealthColor;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _dangerPercent;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _inDanger;

	[Token(Token = "0x170000EA")]
	public FadeToggle Fader
	{
		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x113E560", Offset = "0x113E560", VA = "0x113E560")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x113E568", Offset = "0x113E568", VA = "0x113E568")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x113E830", Offset = "0x113E830", VA = "0x113E830")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x113E91C", Offset = "0x113E91C", VA = "0x113E91C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA575CC", Offset = "0xA575CC")]
	private void healthChangeEvent()
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x113E6EC", Offset = "0x113E6EC", VA = "0x113E6EC")]
	public void SetHealth(float currentHealth, float maxHealth, bool forceShow = false)
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x113E990", Offset = "0x113E990", VA = "0x113E990")]
	public void SetHealth(float normalizedHealth, bool forceShow = false)
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x113EA60", Offset = "0x113EA60", VA = "0x113EA60")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA57604", Offset = "0xA57604")]
	private void TestHealth()
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x113EAA4", Offset = "0x113EAA4", VA = "0x113EAA4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA5763C", Offset = "0xA5763C")]
	private void TestWithZeroDamage()
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x113EB0C", Offset = "0x113EB0C", VA = "0x113EB0C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA57674", Offset = "0xA57674")]
	private void TestWithTenDamage()
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x113EB6C", Offset = "0x113EB6C", VA = "0x113EB6C")]
	public PlayerHealthBar()
	{
	}
}
[Token(Token = "0x20002A8")]
public class ReportCardUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000755")]
	public class ReportGrade
	{
		[Token(Token = "0x4002C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string courseName;

		[Token(Token = "0x4002C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float courseTime;

		[Token(Token = "0x4002C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int courseScore;

		[Token(Token = "0x4002C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float courseHit;

		[Token(Token = "0x4002C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int courseDeaths;

		[Token(Token = "0x60030EE")]
		[Address(RVA = "0x10BC808", Offset = "0x10BC808", VA = "0x10BC808")]
		public ReportGrade()
		{
		}
	}

	[Token(Token = "0x2000756")]
	private enum GradeNames
	{
		[Token(Token = "0x4002C42")]
		ObstacleCourse01,
		[Token(Token = "0x4002C43")]
		BombsAway,
		[Token(Token = "0x4002C44")]
		CircleOfCarnage,
		[Token(Token = "0x4002C45")]
		GetAClue,
		[Token(Token = "0x4002C46")]
		FizzballTest,
		[Token(Token = "0x4002C47")]
		ObstacleCourse02,
		[Token(Token = "0x4002C48")]
		ObstacleCourse03,
		[Token(Token = "0x4002C49")]
		SkyPatrol,
		[Token(Token = "0x4002C4A")]
		WormWhisperer
	}

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI[] m_CourseNames;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI[] m_ReportGrades;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _scoreLabel;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI _finalScore;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI _gradeMetricLabels;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI _gradeMetricScores;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, GradeReport> _gradeData;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onContinue;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InputBridge _input;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Material _normalMaterial;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material _highlightMaterial;

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x10BAA74", Offset = "0x10BAA74", VA = "0x10BAA74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x10BAAFC", Offset = "0x10BAAFC", VA = "0x10BAAFC")]
	private void RetrieveGradeData()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x10BAD80", Offset = "0x10BAD80", VA = "0x10BAD80")]
	public void DisplayLetterGrades(string gradeToIgnore = "")
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x10BB19C", Offset = "0x10BB19C", VA = "0x10BB19C")]
	public void DisplayGrade(string courseName)
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x10BC554", Offset = "0x10BC554", VA = "0x10BC554")]
	public void DisplayGradeNoData(string courseName)
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x10BC7EC", Offset = "0x10BC7EC", VA = "0x10BC7EC")]
	public void OnContinue_Pressed()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x10BC800", Offset = "0x10BC800", VA = "0x10BC800")]
	public ReportCardUI()
	{
	}
}
[Token(Token = "0x20002A9")]
public class RoachUI : MonoBehaviour
{
	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.UI.Toggle[] roachToggles;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int iterator;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ShootingConversationResolver convoResolver;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int roachesKilled;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool didSucceed;

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x10BE9C0", Offset = "0x10BE9C0", VA = "0x10BE9C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x10BEA18", Offset = "0x10BEA18", VA = "0x10BEA18")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x10BEA8C", Offset = "0x10BEA8C", VA = "0x10BEA8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x10BEB5C", Offset = "0x10BEB5C", VA = "0x10BEB5C")]
	public void SquashRoach()
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x10BEC60", Offset = "0x10BEC60", VA = "0x10BEC60")]
	public void ResetRoaches()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x10BECD8", Offset = "0x10BECD8", VA = "0x10BECD8")]
	public RoachUI()
	{
	}
}
[Token(Token = "0x20002AA")]
public class ScoreboardDisplay : MonoBehaviour
{
	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro scoreboardText;

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x1184FE8", Offset = "0x1184FE8", VA = "0x1184FE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x1185040", Offset = "0x1185040", VA = "0x1185040")]
	private void Update()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x11850D0", Offset = "0x11850D0", VA = "0x11850D0")]
	public ScoreboardDisplay()
	{
	}
}
[Token(Token = "0x20002AB")]
public class SettingsHandColor : MonoBehaviour
{
	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HandModelSelectorExt handModelSelectorExt;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image _colorButton;

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x118858C", Offset = "0x118858C", VA = "0x118858C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x1188698", Offset = "0x1188698", VA = "0x1188698")]
	public void UpdateColor(GameObject colorObject)
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x11887A0", Offset = "0x11887A0", VA = "0x11887A0")]
	public void ResetColor()
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x1188878", Offset = "0x1188878", VA = "0x1188878")]
	public SettingsHandColor()
	{
	}
}
[Token(Token = "0x20002AC")]
public class SettingsLanguage : MonoBehaviour
{
	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text choiceText;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonContainer;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] _languageBlockers;

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x1188880", Offset = "0x1188880", VA = "0x1188880")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x11889BC", Offset = "0x11889BC", VA = "0x11889BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x1188AF4", Offset = "0x1188AF4", VA = "0x1188AF4")]
	public void SetLanguage(GameSettings.Languages language)
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x1188C9C", Offset = "0x1188C9C", VA = "0x1188C9C")]
	public void SetLanguage(int i)
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x11889C0", Offset = "0x11889C0", VA = "0x11889C0")]
	private void HighlightLanguage()
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x1188BDC", Offset = "0x1188BDC", VA = "0x1188BDC")]
	private void SwitchOptions()
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x1188D94", Offset = "0x1188D94", VA = "0x1188D94")]
	public void ResetLanguage()
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x1188D9C", Offset = "0x1188D9C", VA = "0x1188D9C")]
	public SettingsLanguage()
	{
	}
}
[Token(Token = "0x20002AD")]
public class SettingsToggleFPS : MonoBehaviour
{
	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptionsManager _optionsManager;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _fps;

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x1188DA4", Offset = "0x1188DA4", VA = "0x1188DA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x1188EC8", Offset = "0x1188EC8", VA = "0x1188EC8")]
	private void SwitchInteractionMode(int i)
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x1188F74", Offset = "0x1188F74", VA = "0x1188F74")]
	private void ToggleFPS(bool toggle)
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x118901C", Offset = "0x118901C", VA = "0x118901C")]
	public SettingsToggleFPS()
	{
	}
}
[Token(Token = "0x20002AE")]
public class SettingsToggleHandModels : MonoBehaviour
{
	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HandModelSelectorExt handModelSelectorExt;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OptionsManager _optionsManager;

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x1189024", Offset = "0x1189024", VA = "0x1189024")]
	private void Start()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x11891A4", Offset = "0x11891A4", VA = "0x11891A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x11891E4", Offset = "0x11891E4", VA = "0x11891E4")]
	private void SwitchInteractionMode(int i)
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x11892D8", Offset = "0x11892D8", VA = "0x11892D8")]
	public void ResetHands()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x118935C", Offset = "0x118935C", VA = "0x118935C")]
	public SettingsToggleHandModels()
	{
	}
}
[Token(Token = "0x20002AF")]
public class SettingsToggleHandSide : MonoBehaviour
{
	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptionsManager _optionsManager;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LaserInputModule _lim;

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x1189364", Offset = "0x1189364", VA = "0x1189364")]
	private void Start()
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x11894C4", Offset = "0x11894C4", VA = "0x11894C4")]
	private void SwitchHandSide(int i)
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x1189584", Offset = "0x1189584", VA = "0x1189584")]
	public void ResetHands()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x1189610", Offset = "0x1189610", VA = "0x1189610")]
	public SettingsToggleHandSide()
	{
	}
}
[Token(Token = "0x20002B0")]
public class SettingsToggleLanguage : MonoBehaviour
{
	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptionsManager _optionsManager;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text choiceText;

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x1189618", Offset = "0x1189618", VA = "0x1189618")]
	private void Start()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x1189844", Offset = "0x1189844", VA = "0x1189844")]
	private void SwitchLanguage(int i)
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x11897A8", Offset = "0x11897A8", VA = "0x11897A8")]
	private void SetLanguageToDialogue(GameSettings.Languages language)
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x1189960", Offset = "0x1189960", VA = "0x1189960")]
	public void ResetLanguage()
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x1189980", Offset = "0x1189980", VA = "0x1189980")]
	public SettingsToggleLanguage()
	{
	}
}
[Token(Token = "0x20002B1")]
public class SettingsToggleLocomotion : MonoBehaviour
{
	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptionsManager _optionsManager;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LocomotionManager _loc;

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x1189988", Offset = "0x1189988", VA = "0x1189988")]
	private void Start()
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x1189AB8", Offset = "0x1189AB8", VA = "0x1189AB8")]
	private void SwitchLocomotionMode(int i)
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x1189AE0", Offset = "0x1189AE0", VA = "0x1189AE0")]
	public SettingsToggleLocomotion()
	{
	}
}
[Token(Token = "0x20002B2")]
public class SettingsToggleSitting : MonoBehaviour
{
	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptionsManager _optionsManager;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BNGPlayerControllerExt _playerController;

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x1189AE8", Offset = "0x1189AE8", VA = "0x1189AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x1189C2C", Offset = "0x1189C2C", VA = "0x1189C2C")]
	private void SwitchSittingMode(int i)
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x1189D20", Offset = "0x1189D20", VA = "0x1189D20")]
	public SettingsToggleSitting()
	{
	}
}
[Token(Token = "0x20002B3")]
public class SettingsToggleSubtitles : MonoBehaviour
{
	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptionsManager _optionsManager;

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x1189D28", Offset = "0x1189D28", VA = "0x1189D28")]
	private void Start()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x1189E1C", Offset = "0x1189E1C", VA = "0x1189E1C")]
	private void SwitchSubtitleMode(int i)
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x1189EC4", Offset = "0x1189EC4", VA = "0x1189EC4")]
	public SettingsToggleSubtitles()
	{
	}
}
[Token(Token = "0x20002B4")]
public class SettingsToggleWalkModeControls : MonoBehaviour
{
	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptionsManager _optionsManager;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LocomotionManager _loc;

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x1189ECC", Offset = "0x1189ECC", VA = "0x1189ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x1189FFC", Offset = "0x1189FFC", VA = "0x1189FFC")]
	private void SwitchLocomotionModeControls(int i)
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x118A0C4", Offset = "0x118A0C4", VA = "0x118A0C4")]
	public SettingsToggleWalkModeControls()
	{
	}
}
[Token(Token = "0x20002B5")]
public class SettingsToggleWalkModeSpeed : MonoBehaviour
{
	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptionsManager _optionsManager;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LocomotionManager _loc;

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x118A0CC", Offset = "0x118A0CC", VA = "0x118A0CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x118A1FC", Offset = "0x118A1FC", VA = "0x118A1FC")]
	private void SwitchLocomotionModeControls(int i)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x118A29C", Offset = "0x118A29C", VA = "0x118A29C")]
	public SettingsToggleWalkModeSpeed()
	{
	}
}
[Token(Token = "0x20002B6")]
public class SettingsToggleWatchHand : MonoBehaviour
{
	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptionsManager _optionsManager;

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x118A2A4", Offset = "0x118A2A4", VA = "0x118A2A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x118A3A0", Offset = "0x118A3A0", VA = "0x118A3A0")]
	private void SwitchInteractionMode(int i)
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x118A460", Offset = "0x118A460", VA = "0x118A460")]
	public SettingsToggleWatchHand()
	{
	}
}
[Token(Token = "0x20002B7")]
public class ShootingTimerText : MonoBehaviour
{
	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ShootingGalleryActivity sActivity;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro _text;

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x11AD120", Offset = "0x11AD120", VA = "0x11AD120")]
	private void Start()
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x11AD124", Offset = "0x11AD124", VA = "0x11AD124")]
	private void Update()
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x11AD334", Offset = "0x11AD334", VA = "0x11AD334")]
	public ShootingTimerText()
	{
	}
}
[Token(Token = "0x20002B8")]
public interface ITaskDisplay
{
	[Token(Token = "0x6001313")]
	void Set(Task task);
}
[Token(Token = "0x20002B9")]
public class TaskDisplayBase : MonoBehaviour
{
	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ITaskDisplay[] taskDisplays;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA40688", Offset = "0xA40688")]
	private Task <task>k__BackingField;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ITaskDisplay> updatedDisplays;

	[Token(Token = "0x170000EB")]
	public Task task
	{
		[Token(Token = "0x6001314")]
		[Address(RVA = "0x10E5B28", Offset = "0x10E5B28", VA = "0x10E5B28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA576AC", Offset = "0xA576AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001315")]
		[Address(RVA = "0x10E5B30", Offset = "0x10E5B30", VA = "0x10E5B30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA576BC", Offset = "0xA576BC")]
		protected set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<Task> OnActivitySet
	{
		[Token(Token = "0x6001316")]
		[Address(RVA = "0x10E5B38", Offset = "0x10E5B38", VA = "0x10E5B38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA576CC", Offset = "0xA576CC")]
		add
		{
		}
		[Token(Token = "0x6001317")]
		[Address(RVA = "0x10E5BDC", Offset = "0x10E5BDC", VA = "0x10E5BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA576DC", Offset = "0xA576DC")]
		remove
		{
		}
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x10E5C80", Offset = "0x10E5C80", VA = "0x10E5C80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x10E5CE8", Offset = "0x10E5CE8", VA = "0x10E5CE8")]
	public void UpdateInfoDisplays()
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x10E5C84", Offset = "0x10E5C84", VA = "0x10E5C84")]
	private void GetDisplays()
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x10E5F18", Offset = "0x10E5F18", VA = "0x10E5F18", Slot = "4")]
	public virtual void SetActivity(Task task)
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x10E5F88", Offset = "0x10E5F88", VA = "0x10E5F88")]
	public TaskDisplayBase()
	{
	}
}
[Token(Token = "0x20002BA")]
public class TaskDisplay_Name : MonoBehaviour, ITaskDisplay
{
	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI nameLabel;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string textDecoration;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA406C8", Offset = "0xA406C8")]
	private Task <task>k__BackingField;

	[Token(Token = "0x170000EC")]
	public Task task
	{
		[Token(Token = "0x600131D")]
		[Address(RVA = "0x10E5FF8", Offset = "0x10E5FF8", VA = "0x10E5FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA576EC", Offset = "0xA576EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600131E")]
		[Address(RVA = "0x10E6000", Offset = "0x10E6000", VA = "0x10E6000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA576FC", Offset = "0xA576FC")]
		protected set
		{
		}
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x10E6008", Offset = "0x10E6008", VA = "0x10E6008", Slot = "4")]
	public void Set(Task task)
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x10E604C", Offset = "0x10E604C", VA = "0x10E604C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x10E60DC", Offset = "0x10E60DC", VA = "0x10E60DC")]
	public TaskDisplay_Name()
	{
	}
}
[Token(Token = "0x20002BB")]
public class TaskDisplay_Performance : MonoBehaviour, ITaskDisplay
{
	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI performanceLabelTemplate;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LayoutGroup labelContainer;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<TextMeshProUGUI> performanceLabels;

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x10E60E4", Offset = "0x10E60E4", VA = "0x10E60E4", Slot = "4")]
	public void Set(Task task)
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x10E60E8", Offset = "0x10E60E8", VA = "0x10E60E8")]
	public TaskDisplay_Performance()
	{
	}
}
[Token(Token = "0x20002BC")]
public class ToggleSettingsUI : MonoBehaviour
{
	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mainMenu;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject settingsMenu;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject helpMenu;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject colorMenu;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _helpBackButton;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _helpCloseButton;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _helpMode;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool _themePark;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _watchHelp;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _skyHelp;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _gradHelp;

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x10F0A78", Offset = "0x10F0A78", VA = "0x10F0A78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x10F0A7C", Offset = "0x10F0A7C", VA = "0x10F0A7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x10F0B10", Offset = "0x10F0B10", VA = "0x10F0B10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x10F0B18", Offset = "0x10F0B18", VA = "0x10F0B18")]
	public void OpenHelpMode()
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x10F0D00", Offset = "0x10F0D00", VA = "0x10F0D00")]
	public void OpenSettings()
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x10F0D44", Offset = "0x10F0D44", VA = "0x10F0D44")]
	public void CloseSettings()
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x10F0D88", Offset = "0x10F0D88", VA = "0x10F0D88")]
	public void OpenHelp()
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x10F0F18", Offset = "0x10F0F18", VA = "0x10F0F18")]
	public void CloseHelp()
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x10F0F5C", Offset = "0x10F0F5C", VA = "0x10F0F5C")]
	public void OpenGrades()
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x10F1014", Offset = "0x10F1014", VA = "0x10F1014")]
	public void CloseGrades()
	{
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x10F10CC", Offset = "0x10F10CC", VA = "0x10F10CC")]
	public void ShowColorSelection()
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x10F1110", Offset = "0x10F1110", VA = "0x10F1110")]
	public void CompleteColorSelection()
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x10F1154", Offset = "0x10F1154", VA = "0x10F1154")]
	public ToggleSettingsUI()
	{
	}
}
[Token(Token = "0x20002BD")]
public class WWRoundTimer : MonoBehaviour
{
	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro timer;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private WormWhispererSceneManager sceneManager;

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x134D634", Offset = "0x134D634", VA = "0x134D634")]
	private void Update()
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x134D844", Offset = "0x134D844", VA = "0x134D844")]
	public WWRoundTimer()
	{
	}
}
[Token(Token = "0x20002BE")]
public class Baster : MonoBehaviour
{
	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isFilled;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GrabbableExt m_ObjectGrababble;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MaxRange;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Damage;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VibrateFrequency;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VibrateAmplitude;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float VibrateDuration;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource m_SuckupSFX;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleSystem m_WaterVFX;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource m_WaterSFX;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioSource m_EmptySFX;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MilkAmmo m_CurrentAmmo;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasFired;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool shouldDoHaptics;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private ControllerHand m_lastHandHeld;

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x13ECDA8", Offset = "0x13ECDA8", VA = "0x13ECDA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x13ECE28", Offset = "0x13ECE28", VA = "0x13ECE28")]
	public void SuckupSFX()
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x13ECE44", Offset = "0x13ECE44", VA = "0x13ECE44")]
	private void Update()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x13ECFD0", Offset = "0x13ECFD0", VA = "0x13ECFD0")]
	private void OnTrigger(float triggerValue, ControllerHand touchingHand)
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x13ED0C8", Offset = "0x13ED0C8", VA = "0x13ED0C8")]
	private void doHaptics(ControllerHand touchingHand, bool isEmpty = false)
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x13ED1D8", Offset = "0x13ED1D8", VA = "0x13ED1D8")]
	private void ResetHaptics()
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x13ED1E0", Offset = "0x13ED1E0", VA = "0x13ED1E0")]
	public Baster()
	{
	}
}
[Token(Token = "0x20002BF")]
public class BasterCollisionEvent : MonoBehaviour
{
	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent basterCollisionEvent;

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x13ED1FC", Offset = "0x13ED1FC", VA = "0x13ED1FC")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x13ED29C", Offset = "0x13ED29C", VA = "0x13ED29C")]
	public BasterCollisionEvent()
	{
	}
}
[Token(Token = "0x20002C0")]
public class Bomb : MonoBehaviour
{
	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask ValidLayers;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_BombVFX;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_Bomb;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource m_BombSFX;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource m_BombFuseSFX;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody m_Rigidbody;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool hasExploded;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool doOnce;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool doFailOnce;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool startCountDown;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fTimer;

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x120996C", Offset = "0x120996C", VA = "0x120996C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x1209970", Offset = "0x1209970", VA = "0x1209970")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x1209B34", Offset = "0x1209B34", VA = "0x1209B34")]
	private void ExplodeBomb()
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x1209C78", Offset = "0x1209C78", VA = "0x1209C78")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x1209D68", Offset = "0x1209D68", VA = "0x1209D68")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x1209DF8", Offset = "0x1209DF8", VA = "0x1209DF8")]
	public Bomb()
	{
	}
}
[Token(Token = "0x20002C1")]
public class BulletAmmo : ManagedItem
{
	[Token(Token = "0x2000757")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36E3C", Offset = "0xA36E3C")]
	private sealed class <WaitAndRespawn>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BulletAmmo <>4__this;

		[Token(Token = "0x1700066D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030F2")]
			[Address(RVA = "0x120DF4C", Offset = "0x120DF4C", VA = "0x120DF4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700066E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030F4")]
			[Address(RVA = "0x120DFB4", Offset = "0x120DFB4", VA = "0x120DFB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030EF")]
		[Address(RVA = "0x120DD4C", Offset = "0x120DD4C", VA = "0x120DD4C")]
		[DebuggerHidden]
		public <WaitAndRespawn>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60030F0")]
		[Address(RVA = "0x120DD80", Offset = "0x120DD80", VA = "0x120DD80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030F1")]
		[Address(RVA = "0x120DD84", Offset = "0x120DD84", VA = "0x120DD84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030F3")]
		[Address(RVA = "0x120DF54", Offset = "0x120DF54", VA = "0x120DF54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public LayerMask ValidLayers;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string weaponType;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BoxCollider m_BoxCollider;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider[] _colliders;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool EnableConstraints;

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x120D7D0", Offset = "0x120D7D0", VA = "0x120D7D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x120D89C", Offset = "0x120D89C", VA = "0x120D89C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x120DCDC", Offset = "0x120DCDC", VA = "0x120DCDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5770C", Offset = "0xA5770C")]
	private IEnumerator WaitAndRespawn()
	{
		return null;
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x120DD78", Offset = "0x120DD78", VA = "0x120DD78")]
	public BulletAmmo()
	{
	}
}
[Token(Token = "0x20002C2")]
public class Dart : ManagedItem
{
	[Token(Token = "0x2000758")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36E4C", Offset = "0xA36E4C")]
	private sealed class <WaitForInitialGrabStart>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dart <>4__this;

		[Token(Token = "0x1700066F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60030F8")]
			[Address(RVA = "0x1236AD4", Offset = "0x1236AD4", VA = "0x1236AD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000670")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60030FA")]
			[Address(RVA = "0x1236B3C", Offset = "0x1236B3C", VA = "0x1236B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030F5")]
		[Address(RVA = "0x12353D8", Offset = "0x12353D8", VA = "0x12353D8")]
		[DebuggerHidden]
		public <WaitForInitialGrabStart>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60030F6")]
		[Address(RVA = "0x1236A24", Offset = "0x1236A24", VA = "0x1236A24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030F7")]
		[Address(RVA = "0x1236A28", Offset = "0x1236A28", VA = "0x1236A28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60030F9")]
		[Address(RVA = "0x1236ADC", Offset = "0x1236ADC", VA = "0x1236ADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GrabbableExt m_GrabObj;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource m_ImpactSFX;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Rigidbody m_RigidBody;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject HitFXPrefab;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _checkRaycast;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float Damage;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool didScore;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float AddRigidForce;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LayerMask ValidLayers;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private bool useVelocityAsForward;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform centerOfMass;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool hasBeenGrabbed;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private DartboardConversationResolver convoResolver;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool doOnce;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float MinForceHit;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float minDistanceCheck;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 stuckPos;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 initPos;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 contactPoint;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 dartPoint;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private RigidbodyConstraints constraints;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private CollisionDetectionMode collisionDetection;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private RigidbodyConstraints GrabbableConstraints;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private CollisionDetectionMode GrabbableCollisionDetection;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool isMovingStart;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private DartBoardActivity dartboard;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float m_MaxDistance;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float m_Speed;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool m_HitDetect;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform origParent;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Collider m_Collider;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private RaycastHit m_Hit;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[SerializeField]
	private bool isDart;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	[SerializeField]
	private bool resetOriginalParent;

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x1235164", Offset = "0x1235164", VA = "0x1235164")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x1235368", Offset = "0x1235368", VA = "0x1235368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57770", Offset = "0xA57770")]
	private IEnumerator WaitForInitialGrabStart()
	{
		return null;
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x1235404", Offset = "0x1235404", VA = "0x1235404")]
	private void Start()
	{
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x1235478", Offset = "0x1235478", VA = "0x1235478")]
	private void Update()
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x1235CFC", Offset = "0x1235CFC", VA = "0x1235CFC", Slot = "4")]
	public override void ResetItem()
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x123629C", Offset = "0x123629C", VA = "0x123629C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x12369F0", Offset = "0x12369F0", VA = "0x12369F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x12359C8", Offset = "0x12359C8", VA = "0x12359C8")]
	private void TryStickingDart(Collision collision, Vector3 ContactPoint)
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x12369F4", Offset = "0x12369F4", VA = "0x12369F4")]
	public Dart()
	{
	}
}
[Token(Token = "0x20002C3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3336C", Offset = "0xA3336C")]
public class DartGrabEvents : GrabbableEvents
{
	[Token(Token = "0x2000759")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36E5C", Offset = "0xA36E5C")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4002C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject dartboard;

		[Token(Token = "0x60030FB")]
		[Address(RVA = "0x123719C", Offset = "0x123719C", VA = "0x123719C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x60030FC")]
		[Address(RVA = "0x1237204", Offset = "0x1237204", VA = "0x1237204")]
		internal void <Awake>b__0()
		{
		}
	}

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent OnDartGrab;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent OnDartReleased;

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x1237090", Offset = "0x1237090", VA = "0x1237090")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x12371A4", Offset = "0x12371A4", VA = "0x12371A4", Slot = "4")]
	public override void OnGrab(Grabber grabber)
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x12371C0", Offset = "0x12371C0", VA = "0x12371C0", Slot = "5")]
	public override void OnRelease()
	{
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x12371FC", Offset = "0x12371FC", VA = "0x12371FC")]
	public DartGrabEvents()
	{
	}
}
[Token(Token = "0x20002C4")]
public class MilkReloader : MonoBehaviour
{
	[Token(Token = "0x200075A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36E6C", Offset = "0xA36E6C")]
	private sealed class <WaitAndRespawn>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MilkReloader <>4__this;

		[Token(Token = "0x17000671")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003100")]
			[Address(RVA = "0x1335600", Offset = "0x1335600", VA = "0x1335600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000672")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003102")]
			[Address(RVA = "0x1335668", Offset = "0x1335668", VA = "0x1335668", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030FD")]
		[Address(RVA = "0x1335524", Offset = "0x1335524", VA = "0x1335524")]
		[DebuggerHidden]
		public <WaitAndRespawn>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60030FE")]
		[Address(RVA = "0x1335558", Offset = "0x1335558", VA = "0x1335558", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60030FF")]
		[Address(RVA = "0x133555C", Offset = "0x133555C", VA = "0x133555C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003101")]
		[Address(RVA = "0x1335608", Offset = "0x1335608", VA = "0x1335608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _startPos;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _startRot;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource dropSFX;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MilkAmmo milkAmmo;

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x133529C", Offset = "0x133529C", VA = "0x133529C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x13352F8", Offset = "0x13352F8", VA = "0x13352F8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x1335480", Offset = "0x1335480", VA = "0x1335480")]
	private void Reset()
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x1335410", Offset = "0x1335410", VA = "0x1335410")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA577D4", Offset = "0xA577D4")]
	private IEnumerator WaitAndRespawn()
	{
		return null;
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x1335550", Offset = "0x1335550", VA = "0x1335550")]
	public MilkReloader()
	{
	}
}
[Token(Token = "0x20002C5")]
public class RocketLauncher : MonoBehaviour
{
	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GrabbableExt m_RocketLauncherGrabbable;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource m_LaunchSFX;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource m_EmptySFX;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _emptyDialog;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RocketLauncherSlot m_CurrentAmmoSlot;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RocketLauncherAmmo m_CurrentAmmo;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool hasFired;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _wasHeld;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool shouldDoHaptics;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float VibrateFrequency;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float VibrateAmplitude;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VibrateDuration;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ControllerHand m_lastHandHeld;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider[] _launcherColliders;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool wasHeldOnce;

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x10BEF2C", Offset = "0x10BEF2C", VA = "0x10BEF2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x10BEF9C", Offset = "0x10BEF9C", VA = "0x10BEF9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x10BF248", Offset = "0x10BF248", VA = "0x10BF248")]
	private void OnTrigger(float triggerValue, ControllerHand touchingHand)
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x10BF7C8", Offset = "0x10BF7C8", VA = "0x10BF7C8")]
	private void doHaptics(ControllerHand touchingHand, bool isEmpty = false)
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x10BF8D8", Offset = "0x10BF8D8", VA = "0x10BF8D8")]
	private void ResetHaptics()
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x10BF8E0", Offset = "0x10BF8E0", VA = "0x10BF8E0")]
	public void OnAttachedAmmo(Grabbable rocketAmmo)
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x10BFA24", Offset = "0x10BFA24", VA = "0x10BFA24")]
	public void OnDetachedAmmo(Grabbable rocketAmmo)
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x10BFA44", Offset = "0x10BFA44", VA = "0x10BFA44")]
	public RocketLauncher()
	{
	}
}
[Token(Token = "0x20002C6")]
public class RocketLauncherAmmo : ManagedItem
{
	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public LayerMask ValidLayers;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_AmmoMesh;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BoxCollider m_BoxCollider;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject m_RocketVFX;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject m_ExplosionVFX;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource m_RocketSFX;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioSource m_ExplosionSFX;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool m_isAttached;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool hasBeenFired;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool hasExploded;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool allowResetOnFloor;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float m_fSpeed;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float m_fRadius;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Collider[] _colliders;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Collider[] _launcherColliders;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool intercepted;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioSource _interceptedSFX;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject _interceptedVFX;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GenericSceneManager manager;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Grabbable _grab;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool shouldResetOnUse;

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x10BFA60", Offset = "0x10BFA60", VA = "0x10BFA60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x10BF4AC", Offset = "0x10BF4AC", VA = "0x10BF4AC")]
	public void FireRocket(Vector3 forward)
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x10BFBA8", Offset = "0x10BFBA8", VA = "0x10BFBA8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x10BFD24", Offset = "0x10BFD24", VA = "0x10BFD24")]
	public void Update()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x10B737C", Offset = "0x10B737C", VA = "0x10B737C")]
	public void Explode()
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x10BF968", Offset = "0x10BF968", VA = "0x10BF968")]
	public void SetLancherInteractions(Collider[] launcherColliders, bool ignore)
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x10BFEB4", Offset = "0x10BFEB4", VA = "0x10BFEB4")]
	private void DisableRocket()
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x10BFEDC", Offset = "0x10BFEDC", VA = "0x10BFEDC")]
	private void ResetRocket()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x10C011C", Offset = "0x10C011C", VA = "0x10C011C", Slot = "4")]
	public override void ResetItem()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x10C02B4", Offset = "0x10C02B4", VA = "0x10C02B4")]
	public RocketLauncherAmmo()
	{
	}
}
[Token(Token = "0x20002C7")]
public class RocketLauncherSlot : MonoBehaviour
{
	[Token(Token = "0x200075B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36E7C", Offset = "0xA36E7C")]
	private sealed class <EjectMagRoutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable ejectedMag;

		[Token(Token = "0x4002C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RocketLauncherSlot <>4__this;

		[Token(Token = "0x4002C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <ejectRigid>5__2;

		[Token(Token = "0x17000673")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003106")]
			[Address(RVA = "0x10C114C", Offset = "0x10C114C", VA = "0x10C114C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000674")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003108")]
			[Address(RVA = "0x10C11B4", Offset = "0x10C11B4", VA = "0x10C11B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003103")]
		[Address(RVA = "0x10C0BE4", Offset = "0x10C0BE4", VA = "0x10C0BE4")]
		[DebuggerHidden]
		public <EjectMagRoutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6003104")]
		[Address(RVA = "0x10C0E7C", Offset = "0x10C0E7C", VA = "0x10C0E7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003105")]
		[Address(RVA = "0x10C0E80", Offset = "0x10C0E80", VA = "0x10C0E80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003107")]
		[Address(RVA = "0x10C1154", Offset = "0x10C1154", VA = "0x10C1154", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] AcceptableMagazineNames;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GrabbableExt AttachedWeapon;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ClipSnapDistance;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ClipUnsnapDistance;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float EjectForce;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GrabbableExt HeldMagazine;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Collider HeldCollider;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float MagazineDistance;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool magazineInPlace;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool lockedInPlace;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource loadSFX;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip ClipAttachSound;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip ClipDetachSound;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RocketLauncher parentWeapon;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GrabberArea grabClipArea;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private InputBridge input;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float lastEjectTime;

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x10C02C8", Offset = "0x10C02C8", VA = "0x10C02C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x10C0390", Offset = "0x10C0390", VA = "0x10C0390")]
	private void Start()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x10C0628", Offset = "0x10C0628", VA = "0x10C0628")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x10C0944", Offset = "0x10C0944", VA = "0x10C0944")]
	private void moveMagazine(Vector3 localPosition)
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x10C0790", Offset = "0x10C0790", VA = "0x10C0790")]
	private void checkGrabClipInput()
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x10C046C", Offset = "0x10C046C", VA = "0x10C046C")]
	private void attachMagazine(bool shouldPlaySound = true)
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x10BF608", Offset = "0x10BF608", VA = "0x10BF608")]
	public Grabbable detachMagazine(bool shouldPlaySound = true)
	{
		return null;
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x10C0B2C", Offset = "0x10C0B2C", VA = "0x10C0B2C")]
	public void EjectMagazine()
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x10C0B68", Offset = "0x10C0B68", VA = "0x10C0B68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57838", Offset = "0xA57838")]
	private IEnumerator EjectMagRoutine(Grabbable ejectedMag)
	{
		return null;
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x10C0998", Offset = "0x10C0998", VA = "0x10C0998")]
	public void OnGrabClipArea(Grabber grabbedBy)
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x10C0C10", Offset = "0x10C0C10", VA = "0x10C0C10")]
	private bool isAcceptableName(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x10C0C9C", Offset = "0x10C0C9C", VA = "0x10C0C9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x10C0E58", Offset = "0x10C0E58", VA = "0x10C0E58")]
	public RocketLauncherSlot()
	{
	}
}
[Token(Token = "0x20002C8")]
public class ThrowObject : MonoBehaviour
{
	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Grabbable _grab;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _wasHeld;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _thrown;

	[Token(Token = "0x170000ED")]
	public bool thrown
	{
		[Token(Token = "0x6001377")]
		[Address(RVA = "0x10ECA08", Offset = "0x10ECA08", VA = "0x10ECA08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x10ECA10", Offset = "0x10ECA10", VA = "0x10ECA10")]
	private void Start()
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x10ECA68", Offset = "0x10ECA68", VA = "0x10ECA68")]
	private void Update()
	{
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x10ECAA8", Offset = "0x10ECAA8", VA = "0x10ECAA8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x10ECB64", Offset = "0x10ECB64", VA = "0x10ECB64")]
	public ThrowObject()
	{
	}
}
[Token(Token = "0x20002C9")]
public class WaterGun : MonoBehaviour
{
	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GrabbableExt m_WaterGunGrabbable;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MaxRange;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Damage;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float VibrateFrequency;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float VibrateAmplitude;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VibrateDuration;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem m_WaterVFX;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource m_WaterSFX;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource m_EmptySFX;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MilkAmmo m_CurrentAmmo;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool hasFired;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool shouldDoHaptics;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private ControllerHand m_lastHandHeld;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool useAmmoCounter;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshPro bulletCounter;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool useEjectMag;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ShootingGalleryManager manager;

	[Token(Token = "0x170000EE")]
	public MilkAmmo currentAmmo
	{
		[Token(Token = "0x600137C")]
		[Address(RVA = "0x134EBB4", Offset = "0x134EBB4", VA = "0x134EBB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0x134EBBC", Offset = "0x134EBBC", VA = "0x134EBBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x134EC3C", Offset = "0x134EC3C", VA = "0x134EC3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x134EE68", Offset = "0x134EE68", VA = "0x134EE68")]
	private void OnTrigger(float triggerValue, ControllerHand touchingHand)
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x134F18C", Offset = "0x134F18C", VA = "0x134F18C")]
	private void doHaptics(ControllerHand touchingHand, bool isEmpty = false)
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x134F29C", Offset = "0x134F29C", VA = "0x134F29C")]
	private void ResetHaptics()
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0x134F2A4", Offset = "0x134F2A4", VA = "0x134F2A4")]
	public void OnAttachedAmmo(Grabbable milkCarton)
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x134F328", Offset = "0x134F328", VA = "0x134F328")]
	public void OnDetachedAmmo(Grabbable milkCarton)
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x134F134", Offset = "0x134F134", VA = "0x134F134")]
	public void UpdateAmmoCounter()
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x134F348", Offset = "0x134F348", VA = "0x134F348")]
	public void PickUpInStore()
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x134F400", Offset = "0x134F400", VA = "0x134F400")]
	public WaterGun()
	{
	}
}
[Token(Token = "0x20002CA")]
public class WaterGunCollisionEvents : MonoBehaviour
{
	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WaterGun m_WaterGun;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource hitSFX;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ShootingGalleryManager _sceneManager;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ShootingConversationResolver convoResolver;

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x134F41C", Offset = "0x134F41C", VA = "0x134F41C")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x134F74C", Offset = "0x134F74C", VA = "0x134F74C")]
	public WaterGunCollisionEvents()
	{
	}
}
[Token(Token = "0x20002CB")]
public class OculusManager : MonoBehaviour
{
	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool quitOnEntitlementFail;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OculusManager _instance;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool intialized;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool entitled;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public static bool userRetrieved;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string output;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private User _userdata;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _username;

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x1120DD0", Offset = "0x1120DD0", VA = "0x1120DD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x1120F7C", Offset = "0x1120F7C", VA = "0x1120F7C")]
	private void RefreshUpdate()
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x11210A4", Offset = "0x11210A4", VA = "0x11210A4")]
	private void OnInitializationCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x11212D0", Offset = "0x11212D0", VA = "0x11212D0")]
	private void OnIsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x112151C", Offset = "0x112151C", VA = "0x112151C")]
	private void OnLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x1121704", Offset = "0x1121704", VA = "0x1121704")]
	public static string GetUserName()
	{
		return null;
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x112178C", Offset = "0x112178C", VA = "0x112178C")]
	public OculusManager()
	{
	}
}
[Token(Token = "0x20002CC")]
public class XRTrackingManager : MonoBehaviour
{
	[Token(Token = "0x200075C")]
	private enum TrackingSpace
	{
		[Token(Token = "0x4002C5B")]
		Stationary,
		[Token(Token = "0x4002C5C")]
		RoomScale
	}

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TrackingSpace m_TrackingSpace;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_fDefaultEyeLevel;

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x1358D88", Offset = "0x1358D88", VA = "0x1358D88")]
	private void Start()
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x1358D8C", Offset = "0x1358D8C", VA = "0x1358D8C")]
	private void SetCameraHeight()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x1358F1C", Offset = "0x1358F1C", VA = "0x1358F1C")]
	public XRTrackingManager()
	{
	}
}
[Token(Token = "0x20002CD")]
public class ExampleCardItemAction : MonoBehaviour
{
	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text title;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text description;

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x13F7B28", Offset = "0x13F7B28", VA = "0x13F7B28")]
	private void Start()
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x13F7BCC", Offset = "0x13F7BCC", VA = "0x13F7BCC")]
	private void ShowDescription(Card card)
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x13F7C28", Offset = "0x13F7C28", VA = "0x13F7C28")]
	public ExampleCardItemAction()
	{
	}
}
[Token(Token = "0x20002CE")]
public class ExampleDynamicCardList : MonoBehaviour
{
	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CardListManager clm;

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x13F7C30", Offset = "0x13F7C30", VA = "0x13F7C30")]
	private void Start()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x13F7C34", Offset = "0x13F7C34", VA = "0x13F7C34")]
	public void UpdateList()
	{
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x13F7D54", Offset = "0x13F7D54", VA = "0x13F7D54")]
	public ExampleDynamicCardList()
	{
	}
}
[Token(Token = "0x20002CF")]
public class ExampleOptionControl : MonoBehaviour
{
	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptionsManager optionsManager;

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x13F7D5C", Offset = "0x13F7D5C", VA = "0x13F7D5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x13F7E00", Offset = "0x13F7E00", VA = "0x13F7E00")]
	private void SwitchInteractionMode(int i)
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x13F8038", Offset = "0x13F8038", VA = "0x13F8038")]
	public ExampleOptionControl()
	{
	}
}
[Token(Token = "0x20002D0")]
public class InvokeKeyboard : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
{
	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject keyboard;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hideKeyboardOnDeslect;

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x114B6E0", Offset = "0x114B6E0", VA = "0x114B6E0", Slot = "4")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x114B730", Offset = "0x114B730", VA = "0x114B730", Slot = "5")]
	public void OnDeselect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x114B788", Offset = "0x114B788", VA = "0x114B788")]
	public InvokeKeyboard()
	{
	}
}
[Token(Token = "0x20002D1")]
public class SwitchUI : MonoBehaviour
{
	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> canvas;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentIndex;

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x10E18CC", Offset = "0x10E18CC", VA = "0x10E18CC")]
	public void NextUI()
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x10E19BC", Offset = "0x10E19BC", VA = "0x10E19BC")]
	public SwitchUI()
	{
	}
}
[Token(Token = "0x20002D2")]
public class VRMovementOculus : MonoBehaviour
{
	[Token(Token = "0x200075D")]
	public enum eControllerType
	{
		[Token(Token = "0x4002C5E")]
		Left,
		[Token(Token = "0x4002C5F")]
		Right,
		[Token(Token = "0x4002C60")]
		Both
	}

	[Token(Token = "0x200075E")]
	public enum eHMD
	{
		[Token(Token = "0x4002C62")]
		Rift_Quest,
		[Token(Token = "0x4002C63")]
		Go
	}

	[Token(Token = "0x200075F")]
	public enum eMovementMode
	{
		[Token(Token = "0x4002C65")]
		Flight,
		[Token(Token = "0x4002C66")]
		Grounded,
		[Token(Token = "0x4002C67")]
		None,
		[Token(Token = "0x4002C68")]
		NoneWithGravity,
		[Token(Token = "0x4002C69")]
		Remote,
		[Token(Token = "0x4002C6A")]
		Controller,
		[Token(Token = "0x4002C6B")]
		Keyboard
	}

	[Token(Token = "0x2000760")]
	public struct InputData
	{
		[Token(Token = "0x4002C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool pressed;

		[Token(Token = "0x4002C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform selectedController;

		[Token(Token = "0x4002C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isLeft;

		[Token(Token = "0x4002C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isRight;
	}

	[Token(Token = "0x2000761")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36E8C", Offset = "0xA36E8C")]
	private sealed class <Start>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRMovementOculus <>4__this;

		[Token(Token = "0x17000675")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600310C")]
			[Address(RVA = "0x14DC40C", Offset = "0x14DC40C", VA = "0x14DC40C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000676")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600310E")]
			[Address(RVA = "0x14DC474", Offset = "0x14DC474", VA = "0x14DC474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003109")]
		[Address(RVA = "0x14DABC8", Offset = "0x14DABC8", VA = "0x14DABC8")]
		[DebuggerHidden]
		public <Start>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600310A")]
		[Address(RVA = "0x14DC1F8", Offset = "0x14DC1F8", VA = "0x14DC1F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600310B")]
		[Address(RVA = "0x14DC1FC", Offset = "0x14DC1FC", VA = "0x14DC1FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600310D")]
		[Address(RVA = "0x14DC414", Offset = "0x14DC414", VA = "0x14DC414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA409F8", Offset = "0xA409F8")]
	public eHMD oculusType;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public OVRInput.Controller defaultLeft;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public OVRInput.Controller defaultRight;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40A50", Offset = "0xA40A50")]
	public eControllerType ControlsOn;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRInput.Button ForwardButton;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public OVRInput.Button BackwardButton;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40A88", Offset = "0xA40A88")]
	public bool canMove;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public eMovementMode MovementMode;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool gravityInDebug;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40AC0", Offset = "0xA40AC0")]
	public bool headIsForward;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float moveSpeed;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float PlayerGravity;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA40AF8", Offset = "0xA40AF8")]
	public float basicAcceleration;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40B10", Offset = "0xA40B10")]
	public float fadeTime;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool accelSpeed;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float decay;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float acc;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40B48", Offset = "0xA40B48")]
	public CharacterController yourRig;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool AutoAssignTheRest;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform headRig;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform leftController;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform rightController;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VRFadeScript myFade;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float curSpeed;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool gravityOverRide;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	[HideInInspector]
	public bool mainMovementOverRide;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform selectedController;

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x14DAB58", Offset = "0x14DAB58", VA = "0x14DAB58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5789C", Offset = "0xA5789C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x14DABF4", Offset = "0x14DABF4", VA = "0x14DABF4")]
	public float GetHeight()
	{
		return default(float);
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x14DAC70", Offset = "0x14DAC70", VA = "0x14DAC70")]
	private void Update()
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x14DB120", Offset = "0x14DB120", VA = "0x14DB120")]
	public void ApplyGravity()
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x14DB598", Offset = "0x14DB598", VA = "0x14DB598")]
	public float GetGravity()
	{
		return default(float);
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x14DB280", Offset = "0x14DB280", VA = "0x14DB280")]
	private void MoveInputSystem()
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x14DB6F4", Offset = "0x14DB6F4", VA = "0x14DB6F4")]
	public void AdvancedMove(Transform thisController, float speed)
	{
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x14DACF8", Offset = "0x14DACF8", VA = "0x14DACF8")]
	public void DebugMovement()
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x14DB5D4", Offset = "0x14DB5D4", VA = "0x14DB5D4")]
	private float GetAxisFromButton(OVRInput.Button theButton, OVRInput.Controller theController, bool isPositive = true)
	{
		return default(float);
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x14DB8E8", Offset = "0x14DB8E8", VA = "0x14DB8E8")]
	public void RotateByDegrees(float degrees)
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x14DBA0C", Offset = "0x14DBA0C", VA = "0x14DBA0C")]
	public InputData InputReturnGet(OVRInput.Button myButton)
	{
		return default(InputData);
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x14DBC9C", Offset = "0x14DBC9C", VA = "0x14DBC9C")]
	public InputData InputReturnDown(OVRInput.Button myButton)
	{
		return default(InputData);
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x14DBF2C", Offset = "0x14DBF2C", VA = "0x14DBF2C")]
	public InputData InputReturnUp(OVRInput.Button myButton)
	{
		return default(InputData);
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x14DC1BC", Offset = "0x14DC1BC", VA = "0x14DC1BC")]
	public VRMovementOculus()
	{
	}
}
[Token(Token = "0x20002D3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA333D0", Offset = "0xA333D0")]
public class LineArcSystem : MonoBehaviour
{
	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer myLine;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] thePoints;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 curveOffset;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA40B90", Offset = "0xA40B90")]
	public float smoothness;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA40BAC", Offset = "0xA40BAC")]
	public float AppogeePoint;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA40BC4", Offset = "0xA40BC4")]
	public float Alpha;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer cachedRenderer;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40BDC", Offset = "0xA40BDC")]
	public bool TestMode;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LineStart;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform LineEnd;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color TestColor;

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x1159C80", Offset = "0x1159C80", VA = "0x1159C80")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x1159D00", Offset = "0x1159D00", VA = "0x1159D00")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x1159DA4", Offset = "0x1159DA4", VA = "0x1159DA4")]
	public void CreateLine(Vector3 start, Vector3 end, Color yourColor)
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x115A334", Offset = "0x115A334", VA = "0x115A334")]
	public void SetColor(Color chg)
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x115A418", Offset = "0x115A418", VA = "0x115A418")]
	public void HideLine()
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x1159F58", Offset = "0x1159F58", VA = "0x1159F58")]
	public Vector3 LerpByDistance(Vector3 start, Vector3 end, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x115A050", Offset = "0x115A050", VA = "0x115A050")]
	public static Vector3[] MakeSmoothCurve(Vector3[] arrayToCurve, float smoothness)
	{
		return null;
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x115A438", Offset = "0x115A438", VA = "0x115A438")]
	public LineArcSystem()
	{
	}
}
[Token(Token = "0x20002D4")]
public class TeleportThrower : MonoBehaviour
{
	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool isSelected;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40C24", Offset = "0xA40C24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA40C24", Offset = "0xA40C24")]
	public float addedThrowForce;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool stayKinematic;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool TeleportOnContact;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool sticksToObjects;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LookTag;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int MAX_COUNT;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody yourBody;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public VROculusThrowTeleporter myTeleporter;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> positions;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasHelper;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 curpos;

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x10EB690", Offset = "0x10EB690", VA = "0x10EB690")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x10EB7D8", Offset = "0x10EB7D8", VA = "0x10EB7D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x10EB7E8", Offset = "0x10EB7E8", VA = "0x10EB7E8")]
	private void TrackVelocity()
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x10EB894", Offset = "0x10EB894", VA = "0x10EB894")]
	public void UnlockObject()
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x10EB73C", Offset = "0x10EB73C", VA = "0x10EB73C")]
	public void PickUp()
	{
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x10EB930", Offset = "0x10EB930", VA = "0x10EB930")]
	public void Throw()
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x10EB934", Offset = "0x10EB934", VA = "0x10EB934")]
	public void AddForce()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x10EBC64", Offset = "0x10EBC64", VA = "0x10EBC64")]
	public void Drop(bool isImpulse = false)
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x10EBD68", Offset = "0x10EBD68", VA = "0x10EBD68")]
	public void DeleteThrower()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x10EBA90", Offset = "0x10EBA90", VA = "0x10EBA90")]
	public Vector3 GetWorldVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x10EBE0C", Offset = "0x10EBE0C", VA = "0x10EBE0C")]
	private void OnTriggerEnter(Collider Col)
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x10EC080", Offset = "0x10EC080", VA = "0x10EC080")]
	private void OnCollisionEnter(Collision Col)
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x10EBF28", Offset = "0x10EBF28", VA = "0x10EBF28")]
	private void DoBehavior(Transform theParent)
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x10EC19C", Offset = "0x10EC19C", VA = "0x10EC19C")]
	public TeleportThrower()
	{
	}
}
[Token(Token = "0x20002D5")]
public class VRFadeScript : MonoBehaviour
{
	[Token(Token = "0x2000762")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36E9C", Offset = "0xA36E9C")]
	private sealed class <FadeIn>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRFadeScript <>4__this;

		[Token(Token = "0x4002C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4002C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__3;

		[Token(Token = "0x17000677")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003112")]
			[Address(RVA = "0x14DA70C", Offset = "0x14DA70C", VA = "0x14DA70C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000678")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003114")]
			[Address(RVA = "0x14DA774", Offset = "0x14DA774", VA = "0x14DA774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600310F")]
		[Address(RVA = "0x14DA254", Offset = "0x14DA254", VA = "0x14DA254")]
		[DebuggerHidden]
		public <FadeIn>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6003110")]
		[Address(RVA = "0x14DA5C4", Offset = "0x14DA5C4", VA = "0x14DA5C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003111")]
		[Address(RVA = "0x14DA5C8", Offset = "0x14DA5C8", VA = "0x14DA5C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003113")]
		[Address(RVA = "0x14DA714", Offset = "0x14DA714", VA = "0x14DA714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000763")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36EAC", Offset = "0xA36EAC")]
	private sealed class <FadeIn>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRFadeScript <>4__this;

		[Token(Token = "0x4002C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4002C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4002C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <color>5__3;

		[Token(Token = "0x17000679")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6003118")]
			[Address(RVA = "0x14DA8C0", Offset = "0x14DA8C0", VA = "0x14DA8C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700067A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600311A")]
			[Address(RVA = "0x14DA928", Offset = "0x14DA928", VA = "0x14DA928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003115")]
		[Address(RVA = "0x14DA300", Offset = "0x14DA300", VA = "0x14DA300")]
		[DebuggerHidden]
		public <FadeIn>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6003116")]
		[Address(RVA = "0x14DA77C", Offset = "0x14DA77C", VA = "0x14DA77C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6003117")]
		[Address(RVA = "0x14DA780", Offset = "0x14DA780", VA = "0x14DA780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6003119")]
		[Address(RVA = "0x14DA8C8", Offset = "0x14DA8C8", VA = "0x14DA8C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000764")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36EBC", Offset = "0xA36EBC")]
	private sealed class <FadeOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRFadeScript <>4__this;

		[Token(Token = "0x4002C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4002C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4002C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <color>5__3;

		[Token(Token = "0x1700067B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600311E")]
			[Address(RVA = "0x14DAAE8", Offset = "0x14DAAE8", VA = "0x14DAAE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700067C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6003120")]
			[Address(RVA = "0x14DAB50", Offset = "0x14DAB50", VA = "0x14DAB50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600311B")]
		[Address(RVA = "0x14DA3AC", Offset = "0x14DA3AC", VA = "0x14DA3AC")]
		[DebuggerHidden]
		public <FadeOut>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600311C")]
		[Address(RVA = "0x14DA930", Offset = "0x14DA930", VA = "0x14DA930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600311D")]
		[Address(RVA = "0x14DA934", Offset = "0x14DA934", VA = "0x14DA934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600311F")]
		[Address(RVA = "0x14DAAF0", Offset = "0x14DAAF0", VA = "0x14DAAF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeTime;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color fadeColor;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material fadeMaterial;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isFading;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YieldInstruction fadeInstruction;

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x14DA07C", Offset = "0x14DA07C", VA = "0x14DA07C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x14DA104", Offset = "0x14DA104", VA = "0x14DA104")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x14DA1A0", Offset = "0x14DA1A0", VA = "0x14DA1A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x14DA130", Offset = "0x14DA130", VA = "0x14DA130")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57900", Offset = "0xA57900")]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x14DA280", Offset = "0x14DA280", VA = "0x14DA280")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57964", Offset = "0xA57964")]
	private IEnumerator FadeIn(float time)
	{
		return null;
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x14DA32C", Offset = "0x14DA32C", VA = "0x14DA32C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA579C8", Offset = "0xA579C8")]
	private IEnumerator FadeOut(float time)
	{
		return null;
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x14DA3D8", Offset = "0x14DA3D8", VA = "0x14DA3D8")]
	public void StartFadeIn(float time)
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x14DA404", Offset = "0x14DA404", VA = "0x14DA404")]
	public void StartFadeOut(float time)
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x14DA430", Offset = "0x14DA430", VA = "0x14DA430")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x14DA51C", Offset = "0x14DA51C", VA = "0x14DA51C")]
	public VRFadeScript()
	{
	}
}
[Token(Token = "0x20002D6")]
public class VROculusBlink : MonoBehaviour
{
	[Token(Token = "0x2000765")]
	public enum eBlinkMode
	{
		[Token(Token = "0x4002C85")]
		Instant,
		[Token(Token = "0x4002C86")]
		HoldRelease
	}

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40C88", Offset = "0xA40C88")]
	public OVRInput.Button BlinkButton;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canBlink;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40CC0", Offset = "0xA40CC0")]
	public bool fadeBlink;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eBlinkMode BlinkMode;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blinkDistance;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float blinkMoveTime;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40CF8", Offset = "0xA40CF8")]
	public Transform blinkPoint;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineArcSystem myLine;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color blinkLineColor;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LayerMask myMask;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color blinkLineBad;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool inBlink;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform storedTransformBlink;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool noBlinking;

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x14DC47C", Offset = "0x14DC47C", VA = "0x14DC47C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x14DC554", Offset = "0x14DC554", VA = "0x14DC554")]
	private void Update()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x14DC564", Offset = "0x14DC564", VA = "0x14DC564")]
	public void BlinkInput()
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x14DC5AC", Offset = "0x14DC5AC", VA = "0x14DC5AC")]
	public void FowardBlinkNormal()
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x14DCC0C", Offset = "0x14DCC0C", VA = "0x14DCC0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x14DCC60", Offset = "0x14DCC60", VA = "0x14DCC60")]
	private void BumpMe()
	{
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x14DC798", Offset = "0x14DC798", VA = "0x14DC798")]
	public void FowardBlinkHold()
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x14DCCF4", Offset = "0x14DCCF4", VA = "0x14DCCF4")]
	public VROculusBlink()
	{
	}
}
[Token(Token = "0x20002D7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33434", Offset = "0xA33434")]
public class VROculusDragMovement : MonoBehaviour
{
	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40D30", Offset = "0xA40D30")]
	public Transform DragVisual;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40D68", Offset = "0xA40D68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA40D68", Offset = "0xA40D68")]
	public float multipler;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool invertControls;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 lastPos;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isOn;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform storedTransform;

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x14DCD3C", Offset = "0x14DCD3C", VA = "0x14DCD3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x14DCE00", Offset = "0x14DCE00", VA = "0x14DCE00")]
	private void Update()
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x14DCE40", Offset = "0x14DCE40", VA = "0x14DCE40")]
	public void DraggingMove()
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x14DD194", Offset = "0x14DD194", VA = "0x14DD194")]
	public VROculusDragMovement()
	{
	}
}
[Token(Token = "0x20002D8")]
public class VROculusRotate : MonoBehaviour
{
	[Token(Token = "0x2000766")]
	public enum eRotationMode
	{
		[Token(Token = "0x4002C88")]
		ButtonPointAndShoot,
		[Token(Token = "0x4002C89")]
		QuickStick,
		[Token(Token = "0x4002C8A")]
		DoubleTapQuickStick,
		[Token(Token = "0x4002C8B")]
		SlowStick,
		[Token(Token = "0x4002C8C")]
		ButtonRotateLR,
		[Token(Token = "0x4002C8D")]
		TouchPadClick,
		[Token(Token = "0x4002C8E")]
		TouchPadSwipe,
		[Token(Token = "0x4002C8F")]
		None
	}

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canRotate;

	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40DC4", Offset = "0xA40DC4")]
	public VRMovementOculus.eControllerType RotateOnHand;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool copyHandFromMain;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool invertHand;

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40DFC", Offset = "0xA40DFC")]
	public eRotationMode RotationMode;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40E34", Offset = "0xA40E34")]
	public OVRInput.Button RotateButton;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40E6C", Offset = "0xA40E6C")]
	public bool fadeRotate;

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA40EA4", Offset = "0xA40EA4")]
	public float rotateDegrees;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotateTime;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float slowRotateSpeed;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float doubleTapTime;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool doubleTapLeft;

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool doubleTapRight;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float dTapTimeLeft;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float dTapTimeRight;

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x14DD1A4", Offset = "0x14DD1A4", VA = "0x14DD1A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x14DD1FC", Offset = "0x14DD1FC", VA = "0x14DD1FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x14DD6E4", Offset = "0x14DD6E4", VA = "0x14DD6E4")]
	private void TouchPadMove()
	{
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x14DD5F0", Offset = "0x14DD5F0", VA = "0x14DD5F0")]
	private void ButtonRotateLR()
	{
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x14DD44C", Offset = "0x14DD44C", VA = "0x14DD44C")]
	private void SlowStickRotate()
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x14DD364", Offset = "0x14DD364", VA = "0x14DD364")]
	private void QuickStickRotate()
	{
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x14DD870", Offset = "0x14DD870", VA = "0x14DD870")]
	private void QuickStickResolve(OVRInput.Controller selectedController)
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x14DD3DC", Offset = "0x14DD3DC", VA = "0x14DD3DC")]
	private void DoubleTapQuickStick()
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x14DD944", Offset = "0x14DD944", VA = "0x14DD944")]
	private void DoubleTapResolve(OVRInput.Controller selectedController)
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x14DD2E4", Offset = "0x14DD2E4", VA = "0x14DD2E4")]
	private void PointShootPressed()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x14DDA8C", Offset = "0x14DDA8C", VA = "0x14DDA8C")]
	private void PointAndShootRotation(Transform selectedController)
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x14DD86C", Offset = "0x14DD86C", VA = "0x14DD86C")]
	public void RotateByDegrees(float degrees)
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x14DDD14", Offset = "0x14DDD14", VA = "0x14DDD14")]
	private void RotateByDegrees2(float degrees)
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x14DDFDC", Offset = "0x14DDFDC", VA = "0x14DDFDC")]
	public VROculusRotate()
	{
	}
}
[Token(Token = "0x20002D9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33498", Offset = "0xA33498")]
public class VROculusRubberBand : MonoBehaviour
{
	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40EC0", Offset = "0xA40EC0")]
	public Transform DragPointL;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform DragPointR;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40EF8", Offset = "0xA40EF8")]
	public LineArcSystem RubberBandLineL;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineArcSystem RubberBandLineR;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40F30", Offset = "0xA40F30")]
	public float maxRadius;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool showLines;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool rbLeftOn;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool rbRightOn;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool invertDirection;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x14DE008", Offset = "0x14DE008", VA = "0x14DE008")]
	private void Start()
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x14DE18C", Offset = "0x14DE18C", VA = "0x14DE18C")]
	private void Update()
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x14DE8F0", Offset = "0x14DE8F0", VA = "0x14DE8F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x14DE1F8", Offset = "0x14DE1F8", VA = "0x14DE1F8")]
	public void RubberBandMoveL()
	{
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x14DE574", Offset = "0x14DE574", VA = "0x14DE574")]
	public void RubberBandMoveR()
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x14DEACC", Offset = "0x14DEACC", VA = "0x14DEACC")]
	public float ConvertRange(float originalStart, float originalEnd, float newStart, float newEnd, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x14DEAE4", Offset = "0x14DEAE4", VA = "0x14DEAE4")]
	public VROculusRubberBand()
	{
	}
}
[Token(Token = "0x20002DA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA334FC", Offset = "0xA334FC")]
public class VROculusStrafe : MonoBehaviour
{
	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useController;

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x14DEB00", Offset = "0x14DEB00", VA = "0x14DEB00")]
	private void Start()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x14DEBC0", Offset = "0x14DEBC0", VA = "0x14DEBC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x14DEC38", Offset = "0x14DEC38", VA = "0x14DEC38")]
	private void FPSMove(OVRInput.Controller pickedController)
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x14DEE04", Offset = "0x14DEE04", VA = "0x14DEE04")]
	public VROculusStrafe()
	{
	}
}
[Token(Token = "0x20002DB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33560", Offset = "0xA33560")]
public class VROculusTeleport : MonoBehaviour
{
	[Token(Token = "0x2000767")]
	public enum TeleportType
	{
		[Token(Token = "0x4002C91")]
		NavMesh,
		[Token(Token = "0x4002C92")]
		TaggedPoint,
		[Token(Token = "0x4002C93")]
		AnyCollider,
		[Token(Token = "0x4002C94")]
		Tag
	}

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40F68", Offset = "0xA40F68")]
	public OVRInput.Button TeleportButton;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canTeleport;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40FA0", Offset = "0xA40FA0")]
	public TeleportType TeleportMode;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useArcTeleporter;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA40FD8", Offset = "0xA40FD8")]
	public LayerMask myLayers;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool fadeTeleport;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TeleMinDstance;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float TeleMaxDistance;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string theTag;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float teleportTime;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA41010", Offset = "0xA41010")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA41010", Offset = "0xA41010")]
	public float forwardForce;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float gravityRatio;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA41068", Offset = "0xA41068")]
	public float lineResolution;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA41084", Offset = "0xA41084")]
	public LineArcSystem teleportLine;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color canTeleportColor;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color canNotTeleportColor;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA410BC", Offset = "0xA410BC")]
	public Transform teleportPoint;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float teleportGive;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool inBlink;

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform storedTransformBlink;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool inTeleport;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform storedTransformTeleport;

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x14DEE0C", Offset = "0x14DEE0C", VA = "0x14DEE0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x14DEF50", Offset = "0x14DEF50", VA = "0x14DEF50")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x14DEF60", Offset = "0x14DEF60", VA = "0x14DEF60")]
	private void TeleportInput()
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x14DF5FC", Offset = "0x14DF5FC", VA = "0x14DF5FC")]
	private void Teleport()
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x14DF7F8", Offset = "0x14DF7F8", VA = "0x14DF7F8")]
	private void BumpMe()
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x14DF0E0", Offset = "0x14DF0E0", VA = "0x14DF0E0")]
	private void GetTeleportPoint()
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x14DFD14", Offset = "0x14DFD14", VA = "0x14DFD14")]
	private bool NavMeshTeleport(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0x14DFDB4", Offset = "0x14DFDB4", VA = "0x14DFDB4")]
	private bool TagTeleport(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x14DFDF4", Offset = "0x14DFDF4", VA = "0x14DFDF4")]
	private bool ColliderTeleport(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x14DF88C", Offset = "0x14DF88C", VA = "0x14DF88C")]
	public void CastArc(Transform start)
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x14DFDFC", Offset = "0x14DFDFC", VA = "0x14DFDFC")]
	private bool RandomPoint(Vector3 center, float range, out Vector3 result)
	{
		return default(bool);
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0x14DFF78", Offset = "0x14DFF78", VA = "0x14DFF78")]
	public VROculusTeleport()
	{
	}
}
[Token(Token = "0x20002DC")]
public class VROculusThrowTeleporter : MonoBehaviour
{
	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA410F4", Offset = "0xA410F4")]
	public OVRInput.Button TeleportButton;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Button CancelButton;

	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA4112C", Offset = "0xA4112C")]
	public bool fadeTeleport;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float teleportTime;

	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TeleportThrower leftPorter;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TeleportThrower rightPorter;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA41164", Offset = "0xA41164")]
	public TeleportThrower TeleportThrower;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x6001400")]
	[Address(RVA = "0x14E0014", Offset = "0x14E0014", VA = "0x14E0014")]
	private void Start()
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0x14E00EC", Offset = "0x14E00EC", VA = "0x14E00EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0x14E015C", Offset = "0x14E015C", VA = "0x14E015C")]
	private void LeftThrower()
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x14E0474", Offset = "0x14E0474", VA = "0x14E0474")]
	private void RightThrower()
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x14E078C", Offset = "0x14E078C", VA = "0x14E078C")]
	public void TeleportMe(Transform teleportPoint)
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x14E099C", Offset = "0x14E099C", VA = "0x14E099C")]
	private void BumpMe()
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0x14E0A30", Offset = "0x14E0A30", VA = "0x14E0A30")]
	public VROculusThrowTeleporter()
	{
	}
}
[Token(Token = "0x20002DD")]
public class VROculusThrusters : MonoBehaviour
{
	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA4119C", Offset = "0xA4119C")]
	public OVRInput.Button brakeButton;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA411D4", Offset = "0xA411D4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA411D4", Offset = "0xA411D4")]
	public float speedAdd;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4122C", Offset = "0xA4122C")]
	public float maxSpeedMulti;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA41244", Offset = "0xA41244")]
	public float drag;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4125C", Offset = "0xA4125C")]
	public float brakePower;

	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isOn;

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool breaksHit;

	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool inverted;

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool reduceVelocityOnContact;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform storedTransform;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 moveDirection;

	[Token(Token = "0x6001407")]
	[Address(RVA = "0x14E0A4C", Offset = "0x14E0A4C", VA = "0x14E0A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x14E0B38", Offset = "0x14E0B38", VA = "0x14E0B38")]
	private void Update()
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x14E0E28", Offset = "0x14E0E28", VA = "0x14E0E28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x14E0B5C", Offset = "0x14E0B5C", VA = "0x14E0B5C")]
	public void ThrusterMove()
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x14E0F3C", Offset = "0x14E0F3C", VA = "0x14E0F3C")]
	private void Brakes(float chg)
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x14E102C", Offset = "0x14E102C", VA = "0x14E102C")]
	public VROculusThrusters()
	{
	}
}
namespace UnityEngine
{
	[Token(Token = "0x20002DE")]
	public enum ConditionType
	{
		[Token(Token = "0x40014B1")]
		Equal = 1,
		[Token(Token = "0x40014B2")]
		NotEqual,
		[Token(Token = "0x40014B3")]
		GreaterThan,
		[Token(Token = "0x40014B4")]
		LessThan,
		[Token(Token = "0x40014B5")]
		GreaterThanOrEqual,
		[Token(Token = "0x40014B6")]
		LessThanOrEqual
	}
	[Token(Token = "0x20002DF")]
	public enum DisplayType
	{
		[Token(Token = "0x40014B8")]
		Disabled,
		[Token(Token = "0x40014B9")]
		Hidden
	}
	[Token(Token = "0x20002E0")]
	public class DisplayConditionMethodAttribute : DisplayConditionBaseAttribute
	{
		[Token(Token = "0x600140D")]
		[Address(RVA = "0x14D9CF8", Offset = "0x14D9CF8", VA = "0x14D9CF8")]
		public DisplayConditionMethodAttribute(string conditionalMethod, DisplayType displayType = DisplayType.Hidden, [Optional] Type alternateDrawerType)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x14D9CFC", Offset = "0x14D9CFC", VA = "0x14D9CFC")]
		internal Func<bool> CreateMethodDelegate(Type instanceType, object instance)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E1")]
	public class DisplayConditionAttribute : DisplayConditionBaseAttribute
	{
		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public object conditionalValue;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ConditionType conditionType;

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x14D9C30", Offset = "0x14D9C30", VA = "0x14D9C30")]
		public DisplayConditionAttribute(string conditionalField, object conditionalValue, ConditionType conditiontype = ConditionType.Equal, DisplayType displayType = DisplayType.Hidden, [Optional] Type alternateDrawerType)
		{
		}
	}
	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA335C4", Offset = "0xA335C4")]
	public sealed class NavMeshAreaAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001410")]
		[Address(RVA = "0x14DA060", Offset = "0x14DA060", VA = "0x14DA060")]
		public NavMeshAreaAttribute()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA335F8", Offset = "0xA335F8")]
	public sealed class TagCollectionAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001411")]
		[Address(RVA = "0x14DA068", Offset = "0x14DA068", VA = "0x14DA068")]
		public TagCollectionAttribute()
		{
		}
	}
}
namespace UnityEngineInternal
{
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA3362C", Offset = "0xA3362C")]
	public abstract class DisplayConditionBaseAttribute : PropertyAttribute
	{
		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string conditionalMember;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisplayType displayType;

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x14D9C74", Offset = "0x14D9C74", VA = "0x14D9C74")]
		protected DisplayConditionBaseAttribute(string conditionalMember, DisplayType displayType, [Optional] Type alternateDrawerType)
		{
		}
	}
}
namespace XNode
{
	[Serializable]
	[Token(Token = "0x20002E5")]
	public abstract class Node : ScriptableObject
	{
		[Token(Token = "0x2000768")]
		public enum ShowBackingValue
		{
			[Token(Token = "0x4002C96")]
			Never,
			[Token(Token = "0x4002C97")]
			Unconnected,
			[Token(Token = "0x4002C98")]
			Always
		}

		[Token(Token = "0x2000769")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA36ECC", Offset = "0xA36ECC")]
		public class InputAttribute : Attribute
		{
			[Token(Token = "0x4002C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShowBackingValue backingValue;

			[Token(Token = "0x6003121")]
			[Address(RVA = "0x13564D4", Offset = "0x13564D4", VA = "0x13564D4")]
			public InputAttribute(ShowBackingValue backingValue = ShowBackingValue.Unconnected)
			{
			}
		}

		[Token(Token = "0x200076A")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA36F04", Offset = "0xA36F04")]
		public class OutputAttribute : Attribute
		{
			[Token(Token = "0x4002C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShowBackingValue backingValue;

			[Token(Token = "0x6003122")]
			[Address(RVA = "0x1356A0C", Offset = "0x1356A0C", VA = "0x1356A0C")]
			public OutputAttribute(ShowBackingValue backingValue = ShowBackingValue.Never)
			{
			}
		}

		[Token(Token = "0x200076B")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA36F3C", Offset = "0xA36F3C")]
		public class CreateNodeMenuAttribute : Attribute
		{
			[Token(Token = "0x4002C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string menuName;

			[Token(Token = "0x6003123")]
			[Address(RVA = "0x13564A8", Offset = "0x13564A8", VA = "0x13564A8")]
			public CreateNodeMenuAttribute(string menuName)
			{
			}
		}

		[Token(Token = "0x200076C")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA36F70", Offset = "0xA36F70")]
		public class NodeTint : Attribute
		{
			[Token(Token = "0x4002C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color color;

			[Token(Token = "0x6003124")]
			[Address(RVA = "0x13568F8", Offset = "0x13568F8", VA = "0x13568F8")]
			public NodeTint(float r, float g, float b)
			{
			}

			[Token(Token = "0x6003125")]
			[Address(RVA = "0x1356964", Offset = "0x1356964", VA = "0x1356964")]
			public NodeTint(string hex)
			{
			}

			[Token(Token = "0x6003126")]
			[Address(RVA = "0x1356998", Offset = "0x1356998", VA = "0x1356998")]
			public NodeTint(byte r, byte g, byte b)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200076D")]
		private class NodePortDictionary : Dictionary<string, NodePort>, ISerializationCallbackReceiver
		{
			[Token(Token = "0x4002C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private List<string> keys;

			[Token(Token = "0x4002C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private List<NodePort> values;

			[Token(Token = "0x6003127")]
			[Address(RVA = "0x1356500", Offset = "0x1356500", VA = "0x1356500", Slot = "36")]
			public void OnBeforeSerialize()
			{
			}

			[Token(Token = "0x6003128")]
			[Address(RVA = "0x1356670", Offset = "0x1356670", VA = "0x1356670", Slot = "37")]
			public void OnAfterDeserialize()
			{
			}

			[Token(Token = "0x6003129")]
			[Address(RVA = "0x13549F8", Offset = "0x13549F8", VA = "0x13549F8")]
			public NodePortDictionary()
			{
			}
		}

		[Token(Token = "0x200076E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36FA4", Offset = "0xA36FA4")]
		private sealed class <get_Ports>d__2 : IEnumerable<NodePort>, IEnumerable, IEnumerator<NodePort>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private NodePort <>2__current;

			[Token(Token = "0x4002CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Node <>4__this;

			[Token(Token = "0x4002CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, NodePort>.ValueCollection.Enumerator <>7__wrap1;

			[Token(Token = "0x1700067D")]
			private NodePort System.Collections.Generic.IEnumerator<XNode.NodePort>.Current
			{
				[Token(Token = "0x600312E")]
				[Address(RVA = "0x1356388", Offset = "0x1356388", VA = "0x1356388", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700067E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003130")]
				[Address(RVA = "0x13563F0", Offset = "0x13563F0", VA = "0x13563F0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600312A")]
			[Address(RVA = "0x1353168", Offset = "0x1353168", VA = "0x1353168")]
			[DebuggerHidden]
			public <get_Ports>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600312B")]
			[Address(RVA = "0x13561A4", Offset = "0x13561A4", VA = "0x13561A4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600312C")]
			[Address(RVA = "0x1356218", Offset = "0x1356218", VA = "0x1356218", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600312D")]
			[Address(RVA = "0x13561C0", Offset = "0x13561C0", VA = "0x13561C0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600312F")]
			[Address(RVA = "0x1356390", Offset = "0x1356390", VA = "0x1356390", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003131")]
			[Address(RVA = "0x13563F8", Offset = "0x13563F8", VA = "0x13563F8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<NodePort> System.Collections.Generic.IEnumerable<XNode.NodePort>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003132")]
			[Address(RVA = "0x13564A4", Offset = "0x13564A4", VA = "0x13564A4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200076F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36FB4", Offset = "0xA36FB4")]
		private sealed class <get_Outputs>d__4 : IEnumerable<NodePort>, IEnumerable, IEnumerator<NodePort>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private NodePort <>2__current;

			[Token(Token = "0x4002CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Node <>4__this;

			[Token(Token = "0x4002CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<NodePort> <>7__wrap1;

			[Token(Token = "0x1700067F")]
			private NodePort System.Collections.Generic.IEnumerator<XNode.NodePort>.Current
			{
				[Token(Token = "0x6003137")]
				[Address(RVA = "0x1356084", Offset = "0x1356084", VA = "0x1356084", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000680")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003139")]
				[Address(RVA = "0x13560EC", Offset = "0x13560EC", VA = "0x13560EC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003133")]
			[Address(RVA = "0x1353220", Offset = "0x1353220", VA = "0x1353220")]
			[DebuggerHidden]
			public <get_Outputs>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6003134")]
			[Address(RVA = "0x1355D14", Offset = "0x1355D14", VA = "0x1355D14", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003135")]
			[Address(RVA = "0x1355DF0", Offset = "0x1355DF0", VA = "0x1355DF0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003136")]
			[Address(RVA = "0x1355D30", Offset = "0x1355D30", VA = "0x1355D30")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003138")]
			[Address(RVA = "0x135608C", Offset = "0x135608C", VA = "0x135608C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600313A")]
			[Address(RVA = "0x13560F4", Offset = "0x13560F4", VA = "0x13560F4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<NodePort> System.Collections.Generic.IEnumerable<XNode.NodePort>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600313B")]
			[Address(RVA = "0x13561A0", Offset = "0x13561A0", VA = "0x13561A0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36FC4", Offset = "0xA36FC4")]
		private sealed class <get_Inputs>d__6 : IEnumerable<NodePort>, IEnumerable, IEnumerator<NodePort>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private NodePort <>2__current;

			[Token(Token = "0x4002CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Node <>4__this;

			[Token(Token = "0x4002CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<NodePort> <>7__wrap1;

			[Token(Token = "0x17000681")]
			private NodePort System.Collections.Generic.IEnumerator<XNode.NodePort>.Current
			{
				[Token(Token = "0x6003140")]
				[Address(RVA = "0x1354E14", Offset = "0x1354E14", VA = "0x1354E14", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000682")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003142")]
				[Address(RVA = "0x1354E7C", Offset = "0x1354E7C", VA = "0x1354E7C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600313C")]
			[Address(RVA = "0x13532D8", Offset = "0x13532D8", VA = "0x13532D8")]
			[DebuggerHidden]
			public <get_Inputs>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600313D")]
			[Address(RVA = "0x1354A98", Offset = "0x1354A98", VA = "0x1354A98", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600313E")]
			[Address(RVA = "0x1354B74", Offset = "0x1354B74", VA = "0x1354B74", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600313F")]
			[Address(RVA = "0x1354AB4", Offset = "0x1354AB4", VA = "0x1354AB4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003141")]
			[Address(RVA = "0x1354E1C", Offset = "0x1354E1C", VA = "0x1354E1C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003143")]
			[Address(RVA = "0x1354E84", Offset = "0x1354E84", VA = "0x1354E84", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<NodePort> System.Collections.Generic.IEnumerable<XNode.NodePort>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003144")]
			[Address(RVA = "0x1354F30", Offset = "0x1354F30", VA = "0x1354F30", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000771")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36FD4", Offset = "0xA36FD4")]
		private sealed class <get_InstancePorts>d__8 : IEnumerable<NodePort>, IEnumerable, IEnumerator<NodePort>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private NodePort <>2__current;

			[Token(Token = "0x4002CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Node <>4__this;

			[Token(Token = "0x4002CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<NodePort> <>7__wrap1;

			[Token(Token = "0x17000683")]
			private NodePort System.Collections.Generic.IEnumerator<XNode.NodePort>.Current
			{
				[Token(Token = "0x6003149")]
				[Address(RVA = "0x1355BF4", Offset = "0x1355BF4", VA = "0x1355BF4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000684")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600314B")]
				[Address(RVA = "0x1355C5C", Offset = "0x1355C5C", VA = "0x1355C5C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003145")]
			[Address(RVA = "0x1353390", Offset = "0x1353390", VA = "0x1353390")]
			[DebuggerHidden]
			public <get_InstancePorts>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6003146")]
			[Address(RVA = "0x1355888", Offset = "0x1355888", VA = "0x1355888", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003147")]
			[Address(RVA = "0x1355964", Offset = "0x1355964", VA = "0x1355964", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003148")]
			[Address(RVA = "0x13558A4", Offset = "0x13558A4", VA = "0x13558A4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600314A")]
			[Address(RVA = "0x1355BFC", Offset = "0x1355BFC", VA = "0x1355BFC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600314C")]
			[Address(RVA = "0x1355C64", Offset = "0x1355C64", VA = "0x1355C64", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<NodePort> System.Collections.Generic.IEnumerable<XNode.NodePort>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600314D")]
			[Address(RVA = "0x1355D10", Offset = "0x1355D10", VA = "0x1355D10", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000772")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36FE4", Offset = "0xA36FE4")]
		private sealed class <get_InstanceOutputs>d__10 : IEnumerable<NodePort>, IEnumerable, IEnumerator<NodePort>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private NodePort <>2__current;

			[Token(Token = "0x4002CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Node <>4__this;

			[Token(Token = "0x4002CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<NodePort> <>7__wrap1;

			[Token(Token = "0x17000685")]
			private NodePort System.Collections.Generic.IEnumerator<XNode.NodePort>.Current
			{
				[Token(Token = "0x6003152")]
				[Address(RVA = "0x1355768", Offset = "0x1355768", VA = "0x1355768", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000686")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003154")]
				[Address(RVA = "0x13557D0", Offset = "0x13557D0", VA = "0x13557D0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600314E")]
			[Address(RVA = "0x1353448", Offset = "0x1353448", VA = "0x1353448")]
			[DebuggerHidden]
			public <get_InstanceOutputs>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600314F")]
			[Address(RVA = "0x13553D4", Offset = "0x13553D4", VA = "0x13553D4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003150")]
			[Address(RVA = "0x13554B0", Offset = "0x13554B0", VA = "0x13554B0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003151")]
			[Address(RVA = "0x13553F0", Offset = "0x13553F0", VA = "0x13553F0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003153")]
			[Address(RVA = "0x1355770", Offset = "0x1355770", VA = "0x1355770", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003155")]
			[Address(RVA = "0x13557D8", Offset = "0x13557D8", VA = "0x13557D8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<NodePort> System.Collections.Generic.IEnumerable<XNode.NodePort>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003156")]
			[Address(RVA = "0x1355884", Offset = "0x1355884", VA = "0x1355884", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000773")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA36FF4", Offset = "0xA36FF4")]
		private sealed class <get_InstanceInputs>d__12 : IEnumerable<NodePort>, IEnumerable, IEnumerator<NodePort>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private NodePort <>2__current;

			[Token(Token = "0x4002CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Node <>4__this;

			[Token(Token = "0x4002CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<NodePort> <>7__wrap1;

			[Token(Token = "0x17000687")]
			private NodePort System.Collections.Generic.IEnumerator<XNode.NodePort>.Current
			{
				[Token(Token = "0x600315B")]
				[Address(RVA = "0x13552B4", Offset = "0x13552B4", VA = "0x13552B4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000688")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600315D")]
				[Address(RVA = "0x135531C", Offset = "0x135531C", VA = "0x135531C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003157")]
			[Address(RVA = "0x1353500", Offset = "0x1353500", VA = "0x1353500")]
			[DebuggerHidden]
			public <get_InstanceInputs>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6003158")]
			[Address(RVA = "0x1354F34", Offset = "0x1354F34", VA = "0x1354F34", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003159")]
			[Address(RVA = "0x1355010", Offset = "0x1355010", VA = "0x1355010", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600315A")]
			[Address(RVA = "0x1354F50", Offset = "0x1354F50", VA = "0x1354F50")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600315C")]
			[Address(RVA = "0x13552BC", Offset = "0x13552BC", VA = "0x13552BC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600315E")]
			[Address(RVA = "0x1355324", Offset = "0x1355324", VA = "0x1355324", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<NodePort> System.Collections.Generic.IEnumerable<XNode.NodePort>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600315F")]
			[Address(RVA = "0x13553D0", Offset = "0x13553D0", VA = "0x13553D0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public NodeGraph graph;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Vector2 position;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NodePortDictionary ports;

		[Token(Token = "0x170000EF")]
		public IEnumerable<NodePort> Ports
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0x13530E8", Offset = "0x13530E8", VA = "0x13530E8")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57A2C", Offset = "0xA57A2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public IEnumerable<NodePort> Outputs
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x13531A0", Offset = "0x13531A0", VA = "0x13531A0")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57A90", Offset = "0xA57A90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public IEnumerable<NodePort> Inputs
		{
			[Token(Token = "0x6001415")]
			[Address(RVA = "0x1353258", Offset = "0x1353258", VA = "0x1353258")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57AF4", Offset = "0xA57AF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		public IEnumerable<NodePort> InstancePorts
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x1353310", Offset = "0x1353310", VA = "0x1353310")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57B58", Offset = "0xA57B58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		public IEnumerable<NodePort> InstanceOutputs
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0x13533C8", Offset = "0x13533C8", VA = "0x13533C8")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57BBC", Offset = "0xA57BBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		public IEnumerable<NodePort> InstanceInputs
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x1353480", Offset = "0x1353480", VA = "0x1353480")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57C20", Offset = "0xA57C20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x1353538", Offset = "0x1353538", VA = "0x1353538")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x1353A1C", Offset = "0x1353A1C", VA = "0x1353A1C", Slot = "4")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x1353A60", Offset = "0x1353A60", VA = "0x1353A60")]
		public void VerifyConnections()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x1353E88", Offset = "0x1353E88", VA = "0x1353E88")]
		public NodePort AddInstanceInput(Type type, [Optional] string fieldName)
		{
			return null;
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x135405C", Offset = "0x135405C", VA = "0x135405C")]
		public NodePort AddInstanceOutput(Type type, [Optional] string fieldName)
		{
			return null;
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x1353E94", Offset = "0x1353E94", VA = "0x1353E94")]
		private NodePort AddInstancePort(Type type, NodePort.IO direction, [Optional] string fieldName)
		{
			return null;
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x1354184", Offset = "0x1354184", VA = "0x1354184")]
		public void RemoveInstancePort(string fieldName)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x1354240", Offset = "0x1354240", VA = "0x1354240")]
		public void RemoveInstancePort(NodePort port)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x13543BC", Offset = "0x13543BC", VA = "0x13543BC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xA57C84", Offset = "0xA57C84")]
		public void ClearInstancePorts()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x135461C", Offset = "0x135461C", VA = "0x135461C")]
		public NodePort GetOutputPort(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x1354640", Offset = "0x1354640", VA = "0x1354640")]
		public NodePort GetInputPort(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x13541AC", Offset = "0x13541AC", VA = "0x13541AC")]
		public NodePort GetPort(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x1354068", Offset = "0x1354068", VA = "0x1354068")]
		public bool HasPort(string fieldName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001426")]
		public T GetInputValue<T>(string fieldName, [Optional] T fallback)
		{
			return (T)null;
		}

		[Token(Token = "0x6001427")]
		public T[] GetInputValues<T>(string fieldName, params T[] fallback)
		{
			return null;
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x1354664", Offset = "0x1354664", VA = "0x1354664", Slot = "5")]
		public virtual object GetValue(NodePort port)
		{
			return null;
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x1354704", Offset = "0x1354704", VA = "0x1354704", Slot = "6")]
		public virtual void OnCreateConnection(NodePort from, NodePort to)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x1354708", Offset = "0x1354708", VA = "0x1354708", Slot = "7")]
		public virtual void OnRemoveConnection(NodePort port)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x135470C", Offset = "0x135470C", VA = "0x135470C")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x135496C", Offset = "0x135496C", VA = "0x135496C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x1354994", Offset = "0x1354994", VA = "0x1354994")]
		protected Node()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public static class NodeDataCache
	{
		[Serializable]
		[Token(Token = "0x2000774")]
		private class PortDataCache : Dictionary<Type, List<NodePort>>, ISerializationCallbackReceiver
		{
			[Token(Token = "0x4002CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private List<Type> keys;

			[Token(Token = "0x4002CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private List<List<NodePort>> values;

			[Token(Token = "0x6003160")]
			[Address(RVA = "0x135766C", Offset = "0x135766C", VA = "0x135766C", Slot = "36")]
			public void OnBeforeSerialize()
			{
			}

			[Token(Token = "0x6003161")]
			[Address(RVA = "0x13577DC", Offset = "0x13577DC", VA = "0x13577DC", Slot = "37")]
			public void OnAfterDeserialize()
			{
			}

			[Token(Token = "0x6003162")]
			[Address(RVA = "0x1356E70", Offset = "0x1356E70", VA = "0x1356E70")]
			public PortDataCache()
			{
			}
		}

		[Token(Token = "0x2000775")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37004", Offset = "0xA37004")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type baseType;

			[Token(Token = "0x6003163")]
			[Address(RVA = "0x1356E68", Offset = "0x1356E68", VA = "0x1356E68")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6003164")]
			[Address(RVA = "0x135760C", Offset = "0x135760C", VA = "0x135760C")]
			internal bool <BuildCache>b__0(Type t)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000776")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37014", Offset = "0xA37014")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<object, bool> <>9__5_0;

			[Token(Token = "0x4002CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<object, bool> <>9__5_1;

			[Token(Token = "0x6003166")]
			[Address(RVA = "0x1357504", Offset = "0x1357504", VA = "0x1357504")]
			public <>c()
			{
			}

			[Token(Token = "0x6003167")]
			[Address(RVA = "0x135750C", Offset = "0x135750C", VA = "0x135750C")]
			internal bool <CachePorts>b__5_0(object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6003168")]
			[Address(RVA = "0x135758C", Offset = "0x135758C", VA = "0x135758C")]
			internal bool <CachePorts>b__5_1(object x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PortDataCache portDataCache;

		[Token(Token = "0x170000F5")]
		private static bool Initialized
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0x1356A38", Offset = "0x1356A38", VA = "0x1356A38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x1353568", Offset = "0x1353568", VA = "0x1353568")]
		public static void UpdatePorts(Node node, Dictionary<string, NodePort> ports)
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x1356A90", Offset = "0x1356A90", VA = "0x1356A90")]
		private static void BuildCache()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x1356F10", Offset = "0x1356F10", VA = "0x1356F10")]
		private static void CachePorts(Type nodeType)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E7")]
	public abstract class NodeGraph : ScriptableObject
	{
		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<Node> nodes;

		[Token(Token = "0x6001432")]
		public T AddNode<T>() where T : Node
		{
			return null;
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x135794C", Offset = "0x135794C", VA = "0x135794C", Slot = "4")]
		public virtual Node AddNode(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x1357A10", Offset = "0x1357A10", VA = "0x1357A10", Slot = "5")]
		public virtual Node CopyNode(Node original)
		{
			return null;
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x1357AC4", Offset = "0x1357AC4", VA = "0x1357AC4")]
		public void RemoveNode(Node node)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x1357B38", Offset = "0x1357B38", VA = "0x1357B38")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x1357B90", Offset = "0x1357B90", VA = "0x1357B90")]
		public NodeGraph Copy()
		{
			return null;
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x13580C4", Offset = "0x13580C4", VA = "0x13580C4")]
		protected NodeGraph()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E8")]
	public class NodePort
	{
		[Token(Token = "0x2000777")]
		public enum IO
		{
			[Token(Token = "0x4002CC4")]
			Input,
			[Token(Token = "0x4002CC5")]
			Output
		}

		[Serializable]
		[Token(Token = "0x2000778")]
		private class PortConnection
		{
			[Token(Token = "0x4002CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string fieldName;

			[Token(Token = "0x4002CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public Node node;

			[NonSerialized]
			[Token(Token = "0x4002CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private NodePort port;

			[Token(Token = "0x17000689")]
			public NodePort Port
			{
				[Token(Token = "0x6003169")]
				[Address(RVA = "0x1358204", Offset = "0x1358204", VA = "0x1358204")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600316A")]
			[Address(RVA = "0x135897C", Offset = "0x135897C", VA = "0x135897C")]
			public PortConnection(NodePort port)
			{
			}

			[Token(Token = "0x600316B")]
			[Address(RVA = "0x1358CE0", Offset = "0x1358CE0", VA = "0x1358CE0")]
			private NodePort GetPort()
			{
				return null;
			}
		}

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Type valueType;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _fieldName;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Node _node;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _typeQualifiedName;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<PortConnection> connections;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private IO _direction;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _dynamic;

		[Token(Token = "0x170000F6")]
		public int ConnectionCount
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0x1358134", Offset = "0x1358134", VA = "0x1358134")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F7")]
		public NodePort Connection
		{
			[Token(Token = "0x600143A")]
			[Address(RVA = "0x1358184", Offset = "0x1358184", VA = "0x1358184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public IO direction
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0x1358234", Offset = "0x1358234", VA = "0x1358234")]
			get
			{
				return default(IO);
			}
		}

		[Token(Token = "0x170000F9")]
		public bool IsConnected
		{
			[Token(Token = "0x600143C")]
			[Address(RVA = "0x135823C", Offset = "0x135823C", VA = "0x135823C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FA")]
		public bool IsInput
		{
			[Token(Token = "0x600143D")]
			[Address(RVA = "0x1354E04", Offset = "0x1354E04", VA = "0x1354E04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FB")]
		public bool IsOutput
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0x1355758", Offset = "0x1355758", VA = "0x1355758")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FC")]
		public string fieldName
		{
			[Token(Token = "0x600143F")]
			[Address(RVA = "0x1358294", Offset = "0x1358294", VA = "0x1358294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public Node node
		{
			[Token(Token = "0x6001440")]
			[Address(RVA = "0x135829C", Offset = "0x135829C", VA = "0x135829C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		public bool IsDynamic
		{
			[Token(Token = "0x6001441")]
			[Address(RVA = "0x13582A4", Offset = "0x13582A4", VA = "0x13582A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FF")]
		public bool IsStatic
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0x1354324", Offset = "0x1354324", VA = "0x1354324")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000100")]
		public Type ValueType
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0x1356C2C", Offset = "0x1356C2C", VA = "0x1356C2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001444")]
			[Address(RVA = "0x1356D10", Offset = "0x1356D10", VA = "0x1356D10")]
			set
			{
			}
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x1357314", Offset = "0x1357314", VA = "0x1357314")]
		public NodePort(FieldInfo fieldInfo)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x1356DB4", Offset = "0x1356DB4", VA = "0x1356DB4")]
		public NodePort(NodePort nodePort, Node node)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x13540D0", Offset = "0x13540D0", VA = "0x13540D0")]
		public NodePort(string fieldName, Type type, IO direction, Node node)
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x1353CC0", Offset = "0x1353CC0", VA = "0x1353CC0")]
		public void VerifyConnections()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x13582AC", Offset = "0x13582AC", VA = "0x13582AC")]
		public object GetOutputValue()
		{
			return null;
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x13582E0", Offset = "0x13582E0", VA = "0x13582E0")]
		public object GetInputValue()
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x1358300", Offset = "0x1358300", VA = "0x1358300")]
		public object[] GetInputValues()
		{
			return null;
		}

		[Token(Token = "0x600144C")]
		public T GetInputValue<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x600144D")]
		public T[] GetInputValues<T>()
		{
			return null;
		}

		[Token(Token = "0x600144E")]
		public bool TryGetInputValue<T>(out T value)
		{
			return default(bool);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x1358464", Offset = "0x1358464", VA = "0x1358464")]
		public float GetInputSum(float fallback)
		{
			return default(float);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x1358544", Offset = "0x1358544", VA = "0x1358544")]
		public int GetInputSum(int fallback)
		{
			return default(int);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x1358624", Offset = "0x1358624", VA = "0x1358624")]
		public void Connect(NodePort port)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x13589C0", Offset = "0x13589C0", VA = "0x13589C0")]
		public NodePort GetConnection(int i)
		{
			return null;
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x13588C0", Offset = "0x13588C0", VA = "0x13588C0")]
		public bool IsConnectedTo(NodePort port)
		{
			return default(bool);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x1358B4C", Offset = "0x1358B4C", VA = "0x1358B4C")]
		public void Disconnect(NodePort port)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x1354334", Offset = "0x1354334", VA = "0x1354334")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x1357F5C", Offset = "0x1357F5C", VA = "0x1357F5C")]
		public void Redirect(List<Node> oldNodes, List<Node> newNodes)
		{
		}
	}
}
namespace UltimateSpawner
{
	[Serializable]
	[Token(Token = "0x20002E9")]
	public class UnityStringEvent : UnityEvent<string>
	{
		[Token(Token = "0x6001457")]
		[Address(RVA = "0x141F230", Offset = "0x141F230", VA = "0x141F230")]
		public UnityStringEvent()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class WaveSpawnController : SpawnController
	{
		[Token(Token = "0x2000779")]
		public enum WaveNodeType
		{
			[Token(Token = "0x4002CCA")]
			None,
			[Token(Token = "0x4002CCB")]
			Start,
			[Token(Token = "0x4002CCC")]
			Condition,
			[Token(Token = "0x4002CCD")]
			Delay,
			[Token(Token = "0x4002CCE")]
			Event,
			[Token(Token = "0x4002CCF")]
			Loop,
			[Token(Token = "0x4002CD0")]
			Wave,
			[Token(Token = "0x4002CD1")]
			SubWave
		}

		[Token(Token = "0x200077A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37024", Offset = "0xA37024")]
		private sealed class <SpawnRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveSpawnController <>4__this;

			[Token(Token = "0x1700068A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600316F")]
				[Address(RVA = "0x1420028", Offset = "0x1420028", VA = "0x1420028", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700068B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003171")]
				[Address(RVA = "0x1420090", Offset = "0x1420090", VA = "0x1420090", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600316C")]
			[Address(RVA = "0x141FD24", Offset = "0x141FD24", VA = "0x141FD24")]
			[DebuggerHidden]
			public <SpawnRoutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x600316D")]
			[Address(RVA = "0x141FDD0", Offset = "0x141FDD0", VA = "0x141FDD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600316E")]
			[Address(RVA = "0x141FDD4", Offset = "0x141FDD4", VA = "0x141FDD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003170")]
			[Address(RVA = "0x1420030", Offset = "0x1420030", VA = "0x1420030", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WaveNode currentNode;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int currentWaveSpawnedItemCount;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int currentWaveDestroyedItemCount;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private WaveNodeType currentNodeType;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected WaveState currentWaveState;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41314", Offset = "0xA41314")]
		public WaveConfiguration waveConfig;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public UnityEvent OnWaveStarted;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public UnityEvent OnWaveEnded;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public UnityStringEvent OnWaveCustomEvent;

		[Token(Token = "0x17000101")]
		public WaveState CurrentState
		{
			[Token(Token = "0x6001458")]
			[Address(RVA = "0x141F598", Offset = "0x141F598", VA = "0x141F598")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		public int CurrentWave
		{
			[Token(Token = "0x6001459")]
			[Address(RVA = "0x140CB98", Offset = "0x140CB98", VA = "0x140CB98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000103")]
		public int TotalWavesCount
		{
			[Token(Token = "0x600145A")]
			[Address(RVA = "0x141F5A0", Offset = "0x141F5A0", VA = "0x141F5A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000104")]
		public int CurrentWaveSpawnedItemCount
		{
			[Token(Token = "0x600145B")]
			[Address(RVA = "0x141F640", Offset = "0x141F640", VA = "0x141F640")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000105")]
		public int CurrentWaveDestroyedItemCount
		{
			[Token(Token = "0x600145C")]
			[Address(RVA = "0x141F648", Offset = "0x141F648", VA = "0x141F648")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000106")]
		public WaveNode CurrentNode
		{
			[Token(Token = "0x600145D")]
			[Address(RVA = "0x141F650", Offset = "0x141F650", VA = "0x141F650")]
			get
			{
				return null;
			}
			[Token(Token = "0x600145E")]
			[Address(RVA = "0x141F658", Offset = "0x141F658", VA = "0x141F658")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public WaveNodeType CurrentNodeType
		{
			[Token(Token = "0x600145F")]
			[Address(RVA = "0x141F660", Offset = "0x141F660", VA = "0x141F660")]
			get
			{
				return default(WaveNodeType);
			}
			[Token(Token = "0x6001460")]
			[Address(RVA = "0x141F668", Offset = "0x141F668", VA = "0x141F668")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public WaveParameterSet Parameters
		{
			[Token(Token = "0x6001461")]
			[Address(RVA = "0x141F670", Offset = "0x141F670", VA = "0x141F670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x141F758", Offset = "0x141F758", VA = "0x141F758")]
		public WaveSpawnController()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x141F7C4", Offset = "0x141F7C4", VA = "0x141F7C4")]
		public void Log(string msg)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x141F84C", Offset = "0x141F84C", VA = "0x141F84C", Slot = "8")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x141F95C", Offset = "0x141F95C", VA = "0x141F95C")]
		public void RegenerateWaveGraph()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x141FAC4", Offset = "0x141FAC4", VA = "0x141FAC4")]
		public void StartWave(int waveIndex)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x141FCA4", Offset = "0x141FCA4", VA = "0x141FCA4")]
		public void EndWave()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x141FCA8", Offset = "0x141FCA8", VA = "0x141FCA8")]
		public void RestartWave()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x141FCAC", Offset = "0x141FCAC", VA = "0x141FCAC")]
		public void NextWave()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x141FCB0", Offset = "0x141FCB0", VA = "0x141FCB0")]
		public void PreviousWave()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x141FCB4", Offset = "0x141FCB4", VA = "0x141FCB4", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57CBC", Offset = "0xA57CBC")]
		public override IEnumerator SpawnRoutine()
		{
			return null;
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x141FD50", Offset = "0x141FD50", VA = "0x141FD50", Slot = "5")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x141FD60", Offset = "0x141FD60", VA = "0x141FD60", Slot = "13")]
		public virtual WaveState OnAdvanceWave(WaveState lastWave, WaveState newWave)
		{
			return null;
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x141FD68", Offset = "0x141FD68", VA = "0x141FD68")]
		internal void SetNextWaveState(WaveState state)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x141FBFC", Offset = "0x141FBFC", VA = "0x141FBFC")]
		private void StartWaveNode(WaveNode node)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x141FDA8", Offset = "0x141FDA8", VA = "0x141FDA8")]
		private void OnWillEnterNewWave()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x141FDB0", Offset = "0x141FDB0", VA = "0x141FDB0", Slot = "11")]
		protected override void OnControllerSpawnedItem(Transform item)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x141FDC0", Offset = "0x141FDC0", VA = "0x141FDC0", Slot = "12")]
		protected override void OnControllerDestroyedItem(Transform item)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EB")]
	public class EventSpawnController : SpawnController
	{
		[Token(Token = "0x200077B")]
		public enum SpawnEvent
		{
			[Token(Token = "0x4002CD6")]
			Awake,
			[Token(Token = "0x4002CD7")]
			Start,
			[Token(Token = "0x4002CD8")]
			OnEnable,
			[Token(Token = "0x4002CD9")]
			OnDisable,
			[Token(Token = "0x4002CDA")]
			OnDestroy
		}

		[Token(Token = "0x200077C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37034", Offset = "0xA37034")]
		private sealed class <SpawnRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventSpawnController <>4__this;

			[Token(Token = "0x4002CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700068C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003175")]
				[Address(RVA = "0x1411CFC", Offset = "0x1411CFC", VA = "0x1411CFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700068D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003177")]
				[Address(RVA = "0x1411D64", Offset = "0x1411D64", VA = "0x1411D64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003172")]
			[Address(RVA = "0x1411A14", Offset = "0x1411A14", VA = "0x1411A14")]
			[DebuggerHidden]
			public <SpawnRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6003173")]
			[Address(RVA = "0x1411ACC", Offset = "0x1411ACC", VA = "0x1411ACC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003174")]
			[Address(RVA = "0x1411AD0", Offset = "0x1411AD0", VA = "0x1411AD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003176")]
			[Address(RVA = "0x1411D04", Offset = "0x1411D04", VA = "0x1411D04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int spawnRequests;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public SpawnEvent spawnEvent;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int spawnAmount;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float spawnDelay;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41384", Offset = "0xA41384")]
		public UnityEvent OnSpawnerTrigger;

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x14116B0", Offset = "0x14116B0", VA = "0x14116B0", Slot = "8")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x1411860", Offset = "0x1411860", VA = "0x1411860", Slot = "9")]
		public override void Start()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x14118C8", Offset = "0x14118C8", VA = "0x14118C8", Slot = "13")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x14118DC", Offset = "0x14118DC", VA = "0x14118DC", Slot = "14")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x14118F0", Offset = "0x14118F0", VA = "0x14118F0", Slot = "10")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x1411824", Offset = "0x1411824", VA = "0x1411824")]
		public void TriggerItemSpawn()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x14119A4", Offset = "0x14119A4", VA = "0x14119A4", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57D20", Offset = "0xA57D20")]
		public override IEnumerator SpawnRoutine()
		{
			return null;
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x1411A40", Offset = "0x1411A40", VA = "0x1411A40")]
		public EventSpawnController()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public enum InfiniteStopCondition
	{
		[Token(Token = "0x40014D9")]
		DontStop,
		[Token(Token = "0x40014DA")]
		TimeElapsed,
		[Token(Token = "0x40014DB")]
		SpawnableCount
	}
	[Serializable]
	[Token(Token = "0x20002ED")]
	public class InfiniteSpawnController : SpawnController
	{
		[Token(Token = "0x200077D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37044", Offset = "0xA37044")]
		private sealed class <SpawnRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InfiniteSpawnController <>4__this;

			[Token(Token = "0x1700068E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600317B")]
				[Address(RVA = "0x1412164", Offset = "0x1412164", VA = "0x1412164", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700068F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600317D")]
				[Address(RVA = "0x14121CC", Offset = "0x14121CC", VA = "0x14121CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003178")]
			[Address(RVA = "0x1411DDC", Offset = "0x1411DDC", VA = "0x1411DDC")]
			[DebuggerHidden]
			public <SpawnRoutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6003179")]
			[Address(RVA = "0x1411FA4", Offset = "0x1411FA4", VA = "0x1411FA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600317A")]
			[Address(RVA = "0x1411FA8", Offset = "0x1411FA8", VA = "0x1411FA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600317C")]
			[Address(RVA = "0x141216C", Offset = "0x141216C", VA = "0x141216C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Timer stopTimer;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA413D0", Offset = "0xA413D0")]
		public int minimumSpawnCount;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41408", Offset = "0xA41408")]
		public float spawnDelay;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41440", Offset = "0xA41440")]
		public float spawnDelayRandomness;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41478", Offset = "0xA41478")]
		public InfiniteStopCondition stopAfter;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA414B0", Offset = "0xA414B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA414B0", Offset = "0xA414B0")]
		public float stopAfterTime;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA41574", Offset = "0xA41574")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41574", Offset = "0xA41574")]
		public int stopAfterSpawnedCount;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41638", Offset = "0xA41638")]
		public UnityEvent OnSpawnerStopCondition;

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x1411D6C", Offset = "0x1411D6C", VA = "0x1411D6C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57D84", Offset = "0xA57D84")]
		public override IEnumerator SpawnRoutine()
		{
			return null;
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x1411E08", Offset = "0x1411E08", VA = "0x1411E08", Slot = "5")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x1411E60", Offset = "0x1411E60", VA = "0x1411E60")]
		private bool StopConditionReached()
		{
			return default(bool);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x1411F18", Offset = "0x1411F18", VA = "0x1411F18")]
		public InfiniteSpawnController()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public struct SpawnedItem
	{
		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform spawnedTransform;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Spawner spawnedOwner;

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xB90844", Offset = "0xB90844", VA = "0xB90844")]
		public bool IsAlive()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002EF")]
	public abstract class SpawnController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200077E")]
		public class UnityTransformEvent : UnityEvent<Transform>
		{
			[Token(Token = "0x600317E")]
			[Address(RVA = "0x1412F48", Offset = "0x1412F48", VA = "0x1412F48")]
			public UnityTransformEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200077F")]
		public class SpawnControllerRoutine : MonoBehaviour
		{
			[Token(Token = "0x17000690")]
			public bool IsPaused
			{
				[Token(Token = "0x600317F")]
				[Address(RVA = "0x1412328", Offset = "0x1412328", VA = "0x1412328")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6003180")]
				[Address(RVA = "0x14123A4", Offset = "0x14123A4", VA = "0x14123A4")]
				set
				{
				}
			}

			[Token(Token = "0x6003181")]
			[Address(RVA = "0x1412F40", Offset = "0x1412F40", VA = "0x1412F40")]
			public SpawnControllerRoutine()
			{
			}
		}

		[Token(Token = "0x2000780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37054", Offset = "0xA37054")]
		private sealed class <ItemSpawnRoutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpawnController <>4__this;

			[Token(Token = "0x4002CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Spawner targetSpawner;

			[Token(Token = "0x4002CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SpawnableItemRef targetItemRef;

			[Token(Token = "0x4002CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ICollection<SpawnedItem> spawnCollection;

			[Token(Token = "0x17000691")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003185")]
				[Address(RVA = "0x1412ED0", Offset = "0x1412ED0", VA = "0x1412ED0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000692")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003187")]
				[Address(RVA = "0x1412F38", Offset = "0x1412F38", VA = "0x1412F38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003182")]
			[Address(RVA = "0x14123EC", Offset = "0x14123EC", VA = "0x14123EC")]
			[DebuggerHidden]
			public <ItemSpawnRoutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6003183")]
			[Address(RVA = "0x1412C48", Offset = "0x1412C48", VA = "0x1412C48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003184")]
			[Address(RVA = "0x1412C4C", Offset = "0x1412C4C", VA = "0x1412C4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003186")]
			[Address(RVA = "0x1412ED8", Offset = "0x1412ED8", VA = "0x1412ED8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpawnControllerRoutine controllerRoutine;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<SpawnedItem> spawnedItems;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator active;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isTryingToSpawn;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isSpawning;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int totalItemsSpawned;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int totalItemsDestroyed;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41684", Offset = "0xA41684")]
		public Spawner spawner;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA416BC", Offset = "0xA416BC")]
		public bool playOnStart;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA416F4", Offset = "0xA416F4")]
		public int maximumSpawnCount;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public UnityTransformEvent OnItemSpawned;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public UnityTransformEvent OnItemDespawned;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public UnityEvent OnStart;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public UnityEvent OnPaused;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public UnityEvent OnResumed;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public UnityEvent OnEnd;

		[Token(Token = "0x17000109")]
		private SpawnControllerRoutine ControllerRoutine
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0x14121D4", Offset = "0x14121D4", VA = "0x14121D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public bool IsSpawning
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0x1412318", Offset = "0x1412318", VA = "0x1412318")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010B")]
		public bool IsTryingToSpawn
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x1412320", Offset = "0x1412320", VA = "0x1412320")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010C")]
		public bool IsPaused
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x140C2B8", Offset = "0x140C2B8", VA = "0x140C2B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001484")]
			[Address(RVA = "0x1412358", Offset = "0x1412358", VA = "0x1412358")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public int SpawnedItemCount
		{
			[Token(Token = "0x6001485")]
			[Address(RVA = "0x140C2D4", Offset = "0x140C2D4", VA = "0x140C2D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010E")]
		public int TotalSpawnedItemCount
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x14123DC", Offset = "0x14123DC", VA = "0x14123DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010F")]
		public int TotalDestroyedItemCount
		{
			[Token(Token = "0x6001487")]
			[Address(RVA = "0x14123E4", Offset = "0x14123E4", VA = "0x14123E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001488")]
		public abstract IEnumerator SpawnRoutine();

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x1411C6C", Offset = "0x1411C6C", VA = "0x1411C6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57DE8", Offset = "0xA57DE8")]
		public IEnumerator ItemSpawnRoutine([Optional] Spawner targetSpawner, [Optional] SpawnableItemRef targetItemRef, [Optional] ICollection<SpawnedItem> spawnCollection)
		{
			return null;
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x1412418", Offset = "0x1412418", VA = "0x1412418", Slot = "5")]
		public virtual void ResetState()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x1412420", Offset = "0x1412420", VA = "0x1412420", Slot = "6")]
		public virtual void StartSpawning()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x1412490", Offset = "0x1412490", VA = "0x1412490", Slot = "7")]
		public virtual void StopSpawning()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x14116E8", Offset = "0x14116E8", VA = "0x14116E8", Slot = "8")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x14118B0", Offset = "0x14118B0", VA = "0x14118B0", Slot = "9")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x141192C", Offset = "0x141192C", VA = "0x141192C", Slot = "10")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x1412670", Offset = "0x1412670", VA = "0x1412670")]
		public void DespawnAllItems()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x14127A8", Offset = "0x14127A8", VA = "0x14127A8")]
		public bool HasSpawnableItem(SpawnableItemRef itemRef)
		{
			return default(bool);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x1412B04", Offset = "0x1412B04", VA = "0x1412B04", Slot = "11")]
		protected virtual void OnControllerSpawnedItem(Transform item)
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x1412B08", Offset = "0x1412B08", VA = "0x1412B08", Slot = "12")]
		protected virtual void OnControllerDestroyedItem(Transform item)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x1412B0C", Offset = "0x1412B0C", VA = "0x1412B0C")]
		private void OnSpawnedItemDestroyed(Transform destroyedItem)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x1412260", Offset = "0x1412260", VA = "0x1412260")]
		private SpawnControllerRoutine CreateControllerRoutineObjectIfRequired()
		{
			return null;
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x1411A4C", Offset = "0x1411A4C", VA = "0x1411A4C")]
		protected SpawnController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F0")]
	public class TriggerSpawnController : SpawnController
	{
		[Token(Token = "0x2000781")]
		public enum TriggerSpawnMode
		{
			[Token(Token = "0x4002CE9")]
			OnEnter,
			[Token(Token = "0x4002CEA")]
			OnExit
		}

		[Token(Token = "0x2000782")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37064", Offset = "0xA37064")]
		private sealed class <SpawnRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggerSpawnController <>4__this;

			[Token(Token = "0x17000693")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600318B")]
				[Address(RVA = "0x141ED10", Offset = "0x141ED10", VA = "0x141ED10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000694")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600318D")]
				[Address(RVA = "0x141ED78", Offset = "0x141ED78", VA = "0x141ED78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003188")]
			[Address(RVA = "0x141E7A8", Offset = "0x141E7A8", VA = "0x141E7A8")]
			[DebuggerHidden]
			public <SpawnRoutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6003189")]
			[Address(RVA = "0x141EC4C", Offset = "0x141EC4C", VA = "0x141EC4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600318A")]
			[Address(RVA = "0x141EC50", Offset = "0x141EC50", VA = "0x141EC50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600318C")]
			[Address(RVA = "0x141ED18", Offset = "0x141ED18", VA = "0x141ED18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private HashSet<Collider> colliding3D;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private HashSet<Collider2D> colliding2D;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int spawnRequests;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int spawnCount;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4178C", Offset = "0xA4178C")]
		public bool triggerOnce;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA417C4", Offset = "0xA417C4")]
		public TriggerSpawnMode triggerMode;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[TagCollection]
		public string[] triggerTags;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4180C", Offset = "0xA4180C")]
		public UnityEvent OnSpawnerTrigger;

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x141E738", Offset = "0x141E738", VA = "0x141E738", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57E4C", Offset = "0xA57E4C")]
		public override IEnumerator SpawnRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x141E7D4", Offset = "0x141E7D4", VA = "0x141E7D4")]
		public void TriggerSpawn()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x141E81C", Offset = "0x141E81C", VA = "0x141E81C")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x141E8F0", Offset = "0x141E8F0", VA = "0x141E8F0")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x141E9B0", Offset = "0x141E9B0", VA = "0x141E9B0")]
		public void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x141EA84", Offset = "0x141EA84", VA = "0x141EA84")]
		public void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x141EB44", Offset = "0x141EB44", VA = "0x141EB44")]
		public TriggerSpawnController()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class UltimateSpawning
	{
		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<UnityEngine.Object, Vector3, Quaternion, UnityEngine.Object> OnUltimateSpawnerInstantiate;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<UnityEngine.Object> OnUltimateSpawnerDestroy;

		[Token(Token = "0x4001500")]
		public const bool in2DModeDefault = false;

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x1413798", Offset = "0x1413798", VA = "0x1413798")]
		public static UnityEngine.Object UltimateSpawnerInstantiate(UnityEngine.Object prefab, Vector3 pos, Quaternion rot)
		{
			return null;
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x1413A50", Offset = "0x1413A50", VA = "0x1413A50")]
		public static void UltimateSpawnerDestroy(UnityEngine.Object target)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x141BB8C", Offset = "0x141BB8C", VA = "0x141BB8C")]
		public static Transform Spawn(SpawnableItems spawnableItemsPool, [Optional] SpawnableItemRef spawnableItemRef, [Optional] SpawnableMask spawnItemMask, [Optional] SpawnLocation spawnLocation, SpawnRotationApplyMode applyRotation = SpawnRotationApplyMode.FullRotation)
		{
			return null;
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x1410D08", Offset = "0x1410D08", VA = "0x1410D08")]
		public static void Despawn(UnityEngine.Object spawnableItem)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x1411438", Offset = "0x1411438", VA = "0x1411438")]
		public static void Despawn(SpawnableIdentity spawnItemIdentity)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x141ED80", Offset = "0x141ED80", VA = "0x141ED80")]
		public static DespawnAfterTime DespawnAfterTime(GameObject despawnObject, float timeInSeconds)
		{
			return null;
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x141EE2C", Offset = "0x141EE2C", VA = "0x141EE2C")]
		public static DespawnAfterAmount DespawnAfterAmount(GameObject despawnObject, int maxAliveCount)
		{
			return null;
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x141EED8", Offset = "0x141EED8", VA = "0x141EED8")]
		public static DespawnOnCollision DespawnOnCollision(GameObject despawnObject, DespawnTarget despawnTarget = DespawnTarget.ThisObject, bool is2DDespawner = false, [Optional] LayerMask collisionLayer, params string[] collisionTags)
		{
			return null;
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x141EFA8", Offset = "0x141EFA8", VA = "0x141EFA8")]
		public static DespawnOnTrigger DespawnOnTrigger(GameObject despawnObject, DespawnTarget despawnTarget = DespawnTarget.ThisObject, bool is2DDespawner = false, [Optional] LayerMask triggerLayer, params string[] triggerTags)
		{
			return null;
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x141F078", Offset = "0x141F078", VA = "0x141F078")]
		public static DespawnOnEvent DespawnOnEvent(GameObject despawnObject, UnityEvent despawnEvent)
		{
			return null;
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x141F164", Offset = "0x141F164", VA = "0x141F164")]
		public static DespawnDistance DespawnDistance(GameObject despawnObject, DespawnDistanceMode distanceMode, float distance, [Optional] string despawnerTargetTag)
		{
			return null;
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x141DDE4", Offset = "0x141DDE4", VA = "0x141DDE4")]
		public static void Log(string format, params object[] args)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x1410A60", Offset = "0x1410A60", VA = "0x1410A60")]
		public static bool IsEditorIn2DMode()
		{
			return default(bool);
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x1410BB8", Offset = "0x1410BB8", VA = "0x1410BB8")]
		public static bool IsTagged(GameObject go, params string[] tags)
		{
			return default(bool);
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x141F228", Offset = "0x141F228", VA = "0x141F228")]
		public UltimateSpawning()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public sealed class Timer
	{
		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float startTime;

		[Token(Token = "0x17000110")]
		public float StartTime
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0x141E670", Offset = "0x141E670", VA = "0x141E670")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000111")]
		public float ElapsedTime
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0x141E678", Offset = "0x141E678", VA = "0x141E678")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000112")]
		public float ElapsedMilliseconds
		{
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0x141E6A4", Offset = "0x141E6A4", VA = "0x141E6A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x1411E38", Offset = "0x1411E38", VA = "0x1411E38")]
		public void Reset()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x1411ED8", Offset = "0x1411ED8", VA = "0x1411ED8")]
		public bool HasElapsed(float amount)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x141E6DC", Offset = "0x141E6DC", VA = "0x141E6DC")]
		public bool HasElapsed(float amount, bool autoReset)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x1411F9C", Offset = "0x1411F9C", VA = "0x1411F9C")]
		public Timer()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public struct WaitForSecondsNonAlloc : IEnumerator
	{
		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hasStarted;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float startTime;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float waitTime;

		[Token(Token = "0x17000113")]
		public object Current
		{
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xB90950", Offset = "0xB90950", VA = "0xB90950", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public float WaitTime
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0xB90958", Offset = "0xB90958", VA = "0xB90958")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xB90960", Offset = "0xB90960", VA = "0xB90960")]
		public WaitForSecondsNonAlloc(float seconds)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xB90998", Offset = "0xB90998", VA = "0xB90998", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xB909A0", Offset = "0xB909A0", VA = "0xB909A0", Slot = "6")]
		public void Reset()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x1411BF8", Offset = "0x1411BF8", VA = "0x1411BF8")]
		public static IEnumerator WaitFor(float seconds)
		{
			return null;
		}
	}
}
namespace UltimateSpawner.Util
{
	[Token(Token = "0x20002F4")]
	public class SpawnRandomizer
	{
		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x141683C", Offset = "0x141683C", VA = "0x141683C")]
		public static Vector3 GetRandomPosition(Bounds randomBounds)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x141F280", Offset = "0x141F280", VA = "0x141F280")]
		public static float GetRandomRotationAxis()
		{
			return default(float);
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x141F294", Offset = "0x141F294", VA = "0x141F294")]
		public static Quaternion GetRandomRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x141F29C", Offset = "0x141F29C", VA = "0x141F29C")]
		public static Quaternion GetRandomRotation(SpawnRotationApplyMode applyRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x141F3D4", Offset = "0x141F3D4", VA = "0x141F3D4")]
		public SpawnRandomizer()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public static class SpawnerUtility
	{
		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x141F3DC", Offset = "0x141F3DC", VA = "0x141F3DC")]
		public static Quaternion GetRotationFromTransform(Transform transform, SpawnRotationApplyMode applyRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x141691C", Offset = "0x141691C", VA = "0x141691C")]
		public static Quaternion GetRotationForSpawnable(Transform spawnerTransform, SpawnRotationApplyMode spawnerRotation, SpawnRotationApplyMode randomRotation)
		{
			return default(Quaternion);
		}
	}
}
namespace UltimateSpawner.Spawning
{
	[Token(Token = "0x20002F6")]
	public enum OccupiedCheck
	{
		[Token(Token = "0x4001506")]
		None,
		[Token(Token = "0x4001507")]
		PhysicsOverlap,
		[Token(Token = "0x4001508")]
		PhysicsTrigger
	}
	[Token(Token = "0x20002F7")]
	public abstract class EndPointSpawner : Spawner
	{
		[Token(Token = "0x2000783")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37074", Offset = "0xA37074")]
		private sealed class <GetEnumerator>d__11 : IEnumerator<Spawner>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Spawner <>2__current;

			[Token(Token = "0x17000695")]
			private Spawner System.Collections.Generic.IEnumerator<UltimateSpawner.Spawning.Spawner>.Current
			{
				[Token(Token = "0x6003191")]
				[Address(RVA = "0x1413318", Offset = "0x1413318", VA = "0x1413318", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000696")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003193")]
				[Address(RVA = "0x1413380", Offset = "0x1413380", VA = "0x1413380", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600318E")]
			[Address(RVA = "0x14130F4", Offset = "0x14130F4", VA = "0x14130F4")]
			[DebuggerHidden]
			public <GetEnumerator>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600318F")]
			[Address(RVA = "0x14132FC", Offset = "0x14132FC", VA = "0x14132FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003190")]
			[Address(RVA = "0x1413300", Offset = "0x1413300", VA = "0x1413300", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003192")]
			[Address(RVA = "0x1413320", Offset = "0x1413320", VA = "0x1413320", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly Color availableColor;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly Color unavailableColor;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly Color highlightColor;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal static readonly Color selectedColor;

		[Token(Token = "0x400150D")]
		protected const int sharedBufferSize = 256;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected static Collider[] sharedColliderBuffer;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected static Collider2D[] sharedCollider2DBuffer;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41858", Offset = "0xA41858")]
		protected bool is2DSpawner;

		[Token(Token = "0x17000115")]
		public virtual bool Is2DSpawner
		{
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0x1413080", Offset = "0x1413080", VA = "0x1413080", Slot = "17")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x1413088", Offset = "0x1413088", VA = "0x1413088", Slot = "18")]
			set
			{
			}
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x1413094", Offset = "0x1413094", VA = "0x1413094", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57EB0", Offset = "0xA57EB0")]
		public override IEnumerator<Spawner> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x1413120", Offset = "0x1413120", VA = "0x1413120")]
		protected EndPointSpawner()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public interface ISpawnEventReceiver
	{
		[Token(Token = "0x60014C6")]
		void OnSpawned(SpawnLocation location);
	}
	[Serializable]
	[Token(Token = "0x20002F9")]
	public class PrefabSpawnableItemProvider : SpawnableItemProvider
	{
		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public GameObject prefab;

		[Token(Token = "0x17000116")]
		public override bool IsAssigned
		{
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x1413388", Offset = "0x1413388", VA = "0x1413388", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000117")]
		public override string ItemName
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x14133F8", Offset = "0x14133F8", VA = "0x14133F8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		public override string ItemTag
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x1413498", Offset = "0x1413498", VA = "0x1413498", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x1413538", Offset = "0x1413538", VA = "0x1413538", Slot = "7")]
		public override UnityEngine.Object CreateSpawnableInstance(SpawnLocation spawnLocation, SpawnRotationApplyMode applyRotation)
		{
			return null;
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x1413A48", Offset = "0x1413A48", VA = "0x1413A48", Slot = "8")]
		public override void DestroySpawnableInstance(UnityEngine.Object spawnableInstance)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x1413BFC", Offset = "0x1413BFC", VA = "0x1413BFC")]
		public PrefabSpawnableItemProvider()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public sealed class SpawnArea : EndPointSpawner
	{
		[Serializable]
		[Token(Token = "0x2000784")]
		private class SpawnAreaLocation
		{
			[Token(Token = "0x4002CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpawnLocation location;

			[Token(Token = "0x4002CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 localOffest;

			[Token(Token = "0x4002CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[HideInInspector]
			public bool isOccupied;

			[Token(Token = "0x6003194")]
			[Address(RVA = "0x1415E9C", Offset = "0x1415E9C", VA = "0x1415E9C")]
			public SpawnAreaLocation()
			{
			}
		}

		[Token(Token = "0x2000785")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37084", Offset = "0xA37084")]
		private sealed class <GetEnumerator>d__52 : IEnumerator<Spawner>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Spawner <>2__current;

			[Token(Token = "0x17000697")]
			private Spawner System.Collections.Generic.IEnumerator<UltimateSpawner.Spawning.Spawner>.Current
			{
				[Token(Token = "0x6003198")]
				[Address(RVA = "0x14164A4", Offset = "0x14164A4", VA = "0x14164A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000698")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600319A")]
				[Address(RVA = "0x141650C", Offset = "0x141650C", VA = "0x141650C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003195")]
			[Address(RVA = "0x1415D3C", Offset = "0x1415D3C", VA = "0x1415D3C")]
			[DebuggerHidden]
			public <GetEnumerator>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6003196")]
			[Address(RVA = "0x1416488", Offset = "0x1416488", VA = "0x1416488", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003197")]
			[Address(RVA = "0x141648C", Offset = "0x141648C", VA = "0x141648C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003199")]
			[Address(RVA = "0x14164AC", Offset = "0x14164AC", VA = "0x14164AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private List<SpawnAreaLocation> spawnLocations;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Collider> colliding3D;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Collider2D> colliding2D;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Stack<Component> createdComponents;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA418EC", Offset = "0xA418EC")]
		[SerializeField]
		private bool isAboveGround;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41938", Offset = "0xA41938")]
		[SerializeField]
		private bool isStatic;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Vector2 size;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41994", Offset = "0xA41994")]
		[SerializeField]
		private float spawnRadius;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA419E0", Offset = "0xA419E0")]
		[SerializeField]
		private float ceilingHeight;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41A8C", Offset = "0xA41A8C")]
		[SerializeField]
		private OccupiedCheck occupiedCheck;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41AD8", Offset = "0xA41AD8")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA41AD8", Offset = "0xA41AD8")]
		public LayerMask collisionLayer;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA41B98", Offset = "0xA41B98")]
		public bool allowTriggerOccupiedChecks;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41C38", Offset = "0xA41C38")]
		public SpawnRotationApplyMode applyRotation;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int maxAvailableLocations;

		[Token(Token = "0x17000119")]
		public override bool Is2DSpawner
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x1413C0C", Offset = "0x1413C0C", VA = "0x1413C0C", Slot = "17")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x1413C14", Offset = "0x1413C14", VA = "0x1413C14", Slot = "18")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public bool IsAboveGround
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0x14144FC", Offset = "0x14144FC", VA = "0x14144FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x1414504", Offset = "0x1414504", VA = "0x1414504")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public bool IsStatic
		{
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0x1414510", Offset = "0x1414510", VA = "0x1414510")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x1414518", Offset = "0x1414518", VA = "0x1414518")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public Vector2 Size
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0x1414708", Offset = "0x1414708", VA = "0x1414708")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0x1414710", Offset = "0x1414710", VA = "0x1414710")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public float SpawnRadius
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0x1414738", Offset = "0x1414738", VA = "0x1414738")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x1414740", Offset = "0x1414740", VA = "0x1414740")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public float CeilingHeight
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x1414748", Offset = "0x1414748", VA = "0x1414748")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x1414750", Offset = "0x1414750", VA = "0x1414750")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public OccupiedCheck OccupiedCheck
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x1414758", Offset = "0x1414758", VA = "0x1414758")]
			get
			{
				return default(OccupiedCheck);
			}
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0x1414760", Offset = "0x1414760", VA = "0x1414760")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public override bool IsAvailable
		{
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0x1414768", Offset = "0x1414768", VA = "0x1414768", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000121")]
		public override int SpawnableItemCapacity
		{
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0x14147CC", Offset = "0x14147CC", VA = "0x14147CC", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000122")]
		[AttributeAttribute(Name = "SpawnerInfoAttribute", RVA = "0xA635EC", Offset = "0xA635EC")]
		public override int AvailableSpawnableItemCapacity
		{
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0x1414830", Offset = "0x1414830", VA = "0x1414830", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000123")]
		public Rect LocalPlane
		{
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0x1414948", Offset = "0x1414948", VA = "0x1414948")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x17000124")]
		public float SpawnDiameter
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0x14149A4", Offset = "0x14149A4", VA = "0x14149A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x14149B0", Offset = "0x14149B0", VA = "0x14149B0", Slot = "12")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x14149F0", Offset = "0x14149F0", VA = "0x14149F0")]
		public void Start()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x14154EC", Offset = "0x14154EC", VA = "0x14154EC")]
		public void Update()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x14154FC", Offset = "0x14154FC", VA = "0x14154FC", Slot = "13")]
		public override Transform Spawn([Optional] SpawnableItemRef itemRef)
		{
			return null;
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x14159D8", Offset = "0x14159D8", VA = "0x14159D8", Slot = "14")]
		public override bool Spawn(Transform toSpawn)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x1415C28", Offset = "0x1415C28", VA = "0x1415C28", Slot = "15")]
		public override SpawnLocation GetLocation()
		{
			return default(SpawnLocation);
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1415CDC", Offset = "0x1415CDC", VA = "0x1415CDC", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57F14", Offset = "0xA57F14")]
		public override IEnumerator<Spawner> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x14149F4", Offset = "0x14149F4", VA = "0x14149F4")]
		public void UpdateAvailableSpawnLocations()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x1414524", Offset = "0x1414524", VA = "0x1414524")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x1413C40", Offset = "0x1413C40", VA = "0x1413C40")]
		public void RebuildColliders()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x1413EE8", Offset = "0x1413EE8", VA = "0x1413EE8")]
		public void RebuildSpawnLocations()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x1415F14", Offset = "0x1415F14", VA = "0x1415F14")]
		public void RandomizeLocations()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x1416070", Offset = "0x1416070", VA = "0x1416070")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x141611C", Offset = "0x141611C", VA = "0x141611C")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x14161C8", Offset = "0x14161C8", VA = "0x14161C8")]
		public void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1416274", Offset = "0x1416274", VA = "0x1416274")]
		public void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x1414798", Offset = "0x1414798", VA = "0x1414798")]
		private bool IsOccupied()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1415634", Offset = "0x1415634", VA = "0x1415634")]
		private bool FindNextSpawnLocation(out SpawnLocation location)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x1415D68", Offset = "0x1415D68", VA = "0x1415D68")]
		private void SetAllSpawnLocationsOccupied(bool occupied)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x1416320", Offset = "0x1416320", VA = "0x1416320")]
		public SpawnArea()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class SpawnBounds : EndPointSpawner
	{
		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41C70", Offset = "0xA41C70")]
		public SpawnRotationApplyMode applyRotation;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SpawnRotationApplyMode applyRandomRotation;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Bounds spawnBounds;

		[Token(Token = "0x17000125")]
		public override bool IsAvailable
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x1416514", Offset = "0x1416514", VA = "0x1416514", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000126")]
		public override int SpawnableItemCapacity
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0x141651C", Offset = "0x141651C", VA = "0x141651C", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000127")]
		public override int AvailableSpawnableItemCapacity
		{
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0x1416524", Offset = "0x1416524", VA = "0x1416524", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x141652C", Offset = "0x141652C", VA = "0x141652C", Slot = "13")]
		public override Transform Spawn([Optional] SpawnableItemRef itemRef)
		{
			return null;
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x1416694", Offset = "0x1416694", VA = "0x1416694", Slot = "14")]
		public override bool Spawn(Transform toSpawn)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x1416774", Offset = "0x1416774", VA = "0x1416774", Slot = "15")]
		public override SpawnLocation GetLocation()
		{
			return default(SpawnLocation);
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x1416BC4", Offset = "0x1416BC4", VA = "0x1416BC4")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x1416CB0", Offset = "0x1416CB0", VA = "0x1416CB0")]
		public SpawnBounds()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class SpawnColliderBounds : EndPointSpawner
	{
		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider collider3D;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41CA8", Offset = "0xA41CA8")]
		public SpawnRotationApplyMode applyRotation;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SpawnRotationApplyMode applyRandomRotation;

		[Token(Token = "0x17000128")]
		public override bool IsAvailable
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x1416DB0", Offset = "0x1416DB0", VA = "0x1416DB0", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000129")]
		public override int SpawnableItemCapacity
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x1416DB8", Offset = "0x1416DB8", VA = "0x1416DB8", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700012A")]
		public override int AvailableSpawnableItemCapacity
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x1416DC0", Offset = "0x1416DC0", VA = "0x1416DC0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x1416DC8", Offset = "0x1416DC8", VA = "0x1416DC8", Slot = "12")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x1416F10", Offset = "0x1416F10", VA = "0x1416F10", Slot = "13")]
		public override Transform Spawn([Optional] SpawnableItemRef itemRef)
		{
			return null;
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x1417078", Offset = "0x1417078", VA = "0x1417078", Slot = "14")]
		public override bool Spawn(Transform toSpawn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x1417158", Offset = "0x1417158", VA = "0x1417158", Slot = "15")]
		public override SpawnLocation GetLocation()
		{
			return default(SpawnLocation);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x1417438", Offset = "0x1417438", VA = "0x1417438")]
		public SpawnColliderBounds()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public enum SpawnRotationApplyMode
	{
		[Token(Token = "0x4001527")]
		NoRotation,
		[Token(Token = "0x4001528")]
		FullRotation,
		[Token(Token = "0x4001529")]
		YRotation,
		[Token(Token = "0x400152A")]
		ZRotation
	}
	[Serializable]
	[Token(Token = "0x20002FE")]
	public struct SpawnLocation
	{
		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private bool isValid;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		[HideInInspector]
		private Spawner owner;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		private Vector3 spawnPosition;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[HideInInspector]
		private Quaternion spawnRotation;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SpawnLocation invalid;

		[Token(Token = "0x1700012B")]
		public bool IsValid
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0xB90888", Offset = "0xB90888", VA = "0xB90888")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012C")]
		public Spawner Owner
		{
			[Token(Token = "0x6001505")]
			[Address(RVA = "0xB90890", Offset = "0xB90890", VA = "0xB90890")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		public Vector3 SpawnPosition
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0xB90898", Offset = "0xB90898", VA = "0xB90898")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001507")]
			[Address(RVA = "0xB908A4", Offset = "0xB908A4", VA = "0xB908A4")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public Quaternion SpawnRotation
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0xB908B0", Offset = "0xB908B0", VA = "0xB908B0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001509")]
			[Address(RVA = "0xB908BC", Offset = "0xB908BC", VA = "0xB908BC")]
			internal set
			{
			}
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xB908C8", Offset = "0xB908C8", VA = "0xB908C8")]
		internal SpawnLocation(Spawner owner, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xB908E8", Offset = "0xB908E8", VA = "0xB908E8")]
		public bool Spawn(Transform toSpawn, SpawnRotationApplyMode applyRotation = SpawnRotationApplyMode.FullRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xB908F0", Offset = "0xB908F0", VA = "0xB908F0")]
		public void Update(Vector3 targetPosition, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xB90904", Offset = "0xB90904", VA = "0xB90904")]
		public Quaternion GetSpawnRotation(SpawnRotationApplyMode applyMode)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x20002FF")]
	public enum SpawnNavMeshMode
	{
		[Token(Token = "0x4001531")]
		Random,
		[Token(Token = "0x4001532")]
		NearestTargetRanged,
		[Token(Token = "0x4001533")]
		NearestTargetWithTagRanged,
		[Token(Token = "0x4001534")]
		NearestTargetMaximum,
		[Token(Token = "0x4001535")]
		NearestTargetWithTagMaximum,
		[Token(Token = "0x4001536")]
		FurthestTargetRanged,
		[Token(Token = "0x4001537")]
		FurthestTargetWithTagRanged,
		[Token(Token = "0x4001538")]
		FurthestTargetMaximum,
		[Token(Token = "0x4001539")]
		FurthestTargetWithTagMaximum,
		[Token(Token = "0x400153A")]
		RandomTargetRanged,
		[Token(Token = "0x400153B")]
		RandomTargetWithTagRanged,
		[Token(Token = "0x400153C")]
		RandomTargetMaximum,
		[Token(Token = "0x400153D")]
		RandomTargetWithTagMaximum
	}
	[Token(Token = "0x2000300")]
	public sealed class SpawnNavMesh : EndPointSpawner
	{
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Bounds navMeshBounds;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 navMeshOffset;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float navMeshRange;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool isAboveGround;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SpawnRotationApplyMode applyRandomRotation;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41DC0", Offset = "0xA41DC0")]
		public OccupiedCheck occupiedCheck;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA41DF8", Offset = "0xA41DF8")]
		public float spawnRadius;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA41E98", Offset = "0xA41E98")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA41E98", Offset = "0xA41E98")]
		public LayerMask collisionLayer;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA41F5C", Offset = "0xA41F5C")]
		public int maxSearchAttemptsPerFrame;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA41FFC", Offset = "0xA41FFC")]
		public bool allowTriggerOccupiedChecks;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SpawnNavMeshMode navMeshMode;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "DisplayConditionMethodAttribute", RVA = "0xA4209C", Offset = "0xA4209C")]
		public float maxDistanceToTarget;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "DisplayConditionMethodAttribute", RVA = "0xA420DC", Offset = "0xA420DC")]
		public float minDistanceFromTarget;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string spawnerTargetTag;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float navMeshEdgeFactor;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[NavMeshArea]
		public int areaMask;

		[Token(Token = "0x1700012F")]
		public override bool IsAvailable
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x14174E8", Offset = "0x14174E8", VA = "0x14174E8", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000130")]
		public override int SpawnableItemCapacity
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x14174F0", Offset = "0x14174F0", VA = "0x14174F0", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000131")]
		public override int AvailableSpawnableItemCapacity
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x14174F8", Offset = "0x14174F8", VA = "0x14174F8", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000132")]
		public int AreaMaskValue
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x1417500", Offset = "0x1417500", VA = "0x1417500")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x1417518", Offset = "0x1417518", VA = "0x1417518", Slot = "12")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x141794C", Offset = "0x141794C", VA = "0x141794C", Slot = "13")]
		public override Transform Spawn([Optional] SpawnableItemRef itemRef)
		{
			return null;
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1417AB4", Offset = "0x1417AB4", VA = "0x1417AB4", Slot = "14")]
		public override bool Spawn(Transform toSpawn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1417B94", Offset = "0x1417B94", VA = "0x1417B94", Slot = "15")]
		public override SpawnLocation GetLocation()
		{
			return default(SpawnLocation);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x141753C", Offset = "0x141753C", VA = "0x141753C")]
		public void RebuildBounds()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x14181A4", Offset = "0x14181A4", VA = "0x14181A4")]
		public bool IsOccupied(Vector3 navMeshPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x1417E58", Offset = "0x1417E58", VA = "0x1417E58")]
		private Vector3 GetSampleLocation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x14184B8", Offset = "0x14184B8", VA = "0x14184B8")]
		private SpawnerTarget GetTarget()
		{
			return null;
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1418664", Offset = "0x1418664", VA = "0x1418664")]
		private bool IsSpawnModeRangedOrMaximum()
		{
			return default(bool);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x14188CC", Offset = "0x14188CC", VA = "0x14188CC")]
		public bool IsSpawnModeDistanceBased()
		{
			return default(bool);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x14186B0", Offset = "0x14186B0", VA = "0x14186B0")]
		private bool IsSpawnModeTagged()
		{
			return default(bool);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x1418688", Offset = "0x1418688", VA = "0x1418688")]
		private bool IsSpawnModeRanged()
		{
			return default(bool);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x14188A4", Offset = "0x14188A4", VA = "0x14188A4")]
		private bool IsSpawnModeMaximum()
		{
			return default(bool);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x14186D4", Offset = "0x14186D4", VA = "0x14186D4")]
		private bool IsSpawnModeNearest()
		{
			return default(bool);
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x14186E8", Offset = "0x14186E8", VA = "0x14186E8")]
		private bool IsSpawnModeFurthest()
		{
			return default(bool);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x14186FC", Offset = "0x14186FC", VA = "0x14186FC")]
		private bool IsSpawnModeRandom()
		{
			return default(bool);
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x14188DC", Offset = "0x14188DC", VA = "0x14188DC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x141891C", Offset = "0x141891C", VA = "0x141891C")]
		public SpawnNavMesh()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public sealed class SpawnPoint : EndPointSpawner
	{
		[Token(Token = "0x2000786")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37094", Offset = "0xA37094")]
		private sealed class <GetEnumerator>d__39 : IEnumerator<Spawner>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Spawner <>2__current;

			[Token(Token = "0x17000699")]
			private Spawner System.Collections.Generic.IEnumerator<UltimateSpawner.Spawning.Spawner>.Current
			{
				[Token(Token = "0x600319E")]
				[Address(RVA = "0x14198C4", Offset = "0x14198C4", VA = "0x14198C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700069A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031A0")]
				[Address(RVA = "0x141992C", Offset = "0x141992C", VA = "0x141992C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600319B")]
			[Address(RVA = "0x14194C4", Offset = "0x14194C4", VA = "0x14194C4")]
			[DebuggerHidden]
			public <GetEnumerator>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x600319C")]
			[Address(RVA = "0x14198A8", Offset = "0x14198A8", VA = "0x14198A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600319D")]
			[Address(RVA = "0x14198AC", Offset = "0x14198AC", VA = "0x14198AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600319F")]
			[Address(RVA = "0x14198CC", Offset = "0x14198CC", VA = "0x14198CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private SpawnLocation location;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private HashSet<Collider> colliding3D;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HashSet<Collider2D> colliding2D;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Stack<Component> createdComponents;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA42164", Offset = "0xA42164")]
		[SerializeField]
		private bool isAboveGround;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA421B0", Offset = "0xA421B0")]
		[SerializeField]
		private bool isStatic;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA421FC", Offset = "0xA421FC")]
		[SerializeField]
		private float spawnRadius;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA42248", Offset = "0xA42248")]
		[SerializeField]
		private OccupiedCheck occupiedCheck;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA42294", Offset = "0xA42294")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA42294", Offset = "0xA42294")]
		public LayerMask collisionLayer;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA42354", Offset = "0xA42354")]
		public bool allowTriggerOccupiedChecks;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA423F4", Offset = "0xA423F4")]
		public SpawnRotationApplyMode applyRotation;

		[Token(Token = "0x17000133")]
		public override bool Is2DSpawner
		{
			[Token(Token = "0x6001525")]
			[Address(RVA = "0x14189C4", Offset = "0x14189C4", VA = "0x14189C4", Slot = "17")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001526")]
			[Address(RVA = "0x14189CC", Offset = "0x14189CC", VA = "0x14189CC", Slot = "18")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public bool IsAboveGround
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0x1418D74", Offset = "0x1418D74", VA = "0x1418D74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001528")]
			[Address(RVA = "0x1418D7C", Offset = "0x1418D7C", VA = "0x1418D7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public bool IsStatic
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0x1418D88", Offset = "0x1418D88", VA = "0x1418D88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600152A")]
			[Address(RVA = "0x1418D90", Offset = "0x1418D90", VA = "0x1418D90")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public float SpawnRadius
		{
			[Token(Token = "0x600152B")]
			[Address(RVA = "0x1418E04", Offset = "0x1418E04", VA = "0x1418E04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600152C")]
			[Address(RVA = "0x1418E0C", Offset = "0x1418E0C", VA = "0x1418E0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public OccupiedCheck OccupiedCheck
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x1418E14", Offset = "0x1418E14", VA = "0x1418E14")]
			get
			{
				return default(OccupiedCheck);
			}
			[Token(Token = "0x600152E")]
			[Address(RVA = "0x1418E1C", Offset = "0x1418E1C", VA = "0x1418E1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public override bool IsAvailable
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x1418E24", Offset = "0x1418E24", VA = "0x1418E24", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000139")]
		public override int SpawnableItemCapacity
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0x1419194", Offset = "0x1419194", VA = "0x1419194", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013A")]
		public override int AvailableSpawnableItemCapacity
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x141919C", Offset = "0x141919C", VA = "0x141919C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013B")]
		public Vector3 Center
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x14191BC", Offset = "0x14191BC", VA = "0x14191BC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1419200", Offset = "0x1419200", VA = "0x1419200", Slot = "12")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x14192C0", Offset = "0x14192C0", VA = "0x14192C0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x14192D0", Offset = "0x14192D0", VA = "0x14192D0", Slot = "13")]
		public override Transform Spawn([Optional] SpawnableItemRef itemRef)
		{
			return null;
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1419400", Offset = "0x1419400", VA = "0x1419400", Slot = "14")]
		public override bool Spawn(Transform toSpawn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1419450", Offset = "0x1419450", VA = "0x1419450", Slot = "15")]
		public override SpawnLocation GetLocation()
		{
			return default(SpawnLocation);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1419464", Offset = "0x1419464", VA = "0x1419464", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57F78", Offset = "0xA57F78")]
		public override IEnumerator<Spawner> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1418D9C", Offset = "0x1418D9C", VA = "0x1418D9C")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x14189D8", Offset = "0x14189D8", VA = "0x14189D8")]
		public void RebuildColliders()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x14194F0", Offset = "0x14194F0", VA = "0x14194F0")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x141959C", Offset = "0x141959C", VA = "0x141959C")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1419648", Offset = "0x1419648", VA = "0x1419648")]
		public void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x14196F4", Offset = "0x14196F4", VA = "0x14196F4")]
		public void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x1418E40", Offset = "0x1418E40", VA = "0x1418E40")]
		private bool IsOccupied()
		{
			return default(bool);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x14197A0", Offset = "0x14197A0", VA = "0x14197A0")]
		public SpawnPoint()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class SpawnTransform : EndPointSpawner
	{
		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4242C", Offset = "0xA4242C")]
		public SpawnRotationApplyMode applyRotation;

		[Token(Token = "0x1700013C")]
		public override bool IsAvailable
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x1419934", Offset = "0x1419934", VA = "0x1419934", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013D")]
		public override int SpawnableItemCapacity
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x141993C", Offset = "0x141993C", VA = "0x141993C", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013E")]
		public override int AvailableSpawnableItemCapacity
		{
			[Token(Token = "0x6001543")]
			[Address(RVA = "0x1419944", Offset = "0x1419944", VA = "0x1419944", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x141994C", Offset = "0x141994C", VA = "0x141994C", Slot = "13")]
		public override Transform Spawn([Optional] SpawnableItemRef itemRef)
		{
			return null;
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x1419A54", Offset = "0x1419A54", VA = "0x1419A54", Slot = "14")]
		public override bool Spawn(Transform toSpawn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x1419AC4", Offset = "0x1419AC4", VA = "0x1419AC4", Slot = "15")]
		public override SpawnLocation GetLocation()
		{
			return default(SpawnLocation);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x1419B54", Offset = "0x1419B54", VA = "0x1419B54")]
		public SpawnTransform()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public sealed class SpawnTriggerVolume : SpawnerGroup
	{
		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HashSet<Collider> colliding3D;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private HashSet<Collider2D> colliding2D;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[TagCollection]
		public string[] triggerTags;

		[Token(Token = "0x1700013F")]
		public override bool IsAvailable
		{
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x1419BC0", Offset = "0x1419BC0", VA = "0x1419BC0", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000140")]
		public override int AvailableSpawnableItemCapacity
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0x1419CD4", Offset = "0x1419CD4", VA = "0x1419CD4", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x1419DF0", Offset = "0x1419DF0", VA = "0x1419DF0")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x1419EB4", Offset = "0x1419EB4", VA = "0x1419EB4")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x1419F60", Offset = "0x1419F60", VA = "0x1419F60")]
		public void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x141A024", Offset = "0x141A024", VA = "0x141A024")]
		public void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x141A0D0", Offset = "0x141A0D0", VA = "0x141A0D0")]
		public SpawnTriggerVolume()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public sealed class SpawnableIdentity : MonoBehaviour, ISpawnEventReceiver, IDespawnEventReceiver
	{
		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpawnableItems spawnPool;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpawnableItem spawnMaster;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool destroyFlag;

		[Token(Token = "0x17000141")]
		public SpawnableItems SpawnPool
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0x141A25C", Offset = "0x141A25C", VA = "0x141A25C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		public SpawnableItem SpawnMaster
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0x141A264", Offset = "0x141A264", VA = "0x141A264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		public SpawnableItemProvider SpawnProvider
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x141A26C", Offset = "0x141A26C", VA = "0x141A26C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		public int SpawnItemID
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x141A288", Offset = "0x141A288", VA = "0x141A288")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000145")]
		public bool IsDestroyed
		{
			[Token(Token = "0x6001553")]
			[Address(RVA = "0x141A2A4", Offset = "0x141A2A4", VA = "0x141A2A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x141A2AC", Offset = "0x141A2AC", VA = "0x141A2AC", Slot = "4")]
		public void OnSpawned(SpawnLocation location)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x141A368", Offset = "0x141A368", VA = "0x141A368", Slot = "5")]
		public void OnDespawned()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x141A4CC", Offset = "0x141A4CC", VA = "0x141A4CC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x141A524", Offset = "0x141A524", VA = "0x141A524")]
		public static SpawnableIdentity AddObjectIdentity(GameObject go, SpawnableItems owner, SpawnableItem item)
		{
			return null;
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x141A69C", Offset = "0x141A69C", VA = "0x141A69C")]
		public SpawnableIdentity()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public sealed class SpawnableItemRef
	{
		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string name;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string tag;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int id;

		[Token(Token = "0x17000146")]
		public string Name
		{
			[Token(Token = "0x6001559")]
			[Address(RVA = "0x141AAC4", Offset = "0x141AAC4", VA = "0x141AAC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		public string Tag
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x141AACC", Offset = "0x141AACC", VA = "0x141AACC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		public int ID
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0x141AAD4", Offset = "0x141AAD4", VA = "0x141AAD4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000149")]
		public bool IsNamed
		{
			[Token(Token = "0x600155C")]
			[Address(RVA = "0x141AADC", Offset = "0x141AADC", VA = "0x141AADC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014A")]
		public bool IsTagged
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0x141AAEC", Offset = "0x141AAEC", VA = "0x141AAEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014B")]
		public bool IsID
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0x141AAFC", Offset = "0x141AAFC", VA = "0x141AAFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014C")]
		public bool IsValid
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x141AB0C", Offset = "0x141AB0C", VA = "0x141AB0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x141AB50", Offset = "0x141AB50", VA = "0x141AB50")]
		private SpawnableItemRef()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x141AB60", Offset = "0x141AB60", VA = "0x141AB60")]
		public static SpawnableItemRef WithName(string spawnableName)
		{
			return null;
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x141ABD4", Offset = "0x141ABD4", VA = "0x141ABD4")]
		public static SpawnableItemRef WithTag(string spawnableTag)
		{
			return null;
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x141AC48", Offset = "0x141AC48", VA = "0x141AC48")]
		public static SpawnableItemRef WithID(int spawnableID)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000306")]
	public class SpawnableItem
	{
		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SpawnedPool spawnedPool;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private int spawnableID;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnableItemProvider provider;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA424AC", Offset = "0xA424AC")]
		public float spawnChance;

		[Token(Token = "0x1700014D")]
		public int SpawnableID
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0x141A6A4", Offset = "0x141A6A4", VA = "0x141A6A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014E")]
		public bool IsSpawnable
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0x141A6AC", Offset = "0x141A6AC", VA = "0x141A6AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014F")]
		public SpawnedPool SpawnedItemPool
		{
			[Token(Token = "0x6001566")]
			[Address(RVA = "0x140FB68", Offset = "0x140FB68", VA = "0x140FB68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x141A7D8", Offset = "0x141A7D8", VA = "0x141A7D8")]
		public SpawnableItem(int id)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x141A814", Offset = "0x141A814", VA = "0x141A814")]
		public bool HasID(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x141A824", Offset = "0x141A824", VA = "0x141A824")]
		public bool HasName(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x141A8F4", Offset = "0x141A8F4", VA = "0x141A8F4")]
		public bool HasTag(string tag)
		{
			return default(bool);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x141A9C4", Offset = "0x141A9C4", VA = "0x141A9C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000307")]
	public abstract class SpawnableItemProvider : ScriptableObject
	{
		[Token(Token = "0x17000150")]
		public abstract bool IsAssigned
		{
			[Token(Token = "0x600156C")]
			get;
		}

		[Token(Token = "0x17000151")]
		public abstract string ItemName
		{
			[Token(Token = "0x600156D")]
			get;
		}

		[Token(Token = "0x17000152")]
		public virtual string ItemTag
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0x1413530", Offset = "0x1413530", VA = "0x1413530", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600156F")]
		public abstract UnityEngine.Object CreateSpawnableInstance(SpawnLocation spawnLocation, SpawnRotationApplyMode applyRotation);

		[Token(Token = "0x6001570")]
		public abstract void DestroySpawnableInstance(UnityEngine.Object spawnableInstance);

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x1413C04", Offset = "0x1413C04", VA = "0x1413C04")]
		protected SpawnableItemProvider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33660", Offset = "0xA33660")]
	public class SpawnableItems : ScriptableObject
	{
		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<SpawnableItem> cachedMaskedItems;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnableItem[] items;

		[Token(Token = "0x14000012")]
		public static event Action<Transform> OnSpawnedItemDestroyed
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x1412508", Offset = "0x1412508", VA = "0x1412508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA57FDC", Offset = "0xA57FDC")]
			add
			{
			}
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x14125BC", Offset = "0x14125BC", VA = "0x14125BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA57FEC", Offset = "0xA57FEC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x141ACBC", Offset = "0x141ACBC", VA = "0x141ACBC")]
		public List<SpawnableItem> FindMaskedSpawmableItems(SpawnableMask mask)
		{
			return null;
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x141289C", Offset = "0x141289C", VA = "0x141289C")]
		public SpawnableItem FindSpawnableItem(SpawnableItemRef itemRef, [Optional] SpawnableMask mask)
		{
			return null;
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x141AE1C", Offset = "0x141AE1C", VA = "0x141AE1C")]
		public SpawnableItem SelectSpawnableItem([Optional] SpawnableMask mask)
		{
			return null;
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x141B034", Offset = "0x141B034", VA = "0x141B034")]
		public Transform CreateSpawnableItem([Optional] SpawnableItemRef itemRef, [Optional] SpawnableMask mask, [Optional] SpawnLocation spawnLocation, SpawnRotationApplyMode applyRotation = SpawnRotationApplyMode.FullRotation)
		{
			return null;
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x141A458", Offset = "0x141A458", VA = "0x141A458")]
		public static void InformSpawnableDestroyed(Transform destroyedTransform)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x141B11C", Offset = "0x141B11C", VA = "0x141B11C")]
		private Transform CreateSpawnableInstance(SpawnableItem item, [Optional] SpawnLocation spawnLocation, SpawnRotationApplyMode applyRotation = SpawnRotationApplyMode.FullRotation)
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x141B324", Offset = "0x141B324", VA = "0x141B324")]
		public SpawnableItems()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000309")]
	public sealed class SpawnableMask
	{
		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SpawnableItems items;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpawnableMask parent;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool noMask;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<int> maskedItems;

		[Token(Token = "0x17000153")]
		public SpawnableItems SpawnableItems
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x141B3AC", Offset = "0x141B3AC", VA = "0x141B3AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600157C")]
			[Address(RVA = "0x141B3B4", Offset = "0x141B3B4", VA = "0x141B3B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public SpawnableMask Parent
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0x141B4AC", Offset = "0x141B4AC", VA = "0x141B4AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600157E")]
			[Address(RVA = "0x141B4B4", Offset = "0x141B4B4", VA = "0x141B4B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public bool NoMask
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0x141B4BC", Offset = "0x141B4BC", VA = "0x141B4BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001580")]
			[Address(RVA = "0x141B4C4", Offset = "0x141B4C4", VA = "0x141B4C4")]
			set
			{
			}
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x141B4D0", Offset = "0x141B4D0", VA = "0x141B4D0")]
		public void MaskItem(int spawnableID)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x141B568", Offset = "0x141B568", VA = "0x141B568")]
		public void UnmaskItem(int spawnableID)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x141B44C", Offset = "0x141B44C", VA = "0x141B44C")]
		public void ClearMask()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x141ADB4", Offset = "0x141ADB4", VA = "0x141ADB4")]
		public bool IsMasked(int spawnableID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x141B600", Offset = "0x141B600", VA = "0x141B600")]
		public SpawnableMask Combine(SpawnableMask other)
		{
			return null;
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x141B7DC", Offset = "0x141B7DC", VA = "0x141B7DC")]
		public SpawnableMask()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public sealed class SpawnedPool
	{
		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SpawnableItem spawnItem;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<SpawnableIdentity> spawnedItemInstances;

		[Token(Token = "0x17000156")]
		public SpawnableIdentity FirstSpawnableItemInstance
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x140FC24", Offset = "0x140FC24", VA = "0x140FC24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		public IList<SpawnableIdentity> SpawnedItemInstances
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x141B854", Offset = "0x141B854", VA = "0x141B854")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		public int SpawnedCount
		{
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x140FBD4", Offset = "0x140FBD4", VA = "0x140FBD4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x141A754", Offset = "0x141A754", VA = "0x141A754")]
		public SpawnedPool(SpawnableItem spawnItem)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x141B26C", Offset = "0x141B26C", VA = "0x141B26C")]
		public void AddSpawnedItem(SpawnableIdentity identity)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x141A3C0", Offset = "0x141A3C0", VA = "0x141A3C0")]
		public void RemoveSpawnedItem(SpawnableIdentity identity)
		{
		}
	}
	[Token(Token = "0x200030B")]
	[DisallowMultipleComponent]
	public abstract class Spawner : MonoBehaviour, IEnumerable<Spawner>, IEnumerable
	{
		[Token(Token = "0x2000787")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA370A4", Offset = "0xA370A4")]
		public sealed class SpawnerInfoAttribute : Attribute
		{
			[Token(Token = "0x4002CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string displayName;

			[Token(Token = "0x60031A1")]
			[Address(RVA = "0x141CA4C", Offset = "0x141CA4C", VA = "0x141CA4C")]
			public SpawnerInfoAttribute([Optional] string displayName)
			{
			}
		}

		[Token(Token = "0x4001570")]
		internal const string errorNoItems = "Spawner ({0}): Failed to create spawnable item - No items assigned";

		[Token(Token = "0x4001571")]
		internal const string errorNoItemsDefined = "Spawner ({0}): Failed to created spawnable item - No spawnabled items defined. Are all items masked?";

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Spawner parent;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Despawner> despawners;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA42514", Offset = "0xA42514")]
		public SpawnableItems spawnItems;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA42560", Offset = "0xA42560")]
		public SpawnableMask spawnMask;

		[Token(Token = "0x17000159")]
		public virtual Spawner Parent
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0x141B85C", Offset = "0x141B85C", VA = "0x141B85C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		public virtual SpawnableItems SpawnableItems
		{
			[Token(Token = "0x600158E")]
			[Address(RVA = "0x141B960", Offset = "0x141B960", VA = "0x141B960", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		public virtual SpawnableMask SpawnableMask
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x141BA1C", Offset = "0x141BA1C", VA = "0x141BA1C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		public IList<Despawner> Despawners
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x141BB14", Offset = "0x141BB14", VA = "0x141BB14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		[AttributeAttribute(Name = "SpawnerInfoAttribute", RVA = "0xA63624", Offset = "0xA63624")]
		public abstract bool IsAvailable
		{
			[Token(Token = "0x6001591")]
			get;
		}

		[Token(Token = "0x1700015E")]
		[AttributeAttribute(Name = "SpawnerInfoAttribute", RVA = "0xA6365C", Offset = "0xA6365C")]
		public abstract int SpawnableItemCapacity
		{
			[Token(Token = "0x6001592")]
			get;
		}

		[Token(Token = "0x1700015F")]
		public abstract int AvailableSpawnableItemCapacity
		{
			[Token(Token = "0x6001593")]
			get;
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x14149EC", Offset = "0x14149EC", VA = "0x14149EC", Slot = "12")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x1415840", Offset = "0x1415840", VA = "0x1415840")]
		public Transform CreateSpawnableItem([Optional] SpawnableItemRef itemRef, [Optional] SpawnLocation spawnLocation, SpawnRotationApplyMode applyRotation = SpawnRotationApplyMode.FullRotation)
		{
			return null;
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x141BE4C", Offset = "0x141BE4C", VA = "0x141BE4C")]
		public void ApplyDespawners(Transform applyTo)
		{
		}

		[Token(Token = "0x6001597")]
		public abstract Transform Spawn([Optional] SpawnableItemRef itemRef);

		[Token(Token = "0x6001598")]
		public abstract bool Spawn(Transform toSpawn);

		[Token(Token = "0x6001599")]
		public abstract SpawnLocation GetLocation();

		[Token(Token = "0x600159A")]
		public abstract IEnumerator<Spawner> GetEnumerator();

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x141B890", Offset = "0x141B890", VA = "0x141B890")]
		public void UpdateParent()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x141C19C", Offset = "0x141C19C", VA = "0x141C19C", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x141C1AC", Offset = "0x141C1AC", VA = "0x141C1AC")]
		public Spawner FindSpawnerWithName(string name)
		{
			return null;
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x141C49C", Offset = "0x141C49C", VA = "0x141C49C")]
		public Spawner FindSpawnerWithTag(string tag)
		{
			return null;
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x141C77C", Offset = "0x141C77C", VA = "0x141C77C")]
		public Spawner FindSpawnerWithID(int id)
		{
			return null;
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x1413124", Offset = "0x1413124", VA = "0x1413124")]
		protected Spawner()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public enum SpawnMode
	{
		[Token(Token = "0x4001577")]
		Random,
		[Token(Token = "0x4001578")]
		Sequential,
		[Token(Token = "0x4001579")]
		ReverseSequential,
		[Token(Token = "0x400157A")]
		AtIndex,
		[Token(Token = "0x400157B")]
		NearestTarget,
		[Token(Token = "0x400157C")]
		NearestTargetWithTag,
		[Token(Token = "0x400157D")]
		FarthestTarget,
		[Token(Token = "0x400157E")]
		FarthestTargetWithTag
	}
	[Token(Token = "0x200030D")]
	public class SpawnerGroup : Spawner
	{
		[Token(Token = "0x2000788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA370B8", Offset = "0xA370B8")]
		private sealed class <get_EndPointSpawners>d__16 : IEnumerable<Spawner>, IEnumerable, IEnumerator<Spawner>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Spawner <>2__current;

			[Token(Token = "0x4002CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SpawnerGroup <>4__this;

			[Token(Token = "0x4002CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Stack<Spawner> <state>5__2;

			[Token(Token = "0x4002CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Spawner <spawner>5__3;

			[Token(Token = "0x1700069B")]
			private Spawner System.Collections.Generic.IEnumerator<UltimateSpawner.Spawning.Spawner>.Current
			{
				[Token(Token = "0x60031A5")]
				[Address(RVA = "0x141E27C", Offset = "0x141E27C", VA = "0x141E27C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700069C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031A7")]
				[Address(RVA = "0x141E2E4", Offset = "0x141E2E4", VA = "0x141E2E4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031A2")]
			[Address(RVA = "0x141CE6C", Offset = "0x141CE6C", VA = "0x141CE6C")]
			[DebuggerHidden]
			public <get_EndPointSpawners>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60031A3")]
			[Address(RVA = "0x141DF5C", Offset = "0x141DF5C", VA = "0x141DF5C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031A4")]
			[Address(RVA = "0x141DF60", Offset = "0x141DF60", VA = "0x141DF60", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031A6")]
			[Address(RVA = "0x141E284", Offset = "0x141E284", VA = "0x141E284", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60031A8")]
			[Address(RVA = "0x141E2EC", Offset = "0x141E2EC", VA = "0x141E2EC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Spawner> System.Collections.Generic.IEnumerable<UltimateSpawner.Spawning.Spawner>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60031A9")]
			[Address(RVA = "0x141E398", Offset = "0x141E398", VA = "0x141E398", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000789")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA370C8", Offset = "0xA370C8")]
		private sealed class <GetEnumerator>d__21 : IEnumerator<Spawner>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Spawner <>2__current;

			[Token(Token = "0x4002D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpawnerGroup <>4__this;

			[Token(Token = "0x4002D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Spawner[] <>7__wrap1;

			[Token(Token = "0x4002D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x1700069D")]
			private Spawner System.Collections.Generic.IEnumerator<UltimateSpawner.Spawning.Spawner>.Current
			{
				[Token(Token = "0x60031AD")]
				[Address(RVA = "0x141DEEC", Offset = "0x141DEEC", VA = "0x141DEEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700069E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031AF")]
				[Address(RVA = "0x141DF54", Offset = "0x141DF54", VA = "0x141DF54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031AA")]
			[Address(RVA = "0x141D900", Offset = "0x141D900", VA = "0x141D900")]
			[DebuggerHidden]
			public <GetEnumerator>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60031AB")]
			[Address(RVA = "0x141DE30", Offset = "0x141DE30", VA = "0x141DE30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031AC")]
			[Address(RVA = "0x141DE34", Offset = "0x141DE34", VA = "0x141DE34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031AE")]
			[Address(RVA = "0x141DEF4", Offset = "0x141DEF4", VA = "0x141DEF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Spawner> cachedAvailableSpawners;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int currentSpawner;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Spawner[] spawners;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpawnMode spawnSelectionMode;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string spawnTargetTag;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA425AC", Offset = "0xA425AC")]
		[AttributeAttribute(Name = "DisplayConditionMethodAttribute", RVA = "0xA425AC", Offset = "0xA425AC")]
		public float targetProximityDeadzone;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA42614", Offset = "0xA42614")]
		public int spawnSelectionIndex;

		[Token(Token = "0x17000160")]
		public Spawner[] Spawners
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x141CA78", Offset = "0x141CA78", VA = "0x141CA78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		public override bool IsAvailable
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x1419C3C", Offset = "0x1419C3C", VA = "0x1419C3C", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000162")]
		public override int SpawnableItemCapacity
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x141CD48", Offset = "0x141CD48", VA = "0x141CD48", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000163")]
		[AttributeAttribute(Name = "SpawnerInfoAttribute", RVA = "0xA63694", Offset = "0xA63694")]
		public override int AvailableSpawnableItemCapacity
		{
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x1419D4C", Offset = "0x1419D4C", VA = "0x1419D4C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000164")]
		protected IEnumerable<Spawner> EndPointSpawners
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x141CDEC", Offset = "0x141CDEC", VA = "0x141CDEC")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA57FFC", Offset = "0xA57FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x141CEA4", Offset = "0x141CEA4", VA = "0x141CEA4", Slot = "12")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x141CEC8", Offset = "0x141CEC8", VA = "0x141CEC8", Slot = "13")]
		public override Transform Spawn([Optional] SpawnableItemRef itemRef)
		{
			return null;
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x141D6A0", Offset = "0x141D6A0", VA = "0x141D6A0", Slot = "14")]
		public override bool Spawn(Transform toSpawn)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x141D798", Offset = "0x141D798", VA = "0x141D798", Slot = "15")]
		public override SpawnLocation GetLocation()
		{
			return default(SpawnLocation);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x141D890", Offset = "0x141D890", VA = "0x141D890", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58060", Offset = "0xA58060")]
		public override IEnumerator<Spawner> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x141D92C", Offset = "0x141D92C", VA = "0x141D92C")]
		public bool HasValidEndPointSpawner()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x141D000", Offset = "0x141D000", VA = "0x141D000")]
		public Spawner FindNextSelectiveSpawner([Optional] SpawnableItemRef itemRef)
		{
			return null;
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x141DC10", Offset = "0x141DC10", VA = "0x141DC10")]
		public List<Spawner> FindAvailableSpawners([Optional] SpawnableItemRef itemRef)
		{
			return null;
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x141CA80", Offset = "0x141CA80", VA = "0x141CA80")]
		public void UpdateSpawners()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x141DDE8", Offset = "0x141DDE8", VA = "0x141DDE8")]
		public bool IsSelectionModeTargetBased()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x141DDFC", Offset = "0x141DDFC", VA = "0x141DDFC")]
		public bool IsSelectionModeTagBased()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x141DE1C", Offset = "0x141DE1C", VA = "0x141DE1C")]
		public bool IsSelectionModeNearestBased()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x141A1D8", Offset = "0x141A1D8", VA = "0x141A1D8")]
		public SpawnerGroup()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public sealed class SpawnerTarget : MonoBehaviour
	{
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<SpawnerTarget> allTargets;

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x141E39C", Offset = "0x141E39C", VA = "0x141E39C")]
		public void Awake()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x141E420", Offset = "0x141E420", VA = "0x141E420")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x1418710", Offset = "0x1418710", VA = "0x1418710")]
		public static SpawnerTarget FindRandomSpawnerTarget([Optional] string tag)
		{
			return null;
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x14104C4", Offset = "0x14104C4", VA = "0x14104C4")]
		public static SpawnerTarget FindNearestSpawnerTarget(Vector3 position, [Optional] string tag)
		{
			return null;
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x1410700", Offset = "0x1410700", VA = "0x1410700")]
		public static SpawnerTarget FindFarthestSpawnerTarget(Vector3 position, [Optional] string tag)
		{
			return null;
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x141E4A4", Offset = "0x141E4A4", VA = "0x141E4A4")]
		private static void GetEditorSpawnerTargets()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x141E5F4", Offset = "0x141E5F4", VA = "0x141E5F4")]
		public SpawnerTarget()
		{
		}
	}
}
namespace UltimateSpawner.Despawning
{
	[Token(Token = "0x200030F")]
	public class DespawnAfterAmount : Despawner
	{
		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxAllowedCount;

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x140FA18", Offset = "0x140FA18", VA = "0x140FA18")]
		public void Update()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x140FC98", Offset = "0x140FC98", VA = "0x140FC98", Slot = "6")]
		public override void CloneFrom(Despawner cloneFrom)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x140FD68", Offset = "0x140FD68", VA = "0x140FD68")]
		public DespawnAfterAmount()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class DespawnAfterTime : Despawner
	{
		[Token(Token = "0x200078A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA370D8", Offset = "0xA370D8")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DespawnAfterTime <>4__this;

			[Token(Token = "0x1700069F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031B3")]
				[Address(RVA = "0x14101C4", Offset = "0x14101C4", VA = "0x14101C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031B5")]
				[Address(RVA = "0x141022C", Offset = "0x141022C", VA = "0x141022C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031B0")]
			[Address(RVA = "0x140FE00", Offset = "0x140FE00", VA = "0x140FE00")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60031B1")]
			[Address(RVA = "0x140FF94", Offset = "0x140FF94", VA = "0x140FF94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031B2")]
			[Address(RVA = "0x140FF98", Offset = "0x140FF98", VA = "0x140FF98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031B4")]
			[Address(RVA = "0x14101CC", Offset = "0x14101CC", VA = "0x14101CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool waitForSpawn;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float despawnAfterTime;

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x140FD90", Offset = "0x140FD90", VA = "0x140FD90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA580C4", Offset = "0xA580C4")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x140FE2C", Offset = "0x140FE2C", VA = "0x140FE2C", Slot = "7")]
		public override void OnSpawned(SpawnLocation location)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x140FEA8", Offset = "0x140FEA8", VA = "0x140FEA8", Slot = "6")]
		public override void CloneFrom(Despawner cloneFrom)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x140FF78", Offset = "0x140FF78", VA = "0x140FF78")]
		public DespawnAfterTime()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public enum DespawnDistanceMode
	{
		[Token(Token = "0x400158B")]
		NearestTargetGreaterThan,
		[Token(Token = "0x400158C")]
		NearestTargetLessThan,
		[Token(Token = "0x400158D")]
		NearestTargetWithTagGreaterThan,
		[Token(Token = "0x400158E")]
		NearestTargetWithTagLessThan,
		[Token(Token = "0x400158F")]
		FurthestTargetGreaterThan,
		[Token(Token = "0x4001590")]
		FurthestTargetLessThan,
		[Token(Token = "0x4001591")]
		FurthestTargetWithTagGreaterThan,
		[Token(Token = "0x4001592")]
		FurthestTargetWithTagLessThan
	}
	[Token(Token = "0x2000312")]
	public class DespawnDistance : Despawner
	{
		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DespawnDistanceMode despawnMode;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float distance;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string despawnTargetTag;

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x1410234", Offset = "0x1410234", VA = "0x1410234")]
		public void Update()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x1410960", Offset = "0x1410960", VA = "0x1410960", Slot = "6")]
		public override void CloneFrom(Despawner cloneFrom)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x1410478", Offset = "0x1410478", VA = "0x1410478")]
		private bool IsTaggedCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x14104A0", Offset = "0x14104A0", VA = "0x14104A0")]
		private bool IsNearestTargetCondtiion()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x141093C", Offset = "0x141093C", VA = "0x141093C")]
		private bool IsNearestDistanceCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x1410A40", Offset = "0x1410A40", VA = "0x1410A40")]
		public DespawnDistance()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class DespawnOnCollision : Despawner
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool is2DDespawner;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask collisionLayer;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[TagCollection]
		public string[] collisionTags;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DespawnTarget despawnTarget;

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x1410A58", Offset = "0x1410A58", VA = "0x1410A58")]
		public void Reset()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x1410A68", Offset = "0x1410A68", VA = "0x1410A68")]
		public void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x1410B6C", Offset = "0x1410B6C", VA = "0x1410B6C")]
		public void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x1410AB4", Offset = "0x1410AB4", VA = "0x1410AB4")]
		public void OnCollisionEvent(GameObject other)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x1410E60", Offset = "0x1410E60", VA = "0x1410E60", Slot = "6")]
		public override void CloneFrom(Despawner cloneFrom)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x1410F78", Offset = "0x1410F78", VA = "0x1410F78")]
		public DespawnOnCollision()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class DespawnOnEvent : Despawner
	{
		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x1410FB4", Offset = "0x1410FB4", VA = "0x1410FB4")]
		public void DespawnItem()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x1410FF8", Offset = "0x1410FF8", VA = "0x1410FF8", Slot = "6")]
		public override void CloneFrom(Despawner cloneFrom)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x1410FFC", Offset = "0x1410FFC", VA = "0x1410FFC")]
		public DespawnOnEvent()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class DespawnOnTrigger : Despawner
	{
		[Token(Token = "0x200078B")]
		public enum TriggerEvent
		{
			[Token(Token = "0x4002D07")]
			Enter,
			[Token(Token = "0x4002D08")]
			Exit
		}

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool is2DSpawner;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TriggerEvent triggerEvent;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask triggerLayer;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[TagCollection]
		public string[] triggerTags;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DespawnTarget despawnTarget;

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x141100C", Offset = "0x141100C", VA = "0x141100C")]
		public void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x1411118", Offset = "0x1411118", VA = "0x1411118")]
		public void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x141116C", Offset = "0x141116C", VA = "0x141116C")]
		public void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x14111C4", Offset = "0x14111C4", VA = "0x14111C4")]
		public void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x1411060", Offset = "0x1411060", VA = "0x1411060")]
		public void OnTriggerEvent(GameObject other)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x141121C", Offset = "0x141121C", VA = "0x141121C", Slot = "6")]
		public override void CloneFrom(Despawner cloneFrom)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x141133C", Offset = "0x141133C", VA = "0x141133C")]
		public DespawnOnTrigger()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public enum DespawnTarget
	{
		[Token(Token = "0x40015A0")]
		ThisObject,
		[Token(Token = "0x40015A1")]
		OtherObject
	}
	[Token(Token = "0x2000317")]
	public abstract class Despawner : MonoBehaviour, ISpawnEventReceiver
	{
		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isDespawned;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isDespawnConditionMet;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		[HideInInspector]
		private bool applyDespawnerToSpawnedItems;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected SpawnableIdentity spawnItemIdentity;

		[Token(Token = "0x17000165")]
		public virtual bool IsDespawnConditionMet
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0x1411378", Offset = "0x1411378", VA = "0x1411378", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000166")]
		public bool ApplyDespawnerToSpawnedItems
		{
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0x1411380", Offset = "0x1411380", VA = "0x1411380")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0x1411388", Offset = "0x1411388", VA = "0x1411388")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public bool ShouldAllowDespawn
		{
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0x1410104", Offset = "0x1410104", VA = "0x1410104")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015DC")]
		public abstract void CloneFrom(Despawner cloneFrom);

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x140FE50", Offset = "0x140FE50", VA = "0x140FE50", Slot = "7")]
		public virtual void OnSpawned(SpawnLocation location)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x140FC8C", Offset = "0x140FC8C", VA = "0x140FC8C")]
		protected void MarkDespawnConditionAsMet()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x1411394", Offset = "0x1411394", VA = "0x1411394", Slot = "8")]
		protected virtual void Despawn()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x140FD80", Offset = "0x140FD80", VA = "0x140FD80")]
		protected Despawner()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public interface IDespawnEventReceiver
	{
		[Token(Token = "0x60015E1")]
		void OnDespawned();
	}
}
namespace UltimateSpawner.Waves
{
	[Token(Token = "0x2000319")]
	public enum WaveConditionType
	{
		[Token(Token = "0x40015A7")]
		ItemsSpawnedTotal,
		[Token(Token = "0x40015A8")]
		ItemsSpawned,
		[Token(Token = "0x40015A9")]
		ItemsAlive,
		[Token(Token = "0x40015AA")]
		ItemsDestroyed,
		[Token(Token = "0x40015AB")]
		ItemsDestroyedTotal,
		[Token(Token = "0x40015AC")]
		CurrentWaveNumber,
		[Token(Token = "0x40015AD")]
		IntParameter,
		[Token(Token = "0x40015AE")]
		FloatParameter,
		[Token(Token = "0x40015AF")]
		BoolParameter
	}
	[Token(Token = "0x200031A")]
	public enum WaveConditionOperator
	{
		[Token(Token = "0x40015B1")]
		Equals,
		[Token(Token = "0x40015B2")]
		NotEquals,
		[Token(Token = "0x40015B3")]
		GreaterThan,
		[Token(Token = "0x40015B4")]
		GreaterThanOrEqual,
		[Token(Token = "0x40015B5")]
		LessThan,
		[Token(Token = "0x40015B6")]
		LessThanOrEqual,
		[Token(Token = "0x40015B7")]
		Modulus,
		[Token(Token = "0x40015B8")]
		InverseModulus
	}
	[Serializable]
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA336BC", Offset = "0xA336BC")]
	public class WaveConditionNode : WaveNode
	{
		[Token(Token = "0x200078C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA370E8", Offset = "0xA370E8")]
		private sealed class <Evaluate>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveSpawnController controller;

			[Token(Token = "0x4002D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaveConditionNode <>4__this;

			[Token(Token = "0x170006A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031B9")]
				[Address(RVA = "0x14D5E24", Offset = "0x14D5E24", VA = "0x14D5E24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031BB")]
				[Address(RVA = "0x14D5E8C", Offset = "0x14D5E8C", VA = "0x14D5E8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031B6")]
			[Address(RVA = "0x14D564C", Offset = "0x14D564C", VA = "0x14D564C")]
			[DebuggerHidden]
			public <Evaluate>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60031B7")]
			[Address(RVA = "0x14D5978", Offset = "0x14D5978", VA = "0x14D5978", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031B8")]
			[Address(RVA = "0x14D597C", Offset = "0x14D597C", VA = "0x14D597C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031BA")]
			[Address(RVA = "0x14D5E2C", Offset = "0x14D5E2C", VA = "0x14D5E2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015B9")]
		public const string truePortName = "True";

		[Token(Token = "0x40015BA")]
		public const string falsePortName = "False";

		[Token(Token = "0x40015BB")]
		public const string valuePortName = "value";

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA4270C", Offset = "0xA4270C")]
		public WaveNode In;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA42720", Offset = "0xA42720")]
		public WaveNode True;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA42734", Offset = "0xA42734")]
		public WaveNode False;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WaveConditionType condition;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "DisplayConditionMethodAttribute", RVA = "0xA42748", Offset = "0xA42748")]
		public string parameterName;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public WaveConditionOperator operand;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA42788", Offset = "0xA42788")]
		[AttributeAttribute(Name = "DisplayConditionMethodAttribute", RVA = "0xA42788", Offset = "0xA42788")]
		public int value;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA427E0", Offset = "0xA427E0")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA427E0", Offset = "0xA427E0")]
		public float valueFloat;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA42894", Offset = "0xA42894")]
		public bool valueBool;

		[Token(Token = "0x17000168")]
		public override int NodeWidth
		{
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0x14D5568", Offset = "0x14D5568", VA = "0x14D5568", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000169")]
		public override int NodeLabelWidth
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0x14D5578", Offset = "0x14D5578", VA = "0x14D5578", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016A")]
		public override string NodeDisplayName
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0x14D5588", Offset = "0x14D5588", VA = "0x14D5588", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x14D55D0", Offset = "0x14D55D0", VA = "0x14D55D0", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58128", Offset = "0xA58128")]
		public override IEnumerator Evaluate(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x14D5678", Offset = "0x14D5678", VA = "0x14D5678", Slot = "15")]
		public override WaveNode GetConnectedOutNode()
		{
			return null;
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x14D56D4", Offset = "0x14D56D4", VA = "0x14D56D4")]
		private bool IsParameter()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x14D56F8", Offset = "0x14D56F8", VA = "0x14D56F8")]
		private bool IsNotFloatOrBoolParameter()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x14D570C", Offset = "0x14D570C", VA = "0x14D570C")]
		internal static double GetInputValue(WaveSpawnController controller, WaveConditionType condition, string parameterName)
		{
			return default(double);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x14D5810", Offset = "0x14D5810", VA = "0x14D5810")]
		internal static bool IsConditionMet(double inputValue, double value, WaveConditionOperator operand, bool isParameter)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x14D5968", Offset = "0x14D5968", VA = "0x14D5968")]
		public WaveConditionNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA336F4", Offset = "0xA336F4")]
	public sealed class WaveConfiguration : NodeGraph
	{
		[Token(Token = "0x200078D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA370F8", Offset = "0xA370F8")]
		private sealed class <GetConnectedNodesOfType>d__5<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable where T : WaveNode
		{
			[Token(Token = "0x4002D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4002D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WaveConfiguration <>4__this;

			[Token(Token = "0x4002D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<WaveNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170006A3")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x60031C0")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031C2")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031BC")]
			[DebuggerHidden]
			public <GetConnectedNodesOfType>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60031BD")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031BE")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031BF")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60031C1")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60031C3")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60031C4")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<WaveNode> sharedNodes;

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x14D5E94", Offset = "0x14D5E94", VA = "0x14D5E94")]
		internal WaveConfiguration()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x14D5E9C", Offset = "0x14D5E9C", VA = "0x14D5E9C")]
		public WaveStartNode GetStartNode()
		{
			return null;
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x14D5FA8", Offset = "0x14D5FA8", VA = "0x14D5FA8")]
		public WaveParameterNode GetParameterNode()
		{
			return null;
		}

		[Token(Token = "0x60015EF")]
		public int GetConnectedNodeCountOfType<T>() where T : WaveNode
		{
			return default(int);
		}

		[Token(Token = "0x60015F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5818C", Offset = "0xA5818C")]
		public IEnumerable<T> GetConnectedNodesOfType<T>() where T : WaveNode
		{
			return null;
		}

		[Token(Token = "0x60015F1")]
		public void GetConnectedNodesOfType<T>(WaveNode parent, IList<WaveNode> result) where T : WaveNode
		{
		}

		[Token(Token = "0x60015F2")]
		public void GetConnectedNodesOfTypeForPort<T>(WaveNode parent, string portName, IList<WaveNode> result) where T : WaveNode
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "NodeTint", RVA = "0xA33740", Offset = "0xA33740")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA33740", Offset = "0xA33740")]
	public sealed class WaveDelayNode : WaveNode
	{
		[Token(Token = "0x200078E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37108", Offset = "0xA37108")]
		private sealed class <Evaluate>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveSpawnController controller;

			[Token(Token = "0x4002D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaveDelayNode <>4__this;

			[Token(Token = "0x170006A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031C8")]
				[Address(RVA = "0x14D6350", Offset = "0x14D6350", VA = "0x14D6350", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031CA")]
				[Address(RVA = "0x14D63B8", Offset = "0x14D63B8", VA = "0x14D63B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031C5")]
			[Address(RVA = "0x14D6218", Offset = "0x14D6218", VA = "0x14D6218")]
			[DebuggerHidden]
			public <Evaluate>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60031C6")]
			[Address(RVA = "0x14D6254", Offset = "0x14D6254", VA = "0x14D6254", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031C7")]
			[Address(RVA = "0x14D6258", Offset = "0x14D6258", VA = "0x14D6258", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031C9")]
			[Address(RVA = "0x14D6358", Offset = "0x14D6358", VA = "0x14D6358", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA42934", Offset = "0xA42934")]
		public WaveNode In;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA42948", Offset = "0xA42948")]
		public WaveNode Out;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4295C", Offset = "0xA4295C")]
		public float delay;

		[Token(Token = "0x1700016B")]
		public override int NodeWidth
		{
			[Token(Token = "0x60015F4")]
			[Address(RVA = "0x14D6144", Offset = "0x14D6144", VA = "0x14D6144", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016C")]
		public override int NodeLabelWidth
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0x14D614C", Offset = "0x14D614C", VA = "0x14D614C", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016D")]
		public override string NodeDisplayName
		{
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0x14D6154", Offset = "0x14D6154", VA = "0x14D6154", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x14D619C", Offset = "0x14D619C", VA = "0x14D619C", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA581F0", Offset = "0xA581F0")]
		public override IEnumerator Evaluate(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x14D6244", Offset = "0x14D6244", VA = "0x14D6244")]
		public WaveDelayNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA33798", Offset = "0xA33798")]
	public class WaveEventNode : WaveNode
	{
		[Token(Token = "0x200078F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37118", Offset = "0xA37118")]
		private sealed class <Evaluate>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveSpawnController controller;

			[Token(Token = "0x4002D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaveEventNode <>4__this;

			[Token(Token = "0x170006A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031CE")]
				[Address(RVA = "0x14D6680", Offset = "0x14D6680", VA = "0x14D6680", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031D0")]
				[Address(RVA = "0x14D66E8", Offset = "0x14D66E8", VA = "0x14D66E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031CB")]
			[Address(RVA = "0x14D6494", Offset = "0x14D6494", VA = "0x14D6494")]
			[DebuggerHidden]
			public <Evaluate>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60031CC")]
			[Address(RVA = "0x14D64C8", Offset = "0x14D64C8", VA = "0x14D64C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031CD")]
			[Address(RVA = "0x14D64CC", Offset = "0x14D64CC", VA = "0x14D64CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031CF")]
			[Address(RVA = "0x14D6688", Offset = "0x14D6688", VA = "0x14D6688", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA42994", Offset = "0xA42994")]
		public WaveNode In;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA429A8", Offset = "0xA429A8")]
		public WaveNode Out;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA429BC", Offset = "0xA429BC")]
		public string eventArgs;

		[Token(Token = "0x1700016E")]
		public override int NodeWidth
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0x14D63C0", Offset = "0x14D63C0", VA = "0x14D63C0", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016F")]
		public override int NodeLabelWidth
		{
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0x14D63C8", Offset = "0x14D63C8", VA = "0x14D63C8", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000170")]
		public override string NodeDisplayName
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0x14D63D0", Offset = "0x14D63D0", VA = "0x14D63D0", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x14D6418", Offset = "0x14D6418", VA = "0x14D6418", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58254", Offset = "0xA58254")]
		public override IEnumerator Evaluate(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x14D64C0", Offset = "0x14D64C0", VA = "0x14D64C0")]
		public WaveEventNode()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public enum WaveLoopMode
	{
		[Token(Token = "0x40015CD")]
		Fixed,
		[Token(Token = "0x40015CE")]
		Infinite,
		[Token(Token = "0x40015CF")]
		Random
	}
	[Serializable]
	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "NodeTint", RVA = "0xA337D0", Offset = "0xA337D0")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA337D0", Offset = "0xA337D0")]
	public class WaveLoopNode : WaveNode
	{
		[Token(Token = "0x2000790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37128", Offset = "0xA37128")]
		private sealed class <Evaluate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveSpawnController controller;

			[Token(Token = "0x4002D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaveLoopNode <>4__this;

			[Token(Token = "0x170006A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031D4")]
				[Address(RVA = "0x14D6A34", Offset = "0x14D6A34", VA = "0x14D6A34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031D6")]
				[Address(RVA = "0x14D6A9C", Offset = "0x14D6A9C", VA = "0x14D6A9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031D1")]
			[Address(RVA = "0x14D684C", Offset = "0x14D684C", VA = "0x14D684C")]
			[DebuggerHidden]
			public <Evaluate>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60031D2")]
			[Address(RVA = "0x14D6888", Offset = "0x14D6888", VA = "0x14D6888", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031D3")]
			[Address(RVA = "0x14D688C", Offset = "0x14D688C", VA = "0x14D688C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031D5")]
			[Address(RVA = "0x14D6A3C", Offset = "0x14D6A3C", VA = "0x14D6A3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015D0")]
		internal const string infiniteLoopField = "infiniteLoop";

		[Token(Token = "0x40015D1")]
		internal const string loopCountField = "loopCount";

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int targetLoopCount;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int loopCounter;

		[Token(Token = "0x40015D4")]
		public const string loopChainPortName = "LoopChain";

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA429F4", Offset = "0xA429F4")]
		public WaveNode In;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA42A08", Offset = "0xA42A08")]
		public WaveNode Out;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA42A1C", Offset = "0xA42A1C")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA42A1C", Offset = "0xA42A1C")]
		public WaveNode LoopChain;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool infiniteLoop;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA42A6C", Offset = "0xA42A6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA42A6C", Offset = "0xA42A6C")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA42A6C", Offset = "0xA42A6C")]
		public int loopCount;

		[Token(Token = "0x17000171")]
		public override int NodeLabelWidth
		{
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x14D66F0", Offset = "0x14D66F0", VA = "0x14D66F0", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000172")]
		public override string NodeDisplayName
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x14D66F8", Offset = "0x14D66F8", VA = "0x14D66F8", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public bool ConditionMet
		{
			[Token(Token = "0x6001600")]
			[Address(RVA = "0x14D6740", Offset = "0x14D6740", VA = "0x14D6740")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x14D6760", Offset = "0x14D6760", VA = "0x14D6760", Slot = "14")]
		public override void OnGenerateWaveSession()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x14D67D0", Offset = "0x14D67D0", VA = "0x14D67D0", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA582B8", Offset = "0xA582B8")]
		public override IEnumerator Evaluate(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x14D6878", Offset = "0x14D6878", VA = "0x14D6878")]
		public WaveLoopNode()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public enum WaveContinueMode
	{
		[Token(Token = "0x40015DB")]
		Never,
		[Token(Token = "0x40015DC")]
		Instant,
		[Token(Token = "0x40015DD")]
		WhenAllDead,
		[Token(Token = "0x40015DE")]
		WhenAllSpawned
	}
	[Token(Token = "0x2000322")]
	public enum WaveCounterMode
	{
		[Token(Token = "0x40015E0")]
		OnWaveStart,
		[Token(Token = "0x40015E1")]
		OnWaveEnd
	}
	[Serializable]
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "NodeTint", RVA = "0xA33828", Offset = "0xA33828")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA33828", Offset = "0xA33828")]
	public sealed class WaveMasterNode : WaveSpawnNode
	{
		[Token(Token = "0x2000791")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37138", Offset = "0xA37138")]
		private sealed class <Evaluate>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveSpawnController controller;

			[Token(Token = "0x4002D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaveMasterNode <>4__this;

			[Token(Token = "0x4002D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Spawner <targetSpawner>5__2;

			[Token(Token = "0x4002D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SpawnableItemRef <targetItem>5__3;

			[Token(Token = "0x4002D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WaveState <nextWave>5__4;

			[Token(Token = "0x4002D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<SpawnedItem> <spawnedItems>5__5;

			[Token(Token = "0x4002D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <i>5__6;

			[Token(Token = "0x170006AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031DA")]
				[Address(RVA = "0x14D78F8", Offset = "0x14D78F8", VA = "0x14D78F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031DC")]
				[Address(RVA = "0x14D7960", Offset = "0x14D7960", VA = "0x14D7960", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031D7")]
			[Address(RVA = "0x14D6DB4", Offset = "0x14D6DB4", VA = "0x14D6DB4")]
			[DebuggerHidden]
			public <Evaluate>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60031D8")]
			[Address(RVA = "0x14D7110", Offset = "0x14D7110", VA = "0x14D7110", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031D9")]
			[Address(RVA = "0x14D7114", Offset = "0x14D7114", VA = "0x14D7114", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031DB")]
			[Address(RVA = "0x14D7900", Offset = "0x14D7900", VA = "0x14D7900", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000792")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37148", Offset = "0xA37148")]
		private sealed class <EvaluateSubRoutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveMasterNode <>4__this;

			[Token(Token = "0x4002D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator routine;

			[Token(Token = "0x4002D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public WaveSpawnController controller;

			[Token(Token = "0x170006AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031E0")]
				[Address(RVA = "0x14D7A3C", Offset = "0x14D7A3C", VA = "0x14D7A3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031E2")]
				[Address(RVA = "0x14D7AA4", Offset = "0x14D7AA4", VA = "0x14D7AA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031DD")]
			[Address(RVA = "0x14D6E64", Offset = "0x14D6E64", VA = "0x14D6E64")]
			[DebuggerHidden]
			public <EvaluateSubRoutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60031DE")]
			[Address(RVA = "0x14D7968", Offset = "0x14D7968", VA = "0x14D7968", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031DF")]
			[Address(RVA = "0x14D796C", Offset = "0x14D796C", VA = "0x14D796C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031E1")]
			[Address(RVA = "0x14D7A44", Offset = "0x14D7A44", VA = "0x14D7A44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private HashSet<IEnumerator> runningSubWaves;

		[Token(Token = "0x40015E3")]
		public const string subWavesPortName = "SubWaves";

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA42B40", Offset = "0xA42B40")]
		public WaveNode In;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA42B54", Offset = "0xA42B54")]
		public WaveNode Out;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA42B68", Offset = "0xA42B68")]
		public WaveSubNode SubWaves;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool advanceWaveCounter;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA42B7C", Offset = "0xA42B7C")]
		public WaveCounterMode waveCounterMode;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public WaveContinueMode continueMode;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA42C1C", Offset = "0xA42C1C")]
		public bool waitForItemSpawn;

		[Token(Token = "0x17000174")]
		public override string NodeDisplayName
		{
			[Token(Token = "0x6001604")]
			[Address(RVA = "0x14D6AA4", Offset = "0x14D6AA4", VA = "0x14D6AA4", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x14D6AEC", Offset = "0x14D6AEC", VA = "0x14D6AEC", Slot = "17")]
		public override bool CanConnectTo(NodePort from, NodePort to)
		{
			return default(bool);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x14D6CD4", Offset = "0x14D6CD4", VA = "0x14D6CD4", Slot = "18")]
		public override bool CanHaveMultipleConnections(NodePort from)
		{
			return default(bool);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x14D6D38", Offset = "0x14D6D38", VA = "0x14D6D38", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5831C", Offset = "0xA5831C")]
		public override IEnumerator Evaluate(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x14D6DE0", Offset = "0x14D6DE0", VA = "0x14D6DE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58380", Offset = "0xA58380")]
		private IEnumerator EvaluateSubRoutine(WaveSpawnController controller, IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x14D6E90", Offset = "0x14D6E90", VA = "0x14D6E90")]
		private WaveSubNode[] GetConnectedSubWaves()
		{
			return null;
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x14D7044", Offset = "0x14D7044", VA = "0x14D7044")]
		public WaveMasterNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000324")]
	public abstract class WaveNode : XNode.Node
	{
		[Token(Token = "0x40015EB")]
		public const string inputPortName = "In";

		[Token(Token = "0x40015EC")]
		public const string outputPortName = "Out";

		[Token(Token = "0x17000175")]
		public virtual int NodeWidth
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0x14D5570", Offset = "0x14D5570", VA = "0x14D5570", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000176")]
		public virtual int NodeLabelWidth
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0x14D5580", Offset = "0x14D5580", VA = "0x14D5580", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000177")]
		public virtual string NodeDisplayName
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0x14D7AAC", Offset = "0x14D7AAC", VA = "0x14D7AAC", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public bool IsInputConnected
		{
			[Token(Token = "0x600160E")]
			[Address(RVA = "0x14D7AD4", Offset = "0x14D7AD4", VA = "0x14D7AD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000179")]
		public NodePort InputPort
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0x14D7AF8", Offset = "0x14D7AF8", VA = "0x14D7AF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public bool HasInputPort
		{
			[Token(Token = "0x6001610")]
			[Address(RVA = "0x14D7B4C", Offset = "0x14D7B4C", VA = "0x14D7B4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017B")]
		public bool IsOutputConnected
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x14D7B68", Offset = "0x14D7B68", VA = "0x14D7B68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		public bool HasOutputPort
		{
			[Token(Token = "0x6001612")]
			[Address(RVA = "0x14D7BE0", Offset = "0x14D7BE0", VA = "0x14D7BE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017D")]
		public NodePort OutputPort
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x14D7B8C", Offset = "0x14D7B8C", VA = "0x14D7B8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x14D7BFC", Offset = "0x14D7BFC", VA = "0x14D7BFC", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6001615")]
		public abstract IEnumerator Evaluate(WaveSpawnController controller);

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x14D7C04", Offset = "0x14D7C04", VA = "0x14D7C04", Slot = "12")]
		public virtual IEnumerator EvaluateConnectedOutNode(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x14D7CCC", Offset = "0x14D7CCC", VA = "0x14D7CCC", Slot = "13")]
		public virtual IEnumerator EvaluateConnectedNode(WaveSpawnController controller, string portName)
		{
			return null;
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x14D7D9C", Offset = "0x14D7D9C", VA = "0x14D7D9C", Slot = "14")]
		public virtual void OnGenerateWaveSession()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x14D7DA0", Offset = "0x14D7DA0", VA = "0x14D7DA0", Slot = "5")]
		public override object GetValue(NodePort port)
		{
			return null;
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x14D634C", Offset = "0x14D634C", VA = "0x14D634C")]
		public bool IsConnectedOutNode()
		{
			return default(bool);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x14D5B70", Offset = "0x14D5B70", VA = "0x14D5B70")]
		public bool IsConnectedNode(string portName)
		{
			return default(bool);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x14D7DA8", Offset = "0x14D7DA8", VA = "0x14D7DA8", Slot = "15")]
		public virtual WaveNode GetConnectedOutNode()
		{
			return null;
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x14D7E54", Offset = "0x14D7E54", VA = "0x14D7E54", Slot = "16")]
		public virtual WaveNode GetConnectedNode(string portName)
		{
			return null;
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x14D6BD0", Offset = "0x14D6BD0", VA = "0x14D6BD0", Slot = "17")]
		public virtual bool CanConnectTo(NodePort from, NodePort to)
		{
			return default(bool);
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x14D6D30", Offset = "0x14D6D30", VA = "0x14D6D30", Slot = "18")]
		public virtual bool CanHaveMultipleConnections(NodePort from)
		{
			return default(bool);
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x14D814C", Offset = "0x14D814C", VA = "0x14D814C", Slot = "6")]
		public override void OnCreateConnection(NodePort from, NodePort to)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x14D8364", Offset = "0x14D8364", VA = "0x14D8364")]
		public WaveNode GetWaveNode(NodePort port)
		{
			return null;
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x14D452C", Offset = "0x14D452C", VA = "0x14D452C")]
		protected WaveNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA33880", Offset = "0xA33880")]
	public class WaveRandomizer : WaveNode
	{
		[Token(Token = "0x40015ED")]
		public const string intPortName = "Int";

		[Token(Token = "0x40015EE")]
		public const string floatPortName = "Float";

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA42C54", Offset = "0xA42C54")]
		public int Int;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA42C68", Offset = "0xA42C68")]
		public float Float;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minValue;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxValue;

		[Token(Token = "0x1700017E")]
		public override int NodeWidth
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0x14D8458", Offset = "0x14D8458", VA = "0x14D8458", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017F")]
		public override int NodeLabelWidth
		{
			[Token(Token = "0x6001624")]
			[Address(RVA = "0x14D8460", Offset = "0x14D8460", VA = "0x14D8460", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000180")]
		public override string NodeDisplayName
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0x14D8468", Offset = "0x14D8468", VA = "0x14D8468", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x14D84B0", Offset = "0x14D84B0", VA = "0x14D84B0", Slot = "11")]
		public override IEnumerator Evaluate(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x14D8510", Offset = "0x14D8510", VA = "0x14D8510", Slot = "5")]
		public override object GetValue(NodePort port)
		{
			return null;
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x14D8630", Offset = "0x14D8630", VA = "0x14D8630", Slot = "17")]
		public override bool CanConnectTo(NodePort from, NodePort to)
		{
			return default(bool);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x14D86D8", Offset = "0x14D86D8", VA = "0x14D86D8")]
		public WaveRandomizer()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public enum ReferenceMode
	{
		[Token(Token = "0x40015F4")]
		UseTag,
		[Token(Token = "0x40015F5")]
		UseName,
		[Token(Token = "0x40015F6")]
		UseID
	}
	[Serializable]
	[Token(Token = "0x2000327")]
	public abstract class WaveReferenceNode : WaveNode
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ReferenceMode referenceMode;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA42C7C", Offset = "0xA42C7C")]
		public string referenceTag;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA42D18", Offset = "0xA42D18")]
		public string referenceName;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA42DB8", Offset = "0xA42DB8")]
		public int referenceID;

		[Token(Token = "0x17000181")]
		public override int NodeWidth
		{
			[Token(Token = "0x600162A")]
			[Address(RVA = "0x14D86EC", Offset = "0x14D86EC", VA = "0x14D86EC", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000182")]
		public override int NodeLabelWidth
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0x14D86F4", Offset = "0x14D86F4", VA = "0x14D86F4", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x14D86FC", Offset = "0x14D86FC", VA = "0x14D86FC", Slot = "11")]
		public override IEnumerator Evaluate(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x14D875C", Offset = "0x14D875C", VA = "0x14D875C", Slot = "18")]
		public override bool CanHaveMultipleConnections(NodePort from)
		{
			return default(bool);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x14D8778", Offset = "0x14D8778", VA = "0x14D8778")]
		protected WaveReferenceNode()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public enum WaveSetupMode
	{
		[Token(Token = "0x40015FC")]
		Explicit,
		[Token(Token = "0x40015FD")]
		Multiplier
	}
	[Serializable]
	[Token(Token = "0x2000329")]
	public abstract class WaveSpawnNode : WaveNode
	{
		[Token(Token = "0x40015FE")]
		internal const string waveModeField = "waveMode";

		[Token(Token = "0x40015FF")]
		internal const string spawnCountField = "spawnCount";

		[Token(Token = "0x4001600")]
		internal const string spawnFrequencyField = "spawnFrequency";

		[Token(Token = "0x4001601")]
		internal const string spawnRandomnessField = "spawnRandomness";

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int targetSpawnCount;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float targetSpawnFrequency;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float targetSpawnRandomness;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA42E58", Offset = "0xA42E58")]
		public WaveSpawnerReferenceNode Spawner;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA42E6C", Offset = "0xA42E6C")]
		public WaveSpawnableReferenceNode Spawnable;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "DisplayConditionMethodAttribute", RVA = "0xA42E80", Offset = "0xA42E80")]
		public WaveSetupMode waveMode;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA42EC0", Offset = "0xA42EC0")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA42EC0", Offset = "0xA42EC0")]
		public int spawnCount;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA42F70", Offset = "0xA42F70")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA42F70", Offset = "0xA42F70")]
		public float spawnCountMultiplier;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA43024", Offset = "0xA43024")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA43024", Offset = "0xA43024")]
		public float spawnFrequency;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA430D4", Offset = "0xA430D4")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA430D4", Offset = "0xA430D4")]
		public float spawnFrequencyMultiplier;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA43188", Offset = "0xA43188")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA43188", Offset = "0xA43188")]
		public float spawnRandomness;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA43238", Offset = "0xA43238")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA43238", Offset = "0xA43238")]
		public float spawnRandomnessMultiplier;

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x14D87E0", Offset = "0x14D87E0", VA = "0x14D87E0", Slot = "14")]
		public override void OnGenerateWaveSession()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x14D8898", Offset = "0x14D8898", VA = "0x14D8898")]
		public bool IsMultiplierModeAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x14D88C8", Offset = "0x14D88C8", VA = "0x14D88C8")]
		public bool IsFirstConnectedNode()
		{
			return default(bool);
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x14D7658", Offset = "0x14D7658", VA = "0x14D7658")]
		protected Spawner ResolveTargetSpawner(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x14D7740", Offset = "0x14D7740", VA = "0x14D7740")]
		protected SpawnableItemRef ResolveTargetSpawnableItem(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x14D70E8", Offset = "0x14D70E8", VA = "0x14D70E8")]
		protected WaveSpawnNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA338B8", Offset = "0xA338B8")]
	public sealed class WaveSpawnableReferenceNode : WaveReferenceNode
	{
		[Token(Token = "0x400160E")]
		public const string spawnablePortName = "Spawnable";

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA432EC", Offset = "0xA432EC")]
		public WaveSpawnableReferenceNode Spawnable;

		[Token(Token = "0x17000183")]
		public override string NodeDisplayName
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0x14D8FEC", Offset = "0x14D8FEC", VA = "0x14D8FEC", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x14D9034", Offset = "0x14D9034", VA = "0x14D9034")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x14D9094", Offset = "0x14D9094", VA = "0x14D9094", Slot = "17")]
		public override bool CanConnectTo(NodePort from, NodePort to)
		{
			return default(bool);
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x14D8CC0", Offset = "0x14D8CC0", VA = "0x14D8CC0")]
		public SpawnableItemRef ResolveSpawnableReference(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x14D9128", Offset = "0x14D9128", VA = "0x14D9128")]
		public WaveSpawnableReferenceNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA338F0", Offset = "0xA338F0")]
	public sealed class WaveSpawnerReferenceNode : WaveReferenceNode
	{
		[Token(Token = "0x4001610")]
		public const string spawnerPortName = "Spawner";

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA43300", Offset = "0xA43300")]
		public WaveSpawnerReferenceNode Spawner;

		[Token(Token = "0x17000184")]
		public override string NodeDisplayName
		{
			[Token(Token = "0x600163A")]
			[Address(RVA = "0x14D912C", Offset = "0x14D912C", VA = "0x14D912C", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x14D9174", Offset = "0x14D9174", VA = "0x14D9174", Slot = "17")]
		public override bool CanConnectTo(NodePort from, NodePort to)
		{
			return default(bool);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x14D894C", Offset = "0x14D894C", VA = "0x14D894C")]
		public Spawner ResolveSpawnerReference(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x14D9208", Offset = "0x14D9208", VA = "0x14D9208")]
		public WaveSpawnerReferenceNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "NodeTint", RVA = "0xA33928", Offset = "0xA33928")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA33928", Offset = "0xA33928")]
	public sealed class WaveStartNode : WaveNode
	{
		[Token(Token = "0x2000793")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37158", Offset = "0xA37158")]
		private sealed class <Evaluate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveSpawnController controller;

			[Token(Token = "0x4002D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaveStartNode <>4__this;

			[Token(Token = "0x170006AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031E6")]
				[Address(RVA = "0x14D9484", Offset = "0x14D9484", VA = "0x14D9484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031E8")]
				[Address(RVA = "0x14D94EC", Offset = "0x14D94EC", VA = "0x14D94EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031E3")]
			[Address(RVA = "0x14D92E0", Offset = "0x14D92E0", VA = "0x14D92E0")]
			[DebuggerHidden]
			public <Evaluate>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60031E4")]
			[Address(RVA = "0x14D930C", Offset = "0x14D930C", VA = "0x14D930C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031E5")]
			[Address(RVA = "0x14D9310", Offset = "0x14D9310", VA = "0x14D9310", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031E7")]
			[Address(RVA = "0x14D948C", Offset = "0x14D948C", VA = "0x14D948C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA43314", Offset = "0xA43314")]
		public WaveNode Out;

		[Token(Token = "0x17000185")]
		public override int NodeWidth
		{
			[Token(Token = "0x600163E")]
			[Address(RVA = "0x14D920C", Offset = "0x14D920C", VA = "0x14D920C", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000186")]
		public override string NodeDisplayName
		{
			[Token(Token = "0x600163F")]
			[Address(RVA = "0x14D9214", Offset = "0x14D9214", VA = "0x14D9214", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x14D925C", Offset = "0x14D925C", VA = "0x14D925C")]
		private WaveStartNode()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x14D9264", Offset = "0x14D9264", VA = "0x14D9264", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA583E4", Offset = "0xA583E4")]
		public override IEnumerator Evaluate(WaveSpawnController controller)
		{
			return null;
		}
	}
	[Token(Token = "0x200032D")]
	public class WaveState
	{
		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WaveSpawnController controller;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Spawner targetSpawner;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpawnableItemRef targetSpawnable;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int waveNumber;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string waveName;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int waveSpawnCount;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float waveSpawnFrequency;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float waveSpawnRandomness;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<WaveState> subWaves;

		[Token(Token = "0x17000187")]
		public WaveSpawnController Controller
		{
			[Token(Token = "0x6001642")]
			[Address(RVA = "0x14D94F4", Offset = "0x14D94F4", VA = "0x14D94F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public Spawner TargetSpawner
		{
			[Token(Token = "0x6001643")]
			[Address(RVA = "0x14D94FC", Offset = "0x14D94FC", VA = "0x14D94FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public SpawnableItemRef TargetSpawnable
		{
			[Token(Token = "0x6001644")]
			[Address(RVA = "0x14D9504", Offset = "0x14D9504", VA = "0x14D9504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		public int WaveNumber
		{
			[Token(Token = "0x6001645")]
			[Address(RVA = "0x14D950C", Offset = "0x14D950C", VA = "0x14D950C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018B")]
		public string WaveName
		{
			[Token(Token = "0x6001646")]
			[Address(RVA = "0x14D9514", Offset = "0x14D9514", VA = "0x14D9514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		public int WaveSpawnCount
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0x14D951C", Offset = "0x14D951C", VA = "0x14D951C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018D")]
		public float WaveSpawnFrequency
		{
			[Token(Token = "0x6001648")]
			[Address(RVA = "0x14D9524", Offset = "0x14D9524", VA = "0x14D9524")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018E")]
		public float WaveSpawnRandomness
		{
			[Token(Token = "0x6001649")]
			[Address(RVA = "0x14D952C", Offset = "0x14D952C", VA = "0x14D952C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018F")]
		public bool HasSubWaves
		{
			[Token(Token = "0x600164A")]
			[Address(RVA = "0x14D9534", Offset = "0x14D9534", VA = "0x14D9534")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000190")]
		public WaveState[] SubWaves
		{
			[Token(Token = "0x600164B")]
			[Address(RVA = "0x14D958C", Offset = "0x14D958C", VA = "0x14D958C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x14D95E4", Offset = "0x14D95E4", VA = "0x14D95E4")]
		internal WaveState(WaveSpawnController controller)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x14D9678", Offset = "0x14D9678", VA = "0x14D9678")]
		internal void AddSubWave(string waveName, int spawnAmount, float spawnFrequency, float spawnRandomness, [Optional] Spawner spawner, [Optional] SpawnableItemRef itemRef)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x14D78E8", Offset = "0x14D78E8", VA = "0x14D78E8")]
		public void AdvanceWaveCounter()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x14D7828", Offset = "0x14D7828", VA = "0x14D7828")]
		internal static WaveState AdvanceWave(WaveState current, string waveName, int spawnAmount, float spawnFrequency, float spawnRandomness, [Optional] Spawner spawner, [Optional] SpawnableItemRef itemRef)
		{
			return null;
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x14D9748", Offset = "0x14D9748", VA = "0x14D9748")]
		private static void SetWaveValues(WaveState state, string waveName, int spawnAmount, float spawnFrequency, float spawnRandomness, [Optional] Spawner spawner, [Optional] SpawnableItemRef itemRef)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "NodeTint", RVA = "0xA33970", Offset = "0xA33970")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA33970", Offset = "0xA33970")]
	public class WaveSubNode : WaveSpawnNode
	{
		[Token(Token = "0x2000794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37168", Offset = "0xA37168")]
		private sealed class <Evaluate>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveSpawnController controller;

			[Token(Token = "0x4002D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaveSubNode <>4__this;

			[Token(Token = "0x170006B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031EC")]
				[Address(RVA = "0x14D98CC", Offset = "0x14D98CC", VA = "0x14D98CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031EE")]
				[Address(RVA = "0x14D9934", Offset = "0x14D9934", VA = "0x14D9934", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031E9")]
			[Address(RVA = "0x14D9830", Offset = "0x14D9830", VA = "0x14D9830")]
			[DebuggerHidden]
			public <Evaluate>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60031EA")]
			[Address(RVA = "0x14D9884", Offset = "0x14D9884", VA = "0x14D9884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031EB")]
			[Address(RVA = "0x14D9888", Offset = "0x14D9888", VA = "0x14D9888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031ED")]
			[Address(RVA = "0x14D98D4", Offset = "0x14D98D4", VA = "0x14D98D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA43328", Offset = "0xA43328")]
		public WaveSubNode In;

		[Token(Token = "0x17000191")]
		public override string NodeDisplayName
		{
			[Token(Token = "0x6001651")]
			[Address(RVA = "0x14D976C", Offset = "0x14D976C", VA = "0x14D976C", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x14D97B4", Offset = "0x14D97B4", VA = "0x14D97B4", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58448", Offset = "0xA58448")]
		public override IEnumerator Evaluate(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x14D985C", Offset = "0x14D985C", VA = "0x14D985C")]
		public WaveSubNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA339C8", Offset = "0xA339C8")]
	public sealed class WaveWaitCondition : WaveNode
	{
		[Token(Token = "0x2000795")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37178", Offset = "0xA37178")]
		private sealed class <Evaluate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveSpawnController controller;

			[Token(Token = "0x4002D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WaveWaitCondition <>4__this;

			[Token(Token = "0x170006B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031F2")]
				[Address(RVA = "0x14D9BC0", Offset = "0x14D9BC0", VA = "0x14D9BC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031F4")]
				[Address(RVA = "0x14D9C28", Offset = "0x14D9C28", VA = "0x14D9C28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031EF")]
			[Address(RVA = "0x14D99B8", Offset = "0x14D99B8", VA = "0x14D99B8")]
			[DebuggerHidden]
			public <Evaluate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60031F0")]
			[Address(RVA = "0x14D9A2C", Offset = "0x14D9A2C", VA = "0x14D9A2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031F1")]
			[Address(RVA = "0x14D9A30", Offset = "0x14D9A30", VA = "0x14D9A30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031F3")]
			[Address(RVA = "0x14D9BC8", Offset = "0x14D9BC8", VA = "0x14D9BC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA4333C", Offset = "0xA4333C")]
		public WaveNode In;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "OutputAttribute", RVA = "0xA43350", Offset = "0xA43350")]
		public WaveNode Out;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WaveConditionType condition;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "DisplayConditionMethodAttribute", RVA = "0xA43364", Offset = "0xA43364")]
		public string parameterName;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WaveConditionOperator operand;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA433A4", Offset = "0xA433A4")]
		[AttributeAttribute(Name = "DisplayConditionMethodAttribute", RVA = "0xA433A4", Offset = "0xA433A4")]
		public int value;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "InputAttribute", RVA = "0xA433FC", Offset = "0xA433FC")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA433FC", Offset = "0xA433FC")]
		public float valueFloat;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "DisplayConditionAttribute", RVA = "0xA434B0", Offset = "0xA434B0")]
		public bool valueBool;

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x14D993C", Offset = "0x14D993C", VA = "0x14D993C", Slot = "11")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA584AC", Offset = "0xA584AC")]
		public override IEnumerator Evaluate(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x14D99E4", Offset = "0x14D99E4", VA = "0x14D99E4")]
		private bool IsParameter()
		{
			return default(bool);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x14D9A08", Offset = "0x14D9A08", VA = "0x14D9A08")]
		private bool IsNotFloatOrBoolParameter()
		{
			return default(bool);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x14D9A1C", Offset = "0x14D9A1C", VA = "0x14D9A1C")]
		public WaveWaitCondition()
		{
		}
	}
}
namespace UltimateSpawner.Waves.Parameters
{
	[Serializable]
	[Token(Token = "0x2000330")]
	public class WaveParameter
	{
		[Token(Token = "0x2000796")]
		public enum WaveParameterType
		{
			[Token(Token = "0x4002D39")]
			Int,
			[Token(Token = "0x4002D3A")]
			Float,
			[Token(Token = "0x4002D3B")]
			Bool
		}

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string parameterName;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveParameterType parameterType;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int intValue;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float floatValue;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool boolValue;

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x14D41A8", Offset = "0x14D41A8", VA = "0x14D41A8")]
		public WaveParameter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "NodeTint", RVA = "0xA33A00", Offset = "0xA33A00")]
	[AttributeAttribute(Name = "CreateNodeMenuAttribute", RVA = "0xA33A00", Offset = "0xA33A00")]
	public class WaveParameterNode : WaveNode
	{
		[NonSerialized]
		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaveParameterSet runtimeParameters;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WaveParameterSet parameters;

		[Token(Token = "0x17000192")]
		public override int NodeWidth
		{
			[Token(Token = "0x6001659")]
			[Address(RVA = "0x14D41B0", Offset = "0x14D41B0", VA = "0x14D41B0", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000193")]
		public override string NodeDisplayName
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0x14D41B8", Offset = "0x14D41B8", VA = "0x14D41B8", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x14D4200", Offset = "0x14D4200", VA = "0x14D4200", Slot = "11")]
		public override IEnumerator Evaluate(WaveSpawnController controller)
		{
			return null;
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x14D4260", Offset = "0x14D4260", VA = "0x14D4260")]
		public WaveParameterSet GetRuntimeParameters()
		{
			return null;
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x14D4458", Offset = "0x14D4458", VA = "0x14D4458")]
		public WaveParameterNode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000332")]
	public class WaveParameterSet
	{
		[Token(Token = "0x2000797")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37188", Offset = "0xA37188")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string parameterName;

			[Token(Token = "0x60031F5")]
			[Address(RVA = "0x14D4724", Offset = "0x14D4724", VA = "0x14D4724")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60031F6")]
			[Address(RVA = "0x14D54D0", Offset = "0x14D54D0", VA = "0x14D54D0")]
			internal bool <AddParameter>b__0(WaveParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37198", Offset = "0xA37198")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string parameterName;

			[Token(Token = "0x60031F7")]
			[Address(RVA = "0x14D4888", Offset = "0x14D4888", VA = "0x14D4888")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60031F8")]
			[Address(RVA = "0x14D54F4", Offset = "0x14D54F4", VA = "0x14D54F4")]
			internal bool <HasParameterWithName>b__0(WaveParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000799")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA371A8", Offset = "0xA371A8")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string parameterName;

			[Token(Token = "0x60031F9")]
			[Address(RVA = "0x14D4A50", Offset = "0x14D4A50", VA = "0x14D4A50")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60031FA")]
			[Address(RVA = "0x14D5518", Offset = "0x14D5518", VA = "0x14D5518")]
			internal bool <SetInt>b__0(WaveParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200079A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA371B8", Offset = "0xA371B8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string parameterName;

			[Token(Token = "0x60031FB")]
			[Address(RVA = "0x14D4C24", Offset = "0x14D4C24", VA = "0x14D4C24")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60031FC")]
			[Address(RVA = "0x14D5340", Offset = "0x14D5340", VA = "0x14D5340")]
			internal bool <SetFloat>b__0(WaveParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA371C8", Offset = "0xA371C8")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string parameterName;

			[Token(Token = "0x60031FD")]
			[Address(RVA = "0x14D4DF0", Offset = "0x14D4DF0", VA = "0x14D4DF0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60031FE")]
			[Address(RVA = "0x14D5390", Offset = "0x14D5390", VA = "0x14D5390")]
			internal bool <SetBool>b__0(WaveParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200079C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA371D8", Offset = "0xA371D8")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string parameterName;

			[Token(Token = "0x60031FF")]
			[Address(RVA = "0x14D4FB0", Offset = "0x14D4FB0", VA = "0x14D4FB0")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6003200")]
			[Address(RVA = "0x14D53E0", Offset = "0x14D53E0", VA = "0x14D53E0")]
			internal bool <GetInt>b__0(WaveParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA371E8", Offset = "0xA371E8")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4002D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string parameterName;

			[Token(Token = "0x6003201")]
			[Address(RVA = "0x14D5170", Offset = "0x14D5170", VA = "0x14D5170")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6003202")]
			[Address(RVA = "0x14D5430", Offset = "0x14D5430", VA = "0x14D5430")]
			internal bool <GetFloat>b__0(WaveParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200079E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA371F8", Offset = "0xA371F8")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4002D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string parameterName;

			[Token(Token = "0x6003203")]
			[Address(RVA = "0x14D5338", Offset = "0x14D5338", VA = "0x14D5338")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6003204")]
			[Address(RVA = "0x14D5480", Offset = "0x14D5480", VA = "0x14D5480")]
			internal bool <GetBool>b__0(WaveParameter p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<WaveParameter> parameters;

		[Token(Token = "0x17000194")]
		public int ParameterCount
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0x14D4534", Offset = "0x14D4534", VA = "0x14D4534")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000195")]
		public IList<WaveParameter> Parameters
		{
			[Token(Token = "0x600165F")]
			[Address(RVA = "0x14D4584", Offset = "0x14D4584", VA = "0x14D4584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x14D4298", Offset = "0x14D4298", VA = "0x14D4298")]
		public WaveParameterSet Clone()
		{
			return null;
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x14D458C", Offset = "0x14D458C", VA = "0x14D458C")]
		public void AddParameter(string parameterName, WaveParameter.WaveParameterType parameterType)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x14D472C", Offset = "0x14D472C", VA = "0x14D472C")]
		public void RemoveParameter(WaveParameter parameter)
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x14D47C4", Offset = "0x14D47C4", VA = "0x14D47C4")]
		public bool HasParameterWithName(string parameterName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x14D4890", Offset = "0x14D4890", VA = "0x14D4890")]
		public void SetInt(string parameterName, int value)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x14D4A58", Offset = "0x14D4A58", VA = "0x14D4A58")]
		public void SetFloat(string parameterName, float value)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x14D4C2C", Offset = "0x14D4C2C", VA = "0x14D4C2C")]
		public void SetBool(string parameterName, bool value)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x14D4DF8", Offset = "0x14D4DF8", VA = "0x14D4DF8")]
		public int GetInt(string parameterName)
		{
			return default(int);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x14D4FB8", Offset = "0x14D4FB8", VA = "0x14D4FB8")]
		public float GetFloat(string parameterName)
		{
			return default(float);
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x14D5178", Offset = "0x14D5178", VA = "0x14D5178")]
		public bool GetBool(string parameterName)
		{
			return default(bool);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x14D44BC", Offset = "0x14D44BC", VA = "0x14D44BC")]
		public WaveParameterSet()
		{
		}
	}
}
namespace UltimateSpawner.DebugUtil
{
	[Token(Token = "0x2000333")]
	public class WaveSpawnControllerGUIStatsLegacy : SpawnControllerGUIStatsLegacy
	{
		[Token(Token = "0x600166B")]
		[Address(RVA = "0x140C580", Offset = "0x140C580", VA = "0x140C580")]
		public void Reset()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x140C58C", Offset = "0x140C58C", VA = "0x140C58C", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x140C688", Offset = "0x140C688", VA = "0x140C688", Slot = "5")]
		public override void OnGUI()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x140C7CC", Offset = "0x140C7CC", VA = "0x140C7CC")]
		public void DisplayWaveControllerStats()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x140CBB0", Offset = "0x140CBB0", VA = "0x140CBB0")]
		public WaveSpawnControllerGUIStatsLegacy()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class SpawnControllerGUIStatsLegacy : MonoBehaviour
	{
		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnController observedController;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int labelWidth;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int labelOffsetY;

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x140BC2C", Offset = "0x140BC2C", VA = "0x140BC2C", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x140BD28", Offset = "0x140BD28", VA = "0x140BD28", Slot = "5")]
		public virtual void OnGUI()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x140BF0C", Offset = "0x140BF0C", VA = "0x140BF0C", Slot = "6")]
		public virtual void DisplayControllerStats(string windowTitle)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x140C324", Offset = "0x140C324", VA = "0x140C324", Slot = "7")]
		public virtual void DisplayControllerStat(string statName, object statValue)
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x140C56C", Offset = "0x140C56C", VA = "0x140C56C")]
		public SpawnControllerGUIStatsLegacy()
		{
		}
	}
}
namespace UltimateSpawner.Demo
{
	[Token(Token = "0x2000335")]
	public class SimpleWaveHUD : MonoBehaviour
	{
		[Token(Token = "0x200079F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37208", Offset = "0xA37208")]
		private sealed class <ShowNextWaveHint>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleWaveHUD <>4__this;

			[Token(Token = "0x4002D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <wait>5__2;

			[Token(Token = "0x4002D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Color <temp>5__3;

			[Token(Token = "0x170006B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003208")]
				[Address(RVA = "0x140F30C", Offset = "0x140F30C", VA = "0x140F30C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600320A")]
				[Address(RVA = "0x140F374", Offset = "0x140F374", VA = "0x140F374", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003205")]
			[Address(RVA = "0x140F12C", Offset = "0x140F12C", VA = "0x140F12C")]
			[DebuggerHidden]
			public <ShowNextWaveHint>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6003206")]
			[Address(RVA = "0x140F160", Offset = "0x140F160", VA = "0x140F160", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003207")]
			[Address(RVA = "0x140F164", Offset = "0x140F164", VA = "0x140F164", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003209")]
			[Address(RVA = "0x140F314", Offset = "0x140F314", VA = "0x140F314", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WaveSpawnController waveController;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text waveText;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text nextWaveText;

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x140EE3C", Offset = "0x140EE3C", VA = "0x140EE3C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x140EF24", Offset = "0x140EF24", VA = "0x140EF24")]
		public void Update()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x140F064", Offset = "0x140F064", VA = "0x140F064")]
		private void OnWaveStarted()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x140F0BC", Offset = "0x140F0BC", VA = "0x140F0BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58510", Offset = "0xA58510")]
		private IEnumerator ShowNextWaveHint()
		{
			return null;
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x140F158", Offset = "0x140F158", VA = "0x140F158")]
		public SimpleWaveHUD()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class Monster : MonoBehaviour
	{
		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastHealth;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float lastGrowlTime;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleTarget target;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SimpleDamage damage;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource audioSource;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip monsterHit;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip monsterGrowl;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float growlDistance;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float growlDelay;

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x140CBC4", Offset = "0x140CBC4", VA = "0x140CBC4")]
		public void Start()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x140CBE4", Offset = "0x140CBE4", VA = "0x140CBE4")]
		public void Update()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x140CDE4", Offset = "0x140CDE4", VA = "0x140CDE4")]
		public Monster()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class SimpleDamage : MonoBehaviour
	{
		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float health;

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x140CE00", Offset = "0x140CE00", VA = "0x140CE00")]
		public void TakeDamage(float amount)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x140CEB0", Offset = "0x140CEB0", VA = "0x140CEB0")]
		public SimpleDamage()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33A48", Offset = "0xA33A48")]
	public class SimpleFPSCamera : MonoBehaviour
	{
		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 smooth;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 absolute;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool lockToggle;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform root;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sensitivity;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float smoothing;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float lookAngle;

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x140CEC0", Offset = "0x140CEC0", VA = "0x140CEC0")]
		public void ActivateCamera()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x140CF24", Offset = "0x140CF24", VA = "0x140CF24")]
		public void DeactivateCamera()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x140CF88", Offset = "0x140CF88", VA = "0x140CF88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x140D060", Offset = "0x140D060", VA = "0x140D060")]
		private void Update()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x140D3F8", Offset = "0x140D3F8", VA = "0x140D3F8")]
		public SimpleFPSCamera()
		{
		}
	}
	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33AAC", Offset = "0xA33AAC")]
	public class SimpleFPSController : MonoBehaviour
	{
		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CharacterController controller;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 moveDirection;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 contactPoint;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isGrounded;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool isFalling;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float rayDistance;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int jumpTimer;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float walkSpeed;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float jumpHeight;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float gravity;

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x140D494", Offset = "0x140D494", VA = "0x140D494")]
		private void Start()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x140D528", Offset = "0x140D528", VA = "0x140D528")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x140D99C", Offset = "0x140D99C", VA = "0x140D99C")]
		public void Jump(float height)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x140D9B0", Offset = "0x140D9B0", VA = "0x140D9B0")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x140D9E8", Offset = "0x140D9E8", VA = "0x140D9E8")]
		public SimpleFPSController()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class SimplePickup : MonoBehaviour
	{
		[Token(Token = "0x20007A0")]
		public enum PickupType
		{
			[Token(Token = "0x4002D4A")]
			Death,
			[Token(Token = "0x4002D4B")]
			Ammo
		}

		[Token(Token = "0x20007A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37218", Offset = "0xA37218")]
		private sealed class <PickupDestroyRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimplePickup <>4__this;

			[Token(Token = "0x170006B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600320E")]
				[Address(RVA = "0x140E0E4", Offset = "0x140E0E4", VA = "0x140E0E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003210")]
				[Address(RVA = "0x140E14C", Offset = "0x140E14C", VA = "0x140E14C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600320B")]
			[Address(RVA = "0x140DF58", Offset = "0x140DF58", VA = "0x140DF58")]
			[DebuggerHidden]
			public <PickupDestroyRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600320C")]
			[Address(RVA = "0x140DFE4", Offset = "0x140DFE4", VA = "0x140DFE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600320D")]
			[Address(RVA = "0x140DFE8", Offset = "0x140DFE8", VA = "0x140DFE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600320F")]
			[Address(RVA = "0x140E0EC", Offset = "0x140E0EC", VA = "0x140E0EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera activeCam;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTriggered;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform faceCameraRoot;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light lightEffect;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip pickupSound;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PickupType type;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[TagCollection]
		public string triggerTag;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float lifeTime;

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x140DA84", Offset = "0x140DA84", VA = "0x140DA84")]
		private void Start()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x140DB0C", Offset = "0x140DB0C", VA = "0x140DB0C")]
		private void Update()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x140DCD0", Offset = "0x140DCD0", VA = "0x140DCD0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x140DEE8", Offset = "0x140DEE8", VA = "0x140DEE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58574", Offset = "0xA58574")]
		private IEnumerator PickupDestroyRoutine()
		{
			return null;
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x140DF84", Offset = "0x140DF84", VA = "0x140DF84")]
		public SimplePickup()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class SimplePingPong : MonoBehaviour
	{
		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 initialPosition;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float updatePosition;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool flip;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float distance;

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x140E154", Offset = "0x140E154", VA = "0x140E154")]
		public void Start()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x140E190", Offset = "0x140E190", VA = "0x140E190")]
		public void Update()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x140E2CC", Offset = "0x140E2CC", VA = "0x140E2CC")]
		public SimplePingPong()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class SimpleRotate : MonoBehaviour
	{
		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x140E350", Offset = "0x140E350", VA = "0x140E350")]
		private void Update()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x140E414", Offset = "0x140E414", VA = "0x140E414")]
		public SimpleRotate()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class SimpleShoot : MonoBehaviour
	{
		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InfiniteSpawnController enemyController;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera activeCam;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int currentClip;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int currentAmmo;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask raycastMask;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int maxAmmoCount;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int maxClipCount;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float damageAmount;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject reloadHint;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text enemyHint;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text ammoHint;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA43570", Offset = "0xA43570")]
		public AudioSource source;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip shootClip;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip emptyClip;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip reloadClip;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA435A8", Offset = "0xA435A8")]
		public bool infiniteAmmo;

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x140E424", Offset = "0x140E424", VA = "0x140E424")]
		public void Start()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x140E648", Offset = "0x140E648", VA = "0x140E648")]
		public void Update()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x140E7D8", Offset = "0x140E7D8", VA = "0x140E7D8")]
		public void Shoot()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x140E9D8", Offset = "0x140E9D8", VA = "0x140E9D8")]
		public void Reload()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x140DEDC", Offset = "0x140DEDC", VA = "0x140DEDC")]
		public void AwardMaxAmmo()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x140EA50", Offset = "0x140EA50", VA = "0x140EA50")]
		public void ShowReloadHint()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x140E4B0", Offset = "0x140E4B0", VA = "0x140E4B0")]
		public void HideReloadHint()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x140E548", Offset = "0x140E548", VA = "0x140E548")]
		public void UpdateAmmoHint()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x140EAE8", Offset = "0x140EAE8", VA = "0x140EAE8")]
		public SimpleShoot()
		{
		}
	}
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xA33B10", Offset = "0xA33B10")]
	public class SimpleTarget : MonoBehaviour
	{
		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NavMeshAgent agent;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform targetTransform;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string targetObjectName;

		[Token(Token = "0x17000196")]
		public Transform TargetTransform
		{
			[Token(Token = "0x600169C")]
			[Address(RVA = "0x140EB34", Offset = "0x140EB34", VA = "0x140EB34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x140EB3C", Offset = "0x140EB3C", VA = "0x140EB3C")]
		public void Start()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x140EB94", Offset = "0x140EB94", VA = "0x140EB94")]
		public void Update()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x140EC80", Offset = "0x140EC80", VA = "0x140EC80")]
		public void FindTarget()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x140ED58", Offset = "0x140ED58", VA = "0x140ED58")]
		public SimpleTarget()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class SimpleTriggerDestroy : MonoBehaviour
	{
		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x140EDB0", Offset = "0x140EDB0", VA = "0x140EDB0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x140EE34", Offset = "0x140EE34", VA = "0x140EE34")]
		public SimpleTriggerDestroy()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class SpawnerExample : MonoBehaviour
	{
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<Transform> spawnedItems;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Spawner spawner;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int labelWidth;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int labelOffsetY;

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x140F37C", Offset = "0x140F37C", VA = "0x140F37C")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x140F760", Offset = "0x140F760", VA = "0x140F760", Slot = "4")]
		public virtual bool DisplaySpawnerButton(string label, string buttonText)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x140F99C", Offset = "0x140F99C", VA = "0x140F99C")]
		public SpawnerExample()
		{
		}
	}
}
namespace VRUiKits.Utils
{
	[Token(Token = "0x2000341")]
	public class TextMeshProConverter : MonoBehaviour
	{
		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x1346088", Offset = "0x1346088", VA = "0x1346088")]
		public static int CheckTextsTotalNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x1346180", Offset = "0x1346180", VA = "0x1346180")]
		public TextMeshProConverter()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class ImageHoverOutline : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image targetImage;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color outlineColor;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float outlineWidth;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.UI.Outline outline;

		[Token(Token = "0x17000197")]
		private UnityEngine.UI.Outline _Outline
		{
			[Token(Token = "0x60016A8")]
			[Address(RVA = "0x14E39D0", Offset = "0x14E39D0", VA = "0x14E39D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x14E3B78", Offset = "0x14E3B78", VA = "0x14E3B78", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x14E3C20", Offset = "0x14E3C20", VA = "0x14E3C20", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x14E3CC8", Offset = "0x14E3CC8", VA = "0x14E3CC8")]
		public ImageHoverOutline()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class TextHoverScale : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text targetText;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scale;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int originSize;

		[Token(Token = "0x17000198")]
		private Text TargetText
		{
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0x1345D5C", Offset = "0x1345D5C", VA = "0x1345D5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x1345E38", Offset = "0x1345E38", VA = "0x1345E38", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x1345FCC", Offset = "0x1345FCC", VA = "0x1345FCC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x1346074", Offset = "0x1346074", VA = "0x1346074")]
		public TextHoverScale()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class GazeInputModule : UIKitInputModule
	{
		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool previewWithoutHeadset;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool preventRepeatClick;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RaycastResult currentRaycast;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GazeInputModule Instance;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PointerEventData pointerEventData;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PointerEventData lastPressedEventData;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject currentTarget;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float currentClickTime;

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x14E2DA8", Offset = "0x14E2DA8", VA = "0x14E2DA8")]
		protected GazeInputModule()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x14E2E08", Offset = "0x14E2E08", VA = "0x14E2E08", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x14E2E2C", Offset = "0x14E2E2C", VA = "0x14E2E2C")]
		private void GazeControl()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x14E2FF0", Offset = "0x14E2FF0", VA = "0x14E2FF0")]
		private void HandleSelection()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x14E32C0", Offset = "0x14E32C0", VA = "0x14E32C0")]
		private void ReleaseLastPress()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x14E33A0", Offset = "0x14E33A0", VA = "0x14E33A0", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x14E346C", Offset = "0x14E346C", VA = "0x14E346C", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x14E3494", Offset = "0x14E3494", VA = "0x14E3494")]
		protected void ClearSelection()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x14E34DC", Offset = "0x14E34DC", VA = "0x14E34DC", Slot = "26")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}
	}
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33B24", Offset = "0xA33B24")]
	public class LaserInputModule : UIKitInputModule
	{
		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VRPlatform platform;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Pointer pointer;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OVRInput.Button trigger;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private OVRCameraRig oculusRig;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject currentTarget;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float currentClickTime;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LaserInputModule _instance;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Camera helperCamera;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UIKitPointer controller;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool triggerPressed;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool triggerPressedLastFrame;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private PointerEventData pointerEventData;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 lastRaycastHitPoint;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float pressedDistance;

		[Token(Token = "0x17000199")]
		public Transform TargetControllerTransform
		{
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x14E6BE4", Offset = "0x14E6BE4", VA = "0x14E6BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		public static LaserInputModule instance
		{
			[Token(Token = "0x60016BA")]
			[Address(RVA = "0x14E6C14", Offset = "0x14E6C14", VA = "0x14E6C14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x14E6C7C", Offset = "0x14E6C7C", VA = "0x14E6C7C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x14E6E24", Offset = "0x14E6E24", VA = "0x14E6E24", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x14E70B8", Offset = "0x14E70B8", VA = "0x14E70B8")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x14E6FCC", Offset = "0x14E6FCC", VA = "0x14E6FCC")]
		private void SetCanvasCamera()
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x14E70B4", Offset = "0x14E70B4", VA = "0x14E70B4")]
		private void SetupHmd()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x14E7324", Offset = "0x14E7324", VA = "0x14E7324")]
		public void SetController(UIKitPointer _controller)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x14E732C", Offset = "0x14E732C", VA = "0x14E732C")]
		public void RemoveController(UIKitPointer _controller)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x14E73E4", Offset = "0x14E73E4", VA = "0x14E73E4", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x14E7498", Offset = "0x14E7498", VA = "0x14E7498")]
		private void UpdateHelperCamera()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x14E7778", Offset = "0x14E7778", VA = "0x14E7778")]
		private void CheckTriggerStatus()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x14E753C", Offset = "0x14E753C", VA = "0x14E753C")]
		private void ProcessGazePointer()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x14E7878", Offset = "0x14E7878", VA = "0x14E7878")]
		private void ProcessLaserPointer()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x14E7EEC", Offset = "0x14E7EEC", VA = "0x14E7EEC")]
		private void ProcessPress(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x14E7B74", Offset = "0x14E7B74", VA = "0x14E7B74")]
		private PointerEventData GetPointerEventData()
		{
			return null;
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x14E88D8", Offset = "0x14E88D8", VA = "0x14E88D8")]
		private bool TriggerReleasedThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x14E88B8", Offset = "0x14E88B8", VA = "0x14E88B8")]
		private bool TriggerPressedThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x14E7A20", Offset = "0x14E7A20", VA = "0x14E7A20")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x14E88F8", Offset = "0x14E88F8", VA = "0x14E88F8", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x14E89C4", Offset = "0x14E89C4", VA = "0x14E89C4", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x14E89EC", Offset = "0x14E89EC", VA = "0x14E89EC")]
		protected void ClearSelection()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x14E8A34", Offset = "0x14E8A34", VA = "0x14E8A34")]
		private bool ShouldStartDrag(float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x14E8A50", Offset = "0x14E8A50", VA = "0x14E8A50", Slot = "26")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x14E85E0", Offset = "0x14E85E0", VA = "0x14E85E0")]
		private void ProcessDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x14E70DC", Offset = "0x14E70DC", VA = "0x14E70DC")]
		private void SetupOculus()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x14E8A9C", Offset = "0x14E8A9C", VA = "0x14E8A9C")]
		public LaserInputModule()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public enum VRPlatform
	{
		[Token(Token = "0x4001691")]
		NONE,
		[Token(Token = "0x4001692")]
		OCULUS,
		[Token(Token = "0x4001693")]
		VIVE,
		[Token(Token = "0x4001694")]
		VIVE_STEAM2
	}
	[Token(Token = "0x2000347")]
	public enum Pointer
	{
		[Token(Token = "0x4001696")]
		RightHand,
		[Token(Token = "0x4001697")]
		LeftHand,
		[Token(Token = "0x4001698")]
		Eye
	}
	[Token(Token = "0x2000348")]
	public class MouseInputModule : StandaloneInputModule
	{
		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x14E9AA4", Offset = "0x14E9AA4", VA = "0x14E9AA4", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x14E9B08", Offset = "0x14E9B08", VA = "0x14E9B08")]
		protected new void ProcessMouseEvent()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x14E9DB8", Offset = "0x14E9DB8", VA = "0x14E9DB8")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x14E9E0C", Offset = "0x14E9E0C", VA = "0x14E9E0C")]
		protected new void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x14EA4A0", Offset = "0x14EA4A0", VA = "0x14EA4A0")]
		public MouseInputModule()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class GazeProgressCircle : MonoBehaviour
	{
		[Token(Token = "0x20007A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37228", Offset = "0xA37228")]
		private sealed class <FillCircle>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GazeProgressCircle <>4__this;

			[Token(Token = "0x4002D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x170006B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003214")]
				[Address(RVA = "0x14E3960", Offset = "0x14E3960", VA = "0x14E3960", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003216")]
				[Address(RVA = "0x14E39C8", Offset = "0x14E39C8", VA = "0x14E39C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003211")]
			[Address(RVA = "0x14E37D8", Offset = "0x14E37D8", VA = "0x14E37D8")]
			[DebuggerHidden]
			public <FillCircle>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6003212")]
			[Address(RVA = "0x14E380C", Offset = "0x14E380C", VA = "0x14E380C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003213")]
			[Address(RVA = "0x14E3810", Offset = "0x14E3810", VA = "0x14E3810", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003215")]
			[Address(RVA = "0x14E3968", Offset = "0x14E3968", VA = "0x14E3968", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image circle;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine fillCircle;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UIKitInputModule m_inputModule;

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x14E3528", Offset = "0x14E3528", VA = "0x14E3528")]
		private void Start()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x14E35E8", Offset = "0x14E35E8", VA = "0x14E35E8")]
		private void HandleProgressCircle(GameObject target)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x14E3768", Offset = "0x14E3768", VA = "0x14E3768")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA585D8", Offset = "0xA585D8")]
		private IEnumerator FillCircle()
		{
			return null;
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x14E36A0", Offset = "0x14E36A0", VA = "0x14E36A0")]
		private void ResetGazer()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x14E3804", Offset = "0x14E3804", VA = "0x14E3804")]
		public GazeProgressCircle()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer lr;

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x14E8AB4", Offset = "0x14E8AB4", VA = "0x14E8AB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x14E8B0C", Offset = "0x14E8B0C", VA = "0x14E8B0C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x14E8D28", Offset = "0x14E8D28", VA = "0x14E8D28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x14E8E0C", Offset = "0x14E8E0C", VA = "0x14E8E0C")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class UIKitPointer : MonoBehaviour
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gazePointer;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject laser;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Pointer? temp;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool allowAutoSwitchHand;

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x1346F34", Offset = "0x1346F34", VA = "0x1346F34", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x1347084", Offset = "0x1347084", VA = "0x1347084")]
		private void Update()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x13474E8", Offset = "0x13474E8", VA = "0x13474E8", Slot = "5")]
		protected virtual void SetPointer(Pointer targetPointer)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x13476E8", Offset = "0x13476E8", VA = "0x13476E8", Slot = "6")]
		protected virtual void ResetTransform(Transform trans)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x13477A8", Offset = "0x13477A8", VA = "0x13477A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x134790C", Offset = "0x134790C", VA = "0x134790C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x1347A5C", Offset = "0x1347A5C", VA = "0x1347A5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x1347BC0", Offset = "0x1347BC0", VA = "0x1347BC0")]
		public UIKitPointer()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class UIKitInputModule : BaseInputModule
	{
		[Token(Token = "0x20007A3")]
		public delegate void OnGazeChangedHandler(GameObject target);

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float gazeTimeInSeconds;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public float delayTimeInSeconds;

		[Token(Token = "0x14000013")]
		public event OnGazeChangedHandler OnGazeChanged
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x13469F0", Offset = "0x13469F0", VA = "0x13469F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5863C", Offset = "0xA5863C")]
			add
			{
			}
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x1346A94", Offset = "0x1346A94", VA = "0x1346A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5864C", Offset = "0xA5864C")]
			remove
			{
			}
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x1346B38", Offset = "0x1346B38", VA = "0x1346B38")]
		protected void RaiseGazeChangeEvent(GameObject target)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x1346EDC", Offset = "0x1346EDC", VA = "0x1346EDC", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x1346EE0", Offset = "0x1346EE0", VA = "0x1346EE0")]
		public UIKitInputModule()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034D")]
	public class Card
	{
		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string title;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string subtitle;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite image;

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x14E1CA0", Offset = "0x14E1CA0", VA = "0x14E1CA0")]
		public Card()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class CardItem : MonoBehaviour
	{
		[Token(Token = "0x20007A4")]
		public delegate void OnCardClickedHandler(Card card);

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform title;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform subtitle;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform description;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image image;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Card card;

		[Token(Token = "0x1700019B")]
		public Text Title
		{
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x14E1DF0", Offset = "0x14E1DF0", VA = "0x14E1DF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		public Text Subtitle
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x14E1E8C", Offset = "0x14E1E8C", VA = "0x14E1E8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public Text Description
		{
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0x14E1F28", Offset = "0x14E1F28", VA = "0x14E1F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		public Card Card
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x14E1FC4", Offset = "0x14E1FC4", VA = "0x14E1FC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0x14E1FCC", Offset = "0x14E1FCC", VA = "0x14E1FCC")]
			set
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event OnCardClickedHandler OnCardClicked
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x14E1CA8", Offset = "0x14E1CA8", VA = "0x14E1CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5865C", Offset = "0xA5865C")]
			add
			{
			}
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x14E1D4C", Offset = "0x14E1D4C", VA = "0x14E1D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5866C", Offset = "0xA5866C")]
			remove
			{
			}
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x14E21AC", Offset = "0x14E21AC", VA = "0x14E21AC")]
		public void Awake()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x14E22A8", Offset = "0x14E22A8", VA = "0x14E22A8")]
		public CardItem()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x14E22B0", Offset = "0x14E22B0", VA = "0x14E22B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5867C", Offset = "0xA5867C")]
		private void <Awake>b__18_0()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class CardListManager : MonoBehaviour
	{
		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform listContent;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject itemTemplate;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<Card> cardList;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<CardItem> cardItems;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Card selectedCard;

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x14E26A4", Offset = "0x14E26A4", VA = "0x14E26A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x14E2774", Offset = "0x14E2774", VA = "0x14E2774")]
		private void SetSelectedCard(Card card)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x14E277C", Offset = "0x14E277C", VA = "0x14E277C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x14E26DC", Offset = "0x14E26DC", VA = "0x14E26DC")]
		public void PopulateList()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x14E2890", Offset = "0x14E2890", VA = "0x14E2890")]
		public void AddCardItem(Card card)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x14E29A8", Offset = "0x14E29A8", VA = "0x14E29A8")]
		public CardListManager()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class InputFocusHelper : MonoBehaviour, ISelectHandler, IEventSystemHandler, IPointerClickHandler, IEndDragHandler
	{
		[Token(Token = "0x20007A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37238", Offset = "0xA37238")]
		private sealed class <ActivateInputFieldWithCaret>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputFocusHelper <>4__this;

			[Token(Token = "0x4002D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isMoveCaretToEnd;

			[Token(Token = "0x170006BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003222")]
				[Address(RVA = "0x14E4134", Offset = "0x14E4134", VA = "0x14E4134", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003224")]
				[Address(RVA = "0x14E419C", Offset = "0x14E419C", VA = "0x14E419C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600321F")]
			[Address(RVA = "0x14E3F80", Offset = "0x14E3F80", VA = "0x14E3F80")]
			[DebuggerHidden]
			public <ActivateInputFieldWithCaret>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6003220")]
			[Address(RVA = "0x14E4054", Offset = "0x14E4054", VA = "0x14E4054", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003221")]
			[Address(RVA = "0x14E4058", Offset = "0x14E4058", VA = "0x14E4058", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003223")]
			[Address(RVA = "0x14E413C", Offset = "0x14E413C", VA = "0x14E413C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField input;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int caretPosition;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int selectionAnchorPosition;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int selectionFocusPosition;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float originColorAlpha;

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x14E3D04", Offset = "0x14E3D04", VA = "0x14E3D04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x14E3D6C", Offset = "0x14E3D6C", VA = "0x14E3D6C", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x14E3F14", Offset = "0x14E3F14", VA = "0x14E3F14", Slot = "5")]
		public void OnPointerClick(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x14E3F7C", Offset = "0x14E3F7C", VA = "0x14E3F7C", Slot = "7")]
		public virtual void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x14E3E90", Offset = "0x14E3E90", VA = "0x14E3E90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5868C", Offset = "0xA5868C")]
		private IEnumerator ActivateInputFieldWithCaret(bool isMoveCaretToEnd)
		{
			return null;
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x14E3FAC", Offset = "0x14E3FAC", VA = "0x14E3FAC")]
		public void ForceActivate()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x14E3F18", Offset = "0x14E3F18", VA = "0x14E3F18")]
		public void StorePositionInfo()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x14E3FC8", Offset = "0x14E3FC8", VA = "0x14E3FC8")]
		private void SetPosition()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x14E4020", Offset = "0x14E4020", VA = "0x14E4020")]
		private void SetSelectionAlpha(float alpha)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x14E404C", Offset = "0x14E404C", VA = "0x14E404C")]
		public InputFocusHelper()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class UIKitInputField : MonoBehaviour, ISelectHandler, IEventSystemHandler, IPointerClickHandler, IDeselectHandler
	{
		[Token(Token = "0x20007A6")]
		public enum ContentType
		{
			[Token(Token = "0x4002D58")]
			Standard,
			[Token(Token = "0x4002D59")]
			Password
		}

		[Token(Token = "0x20007A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37248", Offset = "0xA37248")]
		private sealed class <BlinkCaret>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIKitInputField <>4__this;

			[Token(Token = "0x170006BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003228")]
				[Address(RVA = "0x1346980", Offset = "0x1346980", VA = "0x1346980", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600322A")]
				[Address(RVA = "0x13469E8", Offset = "0x13469E8", VA = "0x13469E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003225")]
			[Address(RVA = "0x13467CC", Offset = "0x13467CC", VA = "0x13467CC")]
			[DebuggerHidden]
			public <BlinkCaret>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6003226")]
			[Address(RVA = "0x134685C", Offset = "0x134685C", VA = "0x134685C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003227")]
			[Address(RVA = "0x1346860", Offset = "0x1346860", VA = "0x1346860", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003229")]
			[Address(RVA = "0x1346988", Offset = "0x1346988", VA = "0x1346988", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform wrapper;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text textComponent;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int characterLimit;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public ContentType contentType;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text placeholder;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform caretTransform;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA43650", Offset = "0xA43650")]
		public float caretBlinkRate;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float maxW_textComponent;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string displayedText;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string prevText;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text caretText;

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x1346188", Offset = "0x1346188", VA = "0x1346188")]
		private void Awake()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x1346224", Offset = "0x1346224", VA = "0x1346224", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x13462D4", Offset = "0x13462D4", VA = "0x13462D4", Slot = "5")]
		public void OnPointerClick(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1346360", Offset = "0x1346360", VA = "0x1346360", Slot = "6")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x13463D8", Offset = "0x13463D8", VA = "0x13463D8")]
		public void ForceCaretUpdate()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x134643C", Offset = "0x134643C", VA = "0x134643C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x134656C", Offset = "0x134656C", VA = "0x134656C")]
		private void CalculateLengthOfText(string text)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x134675C", Offset = "0x134675C", VA = "0x134675C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA586F0", Offset = "0xA586F0")]
		private IEnumerator BlinkCaret()
		{
			return null;
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x13467F8", Offset = "0x13467F8", VA = "0x13467F8")]
		public UIKitInputField()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class KeyboardExtentionMethods : MonoBehaviour
	{
		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject symbols;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject alphabets;

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x14E4FBC", Offset = "0x14E4FBC", VA = "0x14E4FBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x14E50D4", Offset = "0x14E50D4", VA = "0x14E50D4")]
		public void SwitchSymbols()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x14E50FC", Offset = "0x14E50FC", VA = "0x14E50FC")]
		public void ToggleObject(GameObject go)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x14E5148", Offset = "0x14E5148", VA = "0x14E5148")]
		public KeyboardExtentionMethods()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class KeyboardManager : MonoBehaviour
	{
		[Token(Token = "0x20007A8")]
		public delegate void OnInputValueUpdatedHandler(string value);

		[Serializable]
		[Token(Token = "0x20007A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37258", Offset = "0xA37258")]
		private sealed class <>c
		{
			[Token(Token = "0x4002D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__18_0;

			[Token(Token = "0x4002D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool> <>9__25_0;

			[Token(Token = "0x6003230")]
			[Address(RVA = "0x14E5E9C", Offset = "0x14E5E9C", VA = "0x14E5E9C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003231")]
			[Address(RVA = "0x14E5EA4", Offset = "0x14E5EA4", VA = "0x14E5EA4")]
			internal void <Backspace>b__18_0()
			{
			}

			[Token(Token = "0x6003232")]
			[Address(RVA = "0x14E5F14", Offset = "0x14E5F14", VA = "0x14E5F14")]
			internal bool <WaitTargetProcessEvent>b__25_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37268", Offset = "0xA37268")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyboardManager <>4__this;

			[Token(Token = "0x4002D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string s;

			[Token(Token = "0x6003233")]
			[Address(RVA = "0x14E5D24", Offset = "0x14E5D24", VA = "0x14E5D24")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6003234")]
			[Address(RVA = "0x14E5F34", Offset = "0x14E5F34", VA = "0x14E5F34")]
			internal void <GenerateInput>b__0()
			{
			}
		}

		[Token(Token = "0x20007AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37278", Offset = "0xA37278")]
		private sealed class <WaitTargetProcessEvent>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action callback;

			[Token(Token = "0x4002D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyboardManager <>4__this;

			[Token(Token = "0x170006BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003238")]
				[Address(RVA = "0x14E64B0", Offset = "0x14E64B0", VA = "0x14E64B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600323A")]
				[Address(RVA = "0x14E6518", Offset = "0x14E6518", VA = "0x14E6518", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003235")]
			[Address(RVA = "0x14E5D2C", Offset = "0x14E5D2C", VA = "0x14E5D2C")]
			[DebuggerHidden]
			public <WaitTargetProcessEvent>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6003236")]
			[Address(RVA = "0x14E5F50", Offset = "0x14E5F50", VA = "0x14E5F50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003237")]
			[Address(RVA = "0x14E5F54", Offset = "0x14E5F54", VA = "0x14E5F54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003239")]
			[Address(RVA = "0x14E64B8", Offset = "0x14E64B8", VA = "0x14E64B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA43668", Offset = "0xA43668")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA43668", Offset = "0xA43668")]
		public bool isUppercase;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA436C8", Offset = "0xA436C8")]
		public Transform keys;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static InputField lastTarget;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static InputField target;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Key[] keyList;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool capslockFlag;

		[Token(Token = "0x1700019F")]
		public static InputField Target
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0x14E5150", Offset = "0x14E5150", VA = "0x14E5150")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001719")]
			[Address(RVA = "0x14E3E2C", Offset = "0x14E3E2C", VA = "0x14E3E2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		private string Input
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0x14E53F8", Offset = "0x14E53F8", VA = "0x14E53F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600171D")]
			[Address(RVA = "0x14E5494", Offset = "0x14E5494", VA = "0x14E5494")]
			set
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event OnInputValueUpdatedHandler OnInputValueUpdated
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x14E52B0", Offset = "0x14E52B0", VA = "0x14E52B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58754", Offset = "0xA58754")]
			add
			{
			}
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x14E5354", Offset = "0x14E5354", VA = "0x14E5354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58764", Offset = "0xA58764")]
			remove
			{
			}
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x14E5534", Offset = "0x14E5534", VA = "0x14E5534")]
		private void Awake()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x14E5598", Offset = "0x14E5598", VA = "0x14E5598")]
		private void Start()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x14E5760", Offset = "0x14E5760", VA = "0x14E5760")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x14E59E0", Offset = "0x14E59E0", VA = "0x14E59E0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x14E5674", Offset = "0x14E5674", VA = "0x14E5674")]
		public void CapsLock()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x14E5B44", Offset = "0x14E5B44", VA = "0x14E5B44")]
		public void Shift()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x14E5C18", Offset = "0x14E5C18", VA = "0x14E5C18")]
		public void GenerateInput(string s)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x14E5A28", Offset = "0x14E5A28", VA = "0x14E5A28")]
		public void SetInput(string s)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x14E58A4", Offset = "0x14E58A4", VA = "0x14E58A4")]
		private void ForceInputFieldActivated()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x14E5964", Offset = "0x14E5964", VA = "0x14E5964")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58774", Offset = "0xA58774")]
		private IEnumerator WaitTargetProcessEvent(Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x14E5D58", Offset = "0x14E5D58", VA = "0x14E5D58")]
		private void SimulateKeyboardEvent(string s)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x14E5E30", Offset = "0x14E5E30", VA = "0x14E5E30")]
		public KeyboardManager()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class Alphabet : Key
	{
		[Token(Token = "0x600172A")]
		[Address(RVA = "0x14E1C28", Offset = "0x14E1C28", VA = "0x14E1C28", Slot = "5")]
		public override void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x14E1C90", Offset = "0x14E1C90", VA = "0x14E1C90")]
		public Alphabet()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class Key : MonoBehaviour
	{
		[Token(Token = "0x20007AC")]
		public delegate void OnKeyClickedHandler(string key);

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Text key;

		[Token(Token = "0x14000016")]
		public event OnKeyClickedHandler OnKeyClicked
		{
			[Token(Token = "0x600172C")]
			[Address(RVA = "0x14E4970", Offset = "0x14E4970", VA = "0x14E4970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA587D8", Offset = "0xA587D8")]
			add
			{
			}
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x14E4A14", Offset = "0x14E4A14", VA = "0x14E4A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA587E8", Offset = "0xA587E8")]
			remove
			{
			}
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x14E4AB8", Offset = "0x14E4AB8", VA = "0x14E4AB8", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x14E4B98", Offset = "0x14E4B98", VA = "0x14E4B98", Slot = "5")]
		public virtual void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x14E4B9C", Offset = "0x14E4B9C", VA = "0x14E4B9C", Slot = "6")]
		public virtual void ShiftKey()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x14E1C98", Offset = "0x14E1C98", VA = "0x14E1C98")]
		public Key()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x14E4BA0", Offset = "0x14E4BA0", VA = "0x14E4BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA587F8", Offset = "0xA587F8")]
		private void <Awake>b__5_0()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class Number : Key
	{
		[Token(Token = "0x6001733")]
		[Address(RVA = "0x14EA540", Offset = "0x14EA540", VA = "0x14EA540")]
		public Number()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class Shift : Key
	{
		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text subscript;

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x13448C8", Offset = "0x13448C8", VA = "0x13448C8", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1344954", Offset = "0x1344954", VA = "0x1344954", Slot = "6")]
		public override void ShiftKey()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x13449EC", Offset = "0x13449EC", VA = "0x13449EC")]
		public Shift()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class Symbol : Key
	{
		[Token(Token = "0x6001737")]
		[Address(RVA = "0x1345B0C", Offset = "0x1345B0C", VA = "0x1345B0C")]
		public Symbol()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class MobileKeyboardManager : MonoBehaviour
	{
		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA43720", Offset = "0xA43720")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA43720", Offset = "0xA43720")]
		public bool isUppercase;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA43780", Offset = "0xA43780")]
		public Transform keys;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UIKitInputField target;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Key[] keyList;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool capslockFlag;

		[Token(Token = "0x170001A1")]
		public static UIKitInputField Target
		{
			[Token(Token = "0x6001738")]
			[Address(RVA = "0x14E9324", Offset = "0x14E9324", VA = "0x14E9324")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001739")]
			[Address(RVA = "0x14E9484", Offset = "0x14E9484", VA = "0x14E9484")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		private string Input
		{
			[Token(Token = "0x600173A")]
			[Address(RVA = "0x14E94D8", Offset = "0x14E94D8", VA = "0x14E94D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600173B")]
			[Address(RVA = "0x14E9574", Offset = "0x14E9574", VA = "0x14E9574")]
			set
			{
			}
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x14E965C", Offset = "0x14E965C", VA = "0x14E965C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x14E96C0", Offset = "0x14E96C0", VA = "0x14E96C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x14E9888", Offset = "0x14E9888", VA = "0x14E9888")]
		public void Backspace()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x14E98F0", Offset = "0x14E98F0", VA = "0x14E98F0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x14E979C", Offset = "0x14E979C", VA = "0x14E979C")]
		public void CapsLock()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x14E9998", Offset = "0x14E9998", VA = "0x14E9998")]
		public void Shift()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x14E9A6C", Offset = "0x14E9A6C", VA = "0x14E9A6C")]
		public void GenerateInput(string s)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x14E9A9C", Offset = "0x14E9A9C", VA = "0x14E9A9C")]
		public MobileKeyboardManager()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class KeyboardSuggestions : MonoBehaviour
	{
		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyboardManager keyboardManager;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxNumberOfSuggestions;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> suggestions;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string pattern;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SuggestionButton[] suggestionButtons;

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x14E6560", Offset = "0x14E6560", VA = "0x14E6560")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x14E6670", Offset = "0x14E6670", VA = "0x14E6670")]
		private void Start()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x14E678C", Offset = "0x14E678C", VA = "0x14E678C")]
		private void Suggest(string word)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x14E6888", Offset = "0x14E6888", VA = "0x14E6888")]
		private bool IsSkipSugestion()
		{
			return default(bool);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x14E6958", Offset = "0x14E6958", VA = "0x14E6958")]
		private void GenerateSuggestionsUI()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x14E6A3C", Offset = "0x14E6A3C", VA = "0x14E6A3C")]
		private void SetSuggestionToCurrentInput(string word)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x14E6B84", Offset = "0x14E6B84", VA = "0x14E6B84")]
		public KeyboardSuggestions()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class SuggestionButton : MonoBehaviour
	{
		[Token(Token = "0x20007AD")]
		public delegate void OnSuggestionClickedHandler(string word);

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text suggestionText;

		[Token(Token = "0x14000017")]
		public event OnSuggestionClickedHandler OnSuggestionClicked
		{
			[Token(Token = "0x600174B")]
			[Address(RVA = "0x1344FA4", Offset = "0x1344FA4", VA = "0x1344FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58808", Offset = "0xA58808")]
			add
			{
			}
			[Token(Token = "0x600174C")]
			[Address(RVA = "0x1345048", Offset = "0x1345048", VA = "0x1345048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58818", Offset = "0xA58818")]
			remove
			{
			}
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x13450EC", Offset = "0x13450EC", VA = "0x13450EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x13451A8", Offset = "0x13451A8", VA = "0x13451A8")]
		public void SetSuggestion(string word)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x1345258", Offset = "0x1345258", VA = "0x1345258")]
		public SuggestionButton()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x1345260", Offset = "0x1345260", VA = "0x1345260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58828", Offset = "0xA58828")]
		private void <Awake>b__5_0()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class SuggestionSetup
	{
		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SuggestionSetup instance;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Node root;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] textArray;

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x134567C", Offset = "0x134567C", VA = "0x134567C")]
		public SuggestionSetup(string[] textArray)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x1345714", Offset = "0x1345714", VA = "0x1345714")]
		private void PreProcess()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x13458A4", Offset = "0x13458A4", VA = "0x13458A4")]
		public List<string> GetSuggestions(string word, int maxNumberOfSuggestions)
		{
			return null;
		}
	}
	[Token(Token = "0x200035D")]
	public class Node
	{
		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<char, Node> nodes;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> indexes;

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x14EA4A8", Offset = "0x14EA4A8", VA = "0x14EA4A8")]
		public Node()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class Item : MonoBehaviour
	{
		[Token(Token = "0x20007AE")]
		public delegate void OnItemSelectedHandler(Item item);

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Button button;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Color normalColor;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Color highlightedColor;

		[Token(Token = "0x14000018")]
		public event OnItemSelectedHandler OnItemSelected
		{
			[Token(Token = "0x6001755")]
			[Address(RVA = "0x14E41A4", Offset = "0x14E41A4", VA = "0x14E41A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58838", Offset = "0xA58838")]
			add
			{
			}
			[Token(Token = "0x6001756")]
			[Address(RVA = "0x14E4248", Offset = "0x14E4248", VA = "0x14E4248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58848", Offset = "0xA58848")]
			remove
			{
			}
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x14E42EC", Offset = "0x14E42EC", VA = "0x14E42EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x14E4474", Offset = "0x14E4474", VA = "0x14E4474", Slot = "4")]
		public virtual void Activate()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x14E4504", Offset = "0x14E4504", VA = "0x14E4504", Slot = "5")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x14E457C", Offset = "0x14E457C", VA = "0x14E457C", Slot = "6")]
		public virtual void DeactivateSubMenu()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x14E4580", Offset = "0x14E4580", VA = "0x14E4580")]
		public Item()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x14E4588", Offset = "0x14E4588", VA = "0x14E4588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58858", Offset = "0xA58858")]
		private void <Awake>b__7_0()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class ListSelectionHelper : MonoBehaviour
	{
		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform list;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Item initialActivatedItem;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Item currentSelectedItem;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Item[] items;

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x14E8E14", Offset = "0x14E8E14", VA = "0x14E8E14")]
		private void Awake()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x14E8E74", Offset = "0x14E8E74", VA = "0x14E8E74")]
		private void Start()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x14E8FAC", Offset = "0x14E8FAC", VA = "0x14E8FAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x14E9170", Offset = "0x14E9170", VA = "0x14E9170")]
		private void SelectionHelper(Item item)
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x14E90DC", Offset = "0x14E90DC", VA = "0x14E90DC")]
		public void DeselectCurrentItem()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x14E91B0", Offset = "0x14E91B0", VA = "0x14E91B0")]
		public ListSelectionHelper()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class MenuItem : Item
	{
		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject subMenu;

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x14E91B8", Offset = "0x14E91B8", VA = "0x14E91B8", Slot = "4")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x14E9258", Offset = "0x14E9258", VA = "0x14E9258", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x14E9284", Offset = "0x14E9284", VA = "0x14E9284", Slot = "6")]
		public override void DeactivateSubMenu()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x14E931C", Offset = "0x14E931C", VA = "0x14E931C")]
		public MenuItem()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class TabItem : Item
	{
		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject relatedPanel;

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x1345B14", Offset = "0x1345B14", VA = "0x1345B14", Slot = "4")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x1345C38", Offset = "0x1345C38", VA = "0x1345C38", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x1345D54", Offset = "0x1345D54", VA = "0x1345D54")]
		public TabItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000362")]
	public struct Option
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string value;
	}
	[Token(Token = "0x2000363")]
	public class OptionItem : MonoBehaviour
	{
		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Option option;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string baseTextValue;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool allowTranslation;

		[Token(Token = "0x170001A3")]
		public string Value
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x14EA548", Offset = "0x14EA548", VA = "0x14EA548")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		public Option Option
		{
			[Token(Token = "0x600176B")]
			[Address(RVA = "0x14EA550", Offset = "0x14EA550", VA = "0x14EA550")]
			get
			{
				return default(Option);
			}
			[Token(Token = "0x600176C")]
			[Address(RVA = "0x14EA558", Offset = "0x14EA558", VA = "0x14EA558")]
			set
			{
			}
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x14EAB00", Offset = "0x14EAB00", VA = "0x14EAB00")]
		public void Activate()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x14EAB3C", Offset = "0x14EAB3C", VA = "0x14EAB3C")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x14EA638", Offset = "0x14EA638", VA = "0x14EA638")]
		public void UpdateTranslation()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x14EAB64", Offset = "0x14EAB64", VA = "0x14EAB64")]
		public OptionItem()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class OptionsManager : MonoBehaviour
	{
		[Token(Token = "0x20007AF")]
		public delegate void OnOptionSelectedHandler(int index);

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA437E8", Offset = "0xA437E8")]
		public GameObject optionTemplate;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public List<Option> optionsList;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public string selectedValue;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int firstSelectedIndex;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int selectedIdx;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<OptionItem> optionItems;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject[] m_ObjectsToToggle;

		[Token(Token = "0x14000019")]
		public event OnOptionSelectedHandler OnOptionSelected
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0x14EABBC", Offset = "0x14EABBC", VA = "0x14EABBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58868", Offset = "0xA58868")]
			add
			{
			}
			[Token(Token = "0x6001772")]
			[Address(RVA = "0x14EAC60", Offset = "0x14EAC60", VA = "0x14EAC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58878", Offset = "0xA58878")]
			remove
			{
			}
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x14EAD04", Offset = "0x14EAD04", VA = "0x14EAD04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x14EAE90", Offset = "0x14EAE90", VA = "0x14EAE90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x14EAD3C", Offset = "0x14EAD3C", VA = "0x14EAD3C")]
		private void PopulateOptions()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x14EB170", Offset = "0x14EB170", VA = "0x14EB170")]
		public void PrevOption()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x14EB254", Offset = "0x14EB254", VA = "0x14EB254")]
		public void NextOption()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x14EB00C", Offset = "0x14EB00C", VA = "0x14EB00C")]
		private void ActivateOption(int i)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x14EB1C0", Offset = "0x14EB1C0", VA = "0x14EB1C0")]
		private void DeactivateOption(int i)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x14EB2E0", Offset = "0x14EB2E0", VA = "0x14EB2E0")]
		public void SetOption(int newIndex)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x14EB378", Offset = "0x14EB378", VA = "0x14EB378")]
		public OptionsManager()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public enum ButtonDeactiveStyle
	{
		[Token(Token = "0x40016F8")]
		Disabled,
		[Token(Token = "0x40016F9")]
		Hidden
	}
	[Token(Token = "0x2000366")]
	public class Pagination : MonoBehaviour
	{
		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA43860", Offset = "0xA43860")]
		public Transform targetObject;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA43898", Offset = "0xA43898")]
		public ButtonDeactiveStyle buttonDeactiveStyle;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.UI.Button nextBtn;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.UI.Button prevBtn;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentPage;

		[Token(Token = "0x170001A5")]
		public int CurrentPage
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0x1343894", Offset = "0x1343894", VA = "0x1343894")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600177D")]
			[Address(RVA = "0x134389C", Offset = "0x134389C", VA = "0x134389C")]
			set
			{
			}
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x1343BE0", Offset = "0x1343BE0", VA = "0x1343BE0")]
		private void Start()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1343D44", Offset = "0x1343D44", VA = "0x1343D44")]
		public void Next()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x1343D50", Offset = "0x1343D50", VA = "0x1343D50")]
		public void Prev()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x1343A70", Offset = "0x1343A70", VA = "0x1343A70")]
		private void PagintionBtnControl(bool nextEnabled, bool prevEnabled)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x1343D5C", Offset = "0x1343D5C", VA = "0x1343D5C")]
		public Pagination()
		{
		}
	}
	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33B88", Offset = "0xA33B88")]
	public class CircularProgressBar : MonoBehaviour
	{
		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image circle;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA438D0", Offset = "0xA438D0")]
		public float step;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA438E8", Offset = "0xA438E8")]
		public Transform valueText;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float min;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float max;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ProgressBarManager progressBarManager;

		[Token(Token = "0x170001A6")]
		public Text ValueText
		{
			[Token(Token = "0x6001783")]
			[Address(RVA = "0x14E2A40", Offset = "0x14E2A40", VA = "0x14E2A40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		public float Value
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0x14E2A98", Offset = "0x14E2A98", VA = "0x14E2A98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001785")]
			[Address(RVA = "0x14E2AB4", Offset = "0x14E2AB4", VA = "0x14E2AB4")]
			set
			{
			}
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x14E2AD0", Offset = "0x14E2AD0", VA = "0x14E2AD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x14E2B28", Offset = "0x14E2B28", VA = "0x14E2B28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x14E2D00", Offset = "0x14E2D00", VA = "0x14E2D00")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x14E2D38", Offset = "0x14E2D38", VA = "0x14E2D38")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x14E2D70", Offset = "0x14E2D70", VA = "0x14E2D70")]
		private void UpdateValue(float newValue)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x14E2C04", Offset = "0x14E2C04", VA = "0x14E2C04")]
		private void UpdateValueText(float newValue)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x14E2D8C", Offset = "0x14E2D8C", VA = "0x14E2D8C")]
		public CircularProgressBar()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class ProgressBarManager : MonoBehaviour
	{
		[Token(Token = "0x20007B0")]
		public delegate void OnValueUpdatedHandler(float updatedValue);

		[Token(Token = "0x20007B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37288", Offset = "0xA37288")]
		private sealed class <SlideTo>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float target;

			[Token(Token = "0x4002D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float toValue;

			[Token(Token = "0x4002D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4002D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressBarManager <>4__this;

			[Token(Token = "0x4002D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <fromValue>5__2;

			[Token(Token = "0x4002D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x170006C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003252")]
				[Address(RVA = "0x13445E8", Offset = "0x13445E8", VA = "0x13445E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003254")]
				[Address(RVA = "0x1344650", Offset = "0x1344650", VA = "0x1344650", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600324F")]
			[Address(RVA = "0x1344230", Offset = "0x1344230", VA = "0x1344230")]
			[DebuggerHidden]
			public <SlideTo>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6003250")]
			[Address(RVA = "0x1344264", Offset = "0x1344264", VA = "0x1344264", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003251")]
			[Address(RVA = "0x1344268", Offset = "0x1344268", VA = "0x1344268", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003253")]
			[Address(RVA = "0x13445F0", Offset = "0x13445F0", VA = "0x13445F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine slideCoroutine;

		[Token(Token = "0x1400001A")]
		public event OnValueUpdatedHandler OnValueIsUpdating
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0x1343D64", Offset = "0x1343D64", VA = "0x1343D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58888", Offset = "0xA58888")]
			add
			{
			}
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x1343E08", Offset = "0x1343E08", VA = "0x1343E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58898", Offset = "0xA58898")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event OnValueUpdatedHandler OnValueStopUpgating
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0x1343EAC", Offset = "0x1343EAC", VA = "0x1343EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA588A8", Offset = "0xA588A8")]
			add
			{
			}
			[Token(Token = "0x6001790")]
			[Address(RVA = "0x1343F50", Offset = "0x1343F50", VA = "0x1343F50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA588B8", Offset = "0xA588B8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x1343FF4", Offset = "0x1343FF4", VA = "0x1343FF4")]
		public void IncreaseValue(float target, float step, float min, float max)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x134415C", Offset = "0x134415C", VA = "0x134415C")]
		public void DecreaseValue(float target, float step, float min, float max)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x13440C8", Offset = "0x13440C8", VA = "0x13440C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA588C8", Offset = "0xA588C8")]
		private IEnumerator SlideTo(float target, float toValue, float time = 0.2f)
		{
			return null;
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x134425C", Offset = "0x134425C", VA = "0x134425C")]
		public ProgressBarManager()
		{
		}
	}
	[Token(Token = "0x2000369")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33BEC", Offset = "0xA33BEC")]
	public class ScrollController : MonoBehaviour
	{
		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Scrollbar scrollbar;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA43940", Offset = "0xA43940")]
		public float step;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float min;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float max;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ProgressBarManager progressBarManager;

		[Token(Token = "0x170001A8")]
		public float Value
		{
			[Token(Token = "0x6001795")]
			[Address(RVA = "0x1344700", Offset = "0x1344700", VA = "0x1344700")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001796")]
			[Address(RVA = "0x134471C", Offset = "0x134471C", VA = "0x134471C")]
			set
			{
			}
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x1344738", Offset = "0x1344738", VA = "0x1344738")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x1344790", Offset = "0x1344790", VA = "0x1344790")]
		private void Start()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x134480C", Offset = "0x134480C", VA = "0x134480C")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x1344850", Offset = "0x1344850", VA = "0x1344850")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x1344894", Offset = "0x1344894", VA = "0x1344894")]
		private void UpdateValue(float newValue)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x13448B0", Offset = "0x13448B0", VA = "0x13448B0")]
		public ScrollController()
		{
		}
	}
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA33C50", Offset = "0xA33C50")]
	public class SliderProgressBar : MonoBehaviour
	{
		[Token(Token = "0x20007B2")]
		public enum ValueType
		{
			[Token(Token = "0x4002D6F")]
			Percentage,
			[Token(Token = "0x4002D70")]
			Number
		}

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Slider slider;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float step;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA43958", Offset = "0xA43958")]
		public ValueType valuePresentedAs;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform valueText;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float roundedPercentage;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float roundedValue;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ProgressBarManager progressBarManager;

		[Token(Token = "0x170001A9")]
		public Text ValueText
		{
			[Token(Token = "0x600179D")]
			[Address(RVA = "0x13449F4", Offset = "0x13449F4", VA = "0x13449F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		public float Value
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0x1344A4C", Offset = "0x1344A4C", VA = "0x1344A4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600179F")]
			[Address(RVA = "0x1344A70", Offset = "0x1344A70", VA = "0x1344A70")]
			set
			{
			}
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x1344A94", Offset = "0x1344A94", VA = "0x1344A94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x1344AEC", Offset = "0x1344AEC", VA = "0x1344AEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x1344EBC", Offset = "0x1344EBC", VA = "0x1344EBC")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x1344F14", Offset = "0x1344F14", VA = "0x1344F14")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x1344F6C", Offset = "0x1344F6C", VA = "0x1344F6C")]
		private void UpdateValue(float newValue)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x1344C18", Offset = "0x1344C18", VA = "0x1344C18")]
		private void CalculateValue(float newValue)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x1344DB8", Offset = "0x1344DB8", VA = "0x1344DB8")]
		private void UpdateValueText(float newValue)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x1344F90", Offset = "0x1344F90", VA = "0x1344F90")]
		public SliderProgressBar()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class Util : MonoBehaviour
	{
		[Token(Token = "0x60017A8")]
		public static T SafeDestroy<T>(T obj) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60017A9")]
		public static T SafeDestroyGameObject<T>(T component) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x1347BC8", Offset = "0x1347BC8", VA = "0x1347BC8")]
		public static void DestroyChildren(Transform root)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x1347C54", Offset = "0x1347C54", VA = "0x1347C54")]
		public static string ReplaceLastOccurrence(string Source, string Find, string Replace)
		{
			return null;
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x1347CD8", Offset = "0x1347CD8", VA = "0x1347CD8")]
		public Util()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class VREventSystemHelper : EventSystem
	{
		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x1347CE0", Offset = "0x1347CE0", VA = "0x1347CE0", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x1347CEC", Offset = "0x1347CEC", VA = "0x1347CEC")]
		public VREventSystemHelper()
		{
		}
	}
}
namespace VRUiKits.Demo
{
	[Token(Token = "0x200036D")]
	public class ChangeColor : MonoBehaviour
	{
		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material material;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color color;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isClicked;

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x14E105C", Offset = "0x14E105C", VA = "0x14E105C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x14E10C4", Offset = "0x14E10C4", VA = "0x14E10C4")]
		public void PointerEnter()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x14E111C", Offset = "0x14E111C", VA = "0x14E111C")]
		public void PointerLeave()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x14E1150", Offset = "0x14E1150", VA = "0x14E1150")]
		public void PointerClick()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x14E1194", Offset = "0x14E1194", VA = "0x14E1194")]
		public ChangeColor()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class FaceVRCamera : MonoBehaviour
	{
		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform vrCamera;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FaceCameraType type;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float distance;

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x14E119C", Offset = "0x14E119C", VA = "0x14E119C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x14E11F4", Offset = "0x14E11F4", VA = "0x14E11F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x14E13E0", Offset = "0x14E13E0", VA = "0x14E13E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x14E1208", Offset = "0x14E1208", VA = "0x14E1208")]
		private void CalibratePosition()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x14E13F0", Offset = "0x14E13F0", VA = "0x14E13F0")]
		public FaceVRCamera()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public enum FaceCameraType
	{
		[Token(Token = "0x400171B")]
		Always,
		[Token(Token = "0x400171C")]
		OnToggle
	}
	[Token(Token = "0x2000370")]
	public class KeyboardDisplay : MonoBehaviour
	{
		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform vrCamera;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 offset;

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x14E13F8", Offset = "0x14E13F8", VA = "0x14E13F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x14E14DC", Offset = "0x14E14DC", VA = "0x14E14DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x14E14E0", Offset = "0x14E14E0", VA = "0x14E14E0")]
		private void SetPosition()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x14E15C0", Offset = "0x14E15C0", VA = "0x14E15C0")]
		public KeyboardDisplay()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class MouseLook : MonoBehaviour
	{
		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float x;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float y;

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x14E15C8", Offset = "0x14E15C8", VA = "0x14E15C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x14E1770", Offset = "0x14E1770", VA = "0x14E1770")]
		public MouseLook()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class ToggleUIKitHelper : MonoBehaviour
	{
		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIKitPointer pointer;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToToggle;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OVRInput.Button trigger;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public OVRInput.Controller controller;

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x14E1780", Offset = "0x14E1780", VA = "0x14E1780")]
		public void Pause()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x14E19A8", Offset = "0x14E19A8", VA = "0x14E19A8")]
		public void Run()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x14E1880", Offset = "0x14E1880", VA = "0x14E1880")]
		private void Toggle(bool enabled)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x14E1AA8", Offset = "0x14E1AA8", VA = "0x14E1AA8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x14E1C14", Offset = "0x14E1C14", VA = "0x14E1C14")]
		public ToggleUIKitHelper()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x2000373")]
	[ExecuteAlways]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x20007B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37298", Offset = "0xA37298")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x4002D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4002D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x170006C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003258")]
				[Address(RVA = "0x10E2F24", Offset = "0x10E2F24", VA = "0x10E2F24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600325A")]
				[Address(RVA = "0x10E2F8C", Offset = "0x10E2F8C", VA = "0x10E2F8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003255")]
			[Address(RVA = "0x10E21D4", Offset = "0x10E21D4", VA = "0x10E21D4")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6003256")]
			[Address(RVA = "0x10E2438", Offset = "0x10E2438", VA = "0x10E2438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003257")]
			[Address(RVA = "0x10E243C", Offset = "0x10E243C", VA = "0x10E243C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003259")]
			[Address(RVA = "0x10E2F2C", Offset = "0x10E2F2C", VA = "0x10E2F2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x10E2048", Offset = "0x10E2048", VA = "0x10E2048")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x10E20B0", Offset = "0x10E20B0", VA = "0x10E20B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x10E214C", Offset = "0x10E214C", VA = "0x10E214C")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x10E20DC", Offset = "0x10E20DC", VA = "0x10E20DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5892C", Offset = "0xA5892C")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x10E2200", Offset = "0x10E2200", VA = "0x10E2200")]
		public WarpTextExample()
		{
		}
	}
}
namespace SMTaskManagement
{
	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33CC4", Offset = "0xA33CC4")]
	public class GradedTask : Task
	{
		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _activeScore;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _scoreMod;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA439D0", Offset = "0xA439D0")]
		private int <grade>k__BackingField;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _highScore;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int _highGrade;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected List<float> _gradeMetrics;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected List<GradeModifierData> _gradeModifiers;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _timeStart;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _timeEnd;

		[Token(Token = "0x170001AB")]
		public float currentScore
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x1180A4C", Offset = "0x1180A4C", VA = "0x1180A4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AC")]
		public int grade
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x1180A58", Offset = "0x1180A58", VA = "0x1180A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58990", Offset = "0xA58990")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x1180A60", Offset = "0x1180A60", VA = "0x1180A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA589A0", Offset = "0xA589A0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public float highScore
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x1180A68", Offset = "0x1180A68", VA = "0x1180A68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AE")]
		public int highGrade
		{
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0x1180A70", Offset = "0x1180A70", VA = "0x1180A70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AF")]
		public float totalTime
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x1180A78", Offset = "0x1180A78", VA = "0x1180A78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1180A84", Offset = "0x1180A84", VA = "0x1180A84", Slot = "4")]
		public override void Reset()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1180BA0", Offset = "0x1180BA0", VA = "0x1180BA0", Slot = "5")]
		public virtual void AddScore(float score)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x1180BB0", Offset = "0x1180BB0", VA = "0x1180BB0", Slot = "6")]
		public virtual void ApplyModifier(Enums.GradeModifierType modType, float modValue = 0f)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x1180CE8", Offset = "0x1180CE8", VA = "0x1180CE8", Slot = "7")]
		public virtual void CalculateGrade()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x1180DD8", Offset = "0x1180DD8", VA = "0x1180DD8", Slot = "8")]
		public virtual void StartTask()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x1180E08", Offset = "0x1180E08", VA = "0x1180E08", Slot = "9")]
		public virtual void EndTask()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x1180E3C", Offset = "0x1180E3C", VA = "0x1180E3C")]
		public GradedTask()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class HelpManager : MonoBehaviour
	{
		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_HelpTasksUI;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int currentTask;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool hasInitialized;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HelpManager _instance;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskList _taskList;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action OnStatusChanged;

		[Token(Token = "0x170001B0")]
		public static HelpManager instance
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0x1180E4C", Offset = "0x1180E4C", VA = "0x1180E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		public static TaskList taskList
		{
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0x1180E9C", Offset = "0x1180E9C", VA = "0x1180E9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x1180EFC", Offset = "0x1180EFC", VA = "0x1180EFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x118107C", Offset = "0x118107C", VA = "0x118107C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x1181284", Offset = "0x1181284", VA = "0x1181284")]
		private void Update()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1180F54", Offset = "0x1180F54", VA = "0x1180F54")]
		private void LoadSceneTasks()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x1181880", Offset = "0x1181880", VA = "0x1181880")]
		private void DisableHelpTasksUI()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x11813F0", Offset = "0x11813F0", VA = "0x11813F0")]
		private void UpdateHelpTasksDisplay()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x1181970", Offset = "0x1181970", VA = "0x1181970")]
		public static Task GetTask(string taskName)
		{
			return null;
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x1181B00", Offset = "0x1181B00", VA = "0x1181B00")]
		public void UpdateDisplays()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x1181340", Offset = "0x1181340", VA = "0x1181340")]
		private void IncrementTaskSequence(bool isRecursive = false)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x1181E60", Offset = "0x1181E60", VA = "0x1181E60")]
		public HelpManager()
		{
		}
	}
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33D10", Offset = "0xA33D10")]
	public class Task : ScriptableObject
	{
		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string displayText;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43A30", Offset = "0xA43A30")]
		private bool <isCompleted>k__BackingField;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action OnStatusChanged;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Enums.TaskProgress _progressType;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43A50", Offset = "0xA43A50")]
		private int <progress>k__BackingField;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _progressGoal;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43A70", Offset = "0xA43A70")]
		private List<string> <data>k__BackingField;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _delay;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string translationKey;

		[Token(Token = "0x170001B2")]
		public bool isCompleted
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x1181E68", Offset = "0x1181E68", VA = "0x1181E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA589B0", Offset = "0xA589B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x1181E70", Offset = "0x1181E70", VA = "0x1181E70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA589C0", Offset = "0xA589C0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public Enums.TaskProgress progressType
		{
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x1181E7C", Offset = "0x1181E7C", VA = "0x1181E7C")]
			get
			{
				return default(Enums.TaskProgress);
			}
		}

		[Token(Token = "0x170001B4")]
		public int progress
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x1181E84", Offset = "0x1181E84", VA = "0x1181E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA589D0", Offset = "0xA589D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x1181E8C", Offset = "0x1181E8C", VA = "0x1181E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA589E0", Offset = "0xA589E0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public int progressGoal
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x1181E94", Offset = "0x1181E94", VA = "0x1181E94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B6")]
		public List<string> data
		{
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x1181E9C", Offset = "0x1181E9C", VA = "0x1181E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA589F0", Offset = "0xA589F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x1181EA4", Offset = "0x1181EA4", VA = "0x1181EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58A00", Offset = "0xA58A00")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public float Delay
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0x1181EAC", Offset = "0x1181EAC", VA = "0x1181EAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x1181EB4", Offset = "0x1181EB4", VA = "0x1181EB4")]
		public void MakeProgress(int amount, Enums.TaskProgress type)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x1181EDC", Offset = "0x1181EDC", VA = "0x1181EDC")]
		public void MakeProgress(int amount = 1)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x1181EF8", Offset = "0x1181EF8", VA = "0x1181EF8")]
		public void CompleteTask()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x1180A98", Offset = "0x1180A98", VA = "0x1180A98", Slot = "4")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x1181FE0", Offset = "0x1181FE0", VA = "0x1181FE0")]
		public void AddData(string newData)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x1180E44", Offset = "0x1180E44", VA = "0x1180E44")]
		public Task()
		{
		}
	}
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA33D5C", Offset = "0xA33D5C")]
	public class TaskList : ScriptableObject
	{
		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected List<Task> _tasks;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action OnListCompleted;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA43AA0", Offset = "0xA43AA0")]
		private bool <listCompleted>k__BackingField;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		protected bool _resetOnStart;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool helpTask;

		[Token(Token = "0x170001B8")]
		public List<Task> tasks
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x1182078", Offset = "0x1182078", VA = "0x1182078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public bool listCompleted
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x1182080", Offset = "0x1182080", VA = "0x1182080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58A10", Offset = "0xA58A10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x1182088", Offset = "0x1182088", VA = "0x1182088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58A20", Offset = "0xA58A20")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public bool resetOnStart
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x1182094", Offset = "0x1182094", VA = "0x1182094")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x1181710", Offset = "0x1181710", VA = "0x1181710")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x1181118", Offset = "0x1181118", VA = "0x1181118")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x118209C", Offset = "0x118209C", VA = "0x118209C")]
		public bool ListCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x1181610", Offset = "0x1181610", VA = "0x1181610")]
		public void ResetAll()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x11821A4", Offset = "0x11821A4", VA = "0x11821A4")]
		private void ListStatusUpdate()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x118233C", Offset = "0x118233C", VA = "0x118233C")]
		public TaskList()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class TaskManager : MonoBehaviour
	{
		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TaskManager _instance;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TaskList _taskList;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action OnStatusChanged;

		[Token(Token = "0x170001BB")]
		public static TaskManager instance
		{
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x118234C", Offset = "0x118234C", VA = "0x118234C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public static TaskList taskList
		{
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x118239C", Offset = "0x118239C", VA = "0x118239C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x11823FC", Offset = "0x11823FC", VA = "0x11823FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x11825B0", Offset = "0x11825B0", VA = "0x11825B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x1182454", Offset = "0x1182454", VA = "0x1182454")]
		private void LoadSceneTasks()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x118264C", Offset = "0x118264C", VA = "0x118264C")]
		public static Task GetTask(string taskName)
		{
			return null;
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x1181FCC", Offset = "0x1181FCC", VA = "0x1181FCC")]
		public void UpdateDisplays()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x1182820", Offset = "0x1182820", VA = "0x1182820")]
		public TaskManager()
		{
		}
	}
}
namespace HappyGiant.Json
{
	[Token(Token = "0x2000379")]
	public enum NullValueHandling
	{
		[Token(Token = "0x400174C")]
		Include,
		[Token(Token = "0x400174D")]
		Ignore
	}
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA33DA8", Offset = "0xA33DA8")]
	public class JsonProperty : Attribute
	{
		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string PropertyName;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NullValueHandling NullValueHandling;

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x1197328", Offset = "0x1197328", VA = "0x1197328")]
		public JsonProperty()
		{
		}
	}
	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0xA33DBC", Offset = "0xA33DBC")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xA33DBC", Offset = "0xA33DBC")]
	public class JsonArray : List<object>
	{
		[Token(Token = "0x6001804")]
		[Address(RVA = "0x11964C8", Offset = "0x11964C8", VA = "0x11964C8")]
		public JsonArray()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x1196538", Offset = "0x1196538", VA = "0x1196538")]
		public JsonArray(int capacity)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x11965B8", Offset = "0x11965B8", VA = "0x11965B8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA33E28", Offset = "0xA33E28")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0xA33E28", Offset = "0xA33E28")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xA33E28", Offset = "0xA33E28")]
	public class JsonObject : IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable
	{
		[Token(Token = "0x4001750")]
		private const int DICTIONARY_DEFAULT_SIZE = 16;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, object> _members;

		[Token(Token = "0x170001BD")]
		public object Item
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x1196738", Offset = "0x1196738", VA = "0x1196738")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public ICollection<string> Keys
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x1196BA4", Offset = "0x1196BA4", VA = "0x1196BA4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		public ICollection<object> Values
		{
			[Token(Token = "0x6001810")]
			[Address(RVA = "0x1196CD4", Offset = "0x1196CD4", VA = "0x1196CD4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public object Item
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0x1196D2C", Offset = "0x1196D2C", VA = "0x1196D2C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001812")]
			[Address(RVA = "0x1196D94", Offset = "0x1196D94", VA = "0x1196D94", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public int Count
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0x11970D4", Offset = "0x11970D4", VA = "0x11970D4", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C2")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0x119712C", Offset = "0x119712C", VA = "0x119712C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x119663C", Offset = "0x119663C", VA = "0x119663C")]
		public JsonObject()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x11966B4", Offset = "0x11966B4", VA = "0x11966B4")]
		public JsonObject(IEqualityComparer<string> comparer)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x1196740", Offset = "0x1196740", VA = "0x1196740")]
		internal static object GetAtIndex(IDictionary<string, object> obj, int index)
		{
			return null;
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x1196ACC", Offset = "0x1196ACC", VA = "0x1196ACC", Slot = "9")]
		public void Add(string key, object value)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x1196B3C", Offset = "0x1196B3C", VA = "0x1196B3C", Slot = "8")]
		public bool ContainsKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x1196BFC", Offset = "0x1196BFC", VA = "0x1196BFC", Slot = "10")]
		public bool Remove(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1196C64", Offset = "0x1196C64", VA = "0x1196C64", Slot = "11")]
		public bool TryGetValue(string key, out object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x1196E04", Offset = "0x1196E04", VA = "0x1196E04", Slot = "14")]
		public void Add(KeyValuePair<string, object> item)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1196E74", Offset = "0x1196E74", VA = "0x1196E74", Slot = "15")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1196ECC", Offset = "0x1196ECC", VA = "0x1196ECC", Slot = "16")]
		public bool Contains(KeyValuePair<string, object> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1196F5C", Offset = "0x1196F5C", VA = "0x1196F5C", Slot = "17")]
		public void CopyTo(KeyValuePair<string, object>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x1197134", Offset = "0x1197134", VA = "0x1197134", Slot = "18")]
		public bool Remove(KeyValuePair<string, object> item)
		{
			return default(bool);
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x119719C", Offset = "0x119719C", VA = "0x119719C", Slot = "19")]
		public IEnumerator<KeyValuePair<string, object>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x119722C", Offset = "0x119722C", VA = "0x119722C", Slot = "20")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x11972BC", Offset = "0x11972BC", VA = "0x11972BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0xA33EB8", Offset = "0xA33EB8")]
	public static class SimpleJson
	{
		[Token(Token = "0x20007B4")]
		private enum TokenType : byte
		{
			[Token(Token = "0x4002D77")]
			NONE,
			[Token(Token = "0x4002D78")]
			CURLY_OPEN,
			[Token(Token = "0x4002D79")]
			CURLY_CLOSE,
			[Token(Token = "0x4002D7A")]
			SQUARED_OPEN,
			[Token(Token = "0x4002D7B")]
			SQUARED_CLOSE,
			[Token(Token = "0x4002D7C")]
			COLON,
			[Token(Token = "0x4002D7D")]
			COMMA,
			[Token(Token = "0x4002D7E")]
			STRING,
			[Token(Token = "0x4002D7F")]
			NUMBER,
			[Token(Token = "0x4002D80")]
			TRUE,
			[Token(Token = "0x4002D81")]
			FALSE,
			[Token(Token = "0x4002D82")]
			NULL
		}

		[Token(Token = "0x4001752")]
		private const int BUILDER_INIT = 2000;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly char[] EscapeTable;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly char[] EscapeCharacters;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Type> NumberTypes;

		[Token(Token = "0x4001756")]
		[ThreadStatic]
		private static StringBuilder _serializeObjectBuilder;

		[Token(Token = "0x4001757")]
		[ThreadStatic]
		private static StringBuilder _parseStringBuilder;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IJsonSerializerStrategy _currentJsonSerializerStrategy;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static PocoJsonSerializerStrategy _pocoJsonSerializerStrategy;

		[Token(Token = "0x170001C3")]
		public static IJsonSerializerStrategy CurrentJsonSerializerStrategy
		{
			[Token(Token = "0x6001834")]
			[Address(RVA = "0x119E458", Offset = "0x119E458", VA = "0x119E458")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001835")]
			[Address(RVA = "0x11A0DF8", Offset = "0x11A0DF8", VA = "0x11A0DF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0xA636CC", Offset = "0xA636CC")]
		public static PocoJsonSerializerStrategy PocoJsonSerializerStrategy
		{
			[Token(Token = "0x6001836")]
			[Address(RVA = "0x11A0D4C", Offset = "0x11A0D4C", VA = "0x11A0D4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x119DB58", Offset = "0x119DB58", VA = "0x119DB58")]
		static SimpleJson()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x119DF10", Offset = "0x119DF10", VA = "0x119DF10")]
		public static object DeserializeObject(string json)
		{
			return null;
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x119DFCC", Offset = "0x119DFCC", VA = "0x119DFCC")]
		public static bool TryDeserializeObject(string json, out object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x119E2A0", Offset = "0x119E2A0", VA = "0x119E2A0")]
		public static object DeserializeObject(string json, Type type, [Optional] IJsonSerializerStrategy jsonSerializerStrategy)
		{
			return null;
		}

		[Token(Token = "0x6001821")]
		public static T DeserializeObject<T>(string json, [Optional] IJsonSerializerStrategy jsonSerializerStrategy)
		{
			return (T)null;
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1191D80", Offset = "0x1191D80", VA = "0x1191D80")]
		public static string SerializeObject(object json, [Optional] IJsonSerializerStrategy jsonSerializerStrategy)
		{
			return null;
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x119EBA8", Offset = "0x119EBA8", VA = "0x119EBA8")]
		public static string EscapeToJavascriptString(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x119ED70", Offset = "0x119ED70", VA = "0x119ED70")]
		private static IDictionary<string, object> ParseObject(string json, ref int index, ref bool success)
		{
			return null;
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x119F950", Offset = "0x119F950", VA = "0x119F950")]
		private static JsonArray ParseArray(string json, ref int index, ref bool success)
		{
			return null;
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x119E078", Offset = "0x119E078", VA = "0x119E078")]
		private static object ParseValue(string json, ref int index, ref bool success)
		{
			return null;
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x119F358", Offset = "0x119F358", VA = "0x119F358")]
		private static string ParseString(string json, ref int index, ref bool success)
		{
			return null;
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x119FE44", Offset = "0x119FE44", VA = "0x119FE44")]
		private static string ConvertFromUtf32(int utf32)
		{
			return null;
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x119FAEC", Offset = "0x119FAEC", VA = "0x119FAEC")]
		private static object ParseNumber(string json, ref int index, ref bool success)
		{
			return null;
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x119FF84", Offset = "0x119FF84", VA = "0x119FF84")]
		private static int GetLastIndexOfNumber(string json, int index)
		{
			return default(int);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x119FD94", Offset = "0x119FD94", VA = "0x119FD94")]
		private static void EatWhitespace(string json, ref int index)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x119F2DC", Offset = "0x119F2DC", VA = "0x119F2DC")]
		private static TokenType LookAhead(string json, int index)
		{
			return default(TokenType);
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x119EFC8", Offset = "0x119EFC8", VA = "0x119EFC8")]
		private static TokenType NextToken(string json, ref int index)
		{
			return default(TokenType);
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x119E4F0", Offset = "0x119E4F0", VA = "0x119E4F0")]
		private static bool SerializeValue(IJsonSerializerStrategy jsonSerializerStrategy, object value, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x11A0278", Offset = "0x11A0278", VA = "0x11A0278")]
		private static bool SerializeObject(IJsonSerializerStrategy jsonSerializerStrategy, IEnumerable keys, IEnumerable values, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x11A0694", Offset = "0x11A0694", VA = "0x11A0694")]
		private static bool SerializeArray(IJsonSerializerStrategy jsonSerializerStrategy, IEnumerable anArray, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x11A0030", Offset = "0x11A0030", VA = "0x11A0030")]
		private static bool SerializeString(string aString, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x11A0B0C", Offset = "0x11A0B0C", VA = "0x11A0B0C")]
		private static bool SerializeNumber(object number, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x11A09DC", Offset = "0x11A09DC", VA = "0x11A09DC")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200037E")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0xA33F04", Offset = "0xA33F04")]
	public interface IJsonSerializerStrategy
	{
		[Token(Token = "0x6001837")]
		bool TrySerializeNonPrimitiveObject(object input, out object output);

		[Token(Token = "0x6001838")]
		object DeserializeObject(object value, Type type);
	}
	[Token(Token = "0x200037F")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0xA33F50", Offset = "0xA33F50")]
	public class PocoJsonSerializerStrategy : IJsonSerializerStrategy
	{
		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal IDictionary<Type, ReflectionUtils.ConstructorDelegate> ConstructorCache;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal IDictionary<Type, IDictionary<MemberInfo, ReflectionUtils.GetDelegate>> GetCache;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal IDictionary<Type, IDictionary<string, KeyValuePair<Type, ReflectionUtils.SetDelegate>>> SetCache;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly Type[] EmptyTypes;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly Type[] ArrayConstructorParameterTypes;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string[] Iso8601Format;

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x1197330", Offset = "0x1197330", VA = "0x1197330")]
		public PocoJsonSerializerStrategy()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x11974A0", Offset = "0x11974A0", VA = "0x11974A0", Slot = "6")]
		protected virtual string MapClrMemberNameToJsonFieldName(MemberInfo memberInfo)
		{
			return null;
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1197600", Offset = "0x1197600", VA = "0x1197600", Slot = "7")]
		protected virtual void MapClrMemberNameToJsonFieldName(MemberInfo memberInfo, out string jsonName, out JsonProperty jsonProp)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1197770", Offset = "0x1197770", VA = "0x1197770", Slot = "8")]
		internal virtual ReflectionUtils.ConstructorDelegate ContructorDelegateFactory(Type key)
		{
			return null;
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x11978B8", Offset = "0x11978B8", VA = "0x11978B8", Slot = "9")]
		internal virtual IDictionary<MemberInfo, ReflectionUtils.GetDelegate> GetterValueFactory(Type type)
		{
			return null;
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x119815C", Offset = "0x119815C", VA = "0x119815C", Slot = "10")]
		internal virtual IDictionary<string, KeyValuePair<Type, ReflectionUtils.SetDelegate>> SetterValueFactory(Type type)
		{
			return null;
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x1198AC4", Offset = "0x1198AC4", VA = "0x1198AC4", Slot = "11")]
		public virtual bool TrySerializeNonPrimitiveObject(object input, out object output)
		{
			return default(bool);
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x1198B30", Offset = "0x1198B30", VA = "0x1198B30", Slot = "12")]
		public virtual object DeserializeObject(object value, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x119BE24", Offset = "0x119BE24", VA = "0x119BE24", Slot = "13")]
		protected virtual object SerializeEnum(Enum p)
		{
			return null;
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x119BEE4", Offset = "0x119BEE4", VA = "0x119BEE4", Slot = "14")]
		protected virtual bool TrySerializeKnownTypes(object input, out object output)
		{
			return default(bool);
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x119C1A4", Offset = "0x119C1A4", VA = "0x119C1A4", Slot = "15")]
		protected virtual bool TrySerializeUnknownTypes(object input, out object output)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000380")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0xA33F9C", Offset = "0xA33F9C")]
	internal class ReflectionUtils
	{
		[Token(Token = "0x20007B5")]
		public delegate object GetDelegate(object source);

		[Token(Token = "0x20007B6")]
		public delegate void SetDelegate(object source, object value);

		[Token(Token = "0x20007B7")]
		public delegate object ConstructorDelegate(params object[] args);

		[Token(Token = "0x20007B8")]
		public delegate TValue ThreadSafeDictionaryValueFactory<TKey, TValue>(TKey key);

		[Token(Token = "0x20007B9")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA372A8", Offset = "0xA372A8")]
		public sealed class ThreadSafeDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable
		{
			[Token(Token = "0x4002D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly object _lock;

			[Token(Token = "0x4002D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ThreadSafeDictionaryValueFactory<TKey, TValue> _valueFactory;

			[Token(Token = "0x4002D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Dictionary<TKey, TValue> _dictionary;

			[Token(Token = "0x170006C5")]
			public ICollection<TKey> Keys
			{
				[Token(Token = "0x6003270")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C6")]
			public ICollection<TValue> Values
			{
				[Token(Token = "0x6003273")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C7")]
			public TValue Item
			{
				[Token(Token = "0x6003274")]
				get
				{
					return (TValue)null;
				}
				[Token(Token = "0x6003275")]
				set
				{
				}
			}

			[Token(Token = "0x170006C8")]
			public int Count
			{
				[Token(Token = "0x600327A")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170006C9")]
			public bool IsReadOnly
			{
				[Token(Token = "0x600327B")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600326B")]
			public ThreadSafeDictionary(ThreadSafeDictionaryValueFactory<TKey, TValue> valueFactory)
			{
			}

			[Token(Token = "0x600326C")]
			private TValue Get(TKey key)
			{
				return (TValue)null;
			}

			[Token(Token = "0x600326D")]
			private TValue AddValue(TKey key)
			{
				return (TValue)null;
			}

			[Token(Token = "0x600326E")]
			public void Add(TKey key, TValue value)
			{
			}

			[Token(Token = "0x600326F")]
			public bool ContainsKey(TKey key)
			{
				return default(bool);
			}

			[Token(Token = "0x6003271")]
			public bool Remove(TKey key)
			{
				return default(bool);
			}

			[Token(Token = "0x6003272")]
			public bool TryGetValue(TKey key, out TValue value)
			{
				return default(bool);
			}

			[Token(Token = "0x6003276")]
			public void Add(KeyValuePair<TKey, TValue> item)
			{
			}

			[Token(Token = "0x6003277")]
			public void Clear()
			{
			}

			[Token(Token = "0x6003278")]
			public bool Contains(KeyValuePair<TKey, TValue> item)
			{
				return default(bool);
			}

			[Token(Token = "0x6003279")]
			public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
			{
			}

			[Token(Token = "0x600327C")]
			public bool Remove(KeyValuePair<TKey, TValue> item)
			{
				return default(bool);
			}

			[Token(Token = "0x600327D")]
			public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600327E")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20007BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA372E0", Offset = "0xA372E0")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ConstructorInfo constructorInfo;

			[Token(Token = "0x600327F")]
			[Address(RVA = "0x119D500", Offset = "0x119D500", VA = "0x119D500")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6003280")]
			[Address(RVA = "0x119D87C", Offset = "0x119D87C", VA = "0x119D87C")]
			internal object <GetConstructorByReflection>b__0(object[] args)
			{
				return null;
			}
		}

		[Token(Token = "0x20007BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA372F0", Offset = "0xA372F0")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4002D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MethodInfo methodInfo;

			[Token(Token = "0x6003281")]
			[Address(RVA = "0x119D674", Offset = "0x119D674", VA = "0x119D674")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6003282")]
			[Address(RVA = "0x119D898", Offset = "0x119D898", VA = "0x119D898")]
			internal object <GetGetMethodByReflection>b__0(object source)
			{
				return null;
			}
		}

		[Token(Token = "0x20007BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37300", Offset = "0xA37300")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4002D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo fieldInfo;

			[Token(Token = "0x6003283")]
			[Address(RVA = "0x119D68C", Offset = "0x119D68C", VA = "0x119D68C")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6003284")]
			[Address(RVA = "0x119D928", Offset = "0x119D928", VA = "0x119D928")]
			internal object <GetGetMethodByReflection>b__0(object source)
			{
				return null;
			}
		}

		[Token(Token = "0x20007BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37310", Offset = "0xA37310")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MethodInfo methodInfo;

			[Token(Token = "0x6003285")]
			[Address(RVA = "0x119D7F0", Offset = "0x119D7F0", VA = "0x119D7F0")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6003286")]
			[Address(RVA = "0x119D94C", Offset = "0x119D94C", VA = "0x119D94C")]
			internal void <GetSetMethodByReflection>b__0(object source, object value)
			{
			}
		}

		[Token(Token = "0x20007BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37320", Offset = "0xA37320")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4002D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo fieldInfo;

			[Token(Token = "0x6003287")]
			[Address(RVA = "0x119D808", Offset = "0x119D808", VA = "0x119D808")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6003288")]
			[Address(RVA = "0x119DAA0", Offset = "0x119DAA0", VA = "0x119DAA0")]
			internal void <GetSetMethodByReflection>b__0(object source, object value)
			{
			}
		}

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object[] EmptyObjects;

		[Token(Token = "0x4001761")]
		[ThreadStatic]
		private static object[] _1ObjArray;

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x119CC60", Offset = "0x119CC60", VA = "0x119CC60")]
		public static Type GetTypeInfo(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x119CC64", Offset = "0x119CC64", VA = "0x119CC64")]
		public static Attribute GetAttribute(MemberInfo info, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x119B8CC", Offset = "0x119B8CC", VA = "0x119B8CC")]
		public static Type GetGenericListElementType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x119CDA4", Offset = "0x119CDA4", VA = "0x119CDA4")]
		public static Attribute GetAttribute(Type objectType, Type attributeType)
		{
			return null;
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x119AF20", Offset = "0x119AF20", VA = "0x119AF20")]
		public static Type[] GetGenericTypeArguments(Type type)
		{
			return null;
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x119CD2C", Offset = "0x119CD2C", VA = "0x119CD2C")]
		public static bool IsTypeGeneric(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x119B6C4", Offset = "0x119B6C4", VA = "0x119B6C4")]
		public static bool IsTypeGenericeCollectionInterface(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x119B844", Offset = "0x119B844", VA = "0x119B844")]
		public static bool IsAssignableFrom(Type type1, Type type2)
		{
			return default(bool);
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x119AD8C", Offset = "0x119AD8C", VA = "0x119AD8C")]
		public static bool IsTypeDictionary(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x119AC9C", Offset = "0x119AC9C", VA = "0x119AC9C")]
		public static bool IsNullableType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x119BD4C", Offset = "0x119BD4C", VA = "0x119BD4C")]
		public static object ToNullableType(object obj, Type nullableType)
		{
			return null;
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x119CE84", Offset = "0x119CE84", VA = "0x119CE84")]
		public static bool IsValueType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x119CEF4", Offset = "0x119CEF4", VA = "0x119CEF4")]
		public static IEnumerable<ConstructorInfo> GetConstructors(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x119CF0C", Offset = "0x119CF0C", VA = "0x119CF0C")]
		public static ConstructorInfo GetConstructorInfo(Type type, params Type[] argsType)
		{
			return null;
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x1198028", Offset = "0x1198028", VA = "0x1198028")]
		public static IEnumerable<PropertyInfo> GetProperties(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x11980D4", Offset = "0x11980D4", VA = "0x11980D4")]
		public static IEnumerable<FieldInfo> GetFields(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x119804C", Offset = "0x119804C", VA = "0x119804C")]
		public static MethodInfo GetGetterMethodInfo(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x11989D8", Offset = "0x11989D8", VA = "0x11989D8")]
		public static MethodInfo GetSetterMethodInfo(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x119D328", Offset = "0x119D328", VA = "0x119D328")]
		public static ConstructorDelegate GetContructor(ConstructorInfo constructorInfo)
		{
			return null;
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1197844", Offset = "0x1197844", VA = "0x1197844")]
		public static ConstructorDelegate GetContructor(Type type, params Type[] argsType)
		{
			return null;
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x119D38C", Offset = "0x119D38C", VA = "0x119D38C")]
		public static ConstructorDelegate GetConstructorByReflection(ConstructorInfo constructorInfo)
		{
			return null;
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x119D41C", Offset = "0x119D41C", VA = "0x119D41C")]
		public static ConstructorDelegate GetConstructorByReflection(Type type, params Type[] argsType)
		{
			return null;
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x1198070", Offset = "0x1198070", VA = "0x1198070")]
		public static GetDelegate GetGetMethod(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x11980F8", Offset = "0x11980F8", VA = "0x11980F8")]
		public static GetDelegate GetGetMethod(FieldInfo fieldInfo)
		{
			return null;
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x119D518", Offset = "0x119D518", VA = "0x119D518")]
		public static GetDelegate GetGetMethodByReflection(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x119D5E4", Offset = "0x119D5E4", VA = "0x119D5E4")]
		public static GetDelegate GetGetMethodByReflection(FieldInfo fieldInfo)
		{
			return null;
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x11989FC", Offset = "0x11989FC", VA = "0x11989FC")]
		public static SetDelegate GetSetMethod(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x1198A60", Offset = "0x1198A60", VA = "0x1198A60")]
		public static SetDelegate GetSetMethod(FieldInfo fieldInfo)
		{
			return null;
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x119D694", Offset = "0x119D694", VA = "0x119D694")]
		public static SetDelegate GetSetMethodByReflection(PropertyInfo propertyInfo)
		{
			return null;
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x119D760", Offset = "0x119D760", VA = "0x119D760")]
		public static SetDelegate GetSetMethodByReflection(FieldInfo fieldInfo)
		{
			return null;
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x119D810", Offset = "0x119D810", VA = "0x119D810")]
		public ReflectionUtils()
		{
		}
	}
}
namespace RogoDigital
{
	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA33FE8", Offset = "0xA33FE8")]
	public class EyeController : BlendSystemUser
	{
		[Token(Token = "0x20007BF")]
		public enum ControlMode
		{
			[Token(Token = "0x4002D8C")]
			Classic,
			[Token(Token = "0x4002D8D")]
			PoseBased
		}

		[Token(Token = "0x20007C0")]
		public enum Axis
		{
			[Token(Token = "0x4002D8F")]
			X_Positive,
			[Token(Token = "0x4002D90")]
			X_Negative,
			[Token(Token = "0x4002D91")]
			Y_Positive,
			[Token(Token = "0x4002D92")]
			Y_Negative,
			[Token(Token = "0x4002D93")]
			Z_Positive,
			[Token(Token = "0x4002D94")]
			Z_Negative
		}

		[Token(Token = "0x20007C1")]
		public class BoneShapeInfo
		{
			[Token(Token = "0x4002D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Transform bone;

			[Token(Token = "0x4002D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 m_storedPosition;

			[Token(Token = "0x4002D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion m_storedRotation;

			[Token(Token = "0x4002D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x4002D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Quaternion targetRotation;

			[Token(Token = "0x170006CA")]
			public Vector3 storedPosition
			{
				[Token(Token = "0x6003289")]
				[Address(RVA = "0x10C8B5C", Offset = "0x10C8B5C", VA = "0x10C8B5C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600328A")]
				[Address(RVA = "0x10C7620", Offset = "0x10C7620", VA = "0x10C7620")]
				set
				{
				}
			}

			[Token(Token = "0x170006CB")]
			public Quaternion storedRotation
			{
				[Token(Token = "0x600328B")]
				[Address(RVA = "0x10C8B68", Offset = "0x10C8B68", VA = "0x10C8B68")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x600328C")]
				[Address(RVA = "0x10C7648", Offset = "0x10C7648", VA = "0x10C7648")]
				set
				{
				}
			}

			[Token(Token = "0x600328D")]
			[Address(RVA = "0x10C257C", Offset = "0x10C257C", VA = "0x10C257C")]
			public BoneShapeInfo(BoneShape boneShape)
			{
			}
		}

		[Token(Token = "0x20007C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37330", Offset = "0xA37330")]
		private sealed class <CloseEyes>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EyeController <>4__this;

			[Token(Token = "0x4002D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <end>5__2;

			[Token(Token = "0x170006CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003291")]
				[Address(RVA = "0x10C81FC", Offset = "0x10C81FC", VA = "0x10C81FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003293")]
				[Address(RVA = "0x10C8264", Offset = "0x10C8264", VA = "0x10C8264", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600328E")]
			[Address(RVA = "0x10C7670", Offset = "0x10C7670", VA = "0x10C7670")]
			[DebuggerHidden]
			public <CloseEyes>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x600328F")]
			[Address(RVA = "0x10C797C", Offset = "0x10C797C", VA = "0x10C797C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003290")]
			[Address(RVA = "0x10C7980", Offset = "0x10C7980", VA = "0x10C7980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003292")]
			[Address(RVA = "0x10C8204", Offset = "0x10C8204", VA = "0x10C8204", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37340", Offset = "0xA37340")]
		private sealed class <OpenEyes>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EyeController <>4__this;

			[Token(Token = "0x4002DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <end>5__2;

			[Token(Token = "0x170006CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003297")]
				[Address(RVA = "0x10C8AEC", Offset = "0x10C8AEC", VA = "0x10C8AEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003299")]
				[Address(RVA = "0x10C8B54", Offset = "0x10C8B54", VA = "0x10C8B54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003294")]
			[Address(RVA = "0x10C769C", Offset = "0x10C769C", VA = "0x10C769C")]
			[DebuggerHidden]
			public <OpenEyes>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6003295")]
			[Address(RVA = "0x10C826C", Offset = "0x10C826C", VA = "0x10C826C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003296")]
			[Address(RVA = "0x10C8270", Offset = "0x10C8270", VA = "0x10C8270", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003298")]
			[Address(RVA = "0x10C8AF4", Offset = "0x10C8AF4", VA = "0x10C8AF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blinkingEnabled;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ControlMode blinkingControlMode;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shape blinkingShape;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA43AF0", Offset = "0xA43AF0")]
		public int leftEyeBlinkBlendable;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA43B28", Offset = "0xA43B28")]
		public int rightEyeBlinkBlendable;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minimumBlinkGap;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maximumBlinkGap;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA43B60", Offset = "0xA43B60")]
		public float blinkDuration;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool randomLookingEnabled;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ControlMode lookingControlMode;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shape lookingUpShape;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shape lookingDownShape;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shape lookingLeftShape;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shape lookingRightShape;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA43B98", Offset = "0xA43B98")]
		private Transform _leftEyeLookAtBone;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA43BE4", Offset = "0xA43BE4")]
		private Transform _rightEyeLookAtBone;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector2 eyeRotationRangeX;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 eyeRotationRangeY;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 eyeLookOffset;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Axis eyeForwardAxis;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float eyeTurnSpeed;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float minimumChangeDirectionGap;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float maximumChangeDirectionGap;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool targetEnabled;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool autoTarget;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string autoTargetTag;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float autoTargetDistance;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform viewTarget;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float targetWeight;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool boneUpdateAnimation;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float blinkTimer;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool blinking;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool _keepEyesClosed;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		private bool _asyncBlending;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform leftEyeDummy;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform rightEyeDummy;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion leftRotation;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion rightRotation;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3[] axisOffsets;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float lookTimer;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Quaternion randomAngle;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector2 randomBlend;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Transform target;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Quaternion leftTargetAngle;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion rightTargetAngle;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Transform[] markedTargets;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Dictionary<Transform, BoneShapeInfo> boneShapes;

		[Token(Token = "0x170001C5")]
		public bool keepEyesClosed
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0x10C1504", Offset = "0x10C1504", VA = "0x10C1504")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001866")]
			[Address(RVA = "0x10C150C", Offset = "0x10C150C", VA = "0x10C150C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public Transform LeftEyeLookAtBone
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0x10C1654", Offset = "0x10C1654", VA = "0x10C1654")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001868")]
			[Address(RVA = "0x10C165C", Offset = "0x10C165C", VA = "0x10C165C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public Transform RightEyeLookAtBone
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0x10C1B28", Offset = "0x10C1B28", VA = "0x10C1B28")]
			get
			{
				return null;
			}
			[Token(Token = "0x600186A")]
			[Address(RVA = "0x10C1B30", Offset = "0x10C1B30", VA = "0x10C1B30")]
			set
			{
			}
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x10C1BD8", Offset = "0x10C1BD8", VA = "0x10C1BD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x10C2648", Offset = "0x10C2648", VA = "0x10C2648")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x10C1574", Offset = "0x10C1574", VA = "0x10C1574")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58A30", Offset = "0xA58A30")]
		private IEnumerator CloseEyes()
		{
			return null;
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x10C15E4", Offset = "0x10C15E4", VA = "0x10C15E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58A94", Offset = "0xA58A94")]
		private IEnumerator OpenEyes()
		{
			return null;
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x10C1704", Offset = "0x10C1704", VA = "0x10C1704")]
		private void FixDummyHierarchy()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x10C2474", Offset = "0x10C2474", VA = "0x10C2474")]
		public void FindTargets()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x10C7514", Offset = "0x10C7514", VA = "0x10C7514")]
		public static Vector3 Vector3LerpAngle(Vector3 a, Vector3 b, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x10C76C8", Offset = "0x10C76C8", VA = "0x10C76C8")]
		public void SetLookAtAmount(float amount)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x10C76D0", Offset = "0x10C76D0", VA = "0x10C76D0")]
		public EyeController()
		{
		}
	}
}
namespace RogoDigital.Lipsync
{
	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34020", Offset = "0xA34020")]
	public class AdvancedBlendshapeBlendSystem : BlendSystem
	{
		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BlendshapeManager manager;

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x10C8B74", Offset = "0x10C8B74", VA = "0x10C8B74", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x10C8D6C", Offset = "0x10C8D6C", VA = "0x10C8D6C", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x10C90A4", Offset = "0x10C90A4", VA = "0x10C90A4", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x10C9304", Offset = "0x10C9304", VA = "0x10C9304")]
		public AdvancedBlendshapeBlendSystem()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class BlendshapeBlendSystem : BlendSystem
	{
		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SkinnedMeshRenderer characterMesh;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SkinnedMeshRenderer[] optionalOtherMeshes;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool wireframeVisible;

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x10C9D24", Offset = "0x10C9D24", VA = "0x10C9D24", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x10C9DD0", Offset = "0x10C9DD0", VA = "0x10C9DD0", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x10C9F10", Offset = "0x10C9F10", VA = "0x10C9F10", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x10CA0FC", Offset = "0x10CA0FC", VA = "0x10CA0FC", Slot = "6")]
		public override void OnVariableChanged()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x10CA178", Offset = "0x10CA178", VA = "0x10CA178")]
		[AttributeAttribute(Name = "BlendSystemButton", RVA = "0xA58AF8", Offset = "0xA58AF8")]
		public void ToggleWireframe()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x10CA1FC", Offset = "0x10CA1FC", VA = "0x10CA1FC")]
		public BlendshapeBlendSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000384")]
	public class BlendshapeManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007C4")]
		public struct AdvancedBlendShape
		{
			[Token(Token = "0x4002DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4002DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BlendShapeMapping[] mappings;
		}

		[Serializable]
		[Token(Token = "0x20007C5")]
		public struct BlendShapeMapping
		{
			[Token(Token = "0x4002DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SkinnedMeshRenderer skinnedMeshRenderer;

			[Token(Token = "0x4002DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int blendShapeIndex;
		}

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA43C40", Offset = "0xA43C40")]
		public AdvancedBlendShape[] blendShapes;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public AdvancedBlendshapeBlendSystem blendSystem;

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x10CA208", Offset = "0x10CA208", VA = "0x10CA208")]
		public BlendshapeManager()
		{
		}
	}
	[Token(Token = "0x2000385")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34084", Offset = "0xA34084")]
	public class SpriteBlendSystem : BlendSystem
	{
		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SpriteManager manager;

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x117A838", Offset = "0x117A838", VA = "0x117A838", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x117A9C0", Offset = "0x117A9C0", VA = "0x117A9C0", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x117AC58", Offset = "0x117AC58", VA = "0x117AC58", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x117B068", Offset = "0x117B068", VA = "0x117B068", Slot = "6")]
		public override void OnVariableChanged()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x117B074", Offset = "0x117B074", VA = "0x117B074")]
		[AttributeAttribute(Name = "BlendSystemButton", RVA = "0xA58B30", Offset = "0xA58B30")]
		public void ShowHelp()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x117B0C0", Offset = "0x117B0C0", VA = "0x117B0C0")]
		public SpriteBlendSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000386")]
	public class SpriteManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007C6")]
		public class SpriteGroup
		{
			[Token(Token = "0x4002DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string groupName;

			[Token(Token = "0x4002DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public SpriteRenderer spriteRenderer;

			[Token(Token = "0x4002DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public Sprite defaultSprite;

			[Token(Token = "0x600329A")]
			[Address(RVA = "0x117B160", Offset = "0x117B160", VA = "0x117B160")]
			public SpriteGroup(string groupName)
			{
			}
		}

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<Sprite> availableSprites;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<SpriteGroup> groups;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpriteBlendSystem blendSystem;

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x117B0C8", Offset = "0x117B0C8", VA = "0x117B0C8")]
		public SpriteManager()
		{
		}
	}
	[Token(Token = "0x2000387")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA340E8", Offset = "0xA340E8")]
	public class TextureOffsetBlendSystem : BlendSystem
	{
		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextureOffsetManager manager;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, int> groupLookup;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, int> reverseGroupLookup;

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x117B434", Offset = "0x117B434", VA = "0x117B434", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x117B5C4", Offset = "0x117B5C4", VA = "0x117B5C4")]
		private void CacheGroups()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x117B924", Offset = "0x117B924", VA = "0x117B924", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x117BC98", Offset = "0x117BC98", VA = "0x117BC98", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x117C074", Offset = "0x117C074", VA = "0x117C074", Slot = "6")]
		public override void OnVariableChanged()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x117C080", Offset = "0x117C080", VA = "0x117C080")]
		public TextureOffsetBlendSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000388")]
	public class TextureOffsetManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007C7")]
		public class MaterialTextureGroup
		{
			[Token(Token = "0x4002DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string displayName;

			[Token(Token = "0x4002DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA4B420", Offset = "0xA4B420")]
			[SerializeField]
			public Material material;

			[Token(Token = "0x4002DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public string texturePropertyName;

			[Token(Token = "0x4002DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA4B468", Offset = "0xA4B468")]
			[SerializeField]
			public Texture2D defaultTexture;

			[Token(Token = "0x4002DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public Vector2 defaultTextureOffset;

			[Token(Token = "0x4002DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public Vector2 defaultTextureScale;

			[Token(Token = "0x4002DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA4B4C0", Offset = "0xA4B4C0")]
			[SerializeField]
			public TextureSetting[] textureSettings;

			[Token(Token = "0x600329B")]
			[Address(RVA = "0x117C0E8", Offset = "0x117C0E8", VA = "0x117C0E8")]
			public MaterialTextureGroup()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007C8")]
		public class TextureSetting
		{
			[Token(Token = "0x4002DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string displayName;

			[Token(Token = "0x4002DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA4B508", Offset = "0xA4B508")]
			[SerializeField]
			public Texture2D texture;

			[Token(Token = "0x4002DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public Vector2 textureOffset;

			[Token(Token = "0x4002DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public Vector2 textureScale;

			[Token(Token = "0x600329C")]
			[Address(RVA = "0x117C15C", Offset = "0x117C15C", VA = "0x117C15C")]
			public TextureSetting()
			{
			}
		}

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public MaterialTextureGroup[] materialGroups;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public TextureOffsetBlendSystem blendSystem;

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x117C088", Offset = "0x117C088", VA = "0x117C088")]
		public TextureOffsetManager()
		{
		}
	}
	[Token(Token = "0x2000389")]
	[ExecuteInEditMode]
	public class BlendSystem : MonoBehaviour
	{
		[Token(Token = "0x20007C9")]
		public delegate void BlendSystemGenericDelegate();

		[NonSerialized]
		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string blendableDisplayName;

		[NonSerialized]
		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string blendableDisplayNamePlural;

		[NonSerialized]
		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string noBlendablesMessage;

		[NonSerialized]
		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string notReadyMessage;

		[NonSerialized]
		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blendRangeLow;

		[NonSerialized]
		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float blendRangeHigh;

		[NonSerialized]
		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool allowResyncing;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isReady;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BlendSystemUser[] users;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BlendSystemGenericDelegate onBlendablesChanged;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private List<Blendable> _blendables;

		[Token(Token = "0x170001C8")]
		public int blendableCount
		{
			[Token(Token = "0x600188D")]
			[Address(RVA = "0x10C8F5C", Offset = "0x10C8F5C", VA = "0x10C8F5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x10C8D28", Offset = "0x10C8D28", VA = "0x10C8D28", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x10C93B0", Offset = "0x10C93B0", VA = "0x10C93B0")]
		public void Register(BlendSystemUser user)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x10C966C", Offset = "0x10C966C", VA = "0x10C966C")]
		public void Unregister(BlendSystemUser user)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x10C9864", Offset = "0x10C9864", VA = "0x10C9864", Slot = "5")]
		public virtual void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x10C7468", Offset = "0x10C7468", VA = "0x10C7468")]
		public float GetBlendableValue(int blendable)
		{
			return default(float);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x10C9868", Offset = "0x10C9868", VA = "0x10C9868", Slot = "6")]
		public virtual void OnVariableChanged()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x10C986C", Offset = "0x10C986C", VA = "0x10C986C", Slot = "7")]
		public virtual void OnBlendSystemAdded()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x10C9870", Offset = "0x10C9870", VA = "0x10C9870", Slot = "8")]
		public virtual void OnBlendSystemRemoved()
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x10C9874", Offset = "0x10C9874", VA = "0x10C9874", Slot = "9")]
		public virtual string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x10C987C", Offset = "0x10C987C", VA = "0x10C987C", Slot = "10")]
		public virtual void OnBlendableAddedToPose(int blendable)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x10C9880", Offset = "0x10C9880", VA = "0x10C9880", Slot = "11")]
		public virtual void OnBlendableRemovedFromPose(int blendable)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x10C8FD8", Offset = "0x10C8FD8", VA = "0x10C8FD8")]
		public void AddBlendable(int blendable, float currentValue)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x10C98C0", Offset = "0x10C98C0", VA = "0x10C98C0")]
		public void ClearBlendables()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x10C91C8", Offset = "0x10C91C8", VA = "0x10C91C8")]
		public void SetInternalValue(int blendable, float value)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x10C9308", Offset = "0x10C9308", VA = "0x10C9308")]
		public BlendSystem()
		{
		}
	}
	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xA3415C", Offset = "0xA3415C")]
	public class BlendSystemButton : Attribute
	{
		[Token(Token = "0x20007CA")]
		public struct Reference
		{
			[Token(Token = "0x4002DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string displayName;

			[Token(Token = "0x4002DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MethodInfo method;

			[Token(Token = "0x60032A1")]
			[Address(RVA = "0xB8E2CC", Offset = "0xB8E2CC", VA = "0xB8E2CC")]
			public Reference(string displayName, MethodInfo method)
			{
			}
		}

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string displayName;

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x10C9B7C", Offset = "0x10C9B7C", VA = "0x10C9B7C")]
		public BlendSystemButton(string displayName)
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class BlendSystemUser : MonoBehaviour
	{
		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlendSystem blendSystem;

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x10C9BB0", Offset = "0x10C9BB0", VA = "0x10C9BB0")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x10C9BCC", Offset = "0x10C9BCC", VA = "0x10C9BCC")]
		protected void CleanUpBlendSystems()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x10C7974", Offset = "0x10C7974", VA = "0x10C7974")]
		public BlendSystemUser()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038C")]
	public class Blendable
	{
		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int number;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float currentWeight;

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x10C9884", Offset = "0x10C9884", VA = "0x10C9884")]
		public Blendable(int number, float currentWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038D")]
	public class BoneShape
	{
		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Transform bone;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Vector3 endPosition;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public Vector3 endRotation;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Vector3 endScale;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public bool lockPosition;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		public bool lockRotation;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[SerializeField]
		public bool lockScale;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 neutralPosition;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 neutralRotation;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 neutralScale;

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x10CA268", Offset = "0x10CA268", VA = "0x10CA268")]
		public void SetNeutral()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x10CA32C", Offset = "0x10CA32C", VA = "0x10CA32C")]
		public BoneShape(Transform bone, Vector3 endPosition, Vector3 endRotation, Vector3 endScale)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x10CA420", Offset = "0x10CA420", VA = "0x10CA420")]
		public BoneShape(Transform bone, Vector3 endPosition, Vector3 endRotation)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x10CA514", Offset = "0x10CA514", VA = "0x10CA514")]
		public BoneShape()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038E")]
	public class EmotionMarker
	{
		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string emotion;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool isMixer;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public EmotionMixer mixer;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public float startTime;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float endTime;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public float blendInTime;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public float blendOutTime;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public bool blendToMarker;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		public bool blendFromMarker;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		public bool customBlendIn;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		public bool customBlendOut;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public float intensity;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public bool continuousVariation;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public float variationFrequency;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public float intensityVariation;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public float blendableVariation;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public float bonePositionVariation;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public float boneRotationVariation;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool invalid;

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x10CA59C", Offset = "0x10CA59C", VA = "0x10CA59C")]
		public EmotionMarker(string emotion, float startTime, float endTime, float blendInTime, float blendOutTime, bool blendToMarker, bool blendFromMarker, bool customBlendIn, bool customBlendOut)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x10CA650", Offset = "0x10CA650", VA = "0x10CA650")]
		public EmotionMarker(EmotionMixer mixer, float startTime, float endTime, float blendInTime, float blendOutTime, bool blendToMarker, bool blendFromMarker, bool customBlendIn, bool customBlendOut)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x10CA70C", Offset = "0x10CA70C", VA = "0x10CA70C")]
		public EmotionMarker(string emotion, float startTime, float endTime, float blendInTime, float blendOutTime, bool blendToMarker, bool blendFromMarker, bool customBlendIn, bool customBlendOut, float intensity)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x10CA7D0", Offset = "0x10CA7D0", VA = "0x10CA7D0")]
		public EmotionMarker CreateCopy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200038F")]
	public class EmotionMixer
	{
		[Serializable]
		[Token(Token = "0x20007CB")]
		public struct EmotionComponent
		{
			[Token(Token = "0x4002DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string emotion;

			[Token(Token = "0x4002DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float weight;

			[Token(Token = "0x60032A2")]
			[Address(RVA = "0xB8E3DC", Offset = "0xB8E3DC", VA = "0xB8E3DC")]
			public EmotionComponent(string emotion, float weight)
			{
			}
		}

		[Token(Token = "0x20007CC")]
		public enum MixingMode
		{
			[Token(Token = "0x4002DB9")]
			Normal,
			[Token(Token = "0x4002DBA")]
			Additive
		}

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public List<EmotionComponent> emotions;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public MixingMode mixingMode;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color displayColor;

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x10CA8C8", Offset = "0x10CA8C8", VA = "0x10CA8C8")]
		public EmotionMixer()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x10CA968", Offset = "0x10CA968", VA = "0x10CA968")]
		public EmotionShape GetShape(LipSync character)
		{
			return null;
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x10CB244", Offset = "0x10CB244", VA = "0x10CB244")]
		public void SetWeight(int index, float weight)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x10CB24C", Offset = "0x10CB24C", VA = "0x10CB24C")]
		public void SetWeight(int index, float weight, bool bypassMinChecks)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000390")]
	public class EmotionShape : Shape
	{
		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string emotion;

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x10CB170", Offset = "0x10CB170", VA = "0x10CB170")]
		public EmotionShape(string eEmotion)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000391")]
	public class GestureMarker
	{
		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string gesture;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float time;

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x10CB60C", Offset = "0x10CB60C", VA = "0x10CB60C")]
		public GestureMarker(string gesture, float time)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x10CB648", Offset = "0x10CB648", VA = "0x10CB648")]
		public GestureMarker CreateCopy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000392")]
	public class LipSyncData : ScriptableObject
	{
		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip clip;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhonemeMarker[] phonemeData;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EmotionMarker[] emotionData;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GestureMarker[] gestureData;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float version;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float length;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string transcript;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve[] phonemePoseCurves;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve[] emotionPoseCurves;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int targetComponentID;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool isPreprocessed;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<int> indexBlendables;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<AnimationCurve> animCurves;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Transform> bones;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<TransformAnimationCurve> boneCurves;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Vector3> boneNeutralPositions;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Vector3> boneNeutralScales;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Quaternion> boneNeutralRotations;

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x11777DC", Offset = "0x11777DC", VA = "0x11777DC")]
		public void GenerateCurves(int phonemeCount, int emotionCount)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1177BF4", Offset = "0x1177BF4", VA = "0x1177BF4")]
		public static explicit operator LipSyncData(TemporaryLipSyncData data)
		{
			return null;
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x1177F50", Offset = "0x1177F50", VA = "0x1177F50")]
		public LipSyncData()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public static class LipSyncExtensions
	{
		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x1177FC0", Offset = "0x1177FC0", VA = "0x1177FC0")]
		public static Transform FindDeepChild(this Transform aParent, string aName)
		{
			return null;
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x11782E4", Offset = "0x11782E4", VA = "0x11782E4")]
		public static Vector3 InverseTransformEulerAngle(this Transform transform, Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1178408", Offset = "0x1178408", VA = "0x1178408")]
		public static Vector3 TransformEulerAngle(this Transform transform, Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x11783A8", Offset = "0x11783A8", VA = "0x11783A8")]
		public static Vector3 ToPositiveEuler(this Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x1178538", Offset = "0x1178538", VA = "0x1178538")]
		public static Vector3 ToNegativeEuler(this Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x11784CC", Offset = "0x11784CC", VA = "0x11784CC")]
		private static Vector3 ClampRange(Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x11785A0", Offset = "0x11785A0", VA = "0x11785A0")]
		public static EmotionMarker PreviousMarker(this List<EmotionMarker> list, EmotionMarker current)
		{
			return null;
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x117863C", Offset = "0x117863C", VA = "0x117863C")]
		public static EmotionMarker NextMarker(this List<EmotionMarker> list, EmotionMarker current)
		{
			return null;
		}
	}
	[Token(Token = "0x2000394")]
	public class LipSyncPreset : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20007CD")]
		public struct PhonemeShapeInfo
		{
			[Token(Token = "0x4002DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string phonemeName;

			[Token(Token = "0x4002DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA4B570", Offset = "0xA4B570")]
			public Phoneme phoneme;

			[Token(Token = "0x4002DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public BlendableInfo[] blendables;

			[Token(Token = "0x4002DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public BoneInfo[] bones;
		}

		[Serializable]
		[Token(Token = "0x20007CE")]
		public struct EmotionShapeInfo
		{
			[Token(Token = "0x4002DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string emotion;

			[Token(Token = "0x4002DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public BlendableInfo[] blendables;

			[Token(Token = "0x4002DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public BoneInfo[] bones;
		}

		[Serializable]
		[Token(Token = "0x20007CF")]
		public struct BlendableInfo
		{
			[Token(Token = "0x4002DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public int blendableNumber;

			[Token(Token = "0x4002DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public string blendableName;

			[Token(Token = "0x4002DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public float weight;
		}

		[Serializable]
		[Token(Token = "0x20007D0")]
		public struct BoneInfo
		{
			[Token(Token = "0x4002DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string path;

			[Token(Token = "0x4002DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public string name;

			[Token(Token = "0x4002DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public Vector3 localPosition;

			[Token(Token = "0x4002DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			public Vector3 localRotation;

			[Token(Token = "0x4002DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public Vector3 localScale;

			[Token(Token = "0x4002DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			public bool lockPosition;

			[Token(Token = "0x4002DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			[SerializeField]
			public bool lockRotation;

			[Token(Token = "0x4002DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
			[SerializeField]
			public bool lockScale;
		}

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string displayPath;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isRelative;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public PhonemeShapeInfo[] phonemeShapes;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public EmotionShapeInfo[] emotionShapes;

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x11786DC", Offset = "0x11786DC", VA = "0x11786DC")]
		public int FindBlendable(BlendableInfo blendable, BlendSystem blendSystem)
		{
			return default(int);
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x1178BE4", Offset = "0x1178BE4", VA = "0x1178BE4")]
		public Transform FindBone(BoneInfo bone, Transform searchRoot)
		{
			return null;
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1178CAC", Offset = "0x1178CAC", VA = "0x1178CAC")]
		public void CreateFromShapes(PhonemeShape[] phonemes, EmotionShape[] emotions, BlendSystem blendSystem, bool relative)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1179FE0", Offset = "0x1179FE0", VA = "0x1179FE0")]
		public LipSyncPreset()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class LipSyncProject : ScriptableObject
	{
		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string[] emotions;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Color[] emotionColors;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<string> gestures;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public PhonemeSet phonemeSet;

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1179FE8", Offset = "0x1179FE8", VA = "0x1179FE8")]
		public LipSyncProject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000396")]
	public class PhonemeMarker
	{
		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA43F38", Offset = "0xA43F38")]
		public Phoneme phoneme;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public int phonemeNumber;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float time;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public float intensity;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public bool sustain;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		public bool useRandomness;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public float intensityRandomness;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public float blendableRandomness;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float bonePositionRandomness;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public float boneRotationRandomness;

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x117A058", Offset = "0x117A058", VA = "0x117A058")]
		public PhonemeMarker(int phonemeNumber, float time, float intensity, bool sustain)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x117A0C0", Offset = "0x117A0C0", VA = "0x117A0C0")]
		public PhonemeMarker(int phonemeNumber, float time)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x117A110", Offset = "0x117A110", VA = "0x117A110")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA58BD8", Offset = "0xA58BD8")]
		public PhonemeMarker(Phoneme phoneme, float time, float intensity, bool sustain)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x117A178", Offset = "0x117A178", VA = "0x117A178")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA58C10", Offset = "0xA58C10")]
		public PhonemeMarker(Phoneme phoneme, float time)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x1177E84", Offset = "0x1177E84", VA = "0x1177E84")]
		public PhonemeMarker CreateCopy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA341A0", Offset = "0xA341A0")]
	public class PhonemeSet : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20007D1")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA37350", Offset = "0xA37350")]
		public class PhonemeCollection
		{
			[Token(Token = "0x4002DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> phonemeNames;

			[Token(Token = "0x170006D0")]
			public int Length
			{
				[Token(Token = "0x60032A3")]
				[Address(RVA = "0x117A2E0", Offset = "0x117A2E0", VA = "0x117A2E0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170006D1")]
			public Phoneme Item
			{
				[Token(Token = "0x60032A4")]
				[Address(RVA = "0x117A330", Offset = "0x117A330", VA = "0x117A330")]
				get
				{
					return default(Phoneme);
				}
			}

			[Token(Token = "0x60032A5")]
			[Address(RVA = "0x117A22C", Offset = "0x117A22C", VA = "0x117A22C")]
			public PhonemeCollection()
			{
			}
		}

		[Token(Token = "0x20007D2")]
		public struct Phoneme
		{
			[Token(Token = "0x4002DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4B6BC", Offset = "0xA4B6BC")]
			private string <name>k__BackingField;

			[Token(Token = "0x4002DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4B6CC", Offset = "0xA4B6CC")]
			private int <number>k__BackingField;

			[Token(Token = "0x4002DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4B6DC", Offset = "0xA4B6DC")]
			private int <flag>k__BackingField;

			[Token(Token = "0x4002DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visuallyImportant;

			[Token(Token = "0x170006D2")]
			public string name
			{
				[Token(Token = "0x60032A6")]
				[Address(RVA = "0xB8F1DC", Offset = "0xB8F1DC", VA = "0xB8F1DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6264C", Offset = "0xA6264C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60032A7")]
				[Address(RVA = "0xB8F1E4", Offset = "0xB8F1E4", VA = "0xB8F1E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6265C", Offset = "0xA6265C")]
				private set
				{
				}
			}

			[Token(Token = "0x170006D3")]
			public int number
			{
				[Token(Token = "0x60032A8")]
				[Address(RVA = "0xB8F1EC", Offset = "0xB8F1EC", VA = "0xB8F1EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6266C", Offset = "0xA6266C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60032A9")]
				[Address(RVA = "0xB8F1F4", Offset = "0xB8F1F4", VA = "0xB8F1F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6267C", Offset = "0xA6267C")]
				private set
				{
				}
			}

			[Token(Token = "0x170006D4")]
			public int flag
			{
				[Token(Token = "0x60032AA")]
				[Address(RVA = "0xB8F1FC", Offset = "0xB8F1FC", VA = "0xB8F1FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6268C", Offset = "0xA6268C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60032AB")]
				[Address(RVA = "0xB8F204", Offset = "0xB8F204", VA = "0xB8F204")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA6269C", Offset = "0xA6269C")]
				private set
				{
				}
			}

			[Token(Token = "0x60032AC")]
			[Address(RVA = "0xB8F20C", Offset = "0xB8F20C", VA = "0xB8F20C")]
			public Phoneme(string name, int number, int flag)
			{
			}
		}

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string scriptingName;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public PhonemeCollection phonemes;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Texture2D[] guideImages;

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x117A1C8", Offset = "0x117A1C8", VA = "0x117A1C8")]
		public PhonemeSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000398")]
	public class PhonemeShape : Shape
	{
		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string phonemeName;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA44054", Offset = "0xA44054")]
		public Phoneme phoneme;

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x117A3EC", Offset = "0x117A3EC", VA = "0x117A3EC")]
		public PhonemeShape(string phonemeName)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x117A5AC", Offset = "0x117A5AC", VA = "0x117A5AC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA58C48", Offset = "0xA58C48")]
		public PhonemeShape(Phoneme ePhoneme)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000399")]
	public class Shape
	{
		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public List<int> blendShapes;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<string> blendableNames;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<float> weights;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<BoneShape> bones;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public bool verified;

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x117A67C", Offset = "0x117A67C", VA = "0x117A67C")]
		public bool HasBone(Transform bone)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x117A75C", Offset = "0x117A75C", VA = "0x117A75C")]
		public int IndexOfBone(Transform bone)
		{
			return default(int);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x117A4BC", Offset = "0x117A4BC", VA = "0x117A4BC")]
		public Shape()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class TemporaryLipSyncData : ScriptableObject
	{
		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip clip;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PhonemeMarker> phonemeData;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<EmotionMarker> emotionData;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GestureMarker> gestureData;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float version;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float length;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string transcript;

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x117B18C", Offset = "0x117B18C", VA = "0x117B18C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x117B198", Offset = "0x117B198", VA = "0x117B198")]
		public static explicit operator TemporaryLipSyncData(LipSyncData data)
		{
			return null;
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x117B3D4", Offset = "0x117B3D4", VA = "0x117B3D4")]
		public TemporaryLipSyncData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039B")]
	public class TransformAnimationCurve
	{
		[Token(Token = "0x20007D3")]
		public struct TransformKeyframe
		{
			[Token(Token = "0x4002DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float time;

			[Token(Token = "0x4002DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Quaternion rotation;

			[Token(Token = "0x4002DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 position;

			[Token(Token = "0x4002DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 scale;

			[Token(Token = "0x4002DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float inTangent;

			[Token(Token = "0x4002DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float outTangent;

			[Token(Token = "0x60032AD")]
			[Address(RVA = "0xB8F21C", Offset = "0xB8F21C", VA = "0xB8F21C")]
			public TransformKeyframe(float time, Vector3 position, Quaternion rotation, Vector3 scale, float inTangent, float outTangent)
			{
			}
		}

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AnimationCurve _posX;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AnimationCurve _posY;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimationCurve _posZ;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve _rotX;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AnimationCurve _rotY;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AnimationCurve _rotZ;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AnimationCurve _rotW;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AnimationCurve _scaleX;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AnimationCurve _scaleY;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AnimationCurve _scaleZ;

		[Token(Token = "0x170001C9")]
		public TransformKeyframe[] keys
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0x117C408", Offset = "0x117C408", VA = "0x117C408")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		public int length
		{
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0x117C8EC", Offset = "0x117C8EC", VA = "0x117C8EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CB")]
		public WrapMode postWrapMode
		{
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0x117C908", Offset = "0x117C908", VA = "0x117C908")]
			get
			{
				return default(WrapMode);
			}
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0x117C924", Offset = "0x117C924", VA = "0x117C924")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public WrapMode preWrapMode
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0x117CA08", Offset = "0x117CA08", VA = "0x117CA08")]
			get
			{
				return default(WrapMode);
			}
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0x117CA24", Offset = "0x117CA24", VA = "0x117CA24")]
			set
			{
			}
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x117C1D0", Offset = "0x117C1D0", VA = "0x117C1D0")]
		public AnimationCurve[] GetAnimationCurves()
		{
			return null;
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x117CB08", Offset = "0x117CB08", VA = "0x117CB08")]
		public int AddKey(float time, Vector3 position, Quaternion rotation, Vector3 scale, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x117CF3C", Offset = "0x117CF3C", VA = "0x117CF3C")]
		public int AddKey(float time, Vector3 position, Quaternion rotation, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x117D270", Offset = "0x117D270", VA = "0x117D270")]
		public int AddKey(float time, Quaternion rotation, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x117D4A4", Offset = "0x117D4A4", VA = "0x117D4A4")]
		public int AddKey(float time, Vector3 position, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x117D5F4", Offset = "0x117D5F4", VA = "0x117D5F4")]
		public int AddKey(float time, Vector3 position, Quaternion rotation, Vector3 scale)
		{
			return default(int);
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x117D7C4", Offset = "0x117D7C4", VA = "0x117D7C4")]
		public int AddKey(float time, Vector3 position, Quaternion rotation)
		{
			return default(int);
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x117D94C", Offset = "0x117D94C", VA = "0x117D94C")]
		public int AddKey(float time, Quaternion rotation)
		{
			return default(int);
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x117DA80", Offset = "0x117DA80", VA = "0x117DA80")]
		public int AddKey(float time, Vector3 position)
		{
			return default(int);
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x117DB08", Offset = "0x117DB08", VA = "0x117DB08")]
		public int AddKey(TransformKeyframe keyframe)
		{
			return default(int);
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x117DE08", Offset = "0x117DE08", VA = "0x117DE08")]
		public Vector3 EvaluateScale(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x117DEAC", Offset = "0x117DEAC", VA = "0x117DEAC")]
		public Vector3 EvaluatePosition(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x117DF50", Offset = "0x117DF50", VA = "0x117DF50")]
		public Quaternion EvaluateRotation(float time)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x117E00C", Offset = "0x117E00C", VA = "0x117E00C")]
		public TransformAnimationCurve()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x117CF38", Offset = "0x117CF38", VA = "0x117CF38")]
		private Vector3 CentreAngles(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x117E158", Offset = "0x117E158", VA = "0x117E158")]
		public void FixQuaternionContinuity()
		{
		}
	}
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA341EC", Offset = "0xA341EC")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA341EC", Offset = "0xA341EC")]
	public class LipSync : BlendSystemUser
	{
		[Token(Token = "0x20007D4")]
		public delegate void ResetDelegate();

		[Token(Token = "0x20007D5")]
		public enum AnimationTimingMode
		{
			[Token(Token = "0x4002DD9")]
			AudioPlayback,
			[Token(Token = "0x4002DDA")]
			CustomTimer,
			[Token(Token = "0x4002DDB")]
			FixedFrameRate
		}

		[Token(Token = "0x20007D6")]
		public enum CurveGenerationMode
		{
			[Token(Token = "0x4002DDD")]
			Tight,
			[Token(Token = "0x4002DDE")]
			Loose
		}

		[Token(Token = "0x20007D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37388", Offset = "0xA37388")]
		private sealed class <StopAudioSource>d__96 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LipSync <>4__this;

			[Token(Token = "0x170006D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032B5")]
				[Address(RVA = "0x1177518", Offset = "0x1177518", VA = "0x1177518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032B7")]
				[Address(RVA = "0x1177580", Offset = "0x1177580", VA = "0x1177580", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032B2")]
			[Address(RVA = "0x117742C", Offset = "0x117742C", VA = "0x117742C")]
			[DebuggerHidden]
			public <StopAudioSource>d__96(int <>1__state)
			{
			}

			[Token(Token = "0x60032B3")]
			[Address(RVA = "0x1177458", Offset = "0x1177458", VA = "0x1177458", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032B4")]
			[Address(RVA = "0x117745C", Offset = "0x117745C", VA = "0x117745C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032B6")]
			[Address(RVA = "0x1177520", Offset = "0x1177520", VA = "0x1177520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useBones;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool boneUpdateAnimation;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<PhonemeShape> phonemes;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public List<EmotionShape> emotions;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool playOnAwake;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool loop;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LipSyncData defaultClip;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float defaultDelay;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool scaleAudioSpeed;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationTimingMode m_animationTimingMode;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int frameRate;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float restTime;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float restHoldTime;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CurveGenerationMode phonemeCurveGenerationMode;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public CurveGenerationMode emotionCurveGenerationMode;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool keepEmotionWhenFinished;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool setNeutralBonePosesOnStart;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44120", Offset = "0xA44120")]
		private bool <IsPlaying>k__BackingField;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44130", Offset = "0xA44130")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44140", Offset = "0xA44140")]
		private bool <IsStopping>k__BackingField;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Animator gesturesAnimator;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int gesturesLayer;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<GestureInstance> gestures;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent onFinishedPlaying;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioClip audioClip;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool ready;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<string, EmotionShape> emotionCache;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int currentFileID;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LipSyncData lastClip;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float emotionBlendTime;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float emotionTimer;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool changingEmotion;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int customEmotion;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float customTimer;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool isDelaying;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<PhonemeMarker> phonemeMarkers;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<EmotionMarker> emotionMarkers;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<GestureMarker> gestureMarkers;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float fileLength;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int nextGesture;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<int> indexBlendables;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<AnimationCurve> animCurves;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<Transform> bones;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<TransformAnimationCurve> boneCurves;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<Vector3> boneNeutralPositions;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<Vector3> boneNeutralScales;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<Quaternion> boneNeutralRotations;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public ResetDelegate reset;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float lastUsedVersion;

		[Token(Token = "0x170001CD")]
		public AnimationTimingMode animationTimingMode
		{
			[Token(Token = "0x60018E5")]
			[Address(RVA = "0x10CB6C0", Offset = "0x10CB6C0", VA = "0x10CB6C0")]
			get
			{
				return default(AnimationTimingMode);
			}
			[Token(Token = "0x60018E6")]
			[Address(RVA = "0x10CB6C8", Offset = "0x10CB6C8", VA = "0x10CB6C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public bool IsPlaying
		{
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0x10CB6D0", Offset = "0x10CB6D0", VA = "0x10CB6D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58C80", Offset = "0xA58C80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0x10CB6D8", Offset = "0x10CB6D8", VA = "0x10CB6D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58C90", Offset = "0xA58C90")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public bool IsPaused
		{
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0x10CB6E4", Offset = "0x10CB6E4", VA = "0x10CB6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58CA0", Offset = "0xA58CA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x10CB6EC", Offset = "0x10CB6EC", VA = "0x10CB6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58CB0", Offset = "0xA58CB0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public bool IsStopping
		{
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x10CB6F8", Offset = "0x10CB6F8", VA = "0x10CB6F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58CC0", Offset = "0xA58CC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x10CB700", Offset = "0x10CB700", VA = "0x10CB700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58CD0", Offset = "0xA58CD0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public float CurrentTime
		{
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x10CB70C", Offset = "0x10CB70C", VA = "0x10CB70C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x10CB748", Offset = "0x10CB748", VA = "0x10CB748")]
		private void Reset()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x10CB780", Offset = "0x10CB780", VA = "0x10CB780")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x10CC508", Offset = "0x10CC508", VA = "0x10CC508")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x10CD55C", Offset = "0x10CD55C", VA = "0x10CD55C")]
		public void SetEmotion(string emotion, float blendTime)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x10CF004", Offset = "0x10CF004", VA = "0x10CF004")]
		public void ResetEmotion(float blendTime)
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x10CF064", Offset = "0x10CF064", VA = "0x10CF064")]
		private void PlayPP(LipSyncData data, float delay, float time)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x10CC268", Offset = "0x10CC268", VA = "0x10CC268")]
		public void Play(LipSyncData dataFile, float delay)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x10CD554", Offset = "0x10CD554", VA = "0x10CD554")]
		public void Play(LipSyncData dataFile)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x10D915C", Offset = "0x10D915C", VA = "0x10D915C")]
		public void Play(TextAsset xmlFile, AudioClip clip, float delay)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x10DA0EC", Offset = "0x10DA0EC", VA = "0x10DA0EC")]
		public void Play(TextAsset xmlFile, AudioClip clip)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x10DA0F4", Offset = "0x10DA0F4", VA = "0x10DA0F4")]
		public void PlayFromTime(LipSyncData dataFile, float delay, float time)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x10DA304", Offset = "0x10DA304", VA = "0x10DA304")]
		public void PlayFromTime(LipSyncData dataFile, float time)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x10DA310", Offset = "0x10DA310", VA = "0x10DA310")]
		public void PlayFromTime(TextAsset xmlFile, AudioClip clip, float delay, float time)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x10DA4D4", Offset = "0x10DA4D4", VA = "0x10DA4D4")]
		public void PlayFromTime(TextAsset xmlFile, AudioClip clip, float time)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x10DA4E0", Offset = "0x10DA4E0", VA = "0x10DA4E0")]
		public void Pause()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x10DA540", Offset = "0x10DA540", VA = "0x10DA540")]
		public void Resume()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x10CCFC0", Offset = "0x10CCFC0", VA = "0x10CCFC0")]
		public void Stop(bool stopAudio)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x10DA59C", Offset = "0x10DA59C", VA = "0x10DA59C")]
		public void PreviewAtTime(float time)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x10DA8C4", Offset = "0x10DA8C4", VA = "0x10DA8C4")]
		public void DisplayEmotionPose(int emotion, float intensity)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x10DAD10", Offset = "0x10DAD10", VA = "0x10DAD10")]
		public void ResetDisplayedEmotions()
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x10DB118", Offset = "0x10DB118", VA = "0x10DB118")]
		public void PreviewAudioAtTime(float time, float length)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x10DB2AC", Offset = "0x10DB2AC", VA = "0x10DB2AC")]
		public void TempLoad(List<PhonemeMarker> pData, List<EmotionMarker> eData, AudioClip clip, float duration)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x10DB360", Offset = "0x10DB360", VA = "0x10DB360")]
		public void TempLoad(PhonemeMarker[] pData, EmotionMarker[] eData, AudioClip clip, float duration)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x10CFA7C", Offset = "0x10CFA7C", VA = "0x10CFA7C")]
		public void ProcessData(bool emotionOnly = false)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x10DB654", Offset = "0x10DB654", VA = "0x10DB654")]
		public void GetCurveDataOut(out List<int> indexBlendables, out List<AnimationCurve> animCurves, out List<Transform> bones, out List<TransformAnimationCurve> boneCurves, out List<Vector3> boneNeutralPositions, out List<Quaternion> boneNeutralRotations, out List<Vector3> boneNeutralScales)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x10DB64C", Offset = "0x10DB64C", VA = "0x10DB64C")]
		public void ClearDataCache()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x10DB690", Offset = "0x10DB690", VA = "0x10DB690")]
		private EmotionMixer GetTransitionMixer(string oldEmotion, string newEmotion, float t)
		{
			return null;
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x10DB754", Offset = "0x10DB754", VA = "0x10DB754")]
		private void FixEmotionBlends(ref List<EmotionMarker> data)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x10DB850", Offset = "0x10DB850", VA = "0x10DB850")]
		private void FixEmotionBlends(ref EmotionMarker[] data)
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x10D92C0", Offset = "0x10D92C0", VA = "0x10D92C0")]
		private void LoadXML(TextAsset xmlFile, AudioClip linkedClip)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x10CF4B4", Offset = "0x10CF4B4", VA = "0x10CF4B4")]
		private bool LoadData(LipSyncData dataFile)
		{
			return default(bool);
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x10DB22C", Offset = "0x10DB22C", VA = "0x10DB22C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58CE0", Offset = "0xA58CE0")]
		private IEnumerator StopAudioSource(float delay)
		{
			return null;
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x10CCEE0", Offset = "0x10CCEE0", VA = "0x10CCEE0")]
		private GestureInstance GetGesture(string name)
		{
			return null;
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x10DBAB8", Offset = "0x10DBAB8", VA = "0x10DBAB8")]
		public LipSync()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x10DBB88", Offset = "0x10DBB88", VA = "0x10DBB88")]
		public static int SortTime(PhonemeMarker a, PhonemeMarker b)
		{
			return default(int);
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x10DBBC8", Offset = "0x10DBBC8", VA = "0x10DBBC8")]
		public static int SortTime(GestureMarker a, GestureMarker b)
		{
			return default(int);
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x10DBC08", Offset = "0x10DBC08", VA = "0x10DBC08")]
		private static int EmotionSort(EmotionMarker a, EmotionMarker b)
		{
			return default(int);
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x10DBA10", Offset = "0x10DBA10", VA = "0x10DBA10")]
		public static string ReadXML(XmlDocument xml, string parentElement, string elementName)
		{
			return null;
		}
	}
	[Token(Token = "0x200039D")]
	public enum Phoneme
	{
		[Token(Token = "0x4001844")]
		AI,
		[Token(Token = "0x4001845")]
		E,
		[Token(Token = "0x4001846")]
		U,
		[Token(Token = "0x4001847")]
		O,
		[Token(Token = "0x4001848")]
		CDGKNRSThYZ,
		[Token(Token = "0x4001849")]
		FV,
		[Token(Token = "0x400184A")]
		L,
		[Token(Token = "0x400184B")]
		MBP,
		[Token(Token = "0x400184C")]
		WQ,
		[Token(Token = "0x400184D")]
		Rest
	}
}
namespace ReachableGames.AutoProbe
{
	[Token(Token = "0x200039E")]
	[ExecuteInEditMode]
	public class AutoProbe : MonoBehaviour
	{
		[Token(Token = "0x6001914")]
		[Address(RVA = "0x10B9E8C", Offset = "0x10B9E8C", VA = "0x10B9E8C")]
		public AutoProbe()
		{
		}
	}
	[Token(Token = "0x200039F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3426C", Offset = "0xA3426C")]
	public class ForceLightProbeHere : MonoBehaviour
	{
		[Token(Token = "0x6001915")]
		[Address(RVA = "0x10B9E94", Offset = "0x10B9E94", VA = "0x10B9E94")]
		public ForceLightProbeHere()
		{
		}
	}
}
namespace PixelCrushers.DialogueSystem.SequencerCommands
{
	[Token(Token = "0x20003A0")]
	public class SequencerCommandEyeControl : SequencerCommand
	{
		[Token(Token = "0x6001916")]
		[Address(RVA = "0x11396F8", Offset = "0x11396F8", VA = "0x11396F8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x1139A4C", Offset = "0x1139A4C", VA = "0x1139A4C")]
		public SequencerCommandEyeControl()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class SequencerCommandLipSync : SequencerCommand
	{
		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LipSync lipSync;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioClip audioClip;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool nowait;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _duration;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _startTime;

		[Token(Token = "0x170001D2")]
		public bool isAudioPlaying
		{
			[Token(Token = "0x6001918")]
			[Address(RVA = "0x1139C8C", Offset = "0x1139C8C", VA = "0x1139C8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x1139D24", Offset = "0x1139D24", VA = "0x1139D24")]
		public void Start()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x113A3D4", Offset = "0x113A3D4", VA = "0x113A3D4")]
		public void Update()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x113A49C", Offset = "0x113A49C", VA = "0x113A49C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x113A5D0", Offset = "0x113A5D0", VA = "0x113A5D0")]
		public SequencerCommandLipSync()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class SequencerCommandSetEmotion : SequencerCommand
	{
		[Token(Token = "0x600191D")]
		[Address(RVA = "0x113B340", Offset = "0x113B340", VA = "0x113B340")]
		public void Start()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x113B738", Offset = "0x113B738", VA = "0x113B738")]
		public SequencerCommandSetEmotion()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA342E0", Offset = "0xA342E0")]
	public class SequencerCommandAudioWaitSpeakers : SequencerCommand
	{
		[Token(Token = "0x20007D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37398", Offset = "0xA37398")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string audioClipName;

			[Token(Token = "0x4002DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SequencerCommandAudioWaitSpeakers <>4__this;

			[Token(Token = "0x60032B8")]
			[Address(RVA = "0x113797C", Offset = "0x113797C", VA = "0x113797C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60032B9")]
			[Address(RVA = "0x1137984", Offset = "0x1137984", VA = "0x1137984")]
			internal void <TryAudioClip>b__0(UnityEngine.Object asset)
			{
			}
		}

		[Token(Token = "0x20007D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA373A8", Offset = "0xA373A8")]
		private sealed class <TryAudioClip>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string audioClipName;

			[Token(Token = "0x4002DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SequencerCommandAudioWaitSpeakers <>4__this;

			[Token(Token = "0x4002DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x170006D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032BD")]
				[Address(RVA = "0x1138124", Offset = "0x1138124", VA = "0x1138124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032BF")]
				[Address(RVA = "0x113818C", Offset = "0x113818C", VA = "0x113818C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032BA")]
			[Address(RVA = "0x11372EC", Offset = "0x11372EC", VA = "0x11372EC")]
			[DebuggerHidden]
			public <TryAudioClip>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60032BB")]
			[Address(RVA = "0x1137DE8", Offset = "0x1137DE8", VA = "0x1137DE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032BC")]
			[Address(RVA = "0x1137DEC", Offset = "0x1137DEC", VA = "0x1137DEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032BE")]
			[Address(RVA = "0x113812C", Offset = "0x113812C", VA = "0x113812C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float stopTime;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource[] audioSources;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioClip currentClip;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float savedVolume;

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x1137058", Offset = "0x1137058", VA = "0x1137058")]
		public void Start()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x1137270", Offset = "0x1137270", VA = "0x1137270")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58D44", Offset = "0xA58D44")]
		private IEnumerator TryAudioClip(string audioClipName)
		{
			return null;
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x1137318", Offset = "0x1137318", VA = "0x1137318")]
		public void Update()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x1137434", Offset = "0x1137434", VA = "0x1137434")]
		public void OnDialogueSystemPause()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x11374A8", Offset = "0x11374A8", VA = "0x11374A8")]
		public void OnDialogueSystemUnpause()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x113751C", Offset = "0x113751C", VA = "0x113751C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1137690", Offset = "0x1137690", VA = "0x1137690")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x113796C", Offset = "0x113796C", VA = "0x113796C")]
		public SequencerCommandAudioWaitSpeakers()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34318", Offset = "0xA34318")]
	public class SequencerCommandAudioWaitWatch : SequencerCommand
	{
		[Token(Token = "0x20007DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA373B8", Offset = "0xA373B8")]
		private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SequencerCommandAudioWaitWatch <>4__this;

			[Token(Token = "0x4002DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <audioClipName>5__2;

			[Token(Token = "0x170006D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032C3")]
				[Address(RVA = "0x11395E0", Offset = "0x11395E0", VA = "0x11395E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032C5")]
				[Address(RVA = "0x1139648", Offset = "0x1139648", VA = "0x1139648", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032C0")]
			[Address(RVA = "0x1138204", Offset = "0x1138204", VA = "0x1138204")]
			[DebuggerHidden]
			public <Start>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60032C1")]
			[Address(RVA = "0x1139230", Offset = "0x1139230", VA = "0x1139230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032C2")]
			[Address(RVA = "0x1139234", Offset = "0x1139234", VA = "0x1139234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032C4")]
			[Address(RVA = "0x11395E8", Offset = "0x11395E8", VA = "0x11395E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA373C8", Offset = "0xA373C8")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string audioClipName;

			[Token(Token = "0x4002DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SequencerCommandAudioWaitWatch <>4__this;

			[Token(Token = "0x60032C6")]
			[Address(RVA = "0x11384D0", Offset = "0x11384D0", VA = "0x11384D0")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60032C7")]
			[Address(RVA = "0x1138D04", Offset = "0x1138D04", VA = "0x1138D04")]
			internal void <TryAudioClip>b__0(UnityEngine.Object asset)
			{
			}
		}

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float stopTime;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource audioSource;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int nextClipIndex;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip currentClip;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioClip originalClip;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool restoreOriginalClip;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float savedVolume;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool doOnce;

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x1138194", Offset = "0x1138194", VA = "0x1138194")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58DA8", Offset = "0xA58DA8")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1138230", Offset = "0x1138230", VA = "0x1138230")]
		private void TryAudioClip(string audioClipName)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x11384D8", Offset = "0x11384D8", VA = "0x11384D8")]
		public void Update()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1138714", Offset = "0x1138714", VA = "0x1138714")]
		public void OnDialogueSystemPause()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1138830", Offset = "0x1138830", VA = "0x1138830")]
		public void OnDialogueSystemUnpause()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x113894C", Offset = "0x113894C", VA = "0x113894C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1138AC4", Offset = "0x1138AC4", VA = "0x1138AC4")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1138CEC", Offset = "0x1138CEC", VA = "0x1138CEC")]
		public SequencerCommandAudioWaitWatch()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class SequencerCommandCharTrigger : SequencerCommand
	{
		[Token(Token = "0x600192F")]
		[Address(RVA = "0x1139650", Offset = "0x1139650", VA = "0x1139650")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x11396F0", Offset = "0x11396F0", VA = "0x11396F0")]
		public SequencerCommandCharTrigger()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class SequencerCommandForceStop : SequencerCommand
	{
		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _duration;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _startTime;

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x1139A54", Offset = "0x1139A54", VA = "0x1139A54")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x1139AD8", Offset = "0x1139AD8", VA = "0x1139AD8")]
		public void Update()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x1139C84", Offset = "0x1139C84", VA = "0x1139C84")]
		public SequencerCommandForceStop()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class SequencerCommandLipSyncWatch : SequencerCommand
	{
		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LipSync lipSync;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioClip audioClip;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool nowait;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float savedVolume;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayerWatchManager m_WatchManger;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _duration;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _startTime;

		[Token(Token = "0x170001D3")]
		public bool isAudioPlaying
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0x113A5D8", Offset = "0x113A5D8", VA = "0x113A5D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x113A670", Offset = "0x113A670", VA = "0x113A670")]
		public void Start()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x113AE40", Offset = "0x113AE40", VA = "0x113AE40")]
		public void Update()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x11378B8", Offset = "0x11378B8", VA = "0x11378B8")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x113AF30", Offset = "0x113AF30", VA = "0x113AF30")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x113B08C", Offset = "0x113B08C", VA = "0x113B08C")]
		public SequencerCommandLipSyncWatch()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class SequencerCommandLookTowards : SequencerCommand
	{
		[Token(Token = "0x600193A")]
		[Address(RVA = "0x113B09C", Offset = "0x113B09C", VA = "0x113B09C")]
		public void Awake()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x113B338", Offset = "0x113B338", VA = "0x113B338")]
		public SequencerCommandLookTowards()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class SequencerCommandTalk : SequencerCommand
	{
		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SequencerCommandTalk _currentTalk;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _duration;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _startTime;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _speaker;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator _anim;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MultiCharacterList _multiChar;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _forceEndTalk;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _useSubTime;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _endTime;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _checkSync;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SequencerCommandLipSync _sync;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string _talkValue;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _checkSyncForAnim;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _animEndTime;

		[Token(Token = "0x170001D4")]
		public string curSpeaker
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x113B740", Offset = "0x113B740", VA = "0x113B740")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x113B748", Offset = "0x113B748", VA = "0x113B748")]
		public void Awake()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x113BA94", Offset = "0x113BA94", VA = "0x113BA94")]
		private void GetInfoFromAudio()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x113BBDC", Offset = "0x113BBDC", VA = "0x113BBDC")]
		private void GetAnimTimeFromAudio()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x113BD18", Offset = "0x113BD18", VA = "0x113BD18")]
		public void Update()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x113BF1C", Offset = "0x113BF1C", VA = "0x113BF1C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x113C324", Offset = "0x113C324", VA = "0x113C324")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x113C54C", Offset = "0x113C54C", VA = "0x113C54C")]
		public SequencerCommandTalk()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class SequencerCommandTextTimeDelay : SequencerCommand
	{
		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _duration;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _startTime;

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x113C5AC", Offset = "0x113C5AC", VA = "0x113C5AC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x113C640", Offset = "0x113C640", VA = "0x113C640")]
		private void Update()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x113C6CC", Offset = "0x113C6CC", VA = "0x113C6CC")]
		public SequencerCommandTextTimeDelay()
		{
		}
	}
}
namespace PixelCrushers.DialogueSystem.I2Support
{
	[Token(Token = "0x20003AB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34350", Offset = "0xA34350")]
	public class DialogueSystemUseI2Language : MonoBehaviour
	{
		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44150", Offset = "0xA44150")]
		public I2LanguageIdentifierType specifyLanguageBy;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44188", Offset = "0xA44188")]
		public bool useI2LanguageOnStart;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA441C0", Offset = "0xA441C0")]
		public bool useI2LanguageAtRuntime;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DialogueDatabase _database;

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x11360C0", Offset = "0x11360C0", VA = "0x11360C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x1136128", Offset = "0x1136128", VA = "0x1136128")]
		public void UseCurrentI2Language()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x11361E4", Offset = "0x11361E4", VA = "0x11361E4")]
		protected void OnConversationLine(Subtitle subtitle)
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x1136588", Offset = "0x1136588", VA = "0x1136588")]
		protected void OnConversationResponseMenu(Response[] responses)
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x1136884", Offset = "0x1136884", VA = "0x1136884")]
		public DialogueSystemUseI2Language()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34388", Offset = "0xA34388")]
	public class DialogueSystemUseI2RTLFix : MonoBehaviour
	{
		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA441F8", Offset = "0xA441F8")]
		public List<string> additionalRTLLanguageCodes;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44230", Offset = "0xA44230")]
		public bool alignRTLToRight;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44268", Offset = "0xA44268")]
		public int textLimit;

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x1136898", Offset = "0x1136898", VA = "0x1136898")]
		private bool IsRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x1136954", Offset = "0x1136954", VA = "0x1136954")]
		private void OnConversationStart(Transform actor)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x1136B38", Offset = "0x1136B38", VA = "0x1136B38")]
		private void SetTextFieldAlignment(UITextField textField)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x1136DC4", Offset = "0x1136DC4", VA = "0x1136DC4")]
		private void OnConversationLine(Subtitle subtitle)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x1136E6C", Offset = "0x1136E6C", VA = "0x1136E6C")]
		private void OnConversationResponseMenu(Response[] responses)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x1136F64", Offset = "0x1136F64", VA = "0x1136F64")]
		public DialogueSystemUseI2RTLFix()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public enum I2LanguageIdentifierType
	{
		[Token(Token = "0x4001880")]
		LanguageName,
		[Token(Token = "0x4001881")]
		LanguageCode
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20003AE")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001883")]
		TRIANGLES,
		[Token(Token = "0x4001884")]
		QUADS
	}
	[Token(Token = "0x20003AF")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001886")]
		ABSORPTION,
		[Token(Token = "0x4001887")]
		TRANSMISSION,
		[Token(Token = "0x4001888")]
		SCATTERING
	}
	[Token(Token = "0x20003B0")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20003B1")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170001D5")]
		public bool Highlight
		{
			[Token(Token = "0x6001952")]
			[Address(RVA = "0x1122E58", Offset = "0x1122E58", VA = "0x1122E58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001953")]
			[Address(RVA = "0x1122E60", Offset = "0x1122E60", VA = "0x1122E60")]
			set
			{
			}
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1122E6C", Offset = "0x1122E6C", VA = "0x1122E6C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x1123038", Offset = "0x1123038", VA = "0x1123038", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x1123060", Offset = "0x1123060", VA = "0x1123060", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1123088", Offset = "0x1123088", VA = "0x1123088")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x1122F38", Offset = "0x1122F38", VA = "0x1122F38")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x11232DC", Offset = "0x11232DC", VA = "0x11232DC")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170001D6")]
		public bool InRange
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x112373C", Offset = "0x112373C", VA = "0x112373C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600195C")]
			[Address(RVA = "0x1123744", Offset = "0x1123744", VA = "0x1123744")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public bool Targeted
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x11238CC", Offset = "0x11238CC", VA = "0x11238CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600195E")]
			[Address(RVA = "0x11238D4", Offset = "0x11238D4", VA = "0x11238D4")]
			set
			{
			}
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x11238E0", Offset = "0x11238E0", VA = "0x11238E0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x1123750", Offset = "0x1123750", VA = "0x1123750")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x1123AAC", Offset = "0x1123AAC", VA = "0x1123AAC")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x1123AF0", Offset = "0x1123AF0", VA = "0x1123AF0")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x1123B4C", Offset = "0x1123B4C", VA = "0x1123B4C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA343C0", Offset = "0xA343C0")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170001D8")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001964")]
			[Address(RVA = "0x1123B54", Offset = "0x1123B54", VA = "0x1123B54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001965")]
			[Address(RVA = "0x1123B5C", Offset = "0x1123B5C", VA = "0x1123B5C")]
			set
			{
			}
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x1123B78", Offset = "0x1123B78", VA = "0x1123B78", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x1123D04", Offset = "0x1123D04", VA = "0x1123D04", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x1124698", Offset = "0x1124698", VA = "0x1124698", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x1124C54", Offset = "0x1124C54", VA = "0x1124C54", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x1125034", Offset = "0x1125034", VA = "0x1125034")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x1123FCC", Offset = "0x1123FCC", VA = "0x1123FCC")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x1125110", Offset = "0x1125110", VA = "0x1125110")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x1125548", Offset = "0x1125548", VA = "0x1125548", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1125560", Offset = "0x1125560", VA = "0x1125560", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x1125568", Offset = "0x1125568", VA = "0x1125568")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x1126FAC", Offset = "0x1126FAC", VA = "0x1126FAC")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x112705C", Offset = "0x112705C", VA = "0x112705C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x1127108", Offset = "0x1127108", VA = "0x1127108")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20007DC")]
		public enum CrosshairState
		{
			[Token(Token = "0x4002DF1")]
			Disabled,
			[Token(Token = "0x4002DF2")]
			Enabled,
			[Token(Token = "0x4002DF3")]
			Targeted
		}

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x1127110", Offset = "0x1127110", VA = "0x1127110")]
		private void Start()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x1123A10", Offset = "0x1123A10", VA = "0x1123A10")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x1127178", Offset = "0x1127178", VA = "0x1127178")]
		private void Update()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x11271C0", Offset = "0x11271C0", VA = "0x11271C0")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001977")]
		[Address(RVA = "0x112C044", Offset = "0x112C044", VA = "0x112C044")]
		private void Start()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x112C110", Offset = "0x112C110", VA = "0x112C110")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x112C11C", Offset = "0x112C11C", VA = "0x112C11C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x112C128", Offset = "0x112C128", VA = "0x112C128")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x112186C", Offset = "0x112186C", VA = "0x112186C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x11218C4", Offset = "0x11218C4", VA = "0x11218C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x1121B68", Offset = "0x1121B68", VA = "0x1121B68")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1121C58", Offset = "0x1121C58", VA = "0x1121C58")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x11218C8", Offset = "0x11218C8", VA = "0x11218C8")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x1121D48", Offset = "0x1121D48", VA = "0x1121D48")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20007DD")]
		public enum ContactTest
		{
			[Token(Token = "0x4002DF5")]
			PerpenTest,
			[Token(Token = "0x4002DF6")]
			BackwardsPress
		}

		[Token(Token = "0x40018B1")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40018B2")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170001D9")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001981")]
			[Address(RVA = "0x1121DE0", Offset = "0x1121DE0", VA = "0x1121DE0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DA")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001982")]
			[Address(RVA = "0x1121DE8", Offset = "0x1121DE8", VA = "0x1121DE8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x1121DF4", Offset = "0x1121DF4", VA = "0x1121DF4", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x1121F44", Offset = "0x1121F44", VA = "0x1121F44")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x1122148", Offset = "0x1122148", VA = "0x1122148")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x11222A8", Offset = "0x11222A8", VA = "0x11222A8")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x1122408", Offset = "0x1122408", VA = "0x1122408", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x11228CC", Offset = "0x11228CC", VA = "0x11228CC")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x1122A58", Offset = "0x1122A58", VA = "0x1122A58")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x1122B4C", Offset = "0x1122B4C", VA = "0x1122B4C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x1122C78", Offset = "0x1122C78", VA = "0x1122C78")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA443E0", Offset = "0xA443E0")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA443F0", Offset = "0xA443F0")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170001DB")]
		public Collider Collider
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0x1122D64", Offset = "0x1122D64", VA = "0x1122D64", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58E0C", Offset = "0xA58E0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600198D")]
			[Address(RVA = "0x1122D6C", Offset = "0x1122D6C", VA = "0x1122D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58E1C", Offset = "0xA58E1C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600198E")]
			[Address(RVA = "0x1122D74", Offset = "0x1122D74", VA = "0x1122D74", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58E2C", Offset = "0xA58E2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x1122D7C", Offset = "0x1122D7C", VA = "0x1122D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58E3C", Offset = "0xA58E3C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x1122D84", Offset = "0x1122D84", VA = "0x1122D84", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x1122DD4", Offset = "0x1122DD4", VA = "0x1122DD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x1122E50", Offset = "0x1122E50", VA = "0x1122E50")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public interface ColliderZone
	{
		[Token(Token = "0x170001DE")]
		Collider Collider
		{
			[Token(Token = "0x6001993")]
			get;
		}

		[Token(Token = "0x170001DF")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001994")]
			get;
		}

		[Token(Token = "0x170001E0")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001995")]
			get;
		}
	}
	[Token(Token = "0x20003BB")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x11220A4", Offset = "0x11220A4", VA = "0x11220A4")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public enum InteractionType
	{
		[Token(Token = "0x40018C6")]
		Enter,
		[Token(Token = "0x40018C7")]
		Stay,
		[Token(Token = "0x40018C8")]
		Exit
	}
	[Token(Token = "0x20003BD")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20007DE")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4002DF8")]
			Mesh,
			[Token(Token = "0x4002DF9")]
			Skeleton,
			[Token(Token = "0x4002DFA")]
			Both
		}

		[Token(Token = "0x20007DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA373D8", Offset = "0xA373D8")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170006DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032CB")]
				[Address(RVA = "0x11280B4", Offset = "0x11280B4", VA = "0x11280B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032CD")]
				[Address(RVA = "0x112811C", Offset = "0x112811C", VA = "0x112811C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032C8")]
			[Address(RVA = "0x1127BA8", Offset = "0x1127BA8", VA = "0x1127BA8")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60032C9")]
			[Address(RVA = "0x1127E94", Offset = "0x1127E94", VA = "0x1127E94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032CA")]
			[Address(RVA = "0x1127E98", Offset = "0x1127E98", VA = "0x1127E98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032CC")]
			[Address(RVA = "0x11280BC", Offset = "0x11280BC", VA = "0x11280BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018C9")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44420", Offset = "0xA44420")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170001E1")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x11260A8", Offset = "0x11260A8", VA = "0x11260A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001998")]
			[Address(RVA = "0x11271C8", Offset = "0x11271C8", VA = "0x11271C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0x1126C30", Offset = "0x1126C30", VA = "0x1126C30")]
			get
			{
				return null;
			}
			[Token(Token = "0x600199A")]
			[Address(RVA = "0x1127230", Offset = "0x1127230", VA = "0x1127230")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0x1127298", Offset = "0x1127298", VA = "0x1127298")]
			get
			{
				return null;
			}
			[Token(Token = "0x600199C")]
			[Address(RVA = "0x11272D0", Offset = "0x11272D0", VA = "0x11272D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0x1127338", Offset = "0x1127338", VA = "0x1127338")]
			get
			{
				return null;
			}
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x1127370", Offset = "0x1127370", VA = "0x1127370")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x11273D8", Offset = "0x11273D8", VA = "0x11273D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x1127410", Offset = "0x1127410", VA = "0x1127410")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x1126074", Offset = "0x1126074", VA = "0x1126074")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x1127478", Offset = "0x1127478", VA = "0x1127478")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x1126BFC", Offset = "0x1126BFC", VA = "0x1126BFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x11274DC", Offset = "0x11274DC", VA = "0x11274DC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x1127540", Offset = "0x1127540", VA = "0x1127540")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x1127574", Offset = "0x1127574", VA = "0x1127574")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x11275D8", Offset = "0x11275D8", VA = "0x11275D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x112760C", Offset = "0x112760C", VA = "0x112760C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x1127670", Offset = "0x1127670", VA = "0x1127670")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x11276A4", Offset = "0x11276A4", VA = "0x11276A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x1127708", Offset = "0x1127708", VA = "0x1127708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58E4C", Offset = "0xA58E4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x1127758", Offset = "0x1127758", VA = "0x1127758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58E5C", Offset = "0xA58E5C")]
			private set
			{
			}
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x11277AC", Offset = "0x11277AC", VA = "0x11277AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x1127B20", Offset = "0x1127B20", VA = "0x1127B20")]
		private void Update()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x1127AB0", Offset = "0x1127AB0", VA = "0x1127AB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58E6C", Offset = "0xA58E6C")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x1123590", Offset = "0x1123590", VA = "0x1123590")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x1127BD4", Offset = "0x1127BD4", VA = "0x1127BD4")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x1126C68", Offset = "0x1126C68", VA = "0x1126C68")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x1125EE4", Offset = "0x1125EE4", VA = "0x1125EE4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x1127DB4", Offset = "0x1127DB4", VA = "0x1127DB4")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007E0")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60032CE")]
			[Address(RVA = "0x112886C", Offset = "0x112886C", VA = "0x112886C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170001EC")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x1128124", Offset = "0x1128124", VA = "0x1128124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x112812C", Offset = "0x112812C", VA = "0x112812C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x1128134", Offset = "0x1128134", VA = "0x1128134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x112813C", Offset = "0x112813C", VA = "0x112813C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x1128144", Offset = "0x1128144", VA = "0x1128144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58ED0", Offset = "0xA58ED0")]
			add
			{
			}
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x11281E8", Offset = "0x11281E8", VA = "0x11281E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58EE0", Offset = "0xA58EE0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x1128300", Offset = "0x1128300", VA = "0x1128300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58EF0", Offset = "0xA58EF0")]
			add
			{
			}
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x11283A4", Offset = "0x11283A4", VA = "0x11283A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58F00", Offset = "0xA58F00")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x11284BC", Offset = "0x11284BC", VA = "0x11284BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58F10", Offset = "0xA58F10")]
			add
			{
			}
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x1128560", Offset = "0x1128560", VA = "0x1128560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58F20", Offset = "0xA58F20")]
			remove
			{
			}
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x112828C", Offset = "0x112828C", VA = "0x112828C", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x1128448", Offset = "0x1128448", VA = "0x1128448", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x1128604", Offset = "0x1128604", VA = "0x1128604", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60019C2")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x1121EE0", Offset = "0x1121EE0", VA = "0x1121EE0", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x1128740", Offset = "0x1128740", VA = "0x1128740", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x1122D5C", Offset = "0x1122D5C", VA = "0x1122D5C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40018E1")]
		None,
		[Token(Token = "0x40018E2")]
		Proximity,
		[Token(Token = "0x40018E3")]
		Contact,
		[Token(Token = "0x40018E4")]
		Action
	}
	[Token(Token = "0x20003C0")]
	public enum InteractableState
	{
		[Token(Token = "0x40018E6")]
		Default,
		[Token(Token = "0x40018E7")]
		ProximityState,
		[Token(Token = "0x40018E8")]
		ContactState,
		[Token(Token = "0x40018E9")]
		ActionState
	}
	[Token(Token = "0x20003C1")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x11229B4", Offset = "0x11229B4", VA = "0x11229B4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170001F0")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0x11288BC", Offset = "0x11288BC", VA = "0x11288BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x1128678", Offset = "0x1128678", VA = "0x1128678")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x11287A4", Offset = "0x11287A4", VA = "0x11287A4")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x1128924", Offset = "0x1128924", VA = "0x1128924")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20007E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA373E8", Offset = "0xA373E8")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4002E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4002E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170006DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032D3")]
				[Address(RVA = "0x1129A0C", Offset = "0x1129A0C", VA = "0x1129A0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032D5")]
				[Address(RVA = "0x1129A74", Offset = "0x1129A74", VA = "0x1129A74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032CF")]
			[Address(RVA = "0x11294D0", Offset = "0x11294D0", VA = "0x11294D0")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60032D0")]
			[Address(RVA = "0x11295FC", Offset = "0x11295FC", VA = "0x11295FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032D1")]
			[Address(RVA = "0x1129670", Offset = "0x1129670", VA = "0x1129670", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032D2")]
			[Address(RVA = "0x1129618", Offset = "0x1129618", VA = "0x1129618")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60032D4")]
			[Address(RVA = "0x1129A14", Offset = "0x1129A14", VA = "0x1129A14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x11293C8", Offset = "0x11293C8", VA = "0x11293C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x1129444", Offset = "0x1129444", VA = "0x1129444")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58F30", Offset = "0xA58F30")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x11294FC", Offset = "0x11294FC", VA = "0x11294FC")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x11295F4", Offset = "0x11295F4", VA = "0x11295F4")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170001F1")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60019D0")]
			[Address(RVA = "0x1125920", Offset = "0x1125920", VA = "0x1125920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x1125A88", Offset = "0x1125A88", VA = "0x1125A88")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x1129A7C", Offset = "0x1129A7C", VA = "0x1129A7C")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x1129B28", Offset = "0x1129B28", VA = "0x1129B28")]
		private void Update()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x1129DF0", Offset = "0x1129DF0", VA = "0x1129DF0")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x1129E38", Offset = "0x1129E38", VA = "0x1129E38")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x112A088", Offset = "0x112A088", VA = "0x112A088")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x112A1B4", Offset = "0x112A1B4", VA = "0x112A1B4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20007E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA373F8", Offset = "0xA373F8")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170006DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032D9")]
				[Address(RVA = "0x1126E78", Offset = "0x1126E78", VA = "0x1126E78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032DB")]
				[Address(RVA = "0x1126EE0", Offset = "0x1126EE0", VA = "0x1126EE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032D6")]
			[Address(RVA = "0x1125BA4", Offset = "0x1125BA4", VA = "0x1125BA4")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60032D7")]
			[Address(RVA = "0x112688C", Offset = "0x112688C", VA = "0x112688C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032D8")]
			[Address(RVA = "0x1126890", Offset = "0x1126890", VA = "0x1126890", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032DA")]
			[Address(RVA = "0x1126E80", Offset = "0x1126E80", VA = "0x1126E80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018F9")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170001F2")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x1125804", Offset = "0x1125804", VA = "0x1125804", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001F3")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x112580C", Offset = "0x112580C", VA = "0x112580C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001F4")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0x1125814", Offset = "0x1125814", VA = "0x1125814", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F5")]
		public override bool EnableState
		{
			[Token(Token = "0x60019DB")]
			[Address(RVA = "0x112581C", Offset = "0x112581C", VA = "0x112581C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0x1125848", Offset = "0x1125848", VA = "0x1125848", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x1125884", Offset = "0x1125884", VA = "0x1125884", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x1125B34", Offset = "0x1125B34", VA = "0x1125B34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA58F94", Offset = "0xA58F94")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x1125BD0", Offset = "0x1125BD0", VA = "0x1125BD0")]
		private void Update()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x11260E0", Offset = "0x11260E0", VA = "0x11260E0")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x1126358", Offset = "0x1126358", VA = "0x1126358")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x1126498", Offset = "0x1126498", VA = "0x1126498", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x1126760", Offset = "0x1126760", VA = "0x1126760", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x1126764", Offset = "0x1126764", VA = "0x1126764", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x1126768", Offset = "0x1126768", VA = "0x1126768")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA444B0", Offset = "0xA444B0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA444C0", Offset = "0xA444C0")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA444D0", Offset = "0xA444D0")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170001F6")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x1126EE8", Offset = "0x1126EE8", VA = "0x1126EE8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA58FF8", Offset = "0xA58FF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x1126EF0", Offset = "0x1126EF0", VA = "0x1126EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59008", Offset = "0xA59008")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public bool EnableState
		{
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x1126EF8", Offset = "0x1126EF8", VA = "0x1126EF8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x1126F14", Offset = "0x1126F14", VA = "0x1126F14", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x1126F34", Offset = "0x1126F34", VA = "0x1126F34", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59018", Offset = "0xA59018")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x1126F3C", Offset = "0x1126F3C", VA = "0x1126F3C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59028", Offset = "0xA59028")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public float SphereRadius
		{
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x1126F48", Offset = "0x1126F48", VA = "0x1126F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59038", Offset = "0xA59038")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x1126F50", Offset = "0x1126F50", VA = "0x1126F50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59048", Offset = "0xA59048")]
			private set
			{
			}
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x1126F58", Offset = "0x1126F58", VA = "0x1126F58")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x1126FA0", Offset = "0x1126FA0", VA = "0x1126FA0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x1126FA4", Offset = "0x1126FA4", VA = "0x1126FA4")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001909")]
		None = 0,
		[Token(Token = "0x400190A")]
		Ray = 1,
		[Token(Token = "0x400190B")]
		Poke = 4,
		[Token(Token = "0x400190C")]
		All = -1
	}
	[Token(Token = "0x20003C8")]
	public enum ToolInputState
	{
		[Token(Token = "0x400190E")]
		Inactive,
		[Token(Token = "0x400190F")]
		PrimaryInputDown,
		[Token(Token = "0x4001910")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001911")]
		PrimaryInputUp
	}
	[Token(Token = "0x20003C9")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x112671C", Offset = "0x112671C", VA = "0x112671C")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA444E0", Offset = "0xA444E0")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA444F0", Offset = "0xA444F0")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44500", Offset = "0xA44500")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170001FA")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x1122C70", Offset = "0x1122C70", VA = "0x1122C70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x11289A0", Offset = "0x11289A0", VA = "0x11289A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59058", Offset = "0xA59058")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x11289A8", Offset = "0x11289A8", VA = "0x11289A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59068", Offset = "0xA59068")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60019F5")]
			get;
		}

		[Token(Token = "0x170001FD")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60019F6")]
			get;
		}

		[Token(Token = "0x170001FE")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60019F7")]
			get;
		}

		[Token(Token = "0x170001FF")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x11289B4", Offset = "0x11289B4", VA = "0x11289B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59078", Offset = "0xA59078")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x11289C0", Offset = "0x11289C0", VA = "0x11289C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59088", Offset = "0xA59088")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x11289CC", Offset = "0x11289CC", VA = "0x11289CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59098", Offset = "0xA59098")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0x11289D8", Offset = "0x11289D8", VA = "0x11289D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA590A8", Offset = "0xA590A8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001A00")]
			get;
			[Token(Token = "0x6001A01")]
			set;
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x11289E4", Offset = "0x11289E4", VA = "0x11289E4")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60019FD")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60019FE")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60019FF")]
		public abstract void DeFocus();

		[Token(Token = "0x6001A02")]
		public abstract void Initialize();

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x11289EC", Offset = "0x11289EC", VA = "0x11289EC")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x1128A3C", Offset = "0x1128A3C", VA = "0x1128A3C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x1128A94", Offset = "0x1128A94", VA = "0x1128A94", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x1128CD8", Offset = "0x1128CD8", VA = "0x1128CD8", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x112677C", Offset = "0x112677C", VA = "0x112677C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000202")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001A08")]
			get;
		}

		[Token(Token = "0x17000203")]
		bool EnableState
		{
			[Token(Token = "0x6001A0A")]
			get;
			[Token(Token = "0x6001A0B")]
			set;
		}

		[Token(Token = "0x17000204")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001A0C")]
			get;
			[Token(Token = "0x6001A0D")]
			set;
		}

		[Token(Token = "0x6001A09")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20003CC")]
	public class PinchStateModule
	{
		[Token(Token = "0x20007E3")]
		private enum PinchState
		{
			[Token(Token = "0x4002E0B")]
			None,
			[Token(Token = "0x4002E0C")]
			PinchDown,
			[Token(Token = "0x4002E0D")]
			PinchStay,
			[Token(Token = "0x4002E0E")]
			PinchUp
		}

		[Token(Token = "0x400191E")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000205")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x112C130", Offset = "0x112C130", VA = "0x112C130")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000206")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x112C1BC", Offset = "0x112C1BC", VA = "0x112C1BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000207")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x112C248", Offset = "0x112C248", VA = "0x112C248")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x112C2D4", Offset = "0x112C2D4", VA = "0x112C2D4")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x112C300", Offset = "0x112C300", VA = "0x112C300")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001921")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001922")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001923")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001924")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001925")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA44520", Offset = "0xA44520")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000208")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0x112C5A0", Offset = "0x112C5A0", VA = "0x112C5A0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000209")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0x112C5A8", Offset = "0x112C5A8", VA = "0x112C5A8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700020A")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x112C610", Offset = "0x112C610", VA = "0x112C610", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020B")]
		public override bool EnableState
		{
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0x112C618", Offset = "0x112C618", VA = "0x112C618", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0x112C634", Offset = "0x112C634", VA = "0x112C634", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x112C654", Offset = "0x112C654", VA = "0x112C654", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x112C6AC", Offset = "0x112C6AC", VA = "0x112C6AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x112C748", Offset = "0x112C748", VA = "0x112C748")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x112CA10", Offset = "0x112CA10", VA = "0x112CA10")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x112CB0C", Offset = "0x112CB0C", VA = "0x112CB0C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x112CE70", Offset = "0x112CE70", VA = "0x112CE70")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x112D014", Offset = "0x112D014", VA = "0x112D014")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x112D13C", Offset = "0x112D13C", VA = "0x112D13C")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x112D474", Offset = "0x112D474", VA = "0x112D474")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x112D884", Offset = "0x112D884", VA = "0x112D884", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x112D8BC", Offset = "0x112D8BC", VA = "0x112D8BC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x112D8F4", Offset = "0x112D8F4", VA = "0x112D8F4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001931")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001932")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44594", Offset = "0xA44594")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700020C")]
		public bool EnableState
		{
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0x123838C", Offset = "0x123838C", VA = "0x123838C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0x12383A8", Offset = "0x12383A8", VA = "0x12383A8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0x1238400", Offset = "0x1238400", VA = "0x1238400", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x1238408", Offset = "0x1238408", VA = "0x1238408", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x123866C", Offset = "0x123866C", VA = "0x123866C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA590B8", Offset = "0xA590B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x1238674", Offset = "0x1238674", VA = "0x1238674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA590C8", Offset = "0xA590C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x1238444", Offset = "0x1238444", VA = "0x1238444")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x123867C", Offset = "0x123867C", VA = "0x123867C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x123871C", Offset = "0x123871C", VA = "0x123871C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x1238A48", Offset = "0x1238A48", VA = "0x1238A48")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x1238C38", Offset = "0x1238C38", VA = "0x1238C38")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700020F")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x1125588", Offset = "0x1125588", VA = "0x1125588")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x1125590", Offset = "0x1125590", VA = "0x1125590")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x1125618", Offset = "0x1125618", VA = "0x1125618")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0x1125620", Offset = "0x1125620", VA = "0x1125620")]
			set
			{
			}
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x112568C", Offset = "0x112568C", VA = "0x112568C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x11257DC", Offset = "0x11257DC", VA = "0x11257DC")]
		public void ToggleSphereCasting(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x11257EC", Offset = "0x11257EC", VA = "0x11257EC")]
		public void ToggleGrabThroughWalls(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x11257FC", Offset = "0x11257FC", VA = "0x11257FC")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x11233C8", Offset = "0x11233C8", VA = "0x11233C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x11233CC", Offset = "0x11233CC", VA = "0x11233CC")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x1123404", Offset = "0x1123404", VA = "0x1123404")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x112343C", Offset = "0x112343C", VA = "0x112343C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x1123474", Offset = "0x1123474", VA = "0x1123474")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x11234AC", Offset = "0x11234AC", VA = "0x11234AC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x11234E4", Offset = "0x11234E4", VA = "0x11234E4")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x112351C", Offset = "0x112351C", VA = "0x112351C")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x1123678", Offset = "0x1123678", VA = "0x1123678")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x11236E8", Offset = "0x11236E8", VA = "0x11236E8")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x11236F0", Offset = "0x11236F0", VA = "0x11236F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x11236F4", Offset = "0x11236F4", VA = "0x11236F4")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x11236AC", Offset = "0x11236AC", VA = "0x11236AC")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x1123734", Offset = "0x1123734", VA = "0x1123734")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20007E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37408", Offset = "0xA37408")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4002E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4002E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4002E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170006E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032DF")]
				[Address(RVA = "0x112BFD4", Offset = "0x112BFD4", VA = "0x112BFD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032E1")]
				[Address(RVA = "0x112C03C", Offset = "0x112C03C", VA = "0x112C03C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032DC")]
			[Address(RVA = "0x112BD08", Offset = "0x112BD08", VA = "0x112BD08")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60032DD")]
			[Address(RVA = "0x112BDE4", Offset = "0x112BDE4", VA = "0x112BDE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032DE")]
			[Address(RVA = "0x112BDE8", Offset = "0x112BDE8", VA = "0x112BDE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032E0")]
			[Address(RVA = "0x112BFDC", Offset = "0x112BFDC", VA = "0x112BFDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001942")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001943")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x112B920", Offset = "0x112B920", VA = "0x112B920")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x112B9B8", Offset = "0x112B9B8", VA = "0x112B9B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x112BC44", Offset = "0x112BC44", VA = "0x112BC44")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x112BBD4", Offset = "0x112BBD4", VA = "0x112BBD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA590D8", Offset = "0xA590D8")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x112BD34", Offset = "0x112BD34", VA = "0x112BD34")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20007E5")]
		public enum SelectionState
		{
			[Token(Token = "0x4002E16")]
			Off,
			[Token(Token = "0x4002E17")]
			Selected,
			[Token(Token = "0x4002E18")]
			Highlighted
		}

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000211")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x1238C98", Offset = "0x1238C98", VA = "0x1238C98")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x1238CA0", Offset = "0x1238CA0", VA = "0x1238CA0")]
			set
			{
			}
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x1238E28", Offset = "0x1238E28", VA = "0x1238E28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x1238FE8", Offset = "0x1238FE8", VA = "0x1238FE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x1238D28", Offset = "0x1238D28", VA = "0x1238D28")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x12390D8", Offset = "0x12390D8", VA = "0x12390D8")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20007E6")]
		public enum SegmentType
		{
			[Token(Token = "0x4002E1A")]
			Straight,
			[Token(Token = "0x4002E1B")]
			LeftTurn,
			[Token(Token = "0x4002E1C")]
			RightTurn,
			[Token(Token = "0x4002E1D")]
			Switch
		}

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001958")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001959")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44674", Offset = "0xA44674")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000212")]
		public float StartDistance
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x1239144", Offset = "0x1239144", VA = "0x1239144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5913C", Offset = "0xA5913C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x123914C", Offset = "0x123914C", VA = "0x123914C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5914C", Offset = "0xA5914C")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public float GridSize
		{
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x1239154", Offset = "0x1239154", VA = "0x1239154")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0x123915C", Offset = "0x123915C", VA = "0x123915C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public int SubDivCount
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0x1239164", Offset = "0x1239164", VA = "0x1239164")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0x123916C", Offset = "0x123916C", VA = "0x123916C")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public SegmentType Type
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x1239174", Offset = "0x1239174", VA = "0x1239174")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000216")]
		public Pose EndPose
		{
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x123917C", Offset = "0x123917C", VA = "0x123917C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		public float Radius
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0x1239610", Offset = "0x1239610", VA = "0x1239610")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000218")]
		public float SegmentLength
		{
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x12391E4", Offset = "0x12391E4", VA = "0x12391E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x1239620", Offset = "0x1239620", VA = "0x1239620")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x1239638", Offset = "0x1239638", VA = "0x1239638")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x1239224", Offset = "0x1239224", VA = "0x1239224")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x123963C", Offset = "0x123963C", VA = "0x123963C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x1239640", Offset = "0x1239640", VA = "0x1239640")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x12396AC", Offset = "0x12396AC", VA = "0x12396AC")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x123A234", Offset = "0x123A234", VA = "0x123A234")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x123A540", Offset = "0x123A540", VA = "0x123A540")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20007E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37418", Offset = "0xA37418")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4002E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4002E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170006E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032E5")]
				[Address(RVA = "0x123B164", Offset = "0x123B164", VA = "0x123B164", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032E7")]
				[Address(RVA = "0x123B1CC", Offset = "0x123B1CC", VA = "0x123B1CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032E2")]
			[Address(RVA = "0x123AEDC", Offset = "0x123AEDC", VA = "0x123AEDC")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60032E3")]
			[Address(RVA = "0x123AFB8", Offset = "0x123AFB8", VA = "0x123AFB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032E4")]
			[Address(RVA = "0x123AFBC", Offset = "0x123AFBC", VA = "0x123AFBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032E6")]
			[Address(RVA = "0x123B16C", Offset = "0x123B16C", VA = "0x123B16C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400195F")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001960")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x123A5F0", Offset = "0x123A5F0", VA = "0x123A5F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x123A69C", Offset = "0x123A69C", VA = "0x123A69C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x123A750", Offset = "0x123A750", VA = "0x123A750")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x123A884", Offset = "0x123A884", VA = "0x123A884")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x123A9FC", Offset = "0x123A9FC", VA = "0x123A9FC")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x123AB98", Offset = "0x123AB98", VA = "0x123AB98")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x123AE14", Offset = "0x123AE14", VA = "0x123AE14")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x123ACAC", Offset = "0x123ACAC", VA = "0x123ACAC")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x123ACC0", Offset = "0x123ACC0", VA = "0x123ACC0")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x123AE6C", Offset = "0x123AE6C", VA = "0x123AE6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5915C", Offset = "0xA5915C")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x123AF08", Offset = "0x123AF08", VA = "0x123AF08")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000219")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0x123B1D4", Offset = "0x123B1D4", VA = "0x123B1D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x123B1E4", Offset = "0x123B1E4", VA = "0x123B1E4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x123B1EC", Offset = "0x123B1EC", VA = "0x123B1EC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x123B658", Offset = "0x123B658", VA = "0x123B658")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001973")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001974")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA44774", Offset = "0xA44774")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700021A")]
		public float Distance
		{
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0x123B758", Offset = "0x123B758", VA = "0x123B758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA591C0", Offset = "0xA591C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0x123B760", Offset = "0x123B760", VA = "0x123B760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA591D0", Offset = "0xA591D0")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public float Scale
		{
			[Token(Token = "0x6001A74")]
			[Address(RVA = "0x123B768", Offset = "0x123B768", VA = "0x123B768")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0x123B770", Offset = "0x123B770", VA = "0x123B770")]
			set
			{
			}
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x123B1E8", Offset = "0x123B1E8", VA = "0x123B1E8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x123B778", Offset = "0x123B778", VA = "0x123B778")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x123B234", Offset = "0x123B234", VA = "0x123B234")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x123B50C", Offset = "0x123B50C", VA = "0x123B50C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001A7A")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x123B6C8", Offset = "0x123B6C8", VA = "0x123B6C8")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20007E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37428", Offset = "0xA37428")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4002E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4002E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4002E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4002E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4002E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4002E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4002E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4002E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4002E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170006E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032EB")]
				[Address(RVA = "0x123C100", Offset = "0x123C100", VA = "0x123C100", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032ED")]
				[Address(RVA = "0x123C168", Offset = "0x123C168", VA = "0x123C168", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032E8")]
			[Address(RVA = "0x123BD44", Offset = "0x123BD44", VA = "0x123BD44")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60032E9")]
			[Address(RVA = "0x123BEDC", Offset = "0x123BEDC", VA = "0x123BEDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032EA")]
			[Address(RVA = "0x123BEE0", Offset = "0x123BEE0", VA = "0x123BEE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032EC")]
			[Address(RVA = "0x123C108", Offset = "0x123C108", VA = "0x123C108", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x123B948", Offset = "0x123B948", VA = "0x123B948")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x123B994", Offset = "0x123B994", VA = "0x123B994")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x123BAA0", Offset = "0x123BAA0", VA = "0x123BAA0")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x123BBE8", Offset = "0x123BBE8", VA = "0x123BBE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x123BAFC", Offset = "0x123BAFC", VA = "0x123BAFC")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x123BCC4", Offset = "0x123BCC4", VA = "0x123BCC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA591E0", Offset = "0xA591E0")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x123BD70", Offset = "0x123BD70", VA = "0x123BD70")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x123BE1C", Offset = "0x123BE1C", VA = "0x123BE1C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x123BE7C", Offset = "0x123BE7C", VA = "0x123BE7C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20007E9")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002E30")]
			Start,
			[Token(Token = "0x4002E31")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4002E32")]
			Stop
		}

		[Token(Token = "0x20007EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37438", Offset = "0xA37438")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4002E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4002E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4002E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4002E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4002E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170006E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032F1")]
				[Address(RVA = "0x123CDA8", Offset = "0x123CDA8", VA = "0x123CDA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032F3")]
				[Address(RVA = "0x123CE10", Offset = "0x123CE10", VA = "0x123CE10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032EE")]
			[Address(RVA = "0x123C474", Offset = "0x123C474", VA = "0x123C474")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60032EF")]
			[Address(RVA = "0x123CB88", Offset = "0x123CB88", VA = "0x123CB88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032F0")]
			[Address(RVA = "0x123CB8C", Offset = "0x123CB8C", VA = "0x123CB8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032F2")]
			[Address(RVA = "0x123CDB0", Offset = "0x123CDB0", VA = "0x123CDB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001987")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001988")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001989")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400198A")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA447D4", Offset = "0xA447D4")]
		protected float _initialSpeed;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x123C170", Offset = "0x123C170", VA = "0x123C170")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x123C2C8", Offset = "0x123C2C8", VA = "0x123C2C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x123C2D4", Offset = "0x123C2D4", VA = "0x123C2D4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x123C428", Offset = "0x123C428", VA = "0x123C428")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x123C244", Offset = "0x123C244", VA = "0x123C244")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59244", Offset = "0xA59244")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x123C4A0", Offset = "0x123C4A0", VA = "0x123C4A0")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x123C3C4", Offset = "0x123C3C4", VA = "0x123C3C4")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x123C6D4", Offset = "0x123C6D4", VA = "0x123C6D4")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x123C880", Offset = "0x123C880", VA = "0x123C880")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x123C790", Offset = "0x123C790", VA = "0x123C790")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x123C93C", Offset = "0x123C93C", VA = "0x123C93C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x123C9C4", Offset = "0x123C9C4", VA = "0x123C9C4")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x123CA50", Offset = "0x123CA50", VA = "0x123CA50")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x123CB0C", Offset = "0x123CB0C", VA = "0x123CB0C")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x123CB1C", Offset = "0x123CB1C", VA = "0x123CB1C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700021C")]
		public float TrackLength
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0x123CE18", Offset = "0x123CE18", VA = "0x123CE18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A96")]
			[Address(RVA = "0x123CE20", Offset = "0x123CE20", VA = "0x123CE20")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x123CE28", Offset = "0x123CE28", VA = "0x123CE28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x123B7F8", Offset = "0x123B7F8", VA = "0x123B7F8")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x123CE2C", Offset = "0x123CE2C", VA = "0x123CE2C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x123D024", Offset = "0x123D024", VA = "0x123D024")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x123D140", Offset = "0x123D140", VA = "0x123D140")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class Pose
	{
		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x112C484", Offset = "0x112C484", VA = "0x112C484")]
		public Pose()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x112C530", Offset = "0x112C530", VA = "0x112C530")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20007EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37448", Offset = "0xA37448")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4002E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4002E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170006E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032F7")]
				[Address(RVA = "0x123D724", Offset = "0x123D724", VA = "0x123D724", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032F9")]
				[Address(RVA = "0x123D78C", Offset = "0x123D78C", VA = "0x123D78C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032F4")]
			[Address(RVA = "0x123D3E8", Offset = "0x123D3E8", VA = "0x123D3E8")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60032F5")]
			[Address(RVA = "0x123D548", Offset = "0x123D548", VA = "0x123D548", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032F6")]
			[Address(RVA = "0x123D54C", Offset = "0x123D54C", VA = "0x123D54C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032F8")]
			[Address(RVA = "0x123D72C", Offset = "0x123D72C", VA = "0x123D72C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37458", Offset = "0xA37458")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4002E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4002E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170006EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032FD")]
				[Address(RVA = "0x123D860", Offset = "0x123D860", VA = "0x123D860", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032FF")]
				[Address(RVA = "0x123D8C8", Offset = "0x123D8C8", VA = "0x123D8C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60032FA")]
			[Address(RVA = "0x123D4A8", Offset = "0x123D4A8", VA = "0x123D4A8")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60032FB")]
			[Address(RVA = "0x123D794", Offset = "0x123D794", VA = "0x123D794", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60032FC")]
			[Address(RVA = "0x123D798", Offset = "0x123D798", VA = "0x123D798", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032FE")]
			[Address(RVA = "0x123D868", Offset = "0x123D868", VA = "0x123D868", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019AD")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA449BC", Offset = "0xA449BC")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700021D")]
		public bool IsMoving
		{
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0x123D15C", Offset = "0x123D15C", VA = "0x123D15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA592A8", Offset = "0xA592A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x123D164", Offset = "0x123D164", VA = "0x123D164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA592B8", Offset = "0xA592B8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x123D170", Offset = "0x123D170", VA = "0x123D170")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x123D1AC", Offset = "0x123D1AC", VA = "0x123D1AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x123D300", Offset = "0x123D300", VA = "0x123D300")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x123D368", Offset = "0x123D368", VA = "0x123D368")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA592C8", Offset = "0xA592C8")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x123D414", Offset = "0x123D414", VA = "0x123D414")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5932C", Offset = "0xA5932C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x123D4D4", Offset = "0x123D4D4", VA = "0x123D4D4")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x123D540", Offset = "0x123D540", VA = "0x123D540")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x123D8D0", Offset = "0x123D8D0", VA = "0x123D8D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x123D938", Offset = "0x123D938", VA = "0x123D938")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x123D9F0", Offset = "0x123D9F0", VA = "0x123D9F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x123DAF0", Offset = "0x123DAF0", VA = "0x123DAF0")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x123DB6C", Offset = "0x123DB6C", VA = "0x123DB6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x123DC48", Offset = "0x123DC48", VA = "0x123DC48")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40019BE")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40019BF")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40019C0")]
		EUDT_None,
		[Token(Token = "0x40019C1")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20003DF")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20007ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37468", Offset = "0xA37468")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170006ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003303")]
				[Address(RVA = "0x112B8B0", Offset = "0x112B8B0", VA = "0x112B8B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003305")]
				[Address(RVA = "0x112B918", Offset = "0x112B918", VA = "0x112B918", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003300")]
			[Address(RVA = "0x112AF2C", Offset = "0x112AF2C", VA = "0x112AF2C")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6003301")]
			[Address(RVA = "0x112B664", Offset = "0x112B664", VA = "0x112B664", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003302")]
			[Address(RVA = "0x112B668", Offset = "0x112B668", VA = "0x112B668", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003304")]
			[Address(RVA = "0x112B8B8", Offset = "0x112B8B8", VA = "0x112B8B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40019C3")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40019C4")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40019C5")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityEngine.UI.Toggle applicationRadioButton;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.UI.Toggle noneRadioButton;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA449FC", Offset = "0xA449FC")]
		public GameObject mainCamera;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA44A34", Offset = "0xA44A34")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x112A274", Offset = "0x112A274", VA = "0x112A274")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x112AA54", Offset = "0x112AA54", VA = "0x112AA54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x112AB94", Offset = "0x112AB94", VA = "0x112AB94")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x112ACBC", Offset = "0x112ACBC", VA = "0x112ACBC")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x112ADE4", Offset = "0x112ADE4", VA = "0x112ADE4")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x112AB68", Offset = "0x112AB68", VA = "0x112AB68")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x112AEBC", Offset = "0x112AEBC", VA = "0x112AEBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59390", Offset = "0xA59390")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x112AF58", Offset = "0x112AF58", VA = "0x112AF58")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x112A5E0", Offset = "0x112A5E0", VA = "0x112A5E0")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x112B080", Offset = "0x112B080", VA = "0x112B080")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x112AF8C", Offset = "0x112AF8C", VA = "0x112AF8C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x112B41C", Offset = "0x112B41C", VA = "0x112B41C")]
		public void RadioPressed(string radioLabel, string group, UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x112B4F8", Offset = "0x112B4F8", VA = "0x112B4F8")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x112B574", Offset = "0x112B574", VA = "0x112B574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA593F4", Offset = "0xA593F4")]
		private void <Start>b__24_0(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x112B5C4", Offset = "0x112B5C4", VA = "0x112B5C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59404", Offset = "0xA59404")]
		private void <Start>b__24_1(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x112B614", Offset = "0x112B614", VA = "0x112B614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59414", Offset = "0xA59414")]
		private void <Start>b__24_2(UnityEngine.UI.Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34434", Offset = "0xA34434")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37478", Offset = "0xA37478")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6003307")]
			[Address(RVA = "0x12A7A74", Offset = "0x12A7A74", VA = "0x12A7A74")]
			public <>c()
			{
			}

			[Token(Token = "0x6003308")]
			[Address(RVA = "0x12A7A7C", Offset = "0x12A7A7C", VA = "0x12A7A7C")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40019DA")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40019DB")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40019DC")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40019DD")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40019DE")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40019DF")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40019E0")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40019E1")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40019E2")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40019E3")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40019E4")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x12A6CB8", Offset = "0x12A6CB8", VA = "0x12A6CB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x12A6D10", Offset = "0x12A6D10", VA = "0x12A6D10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x12A7118", Offset = "0x12A7118", VA = "0x12A7118")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x12A71E4", Offset = "0x12A71E4", VA = "0x12A71E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x12A72F0", Offset = "0x12A72F0", VA = "0x12A72F0")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x12A7628", Offset = "0x12A7628", VA = "0x12A7628")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x12A7790", Offset = "0x12A7790", VA = "0x12A7790")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x12A78DC", Offset = "0x12A78DC", VA = "0x12A78DC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x12A738C", Offset = "0x12A738C", VA = "0x12A738C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x12A742C", Offset = "0x12A742C", VA = "0x12A742C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x12A6F6C", Offset = "0x12A6F6C", VA = "0x12A6F6C")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x12A79F8", Offset = "0x12A79F8", VA = "0x12A79F8")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public enum HandPoseId
	{
		[Token(Token = "0x40019F7")]
		Default,
		[Token(Token = "0x40019F8")]
		Generic,
		[Token(Token = "0x40019F9")]
		PingPongBall,
		[Token(Token = "0x40019FA")]
		Controller
	}
	[Token(Token = "0x20003E2")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700021E")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x12A7AA8", Offset = "0x12A7AA8", VA = "0x12A7AA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021F")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x12A7AB0", Offset = "0x12A7AB0", VA = "0x12A7AB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000220")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x12A7AB8", Offset = "0x12A7AB8", VA = "0x12A7AB8")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x12A7AC0", Offset = "0x12A7AC0", VA = "0x12A7AC0")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x12A7AC8", Offset = "0x12A7AC8", VA = "0x12A7AC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x12A7D3C", Offset = "0x12A7D3C", VA = "0x12A7D3C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x12A7D98", Offset = "0x12A7D98", VA = "0x12A7D98")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x12A7DDC", Offset = "0x12A7DDC", VA = "0x12A7DDC")]
		public TouchController()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20003E4")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xA44AEC", Offset = "0xA44AEC")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x1977BF4", Offset = "0x1977BF4", VA = "0x1977BF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x1977BF8", Offset = "0x1977BF8", VA = "0x1977BF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x1977CB8", Offset = "0x1977CB8", VA = "0x1977CB8")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44B38", Offset = "0xA44B38")]
		public bool autoRetrigger;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA44B70", Offset = "0xA44B70")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44B94", Offset = "0xA44B94")]
		public Transform[] playPositions;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x196EF38", Offset = "0x196EF38", VA = "0x196EF38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x196F0BC", Offset = "0x196F0BC", VA = "0x196F0BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x196F298", Offset = "0x196F298", VA = "0x196F298")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x196F11C", Offset = "0x196F11C", VA = "0x196F11C")]
		public void Play()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x196F3D8", Offset = "0x196F3D8", VA = "0x196F3D8")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x196F54C", Offset = "0x196F54C", VA = "0x196F54C")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001A0E")]
		Default,
		[Token(Token = "0x4001A0F")]
		Preload,
		[Token(Token = "0x4001A10")]
		ManualPreload
	}
	[Token(Token = "0x20003E7")]
	public enum Fade
	{
		[Token(Token = "0x4001A12")]
		In,
		[Token(Token = "0x4001A13")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20003E8")]
	public class SoundGroup
	{
		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA44BCC", Offset = "0xA44BCC")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x1977AD4", Offset = "0x1977AD4", VA = "0x1977AD4")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x1977B68", Offset = "0x1977B68", VA = "0x1977B68")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x1976540", Offset = "0x1976540", VA = "0x1976540")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x1976680", Offset = "0x1976680", VA = "0x1976680")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x1977138", Offset = "0x1977138", VA = "0x1977138")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E9")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20007EF")]
		public enum Fade
		{
			[Token(Token = "0x4002E4E")]
			In,
			[Token(Token = "0x4002E4F")]
			Out
		}

		[Token(Token = "0x20007F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37488", Offset = "0xA37488")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4002E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6003309")]
			[Address(RVA = "0x1973660", Offset = "0x1973660", VA = "0x1973660")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x600330A")]
			[Address(RVA = "0x1975FFC", Offset = "0x1975FFC", VA = "0x1975FFC")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20007F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37498", Offset = "0xA37498")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x600330C")]
			[Address(RVA = "0x1975F64", Offset = "0x1975F64", VA = "0x1975F64")]
			public <>c()
			{
			}

			[Token(Token = "0x600330D")]
			[Address(RVA = "0x1975F6C", Offset = "0x1975F6C", VA = "0x1975F6C")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44BF8", Offset = "0xA44BF8")]
		public bool makePersistent;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44C30", Offset = "0xA44C30")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44C68", Offset = "0xA44C68")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44CA0", Offset = "0xA44CA0")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44CD8", Offset = "0xA44CD8")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44D10", Offset = "0xA44D10")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44D48", Offset = "0xA44D48")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44D80", Offset = "0xA44D80")]
		public bool verboseLogging;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44DB8", Offset = "0xA44DB8")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44DF0", Offset = "0xA44DF0")]
		public float volumeSoundFX;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44E28", Offset = "0xA44E28")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000221")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0x196F60C", Offset = "0x196F60C", VA = "0x196F60C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000222")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0x196F6EC", Offset = "0x196F6EC", VA = "0x196F6EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0x196F754", Offset = "0x196F754", VA = "0x196F754")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000224")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0x196F7C8", Offset = "0x196F7C8", VA = "0x196F7C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000225")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0x196F83C", Offset = "0x196F83C", VA = "0x196F83C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0x196F8B0", Offset = "0x196F8B0", VA = "0x196F8B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0x196F924", Offset = "0x196F924", VA = "0x196F924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0x1971674", Offset = "0x1971674", VA = "0x1971674")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x196F998", Offset = "0x196F998", VA = "0x196F998")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x196FBC0", Offset = "0x196FBC0", VA = "0x196FBC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x196F99C", Offset = "0x196F99C", VA = "0x196F99C")]
		private void Init()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x19707EC", Offset = "0x19707EC", VA = "0x19707EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x196FD18", Offset = "0x196FD18", VA = "0x196FD18")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x1970E10", Offset = "0x1970E10", VA = "0x1970E10")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x1970F90", Offset = "0x1970F90", VA = "0x1970F90")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x197112C", Offset = "0x197112C", VA = "0x197112C")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x197122C", Offset = "0x197122C", VA = "0x197122C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x19712BC", Offset = "0x19712BC", VA = "0x19712BC")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x1970164", Offset = "0x1970164", VA = "0x1970164")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x19707F0", Offset = "0x19707F0", VA = "0x19707F0")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x19718F4", Offset = "0x19718F4", VA = "0x19718F4")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x19719F8", Offset = "0x19719F8", VA = "0x19719F8")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x1971B00", Offset = "0x1971B00", VA = "0x1971B00")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x19717BC", Offset = "0x19717BC", VA = "0x19717BC")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x1971C6C", Offset = "0x1971C6C", VA = "0x1971C6C")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x1971DC0", Offset = "0x1971DC0", VA = "0x1971DC0")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x1971F70", Offset = "0x1971F70", VA = "0x1971F70")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x196F328", Offset = "0x196F328", VA = "0x196F328")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x196F49C", Offset = "0x196F49C", VA = "0x196F49C")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x197211C", Offset = "0x197211C", VA = "0x197211C")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x19721E8", Offset = "0x19721E8", VA = "0x19721E8")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x197227C", Offset = "0x197227C", VA = "0x197227C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x1972340", Offset = "0x1972340", VA = "0x1972340")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x19723E4", Offset = "0x19723E4", VA = "0x19723E4")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x19724C4", Offset = "0x19724C4", VA = "0x19724C4")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x1972FA8", Offset = "0x1972FA8", VA = "0x1972FA8")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x1973668", Offset = "0x1973668", VA = "0x1973668")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x1973848", Offset = "0x1973848", VA = "0x1973848")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x197458C", Offset = "0x197458C", VA = "0x197458C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x19726CC", Offset = "0x19726CC", VA = "0x19726CC")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x19746AC", Offset = "0x19746AC", VA = "0x19746AC")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x1974790", Offset = "0x1974790", VA = "0x1974790")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x1974880", Offset = "0x1974880", VA = "0x1974880")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x1974C38", Offset = "0x1974C38", VA = "0x1974C38")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x1974E34", Offset = "0x1974E34", VA = "0x1974E34")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x1974F50", Offset = "0x1974F50", VA = "0x1974F50")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x1975118", Offset = "0x1975118", VA = "0x1975118")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x19751F0", Offset = "0x19751F0", VA = "0x19751F0")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x1975324", Offset = "0x1975324", VA = "0x1975324")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x1975710", Offset = "0x1975710", VA = "0x1975710")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001A3B")]
		None = -1,
		[Token(Token = "0x4001A3C")]
		Reserved,
		[Token(Token = "0x4001A3D")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20003EB")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x19760F8", Offset = "0x19760F8", VA = "0x19760F8")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float minDefaultVal;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDefaultVal;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float min;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float max;

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x197609C", Offset = "0x197609C", VA = "0x197609C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20007F2")]
		public enum FadeState
		{
			[Token(Token = "0x4002E54")]
			Null,
			[Token(Token = "0x4002E55")]
			FadingIn,
			[Token(Token = "0x4002E56")]
			FadingOut,
			[Token(Token = "0x4002E57")]
			Ducking
		}

		[Token(Token = "0x20007F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA374A8", Offset = "0xA374A8")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4002E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4002E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170006EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003311")]
				[Address(RVA = "0x1976B44", Offset = "0x1976B44", VA = "0x1976B44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003313")]
				[Address(RVA = "0x1976BAC", Offset = "0x1976BAC", VA = "0x1976BAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600330E")]
			[Address(RVA = "0x1976824", Offset = "0x1976824", VA = "0x1976824")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600330F")]
			[Address(RVA = "0x1976A54", Offset = "0x1976A54", VA = "0x1976A54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003310")]
			[Address(RVA = "0x1976A58", Offset = "0x1976A58", VA = "0x1976A58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003312")]
			[Address(RVA = "0x1976B4C", Offset = "0x1976B4C", VA = "0x1976B4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA374B8", Offset = "0xA374B8")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4002E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4002E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4002E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4002E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170006F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003317")]
				[Address(RVA = "0x1976FF8", Offset = "0x1976FF8", VA = "0x1976FF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003319")]
				[Address(RVA = "0x1977060", Offset = "0x1977060", VA = "0x1977060", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003314")]
			[Address(RVA = "0x19769E4", Offset = "0x19769E4", VA = "0x19769E4")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6003315")]
			[Address(RVA = "0x1976E8C", Offset = "0x1976E8C", VA = "0x1976E8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003316")]
			[Address(RVA = "0x1976E90", Offset = "0x1976E90", VA = "0x1976E90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003318")]
			[Address(RVA = "0x1977000", Offset = "0x1977000", VA = "0x1977000", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA374C8", Offset = "0xA374C8")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4002E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4002E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4002E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4002E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4002E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4002E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4002E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4002E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170006F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600331D")]
				[Address(RVA = "0x1976E1C", Offset = "0x1976E1C", VA = "0x1976E1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600331F")]
				[Address(RVA = "0x1976E84", Offset = "0x1976E84", VA = "0x1976E84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600331A")]
			[Address(RVA = "0x1976A10", Offset = "0x1976A10", VA = "0x1976A10")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x600331B")]
			[Address(RVA = "0x1976BB4", Offset = "0x1976BB4", VA = "0x1976BB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600331C")]
			[Address(RVA = "0x1976BB8", Offset = "0x1976BB8", VA = "0x1976BB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600331E")]
			[Address(RVA = "0x1976E24", Offset = "0x1976E24", VA = "0x1976E24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000229")]
		public float volume
		{
			[Token(Token = "0x6001B14")]
			[Address(RVA = "0x1974570", Offset = "0x1974570", VA = "0x1974570")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B15")]
			[Address(RVA = "0x1976198", Offset = "0x1976198", VA = "0x1976198")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public float pitch
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0x19761B4", Offset = "0x19761B4", VA = "0x19761B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x19761D0", Offset = "0x19761D0", VA = "0x19761D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public AudioClip clip
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x19761EC", Offset = "0x19761EC", VA = "0x19761EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x1976208", Offset = "0x1976208", VA = "0x1976208")]
			set
			{
			}
		}

		[Token(Token = "0x1700022C")]
		public float time
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0x1976224", Offset = "0x1976224", VA = "0x1976224")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0x19724A8", Offset = "0x19724A8", VA = "0x19724A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022D")]
		public float length
		{
			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0x1976240", Offset = "0x1976240", VA = "0x1976240")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700022E")]
		public bool loop
		{
			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0x19762F8", Offset = "0x19762F8", VA = "0x19762F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0x1976314", Offset = "0x1976314", VA = "0x1976314")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public bool mute
		{
			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0x1976334", Offset = "0x1976334", VA = "0x1976334")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0x1976350", Offset = "0x1976350", VA = "0x1976350")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001B21")]
			[Address(RVA = "0x1976370", Offset = "0x1976370", VA = "0x1976370")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001B22")]
			[Address(RVA = "0x197638C", Offset = "0x197638C", VA = "0x197638C")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public bool isPlaying
		{
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0x19763A8", Offset = "0x19763A8", VA = "0x19763A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x19763C4", Offset = "0x19763C4", VA = "0x19763C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x197455C", Offset = "0x197455C", VA = "0x197455C")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x19765D0", Offset = "0x19765D0", VA = "0x19765D0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x1974878", Offset = "0x1974878", VA = "0x1974878")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x19765D8", Offset = "0x19765D8", VA = "0x19765D8")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x19765E0", Offset = "0x19765E0", VA = "0x19765E0")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x1975070", Offset = "0x1975070", VA = "0x1975070")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x1971888", Offset = "0x1971888", VA = "0x1971888")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x19765E8", Offset = "0x19765E8", VA = "0x19765E8")]
		public void Play()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x1976648", Offset = "0x1976648", VA = "0x1976648")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x19716DC", Offset = "0x19716DC", VA = "0x19716DC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x1976710", Offset = "0x1976710", VA = "0x1976710")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x1974B3C", Offset = "0x1974B3C", VA = "0x1974B3C")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x1974D7C", Offset = "0x1974D7C", VA = "0x1974D7C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x1971C2C", Offset = "0x1971C2C", VA = "0x1971C2C")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x1976768", Offset = "0x1976768", VA = "0x1976768")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x1976794", Offset = "0x1976794", VA = "0x1976794")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59424", Offset = "0xA59424")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x1976850", Offset = "0x1976850", VA = "0x1976850")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x1972028", Offset = "0x1972028", VA = "0x1972028")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x19720A4", Offset = "0x19720A4", VA = "0x19720A4")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x1971ED8", Offset = "0x1971ED8", VA = "0x1971ED8")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x1971D24", Offset = "0x1971D24", VA = "0x1971D24")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x19768B8", Offset = "0x19768B8", VA = "0x19768B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59488", Offset = "0xA59488")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x197693C", Offset = "0x197693C", VA = "0x197693C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA594EC", Offset = "0xA594EC")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x1976A3C", Offset = "0x1976A3C", VA = "0x1976A3C")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4001A54")]
		Random,
		[Token(Token = "0x4001A55")]
		Sequential
	}
	[Token(Token = "0x20003EF")]
	public enum FreqHint
	{
		[Token(Token = "0x4001A57")]
		None,
		[Token(Token = "0x4001A58")]
		Wide,
		[Token(Token = "0x4001A59")]
		Narrow
	}
	[Token(Token = "0x20003F0")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001A5B")]
		VeryLow = -2,
		[Token(Token = "0x4001A5C")]
		Low,
		[Token(Token = "0x4001A5D")]
		Default,
		[Token(Token = "0x4001A5E")]
		High,
		[Token(Token = "0x4001A5F")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20003F1")]
	public class OSPProps
	{
		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44F10", Offset = "0xA44F10")]
		public bool enableSpatialization;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44F48", Offset = "0xA44F48")]
		public bool useFastOverride;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44F80", Offset = "0xA44F80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA44F80", Offset = "0xA44F80")]
		public float gain;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA44FD4", Offset = "0xA44FD4")]
		public bool enableInvSquare;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4500C", Offset = "0xA4500C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4500C", Offset = "0xA4500C")]
		public float volumetric;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45064", Offset = "0xA45064")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA45064", Offset = "0xA45064")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x1976108", Offset = "0x1976108", VA = "0x1976108")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F2")]
	public class SoundFX
	{
		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA450C4", Offset = "0xA450C4")]
		public string name;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA450FC", Offset = "0xA450FC")]
		public SoundFXNext playback;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45134", Offset = "0xA45134")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA45134", Offset = "0xA45134")]
		public float volume;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45188", Offset = "0xA45188")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA45188", Offset = "0xA45188")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA451E4", Offset = "0xA451E4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA451E4", Offset = "0xA451E4")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45244", Offset = "0xA45244")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4527C", Offset = "0xA4527C")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA452B4", Offset = "0xA452B4")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA452EC", Offset = "0xA452EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA452EC", Offset = "0xA452EC")]
		public float spread;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45344", Offset = "0xA45344")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA45344", Offset = "0xA45344")]
		public float pctChanceToPlay;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45398", Offset = "0xA45398")]
		public SoundPriority priority;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA453D0", Offset = "0xA453D0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xA453D0", Offset = "0xA453D0")]
		public Vector2 delay;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4542C", Offset = "0xA4542C")]
		public bool looping;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45464", Offset = "0xA45464")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000232")]
		public int Length
		{
			[Token(Token = "0x6001B3F")]
			[Address(RVA = "0x1977068", Offset = "0x1977068", VA = "0x1977068")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000233")]
		public bool IsValid
		{
			[Token(Token = "0x6001B40")]
			[Address(RVA = "0x1977084", Offset = "0x1977084", VA = "0x1977084")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000234")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001B41")]
			[Address(RVA = "0x1977128", Offset = "0x1977128", VA = "0x1977128")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B42")]
			[Address(RVA = "0x1977130", Offset = "0x1977130", VA = "0x1977130")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001B43")]
			[Address(RVA = "0x1974464", Offset = "0x1974464", VA = "0x1974464")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000236")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001B44")]
			[Address(RVA = "0x1974498", Offset = "0x1974498", VA = "0x1974498")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x1975A18", Offset = "0x1975A18", VA = "0x1975A18")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x1974394", Offset = "0x1974394", VA = "0x1974394")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x19744BC", Offset = "0x19744BC", VA = "0x19744BC")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x1974470", Offset = "0x1974470", VA = "0x1974470")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x1977158", Offset = "0x1977158", VA = "0x1977158")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x19744B0", Offset = "0x19744B0", VA = "0x19744B0")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x1977254", Offset = "0x1977254", VA = "0x1977254")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x1977330", Offset = "0x1977330", VA = "0x1977330")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x1977444", Offset = "0x1977444", VA = "0x1977444")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x19774D0", Offset = "0x19774D0", VA = "0x19774D0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x1977564", Offset = "0x1977564", VA = "0x1977564")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x19775F0", Offset = "0x19775F0", VA = "0x19775F0")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x197767C", Offset = "0x197767C", VA = "0x197767C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F3")]
	public class SoundFXRef
	{
		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000237")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001B51")]
			[Address(RVA = "0x19776F4", Offset = "0x19776F4", VA = "0x19776F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		public string name
		{
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0x19777E8", Offset = "0x19777E8", VA = "0x19777E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B53")]
			[Address(RVA = "0x19777F0", Offset = "0x19777F0", VA = "0x19777F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public int Length
		{
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0x19777F8", Offset = "0x19777F8", VA = "0x19777F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023A")]
		public bool IsValid
		{
			[Token(Token = "0x6001B56")]
			[Address(RVA = "0x197783C", Offset = "0x197783C", VA = "0x197783C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x1977724", Offset = "0x1977724", VA = "0x1977724")]
		private void Init()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x1977874", Offset = "0x1977874", VA = "0x1977874")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x19778AC", Offset = "0x19778AC", VA = "0x19778AC")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x19778EC", Offset = "0x19778EC", VA = "0x19778EC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x196F2A8", Offset = "0x196F2A8", VA = "0x196F2A8")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x1977934", Offset = "0x1977934", VA = "0x1977934")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x1977974", Offset = "0x1977974", VA = "0x1977974")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x19779C4", Offset = "0x19779C4", VA = "0x19779C4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x19779FC", Offset = "0x19779FC", VA = "0x19779FC")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x1977A3C", Offset = "0x1977A3C", VA = "0x1977A3C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x1977A74", Offset = "0x1977A74", VA = "0x1977A74")]
		public SoundFXRef()
		{
		}
	}
}
namespace Obi
{
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34498", Offset = "0xA34498")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34498", Offset = "0xA34498")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34498", Offset = "0xA34498")]
	public class ObiCharacter : MonoBehaviour
	{
		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MovingTurnSpeed;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_StationaryTurnSpeed;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA454CC", Offset = "0xA454CC")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_RunCycleLegOffset;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_MoveSpeedMultiplier;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_AnimSpeedMultiplier;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_GroundCheckDistance;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator m_Animator;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_IsGrounded;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_OrigGroundCheckDistance;

		[Token(Token = "0x4001A88")]
		private const float k_Half = 0.5f;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_TurnAmount;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_ForwardAmount;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_GroundNormal;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_CapsuleHeight;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_CapsuleCenter;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_Crouching;

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x12A95AC", Offset = "0x12A95AC", VA = "0x12A95AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x12A96C0", Offset = "0x12A96C0", VA = "0x12A96C0")]
		public void Move(Vector3 move, bool crouch, bool jump)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x12A9D34", Offset = "0x12A9D34", VA = "0x12A9D34")]
		private void ScaleCapsuleForCrouching(bool crouch)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x12A9FD0", Offset = "0x12A9FD0", VA = "0x12A9FD0")]
		private void PreventStandingInLowHeadroom()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x12AA188", Offset = "0x12AA188", VA = "0x12AA188")]
		private void UpdateAnimator(Vector3 move)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x12A9C20", Offset = "0x12A9C20", VA = "0x12A9C20")]
		private void HandleAirborneMovement()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x12A9AE0", Offset = "0x12A9AE0", VA = "0x12A9AE0")]
		private void HandleGroundedMovement(bool crouch, bool jump)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x12A9A10", Offset = "0x12A9A10", VA = "0x12A9A10")]
		private void ApplyExtraTurnRotation()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x12AA3D4", Offset = "0x12AA3D4", VA = "0x12AA3D4")]
		public void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x12A9878", Offset = "0x12A9878", VA = "0x12A9878")]
		private void CheckGroundStatus()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x12AA4F4", Offset = "0x12AA4F4", VA = "0x12AA4F4")]
		public ObiCharacter()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3454C", Offset = "0xA3454C")]
	public class SampleCharacterController : MonoBehaviour
	{
		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiCharacter m_Character;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_Cam;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_CamForward;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_Move;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Jump;

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x12AA514", Offset = "0x12AA514", VA = "0x12AA514")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x12AA604", Offset = "0x12AA604", VA = "0x12AA604")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x12AA914", Offset = "0x12AA914", VA = "0x12AA914")]
		public SampleCharacterController()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA345B0", Offset = "0xA345B0")]
	public class ColorFromPhase : MonoBehaviour
	{
		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x12A8458", Offset = "0x12A8458", VA = "0x12A8458")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x12A84B0", Offset = "0x12A84B0", VA = "0x12A84B0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x12A8670", Offset = "0x12A8670", VA = "0x12A8670")]
		public ColorFromPhase()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34614", Offset = "0xA34614")]
	public class ColorFromVelocity : MonoBehaviour
	{
		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensibility;

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x12A8678", Offset = "0x12A8678", VA = "0x12A8678")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x12A86D0", Offset = "0x12A86D0", VA = "0x12A86D0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x12A86D4", Offset = "0x12A86D4", VA = "0x12A86D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x12A8900", Offset = "0x12A8900", VA = "0x12A8900")]
		public ColorFromVelocity()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34678", Offset = "0xA34678")]
	public class ColorRandomizer : MonoBehaviour
	{
		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient gradient;

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x12A8914", Offset = "0x12A8914", VA = "0x12A8914")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x12A8A24", Offset = "0x12A8A24", VA = "0x12A8A24")]
		public ColorRandomizer()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA346DC", Offset = "0xA346DC")]
	public class LookAroundCamera : MonoBehaviour
	{
		[Token(Token = "0x20007F6")]
		public struct CameraShot
		{
			[Token(Token = "0x4002E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4002E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x4002E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 up;

			[Token(Token = "0x4002E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fieldOfView;

			[Token(Token = "0x6003320")]
			[Address(RVA = "0xB8FC98", Offset = "0xB8FC98", VA = "0xB8FC98")]
			public CameraShot(Vector3 position, Quaternion rotation, Vector3 up, float fieldOfView)
			{
			}
		}

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraShot currentShot;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float movementSpeed;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float rotationSpeed;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float translationResponse;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rotationResponse;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float fovResponse;

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x12A8A8C", Offset = "0x12A8A8C", VA = "0x12A8A8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x12A8BE0", Offset = "0x12A8BE0", VA = "0x12A8BE0")]
		private void LookAt(Vector3 position, Vector3 up)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x12A8CFC", Offset = "0x12A8CFC", VA = "0x12A8CFC")]
		private void UpdateShot()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x12A8F18", Offset = "0x12A8F18", VA = "0x12A8F18")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x12A9410", Offset = "0x12A9410", VA = "0x12A9410")]
		public LookAroundCamera()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class MoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007F7")]
		public class Vector3andSpace
		{
			[Token(Token = "0x4002E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 value;

			[Token(Token = "0x4002E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Space space;

			[Token(Token = "0x6003321")]
			[Address(RVA = "0x12A959C", Offset = "0x12A959C", VA = "0x12A959C")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimescale;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_LastRealTime;

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x12A942C", Offset = "0x12A942C", VA = "0x12A942C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x12A9454", Offset = "0x12A9454", VA = "0x12A9454")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x12A9594", Offset = "0x12A9594", VA = "0x12A9594")]
		public MoveAndRotate()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x20003FB")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x4001AA6")]
		NONE = 0u,
		[Token(Token = "0x4001AA7")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x4001AA8")]
		STAGE = 2u,
		[Token(Token = "0x4001AA9")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x4001AAA")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x20003FC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xA34750", Offset = "0xA34750")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34750", Offset = "0xA34750")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x20007F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA374D8", Offset = "0xA374D8")]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x170006F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003325")]
				[Address(RVA = "0x114EC4C", Offset = "0x114EC4C", VA = "0x114EC4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003327")]
				[Address(RVA = "0x114ECB4", Offset = "0x114ECB4", VA = "0x114ECB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003322")]
			[Address(RVA = "0x114E150", Offset = "0x114E150", VA = "0x114E150")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6003323")]
			[Address(RVA = "0x114EAA0", Offset = "0x114EAA0", VA = "0x114EAA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003324")]
			[Address(RVA = "0x114EAA4", Offset = "0x114EAA4", VA = "0x114EAA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003326")]
			[Address(RVA = "0x114EC54", Offset = "0x114EC54", VA = "0x114EC54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4554C", Offset = "0xA4554C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA4554C", Offset = "0xA4554C")]
		[SerializeField]
		private Transform _stage;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA455BC", Offset = "0xA455BC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA455BC", Offset = "0xA455BC")]
		[SerializeField]
		private Transform _stageTransform;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4562C", Offset = "0xA4562C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA4562C", Offset = "0xA4562C")]
		[SerializeField]
		private Camera _HMDCamera;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4569C", Offset = "0xA4569C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA4569C", Offset = "0xA4569C")]
		[SerializeField]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4570C", Offset = "0xA4570C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA4570C", Offset = "0xA4570C")]
		[SerializeField]
		private bool _disableStandardAssets;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4577C", Offset = "0xA4577C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA4577C", Offset = "0xA4577C")]
		[SerializeField]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA457EC", Offset = "0xA457EC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA457EC", Offset = "0xA457EC")]
		[SerializeField]
		private string[] _excludeBehaviours;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4585C", Offset = "0xA4585C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA4585C", Offset = "0xA4585C")]
		[SerializeField]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x1700023B")]
		public Transform stage
		{
			[Token(Token = "0x6001B80")]
			[Address(RVA = "0x114D7A4", Offset = "0x114D7A4", VA = "0x114D7A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B81")]
			[Address(RVA = "0x114D844", Offset = "0x114D844", VA = "0x114D844")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA636E0", Offset = "0xA636E0")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0x114D94C", Offset = "0x114D94C", VA = "0x114D94C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B83")]
			[Address(RVA = "0x114D950", Offset = "0x114D950", VA = "0x114D950")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x114D954", Offset = "0x114D954", VA = "0x114D954")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700023E")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x114DA34", Offset = "0x114DA34", VA = "0x114DA34")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700023F")]
		public Transform stageTransform
		{
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x114DB14", Offset = "0x114DB14", VA = "0x114DB14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x114DB1C", Offset = "0x114DB1C", VA = "0x114DB1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public Camera HMDCamera
		{
			[Token(Token = "0x6001B88")]
			[Address(RVA = "0x114DB24", Offset = "0x114DB24", VA = "0x114DB24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x114DB2C", Offset = "0x114DB2C", VA = "0x114DB2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0x114DC20", Offset = "0x114DC20", VA = "0x114DC20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x114DC28", Offset = "0x114DC28", VA = "0x114DC28")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0x114DCBC", Offset = "0x114DCBC", VA = "0x114DCBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x114DCC4", Offset = "0x114DCC4", VA = "0x114DCC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x114DCD0", Offset = "0x114DCD0", VA = "0x114DCD0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0x114DCD8", Offset = "0x114DCD8", VA = "0x114DCD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x114DCE0", Offset = "0x114DCE0", VA = "0x114DCE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x114DCE8", Offset = "0x114DCE8", VA = "0x114DCE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0x114DD08", Offset = "0x114DD08", VA = "0x114DD08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x114DD10", Offset = "0x114DD10", VA = "0x114DD10")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public bool isValid
		{
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0x114DD1C", Offset = "0x114DD1C", VA = "0x114DD1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000247")]
		public bool isActive
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x114DE8C", Offset = "0x114DE8C", VA = "0x114DE8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		private bool _isReady
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0x114DE94", Offset = "0x114DE94", VA = "0x114DE94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000249")]
		public SDKRender render
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x114DFD0", Offset = "0x114DFD0", VA = "0x114DFD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x114DFD8", Offset = "0x114DFD8", VA = "0x114DFD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x114E03C", Offset = "0x114E03C", VA = "0x114E03C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x114E0D8", Offset = "0x114E0D8", VA = "0x114E0D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x114E0E0", Offset = "0x114E0E0", VA = "0x114E0E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59550", Offset = "0xA59550")]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x114DFE4", Offset = "0x114DFE4", VA = "0x114DFE4")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x114E17C", Offset = "0x114E17C", VA = "0x114E17C")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x114E188", Offset = "0x114E188", VA = "0x114E188")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x114E230", Offset = "0x114E230", VA = "0x114E230")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x114E44C", Offset = "0x114E44C", VA = "0x114E44C")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x114E53C", Offset = "0x114E53C", VA = "0x114E53C")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x114E4BC", Offset = "0x114E4BC", VA = "0x114E4BC")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x114E50C", Offset = "0x114E50C", VA = "0x114E50C")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x114E2E0", Offset = "0x114E2E0", VA = "0x114E2E0")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x114E060", Offset = "0x114E060", VA = "0x114E060")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x114E904", Offset = "0x114E904", VA = "0x114E904")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public static class SDKBridge
	{
		[Token(Token = "0x20007F9")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4002E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4002E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4002E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x1700024A")]
		public static bool IsActive
		{
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0x114DF18", Offset = "0x114DF18", VA = "0x114DF18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x114EEF8", Offset = "0x114EEF8", VA = "0x114EEF8")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x114EF00", Offset = "0x114EF00", VA = "0x114EF00")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x114EF08", Offset = "0x114EF08", VA = "0x114EF08")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x114EF10", Offset = "0x114EF10", VA = "0x114EF10")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x114EF18", Offset = "0x114EF18", VA = "0x114EF18")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x114EF20", Offset = "0x114EF20", VA = "0x114EF20")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x114EF60", Offset = "0x114EF60", VA = "0x114EF60")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x114EFA0", Offset = "0x114EFA0", VA = "0x114EFA0")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x114EFA8", Offset = "0x114EFA8", VA = "0x114EFA8")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x114EFB0", Offset = "0x114EFB0", VA = "0x114EFB0")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x114EFF0", Offset = "0x114EFF0", VA = "0x114EFF0")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x114F030", Offset = "0x114F030", VA = "0x114F030")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x114F070", Offset = "0x114F070", VA = "0x114F070")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x114F078", Offset = "0x114F078", VA = "0x114F078")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x114F100", Offset = "0x114F100", VA = "0x114F100")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x114F1FC", Offset = "0x114F1FC", VA = "0x114F1FC")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x114F2B8", Offset = "0x114F2B8", VA = "0x114F2B8")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x114F324", Offset = "0x114F324", VA = "0x114F324")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x114F390", Offset = "0x114F390", VA = "0x114F390")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x114E768", Offset = "0x114E768", VA = "0x114E768")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x6001BBC")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBD")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001BBE")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBF")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001BC0")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x114F44C", Offset = "0x114F44C", VA = "0x114F44C")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x114F804", Offset = "0x114F804", VA = "0x114F804")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x114F9EC", Offset = "0x114F9EC", VA = "0x114F9EC")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x114FB04", Offset = "0x114FB04", VA = "0x114FB04")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x114FC54", Offset = "0x114FC54", VA = "0x114FC54")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x114FCEC", Offset = "0x114FCEC", VA = "0x114FCEC")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003FE")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CommandBuffer _clipPlaneCommandBuffer;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer _combineAlphaCommandBuffer;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer _captureTextureCommandBuffer;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer _applyTextureCommandBuffer;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CommandBuffer _optimizedRenderingCommandBuffer;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraEvent _clipPlaneCameraEvent;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CameraEvent _clipPlaneCombineAlphaCameraEvent;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraEvent _captureTextureEvent;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraEvent _applyTextureEvent;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CameraEvent _optimizedRenderingCameraEvent;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _writeMaterial;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LIV _liv;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKResolution _resolution;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Camera _cameraInstance;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private SDKPose _requestedPose;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x1700024B")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0x1151ECC", Offset = "0x1151ECC", VA = "0x1151ECC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024C")]
		private bool interlacedRendering
		{
			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0x1151F24", Offset = "0x1151F24", VA = "0x1151F24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024D")]
		private bool canRenderBackground
		{
			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0x1151F3C", Offset = "0x1151F3C", VA = "0x1151F3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024E")]
		private bool canRenderForeground
		{
			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0x1151FD8", Offset = "0x1151FD8", VA = "0x1151FD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024F")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0x1152088", Offset = "0x1152088", VA = "0x1152088")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000250")]
		public LIV liv
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0x1155934", Offset = "0x1155934", VA = "0x1155934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0x115593C", Offset = "0x115593C", VA = "0x115593C")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x17000252")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0x115594C", Offset = "0x115594C", VA = "0x115594C")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x17000253")]
		public SDKResolution resolution
		{
			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0x115595C", Offset = "0x115595C", VA = "0x115595C")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x17000254")]
		public Camera cameraInstance
		{
			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0x1155964", Offset = "0x1155964", VA = "0x1155964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		public Camera cameraReference
		{
			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0x1154D5C", Offset = "0x1154D5C", VA = "0x1154D5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public Camera hmdCamera
		{
			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0x115596C", Offset = "0x115596C", VA = "0x115596C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public Transform stage
		{
			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0x1155988", Offset = "0x1155988", VA = "0x1155988")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		public Transform stageTransform
		{
			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0x11559A0", Offset = "0x11559A0", VA = "0x11559A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0x11559BC", Offset = "0x11559BC", VA = "0x11559BC")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700025A")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0x1154110", Offset = "0x1154110", VA = "0x1154110")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700025B")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x11541D0", Offset = "0x11541D0", VA = "0x11541D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025C")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0x1154760", Offset = "0x1154760", VA = "0x1154760")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025D")]
		public bool canSetPose
		{
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0x1155AA4", Offset = "0x1155AA4", VA = "0x1155AA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x1151CF4", Offset = "0x1151CF4", VA = "0x1151CF4")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x1151E20", Offset = "0x1151E20", VA = "0x1151E20")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x114E568", Offset = "0x114E568", VA = "0x114E568")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x114EB78", Offset = "0x114EB78", VA = "0x114EB78")]
		public void Render()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x1152D68", Offset = "0x1152D68", VA = "0x1152D68")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x1153050", Offset = "0x1153050", VA = "0x1153050")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x11539F0", Offset = "0x11539F0", VA = "0x11539F0")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x1152110", Offset = "0x1152110", VA = "0x1152110")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x115569C", Offset = "0x115569C", VA = "0x115569C")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x114E6B0", Offset = "0x114E6B0", VA = "0x114E6B0", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x1155AC4", Offset = "0x1155AC4", VA = "0x1155AC4")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x1155F54", Offset = "0x1155F54", VA = "0x1155F54")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x1156148", Offset = "0x1156148", VA = "0x1156148")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x11561C4", Offset = "0x11561C4", VA = "0x11561C4")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x115581C", Offset = "0x115581C", VA = "0x115581C")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x1152700", Offset = "0x1152700", VA = "0x1152700")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x1152768", Offset = "0x1152768", VA = "0x1152768")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x1152CF8", Offset = "0x1152CF8", VA = "0x1152CF8")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1153F04", Offset = "0x1153F04", VA = "0x1153F04")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x11544E4", Offset = "0x11544E4", VA = "0x11544E4")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x1154658", Offset = "0x1154658", VA = "0x1154658")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x1154B94", Offset = "0x1154B94", VA = "0x1154B94")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x1154C04", Offset = "0x1154C04", VA = "0x1154C04")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x115639C", Offset = "0x115639C", VA = "0x115639C")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x11565A0", Offset = "0x11565A0", VA = "0x11565A0")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x1156638", Offset = "0x1156638", VA = "0x1156638")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x11566D0", Offset = "0x11566D0", VA = "0x11566D0")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x1152A38", Offset = "0x1152A38", VA = "0x1152A38")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x1154554", Offset = "0x1154554", VA = "0x1154554")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}
	}
	[Token(Token = "0x20003FF")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4001AED")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4001AEE")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x4001AEF")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x4001AF0")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x4001AF1")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x4001AF2")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x4001AF3")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x4001AF4")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x4001AF5")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4001AF6")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x4001AF7")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x115444C", Offset = "0x115444C", VA = "0x115444C")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x1154714", Offset = "0x1154714", VA = "0x1154714")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x1154B48", Offset = "0x1154B48", VA = "0x1154B48")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x1154C74", Offset = "0x1154C74", VA = "0x1154C74")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x1154498", Offset = "0x1154498", VA = "0x1154498")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x11546C8", Offset = "0x11546C8", VA = "0x11546C8")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public struct SDKConstants
	{
		[Token(Token = "0x4001AF8")]
		public const string SDK_ID = "KHCXHAHHJACAMQ6LMRPTZCHIT23MOU6A";

		[Token(Token = "0x4001AF9")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x4001AFA")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x2000401")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4001AFC")]
		NONE = 0,
		[Token(Token = "0x4001AFD")]
		GAME = 63
	}
	[Token(Token = "0x2000402")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x4001AFF")]
		NONE = 0uL,
		[Token(Token = "0x4001B00")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x4001B01")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x4001B02")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x4001B03")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x4001B04")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x4001B05")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4001B06")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x4001B07")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x4001B08")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x4001B09")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x4001B0A")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x2000403")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4001B0C")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001B0D")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x4001B0E")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x4001B0F")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x2000404")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x4001B11")]
		UNDEFINED,
		[Token(Token = "0x4001B12")]
		COLOR_BUFFER
	}
	[Token(Token = "0x2000405")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x4001B14")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001B15")]
		ARGB32 = 10u
	}
	[Token(Token = "0x2000406")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x4001B17")]
		UNDEFINED,
		[Token(Token = "0x4001B18")]
		RAW,
		[Token(Token = "0x4001B19")]
		DIRECTX,
		[Token(Token = "0x4001B1A")]
		OPENGL,
		[Token(Token = "0x4001B1B")]
		VULKAN,
		[Token(Token = "0x4001B1C")]
		METAL
	}
	[Token(Token = "0x2000407")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x4001B1E")]
		UNDEFINED,
		[Token(Token = "0x4001B1F")]
		LINEAR,
		[Token(Token = "0x4001B20")]
		SRGB
	}
	[Token(Token = "0x2000408")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x4001B22")]
		UNDEFINED,
		[Token(Token = "0x4001B23")]
		FORWARD,
		[Token(Token = "0x4001B24")]
		DEFERRED,
		[Token(Token = "0x4001B25")]
		VERTEX_LIT,
		[Token(Token = "0x4001B26")]
		UNIVERSAL,
		[Token(Token = "0x4001B27")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x2000409")]
	public struct SDKResolution
	{
		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x1700025E")]
		public static SDKResolution zero
		{
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0x114FEDC", Offset = "0x114FEDC", VA = "0x114FEDC")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xB8E710", Offset = "0xB8E710", VA = "0xB8E710", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200040A")]
	public struct SDKVector3
	{
		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x1700025F")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0x115014C", Offset = "0x115014C", VA = "0x115014C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000260")]
		public static SDKVector3 one
		{
			[Token(Token = "0x6001C02")]
			[Address(RVA = "0x1156F20", Offset = "0x1156F20", VA = "0x1156F20")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000261")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x6001C03")]
			[Address(RVA = "0x11573DC", Offset = "0x11573DC", VA = "0x11573DC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000262")]
		public static SDKVector3 up
		{
			[Token(Token = "0x6001C04")]
			[Address(RVA = "0x1151384", Offset = "0x1151384", VA = "0x1151384")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000263")]
		public static SDKVector3 right
		{
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0x11573EC", Offset = "0x11573EC", VA = "0x11573EC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x115711C", Offset = "0x115711C", VA = "0x115711C")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x115136C", Offset = "0x115136C", VA = "0x115136C")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x11573FC", Offset = "0x11573FC", VA = "0x11573FC")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x115740C", Offset = "0x115740C", VA = "0x115740C")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x115741C", Offset = "0x115741C", VA = "0x115741C")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x115742C", Offset = "0x115742C", VA = "0x115742C")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xB8E730", Offset = "0xB8E730", VA = "0xB8E730", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200040B")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x17000264")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x115015C", Offset = "0x115015C", VA = "0x115015C")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x11518F0", Offset = "0x11518F0", VA = "0x11518F0")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x1151920", Offset = "0x1151920", VA = "0x1151920")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x1151924", Offset = "0x1151924", VA = "0x1151924")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x1151A38", Offset = "0x1151A38", VA = "0x1151A38")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x1151AAC", Offset = "0x1151AAC", VA = "0x1151AAC")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xB8E708", Offset = "0xB8E708", VA = "0xB8E708", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200040C")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x17000265")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x6001C14")]
			[Address(RVA = "0x114FF18", Offset = "0x114FF18", VA = "0x114FF18")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x1150884", Offset = "0x1150884", VA = "0x1150884")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x11508C8", Offset = "0x11508C8", VA = "0x11508C8")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x115090C", Offset = "0x115090C", VA = "0x115090C")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x1150A14", Offset = "0x1150A14", VA = "0x1150A14")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1150AC0", Offset = "0x1150AC0", VA = "0x1150AC0")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1150B18", Offset = "0x1150B18", VA = "0x1150B18")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x1150B54", Offset = "0x1150B54", VA = "0x1150B54")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1150BE8", Offset = "0x1150BE8", VA = "0x1150BE8")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x1150C14", Offset = "0x1150C14", VA = "0x1150C14")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xB8E6E0", Offset = "0xB8E6E0", VA = "0xB8E6E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200040D")]
	public struct SDKPlane
	{
		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x17000266")]
		public static SDKPlane empty
		{
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x1151370", Offset = "0x1151370", VA = "0x1151370")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x115130C", Offset = "0x115130C", VA = "0x115130C")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xB8E6F0", Offset = "0xB8E6F0", VA = "0xB8E6F0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200040E")]
	public struct SDKPriority
	{
		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x17000267")]
		public static SDKPriority empty
		{
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0x115055C", Offset = "0x115055C", VA = "0x115055C")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xB8E700", Offset = "0xB8E700", VA = "0xB8E700", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200040F")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x17000268")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x114E6F4", Offset = "0x114E6F4", VA = "0x114E6F4")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xB8E69C", Offset = "0xB8E69C", VA = "0xB8E69C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000410")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x17000269")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x6001C26")]
			[Address(RVA = "0x114F6F4", Offset = "0x114F6F4", VA = "0x114F6F4")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xB8E6B4", Offset = "0xB8E6B4", VA = "0xB8E6B4")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xB8E6C4", Offset = "0xB8E6C4", VA = "0xB8E6C4")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xB8E6D8", Offset = "0xB8E6D8", VA = "0xB8E6D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000411")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x1700026A")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0x11511A4", Offset = "0x11511A4", VA = "0x11511A4")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xB8E6E8", Offset = "0xB8E6E8", VA = "0xB8E6E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000412")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x1700026B")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0x1151204", Offset = "0x1151204", VA = "0x1151204")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xB8E720", Offset = "0xB8E720", VA = "0xB8E720", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000413")]
	public struct SDKTexture
	{
		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x1700026C")]
		public static SDKTexture empty
		{
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0x114F99C", Offset = "0x114F99C", VA = "0x114F99C")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xB8E718", Offset = "0xB8E718", VA = "0xB8E718", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000414")]
	public struct SDKTransform
	{
		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x1700026D")]
		public static SDKTransform empty
		{
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x1150548", Offset = "0x1150548", VA = "0x1150548")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xB8E728", Offset = "0xB8E728", VA = "0xB8E728", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000415")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x1700026E")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x114FEE4", Offset = "0x114FEE4", VA = "0x114FEE4")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xB8E6A4", Offset = "0xB8E6A4", VA = "0xB8E6A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000416")]
	public struct SDKControllerState
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x1700026F")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x1150100", Offset = "0x1150100", VA = "0x1150100")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xB8E6AC", Offset = "0xB8E6AC", VA = "0xB8E6AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000417")]
	public struct SDKPose
	{
		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x17000270")]
		public static SDKPose empty
		{
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0x11504CC", Offset = "0x11504CC", VA = "0x11504CC")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xB8E6F8", Offset = "0xB8E6F8", VA = "0xB8E6F8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000418")]
	public static class SDKUtils
	{
		[Token(Token = "0x17000271")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x1157020", Offset = "0x1157020", VA = "0x1157020")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x115510C", Offset = "0x115510C", VA = "0x115510C")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x1157008", Offset = "0x1157008", VA = "0x1157008")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x11567CC", Offset = "0x11567CC", VA = "0x11567CC")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x1157050", Offset = "0x1157050", VA = "0x1157050")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x1156768", Offset = "0x1156768", VA = "0x1156768")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x114E8F8", Offset = "0x114E8F8", VA = "0x114E8F8")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x114D938", Offset = "0x114D938", VA = "0x114D938")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x1157070", Offset = "0x1157070", VA = "0x1157070")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x1154DF8", Offset = "0x1154DF8", VA = "0x1154DF8")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x11541F0", Offset = "0x11541F0", VA = "0x11541F0")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x1155E30", Offset = "0x1155E30", VA = "0x1155E30")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x1157150", Offset = "0x1157150", VA = "0x1157150")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x6001C45")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6001C46")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x1156434", Offset = "0x1156434", VA = "0x1156434")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x1155890", Offset = "0x1155890", VA = "0x1155890")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x11528F0", Offset = "0x11528F0", VA = "0x11528F0")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x1153F74", Offset = "0x1153F74", VA = "0x1153F74")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x1151F30", Offset = "0x1151F30", VA = "0x1151F30")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x115477C", Offset = "0x115477C", VA = "0x115477C")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x1154CC0", Offset = "0x1154CC0", VA = "0x1154CC0")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x11548E4", Offset = "0x11548E4", VA = "0x11548E4")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x2000419")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x1597EF0", Offset = "0x1597EF0", VA = "0x1597EF0")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x15980B0", Offset = "0x15980B0", VA = "0x15980B0")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x15987B8", Offset = "0x15987B8", VA = "0x15987B8")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x15988A0", Offset = "0x15988A0", VA = "0x15988A0")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x15988E8", Offset = "0x15988E8", VA = "0x15988E8")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x1598800", Offset = "0x1598800", VA = "0x1598800")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x1598C2C", Offset = "0x1598C2C", VA = "0x1598C2C")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _NormalString;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TermsPopup", RVA = "0xA458CC", Offset = "0xA458CC")]
		public string _StringWithTermPopup;

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x1598C34", Offset = "0x1598C34", VA = "0x1598C34")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x1598F20", Offset = "0x1598F20", VA = "0x1598F20")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x1598F28", Offset = "0x1598F28", VA = "0x1598F28", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x1598FD8", Offset = "0x1598FD8", VA = "0x1598FD8")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string OriginalText;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string TranslatedText;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsTranslating;

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x13AEFD0", Offset = "0x13AEFD0", VA = "0x13AEFD0")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x13AF5CC", Offset = "0x13AF5CC", VA = "0x13AF5CC")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x13AF7E0", Offset = "0x13AF7E0", VA = "0x13AF7E0")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x13AF874", Offset = "0x13AF874", VA = "0x13AF874")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x13AF690", Offset = "0x13AF690", VA = "0x13AF690")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x13AFA8C", Offset = "0x13AFA8C", VA = "0x13AFA8C")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x13AFC7C", Offset = "0x13AFC7C", VA = "0x13AFC7C")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x13AFC84", Offset = "0x13AFC84", VA = "0x13AFC84")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x13AFC8C", Offset = "0x13AFC8C", VA = "0x13AFC8C")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x13AFC94", Offset = "0x13AFC94", VA = "0x13AFC94")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x13AFD04", Offset = "0x13AFD04", VA = "0x13AFD04")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x13AFD9C", Offset = "0x13AFD9C", VA = "0x13AFD9C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x13AFE00", Offset = "0x13AFE00", VA = "0x13AFE00", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x13AFE08", Offset = "0x13AFE08", VA = "0x13AFE08")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x13B7BF4", Offset = "0x13B7BF4", VA = "0x13B7BF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x13B7C4C", Offset = "0x13B7C4C", VA = "0x13B7C4C")]
		private void test()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x13B7CFC", Offset = "0x13B7CFC", VA = "0x13B7CFC")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public static class PersistentStorage
	{
		[Token(Token = "0x20007FA")]
		public enum eFileType
		{
			[Token(Token = "0x4002E80")]
			Raw,
			[Token(Token = "0x4002E81")]
			Persistent,
			[Token(Token = "0x4002E82")]
			Temporal,
			[Token(Token = "0x4002E83")]
			Streaming
		}

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x13AC524", Offset = "0x13AC524", VA = "0x13AC524")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x13AC5D4", Offset = "0x13AC5D4", VA = "0x13AC5D4")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x13AC684", Offset = "0x13AC684", VA = "0x13AC684")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x13AC72C", Offset = "0x13AC72C", VA = "0x13AC72C")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x13AC7D4", Offset = "0x13AC7D4", VA = "0x13AC7D4")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x13AC86C", Offset = "0x13AC86C", VA = "0x13AC86C")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x13AC904", Offset = "0x13AC904", VA = "0x13AC904")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x13AC9CC", Offset = "0x13AC9CC", VA = "0x13AC9CC")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x13ACA8C", Offset = "0x13ACA8C", VA = "0x13ACA8C")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x13ACB4C", Offset = "0x13ACB4C", VA = "0x13ACB4C")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000421")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x15A2F4C", Offset = "0x15A2F4C", VA = "0x15A2F4C", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x15A320C", Offset = "0x15A320C", VA = "0x15A320C", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x15A3440", Offset = "0x15A3440", VA = "0x15A3440", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x15A363C", Offset = "0x15A363C", VA = "0x15A363C", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x15A3644", Offset = "0x15A3644", VA = "0x15A3644", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x15A3650", Offset = "0x15A3650", VA = "0x15A3650", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x15A3658", Offset = "0x15A3658", VA = "0x15A3658")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x15A3704", Offset = "0x15A3704", VA = "0x15A3704", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x15A396C", Offset = "0x15A396C", VA = "0x15A396C", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x15A3BC0", Offset = "0x15A3BC0", VA = "0x15A3BC0", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x15A3DFC", Offset = "0x15A3DFC", VA = "0x15A3DFC", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x15A4038", Offset = "0x15A4038", VA = "0x15A4038")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x15A4040", Offset = "0x15A4040", VA = "0x15A4040")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x15979F8", Offset = "0x15979F8", VA = "0x15979F8", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x1597DE0", Offset = "0x1597DE0", VA = "0x1597DE0", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x1597E44", Offset = "0x1597E44", VA = "0x1597E44", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x1597EE8", Offset = "0x1597EE8", VA = "0x1597EE8")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x13B6344", Offset = "0x13B6344", VA = "0x13B6344")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x13B6374", Offset = "0x13B6374", VA = "0x13B6374")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x13B655C", Offset = "0x13B655C", VA = "0x13B655C")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x13B6840", Offset = "0x13B6840", VA = "0x13B6840")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x13B6668", Offset = "0x13B6668", VA = "0x13B6668")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x13B6B84", Offset = "0x13B6B84", VA = "0x13B6B84")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000425")]
	public class EventCallback
	{
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x159865C", Offset = "0x159865C", VA = "0x159865C")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x15986C4", Offset = "0x15986C4", VA = "0x15986C4")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x1598758", Offset = "0x1598758", VA = "0x1598758")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public enum ePluralType
	{
		[Token(Token = "0x4001B93")]
		Zero,
		[Token(Token = "0x4001B94")]
		One,
		[Token(Token = "0x4001B95")]
		Two,
		[Token(Token = "0x4001B96")]
		Few,
		[Token(Token = "0x4001B97")]
		Many,
		[Token(Token = "0x4001B98")]
		Plural
	}
	[Token(Token = "0x2000427")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x20007FB")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x4002E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x4002E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x4002E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x4002E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1598FE0", Offset = "0x1598FE0", VA = "0x1598FE0")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x1599370", Offset = "0x1599370", VA = "0x1599370")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x1599218", Offset = "0x1599218", VA = "0x1599218")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x1599800", Offset = "0x1599800", VA = "0x1599800")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x159992C", Offset = "0x159992C", VA = "0x159992C")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x15999F4", Offset = "0x15999F4", VA = "0x15999F4")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x1599B34", Offset = "0x1599B34", VA = "0x1599B34")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x1599CA4", Offset = "0x1599CA4", VA = "0x1599CA4")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x1599F24", Offset = "0x1599F24", VA = "0x1599F24")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x159A0B0", Offset = "0x159A0B0", VA = "0x159A0B0")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x159A21C", Offset = "0x159A21C", VA = "0x159A21C")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x159A3A0", Offset = "0x159A3A0", VA = "0x159A3A0")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x159A524", Offset = "0x159A524", VA = "0x159A524")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x159AC3C", Offset = "0x159AC3C", VA = "0x159AC3C")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x159AC24", Offset = "0x159AC24", VA = "0x159AC24")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000428")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x20007FC")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x20007FD")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x20007FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA374E8", Offset = "0xA374E8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public fnOnTranslated OnTranslationReady;

			[Token(Token = "0x4002E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x4002E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x4002E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string LanguageCodeTo;

			[Token(Token = "0x6003330")]
			[Address(RVA = "0x159F4FC", Offset = "0x159F4FC", VA = "0x159F4FC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6003331")]
			[Address(RVA = "0x15A2330", Offset = "0x15A2330", VA = "0x15A2330")]
			internal void <Translate>b__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x20007FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA374F8", Offset = "0xA374F8")]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170006F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003335")]
				[Address(RVA = "0x15A259C", Offset = "0x15A259C", VA = "0x15A259C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003337")]
				[Address(RVA = "0x15A2604", Offset = "0x15A2604", VA = "0x15A2604", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003332")]
			[Address(RVA = "0x15A0768", Offset = "0x15A0768", VA = "0x15A0768")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6003333")]
			[Address(RVA = "0x15A2410", Offset = "0x15A2410", VA = "0x15A2410", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003334")]
			[Address(RVA = "0x15A2414", Offset = "0x15A2414", VA = "0x15A2414", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003336")]
			[Address(RVA = "0x15A25A4", Offset = "0x15A25A4", VA = "0x15A25A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x159F098", Offset = "0x159F098", VA = "0x159F098")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x159F310", Offset = "0x159F310", VA = "0x159F310")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x159FC28", Offset = "0x159FC28", VA = "0x159FC28")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x159FB94", Offset = "0x159FB94", VA = "0x159FB94")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x15A01A4", Offset = "0x15A01A4", VA = "0x15A01A4")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x15A022C", Offset = "0x15A022C", VA = "0x15A022C")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x15A00DC", Offset = "0x15A00DC", VA = "0x15A00DC")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x15A0708", Offset = "0x15A0708", VA = "0x15A0708")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA595B4", Offset = "0xA595B4")]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x15A0794", Offset = "0x15A0794", VA = "0x15A0794")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x15A0E08", Offset = "0x15A0E08", VA = "0x15A0E08")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x15A0EBC", Offset = "0x15A0EBC", VA = "0x15A0EBC")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x159F9C4", Offset = "0x159F9C4", VA = "0x159F9C4")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x15A1034", Offset = "0x15A1034", VA = "0x15A1034")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x159FD64", Offset = "0x159FD64", VA = "0x159FD64")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x15A19AC", Offset = "0x15A19AC", VA = "0x15A19AC")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x15A0BDC", Offset = "0x15A0BDC", VA = "0x15A0BDC")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x15A12A0", Offset = "0x15A12A0", VA = "0x15A12A0")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x15A1454", Offset = "0x15A1454", VA = "0x15A1454")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x15A1330", Offset = "0x15A1330", VA = "0x15A1330")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x15A1A98", Offset = "0x15A1A98", VA = "0x15A1A98")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x15A0D68", Offset = "0x15A0D68", VA = "0x15A0D68")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x15A1538", Offset = "0x15A1538", VA = "0x15A1538")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x159FFCC", Offset = "0x159FFCC", VA = "0x159FFCC")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x15A1C10", Offset = "0x15A1C10", VA = "0x15A1C10")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x15A1E54", Offset = "0x15A1E54", VA = "0x15A1E54")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x15A2198", Offset = "0x15A2198", VA = "0x15A2198")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x15A0650", Offset = "0x15A0650", VA = "0x15A0650")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000429")]
	public struct TranslationQuery
	{
		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x200042A")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x2000800")]
		public enum eJobState
		{
			[Token(Token = "0x4002E8F")]
			Running,
			[Token(Token = "0x4002E90")]
			Succeeded,
			[Token(Token = "0x4002E91")]
			Failed
		}

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x13B7D04", Offset = "0x13B7D04", VA = "0x13B7D04", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x13B7D0C", Offset = "0x13B7D0C", VA = "0x13B7D0C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x13B7D10", Offset = "0x13B7D10", VA = "0x13B7D10")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x13B9464", Offset = "0x13B9464", VA = "0x13B9464", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x13B7DB8", Offset = "0x13B7DB8", VA = "0x13B7DB8")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x13B7D18", Offset = "0x13B7D18", VA = "0x13B7D18")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x13B7DC0", Offset = "0x13B7DC0", VA = "0x13B7DC0")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x13B7EA4", Offset = "0x13B7EA4", VA = "0x13B7EA4", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x13B7F48", Offset = "0x13B7F48", VA = "0x13B7F48")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x13B8054", Offset = "0x13B8054", VA = "0x13B8054")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x13B822C", Offset = "0x13B822C", VA = "0x13B822C", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x13B83D8", Offset = "0x13B83D8", VA = "0x13B83D8", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x13B80D8", Offset = "0x13B80D8", VA = "0x13B80D8")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x13B8424", Offset = "0x13B8424", VA = "0x13B8424", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x13B84B4", Offset = "0x13B84B4", VA = "0x13B84B4")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Serializable]
		[Token(Token = "0x2000801")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37508", Offset = "0xA37508")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<KeyValuePair<string, string>> <>9__8_0;

			[Token(Token = "0x4002E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static MatchEvaluator <>9__12_0;

			[Token(Token = "0x4002E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static MatchEvaluator <>9__12_1;

			[Token(Token = "0x6003339")]
			[Address(RVA = "0x13B92A0", Offset = "0x13B92A0", VA = "0x13B92A0")]
			public <>c()
			{
			}

			[Token(Token = "0x600333A")]
			[Address(RVA = "0x13B92A8", Offset = "0x13B92A8", VA = "0x13B92A8")]
			internal int <FindAllQueries>b__8_0(KeyValuePair<string, string> a, KeyValuePair<string, string> b)
			{
				return default(int);
			}

			[Token(Token = "0x600333B")]
			[Address(RVA = "0x13B9308", Offset = "0x13B9308", VA = "0x13B9308")]
			internal string <ParseTranslationResult>b__12_0(Match match)
			{
				return null;
			}

			[Token(Token = "0x600333C")]
			[Address(RVA = "0x13B93B8", Offset = "0x13B93B8", VA = "0x13B93B8")]
			internal string <ParseTranslationResult>b__12_1(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x13B85AC", Offset = "0x13B85AC", VA = "0x13B85AC")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x13B85F0", Offset = "0x13B85F0", VA = "0x13B85F0")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x13B88A8", Offset = "0x13B88A8", VA = "0x13B88A8")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x13B8BD4", Offset = "0x13B8BD4", VA = "0x13B8BD4", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x13B8C78", Offset = "0x13B8C78", VA = "0x13B8C78")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x13B8D90", Offset = "0x13B8D90", VA = "0x13B8D90")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x2000430")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x4001BB8")]
		DISABLED = 1,
		[Token(Token = "0x4001BB9")]
		KEEP_LOADED = 2,
		[Token(Token = "0x4001BBA")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x2000431")]
	public class LanguageData
	{
		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x15A4EF0", Offset = "0x15A4EF0", VA = "0x15A4EF0")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x15A4F00", Offset = "0x15A4F00", VA = "0x15A4F00")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x15A4F1C", Offset = "0x15A4F1C", VA = "0x15A4F1C")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x15A4F2C", Offset = "0x15A4F2C", VA = "0x15A4F2C")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x15A4F3C", Offset = "0x15A4F3C", VA = "0x15A4F3C")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x15A4F58", Offset = "0x15A4F58", VA = "0x15A4F58")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x15A4F74", Offset = "0x15A4F74", VA = "0x15A4F74")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA347C0", Offset = "0xA347C0")]
	[ExecuteInEditMode]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x2000802")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x17000272")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x15A4F7C", Offset = "0x15A4F7C", VA = "0x15A4F7C", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x15A4F84", Offset = "0x15A4F84", VA = "0x15A4F84", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0x15A4F8C", Offset = "0x15A4F8C", VA = "0x15A4F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59618", Offset = "0xA59618")]
			add
			{
			}
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x15A5030", Offset = "0x15A5030", VA = "0x15A5030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59628", Offset = "0xA59628")]
			remove
			{
			}
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x15A50D4", Offset = "0x15A50D4", VA = "0x15A50D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x15A517C", Offset = "0x15A517C", VA = "0x15A517C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x15A5200", Offset = "0x15A5200", VA = "0x15A5200")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x15A52F4", Offset = "0x15A52F4", VA = "0x15A52F4", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x15A5300", Offset = "0x15A5300", VA = "0x15A5300", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x15A5890", Offset = "0x15A5890", VA = "0x15A5890")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x2000433")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA3480C", Offset = "0xA3480C")]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x17000273")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0x15A5E9C", Offset = "0x15A5E9C", VA = "0x15A5E9C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0x15A5EA4", Offset = "0x15A5EA4", VA = "0x15A5EA4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x15A5EAC", Offset = "0x15A5EAC", VA = "0x15A5EAC")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public interface ILanguageSource
	{
		[Token(Token = "0x17000274")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x6001CE5")]
			get;
			[Token(Token = "0x6001CE6")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x2000435")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x2000803")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x4002E97")]
			Empty,
			[Token(Token = "0x4002E98")]
			Fallback,
			[Token(Token = "0x4002E99")]
			ShowWarning,
			[Token(Token = "0x4002E9A")]
			ShowTerm
		}

		[Token(Token = "0x2000804")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x4002E9C")]
			Never,
			[Token(Token = "0x4002E9D")]
			OnlyInDevice,
			[Token(Token = "0x4002E9E")]
			EditorAndDevice
		}

		[Token(Token = "0x2000805")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x4002EA0")]
			Always,
			[Token(Token = "0x4002EA1")]
			Never,
			[Token(Token = "0x4002EA2")]
			Daily,
			[Token(Token = "0x4002EA3")]
			Weekly,
			[Token(Token = "0x4002EA4")]
			Monthly,
			[Token(Token = "0x4002EA5")]
			OnlyOnce,
			[Token(Token = "0x4002EA6")]
			EveryOtherDay
		}

		[Token(Token = "0x2000806")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x4002EA8")]
			Manual,
			[Token(Token = "0x4002EA9")]
			OnSceneLoaded,
			[Token(Token = "0x4002EAA")]
			AsSoonAsDownloaded
		}

		[Serializable]
		[Token(Token = "0x2000807")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37518", Offset = "0xA37518")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__39_0;

			[Token(Token = "0x4002EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__39_1;

			[Token(Token = "0x4002EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__39_2;

			[Token(Token = "0x4002EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__39_3;

			[Token(Token = "0x4002EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Comparison<TermData> <>9__43_0;

			[Token(Token = "0x4002EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Comparison<TermData> <>9__47_0;

			[Token(Token = "0x6003342")]
			[Address(RVA = "0x15AD74C", Offset = "0x15AD74C", VA = "0x15AD74C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003343")]
			[Address(RVA = "0x15AD754", Offset = "0x15AD754", VA = "0x15AD754")]
			internal bool <UpdateAssetDictionary>b__39_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6003344")]
			[Address(RVA = "0x15AD7C0", Offset = "0x15AD7C0", VA = "0x15AD7C0")]
			internal string <UpdateAssetDictionary>b__39_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6003345")]
			[Address(RVA = "0x15AD7DC", Offset = "0x15AD7DC", VA = "0x15AD7DC")]
			internal string <UpdateAssetDictionary>b__39_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6003346")]
			[Address(RVA = "0x15AD888", Offset = "0x15AD888", VA = "0x15AD888")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__39_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6003347")]
			[Address(RVA = "0x15AD8D8", Offset = "0x15AD8D8", VA = "0x15AD8D8")]
			internal int <Export_I2CSV>b__43_0(TermData a, TermData b)
			{
				return default(int);
			}

			[Token(Token = "0x6003348")]
			[Address(RVA = "0x15AD900", Offset = "0x15AD900", VA = "0x15AD900")]
			internal int <Export_CSV>b__47_0(TermData a, TermData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37528", Offset = "0xA37528")]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x4002EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x4002EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170006F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600334C")]
				[Address(RVA = "0x15ADBC8", Offset = "0x15ADBC8", VA = "0x15ADBC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600334E")]
				[Address(RVA = "0x15ADC30", Offset = "0x15ADC30", VA = "0x15ADC30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003349")]
			[Address(RVA = "0x15AB488", Offset = "0x15AB488", VA = "0x15AB488")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x600334A")]
			[Address(RVA = "0x15AD928", Offset = "0x15AD928", VA = "0x15AD928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600334B")]
			[Address(RVA = "0x15AD92C", Offset = "0x15AD92C", VA = "0x15AD92C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600334D")]
			[Address(RVA = "0x15ADBD0", Offset = "0x15ADBD0", VA = "0x15ADBD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x17000275")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0x15A5F10", Offset = "0x15A5F10", VA = "0x15A5F10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000020")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0x15A57EC", Offset = "0x15A57EC", VA = "0x15A57EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59638", Offset = "0xA59638")]
			add
			{
			}
			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x15A5F94", Offset = "0x15A5F94", VA = "0x15A5F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59648", Offset = "0xA59648")]
			remove
			{
			}
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x15A50FC", Offset = "0x15A50FC", VA = "0x15A50FC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x15A519C", Offset = "0x15A519C", VA = "0x15A519C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x15A69B8", Offset = "0x15A69B8", VA = "0x15A69B8")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x15A6ED8", Offset = "0x15A6ED8", VA = "0x15A6ED8")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x15A6FEC", Offset = "0x15A6FEC", VA = "0x15A6FEC")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x15A708C", Offset = "0x15A708C", VA = "0x15A708C")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x15A7094", Offset = "0x15A7094", VA = "0x15A7094")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x15A652C", Offset = "0x15A652C", VA = "0x15A652C")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x15A7098", Offset = "0x15A7098", VA = "0x15A7098")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x15A715C", Offset = "0x15A715C", VA = "0x15A715C")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x15A71C4", Offset = "0x15A71C4", VA = "0x15A71C4")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x15A7264", Offset = "0x15A7264", VA = "0x15A7264")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x15A7858", Offset = "0x15A7858", VA = "0x15A7858")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x15A7AD0", Offset = "0x15A7AD0", VA = "0x15A7AD0")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x15A7BA4", Offset = "0x15A7BA4", VA = "0x15A7BA4")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x15A80F0", Offset = "0x15A80F0", VA = "0x15A80F0")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x15A8904", Offset = "0x15A8904", VA = "0x15A8904")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x15A87D4", Offset = "0x15A87D4", VA = "0x15A87D4")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x15A8B90", Offset = "0x15A8B90", VA = "0x15A8B90")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x15A8CE0", Offset = "0x15A8CE0", VA = "0x15A8CE0")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x15A8E64", Offset = "0x15A8E64", VA = "0x15A8E64")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x15A921C", Offset = "0x15A921C", VA = "0x15A921C")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x15A9CD4", Offset = "0x15A9CD4", VA = "0x15A9CD4")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x15A9268", Offset = "0x15A9268", VA = "0x15A9268")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x15A9D1C", Offset = "0x15A9D1C", VA = "0x15A9D1C")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x15AA120", Offset = "0x15AA120", VA = "0x15AA120")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x15AA3B4", Offset = "0x15AA3B4", VA = "0x15AA3B4")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x15AA5D4", Offset = "0x15AA5D4", VA = "0x15AA5D4")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x15AA780", Offset = "0x15AA780", VA = "0x15AA780")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x15AAB68", Offset = "0x15AAB68", VA = "0x15AAB68")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x15AB184", Offset = "0x15AB184", VA = "0x15AB184")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x15AA9B8", Offset = "0x15AA9B8", VA = "0x15AA9B8")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x15AB404", Offset = "0x15AB404", VA = "0x15AB404")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59658", Offset = "0xA59658")]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x15AB4B4", Offset = "0x15AB4B4", VA = "0x15AB4B4")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x15AB558", Offset = "0x15AB558", VA = "0x15AB558")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x15AB69C", Offset = "0x15AB69C", VA = "0x15AB69C")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x15AB7E8", Offset = "0x15AB7E8", VA = "0x15AB7E8")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x15AABF8", Offset = "0x15AABF8", VA = "0x15AABF8")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x15A6B18", Offset = "0x15A6B18", VA = "0x15A6B18")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x15ABA68", Offset = "0x15ABA68", VA = "0x15ABA68")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x15ABB08", Offset = "0x15ABB08", VA = "0x15ABB08")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x15A9DC0", Offset = "0x15A9DC0", VA = "0x15A9DC0")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x15AB890", Offset = "0x15AB890", VA = "0x15AB890")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x15ABBB8", Offset = "0x15ABBB8", VA = "0x15ABBB8")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x15ABC54", Offset = "0x15ABC54", VA = "0x15ABC54")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x15ABCF4", Offset = "0x15ABCF4", VA = "0x15ABCF4")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x15ABD78", Offset = "0x15ABD78", VA = "0x15ABD78")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x15ABEF0", Offset = "0x15ABEF0", VA = "0x15ABEF0")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x15AC1E0", Offset = "0x15AC1E0", VA = "0x15AC1E0")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x15AC30C", Offset = "0x15AC30C", VA = "0x15AC30C")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x15AC4A0", Offset = "0x15AC4A0", VA = "0x15AC4A0")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x15AC54C", Offset = "0x15AC54C", VA = "0x15AC54C")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x15AC600", Offset = "0x15AC600", VA = "0x15AC600")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x15AC610", Offset = "0x15AC610", VA = "0x15AC610")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x15AC7D8", Offset = "0x15AC7D8", VA = "0x15AC7D8")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x15ACB80", Offset = "0x15ACB80", VA = "0x15ACB80")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x15AC960", Offset = "0x15AC960", VA = "0x15AC960")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x15AA294", Offset = "0x15AA294", VA = "0x15AA294")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x15AA1F0", Offset = "0x15AA1F0", VA = "0x15AA1F0")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x15A9044", Offset = "0x15A9044", VA = "0x15A9044")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x15ACD1C", Offset = "0x15ACD1C", VA = "0x15ACD1C")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x15ACC14", Offset = "0x15ACC14", VA = "0x15ACC14")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x15ACE00", Offset = "0x15ACE00", VA = "0x15ACE00")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x15A624C", Offset = "0x15A624C", VA = "0x15A624C")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x15ACF34", Offset = "0x15ACF34", VA = "0x15ACF34")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x15ACFE0", Offset = "0x15ACFE0", VA = "0x15ACFE0")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x15A7E30", Offset = "0x15A7E30", VA = "0x15A7E30")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x15AD1E8", Offset = "0x15AD1E8", VA = "0x15AD1E8")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x15A6D04", Offset = "0x15A6D04", VA = "0x15A6D04")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x15AD380", Offset = "0x15AD380", VA = "0x15AD380")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x15AD3A0", Offset = "0x15AD3A0", VA = "0x15AD3A0")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x15AD1F4", Offset = "0x15AD1F4", VA = "0x15AD1F4")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x15AD55C", Offset = "0x15AD55C", VA = "0x15AD55C")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x15A9F80", Offset = "0x15A9F80", VA = "0x15A9F80")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x15A55FC", Offset = "0x15A55FC", VA = "0x15A55FC")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x4001BF1")]
		None,
		[Token(Token = "0x4001BF2")]
		Replace,
		[Token(Token = "0x4001BF3")]
		Merge,
		[Token(Token = "0x4001BF4")]
		AddNewTerms
	}
	[Token(Token = "0x2000437")]
	public class LocalizationReader
	{
		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x13A5858", Offset = "0x13A5858", VA = "0x13A5858")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x13A5AA8", Offset = "0x13A5AA8", VA = "0x13A5AA8")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x13A5E40", Offset = "0x13A5E40", VA = "0x13A5E40")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x13A5FC4", Offset = "0x13A5FC4", VA = "0x13A5FC4")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x13A6098", Offset = "0x13A6098", VA = "0x13A6098")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x13A6278", Offset = "0x13A6278", VA = "0x13A6278")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x13A63A0", Offset = "0x13A63A0", VA = "0x13A63A0")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x13A5DB0", Offset = "0x13A5DB0", VA = "0x13A5DB0")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x13A6544", Offset = "0x13A6544", VA = "0x13A6544")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x13A5D18", Offset = "0x13A5D18", VA = "0x13A5D18")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x13A6614", Offset = "0x13A6614", VA = "0x13A6614")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34870", Offset = "0xA34870")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x2000809")]
		public enum TermModification
		{
			[Token(Token = "0x4002EB8")]
			DontModify,
			[Token(Token = "0x4002EB9")]
			ToUpper,
			[Token(Token = "0x4002EBA")]
			ToLower,
			[Token(Token = "0x4002EBB")]
			ToUpperFirst,
			[Token(Token = "0x4002EBC")]
			ToTitle
		}

		[Serializable]
		[Token(Token = "0x200080A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37538", Offset = "0xA37538")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__50_0;

			[Token(Token = "0x4002EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__50_1;

			[Token(Token = "0x4002EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__50_2;

			[Token(Token = "0x4002EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__50_3;

			[Token(Token = "0x6003350")]
			[Address(RVA = "0x13A7A00", Offset = "0x13A7A00", VA = "0x13A7A00")]
			public <>c()
			{
			}

			[Token(Token = "0x6003351")]
			[Address(RVA = "0x13A7A08", Offset = "0x13A7A08", VA = "0x13A7A08")]
			internal bool <UpdateAssetDictionary>b__50_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6003352")]
			[Address(RVA = "0x13A7A74", Offset = "0x13A7A74", VA = "0x13A7A74")]
			internal string <UpdateAssetDictionary>b__50_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6003353")]
			[Address(RVA = "0x13A7A90", Offset = "0x13A7A90", VA = "0x13A7A90")]
			internal string <UpdateAssetDictionary>b__50_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6003354")]
			[Address(RVA = "0x13A7B3C", Offset = "0x13A7B3C", VA = "0x13A7B3C")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__50_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool AllowParameters;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x17000276")]
		public string Term
		{
			[Token(Token = "0x6001D41")]
			[Address(RVA = "0x13A661C", Offset = "0x13A661C", VA = "0x13A661C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D42")]
			[Address(RVA = "0x13A6624", Offset = "0x13A6624", VA = "0x13A6624")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x13A6668", Offset = "0x13A6668", VA = "0x13A6668")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D44")]
			[Address(RVA = "0x13A6670", Offset = "0x13A6670", VA = "0x13A6670")]
			set
			{
			}
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x13A66D0", Offset = "0x13A66D0", VA = "0x13A66D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x13A6EE0", Offset = "0x13A6EE0", VA = "0x13A6EE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x13A6EE8", Offset = "0x13A6EE8", VA = "0x13A6EE8")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x13A4DB4", Offset = "0x13A4DB4", VA = "0x13A4DB4")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x13A6A18", Offset = "0x13A6A18", VA = "0x13A6A18")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x13A6F3C", Offset = "0x13A6F3C", VA = "0x13A6F3C")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x13A709C", Offset = "0x13A709C", VA = "0x13A709C")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x13A7174", Offset = "0x13A7174", VA = "0x13A7174")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x13A6628", Offset = "0x13A6628", VA = "0x13A6628")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x13A667C", Offset = "0x13A667C", VA = "0x13A667C")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x6001D4F")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x13A6714", Offset = "0x13A6714", VA = "0x13A6714")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001D51")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001D52")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x13A71BC", Offset = "0x13A71BC", VA = "0x13A71BC")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6001D54")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x13A72B0", Offset = "0x13A72B0", VA = "0x13A72B0")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x13A7708", Offset = "0x13A7708", VA = "0x13A7708")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x13A77A8", Offset = "0x13A77A8", VA = "0x13A77A8")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x13A7810", Offset = "0x13A7810", VA = "0x13A7810")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA348A8", Offset = "0xA348A8")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x13A7B8C", Offset = "0x13A7B8C", VA = "0x13A7B8C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x13A7D24", Offset = "0x13A7D24", VA = "0x13A7D24")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x13A7DB8", Offset = "0x13A7DB8", VA = "0x13A7DB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x13A7C28", Offset = "0x13A7C28", VA = "0x13A7C28")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x13A7E18", Offset = "0x13A7E18", VA = "0x13A7E18")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x13A7FA8", Offset = "0x13A7FA8", VA = "0x13A7FA8")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x13A8354", Offset = "0x13A8354", VA = "0x13A8354")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x13A81DC", Offset = "0x13A81DC", VA = "0x13A81DC")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x13A857C", Offset = "0x13A857C", VA = "0x13A857C")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public static class LocalizationManager
	{
		[Token(Token = "0x200080B")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x200080C")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x200080D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37548", Offset = "0xA37548")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x4002EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x600335D")]
			[Address(RVA = "0x13A3F7C", Offset = "0x13A3F7C", VA = "0x13A3F7C")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x600335E")]
			[Address(RVA = "0x13A3F84", Offset = "0x13A3F84", VA = "0x13A3F84")]
			internal bool <GetAllLanguages>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200080E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37558", Offset = "0xA37558")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x4002EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x600335F")]
			[Address(RVA = "0x13A3FF8", Offset = "0x13A3FF8", VA = "0x13A3FF8")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6003360")]
			[Address(RVA = "0x13A4000", Offset = "0x13A4000", VA = "0x13A4000")]
			internal bool <GetAllLanguagesCode>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200080F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37568", Offset = "0xA37568")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static _GetParam <>9__41_0;

			[Token(Token = "0x6003362")]
			[Address(RVA = "0x13A3F08", Offset = "0x13A3F08", VA = "0x13A3F08")]
			public <>c()
			{
			}

			[Token(Token = "0x6003363")]
			[Address(RVA = "0x13A3F10", Offset = "0x13A3F10", VA = "0x13A3F10")]
			internal object <ApplyLocalizationParams>b__41_0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37578", Offset = "0xA37578")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4002EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x6003364")]
			[Address(RVA = "0x13A4074", Offset = "0x13A4074", VA = "0x13A4074")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6003365")]
			[Address(RVA = "0x13A407C", Offset = "0x13A407C", VA = "0x13A407C")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000811")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37588", Offset = "0xA37588")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4002EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> parameters;

			[Token(Token = "0x6003366")]
			[Address(RVA = "0x13A40F8", Offset = "0x13A40F8", VA = "0x13A40F8")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6003367")]
			[Address(RVA = "0x13A4100", Offset = "0x13A4100", VA = "0x13A4100")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000812")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37598", Offset = "0xA37598")]
		private sealed class <Delayed_Import_Google>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x4002ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x170006FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600336B")]
				[Address(RVA = "0x13A441C", Offset = "0x13A441C", VA = "0x13A441C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600336D")]
				[Address(RVA = "0x13A4484", Offset = "0x13A4484", VA = "0x13A4484", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003368")]
			[Address(RVA = "0x13A4334", Offset = "0x13A4334", VA = "0x13A4334")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6003369")]
			[Address(RVA = "0x13A4360", Offset = "0x13A4360", VA = "0x13A4360", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600336A")]
			[Address(RVA = "0x13A4364", Offset = "0x13A4364", VA = "0x13A4364", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600336C")]
			[Address(RVA = "0x13A4424", Offset = "0x13A4424", VA = "0x13A4424", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000813")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA375A8", Offset = "0xA375A8")]
		private sealed class <>c__DisplayClass71_0
		{
			[Token(Token = "0x4002ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ILocalizeTargetDescriptor desc;

			[Token(Token = "0x600336E")]
			[Address(RVA = "0x13A4180", Offset = "0x13A4180", VA = "0x13A4180")]
			public <>c__DisplayClass71_0()
			{
			}

			[Token(Token = "0x600336F")]
			[Address(RVA = "0x13A4188", Offset = "0x13A4188", VA = "0x13A4188")]
			internal bool <RegisterTarget>b__0(ILocalizeTargetDescriptor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA375B8", Offset = "0xA375B8")]
		private sealed class <Coroutine_LocalizeAll>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170006FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003373")]
				[Address(RVA = "0x13A42C4", Offset = "0x13A42C4", VA = "0x13A42C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003375")]
				[Address(RVA = "0x13A432C", Offset = "0x13A432C", VA = "0x13A432C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003370")]
			[Address(RVA = "0x13A41B4", Offset = "0x13A41B4", VA = "0x13A41B4")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6003371")]
			[Address(RVA = "0x13A41E0", Offset = "0x13A41E0", VA = "0x13A41E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003372")]
			[Address(RVA = "0x13A41E4", Offset = "0x13A41E4", VA = "0x13A41E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003374")]
			[Address(RVA = "0x13A42CC", Offset = "0x13A42CC", VA = "0x13A42CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<LanguageSourceData, bool> Callback_AllowSyncFromGoogle;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x17000278")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0x15AA714", Offset = "0x15AA714", VA = "0x15AA714")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0x1598B3C", Offset = "0x1598B3C", VA = "0x1598B3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0x15AEB74", Offset = "0x15AEB74", VA = "0x15AEB74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x15AEBE0", Offset = "0x15AEBE0", VA = "0x15AEBE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public static string CurrentRegion
		{
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0x15AEEC8", Offset = "0x15AEEC8", VA = "0x15AEEC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0x15AF01C", Offset = "0x15AF01C", VA = "0x15AF01C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0x15AF1B0", Offset = "0x15AF1B0", VA = "0x15AF1B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x15AF278", Offset = "0x15AF278", VA = "0x15AF278")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0x15AF37C", Offset = "0x15AF37C", VA = "0x15AF37C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000021")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x1598458", Offset = "0x1598458", VA = "0x1598458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59720", Offset = "0xA59720")]
			add
			{
			}
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0x1598368", Offset = "0x1598368", VA = "0x1598368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59730", Offset = "0xA59730")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x159F504", Offset = "0x159F504", VA = "0x159F504")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x15AE2D8", Offset = "0x15AE2D8", VA = "0x15AE2D8")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x15AB888", Offset = "0x15AB888", VA = "0x15AB888")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x159F148", Offset = "0x159F148", VA = "0x159F148")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x15AE978", Offset = "0x15AE978", VA = "0x15AE978")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x15AF3E4", Offset = "0x15AF3E4", VA = "0x15AF3E4")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x159793C", Offset = "0x159793C", VA = "0x159793C")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x15AF4E8", Offset = "0x15AF4E8", VA = "0x15AF4E8")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x15ADE48", Offset = "0x15ADE48", VA = "0x15ADE48")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x1598930", Offset = "0x1598930", VA = "0x1598930")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x15AE320", Offset = "0x15AE320", VA = "0x15AE320")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x15AE794", Offset = "0x15AE794", VA = "0x15AE794")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x15AECD4", Offset = "0x15AECD4", VA = "0x15AECD4")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x15AF6C4", Offset = "0x15AF6C4", VA = "0x15AF6C4")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x15AF8E8", Offset = "0x15AF8E8", VA = "0x15AF8E8")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x15AFAE8", Offset = "0x15AFAE8", VA = "0x15AFAE8")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x15AFBF4", Offset = "0x15AFBF4", VA = "0x15AFBF4")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x15AFD40", Offset = "0x15AFD40", VA = "0x15AFD40")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x15ADC38", Offset = "0x15ADC38", VA = "0x15ADC38")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x15AFE24", Offset = "0x15AFE24", VA = "0x15AFE24")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x15B0320", Offset = "0x15B0320", VA = "0x15B0320")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x15B03F0", Offset = "0x15B03F0", VA = "0x15B03F0")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x15AFF2C", Offset = "0x15AFF2C", VA = "0x15AFF2C")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x15B0630", Offset = "0x15B0630", VA = "0x15B0630")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x15B08DC", Offset = "0x15B08DC", VA = "0x15B08DC")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x15B0AA8", Offset = "0x15B0AA8", VA = "0x15B0AA8")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x15B0B14", Offset = "0x15B0B14", VA = "0x15B0B14")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x15B0EFC", Offset = "0x15B0EFC", VA = "0x15B0EFC")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x15AF570", Offset = "0x15AF570", VA = "0x15AF570")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x15ADDC0", Offset = "0x15ADDC0", VA = "0x15ADDC0")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x15B0FB0", Offset = "0x15B0FB0", VA = "0x15B0FB0")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x15B12A0", Offset = "0x15B12A0", VA = "0x15B12A0")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x15B10EC", Offset = "0x15B10EC", VA = "0x15B10EC")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x15B1420", Offset = "0x15B1420", VA = "0x15B1420")]
		private static bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x15A6038", Offset = "0x15A6038", VA = "0x15A6038")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x15B14DC", Offset = "0x15B14DC", VA = "0x15B14DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA596BC", Offset = "0xA596BC")]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x15A6934", Offset = "0x15A6934", VA = "0x15A6934")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x15B1570", Offset = "0x15B1570", VA = "0x15B1570")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x15B15F8", Offset = "0x15B15F8", VA = "0x15B15F8")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x15B17E4", Offset = "0x15B17E4", VA = "0x15B17E4")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x15B1924", Offset = "0x15B1924", VA = "0x15B1924")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x15AF5F8", Offset = "0x15AF5F8", VA = "0x15AF5F8")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x15B1A10", Offset = "0x15B1A10", VA = "0x15B1A10")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x15B1EA8", Offset = "0x15B1EA8", VA = "0x15B1EA8")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x1597FDC", Offset = "0x1597FDC", VA = "0x1597FDC")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x15B22D8", Offset = "0x15B22D8", VA = "0x15B22D8")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x15B20CC", Offset = "0x15B20CC", VA = "0x15B20CC")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9C")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001D9D")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x15B2394", Offset = "0x15B2394", VA = "0x15B2394")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x15A6830", Offset = "0x15A6830", VA = "0x15A6830")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x15B2760", Offset = "0x15B2760", VA = "0x15B2760")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59740", Offset = "0xA59740")]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x15B25E4", Offset = "0x15B25E4", VA = "0x15B25E4")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x15B27C0", Offset = "0x15B27C0", VA = "0x15B27C0")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x15B28E4", Offset = "0x15B28E4", VA = "0x15B28E4")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x15B2B2C", Offset = "0x15B2B2C", VA = "0x15B2B2C")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x15B04C0", Offset = "0x15B04C0", VA = "0x15B04C0")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x200043B")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x6001DA7")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x6001DA8")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x6001DA9")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x6001DAA")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x6001DAB")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x6001DAC")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x6001DAD")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x6001DAE")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x15A4EE0", Offset = "0x15A4EE0", VA = "0x15A4EE0")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x6001DB0")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB1")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x6001DB2")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x6001DB3")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x6001DB4")]
		public abstract Type GetTargetType();

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x15A4EE8", Offset = "0x15A4EE8", VA = "0x15A4EE8")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x6001DB6")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6001DB7")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x6001DB8")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x6001DB9")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBA")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6001DBB")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x13A86CC", Offset = "0x13A86CC", VA = "0x13A86CC")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x13A86D0", Offset = "0x13A86D0", VA = "0x13A86D0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA597A4", Offset = "0xA597A4")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x13A8778", Offset = "0x13A8778", VA = "0x13A8778", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x13A8780", Offset = "0x13A8780", VA = "0x13A8780", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x13A8788", Offset = "0x13A8788", VA = "0x13A8788", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x13A8790", Offset = "0x13A8790", VA = "0x13A8790", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x13A8798", Offset = "0x13A8798", VA = "0x13A8798", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x13A87A0", Offset = "0x13A87A0", VA = "0x13A87A0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x13A88B0", Offset = "0x13A88B0", VA = "0x13A88B0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x13A8EC8", Offset = "0x13A8EC8", VA = "0x13A8EC8")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x13A9158", Offset = "0x13A9158", VA = "0x13A9158")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x13A8DC0", Offset = "0x13A8DC0", VA = "0x13A8DC0")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x13A9030", Offset = "0x13A9030", VA = "0x13A9030")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x13A936C", Offset = "0x13A936C", VA = "0x13A936C")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x13A93D0", Offset = "0x13A93D0", VA = "0x13A93D0")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x13A93D4", Offset = "0x13A93D4", VA = "0x13A93D4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA597B8", Offset = "0xA597B8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x13A947C", Offset = "0x13A947C", VA = "0x13A947C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x13A9484", Offset = "0x13A9484", VA = "0x13A9484", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x13A948C", Offset = "0x13A948C", VA = "0x13A948C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x13A9494", Offset = "0x13A9494", VA = "0x13A9494", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x13A949C", Offset = "0x13A949C", VA = "0x13A949C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x13A94A4", Offset = "0x13A94A4", VA = "0x13A94A4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x13A95B4", Offset = "0x13A95B4", VA = "0x13A95B4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x13A9AC4", Offset = "0x13A9AC4", VA = "0x13A9AC4")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x13A9B28", Offset = "0x13A9B28", VA = "0x13A9B28")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x13A9B2C", Offset = "0x13A9B2C", VA = "0x13A9B2C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA597CC", Offset = "0xA597CC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x13A9BD4", Offset = "0x13A9BD4", VA = "0x13A9BD4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x13A9BDC", Offset = "0x13A9BDC", VA = "0x13A9BDC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x13A9BE4", Offset = "0x13A9BE4", VA = "0x13A9BE4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x13A9BEC", Offset = "0x13A9BEC", VA = "0x13A9BEC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x13A9BF4", Offset = "0x13A9BF4", VA = "0x13A9BF4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x13A9BFC", Offset = "0x13A9BFC", VA = "0x13A9BFC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x13A9CD4", Offset = "0x13A9CD4", VA = "0x13A9CD4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x13A9E50", Offset = "0x13A9E50", VA = "0x13A9E50")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x13A85EC", Offset = "0x13A85EC", VA = "0x13A85EC", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x13A8624", Offset = "0x13A8624", VA = "0x13A8624")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x13A9EA0", Offset = "0x13A9EA0", VA = "0x13A9EA0")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x13A9EA4", Offset = "0x13A9EA4", VA = "0x13A9EA4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA597E0", Offset = "0xA597E0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x13A9F40", Offset = "0x13A9F40", VA = "0x13A9F40", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x13A9F78", Offset = "0x13A9F78", VA = "0x13A9F78", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x13A9F80", Offset = "0x13A9F80", VA = "0x13A9F80", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x13A9F88", Offset = "0x13A9F88", VA = "0x13A9F88", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x13A9F90", Offset = "0x13A9F90", VA = "0x13A9F90", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x13A9F98", Offset = "0x13A9F98", VA = "0x13A9F98", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x13A9FA0", Offset = "0x13A9FA0", VA = "0x13A9FA0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x13A9FDC", Offset = "0x13A9FDC", VA = "0x13A9FDC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x13AA134", Offset = "0x13AA134", VA = "0x13AA134")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x13AA184", Offset = "0x13AA184", VA = "0x13AA184")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x13AA188", Offset = "0x13AA188", VA = "0x13AA188")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA597F4", Offset = "0xA597F4")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x13AA230", Offset = "0x13AA230", VA = "0x13AA230", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x13AA238", Offset = "0x13AA238", VA = "0x13AA238", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x13AA240", Offset = "0x13AA240", VA = "0x13AA240", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x13AA248", Offset = "0x13AA248", VA = "0x13AA248", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x13AA250", Offset = "0x13AA250", VA = "0x13AA250", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x13AA258", Offset = "0x13AA258", VA = "0x13AA258", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x13AA458", Offset = "0x13AA458", VA = "0x13AA458", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x13AA630", Offset = "0x13AA630", VA = "0x13AA630")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x13A8674", Offset = "0x13A8674", VA = "0x13A8674", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x13A867C", Offset = "0x13A867C", VA = "0x13A867C")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x13AA680", Offset = "0x13AA680", VA = "0x13AA680")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x13AA684", Offset = "0x13AA684", VA = "0x13AA684")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA59808", Offset = "0xA59808")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x13AA720", Offset = "0x13AA720", VA = "0x13AA720", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x13AA728", Offset = "0x13AA728", VA = "0x13AA728", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x13AA730", Offset = "0x13AA730", VA = "0x13AA730", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x13AA738", Offset = "0x13AA738", VA = "0x13AA738", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x13AA740", Offset = "0x13AA740", VA = "0x13AA740", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x13AA748", Offset = "0x13AA748", VA = "0x13AA748", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x13AA750", Offset = "0x13AA750", VA = "0x13AA750", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x13AA78C", Offset = "0x13AA78C", VA = "0x13AA78C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x13AA9B4", Offset = "0x13AA9B4", VA = "0x13AA9B4")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x13AAB60", Offset = "0x13AAB60", VA = "0x13AAB60")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x13AABB0", Offset = "0x13AABB0", VA = "0x13AABB0")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x13AABB4", Offset = "0x13AABB4", VA = "0x13AABB4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA5981C", Offset = "0xA5981C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x13AAC5C", Offset = "0x13AAC5C", VA = "0x13AAC5C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x13AAC64", Offset = "0x13AAC64", VA = "0x13AAC64", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x13AAC6C", Offset = "0x13AAC6C", VA = "0x13AAC6C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x13AAC74", Offset = "0x13AAC74", VA = "0x13AAC74", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x13AAC7C", Offset = "0x13AAC7C", VA = "0x13AAC7C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x13AAC84", Offset = "0x13AAC84", VA = "0x13AAC84", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x13AAD60", Offset = "0x13AAD60", VA = "0x13AAD60", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x13AAE60", Offset = "0x13AAE60", VA = "0x13AAE60")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x13AAEB0", Offset = "0x13AAEB0", VA = "0x13AAEB0")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x13AAEB4", Offset = "0x13AAEB4", VA = "0x13AAEB4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA59830", Offset = "0xA59830")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x13AAF5C", Offset = "0x13AAF5C", VA = "0x13AAF5C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x13AAF64", Offset = "0x13AAF64", VA = "0x13AAF64", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x13AAF6C", Offset = "0x13AAF6C", VA = "0x13AAF6C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x13AAF74", Offset = "0x13AAF74", VA = "0x13AAF74", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x13AAF7C", Offset = "0x13AAF7C", VA = "0x13AAF7C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x13AAF84", Offset = "0x13AAF84", VA = "0x13AAF84", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x13AB0B8", Offset = "0x13AB0B8", VA = "0x13AB0B8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x13AB374", Offset = "0x13AB374", VA = "0x13AB374")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class LocalizeTarget_UnityStandard_VideoPlayer : LocalizeTarget<VideoPlayer>
	{
		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x13AB3D4", Offset = "0x13AB3D4", VA = "0x13AB3D4")]
		static LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x13AB3D8", Offset = "0x13AB3D8", VA = "0x13AB3D8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA59844", Offset = "0xA59844")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x13AB480", Offset = "0x13AB480", VA = "0x13AB480", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x13AB488", Offset = "0x13AB488", VA = "0x13AB488", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x13AB490", Offset = "0x13AB490", VA = "0x13AB490", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x13AB498", Offset = "0x13AB498", VA = "0x13AB498", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x13AB4A0", Offset = "0x13AB4A0", VA = "0x13AB4A0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x13AB4A8", Offset = "0x13AB4A8", VA = "0x13AB4A8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x13AB584", Offset = "0x13AB584", VA = "0x13AB584", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x13AB684", Offset = "0x13AB684", VA = "0x13AB684")]
		public LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x13AB6D4", Offset = "0x13AB6D4", VA = "0x13AB6D4")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x13AB6D8", Offset = "0x13AB6D8", VA = "0x13AB6D8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA59858", Offset = "0xA59858")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x13AB780", Offset = "0x13AB780", VA = "0x13AB780", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x13AB788", Offset = "0x13AB788", VA = "0x13AB788", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x13AB790", Offset = "0x13AB790", VA = "0x13AB790", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x13AB798", Offset = "0x13AB798", VA = "0x13AB798", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x13AB828", Offset = "0x13AB828", VA = "0x13AB828", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x13AB830", Offset = "0x13AB830", VA = "0x13AB830", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x13AB9B4", Offset = "0x13AB9B4", VA = "0x13AB9B4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x13ABAA8", Offset = "0x13ABAA8", VA = "0x13ABAA8")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x13ABAF8", Offset = "0x13ABAF8", VA = "0x13ABAF8")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x13ABAFC", Offset = "0x13ABAFC", VA = "0x13ABAFC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA5986C", Offset = "0xA5986C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x13ABBA4", Offset = "0x13ABBA4", VA = "0x13ABBA4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x13ABBAC", Offset = "0x13ABBAC", VA = "0x13ABBAC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x13ABBB4", Offset = "0x13ABBB4", VA = "0x13ABBB4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x13ABBBC", Offset = "0x13ABBBC", VA = "0x13ABBBC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x13ABBC4", Offset = "0x13ABBC4", VA = "0x13ABBC4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x13ABBCC", Offset = "0x13ABBCC", VA = "0x13ABBCC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x13ABCAC", Offset = "0x13ABCAC", VA = "0x13ABCAC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x13ABDA0", Offset = "0x13ABDA0", VA = "0x13ABDA0")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x13ABDF0", Offset = "0x13ABDF0", VA = "0x13ABDF0")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x13ABDF4", Offset = "0x13ABDF4", VA = "0x13ABDF4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xA59880", Offset = "0xA59880")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x13ABE9C", Offset = "0x13ABE9C", VA = "0x13ABE9C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x13ABEA4", Offset = "0x13ABEA4", VA = "0x13ABEA4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x13ABEAC", Offset = "0x13ABEAC", VA = "0x13ABEAC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x13ABEB4", Offset = "0x13ABEB4", VA = "0x13ABEB4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x13ABEBC", Offset = "0x13ABEBC", VA = "0x13ABEBC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x13ABEC4", Offset = "0x13ABEC4", VA = "0x13ABEC4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x13ABFF4", Offset = "0x13ABFF4", VA = "0x13ABFF4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x13AC2D8", Offset = "0x13AC2D8", VA = "0x13AC2D8")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x13AC398", Offset = "0x13AC398", VA = "0x13AC398")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public enum eTermType
	{
		[Token(Token = "0x4001C3B")]
		Text,
		[Token(Token = "0x4001C3C")]
		Font,
		[Token(Token = "0x4001C3D")]
		Texture,
		[Token(Token = "0x4001C3E")]
		AudioClip,
		[Token(Token = "0x4001C3F")]
		GameObject,
		[Token(Token = "0x4001C40")]
		Sprite,
		[Token(Token = "0x4001C41")]
		Material,
		[Token(Token = "0x4001C42")]
		Child,
		[Token(Token = "0x4001C43")]
		Mesh,
		[Token(Token = "0x4001C44")]
		TextMeshPFont,
		[Token(Token = "0x4001C45")]
		Object,
		[Token(Token = "0x4001C46")]
		Video
	}
	[Token(Token = "0x200044F")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4001C48")]
		Normal = 1,
		[Token(Token = "0x4001C49")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x2000450")]
	public class TermData
	{
		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x13B72AC", Offset = "0x13B72AC", VA = "0x13B72AC")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x13B73BC", Offset = "0x13B73BC", VA = "0x13B73BC")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x13B74AC", Offset = "0x13B74AC", VA = "0x13B74AC")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x13B750C", Offset = "0x13B750C", VA = "0x13B750C")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x13B7680", Offset = "0x13B7680", VA = "0x13B7680")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x13B76C0", Offset = "0x13B76C0", VA = "0x13B76C0")]
		public void Validate()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x13B78D0", Offset = "0x13B78D0", VA = "0x13B78D0")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x13B7968", Offset = "0x13B7968", VA = "0x13B7968")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x13B7A40", Offset = "0x13B7A40", VA = "0x13B7A40")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x13B7B28", Offset = "0x13B7B28", VA = "0x13B7B28")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA45954", Offset = "0xA45954")]
		private string <Filter>k__BackingField;

		[Token(Token = "0x1700027D")]
		public string Filter
		{
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x13B7BE4", Offset = "0x13B7BE4", VA = "0x13B7BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59894", Offset = "0xA59894")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x13B7BEC", Offset = "0x13B7BEC", VA = "0x13B7BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA598A4", Offset = "0xA598A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x13B7BB8", Offset = "0x13B7BB8", VA = "0x13B7BB8")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x15978DC", Offset = "0x15978DC", VA = "0x15978DC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x15979F0", Offset = "0x15979F0", VA = "0x15979F0")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x1700027E")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0x15980B8", Offset = "0x15980B8", VA = "0x15980B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x15981E0", Offset = "0x15981E0", VA = "0x15981E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x1598274", Offset = "0x1598274", VA = "0x1598274")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x15982A4", Offset = "0x15982A4", VA = "0x15982A4")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA348E0", Offset = "0xA348E0")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x15982AC", Offset = "0x15982AC", VA = "0x15982AC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x1598548", Offset = "0x1598548", VA = "0x1598548")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x15985D8", Offset = "0x15985D8", VA = "0x15985D8")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x15985F4", Offset = "0x15985F4", VA = "0x15985F4")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class HindiFixer
	{
		[Serializable]
		[Token(Token = "0x2000815")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA375C8", Offset = "0xA375C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x6003377")]
			[Address(RVA = "0x15A2F38", Offset = "0x15A2F38", VA = "0x15A2F38")]
			public <>c()
			{
			}

			[Token(Token = "0x6003378")]
			[Address(RVA = "0x15A2F40", Offset = "0x15A2F40", VA = "0x15A2F40")]
			internal bool <Fix>b__0_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x15A2A7C", Offset = "0x15A2A7C", VA = "0x15A2A7C")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x15A2ECC", Offset = "0x15A2ECC", VA = "0x15A2ECC")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public static class I2Utils
	{
		[Serializable]
		[Token(Token = "0x2000816")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA375D8", Offset = "0xA375D8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__6_0;

			[Token(Token = "0x600337A")]
			[Address(RVA = "0x15A4ECC", Offset = "0x15A4ECC", VA = "0x15A4ECC")]
			public <>c()
			{
			}

			[Token(Token = "0x600337B")]
			[Address(RVA = "0x15A4ED4", Offset = "0x15A4ED4", VA = "0x15A4ED4")]
			internal bool <SplitLine>b__6_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C53")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x4001C54")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x4001C55")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x15A4048", Offset = "0x15A4048", VA = "0x15A4048")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x15A4120", Offset = "0x15A4120", VA = "0x15A4120")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x15A4350", Offset = "0x15A4350", VA = "0x15A4350")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x15A43FC", Offset = "0x15A43FC", VA = "0x15A43FC")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x15A469C", Offset = "0x15A469C", VA = "0x15A469C")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x15A437C", Offset = "0x15A437C", VA = "0x15A437C")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x15A4824", Offset = "0x15A4824", VA = "0x15A4824")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x15A4A7C", Offset = "0x15A4A7C", VA = "0x15A4A7C")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x15A4A84", Offset = "0x15A4A84", VA = "0x15A4A84")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x15A4B58", Offset = "0x15A4B58", VA = "0x15A4B58")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x15A4BC8", Offset = "0x15A4BC8", VA = "0x15A4BC8")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x15A4D14", Offset = "0x15A4D14", VA = "0x15A4D14")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001E65")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x15A1B60", Offset = "0x15A1B60", VA = "0x15A1B60")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x15A4E50", Offset = "0x15A4E50", VA = "0x15A4E50")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x2000457")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x6001E68")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x2000458")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x2000817")]
		public struct ParamValue
		{
			[Token(Token = "0x4002ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x4002ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x13A4ABC", Offset = "0x13A4ABC", VA = "0x13A4ABC", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x13A4BA8", Offset = "0x13A4BA8", VA = "0x13A4BA8")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x13A4D08", Offset = "0x13A4D08", VA = "0x13A4D08")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x13A5678", Offset = "0x13A5678", VA = "0x13A5678", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x13A5688", Offset = "0x13A5688", VA = "0x13A5688")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x13A5764", Offset = "0x13A5764", VA = "0x13A5764")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x13A57E8", Offset = "0x13A57E8", VA = "0x13A57E8")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000459")]
	public struct LocalizedString
	{
		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x13AC3F8", Offset = "0x13AC3F8", VA = "0x13AC3F8")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x13AC4D4", Offset = "0x13AC4D4", VA = "0x13AC4D4")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xB9059C", Offset = "0xB9059C", VA = "0xB9059C")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xB905E0", Offset = "0xB905E0", VA = "0xB905E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200045A")]
	public class RTLFixer
	{
		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x13ACC10", Offset = "0x13ACC10", VA = "0x13ACC10")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x13ACEB0", Offset = "0x13ACEB0", VA = "0x13ACEB0")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x13ACC1C", Offset = "0x13ACC1C", VA = "0x13ACC1C")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x13ADDF0", Offset = "0x13ADDF0", VA = "0x13ADDF0")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x200045B")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x4001C5E")]
		Hamza = 65152,
		[Token(Token = "0x4001C5F")]
		Alef = 65165,
		[Token(Token = "0x4001C60")]
		AlefHamza = 65155,
		[Token(Token = "0x4001C61")]
		WawHamza = 65157,
		[Token(Token = "0x4001C62")]
		AlefMaksoor = 65159,
		[Token(Token = "0x4001C63")]
		AlefMaksora = 64508,
		[Token(Token = "0x4001C64")]
		HamzaNabera = 65161,
		[Token(Token = "0x4001C65")]
		Ba = 65167,
		[Token(Token = "0x4001C66")]
		Ta = 65173,
		[Token(Token = "0x4001C67")]
		Tha2 = 65177,
		[Token(Token = "0x4001C68")]
		Jeem = 65181,
		[Token(Token = "0x4001C69")]
		H7aa = 65185,
		[Token(Token = "0x4001C6A")]
		Khaa2 = 65189,
		[Token(Token = "0x4001C6B")]
		Dal = 65193,
		[Token(Token = "0x4001C6C")]
		Thal = 65195,
		[Token(Token = "0x4001C6D")]
		Ra2 = 65197,
		[Token(Token = "0x4001C6E")]
		Zeen = 65199,
		[Token(Token = "0x4001C6F")]
		Seen = 65201,
		[Token(Token = "0x4001C70")]
		Sheen = 65205,
		[Token(Token = "0x4001C71")]
		S9a = 65209,
		[Token(Token = "0x4001C72")]
		Dha = 65213,
		[Token(Token = "0x4001C73")]
		T6a = 65217,
		[Token(Token = "0x4001C74")]
		T6ha = 65221,
		[Token(Token = "0x4001C75")]
		Ain = 65225,
		[Token(Token = "0x4001C76")]
		Gain = 65229,
		[Token(Token = "0x4001C77")]
		Fa = 65233,
		[Token(Token = "0x4001C78")]
		Gaf = 65237,
		[Token(Token = "0x4001C79")]
		Kaf = 65241,
		[Token(Token = "0x4001C7A")]
		Lam = 65245,
		[Token(Token = "0x4001C7B")]
		Meem = 65249,
		[Token(Token = "0x4001C7C")]
		Noon = 65253,
		[Token(Token = "0x4001C7D")]
		Ha = 65257,
		[Token(Token = "0x4001C7E")]
		Waw = 65261,
		[Token(Token = "0x4001C7F")]
		Ya = 65265,
		[Token(Token = "0x4001C80")]
		AlefMad = 65153,
		[Token(Token = "0x4001C81")]
		TaMarboota = 65171,
		[Token(Token = "0x4001C82")]
		PersianPe = 64342,
		[Token(Token = "0x4001C83")]
		PersianChe = 64378,
		[Token(Token = "0x4001C84")]
		PersianZe = 64394,
		[Token(Token = "0x4001C85")]
		PersianGaf = 64402,
		[Token(Token = "0x4001C86")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x200045C")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x4001C88")]
		Hamza = 1569,
		[Token(Token = "0x4001C89")]
		Alef = 1575,
		[Token(Token = "0x4001C8A")]
		AlefHamza = 1571,
		[Token(Token = "0x4001C8B")]
		WawHamza = 1572,
		[Token(Token = "0x4001C8C")]
		AlefMaksoor = 1573,
		[Token(Token = "0x4001C8D")]
		AlefMagsora = 1609,
		[Token(Token = "0x4001C8E")]
		HamzaNabera = 1574,
		[Token(Token = "0x4001C8F")]
		Ba = 1576,
		[Token(Token = "0x4001C90")]
		Ta = 1578,
		[Token(Token = "0x4001C91")]
		Tha2 = 1579,
		[Token(Token = "0x4001C92")]
		Jeem = 1580,
		[Token(Token = "0x4001C93")]
		H7aa = 1581,
		[Token(Token = "0x4001C94")]
		Khaa2 = 1582,
		[Token(Token = "0x4001C95")]
		Dal = 1583,
		[Token(Token = "0x4001C96")]
		Thal = 1584,
		[Token(Token = "0x4001C97")]
		Ra2 = 1585,
		[Token(Token = "0x4001C98")]
		Zeen = 1586,
		[Token(Token = "0x4001C99")]
		Seen = 1587,
		[Token(Token = "0x4001C9A")]
		Sheen = 1588,
		[Token(Token = "0x4001C9B")]
		S9a = 1589,
		[Token(Token = "0x4001C9C")]
		Dha = 1590,
		[Token(Token = "0x4001C9D")]
		T6a = 1591,
		[Token(Token = "0x4001C9E")]
		T6ha = 1592,
		[Token(Token = "0x4001C9F")]
		Ain = 1593,
		[Token(Token = "0x4001CA0")]
		Gain = 1594,
		[Token(Token = "0x4001CA1")]
		Fa = 1601,
		[Token(Token = "0x4001CA2")]
		Gaf = 1602,
		[Token(Token = "0x4001CA3")]
		Kaf = 1603,
		[Token(Token = "0x4001CA4")]
		Lam = 1604,
		[Token(Token = "0x4001CA5")]
		Meem = 1605,
		[Token(Token = "0x4001CA6")]
		Noon = 1606,
		[Token(Token = "0x4001CA7")]
		Ha = 1607,
		[Token(Token = "0x4001CA8")]
		Waw = 1608,
		[Token(Token = "0x4001CA9")]
		Ya = 1610,
		[Token(Token = "0x4001CAA")]
		AlefMad = 1570,
		[Token(Token = "0x4001CAB")]
		TaMarboota = 1577,
		[Token(Token = "0x4001CAC")]
		PersianPe = 1662,
		[Token(Token = "0x4001CAD")]
		PersianChe = 1670,
		[Token(Token = "0x4001CAE")]
		PersianZe = 1688,
		[Token(Token = "0x4001CAF")]
		PersianGaf = 1711,
		[Token(Token = "0x4001CB0")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x200045D")]
	internal class ArabicMapping
	{
		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x1596C3C", Offset = "0x1596C3C", VA = "0x1596C3C")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x200045E")]
	internal class ArabicTable
	{
		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x1700027F")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x1597758", Offset = "0x1597758", VA = "0x1597758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x1596C74", Offset = "0x1596C74", VA = "0x1596C74")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x15977D0", Offset = "0x15977D0", VA = "0x15977D0")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200045F")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x13AE394", Offset = "0x13AE394", VA = "0x13AE394")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x2000460")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x13ADDF8", Offset = "0x13ADDF8", VA = "0x13ADDF8")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x13AE3D0", Offset = "0x13AE3D0", VA = "0x13AE3D0")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x13AD0E4", Offset = "0x13AD0E4", VA = "0x13AD0E4")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x13AE5CC", Offset = "0x13AE5CC", VA = "0x13AE5CC")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x13AEC2C", Offset = "0x13AEC2C", VA = "0x13AEC2C")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x13AEAC8", Offset = "0x13AEAC8", VA = "0x13AEAC8")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x13AE748", Offset = "0x13AE748", VA = "0x13AE748")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x13AEF68", Offset = "0x13AEF68", VA = "0x13AEF68")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class RegisterCallback_AllowSyncFromGoogle : MonoBehaviour
	{
		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x13AFE10", Offset = "0x13AFE10", VA = "0x13AFE10")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x13AFEB4", Offset = "0x13AFEB4", VA = "0x13AFEB4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x13AFF58", Offset = "0x13AFF58", VA = "0x13AFF58")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x13AFFC0", Offset = "0x13AFFC0", VA = "0x13AFFC0", Slot = "4")]
		public virtual bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x13AFFC8", Offset = "0x13AFFC8", VA = "0x13AFFC8")]
		public RegisterCallback_AllowSyncFromGoogle()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x13AFFD0", Offset = "0x13AFFD0", VA = "0x13AFFD0", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x13B00AC", Offset = "0x13B00AC", VA = "0x13B00AC", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x13B0130", Offset = "0x13B0130", VA = "0x13B0130", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x13B0138", Offset = "0x13B0138", VA = "0x13B0138")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x6001E8F")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x2000464")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x17000280")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x13A7340", Offset = "0x13A7340", VA = "0x13A7340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x13B0140", Offset = "0x13B0140", VA = "0x13B0140")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001E92")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x13B021C", Offset = "0x13B021C", VA = "0x13B021C")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x13A7698", Offset = "0x13A7698", VA = "0x13A7698")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E95")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001E96")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x13B01B0", Offset = "0x13B01B0", VA = "0x13B01B0")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x13B035C", Offset = "0x13B035C", VA = "0x13B035C")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x2000465")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34928", Offset = "0xA34928")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x13B0468", Offset = "0x13B0468", VA = "0x13B0468")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x13B046C", Offset = "0x13B046C", VA = "0x13B046C")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x13B0528", Offset = "0x13B0528", VA = "0x13B0528")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x2000466")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34960", Offset = "0xA34960")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x13B0530", Offset = "0x13B0530", VA = "0x13B0530")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x13B075C", Offset = "0x13B075C", VA = "0x13B075C")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x13B084C", Offset = "0x13B084C", VA = "0x13B084C")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class StringObfucator
	{
		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x13B6D74", Offset = "0x13B6D74", VA = "0x13B6D74")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x13B70B4", Offset = "0x13B70B4", VA = "0x13B70B4")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x13B7020", Offset = "0x13B7020", VA = "0x13B7020")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x13B719C", Offset = "0x13B719C", VA = "0x13B719C")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x13B6E5C", Offset = "0x13B6E5C", VA = "0x13B6E5C")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x13B7238", Offset = "0x13B7238", VA = "0x13B7238")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x2000468")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x4001CC0")]
		Array = 1,
		[Token(Token = "0x4001CC1")]
		Class,
		[Token(Token = "0x4001CC2")]
		Value,
		[Token(Token = "0x4001CC3")]
		IntValue,
		[Token(Token = "0x4001CC4")]
		DoubleValue,
		[Token(Token = "0x4001CC5")]
		BoolValue,
		[Token(Token = "0x4001CC6")]
		FloatValue
	}
	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA34998", Offset = "0xA34998")]
	public class JSONNode
	{
		[Token(Token = "0x2000818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA375E8", Offset = "0xA375E8")]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170006FF")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600337F")]
				[Address(RVA = "0x13B5AE8", Offset = "0x13B5AE8", VA = "0x13B5AE8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000700")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003381")]
				[Address(RVA = "0x13B5B50", Offset = "0x13B5B50", VA = "0x13B5B50", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600337C")]
			[Address(RVA = "0x13B4804", Offset = "0x13B4804", VA = "0x13B4804")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600337D")]
			[Address(RVA = "0x13B5ACC", Offset = "0x13B5ACC", VA = "0x13B5ACC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600337E")]
			[Address(RVA = "0x13B5AD0", Offset = "0x13B5AD0", VA = "0x13B5AD0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003380")]
			[Address(RVA = "0x13B5AF0", Offset = "0x13B5AF0", VA = "0x13B5AF0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003382")]
			[Address(RVA = "0x13B5B58", Offset = "0x13B5B58", VA = "0x13B5B58", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003383")]
			[Address(RVA = "0x13B5BF0", Offset = "0x13B5BF0", VA = "0x13B5BF0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000819")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA375F8", Offset = "0xA375F8")]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4002EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4002EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x17000701")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003389")]
				[Address(RVA = "0x13B6224", Offset = "0x13B6224", VA = "0x13B6224", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000702")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600338B")]
				[Address(RVA = "0x13B628C", Offset = "0x13B628C", VA = "0x13B628C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003384")]
			[Address(RVA = "0x13B48BC", Offset = "0x13B48BC", VA = "0x13B48BC")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6003385")]
			[Address(RVA = "0x13B5BF4", Offset = "0x13B5BF4", VA = "0x13B5BF4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003386")]
			[Address(RVA = "0x13B5E04", Offset = "0x13B5E04", VA = "0x13B5E04", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003387")]
			[Address(RVA = "0x13B5D44", Offset = "0x13B5D44", VA = "0x13B5D44")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003388")]
			[Address(RVA = "0x13B5C84", Offset = "0x13B5C84", VA = "0x13B5C84")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600338A")]
			[Address(RVA = "0x13B622C", Offset = "0x13B622C", VA = "0x13B622C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600338C")]
			[Address(RVA = "0x13B6294", Offset = "0x13B6294", VA = "0x13B6294", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600338D")]
			[Address(RVA = "0x13B6340", Offset = "0x13B6340", VA = "0x13B6340", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x13B46A8", Offset = "0x13B46A8", VA = "0x13B46A8", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0x13B46B0", Offset = "0x13B46B0", VA = "0x13B46B0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0x13B46B4", Offset = "0x13B46B4", VA = "0x13B46B4", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x13B46BC", Offset = "0x13B46BC", VA = "0x13B46BC", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public virtual string Value
		{
			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x13B46C0", Offset = "0x13B46C0", VA = "0x13B46C0", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x13B4708", Offset = "0x13B4708", VA = "0x13B4708", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public virtual int Count
		{
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x13B470C", Offset = "0x13B470C", VA = "0x13B470C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000285")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x13B4794", Offset = "0x13B4794", VA = "0x13B4794", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA598C4", Offset = "0xA598C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000286")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x13B483C", Offset = "0x13B483C", VA = "0x13B483C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59928", Offset = "0xA59928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		public virtual int AsInt
		{
			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x13B4984", Offset = "0x13B4984", VA = "0x13B4984", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0x13B49C4", Offset = "0x13B49C4", VA = "0x13B49C4", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x13B4A04", Offset = "0x13B4A04", VA = "0x13B4A04", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0x13B4A48", Offset = "0x13B4A48", VA = "0x13B4A48", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x13B4A88", Offset = "0x13B4A88", VA = "0x13B4A88", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x13B4B2C", Offset = "0x13B4B2C", VA = "0x13B4B2C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x13B4B6C", Offset = "0x13B4B6C", VA = "0x13B4B6C", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x13B4C34", Offset = "0x13B4C34", VA = "0x13B4C34", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x13B4CB0", Offset = "0x13B4CB0", VA = "0x13B4CB0", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x13B4D30", Offset = "0x13B4D30", VA = "0x13B4D30", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x13B46A4", Offset = "0x13B46A4", VA = "0x13B46A4", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x13B4714", Offset = "0x13B4714", VA = "0x13B4714", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x13B477C", Offset = "0x13B477C", VA = "0x13B477C", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x13B4784", Offset = "0x13B4784", VA = "0x13B4784", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x13B478C", Offset = "0x13B478C", VA = "0x13B478C", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x13B48F4", Offset = "0x13B48F4", VA = "0x13B48F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x13B493C", Offset = "0x13B493C", VA = "0x13B493C", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x13B4DB0", Offset = "0x13B4DB0", VA = "0x13B4DB0")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x13B4E14", Offset = "0x13B4E14", VA = "0x13B4E14")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x13B32B8", Offset = "0x13B32B8", VA = "0x13B32B8")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x13B4E60", Offset = "0x13B4E60", VA = "0x13B4E60")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x13B4E7C", Offset = "0x13B4E7C", VA = "0x13B4E7C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x13B410C", Offset = "0x13B410C", VA = "0x13B410C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x13B2A8C", Offset = "0x13B2A8C", VA = "0x13B2A8C")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x13B0858", Offset = "0x13B0858", VA = "0x13B0858")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x13B4E88", Offset = "0x13B4E88", VA = "0x13B4E88", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x13B4E8C", Offset = "0x13B4E8C", VA = "0x13B4E8C")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x13B4F0C", Offset = "0x13B4F0C", VA = "0x13B4F0C")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x13B4F78", Offset = "0x13B4F78", VA = "0x13B4F78")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x13B4FE4", Offset = "0x13B4FE4", VA = "0x13B4FE4")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x13B5050", Offset = "0x13B5050", VA = "0x13B5050")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x13B51A4", Offset = "0x13B51A4", VA = "0x13B51A4")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x13B5328", Offset = "0x13B5328", VA = "0x13B5328")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x13B56B0", Offset = "0x13B56B0", VA = "0x13B56B0")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x13B571C", Offset = "0x13B571C", VA = "0x13B571C")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x13B5788", Offset = "0x13B5788", VA = "0x13B5788")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x13B57F4", Offset = "0x13B57F4", VA = "0x13B57F4")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x13B5910", Offset = "0x13B5910", VA = "0x13B5910")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x13B5A18", Offset = "0x13B5A18", VA = "0x13B5A18")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x13B1924", Offset = "0x13B1924", VA = "0x13B1924")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA349D0", Offset = "0xA349D0")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x200081A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37608", Offset = "0xA37608")]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000703")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003392")]
				[Address(RVA = "0x13B1D2C", Offset = "0x13B1D2C", VA = "0x13B1D2C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000704")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003394")]
				[Address(RVA = "0x13B1D94", Offset = "0x13B1D94", VA = "0x13B1D94", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600338E")]
			[Address(RVA = "0x13B137C", Offset = "0x13B137C", VA = "0x13B137C")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600338F")]
			[Address(RVA = "0x13B1B64", Offset = "0x13B1B64", VA = "0x13B1B64", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003390")]
			[Address(RVA = "0x13B1BD8", Offset = "0x13B1BD8", VA = "0x13B1BD8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003391")]
			[Address(RVA = "0x13B1B80", Offset = "0x13B1B80", VA = "0x13B1B80")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003393")]
			[Address(RVA = "0x13B1D34", Offset = "0x13B1D34", VA = "0x13B1D34", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003395")]
			[Address(RVA = "0x13B1D9C", Offset = "0x13B1D9C", VA = "0x13B1D9C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003396")]
			[Address(RVA = "0x13B1E48", Offset = "0x13B1E48", VA = "0x13B1E48", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200081B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37618", Offset = "0xA37618")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000705")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600339B")]
				[Address(RVA = "0x13B1AF4", Offset = "0x13B1AF4", VA = "0x13B1AF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000706")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600339D")]
				[Address(RVA = "0x13B1B5C", Offset = "0x13B1B5C", VA = "0x13B1B5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003397")]
			[Address(RVA = "0x13B1424", Offset = "0x13B1424", VA = "0x13B1424")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6003398")]
			[Address(RVA = "0x13B192C", Offset = "0x13B192C", VA = "0x13B192C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003399")]
			[Address(RVA = "0x13B19A0", Offset = "0x13B19A0", VA = "0x13B19A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600339A")]
			[Address(RVA = "0x13B1948", Offset = "0x13B1948", VA = "0x13B1948")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600339C")]
			[Address(RVA = "0x13B1AFC", Offset = "0x13B1AFC", VA = "0x13B1AFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x1700028D")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x13B0EE4", Offset = "0x13B0EE4", VA = "0x13B0EE4", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0x13B0FB8", Offset = "0x13B0FB8", VA = "0x13B0FB8", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x13B105C", Offset = "0x13B105C", VA = "0x13B105C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0x13B10C0", Offset = "0x13B10C0", VA = "0x13B10C0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public override int Count
		{
			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0x13B1128", Offset = "0x13B1128", VA = "0x13B1128", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000290")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0x13B12FC", Offset = "0x13B12FC", VA = "0x13B12FC", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5998C", Offset = "0xA5998C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x13B1178", Offset = "0x13B1178", VA = "0x13B1178", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x13B11E0", Offset = "0x13B11E0", VA = "0x13B11E0", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x13B128C", Offset = "0x13B128C", VA = "0x13B128C", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x13B13B4", Offset = "0x13B13B4", VA = "0x13B13B4", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA599F0", Offset = "0xA599F0")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x13B1450", Offset = "0x13B1450", VA = "0x13B1450", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x13B15E8", Offset = "0x13B15E8", VA = "0x13B15E8", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x13B17D4", Offset = "0x13B17D4", VA = "0x13B17D4", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x13B18B4", Offset = "0x13B18B4", VA = "0x13B18B4")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA34A08", Offset = "0xA34A08")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x200081C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37628", Offset = "0xA37628")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x600339E")]
			[Address(RVA = "0x13B25C8", Offset = "0x13B25C8", VA = "0x13B25C8")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600339F")]
			[Address(RVA = "0x13B3264", Offset = "0x13B3264", VA = "0x13B3264")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200081D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37638", Offset = "0xA37638")]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000707")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60033A4")]
				[Address(RVA = "0x13B3780", Offset = "0x13B3780", VA = "0x13B3780", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000708")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033A6")]
				[Address(RVA = "0x13B37E8", Offset = "0x13B37E8", VA = "0x13B37E8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033A0")]
			[Address(RVA = "0x13B2650", Offset = "0x13B2650", VA = "0x13B2650")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60033A1")]
			[Address(RVA = "0x13B35B0", Offset = "0x13B35B0", VA = "0x13B35B0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033A2")]
			[Address(RVA = "0x13B3624", Offset = "0x13B3624", VA = "0x13B3624", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033A3")]
			[Address(RVA = "0x13B35CC", Offset = "0x13B35CC", VA = "0x13B35CC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60033A5")]
			[Address(RVA = "0x13B3788", Offset = "0x13B3788", VA = "0x13B3788", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60033A7")]
			[Address(RVA = "0x13B37F0", Offset = "0x13B37F0", VA = "0x13B37F0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60033A8")]
			[Address(RVA = "0x13B389C", Offset = "0x13B389C", VA = "0x13B389C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200081E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37648", Offset = "0xA37648")]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000709")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033AD")]
				[Address(RVA = "0x13B3540", Offset = "0x13B3540", VA = "0x13B3540", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700070A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033AF")]
				[Address(RVA = "0x13B35A8", Offset = "0x13B35A8", VA = "0x13B35A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033A9")]
			[Address(RVA = "0x13B26F8", Offset = "0x13B26F8", VA = "0x13B26F8")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60033AA")]
			[Address(RVA = "0x13B3350", Offset = "0x13B3350", VA = "0x13B3350", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033AB")]
			[Address(RVA = "0x13B33C4", Offset = "0x13B33C4", VA = "0x13B33C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033AC")]
			[Address(RVA = "0x13B336C", Offset = "0x13B336C", VA = "0x13B336C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60033AE")]
			[Address(RVA = "0x13B3548", Offset = "0x13B3548", VA = "0x13B3548", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x17000291")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x13B1E4C", Offset = "0x13B1E4C", VA = "0x13B1E4C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0x13B1F40", Offset = "0x13B1F40", VA = "0x13B1F40", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0x13B1FFC", Offset = "0x13B1FFC", VA = "0x13B1FFC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0x13B2094", Offset = "0x13B2094", VA = "0x13B2094", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public override int Count
		{
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0x13B2154", Offset = "0x13B2154", VA = "0x13B2154", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000294")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x13B25D0", Offset = "0x13B25D0", VA = "0x13B25D0", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59A54", Offset = "0xA59A54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x13B21AC", Offset = "0x13B21AC", VA = "0x13B21AC", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x13B22D8", Offset = "0x13B22D8", VA = "0x13B22D8", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x13B2394", Offset = "0x13B2394", VA = "0x13B2394", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x13B2450", Offset = "0x13B2450", VA = "0x13B2450", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x13B2688", Offset = "0x13B2688", VA = "0x13B2688", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59AB8", Offset = "0xA59AB8")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x13B2724", Offset = "0x13B2724", VA = "0x13B2724", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x13B2C08", Offset = "0x13B2C08", VA = "0x13B2C08", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x13B2FC8", Offset = "0x13B2FC8", VA = "0x13B2FC8", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x13B3180", Offset = "0x13B3180", VA = "0x13B3180")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x17000295")]
		public override string Value
		{
			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0x13B38A0", Offset = "0x13B38A0", VA = "0x13B38A0", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0x13B38A8", Offset = "0x13B38A8", VA = "0x13B38A8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x13B38B0", Offset = "0x13B38B0", VA = "0x13B38B0")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x13B38DC", Offset = "0x13B38DC", VA = "0x13B38DC")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x13B3920", Offset = "0x13B3920", VA = "0x13B3920")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x13B3964", Offset = "0x13B3964", VA = "0x13B3964")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x13B39A0", Offset = "0x13B39A0", VA = "0x13B39A0")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x13B39DC", Offset = "0x13B39DC", VA = "0x13B39DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x13B3A3C", Offset = "0x13B3A3C", VA = "0x13B3A3C", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x13B3A9C", Offset = "0x13B3A9C", VA = "0x13B3A9C", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xA34A40", Offset = "0xA34A40")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x17000296")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0x13B3DB8", Offset = "0x13B3DB8", VA = "0x13B3DB8", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F02")]
			[Address(RVA = "0x13B3E1C", Offset = "0x13B3E1C", VA = "0x13B3E1C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001F03")]
			[Address(RVA = "0x13B3EA4", Offset = "0x13B3EA4", VA = "0x13B3EA4", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F04")]
			[Address(RVA = "0x13B3F14", Offset = "0x13B3F14", VA = "0x13B3F14", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public override int AsInt
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x13B41A4", Offset = "0x13B41A4", VA = "0x13B41A4", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x13B4228", Offset = "0x13B4228", VA = "0x13B4228", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public override float AsFloat
		{
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x13B42B0", Offset = "0x13B42B0", VA = "0x13B42B0", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x13B4334", Offset = "0x13B4334", VA = "0x13B4334", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public override double AsDouble
		{
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x13B43BC", Offset = "0x13B43BC", VA = "0x13B43BC", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x13B4440", Offset = "0x13B4440", VA = "0x13B4440", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public override bool AsBool
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x13B44C8", Offset = "0x13B44C8", VA = "0x13B44C8", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x13B454C", Offset = "0x13B454C", VA = "0x13B454C", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x13B45D4", Offset = "0x13B45D4", VA = "0x13B45D4", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x13B463C", Offset = "0x13B463C", VA = "0x13B463C", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x13B0F8C", Offset = "0x13B0F8C", VA = "0x13B0F8C")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x13B1F08", Offset = "0x13B1F08", VA = "0x13B1F08")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x13B3D58", Offset = "0x13B3D58", VA = "0x13B3D58")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x13B3FA4", Offset = "0x13B3FA4", VA = "0x13B3FA4", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x13B402C", Offset = "0x13B402C", VA = "0x13B402C", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x13B40BC", Offset = "0x13B40BC", VA = "0x13B40BC")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x13B40D4", Offset = "0x13B40D4", VA = "0x13B40D4")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x13B40EC", Offset = "0x13B40EC", VA = "0x13B40EC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x13B4104", Offset = "0x13B4104", VA = "0x13B4104", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x13B4114", Offset = "0x13B4114", VA = "0x13B4114", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x13B415C", Offset = "0x13B415C", VA = "0x13B415C", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x200046E")]
	public static class JSON
	{
		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x13B0854", Offset = "0x13B0854", VA = "0x13B0854")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace BNG
{
	[Token(Token = "0x200046F")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001CCD")]
		Default = 0,
		[Token(Token = "0x4001CCE")]
		Generic = 1,
		[Token(Token = "0x4001CCF")]
		PingPongBall = 2,
		[Token(Token = "0x4001CD0")]
		Controller = 3,
		[Token(Token = "0x4001CD1")]
		Rock = 4,
		[Token(Token = "0x4001CD2")]
		SamsGunGrip = 5,
		[Token(Token = "0x4001CD3")]
		MaxsGunGrip = 6,
		[Token(Token = "0x4001CD4")]
		WaterPistolGrip = 7,
		[Token(Token = "0x4001CD5")]
		LaserGunGrip = 8,
		[Token(Token = "0x4001CD6")]
		RocketLauncherGrip = 9,
		[Token(Token = "0x4001CD7")]
		MaxAmmoClip = 10,
		[Token(Token = "0x4001CD8")]
		SamAmmoSpeedLoader = 11,
		[Token(Token = "0x4001CD9")]
		WaterGunCanister = 12,
		[Token(Token = "0x4001CDA")]
		LaserGunAmmo = 13,
		[Token(Token = "0x4001CDB")]
		Rocket = 14,
		[Token(Token = "0x4001CDC")]
		TocksWantedPoster = 15,
		[Token(Token = "0x4001CDD")]
		TrashCanLid = 16,
		[Token(Token = "0x4001CDE")]
		CoffeeMug = 17,
		[Token(Token = "0x4001CDF")]
		Dart = 18,
		[Token(Token = "0x4001CE0")]
		Axe = 19,
		[Token(Token = "0x4001CE1")]
		SwitchBlade = 20,
		[Token(Token = "0x4001CE2")]
		BaseBall = 21,
		[Token(Token = "0x4001CE3")]
		Bomb = 22,
		[Token(Token = "0x4001CE4")]
		FizzballBat = 23,
		[Token(Token = "0x4001CE5")]
		Screwdriver = 24,
		[Token(Token = "0x4001CE6")]
		BaseballBat = 25,
		[Token(Token = "0x4001CE7")]
		TurkeyBaster = 26,
		[Token(Token = "0x4001CE8")]
		MaxLeg = 27,
		[Token(Token = "0x4001CE9")]
		BombsAwayBomb = 28,
		[Token(Token = "0x4001CEA")]
		Grenade = 29,
		[Token(Token = "0x4001CEB")]
		GrenadePin = 30,
		[Token(Token = "0x4001CEC")]
		MaxsTail = 31,
		[Token(Token = "0x4001CED")]
		ListeningCup = 32,
		[Token(Token = "0x4001CEE")]
		OfficeBomb = 33,
		[Token(Token = "0x4001CEF")]
		OfficePhone = 34,
		[Token(Token = "0x4001CF0")]
		Wrench = 35,
		[Token(Token = "0x4001CF1")]
		Corndog = 36,
		[Token(Token = "0x4001CF2")]
		CordogStick = 37,
		[Token(Token = "0x4001CF3")]
		StrongmanHammer = 38,
		[Token(Token = "0x4001CF4")]
		CraneJoyStick = 39,
		[Token(Token = "0x4001CF5")]
		RocketLauncherCoC = 40,
		[Token(Token = "0x4001CF6")]
		RocketCoC = 41,
		[Token(Token = "0x4001CF7")]
		TocksHeadSet = 42,
		[Token(Token = "0x4001CF8")]
		CanDrDills = 43,
		[Token(Token = "0x4001CF9")]
		Trident = 44,
		[Token(Token = "0x4001CFA")]
		PistolGrip = 50
	}
	[Token(Token = "0x2000470")]
	public class HandPoseDefinitions : MonoBehaviour
	{
		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x154A790", Offset = "0x154A790", VA = "0x154A790")]
		public HandPoseDefinitions()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class LinkedSet<T> : IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LinkedList<T> list;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<T, LinkedListNode<T>> dictionary;

		[Token(Token = "0x1700029E")]
		public int Count
		{
			[Token(Token = "0x6001F1F")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F19")]
		public LinkedSet()
		{
		}

		[Token(Token = "0x6001F1A")]
		public LinkedSet(IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x6001F1B")]
		public bool Add(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1C")]
		public bool Remove(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1D")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001F1E")]
		public bool Contains(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F20")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001F21")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000472")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34A78", Offset = "0xA34A78")]
	public class Outline : MonoBehaviour
	{
		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA45974", Offset = "0xA45974")]
		private Renderer <Renderer>k__BackingField;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA45984", Offset = "0xA45984")]
		private SkinnedMeshRenderer <SkinnedMeshRenderer>k__BackingField;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA45994", Offset = "0xA45994")]
		private MeshFilter <MeshFilter>k__BackingField;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int color;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool eraseRenderer;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material[] _SharedMaterials;

		[Token(Token = "0x1700029F")]
		public Renderer Renderer
		{
			[Token(Token = "0x6001F22")]
			[Address(RVA = "0x13D9E4C", Offset = "0x13D9E4C", VA = "0x13D9E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59B1C", Offset = "0xA59B1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x13D9E54", Offset = "0x13D9E54", VA = "0x13D9E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59B2C", Offset = "0xA59B2C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public SkinnedMeshRenderer SkinnedMeshRenderer
		{
			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x13D9E5C", Offset = "0x13D9E5C", VA = "0x13D9E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59B3C", Offset = "0xA59B3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x13D9E64", Offset = "0x13D9E64", VA = "0x13D9E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59B4C", Offset = "0xA59B4C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x13D9E6C", Offset = "0x13D9E6C", VA = "0x13D9E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59B5C", Offset = "0xA59B5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x13D9E74", Offset = "0x13D9E74", VA = "0x13D9E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59B6C", Offset = "0xA59B6C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public Material[] SharedMaterials
		{
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x13DA0A4", Offset = "0x13DA0A4", VA = "0x13DA0A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x13D9E7C", Offset = "0x13D9E7C", VA = "0x13D9E7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x13D9F04", Offset = "0x13D9F04", VA = "0x13D9F04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x13D9FD4", Offset = "0x13D9FD4", VA = "0x13D9FD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x13DA0E0", Offset = "0x13DA0E0", VA = "0x13DA0E0")]
		public Outline()
		{
		}
	}
	[Token(Token = "0x2000473")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34ADC", Offset = "0xA34ADC")]
	[ExecuteInEditMode]
	public class OutlineEffect : MonoBehaviour
	{
		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA459A4", Offset = "0xA459A4")]
		private static OutlineEffect <Instance>k__BackingField;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly LinkedSet<Outline> outlines;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA459B4", Offset = "0xA459B4")]
		public float lineThickness;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA459CC", Offset = "0xA459CC")]
		public float lineIntensity;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA459E4", Offset = "0xA459E4")]
		public float fillAmount;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color lineColor0;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color lineColor1;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color lineColor2;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color lineColor3;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool additiveRendering;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool backfaceCulling;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA459FC", Offset = "0xA459FC")]
		public bool cornerOutlines;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool addLinesBetweenColors;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA45A34", Offset = "0xA45A34")]
		public bool scaleWithScreenSize;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA45A6C", Offset = "0xA45A6C")]
		public float alphaCutoff;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool flipY;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Camera sourceCamera;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool autoEnableOutlines;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Camera outlineCamera;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material outline1Material;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material outline2Material;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Material outline3Material;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Material outline4Material;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material outlineEraseMaterial;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Shader outlineShader;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Shader outlineBufferShader;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Material outlineShaderMaterial;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public RenderTexture renderTexture;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public RenderTexture extraRenderTexture;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CommandBuffer commandBuffer;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<Material> materialBuffer;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool RenderTheNextFrame;

		[Token(Token = "0x170002A3")]
		public static OutlineEffect Instance
		{
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x13DA0E8", Offset = "0x13DA0E8", VA = "0x13DA0E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59B7C", Offset = "0xA59B7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x13DA138", Offset = "0x13DA138", VA = "0x13DA138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59B8C", Offset = "0xA59B8C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x13DA18C", Offset = "0x13DA18C", VA = "0x13DA18C")]
		private Material GetMaterialFromID(int ID)
		{
			return null;
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x13DA1D0", Offset = "0x13DA1D0", VA = "0x13DA1D0")]
		private Material CreateMaterial(Color emissionColor)
		{
			return null;
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x13DA334", Offset = "0x13DA334", VA = "0x13DA334")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x13DA43C", Offset = "0x13DA43C", VA = "0x13DA43C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x13DB0F4", Offset = "0x13DB0F4", VA = "0x13DB0F4")]
		public void OnPreRender()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x13DBECC", Offset = "0x13DBECC", VA = "0x13DBECC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x13DBFB8", Offset = "0x13DBFB8", VA = "0x13DBFB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x13DC22C", Offset = "0x13DC22C", VA = "0x13DC22C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x13DA75C", Offset = "0x13DA75C", VA = "0x13DA75C")]
		private void CreateMaterialsIfNeeded()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x13DC090", Offset = "0x13DC090", VA = "0x13DC090")]
		private void DestroyMaterials()
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x13DAAC0", Offset = "0x13DAAC0", VA = "0x13DAAC0")]
		public void UpdateMaterialsPublicProperties()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x13DAFC8", Offset = "0x13DAFC8", VA = "0x13DAFC8")]
		private void UpdateOutlineCameraFromSource()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x13D9F6C", Offset = "0x13D9F6C", VA = "0x13D9F6C")]
		public void AddOutline(Outline outline)
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x13DA03C", Offset = "0x13DA03C", VA = "0x13DA03C")]
		public void RemoveOutline(Outline outline)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x13DC38C", Offset = "0x13DC38C", VA = "0x13DC38C")]
		public OutlineEffect()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class DemoScript : MonoBehaviour
	{
		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DefaultHandsModel;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool LoadHandSelectionFromPrefs;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DefaultLocomotion;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool LoadLocomotionFromPrefs;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabber LeftGrabber;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Grabber RightGrabber;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LeftHandGFXHolder;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform RightHandGFXHolder;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _selectedHandGFX;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject DebugMenu;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text LabelToUpdate;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Text JoystickText;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private InputBridge input;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BNGPlayerController player;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PlayerTeleport teleport;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CharacterIK IKBody;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject AmmoObject;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UIPointer uiPoint;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform ItemsHolder;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<Grabbable, PosRot> _initalGrabbables;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject m_Characters;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Grabbable> demoClips;

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x1538AEC", Offset = "0x1538AEC", VA = "0x1538AEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x1539240", Offset = "0x1539240", VA = "0x1539240")]
		private void ToggleCharacters()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x1539348", Offset = "0x1539348", VA = "0x1539348")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x1538D2C", Offset = "0x1538D2C", VA = "0x1538D2C")]
		public void ChangeHandsModel(int childIndex, bool save = false)
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x1539188", Offset = "0x1539188", VA = "0x1539188")]
		public void ChangeLocomotion(int locomotionType, bool save)
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x1539428", Offset = "0x1539428", VA = "0x1539428")]
		public void UpdateSliderText(float sliderValue)
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x1539500", Offset = "0x1539500", VA = "0x1539500")]
		public void UpdateJoystickText(float leverX, float leverY)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x15396E8", Offset = "0x15396E8", VA = "0x15396E8")]
		public void ResetGrabbables()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x1539910", Offset = "0x1539910", VA = "0x1539910")]
		public void GrabAmmo(Grabber grabber)
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x1539E3C", Offset = "0x1539E3C", VA = "0x1539E3C")]
		public DemoScript()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class PosRot
	{
		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x13DF6B4", Offset = "0x13DF6B4", VA = "0x13DF6B4")]
		public PosRot()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class HandTrackingDemo : MonoBehaviour
	{
		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandTracking HandTrackingController;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform lastDrawPointLeft;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lastDrawPointRight;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text DebugText;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text PinchTypeText;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool DrawMode;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float MinDrawDistance;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float LineWidth;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material DrawMaterial;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform root;

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x154AF0C", Offset = "0x154AF0C", VA = "0x154AF0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x154AF80", Offset = "0x154AF80", VA = "0x154AF80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x154AFB8", Offset = "0x154AFB8", VA = "0x154AFB8")]
		private void doDrawMode()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x154B798", Offset = "0x154B798", VA = "0x154B798")]
		private Transform drawPoint(Transform lastDrawPoint, Vector3 endPosition, float lineWidth, Color lineColor)
		{
			return null;
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x154B9D4", Offset = "0x154B9D4", VA = "0x154B9D4")]
		public void TogglePinchMode()
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x154B9FC", Offset = "0x154B9FC", VA = "0x154B9FC")]
		public void ClearDrawing()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x154B2F4", Offset = "0x154B2F4", VA = "0x154B2F4")]
		private void updateDebugText()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x154B71C", Offset = "0x154B71C", VA = "0x154B71C")]
		private void updatePinchButtonText()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x154BAE4", Offset = "0x154BAE4", VA = "0x154BAE4")]
		public HandTrackingDemo()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class CharacterConstraint : MonoBehaviour
	{
		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BNGPlayerController bngController;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterController character;

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x12A60A0", Offset = "0x12A60A0", VA = "0x12A60A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x12A6120", Offset = "0x12A6120", VA = "0x12A6120")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x12A612C", Offset = "0x12A612C", VA = "0x12A612C", Slot = "4")]
		public virtual void CheckCharacterCollisionMove()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x12A62C0", Offset = "0x12A62C0", VA = "0x12A62C0")]
		public CharacterConstraint()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class CharacterIK : MonoBehaviour
	{
		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowLeftController;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform FollowRightController;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform FollowLeftFoot;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform FollowRightFoot;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform FollowHead;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float FootYPosition;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IKActive;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool IKFeetActive;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool HideHead;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool HideLeftArm;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool HideRightArm;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool HideLeftHand;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool HideRightHand;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool HideLegs;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform HipsJoint;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CharacterController FollowPlayer;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform headBone;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform leftShoulderJoint;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform rightShoulderJoint;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform leftHandJoint;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform rightHandJoint;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator animator;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float HipOffset;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 hideBoneScale;

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x12A62C8", Offset = "0x12A62C8", VA = "0x12A62C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x12A63A8", Offset = "0x12A63A8", VA = "0x12A63A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x12A6760", Offset = "0x12A6760", VA = "0x12A6760")]
		private void OnAnimatorIK()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x12A6C44", Offset = "0x12A6C44", VA = "0x12A6C44")]
		public CharacterIK()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class CharacterYOffset : MonoBehaviour
	{
		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x1536174", Offset = "0x1536174", VA = "0x1536174")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x1536244", Offset = "0x1536244", VA = "0x1536244")]
		public CharacterYOffset()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class Climbable : Grabbable
	{
		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x153624C", Offset = "0x153624C", VA = "0x153624C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x1536274", Offset = "0x1536274", VA = "0x1536274", Slot = "9")]
		public override void GrabItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x153697C", Offset = "0x153697C", VA = "0x153697C", Slot = "13")]
		public override void DropItem(Grabber droppedBy)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x1536A50", Offset = "0x1536A50", VA = "0x1536A50", Slot = "11")]
		public override void DropItem(Grabber droppedBy, bool resetVelocity, bool resetParent)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x1536F18", Offset = "0x1536F18", VA = "0x1536F18")]
		public Climbable()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class CollisionSound : MonoBehaviour
	{
		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip CollisionAudio;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected AudioSource audioSource;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float startTime;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Collider col;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Grabbable grab;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MinimumVolume;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MaximumVolume;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool RecentlyPlayedSound;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected float lastPlayedSound;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float LastRelativeVelocity;

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x1536F78", Offset = "0x1536F78", VA = "0x1536F78")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x153707C", Offset = "0x153707C", VA = "0x153707C", Slot = "4")]
		public virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x1537404", Offset = "0x1537404", VA = "0x1537404")]
		public void resetLastPlayedSound()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x153740C", Offset = "0x153740C", VA = "0x153740C")]
		public CollisionSound()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class ConstrainLocalPosition : MonoBehaviour
	{
		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ConstrainLocalX;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LocalXMin;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LocalXMax;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool ConstrainLocalY;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LocalYMin;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LocalYMax;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ConstrainLocalZ;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LocalZMin;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float LocalZMax;

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x1537D5C", Offset = "0x1537D5C", VA = "0x1537D5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x1537D60", Offset = "0x1537D60", VA = "0x1537D60")]
		private void doConstrain()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x1537F14", Offset = "0x1537F14", VA = "0x1537F14")]
		public ConstrainLocalPosition()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class DamageCollider : MonoBehaviour
	{
		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Damage;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody ColliderRigidbody;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MinForce;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LastRelativeVelocity;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LastDamageForce;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool TakeCollisionDamage;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float CollisionDamage;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Damageable thisDamageable;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool damageOnce;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool damageOnceDone;

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x1537F30", Offset = "0x1537F30", VA = "0x1537F30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x1537FD8", Offset = "0x1537FD8", VA = "0x1537FD8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x1537FE4", Offset = "0x1537FE4", VA = "0x1537FE4", Slot = "4")]
		public virtual void OnCollisionEvent(Collision collision)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x1538174", Offset = "0x1538174", VA = "0x1538174")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x153817C", Offset = "0x153817C", VA = "0x153817C")]
		public DamageCollider()
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class Damageable : MonoBehaviour
	{
		[Token(Token = "0x200081F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37658", Offset = "0xA37658")]
		private sealed class <RespawnRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x4002EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Damageable <>4__this;

			[Token(Token = "0x1700070B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033B3")]
				[Address(RVA = "0x1538A7C", Offset = "0x1538A7C", VA = "0x1538A7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700070C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033B5")]
				[Address(RVA = "0x1538AE4", Offset = "0x1538AE4", VA = "0x1538AE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033B0")]
			[Address(RVA = "0x1538760", Offset = "0x1538760", VA = "0x1538760")]
			[DebuggerHidden]
			public <RespawnRoutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60033B1")]
			[Address(RVA = "0x15387B0", Offset = "0x15387B0", VA = "0x15387B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033B2")]
			[Address(RVA = "0x15387B4", Offset = "0x15387B4", VA = "0x15387B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033B4")]
			[Address(RVA = "0x1538A84", Offset = "0x1538A84", VA = "0x1538A84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Health;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _startingHealth;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> ActivateGameObjectsOnDeath;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> DeactivateGameObjectsOnDeath;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Collider> DeactivateCollidersOnDeath;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onDestroy;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool DestroyOnDeath;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float DestroyDelay;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool Respawn;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float RespawnTime;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool RemoveBulletHolesOnDeath;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool useVFX;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject vfxObject;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool destroyed;

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x15381A0", Offset = "0x15381A0", VA = "0x15381A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x15381AC", Offset = "0x15381AC", VA = "0x15381AC", Slot = "4")]
		public virtual void DealDamage(float damageAmount)
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x15381D0", Offset = "0x15381D0", VA = "0x15381D0")]
		public void DestroyThis()
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x15386E0", Offset = "0x15386E0", VA = "0x15386E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59B9C", Offset = "0xA59B9C")]
		private IEnumerator RespawnRoutine(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x153878C", Offset = "0x153878C", VA = "0x153878C")]
		public Damageable()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class DestroyObjectWithDelay : MonoBehaviour
	{
		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DestroySeconds;

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x1539F0C", Offset = "0x1539F0C", VA = "0x1539F0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x1539F98", Offset = "0x1539F98", VA = "0x1539F98")]
		public DestroyObjectWithDelay()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public class FollowRigidbody : MonoBehaviour
	{
		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowTransform;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigid;

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x153B070", Offset = "0x153B070", VA = "0x153B070")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x153B0C8", Offset = "0x153B0C8", VA = "0x153B0C8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x153B114", Offset = "0x153B114", VA = "0x153B114")]
		public FollowRigidbody()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class FollowTransform : MonoBehaviour
	{
		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform FollowTarget;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool MatchRotation;

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x153B11C", Offset = "0x153B11C", VA = "0x153B11C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x153B20C", Offset = "0x153B20C", VA = "0x153B20C")]
		public FollowTransform()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class GrabAction : GrabbableEvents
	{
		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabberEvent OnGrabEvent;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Grabbable g;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastGrabTime;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float minTimeBetweenGrabs;

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x153B21C", Offset = "0x153B21C", VA = "0x153B21C", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x153B3C0", Offset = "0x153B3C0", VA = "0x153B3C0")]
		public GrabAction()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class GrabPointTrigger : MonoBehaviour
	{
		[Token(Token = "0x2000820")]
		public enum HandMovement
		{
			[Token(Token = "0x4002EF9")]
			Instant,
			[Token(Token = "0x4002EFA")]
			Lerp,
			[Token(Token = "0x4002EFB")]
			None
		}

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45AEC", Offset = "0xA45AEC")]
		public Grabbable GrabObject;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45B24", Offset = "0xA45B24")]
		public Grabbable OtherGrabbableMustBeHeld;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45B5C", Offset = "0xA45B5C")]
		public HandMovement MoveInStyle;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45B94", Offset = "0xA45B94")]
		public HandMovement MoveOutStyle;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45BCC", Offset = "0xA45BCC")]
		public float HandSpeed;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool LiveUpdateNearestGrabPoint;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Grabber currentGrabber;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _originalTransformParent;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45C04", Offset = "0xA45C04")]
		public List<GrabPoint> GrabPoints;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Grabbable dummyGrabbable;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabPoint closestPoint;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Grabber grabberInTrigger;

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x153B6C0", Offset = "0x153B6C0", VA = "0x153B6C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x153B980", Offset = "0x153B980", VA = "0x153B980")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x153BE98", Offset = "0x153BE98", VA = "0x153BE98", Slot = "4")]
		public virtual void UpdateGrabPoint(GrabPoint newPoint)
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x153C004", Offset = "0x153C004", VA = "0x153C004")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x153C248", Offset = "0x153C248", VA = "0x153C248")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x153BE20", Offset = "0x153BE20", VA = "0x153BE20")]
		private void setGrabber(Grabber theGrabber)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x153C398", Offset = "0x153C398", VA = "0x153C398", Slot = "5")]
		public virtual void ReleaseGrabber()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x153C468", Offset = "0x153C468", VA = "0x153C468")]
		public GrabPointTrigger()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class GrabbableHaptics : GrabbableEvents
	{
		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HapticsOnValidPickup;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HapticsOnValidRemotePickup;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool HapticsOnCollision;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool HapticsOnGrab;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float VibrateFrequency;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float VibrateAmplitude;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float VibrateDuration;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Grabber currentGrabber;

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x1543144", Offset = "0x1543144", VA = "0x1543144", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x1543220", Offset = "0x1543220", VA = "0x1543220", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x1543228", Offset = "0x1543228", VA = "0x1543228", Slot = "6")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x1543238", Offset = "0x1543238", VA = "0x1543238", Slot = "8")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x154316C", Offset = "0x154316C", VA = "0x154316C")]
		private void doHaptics(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x1543248", Offset = "0x1543248", VA = "0x1543248")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x1543384", Offset = "0x1543384", VA = "0x1543384")]
		public GrabbableHaptics()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class GrabbableHighlight : GrabbableEvents
	{
		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Outline outline;

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x15433AC", Offset = "0x15433AC", VA = "0x15433AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x15435E4", Offset = "0x15435E4", VA = "0x15435E4", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x1543680", Offset = "0x1543680", VA = "0x1543680", Slot = "6")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x1543728", Offset = "0x1543728", VA = "0x1543728", Slot = "7")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x1543738", Offset = "0x1543738", VA = "0x1543738", Slot = "8")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x1543748", Offset = "0x1543748", VA = "0x1543748", Slot = "9")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x1543690", Offset = "0x1543690", VA = "0x1543690")]
		public void HighlightItem()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x15435E8", Offset = "0x15435E8", VA = "0x15435E8")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x1543758", Offset = "0x1543758", VA = "0x1543758")]
		public GrabbableHighlight()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class GrabbableHighlightMaterial : GrabbableEvents
	{
		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool HighlightOnGrabbable;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HighlightOnRemoteGrabbable;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45C3C", Offset = "0xA45C3C")]
		public List<Material> StandardMaterials;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45C74", Offset = "0xA45C74")]
		public List<Material> HighlightMaterials;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer Renderer;

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x1543768", Offset = "0x1543768", VA = "0x1543768")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x15438E4", Offset = "0x15438E4", VA = "0x15438E4", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x154399C", Offset = "0x154399C", VA = "0x154399C", Slot = "6")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x1543A60", Offset = "0x1543A60", VA = "0x1543A60", Slot = "7")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x1543A70", Offset = "0x1543A70", VA = "0x1543A70", Slot = "8")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x1543A80", Offset = "0x1543A80", VA = "0x1543A80", Slot = "9")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x15439AC", Offset = "0x15439AC", VA = "0x15439AC")]
		public void HighlightItem()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x15438E8", Offset = "0x15438E8", VA = "0x15438E8")]
		public void UnhighlightItem()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x1543A90", Offset = "0x1543A90", VA = "0x1543A90")]
		public GrabbableHighlightMaterial()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class GrabbableRingHelper : GrabbableEvents
	{
		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool RingOnValidPickup;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool RingOnValidRemotePickup;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RingHelperScale;

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x1543AA0", Offset = "0x1543AA0", VA = "0x1543AA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x1543EE4", Offset = "0x1543EE4", VA = "0x1543EE4")]
		public GrabbableRingHelper()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class LineToTransform : MonoBehaviour
	{
		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ConnectTo;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer line;

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x13D7400", Offset = "0x13D7400", VA = "0x13D7400")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x13D74AC", Offset = "0x13D74AC", VA = "0x13D74AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x13D7578", Offset = "0x13D7578", VA = "0x13D7578")]
		public LineToTransform()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class LookAtTransform : MonoBehaviour
	{
		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LookAt;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UseLerp;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Speed;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UseUpdate;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseLateUpdate;

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x13D7804", Offset = "0x13D7804", VA = "0x13D7804")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x13D7A9C", Offset = "0x13D7A9C", VA = "0x13D7A9C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x13D7814", Offset = "0x13D7814", VA = "0x13D7814")]
		private void lookAt()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x13D7AAC", Offset = "0x13D7AAC", VA = "0x13D7AAC")]
		public LookAtTransform()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class PlaySoundOnGrab : GrabbableEvents
	{
		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip SoundToPlay;

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x13DC494", Offset = "0x13DC494", VA = "0x13DC494", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x13DC568", Offset = "0x13DC568", VA = "0x13DC568")]
		public PlaySoundOnGrab()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class ReturnToSnapZone : MonoBehaviour
	{
		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45CAC", Offset = "0xA45CAC")]
		public SnapZone ReturnTo;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45CE4", Offset = "0xA45CE4")]
		public float LerpSpeed;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45D1C", Offset = "0xA45D1C")]
		public float ReturnDelay;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentDelay;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabbable grab;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody rigid;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool useGravityInitial;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45D54", Offset = "0xA45D54")]
		public float SnapDistance;

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x13E3538", Offset = "0x13E3538", VA = "0x13E3538")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x13E35C0", Offset = "0x13E35C0", VA = "0x13E35C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x13E3710", Offset = "0x13E3710", VA = "0x13E3710")]
		private void moveToSnapZone()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x13E3DBC", Offset = "0x13E3DBC", VA = "0x13E3DBC")]
		public ReturnToSnapZone()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class RotateTowards : MonoBehaviour
	{
		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TargetTransform;

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x13E4384", Offset = "0x13E4384", VA = "0x13E4384")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x13E452C", Offset = "0x13E452C", VA = "0x13E452C")]
		public RotateTowards()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class RotateWithHMD : MonoBehaviour
	{
		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterController Character;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Offset;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float RotateSpeed;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MoveSpeed;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform camTransform;

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x13E4534", Offset = "0x13E4534", VA = "0x13E4534")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x13E4538", Offset = "0x13E4538", VA = "0x13E4538")]
		private void updateBodyPosition()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x13E4870", Offset = "0x13E4870", VA = "0x13E4870")]
		public RotateWithHMD()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class ScaleBetweenPoints : MonoBehaviour
	{
		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Begin;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform End;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DoUpdate;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool DoLateUpdate;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool LookAtTarget;

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x13E48D8", Offset = "0x13E48D8", VA = "0x13E48D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x13E4B2C", Offset = "0x13E4B2C", VA = "0x13E4B2C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x13E48E8", Offset = "0x13E48E8", VA = "0x13E48E8")]
		private void doScale()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x13E4B3C", Offset = "0x13E4B3C", VA = "0x13E4B3C")]
		public ScaleBetweenPoints()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class SnapZoneRingHelper : MonoBehaviour
	{
		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SnapZone Snap;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color RestingColor;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color ValidSnapColor;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RestingScale;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ValidSnapScale;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CanvasScaler ringCanvas;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text ringText;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabbablesInTrigger nearbyGrabbables;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool validSnap;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float ScaleSpeed;

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x13E6B1C", Offset = "0x13E6B1C", VA = "0x13E6B1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x13E6BB0", Offset = "0x13E6BB0", VA = "0x13E6BB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x13E6CCC", Offset = "0x13E6CCC", VA = "0x13E6CCC")]
		private bool checkIsValidSnap()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x13E6DCC", Offset = "0x13E6DCC", VA = "0x13E6DCC")]
		public SnapZoneRingHelper()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class Tooltip : MonoBehaviour
	{
		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 TipOffset;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool UseWorldYAxis;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxViewDistance;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform childTransform;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform DrawLineTo;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineToTransform lineTo;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lookAt;

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x13E7ACC", Offset = "0x13E7ACC", VA = "0x13E7ACC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x13E7BD8", Offset = "0x13E7BD8", VA = "0x13E7BD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x13E7F00", Offset = "0x13E7F00", VA = "0x13E7F00")]
		public Tooltip()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public enum LocomotionType
	{
		[Token(Token = "0x4001DDF")]
		Teleport,
		[Token(Token = "0x4001DE0")]
		SmoothLocomotion,
		[Token(Token = "0x4001DE1")]
		None
	}
	[Token(Token = "0x2000492")]
	public class BNGPlayerController : MonoBehaviour
	{
		[Token(Token = "0x2000821")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37668", Offset = "0xA37668")]
		private sealed class <WaitAndSetGravity>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BNGPlayerController <>4__this;

			[Token(Token = "0x1700070D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033B9")]
				[Address(RVA = "0x12A2B74", Offset = "0x12A2B74", VA = "0x12A2B74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700070E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033BB")]
				[Address(RVA = "0x12A2BDC", Offset = "0x12A2BDC", VA = "0x12A2BDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033B6")]
			[Address(RVA = "0x12A1480", Offset = "0x12A1480", VA = "0x12A1480")]
			[DebuggerHidden]
			public <WaitAndSetGravity>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x60033B7")]
			[Address(RVA = "0x12A2A70", Offset = "0x12A2A70", VA = "0x12A2A70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033B8")]
			[Address(RVA = "0x12A2A74", Offset = "0x12A2A74", VA = "0x12A2A74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033BA")]
			[Address(RVA = "0x12A2B7C", Offset = "0x12A2B7C", VA = "0x12A2B7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected LocomotionType selectedLocomotion;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45D9C", Offset = "0xA45D9C")]
		public bool RotateCharacterWithCamera;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45DD4", Offset = "0xA45DD4")]
		public bool MoveCharacterWithCamera;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45E0C", Offset = "0xA45E0C")]
		public Transform TrackingSpace;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45E44", Offset = "0xA45E44")]
		public Transform CameraRig;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45E7C", Offset = "0xA45E7C")]
		public Transform CenterEyeAnchor;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool GrippingClimbable;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool GravityEnabled;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float GravityAmount;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45EB4", Offset = "0xA45EB4")]
		public LayerMask GroundedLayers;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 moveDirection;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float DistanceFromGround;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45EFC", Offset = "0xA45EFC")]
		public float MinimumCapsuleHeight;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45F34", Offset = "0xA45F34")]
		public float MaximumCapsuleHeight;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float CharacterControllerYOffset;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45F6C", Offset = "0xA45F6C")]
		public float MinElevation;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float MaxElevation;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45FA4", Offset = "0xA45FA4")]
		public float ClimbingCapsuleHeight;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA45FDC", Offset = "0xA45FDC")]
		public float ClimbingCapsuleCenter;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public float LastTeleportTime;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public float LastPlayerMoveTime;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float CameraHeight;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46044", Offset = "0xA46044")]
		public bool ElevateCameraIfNoHMDPresent;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4607C", Offset = "0xA4607C")]
		public float ElevateCameraHeight;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected List<Grabber> climbers;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected CharacterController characterController;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected PlayerTeleport teleport;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected SmoothLocomotion smoothLocomotion;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected PlayerRotation playerRotation;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RaycastHit groundHit;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Transform mainCamera;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Vector3 lastPlayerPosition;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected Quaternion lastPlayerRotation;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected float lastSnapTime;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected float _initialGravityModifier;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected Vector3 _initialPosition;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected Transform _initialCharacterParent;

		[Token(Token = "0x170002A4")]
		public LocomotionType SelectedLocomotion
		{
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x12A06D0", Offset = "0x12A06D0", VA = "0x12A06D0")]
			get
			{
				return default(LocomotionType);
			}
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x12A06D8", Offset = "0x12A06D8", VA = "0x12A06D8", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x12A0C14", Offset = "0x12A0C14", VA = "0x12A0C14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x12A1248", Offset = "0x12A1248", VA = "0x12A1248")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x12A1410", Offset = "0x12A1410", VA = "0x12A1410")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59C00", Offset = "0xA59C00")]
		private IEnumerator WaitAndSetGravity()
		{
			return null;
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x12A14AC", Offset = "0x12A14AC", VA = "0x12A14AC", Slot = "5")]
		public virtual void UpdateDistanceFromGround()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x12A1768", Offset = "0x12A1768", VA = "0x12A1768", Slot = "6")]
		public virtual void RotateTrackingSpaceToCamera()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x12A18D4", Offset = "0x12A18D4", VA = "0x12A18D4", Slot = "7")]
		public virtual void UpdateLastSnapTime()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x12A18FC", Offset = "0x12A18FC", VA = "0x12A18FC", Slot = "8")]
		public virtual bool RecentlyMoved()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x12A1AC8", Offset = "0x12A1AC8", VA = "0x12A1AC8", Slot = "9")]
		public virtual void UpdateCameraRigPosition()
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x12A1D88", Offset = "0x12A1D88", VA = "0x12A1D88", Slot = "10")]
		public virtual void UpdateCharacterHeight()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x12A1F08", Offset = "0x12A1F08", VA = "0x12A1F08", Slot = "11")]
		public virtual void UpdateCameraHeight()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x12A1F94", Offset = "0x12A1F94", VA = "0x12A1F94", Slot = "12")]
		public virtual void CheckCharacterCollisionMove()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x12A1C3C", Offset = "0x12A1C3C", VA = "0x12A1C3C")]
		public bool grippingAtLeastOneClimbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x12A0E88", Offset = "0x12A0E88", VA = "0x12A0E88")]
		protected void checkClimbing()
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x12A2134", Offset = "0x12A2134", VA = "0x12A2134", Slot = "13")]
		public virtual void checkMovingPlatform()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x12A2350", Offset = "0x12A2350", VA = "0x12A2350")]
		public void ChangeWalkSpeed(bool change)
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x12A2370", Offset = "0x12A2370", VA = "0x12A2370", Slot = "14")]
		public virtual void ChangeLocomotionType(LocomotionType loc)
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x12A24B0", Offset = "0x12A24B0", VA = "0x12A24B0", Slot = "15")]
		public virtual void toggleTeleport(bool enabled)
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x12A24DC", Offset = "0x12A24DC", VA = "0x12A24DC", Slot = "16")]
		public virtual void toggleSmoothLocomotion(bool enabled)
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x12A2580", Offset = "0x12A2580", VA = "0x12A2580")]
		public void ToggleLocomotionType()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x12A25A8", Offset = "0x12A25A8", VA = "0x12A25A8")]
		public bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x12A2654", Offset = "0x12A2654", VA = "0x12A2654")]
		public void ToggleGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x12A2674", Offset = "0x12A2674", VA = "0x12A2674")]
		public void AddClimber(Climbable climbable, Grabber grab)
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x12A28AC", Offset = "0x12A28AC", VA = "0x12A28AC")]
		public void RemoveClimber(Grabber grab)
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x12A29A8", Offset = "0x12A29A8", VA = "0x12A29A8")]
		public BNGPlayerController()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class Button : MonoBehaviour
	{
		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA460B4", Offset = "0xA460B4")]
		public float MinLocalY;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA460EC", Offset = "0xA460EC")]
		public float MaxLocalY;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46124", Offset = "0xA46124")]
		public float ClickTolerance;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4615C", Offset = "0xA4615C")]
		public bool AllowPhysicsForces;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Grabber> grabbers;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SpringJoint joint;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool clickingDown;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip ButtonClick;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ButtonClickUp;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onButtonDown;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onButtonUp;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigid;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float ButtonSpeed;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float SpringForce;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 buttonDownPosition;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 buttonUpPosition;

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x12A4CCC", Offset = "0x12A4CCC", VA = "0x12A4CCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x12A4E24", Offset = "0x12A4E24", VA = "0x12A4E24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x12A5148", Offset = "0x12A5148", VA = "0x12A5148", Slot = "4")]
		public virtual Vector3 GetButtonUpPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x12A51D0", Offset = "0x12A51D0", VA = "0x12A51D0", Slot = "5")]
		public virtual Vector3 GetButtonDownPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x12A5258", Offset = "0x12A5258", VA = "0x12A5258", Slot = "6")]
		public virtual void OnButtonDown()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x12A5344", Offset = "0x12A5344", VA = "0x12A5344", Slot = "7")]
		public virtual void OnButtonUp()
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x12A5430", Offset = "0x12A5430", VA = "0x12A5430")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x12A554C", Offset = "0x12A554C", VA = "0x12A554C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x12A5638", Offset = "0x12A5638", VA = "0x12A5638")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x12A5834", Offset = "0x12A5834", VA = "0x12A5834")]
		public Button()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class GrabPoint : MonoBehaviour
	{
		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandPoseId HandPose;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46194", Offset = "0xA46194")]
		public bool LeftHandIsValid;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA461CC", Offset = "0xA461CC")]
		public bool RightHandIsValid;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46204", Offset = "0xA46204")]
		public Transform HandPosition;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4623C", Offset = "0xA4623C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4623C", Offset = "0xA4623C")]
		public float MaxDegreeDifferenceAllowed;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46294", Offset = "0xA46294")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA46294", Offset = "0xA46294")]
		public float IndexBlendMin;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA462E8", Offset = "0xA462E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA462E8", Offset = "0xA462E8")]
		public float IndexBlendMax;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4633C", Offset = "0xA4633C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4633C", Offset = "0xA4633C")]
		public float ThumbBlendMin;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46390", Offset = "0xA46390")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA46390", Offset = "0xA46390")]
		public float ThumbBlendMax;

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x153B3D4", Offset = "0x153B3D4", VA = "0x153B3D4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x153B4B4", Offset = "0x153B4B4", VA = "0x153B4B4")]
		public void UpdatePreviewTransforms()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x153B3F8", Offset = "0x153B3F8", VA = "0x153B3F8")]
		private void updateChildAnimators()
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x153B6A8", Offset = "0x153B6A8", VA = "0x153B6A8")]
		public GrabPoint()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public enum GrabType
	{
		[Token(Token = "0x4001E22")]
		Snap,
		[Token(Token = "0x4001E23")]
		Precise
	}
	[Token(Token = "0x2000496")]
	public enum HoldType
	{
		[Token(Token = "0x4001E25")]
		HoldDown,
		[Token(Token = "0x4001E26")]
		Toggle
	}
	[Token(Token = "0x2000497")]
	public enum GrabPhysics
	{
		[Token(Token = "0x4001E28")]
		PhysicsJoint,
		[Token(Token = "0x4001E29")]
		Kinematic,
		[Token(Token = "0x4001E2A")]
		None
	}
	[Token(Token = "0x2000498")]
	public enum OtherGrabBehavior
	{
		[Token(Token = "0x4001E2C")]
		None,
		[Token(Token = "0x4001E2D")]
		SwapHands,
		[Token(Token = "0x4001E2E")]
		DualGrab
	}
	[Token(Token = "0x2000499")]
	public class Grabbable : MonoBehaviour
	{
		[Token(Token = "0x2000822")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37678", Offset = "0xA37678")]
		private sealed class <Release>d__116 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable <>4__this;

			[Token(Token = "0x4002F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 velocity;

			[Token(Token = "0x4002F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 angularVelocity;

			[Token(Token = "0x1700070F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033BF")]
				[Address(RVA = "0x1541DB4", Offset = "0x1541DB4", VA = "0x1541DB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000710")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033C1")]
				[Address(RVA = "0x1541E1C", Offset = "0x1541E1C", VA = "0x1541E1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033BC")]
			[Address(RVA = "0x1541498", Offset = "0x1541498", VA = "0x1541498")]
			[DebuggerHidden]
			public <Release>d__116(int <>1__state)
			{
			}

			[Token(Token = "0x60033BD")]
			[Address(RVA = "0x1541C18", Offset = "0x1541C18", VA = "0x1541C18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033BE")]
			[Address(RVA = "0x1541C1C", Offset = "0x1541C1C", VA = "0x1541C1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033C0")]
			[Address(RVA = "0x1541DBC", Offset = "0x1541DBC", VA = "0x1541DBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool BeingHeld;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Grabber> validGrabbers;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected List<Grabber> heldByGrabbers;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool wasKinematic;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		protected bool usedGravity;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private CollisionDetectionMode initialCollisionMode;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RigidbodyInterpolation initialInterpolationMode;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected bool remoteGrabbing;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA463E4", Offset = "0xA463E4")]
		public GrabButton GrabButton;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4641C", Offset = "0xA4641C")]
		public HoldType Grabtype;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46454", Offset = "0xA46454")]
		public GrabPhysics GrabPhysics;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4648C", Offset = "0xA4648C")]
		public GrabType GrabMechanic;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA464C4", Offset = "0xA464C4")]
		public float GrabSpeed;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA464FC", Offset = "0xA464FC")]
		public bool RemoteGrabbable;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46534", Offset = "0xA46534")]
		public float RemoteGrabDistance;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4656C", Offset = "0xA4656C")]
		public float ThrowForceMultiplier;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA465A4", Offset = "0xA465A4")]
		public float ThrowForceMultiplierAngular;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA465DC", Offset = "0xA465DC")]
		public float BreakDistance;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46614", Offset = "0xA46614")]
		public bool HideHandGraphics;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4664C", Offset = "0xA4664C")]
		public bool ParentToHands;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46684", Offset = "0xA46684")]
		public bool ParentHandModel;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA466BC", Offset = "0xA466BC")]
		public bool SnapHandModel;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA466F4", Offset = "0xA466F4")]
		public bool ForceDisableKinematicOnDrop;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4672C", Offset = "0xA4672C")]
		public HandPoseId CustomHandPose;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private HandPoseId initialHandPoseId;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46764", Offset = "0xA46764")]
		public OtherGrabBehavior SecondaryGrabBehavior;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4679C", Offset = "0xA4679C")]
		public Grabbable OtherGrabbableMustBeGrabbed;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA467D4", Offset = "0xA467D4")]
		public float CollisionSpring;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4680C", Offset = "0xA4680C")]
		public float CollisionSlerp;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46844", Offset = "0xA46844")]
		public ConfigurableJointMotion CollisionLinearMotionX;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4687C", Offset = "0xA4687C")]
		public ConfigurableJointMotion CollisionLinearMotionY;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA468B4", Offset = "0xA468B4")]
		public ConfigurableJointMotion CollisionLinearMotionZ;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA468EC", Offset = "0xA468EC")]
		public ConfigurableJointMotion CollisionAngularMotionX;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46924", Offset = "0xA46924")]
		public ConfigurableJointMotion CollisionAngularMotionY;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4695C", Offset = "0xA4695C")]
		public ConfigurableJointMotion CollisionAngularMotionZ;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46994", Offset = "0xA46994")]
		public bool ApplyCorrectiveForce;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA469CC", Offset = "0xA469CC")]
		public bool CanBeDropped;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46A04", Offset = "0xA46A04")]
		public bool CanBeSnappedToSnapZone;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public float LastGrabTime;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public float LastDropTime;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public bool AddControllerVelocityOnDrop;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float journeyLength;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA46A6C", Offset = "0xA46A6C")]
		private float <OriginalScale>k__BackingField;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<Collider> collisions;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float lastCollisionSeconds;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float lastNoCollisionSeconds;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float requestSpringTime;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform primaryGrabOffset;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public GrabPoint ActiveGrabPoint;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46A8C", Offset = "0xA46A8C")]
		public Grabbable SecondaryGrabbable;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46AC4", Offset = "0xA46AC4")]
		public float SecondHandLookSpeed;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public Vector3 SecondaryLookOffset;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public Transform SecondaryLookAtTransform;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public Transform LocalOffsetTransform;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Transform _grabTransform;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46B2C", Offset = "0xA46B2C")]
		public List<Transform> GrabPoints;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Transform originalParent;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private InputBridge input;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ConfigurableJoint connectedJoint;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 previousPosition;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float lastItemTeleportTime;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool recentlyTeleported;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private BNGPlayerController _player;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Collider col;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected Rigidbody rigid;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected Grabber flyingTo;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected List<GrabbableEvents> events;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool didParentHands;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		private bool quitting;

		[Token(Token = "0x170002A5")]
		public float OriginalScale
		{
			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0x153C480", Offset = "0x153C480", VA = "0x153C480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59C64", Offset = "0xA59C64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0x153C488", Offset = "0x153C488", VA = "0x153C488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59C74", Offset = "0xA59C74")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		private bool grabbingTwoHands
		{
			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0x153C490", Offset = "0x153C490", VA = "0x153C490")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A7")]
		private Vector3 grabPosition
		{
			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0x153C528", Offset = "0x153C528", VA = "0x153C528")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002A8")]
		[HideInInspector]
		public Vector3 GrabPositionOffset
		{
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0x1539D7C", Offset = "0x1539D7C", VA = "0x1539D7C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002A9")]
		[HideInInspector]
		public Vector3 GrabRotationOffset
		{
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0x153C5C0", Offset = "0x153C5C0", VA = "0x153C5C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002AA")]
		public Transform grabTransform
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x153C680", Offset = "0x153C680", VA = "0x153C680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		protected BNGPlayerController player
		{
			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0x15362C8", Offset = "0x15362C8", VA = "0x15362C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x153C7C0", Offset = "0x153C7C0", VA = "0x153C7C0", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x153CC04", Offset = "0x153CC04", VA = "0x153CC04", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x153E8F0", Offset = "0x153E8F0", VA = "0x153E8F0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x153D2C8", Offset = "0x153D2C8", VA = "0x153D2C8")]
		protected Vector3 getGrabberWithOffsetWorldPosition(Grabber grabber)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x153E230", Offset = "0x153E230", VA = "0x153E230")]
		private void positionHandGraphics()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x153E9A8", Offset = "0x153E9A8", VA = "0x153E9A8", Slot = "6")]
		public virtual bool IsGrabbable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x153EA60", Offset = "0x153EA60", VA = "0x153EA60", Slot = "7")]
		public virtual void UpdatePhysicsJoints()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x153F198", Offset = "0x153F198", VA = "0x153F198")]
		private void moveWithVelocity()
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x153F348", Offset = "0x153F348", VA = "0x153F348")]
		private void rotateWithVelocity()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x153F588", Offset = "0x153F588", VA = "0x153F588", Slot = "8")]
		public virtual void UpdateKinematicPhysics()
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x153DE94", Offset = "0x153DE94", VA = "0x153DE94")]
		private void checkParentHands()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x153FD88", Offset = "0x153FD88", VA = "0x153FD88")]
		private bool canBeMoved()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x153E304", Offset = "0x153E304", VA = "0x153E304")]
		private void checkSecondaryLook()
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x153FF14", Offset = "0x153FF14", VA = "0x153FF14")]
		private void rotateGrabber(bool lerp = false)
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x1540200", Offset = "0x1540200", VA = "0x1540200")]
		public Transform GetGrabPoint()
		{
			return null;
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x15362D8", Offset = "0x15362D8", VA = "0x15362D8", Slot = "9")]
		public virtual void GrabItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x1540488", Offset = "0x1540488", VA = "0x1540488", Slot = "10")]
		public virtual void GrabRemoteItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x1540208", Offset = "0x1540208", VA = "0x1540208")]
		public void ResetGrabbing()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x1536B18", Offset = "0x1536B18", VA = "0x1536B18", Slot = "11")]
		public virtual void DropItem(Grabber droppedBy, bool resetVelocity, bool resetParent)
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x15408E0", Offset = "0x15408E0", VA = "0x15408E0", Slot = "12")]
		public virtual void DropItem(Grabber droppedBy, bool resetVelocity, bool resetParent, float dropMod)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x15400F4", Offset = "0x15400F4", VA = "0x15400F4")]
		private Vector3 angleLerp(Vector3 startAngle, Vector3 finishAngle, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x153FE1C", Offset = "0x153FE1C", VA = "0x153FE1C")]
		private void clearLookAtTransform()
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x153D9FC", Offset = "0x153D9FC", VA = "0x153D9FC")]
		private void callEvents(Grabber g)
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x1536A3C", Offset = "0x1536A3C", VA = "0x1536A3C", Slot = "13")]
		public virtual void DropItem(Grabber droppedBy)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x1540D08", Offset = "0x1540D08", VA = "0x1540D08", Slot = "14")]
		public virtual void DropItem(bool resetVelocity, bool resetParent)
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x1540D60", Offset = "0x1540D60", VA = "0x1540D60")]
		public void ResetScale()
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x1540608", Offset = "0x1540608", VA = "0x1540608")]
		public void ResetParent()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x1540DCC", Offset = "0x1540DCC", VA = "0x1540DCC")]
		public void UpdateOriginalParent(Transform newOriginalParent)
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x153A260", Offset = "0x153A260", VA = "0x153A260")]
		public void UpdateOriginalParent()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x1540DD4", Offset = "0x1540DD4", VA = "0x1540DD4")]
		public ControllerHand GetControllerHand(Grabber g)
		{
			return default(ControllerHand);
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x1540E5C", Offset = "0x1540E5C", VA = "0x1540E5C", Slot = "15")]
		public virtual Grabber GetPrimaryGrabber()
		{
			return null;
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x1540F64", Offset = "0x1540F64", VA = "0x1540F64", Slot = "16")]
		public virtual Grabber GetClosestGrabber()
		{
			return null;
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x15410EC", Offset = "0x15410EC", VA = "0x15410EC", Slot = "17")]
		public virtual Transform GetClosestGrabPoint(Grabber grabber)
		{
			return null;
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x15413EC", Offset = "0x15413EC", VA = "0x15413EC", Slot = "18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59C84", Offset = "0xA59C84")]
		public virtual IEnumerator Release(Vector3 velocity, Vector3 angularVelocity)
		{
			return null;
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x15414C4", Offset = "0x15414C4", VA = "0x15414C4", Slot = "19")]
		public virtual bool IsValidCollision(Collision collision)
		{
			return default(bool);
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x153FC7C", Offset = "0x153FC7C", VA = "0x153FC7C")]
		private void parentHandGraphics(Grabber g)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x154038C", Offset = "0x154038C", VA = "0x154038C")]
		private void setupConfigJoint(Grabber g)
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x154063C", Offset = "0x154063C", VA = "0x154063C")]
		private void removeConfigJoint()
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x15402C4", Offset = "0x15402C4", VA = "0x15402C4")]
		private void addGrabber(Grabber g)
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x1540710", Offset = "0x1540710", VA = "0x1540710")]
		private void removeGrabber(Grabber g)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x153D6A8", Offset = "0x153D6A8", VA = "0x153D6A8")]
		private void movePosition(Vector3 worldPosition)
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x153D788", Offset = "0x153D788", VA = "0x153D788")]
		private void moveRotation(Quaternion worldRotation)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x153FA44", Offset = "0x153FA44", VA = "0x153FA44")]
		private Vector3 getRemotePosition(Grabber toGrabber)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x153D46C", Offset = "0x153D46C", VA = "0x153D46C")]
		protected Quaternion getRemoteRotation(Grabber grabber)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x153D874", Offset = "0x153D874", VA = "0x153D874")]
		private void filterCollisions()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x154161C", Offset = "0x154161C", VA = "0x154161C", Slot = "20")]
		public virtual BNGPlayerController GetBNGPlayerController()
		{
			return null;
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x154173C", Offset = "0x154173C", VA = "0x154173C", Slot = "21")]
		public virtual void RequestSpringTime(float seconds)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x1541780", Offset = "0x1541780", VA = "0x1541780", Slot = "22")]
		public virtual void AddValidGrabber(Grabber grabber)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x1541848", Offset = "0x1541848", VA = "0x1541848", Slot = "23")]
		public virtual void RemoveValidGrabber(Grabber grabber)
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x15418E0", Offset = "0x15418E0", VA = "0x15418E0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x15419C0", Offset = "0x15419C0", VA = "0x15419C0")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x1541AA0", Offset = "0x1541AA0", VA = "0x1541AA0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x1541AAC", Offset = "0x1541AAC", VA = "0x1541AAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x1541AD8", Offset = "0x1541AD8", VA = "0x1541AD8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x1536F1C", Offset = "0x1536F1C", VA = "0x1536F1C")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class GrabbableChild : MonoBehaviour
	{
		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46B64", Offset = "0xA46B64")]
		public Grabbable ParentGrabbable;

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x1541E24", Offset = "0x1541E24", VA = "0x1541E24")]
		public GrabbableChild()
		{
		}
	}
	[Token(Token = "0x200049B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34B60", Offset = "0xA34B60")]
	public abstract class GrabbableEvents : MonoBehaviour
	{
		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Grabbable grab;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Grabber thisGrabber;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected InputBridge input;

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x1541E7C", Offset = "0x1541E7C", VA = "0x1541E7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x1541EFC", Offset = "0x1541EFC", VA = "0x1541EFC", Slot = "4")]
		public virtual void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x1541F04", Offset = "0x1541F04", VA = "0x1541F04", Slot = "5")]
		public virtual void OnRelease()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x1541F08", Offset = "0x1541F08", VA = "0x1541F08", Slot = "6")]
		public virtual void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x1541F0C", Offset = "0x1541F0C", VA = "0x1541F0C", Slot = "7")]
		public virtual void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x1541F10", Offset = "0x1541F10", VA = "0x1541F10", Slot = "8")]
		public virtual void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x1541F14", Offset = "0x1541F14", VA = "0x1541F14", Slot = "9")]
		public virtual void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x1541F18", Offset = "0x1541F18", VA = "0x1541F18", Slot = "10")]
		public virtual void OnGrip(float gripValue)
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x153AF70", Offset = "0x153AF70", VA = "0x153AF70", Slot = "11")]
		public virtual void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x1541F1C", Offset = "0x1541F1C", VA = "0x1541F1C", Slot = "12")]
		public virtual void OnTriggerDown()
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x153AFBC", Offset = "0x153AFBC", VA = "0x153AFBC", Slot = "13")]
		public virtual void OnTriggerUp()
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x1541F20", Offset = "0x1541F20", VA = "0x1541F20", Slot = "14")]
		public virtual void OnButton1()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x1541F24", Offset = "0x1541F24", VA = "0x1541F24", Slot = "15")]
		public virtual void OnButton1Down()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x1541F28", Offset = "0x1541F28", VA = "0x1541F28", Slot = "16")]
		public virtual void OnButton1Up()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x1541F2C", Offset = "0x1541F2C", VA = "0x1541F2C", Slot = "17")]
		public virtual void OnButton2()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x1541F30", Offset = "0x1541F30", VA = "0x1541F30", Slot = "18")]
		public virtual void OnButton2Down()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x1541F34", Offset = "0x1541F34", VA = "0x1541F34", Slot = "19")]
		public virtual void OnButton2Up()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x153AFC8", Offset = "0x153AFC8", VA = "0x153AFC8")]
		protected GrabbableEvents()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049C")]
	public class FloatEvent : UnityEvent<float>
	{
		[Token(Token = "0x6002035")]
		[Address(RVA = "0x153AFD0", Offset = "0x153AFD0", VA = "0x153AFD0")]
		public FloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049D")]
	public class FloatFloatEvent : UnityEvent<float, float>
	{
		[Token(Token = "0x6002036")]
		[Address(RVA = "0x153B020", Offset = "0x153B020", VA = "0x153B020")]
		public FloatFloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049E")]
	public class GrabberEvent : UnityEvent<Grabber>
	{
		[Token(Token = "0x6002037")]
		[Address(RVA = "0x15479CC", Offset = "0x15479CC", VA = "0x15479CC")]
		public GrabberEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200049F")]
	public class GrabbableEvent : UnityEvent<Grabbable>
	{
		[Token(Token = "0x6002038")]
		[Address(RVA = "0x1541E2C", Offset = "0x1541E2C", VA = "0x1541E2C")]
		public GrabbableEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A0")]
	public class RaycastHitEvent : UnityEvent<RaycastHit>
	{
		[Token(Token = "0x6002039")]
		[Address(RVA = "0x13E05A4", Offset = "0x13E05A4", VA = "0x13E05A4")]
		public RaycastHitEvent()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class GrabbableUnityEvents : GrabbableEvents
	{
		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrabberEvent onGrab;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onRelease;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onBecomesClosestGrabbable;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onNoLongerClosestGrabbable;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onBecomesClosestRemoteGrabbable;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onNoLongerClosestRemoteGrabbable;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatEvent onGrip;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FloatEvent onTrigger;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onButton1;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onButton1Down;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent onButton1Up;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEvent onButton2;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEvent onButton2Down;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent onButton2Up;

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x1543F00", Offset = "0x1543F00", VA = "0x1543F00", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x1543F78", Offset = "0x1543F78", VA = "0x1543F78", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x1543F8C", Offset = "0x1543F8C", VA = "0x1543F8C", Slot = "6")]
		public override void OnBecomesClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x1543FA0", Offset = "0x1543FA0", VA = "0x1543FA0", Slot = "7")]
		public override void OnNoLongerClosestGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x1543FB4", Offset = "0x1543FB4", VA = "0x1543FB4", Slot = "8")]
		public override void OnBecomesClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x1543FC8", Offset = "0x1543FC8", VA = "0x1543FC8", Slot = "9")]
		public override void OnNoLongerClosestRemoteGrabbable(ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x1543FDC", Offset = "0x1543FDC", VA = "0x1543FDC", Slot = "10")]
		public override void OnGrip(float gripValue)
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x1544050", Offset = "0x1544050", VA = "0x1544050", Slot = "11")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x15440C4", Offset = "0x15440C4", VA = "0x15440C4", Slot = "12")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x15440D8", Offset = "0x15440D8", VA = "0x15440D8", Slot = "13")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x15440EC", Offset = "0x15440EC", VA = "0x15440EC", Slot = "14")]
		public override void OnButton1()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x1544100", Offset = "0x1544100", VA = "0x1544100", Slot = "15")]
		public override void OnButton1Down()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x1544114", Offset = "0x1544114", VA = "0x1544114", Slot = "16")]
		public override void OnButton1Up()
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x1544128", Offset = "0x1544128", VA = "0x1544128", Slot = "17")]
		public override void OnButton2()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x154413C", Offset = "0x154413C", VA = "0x154413C", Slot = "18")]
		public override void OnButton2Down()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x1544150", Offset = "0x1544150", VA = "0x1544150", Slot = "19")]
		public override void OnButton2Up()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x1544164", Offset = "0x1544164", VA = "0x1544164")]
		public GrabbableUnityEvents()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class GrabbablesInTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Collider, Grabbable> NearbyGrabbables;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<Collider, Grabbable> ValidGrabbables;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable ClosestGrabbable;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<Collider, Grabbable> ValidRemoteGrabbables;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Grabbable ClosestRemoteGrabbable;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool FireGrabbableEvents;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Grabbable _closest;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float _lastDistance;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected float _thisDistance;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Dictionary<Collider, Grabbable> _valids;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Dictionary<Collider, Grabbable> _filtered;

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x154416C", Offset = "0x154416C", VA = "0x154416C", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x154420C", Offset = "0x154420C", VA = "0x154420C")]
		private void Update()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x1544238", Offset = "0x1544238", VA = "0x1544238")]
		private void updateClosestGrabbable()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x15446F0", Offset = "0x15446F0", VA = "0x15446F0", Slot = "5")]
		public virtual void updateClosestRemoteGrabbables()
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x1544788", Offset = "0x1544788", VA = "0x1544788", Slot = "6")]
		public virtual Grabbable GetClosestGrabbable(Dictionary<Collider, Grabbable> grabbables, bool remoteOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x1544550", Offset = "0x1544550", VA = "0x1544550")]
		private Dictionary<Collider, Grabbable> getValidGrabbables(Dictionary<Collider, Grabbable> grabs)
		{
			return null;
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x1544A28", Offset = "0x1544A28", VA = "0x1544A28", Slot = "7")]
		protected virtual bool isValidGrabbale(Collider col, Grabbable grab)
		{
			return default(bool);
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x154428C", Offset = "0x154428C", VA = "0x154428C")]
		private Dictionary<Collider, Grabbable> sanitizeGrabbables(Dictionary<Collider, Grabbable> grabs)
		{
			return null;
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x1544CA0", Offset = "0x1544CA0", VA = "0x1544CA0", Slot = "8")]
		public virtual void AddNearbyGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x1544D74", Offset = "0x1544D74", VA = "0x1544D74", Slot = "9")]
		public virtual void RemoveNearbyGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x1544E44", Offset = "0x1544E44", VA = "0x1544E44", Slot = "10")]
		public virtual void RemoveNearbyGrabbable(Grabbable grabObject)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x1544FC8", Offset = "0x1544FC8", VA = "0x1544FC8", Slot = "11")]
		public virtual void AddValidRemoteGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x1545230", Offset = "0x1545230", VA = "0x1545230", Slot = "12")]
		public virtual void RemoveValidRemoteGrabbable(Collider col, Grabbable grabObject)
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x1545300", Offset = "0x1545300", VA = "0x1545300")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x1545458", Offset = "0x1545458", VA = "0x1545458")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1545580", Offset = "0x1545580", VA = "0x1545580")]
		public GrabbablesInTrigger()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34BC4", Offset = "0xA34BC4")]
	public class Grabber : MonoBehaviour
	{
		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46B9C", Offset = "0xA46B9C")]
		public ControllerHand HandSide;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46BD4", Offset = "0xA46BD4")]
		public float GripAmount;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46C0C", Offset = "0xA46C0C")]
		public float ReleaseGripAmount;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46C44", Offset = "0xA46C44")]
		public bool UseOVRControllerVelocity;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46C7C", Offset = "0xA46C7C")]
		public bool UseOVRControllerAngularVelocity;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46CB4", Offset = "0xA46CB4")]
		public Grabbable HeldGrabbable;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabbable previousClosest;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Grabbable previousClosestRemote;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float LastDropTime;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GrabbablesInTrigger grabsInTrigger;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Grabbable flyingGrabbable;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float flyingTime;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform HandsGraphics;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform handsGraphicsParent;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 handsGraphicsPosition;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion handsGraphicsRotation;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA46CEC", Offset = "0xA46CEC")]
		private Vector3 <handsGraphicsGrabberOffset>k__BackingField;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA46CFC", Offset = "0xA46CFC")]
		private Vector3 <handsGraphicsGrabberOffsetRotation>k__BackingField;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46D0C", Offset = "0xA46D0C")]
		public Grabbable EquipGrabbableOnStart;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public bool ForceGrab;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[HideInInspector]
		public bool ForceRelease;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public Vector3 PreviousPosition;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3 previousPosition;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected Vector3 velocity;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Transform DummyTransform;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float averageVelocityCount;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected List<Vector3> previousVelocities;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<Vector3> previousAngularVelocities;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion previousRotation;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 angularVelocity;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Rigidbody rb;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private InputBridge input;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private ConfigurableJoint joint;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool FreshGrip;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46D94", Offset = "0xA46D94")]
		public float GrabCheckSeconds;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float currentGrabTime;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GameObject playSpace;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GrabbableEvent onGrabEvent;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public GrabbableEvent onReleaseEvent;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float angle;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private Vector3 axis;

		[Token(Token = "0x170002AC")]
		public virtual bool HoldingItem
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0x1545590", Offset = "0x1545590", VA = "0x1545590", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AD")]
		public bool RemoteGrabbingItem
		{
			[Token(Token = "0x600205C")]
			[Address(RVA = "0x153B350", Offset = "0x153B350", VA = "0x153B350")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AE")]
		public Vector3 handsGraphicsGrabberOffset
		{
			[Token(Token = "0x600205D")]
			[Address(RVA = "0x1545600", Offset = "0x1545600", VA = "0x1545600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59CE8", Offset = "0xA59CE8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600205E")]
			[Address(RVA = "0x154560C", Offset = "0x154560C", VA = "0x154560C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59CF8", Offset = "0xA59CF8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public Vector3 handsGraphicsGrabberOffsetRotation
		{
			[Token(Token = "0x600205F")]
			[Address(RVA = "0x1545618", Offset = "0x1545618", VA = "0x1545618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59D08", Offset = "0xA59D08")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002060")]
			[Address(RVA = "0x1545624", Offset = "0x1545624", VA = "0x1545624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59D18", Offset = "0xA59D18")]
			private set
			{
			}
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x1545630", Offset = "0x1545630", VA = "0x1545630", Slot = "5")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x1545A7C", Offset = "0x1545A7C", VA = "0x1545A7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x1545C64", Offset = "0x1545C64", VA = "0x1545C64")]
		private void updateFreshGrabStatus()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x1545CE4", Offset = "0x1545CE4", VA = "0x1545CE4")]
		private void checkGrabbableEvents()
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x1546360", Offset = "0x1546360", VA = "0x1546360", Slot = "6")]
		protected virtual void updateVelocities()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x15466B0", Offset = "0x15466B0", VA = "0x15466B0", Slot = "7")]
		public virtual bool inputCheckGrab()
		{
			return default(bool);
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x15469A8", Offset = "0x15469A8", VA = "0x15469A8", Slot = "8")]
		public virtual bool GetInputDownForGrabbable(Grabbable grabObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x15467C8", Offset = "0x15467C8", VA = "0x15467C8")]
		private Grabbable getClosestOrRemote()
		{
			return null;
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x1546194", Offset = "0x1546194", VA = "0x1546194")]
		private bool inputCheckRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x1546270", Offset = "0x1546270", VA = "0x1546270")]
		private float getGrabInput(GrabButton btn)
		{
			return default(float);
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x15468AC", Offset = "0x15468AC", VA = "0x15468AC")]
		private bool getToggleInput(GrabButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x1546A38", Offset = "0x1546A38", VA = "0x1546A38", Slot = "9")]
		public virtual bool TryGrab()
		{
			return default(bool);
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x1546BA4", Offset = "0x1546BA4", VA = "0x1546BA4", Slot = "10")]
		public virtual void GrabGrabbable(Grabbable item)
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x1546D1C", Offset = "0x1546D1C", VA = "0x1546D1C", Slot = "11")]
		public virtual void DidDrop()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x1546E30", Offset = "0x1546E30", VA = "0x1546E30", Slot = "12")]
		public virtual void HideHandGraphics()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x1546ED4", Offset = "0x1546ED4", VA = "0x1546ED4", Slot = "13")]
		public virtual void ResetHandGraphics()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x1546FE0", Offset = "0x1546FE0", VA = "0x1546FE0", Slot = "14")]
		public virtual void TryRelease()
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x1545BD4", Offset = "0x1545BD4", VA = "0x1545BD4")]
		private void resetFlyingGrabbable()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x1547084", Offset = "0x1547084", VA = "0x1547084", Slot = "15")]
		public virtual Vector3 GetGrabberVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x154713C", Offset = "0x154713C", VA = "0x154713C", Slot = "16")]
		public virtual Vector3 GetGrabberAveragedVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x15473C4", Offset = "0x15473C4", VA = "0x15473C4", Slot = "17")]
		public virtual Vector3 GetGrabberAveragedAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x154727C", Offset = "0x154727C", VA = "0x154727C")]
		private Vector3 GetAveragedVector(List<Vector3> vectors)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x1547590", Offset = "0x1547590", VA = "0x1547590", Slot = "18")]
		public virtual Vector3 GetGrabberAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x154764C", Offset = "0x154764C", VA = "0x154764C")]
		public Grabber()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class HandModelSelector : MonoBehaviour
	{
		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46DCC", Offset = "0xA46DCC")]
		public int DefaultHandsModel;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46E04", Offset = "0xA46E04")]
		public bool LoadHandSelectionFromPrefs;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46E3C", Offset = "0xA46E3C")]
		public bool RightThumbstickToggleHands;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46E74", Offset = "0xA46E74")]
		public Transform LeftHandGFXHolder;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46EAC", Offset = "0xA46EAC")]
		public Transform RightHandGFXHolder;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int _selectedHandGFX;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46EE4", Offset = "0xA46EE4")]
		public CharacterIK IKBody;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIPointer uiPoint;

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x154A1D8", Offset = "0x154A1D8", VA = "0x154A1D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x154A270", Offset = "0x154A270", VA = "0x154A270")]
		private void Update()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x154A320", Offset = "0x154A320", VA = "0x154A320", Slot = "4")]
		public virtual void ChangeHandsModel(int childIndex, bool save = false)
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x154A77C", Offset = "0x154A77C", VA = "0x154A77C")]
		public HandModelSelector()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class HeadCollisionFade : MonoBehaviour
	{
		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRScreenFade fader;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float FadeDistance;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float FadeOutDistance;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MinFade;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxFade;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FadeSpeed;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool IgnoreHeldGrabbables;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform DistanceTransform;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int cols;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float currentFade;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Collider> collisions;

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x154C5AC", Offset = "0x154C5AC", VA = "0x154C5AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x154C61C", Offset = "0x154C61C", VA = "0x154C61C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x154C8CC", Offset = "0x154C8CC", VA = "0x154C8CC")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x154CAE4", Offset = "0x154CAE4", VA = "0x154CAE4")]
		private void OnCollisionExit(Collision col)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x154CBCC", Offset = "0x154CBCC", VA = "0x154CBCC")]
		public HeadCollisionFade()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class HingeHelper : GrabbableEvents
	{
		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46F1C", Offset = "0xA46F1C")]
		public bool SnapToDegrees;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46F54", Offset = "0xA46F54")]
		public float SnapDegrees;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46F8C", Offset = "0xA46F8C")]
		public Transform SnapGraphics;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46FC4", Offset = "0xA46FC4")]
		public AudioClip SnapSound;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA46FFC", Offset = "0xA46FFC")]
		public float RandomizePitch;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47034", Offset = "0xA47034")]
		public float SnapHaptics;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text LabelToUpdate;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FloatEvent onHingeChange;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatEvent onHingeSnapChange;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody rigid;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected float _lastDegrees;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected float _lastSnapDegrees;

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x154CBF0", Offset = "0x154CBF0", VA = "0x154CBF0", Slot = "20")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x154CC48", Offset = "0x154CC48", VA = "0x154CC48", Slot = "21")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x154CF14", Offset = "0x154CF14", VA = "0x154CF14", Slot = "22")]
		public virtual void OnSnapChange(float yAngle)
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x154D108", Offset = "0x154D108", VA = "0x154D108", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x154CEA0", Offset = "0x154CEA0", VA = "0x154CEA0")]
		public void OnHingeChange(float hingeAmount)
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x154CE7C", Offset = "0x154CE7C", VA = "0x154CE7C")]
		protected float getSmoothedValue(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x154D1A0", Offset = "0x154D1A0", VA = "0x154D1A0")]
		public HingeHelper()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public enum ControllerHand
	{
		[Token(Token = "0x4001EDC")]
		Left,
		[Token(Token = "0x4001EDD")]
		Right,
		[Token(Token = "0x4001EDE")]
		None
	}
	[Token(Token = "0x20004A8")]
	public enum ControllerBinding
	{
		[Token(Token = "0x4001EE0")]
		None,
		[Token(Token = "0x4001EE1")]
		AButton,
		[Token(Token = "0x4001EE2")]
		AButtonDown,
		[Token(Token = "0x4001EE3")]
		BButton,
		[Token(Token = "0x4001EE4")]
		BButtonDown,
		[Token(Token = "0x4001EE5")]
		XButton,
		[Token(Token = "0x4001EE6")]
		XButtonDown,
		[Token(Token = "0x4001EE7")]
		YButton,
		[Token(Token = "0x4001EE8")]
		YButtonDown,
		[Token(Token = "0x4001EE9")]
		LeftTrigger,
		[Token(Token = "0x4001EEA")]
		LeftTriggerDown,
		[Token(Token = "0x4001EEB")]
		LeftGrip,
		[Token(Token = "0x4001EEC")]
		LeftGripDown,
		[Token(Token = "0x4001EED")]
		LeftThumbstickDown,
		[Token(Token = "0x4001EEE")]
		RightTrigger,
		[Token(Token = "0x4001EEF")]
		RightTriggerDown,
		[Token(Token = "0x4001EF0")]
		RightGrip,
		[Token(Token = "0x4001EF1")]
		RightGripDown,
		[Token(Token = "0x4001EF2")]
		RightThumbstickDown,
		[Token(Token = "0x4001EF3")]
		StartButton,
		[Token(Token = "0x4001EF4")]
		StartButtonDown,
		[Token(Token = "0x4001EF5")]
		BackButton,
		[Token(Token = "0x4001EF6")]
		BackButtonDown
	}
	[Token(Token = "0x20004A9")]
	public enum ControllerType
	{
		[Token(Token = "0x4001EF8")]
		None,
		[Token(Token = "0x4001EF9")]
		Unknown,
		[Token(Token = "0x4001EFA")]
		OculusTouch,
		[Token(Token = "0x4001EFB")]
		Wand,
		[Token(Token = "0x4001EFC")]
		Knuckles
	}
	[Token(Token = "0x20004AA")]
	public enum HandControl
	{
		[Token(Token = "0x4001EFE")]
		LeftGrip,
		[Token(Token = "0x4001EFF")]
		RightGrip,
		[Token(Token = "0x4001F00")]
		LeftTrigger,
		[Token(Token = "0x4001F01")]
		RightTrigger,
		[Token(Token = "0x4001F02")]
		None
	}
	[Token(Token = "0x20004AB")]
	public enum GrabButton
	{
		[Token(Token = "0x4001F04")]
		Grip,
		[Token(Token = "0x4001F05")]
		Trigger
	}
	[Token(Token = "0x20004AC")]
	public enum XRInputSource
	{
		[Token(Token = "0x4001F07")]
		XRInput,
		[Token(Token = "0x4001F08")]
		OVRInput,
		[Token(Token = "0x4001F09")]
		SteamVR
	}
	[Token(Token = "0x20004AD")]
	public enum SDKProvider
	{
		[Token(Token = "0x4001F0B")]
		Unknown,
		[Token(Token = "0x4001F0C")]
		OculusSDK,
		[Token(Token = "0x4001F0D")]
		OpenVR
	}
	[Token(Token = "0x20004AE")]
	public class InputBridge : MonoBehaviour
	{
		[Token(Token = "0x2000823")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37688", Offset = "0xA37688")]
		private sealed class <Vibrate>d__102 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerHand hand;

			[Token(Token = "0x4002F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float frequency;

			[Token(Token = "0x4002F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float amplitude;

			[Token(Token = "0x4002F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x17000711")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033C5")]
				[Address(RVA = "0x13D483C", Offset = "0x13D483C", VA = "0x13D483C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000712")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033C7")]
				[Address(RVA = "0x13D48A4", Offset = "0x13D48A4", VA = "0x13D48A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033C2")]
			[Address(RVA = "0x13D4684", Offset = "0x13D4684", VA = "0x13D4684")]
			[DebuggerHidden]
			public <Vibrate>d__102(int <>1__state)
			{
			}

			[Token(Token = "0x60033C3")]
			[Address(RVA = "0x13D46B0", Offset = "0x13D46B0", VA = "0x13D46B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033C4")]
			[Address(RVA = "0x13D46B4", Offset = "0x13D46B4", VA = "0x13D46B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033C6")]
			[Address(RVA = "0x13D4844", Offset = "0x13D4844", VA = "0x13D4844", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputBridge _instance;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public XRInputSource InputSource;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LeftGrip;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool LeftGripDown;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RightGrip;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool RightGripDown;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LeftTrigger;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool LeftTriggerNear;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool LeftTriggerUp;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool LeftTriggerDown;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RightTrigger;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool RightTriggerUp;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool RightTriggerDown;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool RightTriggerNear;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool LeftThumbNear;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool RightThumbNear;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool LeftThumbstickDown;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool LeftThumbstickUp;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool RightThumbstickDown;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool RightThumbstickUp;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool LeftThumbstick;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool RightThumbstick;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool AButton;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4707C", Offset = "0xA4707C")]
		public bool AButtonDown;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool AButtonUp;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool BButton;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA470B4", Offset = "0xA470B4")]
		public bool BButtonDown;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool BButtonUp;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool XButton;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA470EC", Offset = "0xA470EC")]
		public bool XButtonDown;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool XButtonUp;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool YButton;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool YButtonDown;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool YButtonUp;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool StartButton;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool StartButtonDown;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool BackButton;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool BackButtonDown;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector2 LeftThumbstickAxis;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector2 RightThumbstickAxis;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector2 LeftTouchPadAxis;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector2 RightTouchPadAxis;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47124", Offset = "0xA47124")]
		public float ThumbstickDeadzoneX;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4715C", Offset = "0xA4715C")]
		public float ThumbstickDeadzoneY;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<InputDevice> devices;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _downThreshold;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool XRInputSupported;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool SteamVRSupport;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public ControllerType ConnectedControllerType;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47194", Offset = "0xA47194")]
		public bool HMDActive;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA471CC", Offset = "0xA471CC")]
		private SDKProvider <LoadedSDK>k__BackingField;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA471DC", Offset = "0xA471DC")]
		private bool <IsOculusDevice>k__BackingField;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA471EC", Offset = "0xA471EC")]
		private bool <IsOculusQuest>k__BackingField;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA471FC", Offset = "0xA471FC")]
		private bool <IsHTCDevice>k__BackingField;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA4720C", Offset = "0xA4720C")]
		private bool <IsValveIndexController>k__BackingField;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4721C", Offset = "0xA4721C")]
		public bool SupportsBothTouchPadAndJoystick;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47254", Offset = "0xA47254")]
		public bool SupportsIndexTouch;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4728C", Offset = "0xA4728C")]
		public bool SupportsThumbTouch;

		[Token(Token = "0x170002B0")]
		public static InputBridge Instance
		{
			[Token(Token = "0x6002089")]
			[Address(RVA = "0x153CA58", Offset = "0x153CA58", VA = "0x153CA58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B1")]
		public SDKProvider LoadedSDK
		{
			[Token(Token = "0x600208A")]
			[Address(RVA = "0x154DA2C", Offset = "0x154DA2C", VA = "0x154DA2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59D28", Offset = "0xA59D28")]
			get
			{
				return default(SDKProvider);
			}
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x154DA34", Offset = "0x154DA34", VA = "0x154DA34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59D38", Offset = "0xA59D38")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public bool IsOculusDevice
		{
			[Token(Token = "0x600208C")]
			[Address(RVA = "0x154DA3C", Offset = "0x154DA3C", VA = "0x154DA3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59D48", Offset = "0xA59D48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600208D")]
			[Address(RVA = "0x154DA44", Offset = "0x154DA44", VA = "0x154DA44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59D58", Offset = "0xA59D58")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public bool IsOculusQuest
		{
			[Token(Token = "0x600208E")]
			[Address(RVA = "0x154DA50", Offset = "0x154DA50", VA = "0x154DA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59D68", Offset = "0xA59D68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600208F")]
			[Address(RVA = "0x154DA58", Offset = "0x154DA58", VA = "0x154DA58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59D78", Offset = "0xA59D78")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public bool IsHTCDevice
		{
			[Token(Token = "0x6002090")]
			[Address(RVA = "0x154DA64", Offset = "0x154DA64", VA = "0x154DA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59D88", Offset = "0xA59D88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002091")]
			[Address(RVA = "0x154DA6C", Offset = "0x154DA6C", VA = "0x154DA6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59D98", Offset = "0xA59D98")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public bool IsValveIndexController
		{
			[Token(Token = "0x6002092")]
			[Address(RVA = "0x154DA78", Offset = "0x154DA78", VA = "0x154DA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59DA8", Offset = "0xA59DA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002093")]
			[Address(RVA = "0x154DA80", Offset = "0x154DA80", VA = "0x154DA80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59DB8", Offset = "0xA59DB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x154DA8C", Offset = "0x154DA8C", VA = "0x154DA8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x154DD90", Offset = "0x154DD90", VA = "0x154DD90")]
		private void Start()
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x154DD9C", Offset = "0x154DD9C", VA = "0x154DD9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x154DDD0", Offset = "0x154DDD0", VA = "0x154DDD0", Slot = "4")]
		public virtual void UpdateInputs()
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x154EDBC", Offset = "0x154EDBC", VA = "0x154EDBC", Slot = "5")]
		public virtual void UpdateSteamInput()
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x154EDC0", Offset = "0x154EDC0", VA = "0x154EDC0", Slot = "6")]
		public virtual void UpdateDeviceActive()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x154EA50", Offset = "0x154EA50", VA = "0x154EA50")]
		private float correctValue(float inputValue)
		{
			return default(float);
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x154EE34", Offset = "0x154EE34", VA = "0x154EE34")]
		public bool GetControllerBindingValue(ControllerBinding val)
		{
			return default(bool);
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x154E98C", Offset = "0x154E98C", VA = "0x154E98C")]
		private Vector2 ApplyDeadZones(Vector2 pos, float deadZoneX, float deadZoneY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x154EF60", Offset = "0x154EF60", VA = "0x154EF60")]
		private void onDeviceChanged(InputDevice inputDevice)
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x154DCB0", Offset = "0x154DCB0", VA = "0x154DCB0")]
		private void setDeviceProperties()
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x154EF64", Offset = "0x154EF64", VA = "0x154EF64", Slot = "7")]
		public virtual bool GetSupportsIndexTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x154EF84", Offset = "0x154EF84", VA = "0x154EF84", Slot = "8")]
		public virtual SDKProvider GetLoadedSDK()
		{
			return default(SDKProvider);
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x154F030", Offset = "0x154F030", VA = "0x154F030", Slot = "9")]
		public virtual bool GetSupportsThumbTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x154F050", Offset = "0x154F050", VA = "0x154F050", Slot = "10")]
		public virtual bool GetIsOculusDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x154F1BC", Offset = "0x154F1BC", VA = "0x154F1BC", Slot = "11")]
		public virtual bool GetIsOculusQuest()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x154F2DC", Offset = "0x154F2DC", VA = "0x154F2DC", Slot = "12")]
		public virtual bool GetIsHTCDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x154F108", Offset = "0x154F108", VA = "0x154F108")]
		public InputDevice GetHMD()
		{
			return default(InputDevice);
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x154EB48", Offset = "0x154EB48", VA = "0x154EB48")]
		public InputDevice GetLeftController()
		{
			return default(InputDevice);
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x154EBFC", Offset = "0x154EBFC", VA = "0x154EBFC")]
		public InputDevice GetRightController()
		{
			return default(InputDevice);
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x154F374", Offset = "0x154F374", VA = "0x154F374", Slot = "13")]
		public virtual ControllerType GetControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x154F3A8", Offset = "0x154F3A8", VA = "0x154F3A8", Slot = "14")]
		public virtual bool GetIsValveIndexController()
		{
			return default(bool);
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x154ED20", Offset = "0x154ED20", VA = "0x154ED20")]
		private float getFeatureUsage(InputDevice device, InputFeatureUsage<float> usage, bool clamp = true)
		{
			return default(float);
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x154ECB0", Offset = "0x154ECB0", VA = "0x154ECB0")]
		private bool getFeatureUsage(InputDevice device, InputFeatureUsage<bool> usage)
		{
			return default(bool);
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x154ECE8", Offset = "0x154ECE8", VA = "0x154ECE8")]
		private Vector2 getFeatureUsage(InputDevice device, InputFeatureUsage<Vector2> usage)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x154F484", Offset = "0x154F484", VA = "0x154F484")]
		public void SetTrackingOrigin(TrackingOriginModeFlags trackingOrigin)
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x154F578", Offset = "0x154F578", VA = "0x154F578", Slot = "15")]
		public virtual void VibrateController(float frequency, float amplitude, float duration, ControllerHand hand)
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x154F5B0", Offset = "0x154F5B0", VA = "0x154F5B0", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59DC8", Offset = "0xA59DC8")]
		public virtual IEnumerator Vibrate(float frequency, float amplitude, float duration, ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x154F644", Offset = "0x154F644", VA = "0x154F644")]
		public InputBridge()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class JoystickControl : MonoBehaviour
	{
		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinDegrees;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxDegrees;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LeverPercentageX;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float LeverPercentageZ;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UseSmoothLook;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SmoothLookSpeed;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool KinematicWhileInactive;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FloatFloatEvent onJoystickChange;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Grabbable grab;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody rb;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 currentRotation;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float angleX;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float angleY;

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x13D5168", Offset = "0x13D5168", VA = "0x13D5168")]
		private void Start()
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x13D51D8", Offset = "0x13D51D8", VA = "0x13D51D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x13D5554", Offset = "0x13D5554", VA = "0x13D5554")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x13D5558", Offset = "0x13D5558", VA = "0x13D5558")]
		private void doJoystickLook()
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x13D5968", Offset = "0x13D5968", VA = "0x13D5968", Slot = "4")]
		public virtual void OnJoystickChange(float leverX, float leverY)
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x13D59E4", Offset = "0x13D59E4", VA = "0x13D59E4")]
		public JoystickControl()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class Lever : MonoBehaviour
	{
		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody ParentRigidbody;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip SwitchOnSound;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SwitchOffSound;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA472C4", Offset = "0xA472C4")]
		public float SwitchTolerance;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA472FC", Offset = "0xA472FC")]
		public float LeverPercentage;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47334", Offset = "0xA47334")]
		public bool UseSmoothLook;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4736C", Offset = "0xA4736C")]
		public float SmoothLookSpeed;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA473A4", Offset = "0xA473A4")]
		public bool AllowPhysicsForces;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA473DC", Offset = "0xA473DC")]
		public bool ReturnToCenter;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47414", Offset = "0xA47414")]
		public float ReturnLookSpeed;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4744C", Offset = "0xA4744C")]
		public bool SnapToGrabber;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47484", Offset = "0xA47484")]
		public UnityEvent onLeverDown;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA474BC", Offset = "0xA474BC")]
		public UnityEvent onLeverUp;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA474F4", Offset = "0xA474F4")]
		public FloatEvent onLeverChange;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Grabbable grab;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Rigidbody rb;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected AudioSource audioSource;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool switchedOn;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected ConfigurableJoint configJoint;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected HingeJoint hingeJoint;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Quaternion initialOffset;

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x13D6698", Offset = "0x13D6698", VA = "0x13D6698", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x13D6818", Offset = "0x13D6818", VA = "0x13D6818", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x13D6A38", Offset = "0x13D6A38", VA = "0x13D6A38", Slot = "6")]
		public virtual float GetAnglePercentage(float currentAngle)
		{
			return default(float);
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x13D6BFC", Offset = "0x13D6BFC", VA = "0x13D6BFC", Slot = "7")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x13D6C08", Offset = "0x13D6C08", VA = "0x13D6C08", Slot = "8")]
		public virtual void doLeverLook()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x13D7180", Offset = "0x13D7180", VA = "0x13D7180", Slot = "9")]
		public virtual void OnLeverChange(float percentage)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x13D71F4", Offset = "0x13D71F4", VA = "0x13D71F4", Slot = "10")]
		public virtual void OnLeverDown()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x13D72A8", Offset = "0x13D72A8", VA = "0x13D72A8", Slot = "11")]
		public virtual void OnLeverUp()
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x13D7360", Offset = "0x13D7360", VA = "0x13D7360")]
		public Lever()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class LocomotionManager : MonoBehaviour
	{
		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocomotionType DefaultLocomotion;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool LoadLocomotionFromPrefs;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool LeftThumbstickToggleLocomotionOculus;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BNGPlayerController player;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerTeleport teleport;

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x13D7580", Offset = "0x13D7580", VA = "0x13D7580")]
		private void Start()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x13D76CC", Offset = "0x13D76CC", VA = "0x13D76CC")]
		public void ChangeLocomotionSpeed(bool speed)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x13D76EC", Offset = "0x13D76EC", VA = "0x13D76EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x13D77C0", Offset = "0x13D77C0", VA = "0x13D77C0")]
		public void UpdateTeleportStatus()
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x13D7628", Offset = "0x13D7628", VA = "0x13D7628")]
		public void ChangeLocomotion(LocomotionType locomotionType, bool save)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x13D77F4", Offset = "0x13D77F4", VA = "0x13D77F4")]
		public LocomotionManager()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public enum RotationMechanic
	{
		[Token(Token = "0x4001F70")]
		Snap,
		[Token(Token = "0x4001F71")]
		Smooth
	}
	[Token(Token = "0x20004B3")]
	public class PlayerRotation : MonoBehaviour
	{
		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4752C", Offset = "0xA4752C")]
		public bool AllowInput;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47564", Offset = "0xA47564")]
		public RotationMechanic RotationType;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4759C", Offset = "0xA4759C")]
		public float SnapRotationAmount;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA475D4", Offset = "0xA475D4")]
		public float SnapInputAmount;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4760C", Offset = "0xA4760C")]
		public float SmoothTurnSpeed;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47644", Offset = "0xA47644")]
		public float SmoothTurnMinInput;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4767C", Offset = "0xA4767C")]
		public bool AllowKeyboardInputs;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float recentSnapTurnTime;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float rotationAmount;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float previousXInput;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BNGPlayerController player;

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x13DC570", Offset = "0x13DC570", VA = "0x13DC570")]
		private void Start()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x13DC5EC", Offset = "0x13DC5EC", VA = "0x13DC5EC")]
		public void ToggleRotationType(bool shouldSnap)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x13DC5FC", Offset = "0x13DC5FC", VA = "0x13DC5FC")]
		public void UpdateGrabbedObjects()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x13DC8D4", Offset = "0x13DC8D4", VA = "0x13DC8D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x13DC9C8", Offset = "0x13DC9C8", VA = "0x13DC9C8")]
		private void CheckReverseRotation(Vector2 rightThumbstickAxis)
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x13DCBA0", Offset = "0x13DCBA0", VA = "0x13DCBA0")]
		public void SnapRotateReverse()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x13DCD24", Offset = "0x13DCD24", VA = "0x13DCD24")]
		public void SnapRotateImmediately(bool isLeft)
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x13DCEEC", Offset = "0x13DCEEC", VA = "0x13DCEEC", Slot = "4")]
		public virtual void DoSnapRotation(float xInput)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x13DD13C", Offset = "0x13DD13C", VA = "0x13DD13C", Slot = "5")]
		public virtual bool RecentlySnapTurnedReverseImmediately()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x13DD174", Offset = "0x13DD174", VA = "0x13DD174", Slot = "6")]
		public virtual bool RecentlySnapTurnedImmediately()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x13DD1B0", Offset = "0x13DD1B0", VA = "0x13DD1B0", Slot = "7")]
		public virtual bool RecentlySnapTurned()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x13DD1EC", Offset = "0x13DD1EC", VA = "0x13DD1EC", Slot = "8")]
		public virtual bool DidRecentlySnapTurn()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x13DD234", Offset = "0x13DD234", VA = "0x13DD234", Slot = "9")]
		public virtual void DoSmoothRotation(float xInput)
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x13DD394", Offset = "0x13DD394", VA = "0x13DD394")]
		public PlayerRotation()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public enum TeleportControls
	{
		[Token(Token = "0x4001F7E")]
		ThumbstickRotate,
		[Token(Token = "0x4001F7F")]
		ThumbstickDown,
		[Token(Token = "0x4001F80")]
		BButton
	}
	[Token(Token = "0x20004B5")]
	public class PlayerTeleport : MonoBehaviour
	{
		[Token(Token = "0x2000824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37698", Offset = "0xA37698")]
		private sealed class <doTeleport>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerTeleport <>4__this;

			[Token(Token = "0x4002F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 playerDestination;

			[Token(Token = "0x4002F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool rotatePlayer;

			[Token(Token = "0x4002F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion playerRotation;

			[Token(Token = "0x17000713")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033CB")]
				[Address(RVA = "0x13DF644", Offset = "0x13DF644", VA = "0x13DF644", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000714")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033CD")]
				[Address(RVA = "0x13DF6AC", Offset = "0x13DF6AC", VA = "0x13DF6AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033C8")]
			[Address(RVA = "0x13DEE38", Offset = "0x13DEE38", VA = "0x13DEE38")]
			[DebuggerHidden]
			public <doTeleport>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60033C9")]
			[Address(RVA = "0x13DF3BC", Offset = "0x13DF3BC", VA = "0x13DF3BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033CA")]
			[Address(RVA = "0x13DF3C0", Offset = "0x13DF3C0", VA = "0x13DF3C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033CC")]
			[Address(RVA = "0x13DF64C", Offset = "0x13DF64C", VA = "0x13DF64C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color ValidTeleport;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color InvalidTeleport;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA476B4", Offset = "0xA476B4")]
		public ControllerHand HandSide;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA476EC", Offset = "0xA476EC")]
		public Transform TeleportBeginTransform;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47724", Offset = "0xA47724")]
		public Transform TeleportBeginTransformAlt;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform TeleportDestination;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject TeleportMarker;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform DirectionIndicator;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float MaxRange;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SegmentCount;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float simulationVelocity;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float segmentScale;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LayerMask CollisionLayers;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TeleportControls ControlType;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool AllowTeleportRotation;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		protected bool _reachThumbThreshold;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float MaxSlope;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LineRenderer TeleportLine;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected CharacterController controller;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected BNGPlayerController playerController;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected InputBridge input;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform cameraRig;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool aimingTeleport;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		protected bool validTeleport;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		protected bool teleportationEnabled;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		public bool ApplyGravity;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected int _invalidFrames;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected float _initialLineWidth;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool setVariables;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Collider _hitObject;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Vector3 _hitVector;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float _hitAngle;

		[Token(Token = "0x170002B6")]
		protected Transform teleportTransform
		{
			[Token(Token = "0x60020D5")]
			[Address(RVA = "0x13DD60C", Offset = "0x13DD60C", VA = "0x13DD60C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		protected Vector2 handedThumbstickAxis
		{
			[Token(Token = "0x60020D6")]
			[Address(RVA = "0x13DD628", Offset = "0x13DD628", VA = "0x13DD628")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170002B8")]
		public bool TeleportationEnabled
		{
			[Token(Token = "0x60020D7")]
			[Address(RVA = "0x13DD668", Offset = "0x13DD668", VA = "0x13DD668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x13DD670", Offset = "0x13DD670", VA = "0x13DD670", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x13DD674", Offset = "0x13DD674", VA = "0x13DD674")]
		private void setupVariables()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x13DD8E0", Offset = "0x13DD8E0", VA = "0x13DD8E0", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x13DDB10", Offset = "0x13DDB10", VA = "0x13DDB10")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x13DDB50", Offset = "0x13DDB50", VA = "0x13DDB50", Slot = "6")]
		public virtual void ApplyGravityToPlayer()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x13DDC9C", Offset = "0x13DDC9C", VA = "0x13DDC9C", Slot = "7")]
		public virtual void EnableTeleportation()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x13DDCA8", Offset = "0x13DDCA8", VA = "0x13DDCA8", Slot = "8")]
		public virtual void DisableTeleportation()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x13DDCB4", Offset = "0x13DDCB4", VA = "0x13DDCB4", Slot = "9")]
		public virtual void calculateParabola()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x13DE600", Offset = "0x13DE600", VA = "0x13DE600")]
		protected bool teleportClear()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x13DDAAC", Offset = "0x13DDAAC", VA = "0x13DDAAC")]
		protected void hideTeleport()
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x13DDA50", Offset = "0x13DDA50", VA = "0x13DDA50")]
		protected void updateTeleport()
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x13DE834", Offset = "0x13DE834", VA = "0x13DE834", Slot = "10")]
		public virtual void rotateMarker()
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x13DEAC4", Offset = "0x13DEAC4", VA = "0x13DEAC4", Slot = "11")]
		public virtual void tryTeleport()
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x13DED68", Offset = "0x13DED68", VA = "0x13DED68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59E2C", Offset = "0xA59E2C")]
		protected IEnumerator doTeleport(Vector3 playerDestination, Quaternion playerRotation, bool rotatePlayer)
		{
			return null;
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x13DEE64", Offset = "0x13DEE64", VA = "0x13DEE64")]
		public void TeleportPlayer(Vector3 destination, Quaternion rotation)
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x13DEE94", Offset = "0x13DEE94", VA = "0x13DEE94")]
		public void TeleportPlayerToTransform(Transform destination)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x13DEF34", Offset = "0x13DEF34", VA = "0x13DEF34", Slot = "12")]
		public virtual bool KeyDownForTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x13DF128", Offset = "0x13DF128", VA = "0x13DF128", Slot = "13")]
		public virtual bool KeyUpFromTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x13DF230", Offset = "0x13DF230", VA = "0x13DF230")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x13DF348", Offset = "0x13DF348", VA = "0x13DF348")]
		public PlayerTeleport()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class RemoteGrabber : MonoBehaviour
	{
		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrabbablesInTrigger ParentGrabber;

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x13E31A8", Offset = "0x13E31A8", VA = "0x13E31A8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x13E3394", Offset = "0x13E3394", VA = "0x13E3394")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x13E3530", Offset = "0x13E3530", VA = "0x13E3530")]
		public RemoteGrabber()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class Slider : MonoBehaviour
	{
		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float _slidePercentage;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatEvent onSliderChange;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastSliderPercentage;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slideRangeLow;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float slideRangeHigh;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float slideRange;

		[Token(Token = "0x170002B9")]
		public float SlidePercentage
		{
			[Token(Token = "0x60020EF")]
			[Address(RVA = "0x13E4C84", Offset = "0x13E4C84", VA = "0x13E4C84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x13E4C8C", Offset = "0x13E4C8C", VA = "0x13E4C8C", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x13E4D90", Offset = "0x13E4D90", VA = "0x13E4D90", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x13E4E70", Offset = "0x13E4E70", VA = "0x13E4E70", Slot = "6")]
		public virtual void OnSliderChange(float percentage)
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x13E4EE4", Offset = "0x13E4EE4", VA = "0x13E4EE4")]
		public Slider()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public enum MovementVector
	{
		[Token(Token = "0x4001FAA")]
		HMD,
		[Token(Token = "0x4001FAB")]
		Controller
	}
	[Token(Token = "0x20004B9")]
	public class SmoothLocomotion : MonoBehaviour
	{
		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MovementSpeed;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SprintSpeed;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isFaster;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4775C", Offset = "0xA4775C")]
		public List<ControllerBinding> SprintInput;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float StrafeSpeed;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float StrafeSprintSpeed;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47794", Offset = "0xA47794")]
		public bool ApplyGravity;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA477CC", Offset = "0xA477CC")]
		public float GravityModifier;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47804", Offset = "0xA47804")]
		public List<ControllerBinding> JumpInput;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4783C", Offset = "0xA4783C")]
		public float JumpForce;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47874", Offset = "0xA47874")]
		public bool AirControl;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool AllowKeyboardInputs;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BNGPlayerController playerController;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float movementX;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float movementY;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float movementZ;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool movementDisabled;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _verticalSpeed;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool isMoving;

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x13E513C", Offset = "0x13E513C", VA = "0x13E513C")]
		private void Start()
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x13E5220", Offset = "0x13E5220", VA = "0x13E5220")]
		private void Update()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x13E5244", Offset = "0x13E5244", VA = "0x13E5244")]
		private void updateInputs()
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x13E53D0", Offset = "0x13E53D0", VA = "0x13E53D0")]
		private void moveCharacter()
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x13E55EC", Offset = "0x13E55EC", VA = "0x13E55EC", Slot = "4")]
		public virtual void GetKeyBoardInputs()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x13E56C8", Offset = "0x13E56C8", VA = "0x13E56C8", Slot = "5")]
		public virtual bool CheckJump()
		{
			return default(bool);
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x13E57E0", Offset = "0x13E57E0", VA = "0x13E57E0", Slot = "6")]
		public virtual bool SprintKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x13E58F4", Offset = "0x13E58F4", VA = "0x13E58F4", Slot = "7")]
		public virtual void EnableMovement()
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x13E58FC", Offset = "0x13E58FC", VA = "0x13E58FC", Slot = "8")]
		public virtual void DisableMovement()
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x13E5908", Offset = "0x13E5908", VA = "0x13E5908")]
		public SmoothLocomotion()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class SnapZone : MonoBehaviour
	{
		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA478AC", Offset = "0xA478AC")]
		public bool CanDropItem;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA478E4", Offset = "0xA478E4")]
		public bool CanSwapItem;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4791C", Offset = "0xA4791C")]
		public float ScaleItem;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _scaleTo;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool DisableColliders;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Collider> disabledColliders;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47954", Offset = "0xA47954")]
		public bool DuplicateItemOnGrab;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxDropTime;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<string> OnlyAllowNames;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> ExcludeTransformNames;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip SoundOnSnap;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip SoundOnUnsnap;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GrabbableEvent OnSnapEvent;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GrabbableEvent OnDetachEvent;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GrabbablesInTrigger gZone;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Grabbable HeldItem;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody heldItemRigid;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool heldItemWasKinematic;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Grabbable trackedItem;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Grabbable ClosestGrabbable;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SnapZoneOffset offset;

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x13E5A0C", Offset = "0x13E5A0C", VA = "0x13E5A0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x13E5AB8", Offset = "0x13E5AB8", VA = "0x13E5AB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x13E5E48", Offset = "0x13E5E48", VA = "0x13E5E48")]
		private Grabbable getClosestGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x13E38F0", Offset = "0x13E38F0", VA = "0x13E38F0")]
		public void GrabGrabbable(Grabbable grab)
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x13E663C", Offset = "0x13E663C", VA = "0x13E663C")]
		private void disableGrabbable(Grabbable grab)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x13E6728", Offset = "0x13E6728", VA = "0x13E6728")]
		public void GrabEquipped(Grabber grabber)
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x13E631C", Offset = "0x13E631C", VA = "0x13E631C")]
		public void ReleaseAll()
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x13E6A70", Offset = "0x13E6A70", VA = "0x13E6A70")]
		public SnapZone()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class SnapZoneEvents : MonoBehaviour
	{
		[Token(Token = "0x6002106")]
		[Address(RVA = "0x13E6B04", Offset = "0x13E6B04", VA = "0x13E6B04")]
		private void Start()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x13E6B08", Offset = "0x13E6B08", VA = "0x13E6B08")]
		private void Update()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x13E6B0C", Offset = "0x13E6B0C", VA = "0x13E6B0C")]
		public SnapZoneEvents()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class SnapZoneOffset : MonoBehaviour
	{
		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPositionOffset;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 LocalRotationOffset;

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x13E6B14", Offset = "0x13E6B14", VA = "0x13E6B14")]
		public SnapZoneOffset()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class SnapZoneScale : MonoBehaviour
	{
		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4798C", Offset = "0xA4798C")]
		public float Scale;

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x13E6E24", Offset = "0x13E6E24", VA = "0x13E6E24")]
		public SnapZoneScale()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x2000825")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA376A8", Offset = "0xA376A8")]
		private sealed class <QueueDestroy>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Arrow <>4__this;

			[Token(Token = "0x17000715")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033D1")]
				[Address(RVA = "0x12A0034", Offset = "0x12A0034", VA = "0x12A0034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000716")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033D3")]
				[Address(RVA = "0x12A009C", Offset = "0x12A009C", VA = "0x12A009C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033CE")]
			[Address(RVA = "0x129F4F4", Offset = "0x129F4F4", VA = "0x129F4F4")]
			[DebuggerHidden]
			public <QueueDestroy>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60033CF")]
			[Address(RVA = "0x129FEAC", Offset = "0x129FEAC", VA = "0x129FEAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033D0")]
			[Address(RVA = "0x129FEB0", Offset = "0x129FEB0", VA = "0x129FEB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033D2")]
			[Address(RVA = "0x12A003C", Offset = "0x12A003C", VA = "0x12A003C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000826")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA376B8", Offset = "0xA376B8")]
		private sealed class <ReEnableCollider>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Arrow <>4__this;

			[Token(Token = "0x4002F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <waitFrames>5__2;

			[Token(Token = "0x4002F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <x>5__3;

			[Token(Token = "0x17000717")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033D7")]
				[Address(RVA = "0x12A017C", Offset = "0x12A017C", VA = "0x12A017C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000718")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033D9")]
				[Address(RVA = "0x12A01E4", Offset = "0x12A01E4", VA = "0x12A01E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033D4")]
			[Address(RVA = "0x129F520", Offset = "0x129F520", VA = "0x129F520")]
			[DebuggerHidden]
			public <ReEnableCollider>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60033D5")]
			[Address(RVA = "0x12A00A4", Offset = "0x12A00A4", VA = "0x12A00A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033D6")]
			[Address(RVA = "0x12A00A8", Offset = "0x12A00A8", VA = "0x12A00A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033D8")]
			[Address(RVA = "0x12A0184", Offset = "0x12A0184", VA = "0x12A0184", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Grabbable grab;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Flying;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ZVel;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider ShaftCollider;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource impactSound;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float flightTime;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float destroyTime;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine queueDestroy;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Projectile ProjectileObject;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float arrowDamage;

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x129EF54", Offset = "0x129EF54", VA = "0x129EF54")]
		private void Start()
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x129F094", Offset = "0x129F094", VA = "0x129F094")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x129F310", Offset = "0x129F310", VA = "0x129F310")]
		public void ShootArrow(Vector3 shotForce)
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x129F484", Offset = "0x129F484", VA = "0x129F484")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59E90", Offset = "0xA59E90")]
		private IEnumerator QueueDestroy()
		{
			return null;
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x129F414", Offset = "0x129F414", VA = "0x129F414")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59EF4", Offset = "0xA59EF4")]
		private IEnumerator ReEnableCollider()
		{
			return null;
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x129F54C", Offset = "0x129F54C", VA = "0x129F54C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x129F99C", Offset = "0x129F99C", VA = "0x129F99C")]
		private void tryStickArrow(Collision collision)
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x129FD7C", Offset = "0x129FD7C", VA = "0x129FD7C")]
		private void playSoundInterval(float fromSeconds, float toSeconds)
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x129FE9C", Offset = "0x129FE9C", VA = "0x129FE9C")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class ArrowGrabArea : MonoBehaviour
	{
		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Bow theBow;

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x12A01EC", Offset = "0x12A01EC", VA = "0x12A01EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x12A0260", Offset = "0x12A0260", VA = "0x12A0260")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x12A05A0", Offset = "0x12A05A0", VA = "0x12A05A0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x12A06C8", Offset = "0x12A06C8", VA = "0x12A06C8")]
		public ArrowGrabArea()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class Bow : MonoBehaviour
	{
		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float BowForce;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA479C4", Offset = "0xA479C4")]
		public string ArrowPrefabName;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CanGrabArrowFromKnock;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA479FC", Offset = "0xA479FC")]
		public Transform ArrowRest;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47A34", Offset = "0xA47A34")]
		public Transform ArrowRestLeftHanded;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform ArrowKnock;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IgnoreXPosition;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool IgnoreYPosition;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool AllowNegativeZ;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputBridge input;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool CanGrabArrow;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Grabber ClosestGrabber;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Arrow GrabbedArrow;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Grabbable arrowGrabbable;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Grabber arrowGrabber;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 LastValidPosition;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float MaxStringDistance;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float StringDistance;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47A6C", Offset = "0xA47A6C")]
		private float <DrawPercent>k__BackingField;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _lastDrawPercent;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float _lastDrawHaptic;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastDrawHapticTime;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool playedDrawSound;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 initialKnockPosition;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool holdingArrow;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Grabbable bowGrabbable;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Text PercentageUI;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<DrawDefinition> drawDefs;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private AudioSource audioSource;

		[Token(Token = "0x170002BA")]
		public float DrawPercent
		{
			[Token(Token = "0x6002118")]
			[Address(RVA = "0x12A2BE4", Offset = "0x12A2BE4", VA = "0x12A2BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59F58", Offset = "0xA59F58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002119")]
			[Address(RVA = "0x12A2BEC", Offset = "0x12A2BEC", VA = "0x12A2BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59F68", Offset = "0xA59F68")]
			private set
			{
			}
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x12A2BF4", Offset = "0x12A2BF4", VA = "0x12A2BF4")]
		private void Start()
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x12A2EE8", Offset = "0x12A2EE8", VA = "0x12A2EE8")]
		private void Update()
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x12A3880", Offset = "0x12A3880", VA = "0x12A3880")]
		private Transform getArrowRest()
		{
			return null;
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x12A37F4", Offset = "0x12A37F4", VA = "0x12A37F4")]
		private bool canGrabArrowFromKnock()
		{
			return default(bool);
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x12A3DCC", Offset = "0x12A3DCC", VA = "0x12A3DCC")]
		private float getGrabArrowInput()
		{
			return default(float);
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x12A3F20", Offset = "0x12A3F20", VA = "0x12A3F20")]
		private float getGripInput(ControllerHand handSide)
		{
			return default(float);
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x12A3EDC", Offset = "0x12A3EDC", VA = "0x12A3EDC")]
		private float getTriggerInput(ControllerHand handSide)
		{
			return default(float);
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x12A3938", Offset = "0x12A3938", VA = "0x12A3938")]
		private void setKnockPosition()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x12A3D6C", Offset = "0x12A3D6C", VA = "0x12A3D6C")]
		private void checkDrawSound()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x12A3288", Offset = "0x12A3288", VA = "0x12A3288")]
		private void updateDrawDistance()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x12A3424", Offset = "0x12A3424", VA = "0x12A3424")]
		private void checkBowHaptics()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x12A3708", Offset = "0x12A3708", VA = "0x12A3708")]
		private void resetStringPosition()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x12A3C3C", Offset = "0x12A3C3C", VA = "0x12A3C3C")]
		private void alignArrow()
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x12A041C", Offset = "0x12A041C", VA = "0x12A041C")]
		public void GrabArrow(Arrow arrow)
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x12A3578", Offset = "0x12A3578", VA = "0x12A3578")]
		public void ReleaseArrow()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x12A3F98", Offset = "0x12A3F98", VA = "0x12A3F98")]
		private void resetArrowValues()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x12A3FAC", Offset = "0x12A3FAC", VA = "0x12A3FAC")]
		private void playSoundInterval(float fromSeconds, float toSeconds, float volume)
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x12A3F64", Offset = "0x12A3F64", VA = "0x12A3F64")]
		private void playBowDraw()
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x12A3F7C", Offset = "0x12A3F7C", VA = "0x12A3F7C")]
		private void playBowRelease()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x12A40F0", Offset = "0x12A40F0", VA = "0x12A40F0")]
		public Bow()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x12A4168", Offset = "0x12A4168", VA = "0x12A4168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59F78", Offset = "0xA59F78")]
		private bool <checkBowHaptics>b__42_0(DrawDefinition x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004C1")]
	public class DrawDefinition
	{
		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47A7C", Offset = "0xA47A7C")]
		private float <DrawPercentage>k__BackingField;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47A8C", Offset = "0xA47A8C")]
		private float <HapticAmplitude>k__BackingField;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47A9C", Offset = "0xA47A9C")]
		private float <HapticFrequency>k__BackingField;

		[Token(Token = "0x170002BB")]
		public float DrawPercentage
		{
			[Token(Token = "0x600212F")]
			[Address(RVA = "0x153AA88", Offset = "0x153AA88", VA = "0x153AA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59F88", Offset = "0xA59F88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002130")]
			[Address(RVA = "0x153AA90", Offset = "0x153AA90", VA = "0x153AA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59F98", Offset = "0xA59F98")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public float HapticAmplitude
		{
			[Token(Token = "0x6002131")]
			[Address(RVA = "0x153AA98", Offset = "0x153AA98", VA = "0x153AA98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59FA8", Offset = "0xA59FA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002132")]
			[Address(RVA = "0x153AAA0", Offset = "0x153AAA0", VA = "0x153AAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59FB8", Offset = "0xA59FB8")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public float HapticFrequency
		{
			[Token(Token = "0x6002133")]
			[Address(RVA = "0x153AAA8", Offset = "0x153AAA8", VA = "0x153AAA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59FC8", Offset = "0xA59FC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002134")]
			[Address(RVA = "0x153AAB0", Offset = "0x153AAB0", VA = "0x153AAB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA59FD8", Offset = "0xA59FD8")]
			set
			{
			}
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x153AAB8", Offset = "0x153AAB8", VA = "0x153AAB8")]
		public DrawDefinition()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class BowArm : MonoBehaviour
	{
		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bow BowItem;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float BowPercentStart;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotateDegrees;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Speed;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion _startRotation;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion _endRotation;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool RotateX;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool RotateZ;

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x12A41A0", Offset = "0x12A41A0", VA = "0x12A41A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x12A4398", Offset = "0x12A4398", VA = "0x12A4398")]
		private void Update()
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x12A4570", Offset = "0x12A4570", VA = "0x12A4570")]
		public BowArm()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class BulletHole : MonoBehaviour
	{
		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform BulletHoleDecal;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaxScale;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MinScale;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool RandomYRotation;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DestroyTime;

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x12A459C", Offset = "0x12A459C", VA = "0x12A459C")]
		private void Start()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x12A4788", Offset = "0x12A4788", VA = "0x12A4788")]
		public void TryAttachTo(Collider col)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x12A48F4", Offset = "0x12A48F4", VA = "0x12A48F4")]
		private bool transformIsEqualScale(Transform theTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x12A4970", Offset = "0x12A4970", VA = "0x12A4970")]
		private void DestroySelf()
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x12A4A0C", Offset = "0x12A4A0C", VA = "0x12A4A0C")]
		public BulletHole()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class DrawerSound : MonoBehaviour
	{
		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip DrawerOpenSound;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DrawerOpenValue;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip DrawerCloseSound;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float DrawerCloseValue;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool playedOpenSound;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool playedCloseSound;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float resetOpenSound;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float resetCloseSound;

		[Token(Token = "0x4002019")]
		private const float resetSoundTime = 1f;

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x153AAC0", Offset = "0x153AAC0", VA = "0x153AAC0")]
		private void Update()
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x153AB24", Offset = "0x153AB24", VA = "0x153AB24")]
		public void OnDrawerUpdate(float drawerValue)
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x153AD0C", Offset = "0x153AD0C", VA = "0x153AD0C")]
		public DrawerSound()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class FPSText : MonoBehaviour
	{
		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text text;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float deltaTime;

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x153AD24", Offset = "0x153AD24", VA = "0x153AD24")]
		private void Start()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x153AD7C", Offset = "0x153AD7C", VA = "0x153AD7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x153ADC8", Offset = "0x153ADC8", VA = "0x153ADC8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x153AE94", Offset = "0x153AE94", VA = "0x153AE94")]
		public FPSText()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class Flashlight : GrabbableEvents
	{
		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light SpotLight;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LightSwitch;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 originalSwitchPosition;

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x153AE9C", Offset = "0x153AE9C", VA = "0x153AE9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x153AEE0", Offset = "0x153AEE0", VA = "0x153AEE0", Slot = "11")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x153AF74", Offset = "0x153AF74", VA = "0x153AF74", Slot = "13")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x153AFC0", Offset = "0x153AFC0", VA = "0x153AFC0")]
		public Flashlight()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class GrappleShot : GrabbableEvents
	{
		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MaxRange;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float GrappleReelForce;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinReelDistance;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public LayerMask GrappleLayers;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform MuzzleTransform;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform HitTargetPrefab;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LineRenderer GrappleLine;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LineRenderer HelperLine;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip GrappleShotSound;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool grappling;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool wasGrappling;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool gravityEnabled;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CharacterController characterController;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BNGPlayerController bngController;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSource audioSource;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float currentGrappleDistance;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool validTargetFound;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool isDynamic;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Rigidbody grappleTargetRigid;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Collider grappleTargetCollider;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform grappleTargetParent;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool requireRelease;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool climbing;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Climbable ClimbHelper;

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x1547A1C", Offset = "0x1547A1C", VA = "0x1547A1C")]
		private void Start()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x1547AC8", Offset = "0x1547AC8", VA = "0x1547AC8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x1548224", Offset = "0x1548224", VA = "0x1548224", Slot = "11")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x15482AC", Offset = "0x15482AC", VA = "0x15482AC")]
		private void updateGrappleDistance()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x1548A3C", Offset = "0x1548A3C", VA = "0x1548A3C", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x1548A44", Offset = "0x1548A44", VA = "0x1548A44", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x1548890", Offset = "0x1548890", VA = "0x1548890")]
		private void onReleaseGrapple()
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x1547B50", Offset = "0x1547B50", VA = "0x1547B50")]
		private void drawGrappleHelper()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x15480D8", Offset = "0x15480D8", VA = "0x15480D8")]
		private void drawGrappleLine()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x1548164", Offset = "0x1548164", VA = "0x1548164")]
		private void hideGrappleLine()
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x1548A70", Offset = "0x1548A70", VA = "0x1548A70")]
		private void showGrappleHelper(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x1547FA0", Offset = "0x1547FA0", VA = "0x1547FA0")]
		private void hideGrappleHelper()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x1548394", Offset = "0x1548394", VA = "0x1548394")]
		private void reelInGrapple(float triggerValue)
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x154878C", Offset = "0x154878C", VA = "0x154878C")]
		private void shootGrapple()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x1548C3C", Offset = "0x1548C3C", VA = "0x1548C3C")]
		private void dropGrapple()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x1548A48", Offset = "0x1548A48", VA = "0x1548A48")]
		private void changeGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x1548C48", Offset = "0x1548C48", VA = "0x1548C48")]
		public GrappleShot()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class HandJet : GrabbableEvents
	{
		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float JetForce;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem JetFX;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CharacterController characterController;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BNGPlayerController bngController;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource audioSource;

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x1549D54", Offset = "0x1549D54", VA = "0x1549D54")]
		private void Start()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x1549E00", Offset = "0x1549E00", VA = "0x1549E00", Slot = "11")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x154A150", Offset = "0x154A150", VA = "0x154A150", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x154A170", Offset = "0x154A170", VA = "0x154A170")]
		public void ChangeGravity(bool gravityOn)
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x154A190", Offset = "0x154A190", VA = "0x154A190", Slot = "5")]
		public override void OnRelease()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x1549E14", Offset = "0x1549E14", VA = "0x1549E14")]
		private void doJet(float triggerValue)
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x154A084", Offset = "0x154A084", VA = "0x154A084")]
		private void stopJet()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x154A1C4", Offset = "0x154A1C4", VA = "0x154A1C4", Slot = "13")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x154A1C8", Offset = "0x154A1C8", VA = "0x154A1C8")]
		public HandJet()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class IKDummy : MonoBehaviour
	{
		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform PlayerTransform;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HeadFollow;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform RightHandFollow;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform LeftHandFollow;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 HandRotationOffset;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator animator;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform headBone;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform leftHandDummy;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform rightHandDummy;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lookatDummy;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 localPos;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion localRot;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform cam;

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x154D1BC", Offset = "0x154D1BC", VA = "0x154D1BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x154D2CC", Offset = "0x154D2CC", VA = "0x154D2CC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x154D698", Offset = "0x154D698", VA = "0x154D698")]
		private void OnAnimatorIK()
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x154D810", Offset = "0x154D810", VA = "0x154D810")]
		public IKDummy()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxRange;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask ValidLayers;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform LaserEnd;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Active;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer line;

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x13D5A08", Offset = "0x13D5A08", VA = "0x13D5A08")]
		private void Start()
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x13D5A60", Offset = "0x13D5A60", VA = "0x13D5A60")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x13D5DE0", Offset = "0x13D5DE0", VA = "0x13D5DE0")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class LaserSword : GrabbableEvents
	{
		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grabbable grabbable;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform BladeTransform;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform RaycastTransform;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LayerMask LaserCollision;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem CollisionParticle;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool BladeEnabled;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool SaberSwitchOn;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float LaserLength;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float LaserActivateSpeed;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource CollisionAudio;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool Colliding;

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x13D5DF8", Offset = "0x13D5DF8", VA = "0x13D5DF8")]
		private void Start()
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x13D5EA4", Offset = "0x13D5EA4", VA = "0x13D5EA4")]
		private void Update()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x13D64D0", Offset = "0x13D64D0", VA = "0x13D64D0", Slot = "11")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x13D60E8", Offset = "0x13D60E8", VA = "0x13D60E8")]
		private void checkCollision()
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x13D64EC", Offset = "0x13D64EC", VA = "0x13D64EC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x13D6684", Offset = "0x13D6684", VA = "0x13D6684")]
		public LaserSword()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class Marker : MonoBehaviour
	{
		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material DrawMaterial;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color DrawColor;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LineWidth;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform RaycastStart;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask DrawingLayers;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float RaycastLength;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float MinDrawDistance;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform lastDrawPoint;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform root;

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x13D8FFC", Offset = "0x13D8FFC", VA = "0x13D8FFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x13D92C8", Offset = "0x13D92C8", VA = "0x13D92C8", Slot = "4")]
		public virtual Transform InitDraw(Vector3 position, Quaternion rotation, float lineWidth, Color lineColor)
		{
			return null;
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x13D94D4", Offset = "0x13D94D4", VA = "0x13D94D4", Slot = "5")]
		public virtual Transform DrawPoint(Transform lastDrawPoint, Vector3 endPosition, float lineWidth, Color lineColor)
		{
			return null;
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0x13D97A8", Offset = "0x13D97A8", VA = "0x13D97A8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x13D98E8", Offset = "0x13D98E8", VA = "0x13D98E8")]
		public Marker()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class MoveToWaypoint : MonoBehaviour
	{
		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Waypoint Destination;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MovementSpeed;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ReachedDestination;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47AAC", Offset = "0xA47AAC")]
		public float StartDelay;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool reachedDelay;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float delayedTime;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 previousPosition;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 PositionDifference;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool MoveInUpdate;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool MoveInFixedUpdate;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigid;

		[Token(Token = "0x6002175")]
		[Address(RVA = "0x13D9934", Offset = "0x13D9934", VA = "0x13D9934")]
		private void Start()
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x13D999C", Offset = "0x13D999C", VA = "0x13D999C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x13D9DE4", Offset = "0x13D9DE4", VA = "0x13D9DE4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x13D9AD4", Offset = "0x13D9AD4", VA = "0x13D9AD4")]
		private void movePlatform(float timeDelta)
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x13D9E18", Offset = "0x13D9E18", VA = "0x13D9E18")]
		private void resetDelayStatus()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x13D9E24", Offset = "0x13D9E24", VA = "0x13D9E24")]
		public MoveToWaypoint()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class MovingPlatform : MonoBehaviour
	{
		[Token(Token = "0x600217B")]
		[Address(RVA = "0x13D9E44", Offset = "0x13D9E44", VA = "0x13D9E44")]
		public MovingPlatform()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class PlayerScaler : MonoBehaviour
	{
		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> ScaleObjects;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Scale;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float scaleSpeed;

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x13DD3B4", Offset = "0x13DD3B4", VA = "0x13DD3B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x13DD5F8", Offset = "0x13DD5F8", VA = "0x13DD5F8")]
		public PlayerScaler()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class ProjectileLauncher : MonoBehaviour
	{
		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ProjectileObject;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ProjectileForce;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip LaunchSound;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem LaunchParticles;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform MuzzleTransform;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _initialProjectileForce;

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x13E0124", Offset = "0x13E0124", VA = "0x13E0124")]
		private void Start()
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0x13E0130", Offset = "0x13E0130", VA = "0x13E0130")]
		public GameObject ShootProjectile(float projectileForce)
		{
			return null;
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x13E0420", Offset = "0x13E0420", VA = "0x13E0420")]
		public void ShootProjectile()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x13E0428", Offset = "0x13E0428", VA = "0x13E0428")]
		public void SetForce(float force)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x13E0430", Offset = "0x13E0430", VA = "0x13E0430")]
		public float GetInitialProjectileForce()
		{
			return default(float);
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x13E0438", Offset = "0x13E0438", VA = "0x13E0438")]
		public ProjectileLauncher()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class TimeController : MonoBehaviour
	{
		[Token(Token = "0x2000827")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA376C8", Offset = "0xA376C8")]
		private sealed class <resumeTimeRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimeController <>4__this;

			[Token(Token = "0x17000719")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033DD")]
				[Address(RVA = "0x13E7A5C", Offset = "0x13E7A5C", VA = "0x13E7A5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700071A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033DF")]
				[Address(RVA = "0x13E7AC4", Offset = "0x13E7AC4", VA = "0x13E7AC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033DA")]
			[Address(RVA = "0x13E78AC", Offset = "0x13E78AC", VA = "0x13E78AC")]
			[DebuggerHidden]
			public <resumeTimeRoutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60033DB")]
			[Address(RVA = "0x13E78F0", Offset = "0x13E78F0", VA = "0x13E78F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033DC")]
			[Address(RVA = "0x13E78F4", Offset = "0x13E78F4", VA = "0x13E78F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033DE")]
			[Address(RVA = "0x13E7A64", Offset = "0x13E7A64", VA = "0x13E7A64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47AE4", Offset = "0xA47AE4")]
		public float SlowTimeScale;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47B1C", Offset = "0xA47B1C")]
		public bool YKeySlowsTime;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47B54", Offset = "0xA47B54")]
		public AudioClip SlowTimeClip;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47B8C", Offset = "0xA47B8C")]
		public AudioClip SpeedupTimeClip;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47BC4", Offset = "0xA47BC4")]
		public bool SetFixedDelta;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _slowingTime;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool routineRunning;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float originalFixedDelta;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool ForceTimeScale;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IEnumerator resumeRoutine;

		[Token(Token = "0x170002BE")]
		public bool TimeSlowing
		{
			[Token(Token = "0x6002184")]
			[Address(RVA = "0x13E7554", Offset = "0x13E7554", VA = "0x13E7554")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x13E755C", Offset = "0x13E755C", VA = "0x13E755C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x13E7610", Offset = "0x13E7610", VA = "0x13E7610")]
		private void Update()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x13E76AC", Offset = "0x13E76AC", VA = "0x13E76AC")]
		public void SlowTime()
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x13E77D4", Offset = "0x13E77D4", VA = "0x13E77D4")]
		public void ResumeTime()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x13E783C", Offset = "0x13E783C", VA = "0x13E783C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA59FE8", Offset = "0xA59FE8")]
		private IEnumerator resumeTimeRoutine()
		{
			return null;
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x13E78D8", Offset = "0x13E78D8", VA = "0x13E78D8")]
		public TimeController()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class Waypoint : MonoBehaviour
	{
		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Waypoint Destination;

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x13E8AE0", Offset = "0x13E8AE0", VA = "0x13E8AE0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x13E8C40", Offset = "0x13E8C40", VA = "0x13E8C40")]
		public Waypoint()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class Zipline : GrabbableEvents
	{
		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ZiplineStart;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform ZiplineEnd;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ZiplineSpeed;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool UseLinearMovement;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastMoveTime;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool movingForward;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioSource audioSource;

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x13E9340", Offset = "0x13E9340", VA = "0x13E9340")]
		private void Start()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x13E9408", Offset = "0x13E9408", VA = "0x13E9408")]
		private void Update()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x13E94E0", Offset = "0x13E94E0", VA = "0x13E94E0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x13E9614", Offset = "0x13E9614", VA = "0x13E9614", Slot = "11")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x13E9954", Offset = "0x13E9954", VA = "0x13E9954", Slot = "14")]
		public override void OnButton1()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x13E9998", Offset = "0x13E9998", VA = "0x13E9998", Slot = "17")]
		public override void OnButton2()
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x13E9674", Offset = "0x13E9674", VA = "0x13E9674")]
		private void moveTowards(Vector3 pos, bool forwardDirection)
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x13E99DC", Offset = "0x13E99DC", VA = "0x13E99DC")]
		public Zipline()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class DetachableLimb : MonoBehaviour
	{
		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ShrinkBone;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ReplaceGrabbableWith;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject EnableOnDetach;

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x1539FA0", Offset = "0x1539FA0", VA = "0x1539FA0")]
		public void DoDismemberment(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x153A298", Offset = "0x153A298", VA = "0x153A298")]
		public void ReverseDismemberment()
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x153A3C0", Offset = "0x153A3C0", VA = "0x153A3C0")]
		public DetachableLimb()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class DoorHelper : MonoBehaviour
	{
		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip DoorOpenSound;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip DoorCloseSound;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47BFC", Offset = "0xA47BFC")]
		public bool RequireHandleTurnToOpen;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform HandleFollower;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float DegreesTurned;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float DegreesTurnToOpen;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform DoorLockTransform;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float initialLockPosition;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HingeJoint hinge;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rigid;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool playedOpenSound;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool readyToPlayCloseSound;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float AngularVelocitySnapDoor;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float angle;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float AngularVelocity;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool doorLocked;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lockPos;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string DebugText;

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x153A3C8", Offset = "0x153A3C8", VA = "0x153A3C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x153A490", Offset = "0x153A490", VA = "0x153A490")]
		private void Update()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x153AA68", Offset = "0x153AA68", VA = "0x153AA68")]
		public DoorHelper()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class GrabberArea : MonoBehaviour
	{
		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber InArea;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Grabber> grabbersInArea;

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x154767C", Offset = "0x154767C", VA = "0x154767C", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x15476A0", Offset = "0x15476A0", VA = "0x15476A0")]
		public Grabber GetOpenGrabber()
		{
			return null;
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x15477BC", Offset = "0x15477BC", VA = "0x15477BC", Slot = "5")]
		public virtual void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x15478D8", Offset = "0x15478D8", VA = "0x15478D8", Slot = "6")]
		public virtual void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x15479C4", Offset = "0x15479C4", VA = "0x15479C4")]
		public GrabberArea()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class HandCollision : MonoBehaviour
	{
		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandController HandControl;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber HandGrabber;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool EnableHandCollision;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool EnableCollisionOnPoint;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool EnableCollisionOnFist;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool EnableCollisionOnAllPoses;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool EnableCollisionDuringGrab;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PointAmount;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float GripAmount;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool MakingFist;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Collider> handColliders;

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x1548C6C", Offset = "0x1548C6C", VA = "0x1548C6C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x1548D74", Offset = "0x1548D74", VA = "0x1548D74")]
		private void Update()
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x1549048", Offset = "0x1549048", VA = "0x1549048")]
		public HandCollision()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class HandController : MonoBehaviour
	{
		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform HandAnchor;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator HandAnimator;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Grabber grabber;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float GripAmount;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _prevGrip;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float PointAmount;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _prevPoint;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ThumbAmount;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _prevThumb;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int PoseId;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float HandAnimationSpeed;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputBridge input;

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x15494D0", Offset = "0x15494D0", VA = "0x15494D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x1549608", Offset = "0x1549608", VA = "0x1549608")]
		private void Update()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x15499A4", Offset = "0x15499A4", VA = "0x15499A4")]
		private void updateAnimimationStates()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x1549D44", Offset = "0x1549D44", VA = "0x1549D44")]
		public HandController()
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x1549D1C", Offset = "0x1549D1C", VA = "0x1549D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A04C", Offset = "0xA5A04C")]
		private void <updateAnimimationStates>g__setAnimatorBlend|14_0(float min, float max, float input, int animationLayer)
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class HandTracking : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA376D8", Offset = "0xA376D8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<OVRBone, bool> <>9__22_0;

			[Token(Token = "0x4002F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<OVRBone, bool> <>9__22_1;

			[Token(Token = "0x60033E1")]
			[Address(RVA = "0x154AEC4", Offset = "0x154AEC4", VA = "0x154AEC4")]
			public <>c()
			{
			}

			[Token(Token = "0x60033E2")]
			[Address(RVA = "0x154AECC", Offset = "0x154AECC", VA = "0x154AECC")]
			internal bool <Update>b__22_0(OVRBone x)
			{
				return default(bool);
			}

			[Token(Token = "0x60033E3")]
			[Address(RVA = "0x154AEEC", Offset = "0x154AEEC", VA = "0x154AEEC")]
			internal bool <Update>b__22_1(OVRBone x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OVRHand LeftHand;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRHand RightHand;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabber LeftGrabber;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Grabber RightGrabber;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LeftModelHolder;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform RightModelHolder;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IsHandTracking;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool wasHandTracking;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public OVRHand.TrackingConfidence LeftHandConfidence;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVRHand.TrackingConfidence RightHandConfidence;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool IsLeftIndexPinching;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float LeftIndexPinchStrength;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool IsRightIndexPinching;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float RightIndexPinchStrength;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 RightIndexPosition;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 LeftIndexPosition;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool DoPinchToGrab;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private OVRSkeleton leftSkele;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private OVRSkeleton rightSkele;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private OVRBone leftIndexBone;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private OVRBone rightIndexBone;

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x154A798", Offset = "0x154A798", VA = "0x154A798")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x154A810", Offset = "0x154A810", VA = "0x154A810")]
		private void Update()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x154AB58", Offset = "0x154AB58", VA = "0x154AB58")]
		private void updateHandTracking()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x154ADEC", Offset = "0x154ADEC", VA = "0x154ADEC")]
		private void onHandTrackingChange(bool handTrackingEnabled)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x154AC40", Offset = "0x154AC40", VA = "0x154AC40")]
		private void updateGrabbers()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x154AE50", Offset = "0x154AE50", VA = "0x154AE50")]
		public HandTracking()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class HandleGFXHelper : MonoBehaviour
	{
		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LookAt;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable HandleGrabbable;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Speed;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LocalYMin;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LocalYMax;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initialRot;

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x154BAFC", Offset = "0x154BAFC", VA = "0x154BAFC")]
		private void Start()
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x154BB38", Offset = "0x154BB38", VA = "0x154BB38")]
		private void Update()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x154BF10", Offset = "0x154BF10", VA = "0x154BF10")]
		public HandleGFXHelper()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class HandleHelper : MonoBehaviour
	{
		[Token(Token = "0x2000829")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA376E8", Offset = "0xA376E8")]
		private sealed class <doRelease>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandleHelper <>4__this;

			[Token(Token = "0x1700071B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033E7")]
				[Address(RVA = "0x154C53C", Offset = "0x154C53C", VA = "0x154C53C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700071C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033E9")]
				[Address(RVA = "0x154C5A4", Offset = "0x154C5A4", VA = "0x154C5A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033E4")]
			[Address(RVA = "0x154C450", Offset = "0x154C450", VA = "0x154C450")]
			[DebuggerHidden]
			public <doRelease>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60033E5")]
			[Address(RVA = "0x154C484", Offset = "0x154C484", VA = "0x154C484", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033E6")]
			[Address(RVA = "0x154C488", Offset = "0x154C488", VA = "0x154C488", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033E8")]
			[Address(RVA = "0x154C544", Offset = "0x154C544", VA = "0x154C544", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody ParentRigid;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HandleTransform;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Grabbable thisGrab;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool didRelease;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider col;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 lastAngularVelocity;

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x154BF2C", Offset = "0x154BF2C", VA = "0x154BF2C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x154C0A0", Offset = "0x154C0A0", VA = "0x154C0A0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x154C410", Offset = "0x154C410", VA = "0x154C410")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x154C3A0", Offset = "0x154C3A0", VA = "0x154C3A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5A05C", Offset = "0xA5A05C")]
		private IEnumerator doRelease()
		{
			return null;
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x154C47C", Offset = "0x154C47C", VA = "0x154C47C")]
		public HandleHelper()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class IgnoreColliders : MonoBehaviour
	{
		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Collider> CollidersToIgnore;

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x154D888", Offset = "0x154D888", VA = "0x154D888")]
		private void Start()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x154DA24", Offset = "0x154DA24", VA = "0x154DA24")]
		public IgnoreColliders()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class InvalidTeleportArea : MonoBehaviour
	{
		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x13D48AC", Offset = "0x13D48AC", VA = "0x13D48AC")]
		public InvalidTeleportArea()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class JointBreaker : MonoBehaviour
	{
		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float BreakDistance;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float JointDistance;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DestroyJointOnBreak;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrabberEvent OnBreakEvent;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Joint theJoint;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 startPos;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool brokeJoint;

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x13D48B4", Offset = "0x13D48B4", VA = "0x13D48B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x13D4930", Offset = "0x13D4930", VA = "0x13D4930")]
		private void Update()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x13D4A2C", Offset = "0x13D4A2C", VA = "0x13D4A2C")]
		public void BreakJoint()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x13D4BC0", Offset = "0x13D4BC0", VA = "0x13D4BC0")]
		public JointBreaker()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class JointHelper : MonoBehaviour
	{
		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LockXPosition;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool LockYPosition;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool LockZPosition;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool LockXScale;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool LockYScale;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool LockZScale;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool LockXRotation;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool LockYRotation;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool LockZRotation;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 initialPosition;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialRotation;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 initialScale;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 currentPosition;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 currentScale;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentRotation;

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x13D4BD8", Offset = "0x13D4BD8", VA = "0x13D4BD8")]
		private void Start()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x13D4C54", Offset = "0x13D4C54", VA = "0x13D4C54", Slot = "4")]
		public virtual void lockPosition()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x13D4EB0", Offset = "0x13D4EB0", VA = "0x13D4EB0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x13D4EBC", Offset = "0x13D4EBC", VA = "0x13D4EBC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x13D4EC8", Offset = "0x13D4EC8", VA = "0x13D4EC8")]
		public JointHelper()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class RagdollHelper : MonoBehaviour
	{
		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform player;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Collider> colliders;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider playerCol;

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x13E0448", Offset = "0x13E0448", VA = "0x13E0448")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x13E059C", Offset = "0x13E059C", VA = "0x13E059C")]
		public RagdollHelper()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class RingHelper : MonoBehaviour
	{
		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color RingColor;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color RingSelectedColor;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color RingSecondarySelectedColor;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float ringSizeInRange;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float ringSizeGrabbable;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool HideIfHandsAreFull;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float RingFadeSpeed;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Canvas canvas;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text text;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Grabbable grabbable;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CanvasScaler scaler;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Grabber leftGrabber;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Grabber rightGrabber;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool handsFull;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool shouldShowRing;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _initalOpacity;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _currentOpacity;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform mainCam;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Grabber closestGrabber;

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x13E3DDC", Offset = "0x13E3DDC", VA = "0x13E3DDC")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x13E3FD0", Offset = "0x13E3FD0", VA = "0x13E3FD0")]
		private void Update()
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x13E4200", Offset = "0x13E4200", VA = "0x13E4200")]
		private Color getSelectedColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x13E4314", Offset = "0x13E4314", VA = "0x13E4314")]
		public RingHelper()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class ScaleMaterialHelper : MonoBehaviour
	{
		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer ren;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 Tiling;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 Offset;

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x13E4B4C", Offset = "0x13E4B4C", VA = "0x13E4B4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x13E4C04", Offset = "0x13E4C04", VA = "0x13E4C04")]
		private void Update()
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x13E4BA8", Offset = "0x13E4BA8", VA = "0x13E4BA8")]
		private void updateTexture()
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x13E4C3C", Offset = "0x13E4C3C", VA = "0x13E4C3C")]
		public ScaleMaterialHelper()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public class StaticBatch : MonoBehaviour
	{
		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material CombineMaterial;

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x13E6E34", Offset = "0x13E6E34", VA = "0x13E6E34")]
		private void Start()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x13E7404", Offset = "0x13E7404", VA = "0x13E7404")]
		public StaticBatch()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class TeleportDestination : MonoBehaviour
	{
		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform DestinationTransform;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ForcePlayerRotation;

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x13E740C", Offset = "0x13E740C", VA = "0x13E740C")]
		public TeleportDestination()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class TeleportPlayerOnEnter : MonoBehaviour
	{
		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TeleportDestination;

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x13E7414", Offset = "0x13E7414", VA = "0x13E7414")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x13E754C", Offset = "0x13E754C", VA = "0x13E754C")]
		public TeleportPlayerOnEnter()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class UIPointer : MonoBehaviour
	{
		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform PointerObject;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer uiLiner;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRGazePointer uiCursor;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MaxDistance;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LineDistanceModifier;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float PointerLocalScale;

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x13E7F74", Offset = "0x13E7F74", VA = "0x13E7F74")]
		private void Start()
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x13E8038", Offset = "0x13E8038", VA = "0x13E8038")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x13E8270", Offset = "0x13E8270", VA = "0x13E8270")]
		public UIPointer()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class DestroyIfPlayMode : MonoBehaviour
	{
		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x1539E54", Offset = "0x1539E54", VA = "0x1539E54")]
		private void Start()
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x1539F04", Offset = "0x1539F04", VA = "0x1539F04")]
		public DestroyIfPlayMode()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class VRUtils : MonoBehaviour
	{
		[Token(Token = "0x200082A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA376F8", Offset = "0xA376F8")]
		private sealed class <WaitAndPlaySpatialClip>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float fDelay;

			[Token(Token = "0x4002F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 pos;

			[Token(Token = "0x4002F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioClip clip;

			[Token(Token = "0x4002F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float spatialBlend;

			[Token(Token = "0x4002F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float volume;

			[Token(Token = "0x1700071D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033ED")]
				[Address(RVA = "0x13E8A70", Offset = "0x13E8A70", VA = "0x13E8A70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700071E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033EF")]
				[Address(RVA = "0x13E8AD8", Offset = "0x13E8AD8", VA = "0x13E8AD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033EA")]
			[Address(RVA = "0x13E8808", Offset = "0x13E8808", VA = "0x13E8808")]
			[DebuggerHidden]
			public <WaitAndPlaySpatialClip>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60033EB")]
			[Address(RVA = "0x13E88B8", Offset = "0x13E88B8", VA = "0x13E88B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033EC")]
			[Address(RVA = "0x13E88BC", Offset = "0x13E88BC", VA = "0x13E88BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033EE")]
			[Address(RVA = "0x13E8A78", Offset = "0x13E8A78", VA = "0x13E8A78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRUtils Instance;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color DebugTextColor;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform DebugTextHolder;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float MaxTextEntries;

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x13E8290", Offset = "0x13E8290", VA = "0x13E8290")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x13E82E4", Offset = "0x13E82E4", VA = "0x13E82E4")]
		public void Log(string msg)
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x13E8664", Offset = "0x13E8664", VA = "0x13E8664")]
		public void PlaySpatialClipAtDelayed(AudioClip clip, Vector3 pos, float volume, float fDelay, float spatialBlend = 1f)
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x13E875C", Offset = "0x13E875C", VA = "0x13E875C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5A0C0", Offset = "0xA5A0C0")]
		private IEnumerator WaitAndPlaySpatialClip(AudioClip clip, Vector3 pos, float volume, float fDelay, float spatialBlend = 1f)
		{
			return null;
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x13D87F0", Offset = "0x13D87F0", VA = "0x13D87F0")]
		public AudioSource PlaySpatialClipAt(AudioClip clip, Vector3 pos, float volume, float spatialBlend = 1f, float randomizePitch = 0f)
		{
			return null;
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x13E8834", Offset = "0x13E8834", VA = "0x13E8834")]
		private float getRandomizedPitch(float randomAmount)
		{
			return default(float);
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x13E887C", Offset = "0x13E887C", VA = "0x13E887C")]
		public VRUtils()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class AmmoDispenser : MonoBehaviour
	{
		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabber LeftGrabber;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabber RightGrabber;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject AmmoDispenserObject;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject PistolClip;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ShotgunShell;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject RifleClip;

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x129E7EC", Offset = "0x129E7EC", VA = "0x129E7EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x129E864", Offset = "0x129E864", VA = "0x129E864")]
		private bool grabberHasWeapon(Grabber g)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x129E994", Offset = "0x129E994", VA = "0x129E994")]
		private GameObject getAmmo()
		{
			return null;
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x129EBF4", Offset = "0x129EBF4", VA = "0x129EBF4")]
		public void GrabAmmo(Grabber grabber)
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x129EE70", Offset = "0x129EE70", VA = "0x129EE70")]
		public AmmoDispenser()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class AmmoDisplay : MonoBehaviour
	{
		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaycastWeapon Weapon;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text AmmoLabel;

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x129EE78", Offset = "0x129EE78", VA = "0x129EE78")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x129EF4C", Offset = "0x129EF4C", VA = "0x129EF4C")]
		public AmmoDisplay()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class Bullet : MonoBehaviour
	{
		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x12A4594", Offset = "0x12A4594", VA = "0x12A4594")]
		public Bullet()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class BulletInsert : MonoBehaviour
	{
		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RaycastWeapon Weapon;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string AcceptBulletName;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip InsertSound;

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x12A4A30", Offset = "0x12A4A30", VA = "0x12A4A30")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x12A4C74", Offset = "0x12A4C74", VA = "0x12A4C74")]
		public BulletInsert()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class MagazineSlide : MonoBehaviour
	{
		[Token(Token = "0x200082B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37708", Offset = "0xA37708")]
		private sealed class <EjectMagRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable ejectedMag;

			[Token(Token = "0x4002F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagazineSlide <>4__this;

			[Token(Token = "0x1700071F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033F3")]
				[Address(RVA = "0x13D8F8C", Offset = "0x13D8F8C", VA = "0x13D8F8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000720")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033F5")]
				[Address(RVA = "0x13D8FF4", Offset = "0x13D8FF4", VA = "0x13D8FF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033F0")]
			[Address(RVA = "0x13D8A78", Offset = "0x13D8A78", VA = "0x13D8A78")]
			[DebuggerHidden]
			public <EjectMagRoutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60033F1")]
			[Address(RVA = "0x13D8CA4", Offset = "0x13D8CA4", VA = "0x13D8CA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033F2")]
			[Address(RVA = "0x13D8CA8", Offset = "0x13D8CA8", VA = "0x13D8CA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033F4")]
			[Address(RVA = "0x13D8F94", Offset = "0x13D8F94", VA = "0x13D8F94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AcceptableMagazineName;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable AttachedWeapon;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ClipSnapDistance;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ClipUnsnapDistance;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float EjectForce;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Grabbable HeldMagazine;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider HeldCollider;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float MagazineDistance;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool magazineInPlace;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool lockedInPlace;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip ClipAttachSound;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip ClipDetachSound;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RaycastWeapon parentWeapon;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GrabberArea grabClipArea;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lastEjectTime;

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x13D7AC8", Offset = "0x13D7AC8", VA = "0x13D7AC8")]
		private void Start()
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x13D7BA8", Offset = "0x13D7BA8", VA = "0x13D7BA8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x13D8170", Offset = "0x13D8170", VA = "0x13D8170")]
		private bool recentlyEjected()
		{
			return default(bool);
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x13D811C", Offset = "0x13D811C", VA = "0x13D811C")]
		private void moveMagazine(Vector3 localPosition)
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x13D7F18", Offset = "0x13D7F18", VA = "0x13D7F18")]
		private void checkGrabClipInput()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x13D81AC", Offset = "0x13D81AC", VA = "0x13D81AC")]
		private void attachMagazine()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x13D8438", Offset = "0x13D8438", VA = "0x13D8438")]
		private Grabbable detachMagazine()
		{
			return null;
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x13D89B4", Offset = "0x13D89B4", VA = "0x13D89B4")]
		public void EjectMagazine()
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x13D89FC", Offset = "0x13D89FC", VA = "0x13D89FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5A124", Offset = "0xA5A124")]
		private IEnumerator EjectMagRoutine(Grabbable ejectedMag)
		{
			return null;
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x13D8714", Offset = "0x13D8714", VA = "0x13D8714")]
		public void OnGrabClipArea(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x13D8AA4", Offset = "0x13D8AA4", VA = "0x13D8AA4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x13D8C38", Offset = "0x13D8C38", VA = "0x13D8C38")]
		public MagazineSlide()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class Projectile : MonoBehaviour
	{
		[Token(Token = "0x200082C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37718", Offset = "0xA37718")]
		private sealed class <CheckForRaycast>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Projectile <>4__this;

			[Token(Token = "0x17000721")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033F9")]
				[Address(RVA = "0x13E00B4", Offset = "0x13E00B4", VA = "0x13E00B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000722")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033FB")]
				[Address(RVA = "0x13E011C", Offset = "0x13E011C", VA = "0x13E011C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033F6")]
			[Address(RVA = "0x13DFF8C", Offset = "0x13DFF8C", VA = "0x13DFF8C")]
			[DebuggerHidden]
			public <CheckForRaycast>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60033F7")]
			[Address(RVA = "0x13DFFE0", Offset = "0x13DFFE0", VA = "0x13DFFE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033F8")]
			[Address(RVA = "0x13DFFE4", Offset = "0x13DFFE4", VA = "0x13DFFE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033FA")]
			[Address(RVA = "0x13E00BC", Offset = "0x13E00BC", VA = "0x13E00BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody m_RigidBody;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject HitFXPrefab;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _checkRaycast;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Damage;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float AddRigidForce;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask ValidLayers;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool StickToObject;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ShootingConversationResolver convoResolver;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GenericSceneManager cocManager;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MinForceHit;

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x13DF6BC", Offset = "0x13DF6BC", VA = "0x13DF6BC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x13DF9C8", Offset = "0x13DF9C8", VA = "0x13DF9C8")]
		private void DoHitFX(Vector3 pos, Quaternion rot, Collider col)
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x13DFCB8", Offset = "0x13DFCB8", VA = "0x13DFCB8")]
		public void MarkAsRaycastBullet()
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x13DFD5C", Offset = "0x13DFD5C", VA = "0x13DFD5C")]
		private void doRayCastProjectile()
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x13DFCEC", Offset = "0x13DFCEC", VA = "0x13DFCEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5A188", Offset = "0xA5A188")]
		private IEnumerator CheckForRaycast()
		{
			return null;
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x13DFFB8", Offset = "0x13DFFB8", VA = "0x13DFFB8")]
		public void SetCocManager(GenericSceneManager man)
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x13DFFC0", Offset = "0x13DFFC0", VA = "0x13DFFC0")]
		public Projectile()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class RaycastWeapon : GrabbableEvents
	{
		[Token(Token = "0x200082D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37728", Offset = "0xA37728")]
		private sealed class <doMuzzleFlash>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaycastWeapon <>4__this;

			[Token(Token = "0x17000723")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033FF")]
				[Address(RVA = "0x13E3138", Offset = "0x13E3138", VA = "0x13E3138", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000724")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003401")]
				[Address(RVA = "0x13E31A0", Offset = "0x13E31A0", VA = "0x13E31A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033FC")]
			[Address(RVA = "0x13E28FC", Offset = "0x13E28FC", VA = "0x13E28FC")]
			[DebuggerHidden]
			public <doMuzzleFlash>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x60033FD")]
			[Address(RVA = "0x13E3018", Offset = "0x13E3018", VA = "0x13E3018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033FE")]
			[Address(RVA = "0x13E301C", Offset = "0x13E301C", VA = "0x13E301C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003400")]
			[Address(RVA = "0x13E3140", Offset = "0x13E3140", VA = "0x13E3140", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200082E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37738", Offset = "0xA37738")]
		private sealed class <animateSlideAndEject>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaycastWeapon <>4__this;

			[Token(Token = "0x4002F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <frames>5__2;

			[Token(Token = "0x4002F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <slideEndReached>5__3;

			[Token(Token = "0x4002F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <slideDestination>5__4;

			[Token(Token = "0x4002F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <slideBeginningReached>5__5;

			[Token(Token = "0x17000725")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003405")]
				[Address(RVA = "0x13E2FA8", Offset = "0x13E2FA8", VA = "0x13E2FA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000726")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003407")]
				[Address(RVA = "0x13E3010", Offset = "0x13E3010", VA = "0x13E3010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003402")]
			[Address(RVA = "0x13E2928", Offset = "0x13E2928", VA = "0x13E2928")]
			[DebuggerHidden]
			public <animateSlideAndEject>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6003403")]
			[Address(RVA = "0x13E2A20", Offset = "0x13E2A20", VA = "0x13E2A20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003404")]
			[Address(RVA = "0x13E2A24", Offset = "0x13E2A24", VA = "0x13E2A24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003406")]
			[Address(RVA = "0x13E2FB0", Offset = "0x13E2FB0", VA = "0x13E2FB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GenericSceneManager _sceneManager;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MaxRange;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float Damage;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FiringType FiringMethod;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ReloadType ReloadMethod;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float FiringRate;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float lastShotTime;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MaxInternalAmmo;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool AutoChamberRounds;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool MustChamberRounds;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 RecoilForce;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody weaponRigid;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LayerMask ValidLayers;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform TriggerTransform;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform SlideTransform;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform MuzzlePointTransform;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform EjectPointTransform;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform ChamberedBullet;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject MuzzleFlashObject;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float muzzleFlashTime;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject BulletCasingPrefab;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool useProjectile;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject ProjectilePrefab;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject HitFXPrefab;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AudioClip GunShotSound;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip EmptySound;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioSource loadBulletSFX;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float SlideDistance;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool BulletInChamber;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		public bool EmptyBulletInChamber;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE")]
		public bool ForceSlideBackOnLastShot;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Grabbable SecondHandGrabbable;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool slideForcedBack;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		public bool preLoaded;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private WeaponSlide ws;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float originalTriggerX;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool readyToShoot;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		private bool checkOnce;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private ShootingConversationResolver convoResolver;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private bool useAmmoCounter;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private TextMeshPro bulletCounter;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GrabbableExt m_Weapon;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ControllerHand m_lastHandHeld;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool onCooldown;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float cooldownTimer;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 initialSecondaryOffset;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float yOffset;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float ShotForce;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private IEnumerator shotRoutine;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float slideSpeed;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public float minSlideDistance;

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x13E05F4", Offset = "0x13E05F4", VA = "0x13E05F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x13E08C4", Offset = "0x13E08C4", VA = "0x13E08C4", Slot = "4")]
		public override void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x13E096C", Offset = "0x13E096C", VA = "0x13E096C", Slot = "12")]
		public override void OnTriggerDown()
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x13E0974", Offset = "0x13E0974", VA = "0x13E0974", Slot = "13")]
		public override void OnTriggerUp()
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x13E097C", Offset = "0x13E097C", VA = "0x13E097C", Slot = "11")]
		public override void OnTrigger(float triggerValue)
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x13E1C50", Offset = "0x13E1C50", VA = "0x13E1C50")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x13E1658", Offset = "0x13E1658", VA = "0x13E1658")]
		private void checkSecondaryWeaponLook()
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x13E1EBC", Offset = "0x13E1EBC", VA = "0x13E1EBC")]
		private void OnTrigger(float triggerValue, ControllerHand touchingHand)
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x13E1F28", Offset = "0x13E1F28", VA = "0x13E1F28")]
		private void doHaptics(ControllerHand touchingHand, bool isEmpty = false)
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x13E2038", Offset = "0x13E2038", VA = "0x13E2038", Slot = "15")]
		public override void OnButton1Down()
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x13E21DC", Offset = "0x13E21DC", VA = "0x13E21DC", Slot = "18")]
		public override void OnButton2Down()
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x13E0AE0", Offset = "0x13E0AE0", VA = "0x13E0AE0")]
		public void Shoot()
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x13D89AC", Offset = "0x13D89AC", VA = "0x13D89AC")]
		public void OnAttachedAmmo()
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x13D89B0", Offset = "0x13D89B0", VA = "0x13D89B0")]
		public void OnDetachedAmmo()
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x13E2284", Offset = "0x13E2284", VA = "0x13E2284")]
		public int GetBulletCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x13E24E4", Offset = "0x13E24E4", VA = "0x13E24E4")]
		private void removeBullet()
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x13E075C", Offset = "0x13E075C", VA = "0x13E075C")]
		private void updateChamberedBullet()
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x13E22F8", Offset = "0x13E22F8", VA = "0x13E22F8")]
		public void chamberRound()
		{
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x13E25DC", Offset = "0x13E25DC", VA = "0x13E25DC")]
		private void randomizeMuzzleFlashScaleRotation()
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x13E0818", Offset = "0x13E0818", VA = "0x13E0818")]
		public void OnWeaponCharged(bool allowCasingEject)
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x13E271C", Offset = "0x13E271C", VA = "0x13E271C")]
		private void ejectCasing()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x13E2474", Offset = "0x13E2474", VA = "0x13E2474")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5A1EC", Offset = "0xA5A1EC")]
		private IEnumerator doMuzzleFlash()
		{
			return null;
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x13E2404", Offset = "0x13E2404", VA = "0x13E2404")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5A250", Offset = "0xA5A250")]
		private IEnumerator animateSlideAndEject()
		{
			return null;
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x13E0870", Offset = "0x13E0870", VA = "0x13E0870")]
		public void UpdateAmmoCounter()
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x13E2954", Offset = "0x13E2954", VA = "0x13E2954")]
		public RaycastWeapon()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public enum FiringType
	{
		[Token(Token = "0x4002170")]
		Semi,
		[Token(Token = "0x4002171")]
		Automatic
	}
	[Token(Token = "0x20004F1")]
	public enum ReloadType
	{
		[Token(Token = "0x4002173")]
		InfiniteAmmo,
		[Token(Token = "0x4002174")]
		ManualClip
	}
	[Token(Token = "0x20004F2")]
	public class WeaponSlide : MonoBehaviour
	{
		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinLocalZ;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxLocalZ;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool slidingBack;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool LockedBack;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip SlideReleaseSound;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip LockedBackSound;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ZeroMassWhenNotHeld;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RaycastWeapon parentWeapon;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable parentGrabbable;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 initialLocalPos;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Grabbable thisGrabbable;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource audioSource;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigid;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float initialMass;

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x13E8C48", Offset = "0x13E8C48", VA = "0x13E8C48")]
		private void Start()
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x13E8DD8", Offset = "0x13E8DD8", VA = "0x13E8DD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x13E90E0", Offset = "0x13E90E0", VA = "0x13E90E0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x13E2338", Offset = "0x13E2338", VA = "0x13E2338")]
		public void LockBack()
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x13E20C8", Offset = "0x13E20C8", VA = "0x13E20C8")]
		public void UnlockBack()
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x13E8FB0", Offset = "0x13E8FB0", VA = "0x13E8FB0")]
		private void onSlideBack()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x13E907C", Offset = "0x13E907C", VA = "0x13E907C")]
		private void onSlideForward()
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x13E91DC", Offset = "0x13E91DC", VA = "0x13E91DC")]
		private void playSoundInterval(float fromSeconds, float toSeconds, float volume)
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x13E9320", Offset = "0x13E9320", VA = "0x13E9320")]
		public WeaponSlide()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	public class ButtonExt : MonoBehaviour
	{
		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinLocalY;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxLocalY;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ClickTolerance;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Grabber> grabbers;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SpringJoint joint;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool clickingDown;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip ButtonClick;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ButtonClickUp;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onButtonDown;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onButtonUp;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource audioSource;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float restingDistance;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Grabbable[] m_Disablers;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool GrabbableDisable;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float ButtonSpeed;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float SpringForce;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool beingHeld;

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x12A5868", Offset = "0x12A5868", VA = "0x12A5868")]
		private void Start()
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x12A59B4", Offset = "0x12A59B4", VA = "0x12A59B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x12A5D2C", Offset = "0x12A5D2C", VA = "0x12A5D2C")]
		public bool ButtonResting()
		{
			return default(bool);
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x1297ACC", Offset = "0x1297ACC", VA = "0x1297ACC")]
		public void ToggleCollider(bool enable)
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x12A5D6C", Offset = "0x12A5D6C", VA = "0x12A5D6C", Slot = "4")]
		public virtual void OnButtonDown()
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x12A5E58", Offset = "0x12A5E58", VA = "0x12A5E58", Slot = "5")]
		public virtual void OnButtonUp()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x12A5E6C", Offset = "0x12A5E6C", VA = "0x12A5E6C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x12A5F88", Offset = "0x12A5F88", VA = "0x12A5F88")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x12A6074", Offset = "0x12A6074", VA = "0x12A6074")]
		public ButtonExt()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public class CollisionSoundExt : MonoBehaviour
	{
		[Token(Token = "0x200082F")]
		public enum GestureRequirement
		{
			[Token(Token = "0x4002F3A")]
			Fist,
			[Token(Token = "0x4002F3B")]
			Point,
			[Token(Token = "0x4002F3C")]
			Grabbing
		}

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip CollisionAudio;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip SecondaryCollisionAudio;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource FollowUpAudio;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource audioSource;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float startTime;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider col;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Grabbable grab;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MinimumVolume;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MaximumVolume;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool RecentlyPlayedSound;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float lastPlayedSound;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float LastRelativeVelocity;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool playAnyway;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_WaitCooldown;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool checkGrabbales;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Grabbable[] m_Grabbables;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool requireGesture;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public GestureRequirement requiredGesture;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool didCreateCollision;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int timesCollided;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected InputBridge input;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool secondaryAudio;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool followUp;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[SerializeField]
		private bool ShouldAddForce;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		public bool punchedNose;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float VibrateFrequency;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float VibrateAmplitude;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float VibrateDuration;

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x1537420", Offset = "0x1537420", VA = "0x1537420")]
		private void Start()
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x153759C", Offset = "0x153759C", VA = "0x153759C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x1537C90", Offset = "0x1537C90", VA = "0x1537C90")]
		private void PlaySecondaryAudio()
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x1537D20", Offset = "0x1537D20", VA = "0x1537D20")]
		private void resetLastPlayedSound()
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x1537D2C", Offset = "0x1537D2C", VA = "0x1537D2C")]
		public CollisionSoundExt()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class GrabbableExt : Grabbable
	{
		[Token(Token = "0x2000830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37748", Offset = "0xA37748")]
		private sealed class <WaitAndEnableCollision>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrabbableExt <>4__this;

			[Token(Token = "0x17000727")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600340B")]
				[Address(RVA = "0x15430D4", Offset = "0x15430D4", VA = "0x15430D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000728")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600340D")]
				[Address(RVA = "0x154313C", Offset = "0x154313C", VA = "0x154313C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003408")]
			[Address(RVA = "0x15423D8", Offset = "0x15423D8", VA = "0x15423D8")]
			[DebuggerHidden]
			public <WaitAndEnableCollision>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6003409")]
			[Address(RVA = "0x1542FE0", Offset = "0x1542FE0", VA = "0x1542FE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600340A")]
			[Address(RVA = "0x1542FE4", Offset = "0x1542FE4", VA = "0x1542FE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600340C")]
			[Address(RVA = "0x15430DC", Offset = "0x15430DC", VA = "0x15430DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000831")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37758", Offset = "0xA37758")]
		private sealed class <Release>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrabbableExt <>4__this;

			[Token(Token = "0x4002F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 velocity;

			[Token(Token = "0x4002F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 angularVelocity;

			[Token(Token = "0x17000729")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003411")]
				[Address(RVA = "0x1542F70", Offset = "0x1542F70", VA = "0x1542F70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700072A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003413")]
				[Address(RVA = "0x1542FD8", Offset = "0x1542FD8", VA = "0x1542FD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600340E")]
			[Address(RVA = "0x1542BC0", Offset = "0x1542BC0", VA = "0x1542BC0")]
			[DebuggerHidden]
			public <Release>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x600340F")]
			[Address(RVA = "0x1542C2C", Offset = "0x1542C2C", VA = "0x1542C2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003410")]
			[Address(RVA = "0x1542C30", Offset = "0x1542C30", VA = "0x1542C30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003412")]
			[Address(RVA = "0x1542F78", Offset = "0x1542F78", VA = "0x1542F78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
		public bool m_UsesOffHandGrabPoints;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA47CD4", Offset = "0xA47CD4")]
		public List<Transform> OffHandGrabPoints;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private AudioSource m_PickupSFX;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		public AudioSource m_ThrowSFX;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private bool m_shouldDelayCollisions;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[SerializeField]
		private float m_CollisionCheckWait;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private bool m_hasBeenThrown;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float ThrownMagnitude;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public bool shouldResetParent;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		public bool shouldUnParentOnRemoteGrab;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
		public bool shouldDisableConstraintsOnGrab;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AB")]
		public bool shouldExtendRemoteGrabRange;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		private bool _useForce;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
		[SerializeField]
		private bool _thunderBall;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private float _magnitudeThreshold;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[SerializeField]
		private bool _enableDebug;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private KeyCode _debugThrowKey;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[SerializeField]
		private Vector3 _debugForce;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private bool _floatingGrabbable;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		[SerializeField]
		private bool _forceDisableRemoteGrabbing;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
		[SerializeField]
		private bool _shouldBruteForceRemoteGrab;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CB")]
		private bool collisionsEnabled;

		[Token(Token = "0x170002BF")]
		public bool HasBeenThrown
		{
			[Token(Token = "0x600222A")]
			[Address(RVA = "0x1541F38", Offset = "0x1541F38", VA = "0x1541F38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600222B")]
			[Address(RVA = "0x1541F40", Offset = "0x1541F40", VA = "0x1541F40")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public List<Grabber> HeldByGrabbers
		{
			[Token(Token = "0x600222C")]
			[Address(RVA = "0x1541F4C", Offset = "0x1541F4C", VA = "0x1541F4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x1541F54", Offset = "0x1541F54", VA = "0x1541F54", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x1541FB0", Offset = "0x1541FB0", VA = "0x1541FB0", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x1542024", Offset = "0x1542024", VA = "0x1542024")]
		public void ResetOriginalParent()
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x1542034", Offset = "0x1542034", VA = "0x1542034", Slot = "9")]
		public override void GrabItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x1542180", Offset = "0x1542180", VA = "0x1542180")]
		public void ToggleCollisionLock(bool toggle)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x15421B0", Offset = "0x15421B0", VA = "0x15421B0")]
		public void ToggleRemoteGrabbing(bool remoteGrabbing)
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x15421BC", Offset = "0x15421BC", VA = "0x15421BC", Slot = "10")]
		public override void GrabRemoteItem(Grabber grabbedBy)
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x15422BC", Offset = "0x15422BC", VA = "0x15422BC")]
		private void ToggleCollisions(bool toggle)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x1542110", Offset = "0x1542110", VA = "0x1542110")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5A2B4", Offset = "0xA5A2B4")]
		private IEnumerator WaitAndEnableCollision()
		{
			return null;
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x1542404", Offset = "0x1542404", VA = "0x1542404", Slot = "13")]
		public override void DropItem(Grabber droppedBy)
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x1542624", Offset = "0x1542624", VA = "0x1542624", Slot = "14")]
		public override void DropItem(bool resetVelocity, bool resetParent)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x15426E0", Offset = "0x15426E0", VA = "0x15426E0", Slot = "17")]
		public override Transform GetClosestGrabPoint(Grabber grabber)
		{
			return null;
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x1542A8C", Offset = "0x1542A8C", VA = "0x1542A8C", Slot = "11")]
		public override void DropItem(Grabber droppedBy, bool resetVelocity, bool resetParent)
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x1542B14", Offset = "0x1542B14", VA = "0x1542B14", Slot = "18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5A318", Offset = "0xA5A318")]
		public override IEnumerator Release(Vector3 velocity, Vector3 angularVelocity)
		{
			return null;
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x1542464", Offset = "0x1542464", VA = "0x1542464")]
		private void CheckDropVelocity()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x1542BEC", Offset = "0x1542BEC", VA = "0x1542BEC")]
		public GrabbableExt()
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x1542C28", Offset = "0x1542C28", VA = "0x1542C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A37C", Offset = "0xA5A37C")]
		[DebuggerHidden]
		private IEnumerator <>n__0(Vector3 velocity, Vector3 angularVelocity)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F6")]
	public class HandCollisionExt : MonoBehaviour
	{
		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HandCollision handCollision;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 savedLocalPos;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion savedLocalRot;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initRotation;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 initOffset;

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x1549060", Offset = "0x1549060", VA = "0x1549060")]
		private void Start()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x1549304", Offset = "0x1549304", VA = "0x1549304")]
		private void Update()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x1549458", Offset = "0x1549458", VA = "0x1549458")]
		public HandCollisionExt()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class JointHelperExt : JointHelper
	{
		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool StoreMicrowaveDial;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool OfficeMicrowaveDial;

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x13D4EE0", Offset = "0x13D4EE0", VA = "0x13D4EE0", Slot = "4")]
		public override void lockPosition()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x13D5150", Offset = "0x13D5150", VA = "0x13D5150")]
		public JointHelperExt()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class SliderExt : Slider
	{
		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Grabbable[] m_SliderHandle;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_CheckGrabbing;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Rigidbody m_Slider;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool beingHeld;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private SnapAxis m_Axis;

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x13E4EF8", Offset = "0x13E4EF8", VA = "0x13E4EF8", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x13E4F08", Offset = "0x13E4F08", VA = "0x13E4F08", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x13E5120", Offset = "0x13E5120", VA = "0x13E5120")]
		public SliderExt()
		{
		}
	}
}
namespace SubjectNerd.Utilities
{
	[Token(Token = "0x20004F9")]
	public class EditScriptableAttribute : PropertyAttribute
	{
		[Token(Token = "0x6002246")]
		[Address(RVA = "0x10E15C0", Offset = "0x10E15C0", VA = "0x10E15C0")]
		public EditScriptableAttribute()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class ReorderableAttribute : PropertyAttribute
	{
		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47E1C", Offset = "0xA47E1C")]
		private string <ElementHeader>k__BackingField;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47E2C", Offset = "0xA47E2C")]
		private bool <HeaderZeroIndex>k__BackingField;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47E3C", Offset = "0xA47E3C")]
		private bool <ElementSingleLine>k__BackingField;

		[Token(Token = "0x170002C1")]
		public string ElementHeader
		{
			[Token(Token = "0x6002247")]
			[Address(RVA = "0x10E15C8", Offset = "0x10E15C8", VA = "0x10E15C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A3B4", Offset = "0xA5A3B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002248")]
			[Address(RVA = "0x10E15D0", Offset = "0x10E15D0", VA = "0x10E15D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A3C4", Offset = "0xA5A3C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public bool HeaderZeroIndex
		{
			[Token(Token = "0x6002249")]
			[Address(RVA = "0x10E15D8", Offset = "0x10E15D8", VA = "0x10E15D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A3D4", Offset = "0xA5A3D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600224A")]
			[Address(RVA = "0x10E15E0", Offset = "0x10E15E0", VA = "0x10E15E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A3E4", Offset = "0xA5A3E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public bool ElementSingleLine
		{
			[Token(Token = "0x600224B")]
			[Address(RVA = "0x10E15EC", Offset = "0x10E15EC", VA = "0x10E15EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A3F4", Offset = "0xA5A3F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600224C")]
			[Address(RVA = "0x10E15F4", Offset = "0x10E15F4", VA = "0x10E15F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A404", Offset = "0xA5A404")]
			protected set
			{
			}
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x10E1600", Offset = "0x10E1600", VA = "0x10E1600")]
		public ReorderableAttribute()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x10E1668", Offset = "0x10E1668", VA = "0x10E1668")]
		public ReorderableAttribute(string headerString = "", bool isZeroIndex = true, bool isSingleLine = false)
		{
		}
	}
}
namespace FSG.MeshAnimator
{
	[Token(Token = "0x20004FB")]
	public class CrowdSpawner : MonoBehaviour
	{
		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<CrowdSpawner> spawners;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] options;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] optionsDesc;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] meshAnimationNames;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] otherInfo;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sizeOfCrowd;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int selectedOption;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int maxSize;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float radius;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float slopeStart;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float slopeAmount;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 radiusScaler;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 baseScale;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool randomizeTime;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool showGUI;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string fps;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int previousFrame;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int previousSelection;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int guiOffset;

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x13F9BE4", Offset = "0x13F9BE4", VA = "0x13F9BE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x13FA5D4", Offset = "0x13FA5D4", VA = "0x13FA5D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x13FA658", Offset = "0x13FA658", VA = "0x13FA658")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x13F9CA8", Offset = "0x13F9CA8", VA = "0x13F9CA8")]
		private void SpawnCrowd()
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x13FA6E0", Offset = "0x13FA6E0", VA = "0x13FA6E0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x13FAF04", Offset = "0x13FAF04", VA = "0x13FAF04")]
		public CrowdSpawner()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class AnimatorStateMachine : MonoBehaviour
	{
		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimatorBase meshAnimator;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool crossfade;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float crossfadeDuration;

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x13F95DC", Offset = "0x13F95DC", VA = "0x13F95DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x13F9704", Offset = "0x13F9704", VA = "0x13F9704")]
		private void OnAnimationFinished(string anim)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x13F9998", Offset = "0x13F9998", VA = "0x13F9998")]
		public AnimatorStateMachine()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class PerformanceTester : MonoBehaviour
	{
		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] animObjects;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] options;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cameraSpeed;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 spawnOffset;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] spawnedMeshes;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> meshes;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string fps;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int previousFrame;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 offset;

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x13FFFA4", Offset = "0x13FFFA4", VA = "0x13FFFA4")]
		private void Start()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x1400004", Offset = "0x1400004", VA = "0x1400004")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x140008C", Offset = "0x140008C", VA = "0x140008C")]
		private void Update()
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x14003F4", Offset = "0x14003F4", VA = "0x14003F4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x1400AB8", Offset = "0x1400AB8", VA = "0x1400AB8")]
		public PerformanceTester()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public interface IMeshAnimation
	{
		[Token(Token = "0x170002C4")]
		string AnimationName
		{
			[Token(Token = "0x600225E")]
			get;
		}

		[Token(Token = "0x170002C5")]
		string[] ExposedTransforms
		{
			[Token(Token = "0x600225F")]
			get;
		}

		[Token(Token = "0x170002C6")]
		MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x6002260")]
			get;
		}

		[Token(Token = "0x170002C7")]
		MeshAnimationEvent[] Events
		{
			[Token(Token = "0x6002261")]
			get;
		}

		[Token(Token = "0x170002C8")]
		int TotalFrames
		{
			[Token(Token = "0x6002262")]
			get;
		}

		[Token(Token = "0x170002C9")]
		float PlaybackSpeed
		{
			[Token(Token = "0x6002263")]
			get;
		}

		[Token(Token = "0x170002CA")]
		float Length
		{
			[Token(Token = "0x6002264")]
			get;
		}

		[Token(Token = "0x170002CB")]
		WrapMode WrapMode
		{
			[Token(Token = "0x6002265")]
			get;
		}

		[Token(Token = "0x170002CC")]
		RootMotionMode RootMotionMode
		{
			[Token(Token = "0x6002266")]
			get;
		}

		[Token(Token = "0x170002CD")]
		int FrameSkip
		{
			[Token(Token = "0x6002267")]
			get;
		}

		[Token(Token = "0x170002CE")]
		int VertexCount
		{
			[Token(Token = "0x6002268")]
			get;
		}

		[Token(Token = "0x6002269")]
		void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame);

		[Token(Token = "0x600226A")]
		void GenerateFrame(Mesh baseMesh, int frame);

		[Token(Token = "0x600226B")]
		void GenerateFrames(Mesh baseMesh);

		[Token(Token = "0x600226C")]
		void Reset();

		[Token(Token = "0x600226D")]
		void FireEvents(GameObject eventReciever, int frame);

		[Token(Token = "0x600226E")]
		MeshFrameDataBase GetNearestFrame(int frame);

		[Token(Token = "0x600226F")]
		float GetInterpolatingFrames(int frame, out MeshFrameDataBase previousFrame, out MeshFrameDataBase nextFrame);

		[Token(Token = "0x6002270")]
		bool IsName(string name);
	}
	[Token(Token = "0x20004FF")]
	public interface IMeshAnimator
	{
		[Token(Token = "0x170002CF")]
		MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6002271")]
			get;
		}

		[Token(Token = "0x170002D0")]
		MeshFilter MeshFilter
		{
			[Token(Token = "0x6002272")]
			get;
		}

		[Token(Token = "0x170002D1")]
		IMeshAnimation[] Animations
		{
			[Token(Token = "0x6002273")]
			get;
		}

		[Token(Token = "0x170002D2")]
		float NextTick
		{
			[Token(Token = "0x6002274")]
			get;
		}

		[Token(Token = "0x170002D3")]
		Action<string> OnAnimationFinished
		{
			[Token(Token = "0x6002275")]
			get;
			[Token(Token = "0x6002276")]
			set;
		}

		[Token(Token = "0x170002D4")]
		Action OnFrameUpdated
		{
			[Token(Token = "0x6002277")]
			get;
			[Token(Token = "0x6002278")]
			set;
		}

		[Token(Token = "0x170002D5")]
		Action<bool> OnVisibilityChanged
		{
			[Token(Token = "0x6002279")]
			get;
			[Token(Token = "0x600227A")]
			set;
		}

		[Token(Token = "0x600227B")]
		void UpdateTick(float time);

		[Token(Token = "0x600227C")]
		void Play();

		[Token(Token = "0x600227D")]
		void Play(string animationName, float normalizedTime = -1f);

		[Token(Token = "0x600227E")]
		void Play(int animationIndex);

		[Token(Token = "0x600227F")]
		IMeshAnimation GetClip(string animationName);

		[Token(Token = "0x6002280")]
		void SetTime(float time, bool instantUpdate = false);

		[Token(Token = "0x6002281")]
		void SetTimeNormalized(float time, bool instantUpdate = false);

		[Token(Token = "0x6002282")]
		bool IsPlaying();
	}
	[Token(Token = "0x2000500")]
	public class MecanimMeshAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimatorBase meshAnimator;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, string> _animationHashes;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _currentAnimationName;

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x13FBBE0", Offset = "0x13FBBE0", VA = "0x13FBBE0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x13FBDFC", Offset = "0x13FBDFC", VA = "0x13FBDFC", Slot = "5")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x13FC100", Offset = "0x13FC100", VA = "0x13FC100")]
		public MecanimMeshAnimatorController()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public struct ExposedTransformCrossfade
	{
		[Token(Token = "0x2000832")]
		public struct LerpMatrix4x4Job : IJobParallelFor
		{
			[Token(Token = "0x4002F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Matrix4x4> from;

			[Token(Token = "0x4002F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<Matrix4x4> to;

			[Token(Token = "0x4002F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public float delta;

			[Token(Token = "0x4002F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NativeArray<Matrix4x4> output;

			[Token(Token = "0x6003414")]
			[Address(RVA = "0xB90800", Offset = "0xB90800", VA = "0xB90800", Slot = "4")]
			public void Execute(int i)
			{
			}
		}

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int framesNeeded;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int currentFrame;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isFading;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float endTime;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshFrameDataBase fromFrame;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFrameDataBase toFrame;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LerpMatrix4x4Job[] exposedTransformJobs;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JobHandle[] exposedTransformJobHandles;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NativeArray<Matrix4x4> fromMatrix;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NativeArray<Matrix4x4> toMatrix;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NativeArray<Matrix4x4>[] outputMatrix;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isReset;

		[Token(Token = "0x6002286")]
		[Address(RVA = "0xB90798", Offset = "0xB90798", VA = "0xB90798")]
		public void Reset(bool destroying)
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xB907EC", Offset = "0xB907EC", VA = "0xB907EC")]
		public void StartCrossfade(MeshFrameDataBase fromFrame, MeshFrameDataBase toFrame)
		{
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0xB907F4", Offset = "0xB907F4", VA = "0xB907F4")]
		public void ReturnFrame(bool destroying)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000502")]
	public abstract class MeshAnimationBase : ScriptableObject, IMeshAnimation
	{
		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47E4C", Offset = "0xA47E4C")]
		private int <Mode>k__BackingField;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string animationName;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float playbackSpeed;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public WrapMode wrapMode;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshAnimationEvent[] events;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float length;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public int frameSkip;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RootMotionMode rootMotionMode;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public string[] exposedTransforms;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int vertexCount;

		[Token(Token = "0x170002D6")]
		[HideInInspector]
		public int Mode
		{
			[Token(Token = "0x6002289")]
			[Address(RVA = "0x13FC188", Offset = "0x13FC188", VA = "0x13FC188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A414", Offset = "0xA5A414")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600228A")]
			[Address(RVA = "0x13FC190", Offset = "0x13FC190", VA = "0x13FC190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A424", Offset = "0xA5A424")]
			set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public string AnimationName
		{
			[Token(Token = "0x600228B")]
			[Address(RVA = "0x13FC198", Offset = "0x13FC198", VA = "0x13FC198", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		public string[] ExposedTransforms
		{
			[Token(Token = "0x600228C")]
			[Address(RVA = "0x13FC1A0", Offset = "0x13FC1A0", VA = "0x13FC1A0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		public abstract MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x600228D")]
			get;
		}

		[Token(Token = "0x170002DA")]
		public MeshAnimationEvent[] Events
		{
			[Token(Token = "0x600228E")]
			[Address(RVA = "0x13FC1A8", Offset = "0x13FC1A8", VA = "0x13FC1A8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		public abstract int TotalFrames
		{
			[Token(Token = "0x600228F")]
			get;
		}

		[Token(Token = "0x170002DC")]
		public float PlaybackSpeed
		{
			[Token(Token = "0x6002290")]
			[Address(RVA = "0x13FC1B0", Offset = "0x13FC1B0", VA = "0x13FC1B0", Slot = "9")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DD")]
		public float Length
		{
			[Token(Token = "0x6002291")]
			[Address(RVA = "0x13FC1B8", Offset = "0x13FC1B8", VA = "0x13FC1B8", Slot = "10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DE")]
		public WrapMode WrapMode
		{
			[Token(Token = "0x6002292")]
			[Address(RVA = "0x13FC1C0", Offset = "0x13FC1C0", VA = "0x13FC1C0", Slot = "11")]
			get
			{
				return default(WrapMode);
			}
		}

		[Token(Token = "0x170002DF")]
		public RootMotionMode RootMotionMode
		{
			[Token(Token = "0x6002293")]
			[Address(RVA = "0x13FC1C8", Offset = "0x13FC1C8", VA = "0x13FC1C8", Slot = "12")]
			get
			{
				return default(RootMotionMode);
			}
		}

		[Token(Token = "0x170002E0")]
		public int FrameSkip
		{
			[Token(Token = "0x6002294")]
			[Address(RVA = "0x13FC1D0", Offset = "0x13FC1D0", VA = "0x13FC1D0", Slot = "13")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E1")]
		public int VertexCount
		{
			[Token(Token = "0x6002295")]
			[Address(RVA = "0x13FC1D8", Offset = "0x13FC1D8", VA = "0x13FC1D8", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x13FC1E0", Offset = "0x13FC1E0", VA = "0x13FC1E0", Slot = "25")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x13FC21C", Offset = "0x13FC21C", VA = "0x13FC21C", Slot = "19")]
		public void FireEvents(GameObject eventReciever, int frame)
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0x13FC3AC", Offset = "0x13FC3AC", VA = "0x13FC3AC", Slot = "22")]
		public bool IsName(string animationName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x13FC3FC", Offset = "0x13FC3FC", VA = "0x13FC3FC", Slot = "26")]
		public virtual MeshFrameDataBase GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x13FC4F8", Offset = "0x13FC4F8", VA = "0x13FC4F8", Slot = "21")]
		public float GetInterpolatingFrames(int frame, out MeshFrameDataBase previousFrame, out MeshFrameDataBase nextFrame)
		{
			return default(float);
		}

		[Token(Token = "0x600229B")]
		public abstract void SetFrameData(int frame, MeshFrameDataBase frameData);

		[Token(Token = "0x600229C")]
		public abstract void SetFrameData(MeshFrameDataBase[] frameData);

		[Token(Token = "0x600229D")]
		public abstract void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame);

		[Token(Token = "0x600229E")]
		public abstract void GenerateFrame(Mesh baseMesh, int frame);

		[Token(Token = "0x600229F")]
		public abstract void GenerateFrames(Mesh baseMesh);

		[Token(Token = "0x60022A0")]
		public abstract void Reset();

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x13FC6F4", Offset = "0x13FC6F4", VA = "0x13FC6F4")]
		protected MeshAnimationBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000503")]
	public class MeshAnimationEvent
	{
		[Token(Token = "0x2000833")]
		public enum Mode : byte
		{
			[Token(Token = "0x4002F4A")]
			Data,
			[Token(Token = "0x4002F4B")]
			String,
			[Token(Token = "0x4002F4C")]
			Float
		}

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string methodName;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int frame;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Mode eventType;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stringValue;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float floatValue;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object data;

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x13FC2A4", Offset = "0x13FC2A4", VA = "0x13FC2A4")]
		public void FireEvent(GameObject eventReciever)
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x13FC70C", Offset = "0x13FC70C", VA = "0x13FC70C")]
		public MeshAnimationEvent()
		{
		}
	}
	[Token(Token = "0x2000504")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34C28", Offset = "0xA34C28")]
	public abstract class MeshAnimatorBase : MonoBehaviour, IMeshAnimator
	{
		[Serializable]
		[Token(Token = "0x2000834")]
		public struct MeshAnimatorLODLevel
		{
			[Token(Token = "0x4002F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int fps;

			[Token(Token = "0x4002F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float distance;

			[NonSerialized]
			[Token(Token = "0x4002F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float distanceSquared;
		}

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh baseMesh;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool updateWhenOffscreen;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool playAutomatically;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool resetOnEnable;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject eventReciever;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int FPS;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool skipLastLoopFrame;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47E9C", Offset = "0xA47E9C")]
		private Action<string> <OnAnimationFinished>k__BackingField;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47EAC", Offset = "0xA47EAC")]
		private Action <OnFrameUpdated>k__BackingField;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47EBC", Offset = "0xA47EBC")]
		private Action<bool> <OnVisibilityChanged>k__BackingField;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int currentFrame;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform LODCamera;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshAnimatorLODLevel[] LODLevels;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public float nextTick;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public MeshAnimationBase currentAnimation;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected int currentAnimIndex;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool isVisible;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float lastFrameTime;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected bool pingPong;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		protected bool isPaused;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float currentAnimTime;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Queue<string> queuedAnims;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected int currentLodLevel;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform mTransform;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Dictionary<string, Transform> childMap;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool initialized;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected int previousEventFrame;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool hasExposedTransforms;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		protected bool hasLODCamera;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float nextLODCheck;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected int animationCount;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected ExposedTransformCrossfade exposedTransformCrossfade;

		[Token(Token = "0x170002E2")]
		public abstract IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x60022A4")]
			get;
			[Token(Token = "0x60022A5")]
			set;
		}

		[Token(Token = "0x170002E3")]
		public abstract IMeshAnimation[] animations
		{
			[Token(Token = "0x60022A6")]
			get;
		}

		[Token(Token = "0x170002E4")]
		public Action<string> OnAnimationFinished
		{
			[Token(Token = "0x60022A7")]
			[Address(RVA = "0x13FC714", Offset = "0x13FC714", VA = "0x13FC714", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A434", Offset = "0xA5A434")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022A8")]
			[Address(RVA = "0x13FC71C", Offset = "0x13FC71C", VA = "0x13FC71C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A444", Offset = "0xA5A444")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public Action OnFrameUpdated
		{
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0x13FC724", Offset = "0x13FC724", VA = "0x13FC724", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A454", Offset = "0xA5A454")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022AA")]
			[Address(RVA = "0x13FC72C", Offset = "0x13FC72C", VA = "0x13FC72C", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A464", Offset = "0xA5A464")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public Action<bool> OnVisibilityChanged
		{
			[Token(Token = "0x60022AB")]
			[Address(RVA = "0x13FC734", Offset = "0x13FC734", VA = "0x13FC734", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A474", Offset = "0xA5A474")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022AC")]
			[Address(RVA = "0x13FC73C", Offset = "0x13FC73C", VA = "0x13FC73C", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A484", Offset = "0xA5A484")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x60022AD")]
			[Address(RVA = "0x13FC744", Offset = "0x13FC744", VA = "0x13FC744", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		public MeshFilter MeshFilter
		{
			[Token(Token = "0x60022AE")]
			[Address(RVA = "0x13FC74C", Offset = "0x13FC74C", VA = "0x13FC74C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		public IMeshAnimation[] Animations
		{
			[Token(Token = "0x60022AF")]
			[Address(RVA = "0x13FBDEC", Offset = "0x13FBDEC", VA = "0x13FBDEC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public float NextTick
		{
			[Token(Token = "0x60022B0")]
			[Address(RVA = "0x13FC754", Offset = "0x13FC754", VA = "0x13FC754", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x13FC75C", Offset = "0x13FC75C", VA = "0x13FC75C", Slot = "25")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x13FCC34", Offset = "0x13FCC34", VA = "0x13FCC34")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x13FCCA0", Offset = "0x13FCCA0", VA = "0x13FCCA0")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x13FCD08", Offset = "0x13FCD08", VA = "0x13FCD08", Slot = "26")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x13FCFEC", Offset = "0x13FCFEC", VA = "0x13FCFEC", Slot = "27")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x13FD110", Offset = "0x13FD110", VA = "0x13FD110", Slot = "28")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x13FD124", Offset = "0x13FD124", VA = "0x13FD124", Slot = "29")]
		protected virtual void AddMeshCount(Dictionary<Mesh, int> counter)
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x13FD238", Offset = "0x13FD238", VA = "0x13FD238", Slot = "30")]
		protected virtual void RemoveMeshCount(Dictionary<Mesh, int> counter)
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x13FD3FC", Offset = "0x13FD3FC", VA = "0x13FD3FC")]
		private void FireAnimationEvents(IMeshAnimation meshAnimation, float totalSpeed, bool finished)
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x13FD7E0", Offset = "0x13FD7E0", VA = "0x13FD7E0")]
		private Matrix4x4 MatrixLerp(Matrix4x4 from, Matrix4x4 to, float time)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x13FD8EC", Offset = "0x13FD8EC", VA = "0x13FD8EC", Slot = "31")]
		protected virtual bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x13FDCD8", Offset = "0x13FDCD8", VA = "0x13FDCD8", Slot = "32")]
		protected virtual void OnAnimationCompleted(bool stopUpdate)
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x13FDCDC", Offset = "0x13FDCDC", VA = "0x13FDCDC", Slot = "33")]
		protected virtual bool StartCrossfade(int index, float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x13FDEFC", Offset = "0x13FDEFC", VA = "0x13FDEFC", Slot = "34")]
		protected virtual void ReturnCrossfadeToPool(bool destroying)
		{
		}

		[Token(Token = "0x60022BF")]
		protected abstract void OnCurrentAnimationChanged(IMeshAnimation meshAnimation);

		[Token(Token = "0x60022C0")]
		public abstract void SetAnimations(IMeshAnimation[] meshAnimations);

		[Token(Token = "0x60022C1")]
		public abstract void StoreAdditionalMeshData(Mesh mesh);

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x13FDF50", Offset = "0x13FDF50", VA = "0x13FDF50", Slot = "14")]
		public void UpdateTick(float time)
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x13FEAAC", Offset = "0x13FEAAC", VA = "0x13FEAAC", Slot = "38")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x13FBF38", Offset = "0x13FBF38", VA = "0x13FBF38", Slot = "16")]
		public void Play(string animationName, float normalizedTime = -1f)
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x13F9834", Offset = "0x13F9834", VA = "0x13F9834", Slot = "17")]
		public void Play(int index)
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x13FEADC", Offset = "0x13FEADC", VA = "0x13FEADC")]
		public void PlayRandom(params string[] animationNames)
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x13FEC6C", Offset = "0x13FEC6C", VA = "0x13FEC6C")]
		public void PlayQueued(string animationName)
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x13FED04", Offset = "0x13FED04", VA = "0x13FED04", Slot = "39")]
		public virtual void Pause()
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x13FED10", Offset = "0x13FED10", VA = "0x13FED10", Slot = "40")]
		public virtual void RestartAnim()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x13FED48", Offset = "0x13FED48", VA = "0x13FED48")]
		public void Crossfade(int index)
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x13FED60", Offset = "0x13FED60", VA = "0x13FED60")]
		public void Crossfade(string animationName)
		{
		}

		[Token(Token = "0x60022CC")]
		public abstract void Crossfade(int index, float speed);

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x13FED6C", Offset = "0x13FED6C", VA = "0x13FED6C")]
		public void Crossfade(string animationName, float speed)
		{
		}

		[Token(Token = "0x60022CE")]
		public abstract void PrepopulateCrossfadePool(int count);

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x13FEEF4", Offset = "0x13FEEF4", VA = "0x13FEEF4", Slot = "43")]
		public virtual void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x13FF008", Offset = "0x13FF008", VA = "0x13FF008", Slot = "44")]
		public virtual void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x13FF118", Offset = "0x13FF118", VA = "0x13FF118", Slot = "18")]
		public IMeshAnimation GetClip(string animationName)
		{
			return null;
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x13FF29C", Offset = "0x13FF29C", VA = "0x13FF29C")]
		public void DisplayFrame(int frame, MeshRenderer meshRenderer)
		{
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x13FF2FC", Offset = "0x13FF2FC", VA = "0x13FF2FC", Slot = "21")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x13FF30C", Offset = "0x13FF30C", VA = "0x13FF30C")]
		protected MeshAnimatorBase()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class MeshAnimatorManager : MonoBehaviour
	{
		[Token(Token = "0x2000835")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37768", Offset = "0xA37768")]
		private sealed class <UnscaledUpdate>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshAnimatorManager <>4__this;

			[Token(Token = "0x1700072B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003418")]
				[Address(RVA = "0x13FFF2C", Offset = "0x13FFF2C", VA = "0x13FFF2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700072C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600341A")]
				[Address(RVA = "0x13FFF94", Offset = "0x13FFF94", VA = "0x13FFF94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003415")]
			[Address(RVA = "0x13FF834", Offset = "0x13FF834", VA = "0x13FF834")]
			[DebuggerHidden]
			public <UnscaledUpdate>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003416")]
			[Address(RVA = "0x13FFE68", Offset = "0x13FFE68", VA = "0x13FFE68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003417")]
			[Address(RVA = "0x13FFE6C", Offset = "0x13FFE6C", VA = "0x13FFE6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003419")]
			[Address(RVA = "0x13FFF34", Offset = "0x13FFF34", VA = "0x13FFF34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimatorUpdateMode _mode;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MeshAnimatorManager _instance;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<IMeshAnimator> _animators;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<IMeshAnimator> _addAnimators;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<IMeshAnimator> _removeAnimators;

		[Token(Token = "0x170002EB")]
		public static int AnimatorCount
		{
			[Token(Token = "0x60022D5")]
			[Address(RVA = "0x13FF398", Offset = "0x13FF398", VA = "0x13FF398")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002EC")]
		public static MeshAnimatorManager Instance
		{
			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x13FF468", Offset = "0x13FF468", VA = "0x13FF468")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x13FCEFC", Offset = "0x13FCEFC", VA = "0x13FCEFC")]
		public static void AddAnimator(IMeshAnimator animator)
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x13FD08C", Offset = "0x13FD08C", VA = "0x13FD08C")]
		public static void RemoveAnimator(IMeshAnimator animator)
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x13FF610", Offset = "0x13FF610", VA = "0x13FF610")]
		public static void SetUpdateMode(AnimatorUpdateMode updateMode)
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x13FF7A0", Offset = "0x13FF7A0", VA = "0x13FF7A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x13FF730", Offset = "0x13FF730", VA = "0x13FF730")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5A494", Offset = "0xA5A494")]
		private IEnumerator UnscaledUpdate()
		{
			return null;
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x13FF860", Offset = "0x13FF860", VA = "0x13FF860")]
		private void Update()
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x13FFCFC", Offset = "0x13FFCFC", VA = "0x13FFCFC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x13FF8E0", Offset = "0x13FF8E0", VA = "0x13FF8E0")]
		private void UpdateTick(float time)
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x13FFD80", Offset = "0x13FFD80", VA = "0x13FFD80")]
		public MeshAnimatorManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000506")]
	public class MeshFrameDataBase
	{
		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Matrix4x4[] exposedTransforms;

		[NonSerialized]
		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rootMotionPosition;

		[NonSerialized]
		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion rootMotionRotation;

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x13FFF9C", Offset = "0x13FFF9C", VA = "0x13FFF9C")]
		public MeshFrameDataBase()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public enum MeshNormalMode
	{
		[Token(Token = "0x4002241")]
		Baked,
		[Token(Token = "0x4002242")]
		UseOriginal,
		[Token(Token = "0x4002243")]
		Recalculated
	}
	[Token(Token = "0x2000508")]
	public enum RootMotionMode
	{
		[Token(Token = "0x4002245")]
		None,
		[Token(Token = "0x4002246")]
		Baked,
		[Token(Token = "0x4002247")]
		AppliedToTransform
	}
	[Token(Token = "0x2000509")]
	public static class AllocatedArray<T>
	{
		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T defaultValue;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<T[]> allocatedArrays;

		[Token(Token = "0x60022E2")]
		private static T[] AllocateArray(int size)
		{
			return null;
		}

		[Token(Token = "0x60022E3")]
		public static T[] Get(int size)
		{
			return null;
		}

		[Token(Token = "0x60022E4")]
		public static void Return(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x200050A")]
	public static class AllocatedArray
	{
		[Token(Token = "0x60022E6")]
		public static T[] Get<T>(int size)
		{
			return null;
		}

		[Token(Token = "0x60022E7")]
		public static void Return<T>(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x200050B")]
	public static class Comparers
	{
		[Serializable]
		[Token(Token = "0x2000836")]
		public class StringComparer : IEqualityComparer<string>
		{
			[Token(Token = "0x600341B")]
			[Address(RVA = "0x13F9BB4", Offset = "0x13F9BB4", VA = "0x13F9BB4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.String>.Equals(string x, string y)
			{
				return default(bool);
			}

			[Token(Token = "0x600341C")]
			[Address(RVA = "0x13F9BC4", Offset = "0x13F9BC4", VA = "0x13F9BC4", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(string obj)
			{
				return default(int);
			}

			[Token(Token = "0x600341D")]
			[Address(RVA = "0x13F9AB4", Offset = "0x13F9AB4", VA = "0x13F9AB4")]
			public StringComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000837")]
		public class FloatComparer : IEqualityComparer<float>
		{
			[Token(Token = "0x600341E")]
			[Address(RVA = "0x13F9B4C", Offset = "0x13F9B4C", VA = "0x13F9B4C", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Single>.Equals(float x, float y)
			{
				return default(bool);
			}

			[Token(Token = "0x600341F")]
			[Address(RVA = "0x13F9B58", Offset = "0x13F9B58", VA = "0x13F9B58", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Single>.GetHashCode(float obj)
			{
				return default(int);
			}

			[Token(Token = "0x6003420")]
			[Address(RVA = "0x13F9ABC", Offset = "0x13F9ABC", VA = "0x13F9ABC")]
			public FloatComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000838")]
		public class IntComparer : IEqualityComparer<int>
		{
			[Token(Token = "0x6003421")]
			[Address(RVA = "0x13F9B80", Offset = "0x13F9B80", VA = "0x13F9B80", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Int32>.Equals(int x, int y)
			{
				return default(bool);
			}

			[Token(Token = "0x6003422")]
			[Address(RVA = "0x13F9B8C", Offset = "0x13F9B8C", VA = "0x13F9B8C", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Int32>.GetHashCode(int obj)
			{
				return default(int);
			}

			[Token(Token = "0x6003423")]
			[Address(RVA = "0x13F9AC4", Offset = "0x13F9AC4", VA = "0x13F9AC4")]
			public IntComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000839")]
		public class ByteComparer : IEqualityComparer<byte>
		{
			[Token(Token = "0x6003424")]
			[Address(RVA = "0x13F9B14", Offset = "0x13F9B14", VA = "0x13F9B14", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Byte>.Equals(byte x, byte y)
			{
				return default(bool);
			}

			[Token(Token = "0x6003425")]
			[Address(RVA = "0x13F9B24", Offset = "0x13F9B24", VA = "0x13F9B24", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Byte>.GetHashCode(byte obj)
			{
				return default(int);
			}

			[Token(Token = "0x6003426")]
			[Address(RVA = "0x13F9ACC", Offset = "0x13F9ACC", VA = "0x13F9ACC")]
			public ByteComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200083A")]
		public class BoolComparer : IEqualityComparer<bool>
		{
			[Token(Token = "0x6003427")]
			[Address(RVA = "0x13F9ADC", Offset = "0x13F9ADC", VA = "0x13F9ADC", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Boolean>.Equals(bool x, bool y)
			{
				return default(bool);
			}

			[Token(Token = "0x6003428")]
			[Address(RVA = "0x13F9AE8", Offset = "0x13F9AE8", VA = "0x13F9AE8", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Boolean>.GetHashCode(bool obj)
			{
				return default(int);
			}

			[Token(Token = "0x6003429")]
			[Address(RVA = "0x13F9AD4", Offset = "0x13F9AD4", VA = "0x13F9AD4")]
			public BoolComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200083B")]
		private class FuncEqualityComparer<T> : EqualityComparer<T>
		{
			[Token(Token = "0x4002F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, T, bool> equals;

			[Token(Token = "0x4002F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, int> hash;

			[Token(Token = "0x600342A")]
			public FuncEqualityComparer(Func<T, T, bool> equals, Func<T, int> hash)
			{
			}

			[Token(Token = "0x600342B")]
			public override bool Equals(T a, T b)
			{
				return default(bool);
			}

			[Token(Token = "0x600342C")]
			public override int GetHashCode(T obj)
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x200083C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37778", Offset = "0xA37778")]
		private sealed class <>c__10<T>
		{
			[Token(Token = "0x4002F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__10<T> <>9;

			[Token(Token = "0x4002F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, int> <>9__10_0;

			[Token(Token = "0x600342E")]
			public <>c__10()
			{
			}

			[Token(Token = "0x600342F")]
			internal int <Create>b__10_0(T t)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringComparer String;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly FloatComparer Float;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IntComparer Int;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ByteComparer Byte;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly BoolComparer Bool;

		[Token(Token = "0x60022E8")]
		public static IEqualityComparer<T> Create<T>(Func<T, T, bool> equals, [Optional] Func<T, int> hash)
		{
			return null;
		}
	}
	[Token(Token = "0x200050C")]
	public static class GenericObjectPool<T>
	{
		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<T> pool;

		[Token(Token = "0x170002ED")]
		public static int Count
		{
			[Token(Token = "0x60022EA")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60022EB")]
		public static void InitPool(int count)
		{
		}

		[Token(Token = "0x60022EC")]
		public static T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x60022ED")]
		public static void Return(T obj)
		{
		}
	}
	[Token(Token = "0x200050D")]
	public static class MatrixUtils
	{
		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x13FB838", Offset = "0x13FB838", VA = "0x13FB838")]
		public static void FromMatrix4x4(Transform transform, Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x13FB978", Offset = "0x13FB978", VA = "0x13FB978")]
		public static Quaternion GetRotation(Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x13FB8D4", Offset = "0x13FB8D4", VA = "0x13FB8D4")]
		public static Vector3 GetPosition(Matrix4x4 matrix)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x13FBB1C", Offset = "0x13FBB1C", VA = "0x13FBB1C")]
		public static Vector3 GetScale(Matrix4x4 m)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200050E")]
	public class PooledDictionary<T, T2> : Dictionary<T, T2>
	{
		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<PooledDictionary<T, T2>> stack;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint checkedOut;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint returned;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA47F0C", Offset = "0xA47F0C")]
		private bool <recycleable>k__BackingField;

		[Token(Token = "0x170002EE")]
		public bool recycleable
		{
			[Token(Token = "0x60022F3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A4F8", Offset = "0xA5A4F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A508", Offset = "0xA5A508")]
			set
			{
			}
		}

		[Token(Token = "0x60022F5")]
		public static void Init(int initialPoolSize = 10)
		{
		}

		[Token(Token = "0x60022F6")]
		public static PooledDictionary<T, T2> Get(int capacity, [Optional] IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x60022F7")]
		public static PooledDictionary<T, T2> Get()
		{
			return null;
		}

		[Token(Token = "0x60022F8")]
		public static PooledDictionary<T, T2> Get(IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x60022F9")]
		public PooledDictionary()
		{
		}

		[Token(Token = "0x60022FA")]
		public PooledDictionary(int capacity)
		{
		}

		[Token(Token = "0x60022FB")]
		public PooledDictionary(int capacity, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x60022FC")]
		public void ReturnToPool(bool force = false)
		{
		}
	}
}
namespace FSG.MeshAnimator.Snapshot
{
	[Serializable]
	[Token(Token = "0x200050F")]
	public class SnapshotMeshAnimation : MeshAnimationBase
	{
		[Token(Token = "0x200083D")]
		private sealed class VertexEntry
		{
			[Token(Token = "0x4002F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _reserved;

			[Token(Token = "0x4002F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] TriangleIndex;

			[Token(Token = "0x4002F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] VertexIndex;

			[Token(Token = "0x4002F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _count;

			[Token(Token = "0x1700072D")]
			public int Count
			{
				[Token(Token = "0x6003430")]
				[Address(RVA = "0x1406048", Offset = "0x1406048", VA = "0x1406048")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6003431")]
			[Address(RVA = "0x1406050", Offset = "0x1406050", VA = "0x1406050")]
			public VertexEntry()
			{
			}

			[Token(Token = "0x6003432")]
			[Address(RVA = "0x1405B50", Offset = "0x1405B50", VA = "0x1405B50")]
			public void Add(int vertIndex, int triIndex)
			{
			}

			[Token(Token = "0x6003433")]
			[Address(RVA = "0x1405ABC", Offset = "0x1405ABC", VA = "0x1405ABC")]
			public void PopulateArrays()
			{
			}

			[Token(Token = "0x6003434")]
			[Address(RVA = "0x1405C4C", Offset = "0x1405C4C", VA = "0x1405C4C")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x200083E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37788", Offset = "0xA37788")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh mesh;

			[Token(Token = "0x4002F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x6003435")]
			[Address(RVA = "0x1405AB4", Offset = "0x1405AB4", VA = "0x1405AB4")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6003436")]
			[Address(RVA = "0x1405F7C", Offset = "0x1405F7C", VA = "0x1405F7C")]
			internal void <RecalculateNormals>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200083F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA37798", Offset = "0xA37798")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6003438")]
			[Address(RVA = "0x1405F20", Offset = "0x1405F20", VA = "0x1405F20")]
			public <>c()
			{
			}

			[Token(Token = "0x6003439")]
			[Address(RVA = "0x1405F28", Offset = "0x1405F28", VA = "0x1405F28")]
			internal bool <.cctor>b__36_0(Vector3 x, Vector3 y)
			{
				return default(bool);
			}

			[Token(Token = "0x600343A")]
			[Address(RVA = "0x1405F50", Offset = "0x1405F50", VA = "0x1405F50")]
			internal int <.cctor>b__36_1(Vector3 x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<Mesh, Dictionary<SnapshotMeshAnimation, Mesh[]>> GeneratedFrames;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA47F1C", Offset = "0xA47F1C")]
		public bool preGenerateFrames;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MeshNormalMode meshNormalMode;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA47F54", Offset = "0xA47F54")]
		public bool recalculateNormalsOnRotation;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public DeltaCompressedFrameData compressedFrameData;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh[] frames;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int totalFrames;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool[] generatedMeshes;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool completelyGenerated;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SnapshotMeshFrameData[] decompressedFrameData;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion lastRotation;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Queue<Action> mainThreadActions;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<Mesh, KeyValuePair<int[], Vector3[]>> meshInfoCache;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static IEqualityComparer<Vector3> VectorComparer;

		[Token(Token = "0x170002EF")]
		public override MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x60022FE")]
			[Address(RVA = "0x1403778", Offset = "0x1403778", VA = "0x1403778", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		public override int TotalFrames
		{
			[Token(Token = "0x60022FF")]
			[Address(RVA = "0x140383C", Offset = "0x140383C", VA = "0x140383C", Slot = "24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F1")]
		private SnapshotMeshFrameData[] frameData
		{
			[Token(Token = "0x6002300")]
			[Address(RVA = "0x140377C", Offset = "0x140377C", VA = "0x140377C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x1403844", Offset = "0x1403844", VA = "0x1403844")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x140384C", Offset = "0x140384C", VA = "0x140384C", Slot = "25")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x1403918", Offset = "0x1403918", VA = "0x1403918", Slot = "27")]
		public override void SetFrameData(int frame, MeshFrameDataBase frameData)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x1403A5C", Offset = "0x1403A5C", VA = "0x1403A5C", Slot = "28")]
		public override void SetFrameData(MeshFrameDataBase[] frameData)
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x1403AC8", Offset = "0x1403AC8", VA = "0x1403AC8", Slot = "29")]
		public override void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x1403D44", Offset = "0x1403D44", VA = "0x1403D44", Slot = "31")]
		public override void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x1403F14", Offset = "0x1403F14", VA = "0x1403F14", Slot = "30")]
		public override void GenerateFrame(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x14048E8", Offset = "0x14048E8", VA = "0x14048E8")]
		public Vector3[] GetFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x1404C5C", Offset = "0x1404C5C", VA = "0x1404C5C", Slot = "32")]
		public override void Reset()
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x1403BA8", Offset = "0x1403BA8", VA = "0x1403BA8")]
		private void DisplayFrame(MeshFilter meshFilter, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x14041B8", Offset = "0x14041B8", VA = "0x14041B8")]
		private void CheckFullGeneration(int newFrame)
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x1404248", Offset = "0x1404248", VA = "0x1404248")]
		private Mesh GenerateFrameInternal(Mesh baseMesh, int frame)
		{
			return null;
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x1404D94", Offset = "0x1404D94", VA = "0x1404D94")]
		private void RecalculateNormals(Mesh mesh)
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x1404DCC", Offset = "0x1404DCC", VA = "0x1404DCC")]
		private void RecalculateNormals(Mesh mesh, float angle, int[] triangles, Vector3[] vertices, bool instant = false)
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x1405CEC", Offset = "0x1405CEC", VA = "0x1405CEC")]
		public SnapshotMeshAnimation()
		{
		}
	}
	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34C8C", Offset = "0xA34C8C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34C8C", Offset = "0xA34C8C")]
	public class SnapshotMeshAnimator : MeshAnimatorBase
	{
		[Token(Token = "0x2000840")]
		private struct LerpVector3Job : IJobParallelFor
		{
			[Token(Token = "0x4002F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Vector3> from;

			[Token(Token = "0x4002F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[ReadOnly]
			public NativeArray<Vector3> to;

			[Token(Token = "0x4002F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[ReadOnly]
			public float delta;

			[Token(Token = "0x4002F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NativeArray<Vector3> output;

			[Token(Token = "0x600343B")]
			[Address(RVA = "0xB8FAC0", Offset = "0xB8FAC0", VA = "0xB8FAC0", Slot = "4")]
			public void Execute(int i)
			{
			}
		}

		[Token(Token = "0x2000841")]
		private struct CalculateBoundsJob : IJob
		{
			[Token(Token = "0x4002F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[ReadOnly]
			public NativeArray<Vector3> positions;

			[Token(Token = "0x4002F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bounds bounds;

			[Token(Token = "0x600343C")]
			[Address(RVA = "0xB8FA14", Offset = "0xB8FA14", VA = "0xB8FA14", Slot = "4")]
			public void Execute()
			{
			}
		}

		[Token(Token = "0x2000842")]
		private struct CrossfadeJobData
		{
			[Token(Token = "0x4002F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int framesNeeded;

			[Token(Token = "0x4002F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int currentFrame;

			[Token(Token = "0x4002F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool isFading;

			[Token(Token = "0x4002F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float endTime;

			[Token(Token = "0x4002F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SnapshotMeshFrameData fromFrame;

			[Token(Token = "0x4002F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SnapshotMeshFrameData toFrame;

			[Token(Token = "0x4002F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpVector3Job[] positionJobs;

			[Token(Token = "0x4002F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CalculateBoundsJob[] boundsJobs;

			[Token(Token = "0x4002F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public JobHandle[] positionJobHandles;

			[Token(Token = "0x4002F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public JobHandle[] boundsJobHandles;

			[Token(Token = "0x4002F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public NativeArray<Vector3> from;

			[Token(Token = "0x4002F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public NativeArray<Vector3> to;

			[Token(Token = "0x4002F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public NativeArray<Vector3>[] output;

			[Token(Token = "0x4002F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private bool isReset;

			[Token(Token = "0x600343D")]
			[Address(RVA = "0xB8FA58", Offset = "0xB8FA58", VA = "0xB8FA58")]
			public void Reset(bool destroying)
			{
			}

			[Token(Token = "0x600343E")]
			[Address(RVA = "0xB8FAAC", Offset = "0xB8FAAC", VA = "0xB8FAAC")]
			public void StartCrossfade(SnapshotMeshFrameData fromFrame, SnapshotMeshFrameData toFrame)
			{
			}

			[Token(Token = "0x600343F")]
			[Address(RVA = "0xB8FAB4", Offset = "0xB8FAB4", VA = "0xB8FAB4")]
			public void ReturnFrame(bool destroying)
			{
			}
		}

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Mesh, int> _meshCount;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Stack<Mesh>> _crossFadePool;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<Mesh, int> _crossFadeIndex;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public SnapshotMeshAnimation defaultMeshAnimation;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public SnapshotMeshAnimation[] meshAnimations;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public bool syncCrossfadeMeshCount;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		public bool recalculateCrossfadeNormals;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private MeshTriangleData[] meshTriangleData;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv1Data;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv2Data;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv3Data;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] uv4Data;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Mesh crossfadeMesh;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private CrossfadeJobData currentCrossFade;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private int crossFadePoolIndex;

		[Token(Token = "0x170002F2")]
		public override IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x6002311")]
			[Address(RVA = "0x1406060", Offset = "0x1406060", VA = "0x1406060", Slot = "22")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002312")]
			[Address(RVA = "0x1406068", Offset = "0x1406068", VA = "0x1406068", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		public override IMeshAnimation[] animations
		{
			[Token(Token = "0x6002313")]
			[Address(RVA = "0x14060F8", Offset = "0x14060F8", VA = "0x14060F8", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x1406100", Offset = "0x1406100", VA = "0x1406100", Slot = "25")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x1406184", Offset = "0x1406184", VA = "0x1406184", Slot = "28")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x140677C", Offset = "0x140677C", VA = "0x140677C")]
		private Mesh GetCrossfadeFromPool()
		{
			return null;
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x1406974", Offset = "0x1406974", VA = "0x1406974", Slot = "34")]
		protected override void ReturnCrossfadeToPool(bool destroying)
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x1406CB8", Offset = "0x1406CB8", VA = "0x1406CB8", Slot = "31")]
		protected override bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x1406F4C", Offset = "0x1406F4C", VA = "0x1406F4C", Slot = "41")]
		public override void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x1407084", Offset = "0x1407084", VA = "0x1407084", Slot = "42")]
		public override void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x1407360", Offset = "0x1407360", VA = "0x1407360", Slot = "35")]
		protected override void OnCurrentAnimationChanged(IMeshAnimation meshAnimation)
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1407364", Offset = "0x1407364", VA = "0x1407364", Slot = "36")]
		public override void SetAnimations(IMeshAnimation[] meshAnimations)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x1407518", Offset = "0x1407518", VA = "0x1407518", Slot = "37")]
		public override void StoreAdditionalMeshData(Mesh mesh)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x14075D8", Offset = "0x14075D8", VA = "0x14075D8")]
		public SnapshotMeshAnimator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000511")]
	public class SnapshotMeshFrameData : MeshFrameDataBase
	{
		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3[] normals;

		[NonSerialized]
		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] decompressed;

		[Token(Token = "0x170002F4")]
		public Vector3[] verts
		{
			[Token(Token = "0x6002320")]
			[Address(RVA = "0x1253670", Offset = "0x1253670", VA = "0x1253670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x1253678", Offset = "0x1253678", VA = "0x1253678")]
		public void SetVerts(Vector3[] v)
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x1253680", Offset = "0x1253680", VA = "0x1253680", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x1253834", Offset = "0x1253834", VA = "0x1253834", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x125383C", Offset = "0x125383C", VA = "0x125383C")]
		public SnapshotMeshFrameData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000512")]
	public class MeshTriangleData
	{
		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int submesh;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x1403770", Offset = "0x1403770", VA = "0x1403770")]
		public MeshTriangleData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000513")]
	public class DeltaCompressedFrameData
	{
		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float compressionAccuracy;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float accuracy;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sizeOffset;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int vertLength;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int exposedLength;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public short[] positionsUShort;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int[] positions;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int[] frameIndexes;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Matrix4x4[] exposedTransforms;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] rootMotionPositions;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Quaternion[] rootMotionRotations;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3[] normals;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Vector3[] rawPositions;

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x1402800", Offset = "0x1402800", VA = "0x1402800")]
		public static implicit operator SnapshotMeshFrameData[](DeltaCompressedFrameData s)
		{
			return null;
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x1402CF4", Offset = "0x1402CF4", VA = "0x1402CF4")]
		public static implicit operator DeltaCompressedFrameData(SnapshotMeshFrameData[] frames)
		{
			return null;
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x1403708", Offset = "0x1403708", VA = "0x1403708")]
		public DeltaCompressedFrameData()
		{
		}
	}
}
namespace FSG.MeshAnimator.ShaderAnimated
{
	[Serializable]
	[Token(Token = "0x2000514")]
	public class ShaderMeshAnimation : MeshAnimationBase
	{
		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public MeshFrameDataBase[] frameData;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Texture2D[] textures;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 animScalar;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public Vector2Int textureSize;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public int textureCount;

		[Token(Token = "0x170002F5")]
		public override MeshFrameDataBase[] Frames
		{
			[Token(Token = "0x600232A")]
			[Address(RVA = "0x1400BC0", Offset = "0x1400BC0", VA = "0x1400BC0", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		public override int TotalFrames
		{
			[Token(Token = "0x600232B")]
			[Address(RVA = "0x1400BC8", Offset = "0x1400BC8", VA = "0x1400BC8", Slot = "24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x1400BE4", Offset = "0x1400BE4", VA = "0x1400BE4", Slot = "26")]
		public override MeshFrameDataBase GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x1400C20", Offset = "0x1400C20", VA = "0x1400C20", Slot = "29")]
		public override void DisplayFrame(IMeshAnimator meshAnimator, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x1400C24", Offset = "0x1400C24", VA = "0x1400C24", Slot = "30")]
		public override void GenerateFrame(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x1400C28", Offset = "0x1400C28", VA = "0x1400C28", Slot = "31")]
		public override void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x1400C2C", Offset = "0x1400C2C", VA = "0x1400C2C", Slot = "32")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x1400C30", Offset = "0x1400C30", VA = "0x1400C30", Slot = "27")]
		public override void SetFrameData(int frame, MeshFrameDataBase frameData)
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x1400CA8", Offset = "0x1400CA8", VA = "0x1400CA8", Slot = "28")]
		public override void SetFrameData(MeshFrameDataBase[] frameData)
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x1400CB0", Offset = "0x1400CB0", VA = "0x1400CB0")]
		public ShaderMeshAnimation()
		{
		}
	}
	[Token(Token = "0x2000515")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34D14", Offset = "0xA34D14")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34D14", Offset = "0xA34D14")]
	[ExecuteInEditMode]
	public class ShaderMeshAnimator : MeshAnimatorBase
	{
		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _animTimeProp;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int _animInfoProp;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int _animScalarProp;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int _animTexturesProp;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int _animTextureIndexProp;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int _crossfadeAnimInfoProp;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int _crossfadeAnimScalarProp;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int _crossfadeAnimTextureIndexProp;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int _crossfadeStartTimeProp;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int _crossfadeEndTimeProp;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<Mesh, int> _meshCount;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static List<Material> _materialCacheLookup;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static HashSet<Material> _setMaterials;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Dictionary<Mesh, Texture2DArray> _animTextures;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int pixelsPerTexture;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int textureStartIndex;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int textureSizeX;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int textureSizeY;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector4 propertyBlockData;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector4 timeBlockData;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public ShaderMeshAnimation defaultMeshAnimation;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public ShaderMeshAnimation[] meshAnimations;

		[Token(Token = "0x170002F7")]
		private static Vector4 _shaderTime
		{
			[Token(Token = "0x6002334")]
			[Address(RVA = "0x1400D38", Offset = "0x1400D38", VA = "0x1400D38")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x170002F8")]
		public override IMeshAnimation defaultAnimation
		{
			[Token(Token = "0x6002335")]
			[Address(RVA = "0x1400D84", Offset = "0x1400D84", VA = "0x1400D84", Slot = "22")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002336")]
			[Address(RVA = "0x1400D8C", Offset = "0x1400D8C", VA = "0x1400D8C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public override IMeshAnimation[] animations
		{
			[Token(Token = "0x6002337")]
			[Address(RVA = "0x1400E1C", Offset = "0x1400E1C", VA = "0x1400E1C", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x1400E24", Offset = "0x1400E24", VA = "0x1400E24", Slot = "26")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x140153C", Offset = "0x140153C", VA = "0x140153C", Slot = "25")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x1401560", Offset = "0x1401560", VA = "0x1401560", Slot = "27")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x1401564", Offset = "0x1401564", VA = "0x1401564", Slot = "28")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x1401730", Offset = "0x1401730", VA = "0x1401730")]
		private void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x1401888", Offset = "0x1401888", VA = "0x1401888", Slot = "31")]
		protected override bool DisplayFrame(int previousFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x14019A0", Offset = "0x14019A0", VA = "0x14019A0", Slot = "32")]
		protected override void OnAnimationCompleted(bool stopUpdate)
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x14019B8", Offset = "0x14019B8", VA = "0x14019B8", Slot = "35")]
		protected override void OnCurrentAnimationChanged(IMeshAnimation meshAnimation)
		{
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x1401DB4", Offset = "0x1401DB4", VA = "0x1401DB4", Slot = "38")]
		public override void Play()
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x1401DE8", Offset = "0x1401DE8", VA = "0x1401DE8", Slot = "39")]
		public override void Pause()
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x1401F40", Offset = "0x1401F40", VA = "0x1401F40", Slot = "40")]
		public override void RestartAnim()
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x1401F8C", Offset = "0x1401F8C", VA = "0x1401F8C", Slot = "41")]
		public override void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x1402260", Offset = "0x1402260", VA = "0x1402260", Slot = "42")]
		public override void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x1402264", Offset = "0x1402264", VA = "0x1402264", Slot = "43")]
		public override void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x140228C", Offset = "0x140228C", VA = "0x140228C", Slot = "44")]
		public override void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x14022B4", Offset = "0x14022B4", VA = "0x14022B4", Slot = "36")]
		public override void SetAnimations(IMeshAnimation[] meshAnimations)
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x1402468", Offset = "0x1402468", VA = "0x1402468", Slot = "37")]
		public override void StoreAdditionalMeshData(Mesh mesh)
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x140174C", Offset = "0x140174C", VA = "0x140174C")]
		private void RefreshTimeData()
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x1400EB0", Offset = "0x1400EB0", VA = "0x1400EB0")]
		private void SetupTextureData()
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x1401CDC", Offset = "0x1401CDC", VA = "0x1401CDC")]
		private void CreatePropertyBlock()
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x140246C", Offset = "0x140246C", VA = "0x140246C")]
		private int CacheKey()
		{
			return default(int);
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x14025B0", Offset = "0x14025B0", VA = "0x14025B0")]
		public ShaderMeshAnimator()
		{
		}
	}
}
namespace Dreamteck
{
	[Token(Token = "0x2000516")]
	public static class ArrayUtility
	{
		[Token(Token = "0x600234F")]
		public static void Add<T>(ref T[] array, T item)
		{
		}

		[Token(Token = "0x6002350")]
		public static bool Contains<T>(T[] array, T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6002351")]
		public static int IndexOf<T>(T[] array, T value)
		{
			return default(int);
		}

		[Token(Token = "0x6002352")]
		public static void Insert<T>(ref T[] array, int index, T item)
		{
		}

		[Token(Token = "0x6002353")]
		public static void RemoveAt<T>(ref T[] array, int index)
		{
		}
	}
	[Token(Token = "0x2000517")]
	public static class DMath
	{
		[Token(Token = "0x6002354")]
		[Address(RVA = "0x13212A8", Offset = "0x13212A8", VA = "0x13212A8")]
		public static double Sin(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x1321314", Offset = "0x1321314", VA = "0x1321314")]
		public static double Cos(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x1321380", Offset = "0x1321380", VA = "0x1321380")]
		public static double Tan(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x13213EC", Offset = "0x13213EC", VA = "0x13213EC")]
		public static double Pow(double x, double y)
		{
			return default(double);
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x1321464", Offset = "0x1321464", VA = "0x1321464")]
		public static double Log(double a, double newBase)
		{
			return default(double);
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x13214DC", Offset = "0x13214DC", VA = "0x13214DC")]
		public static double Log10(double a)
		{
			return default(double);
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x1321548", Offset = "0x1321548", VA = "0x1321548")]
		public static double Clamp01(double a)
		{
			return default(double);
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x1321568", Offset = "0x1321568", VA = "0x1321568")]
		public static double Clamp(double a, double min, double max)
		{
			return default(double);
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x1321584", Offset = "0x1321584", VA = "0x1321584")]
		public static double Lerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x13215A8", Offset = "0x13215A8", VA = "0x13215A8")]
		public static double InverseLerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x13215DC", Offset = "0x13215DC", VA = "0x13215DC")]
		public static Vector3 LerpVector3(Vector3 a, Vector3 b, double t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x1321708", Offset = "0x1321708", VA = "0x1321708")]
		public static double Round(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x13217E0", Offset = "0x13217E0", VA = "0x13217E0")]
		public static int RoundInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x13218BC", Offset = "0x13218BC", VA = "0x13218BC")]
		public static double Ceil(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x1321928", Offset = "0x1321928", VA = "0x1321928")]
		public static int CeilInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x1321994", Offset = "0x1321994", VA = "0x1321994")]
		public static double Floor(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x1321A00", Offset = "0x1321A00", VA = "0x1321A00")]
		public static int FloorInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x1321A6C", Offset = "0x1321A6C", VA = "0x1321A6C")]
		public static double Move(double current, double target, double amount)
		{
			return default(double);
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x1321A9C", Offset = "0x1321A9C", VA = "0x1321A9C")]
		public static double Abs(double a)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000518")]
	public static class DuplicateUtility
	{
		[Token(Token = "0x6002367")]
		[Address(RVA = "0x1321AAC", Offset = "0x1321AAC", VA = "0x1321AAC")]
		public static AnimationCurve DuplicateCurve(AnimationCurve input)
		{
			return null;
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x1321BF0", Offset = "0x1321BF0", VA = "0x1321BF0")]
		public static Gradient DuplicateGradient(Gradient input)
		{
			return null;
		}
	}
	[Token(Token = "0x2000519")]
	public static class LinearAlgebraUtility
	{
		[Token(Token = "0x6002369")]
		[Address(RVA = "0x1321BF8", Offset = "0x1321BF8", VA = "0x1321BF8")]
		public static Vector3 ProjectOnLine(Vector3 fromPoint, Vector3 toPoint, Vector3 project)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x1321E0C", Offset = "0x1321E0C", VA = "0x1321E0C")]
		public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200051A")]
	public class MeshUtility
	{
		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] tan1;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] tan2;

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x1321F3C", Offset = "0x1321F3C", VA = "0x1321F3C")]
		public static int[] GeneratePlaneTriangles(int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0)
		{
			return null;
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x1322000", Offset = "0x1322000", VA = "0x1322000")]
		public static int[] GeneratePlaneTriangles(ref int[] triangles, int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0, bool reallocateArray = false)
		{
			return null;
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x1322300", Offset = "0x1322300", VA = "0x1322300")]
		public static void CalculateTangents(TS_Mesh mesh)
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x1322A6C", Offset = "0x1322A6C", VA = "0x1322A6C")]
		public static void MakeDoublesided(Mesh input)
		{
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x13234E0", Offset = "0x13234E0", VA = "0x13234E0")]
		public static void MakeDoublesided(TS_Mesh input)
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x1323E34", Offset = "0x1323E34", VA = "0x1323E34")]
		public static void MakeDoublesidedHalf(TS_Mesh input)
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x1324444", Offset = "0x1324444", VA = "0x1324444")]
		public static void InverseTransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x1324534", Offset = "0x1324534", VA = "0x1324534")]
		public static void TransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x1324624", Offset = "0x1324624", VA = "0x1324624")]
		public static void InverseTransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x1324714", Offset = "0x1324714", VA = "0x1324714")]
		public static void TransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x1324804", Offset = "0x1324804", VA = "0x1324804")]
		public static void InverseTransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x1324958", Offset = "0x1324958", VA = "0x1324958")]
		public static void TransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x1324AF0", Offset = "0x1324AF0", VA = "0x1324AF0")]
		public static void TransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x1324B84", Offset = "0x1324B84", VA = "0x1324B84")]
		public static void InverseTransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x1324C18", Offset = "0x1324C18", VA = "0x1324C18")]
		public static void TransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x1324CAC", Offset = "0x1324CAC", VA = "0x1324CAC")]
		public static void InverseTransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x1324D40", Offset = "0x1324D40", VA = "0x1324D40")]
		public static string ToOBJString(Mesh mesh, Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x132568C", Offset = "0x132568C", VA = "0x132568C")]
		public static Mesh Copy(Mesh input)
		{
			return null;
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x13258C0", Offset = "0x13258C0", VA = "0x13258C0")]
		public static void Triangulate(Vector2[] points, ref int[] output)
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x1325F10", Offset = "0x1325F10", VA = "0x1325F10")]
		public static void FlipTriangles(ref int[] triangles)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x1325F98", Offset = "0x1325F98", VA = "0x1325F98")]
		public static void FlipFaces(TS_Mesh input)
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x1326130", Offset = "0x1326130", VA = "0x1326130")]
		public static void BreakMesh(Mesh input, bool keepNormals = true)
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x1325C58", Offset = "0x1325C58", VA = "0x1325C58")]
		private static float Area(Vector2[] points, int maxCount)
		{
			return default(float);
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x1325CF0", Offset = "0x1325CF0", VA = "0x1325CF0")]
		private static bool Snip(Vector2[] points, int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x1326C54", Offset = "0x1326C54", VA = "0x1326C54")]
		private static bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x1326CD0", Offset = "0x1326CD0", VA = "0x1326CD0")]
		public MeshUtility()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public static class SceneUtility
	{
		[Token(Token = "0x6002386")]
		[Address(RVA = "0x1326D54", Offset = "0x1326D54", VA = "0x1326D54")]
		public static void GetChildrenRecursively(Transform current, ref List<Transform> transformList)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051C")]
	public class TS_Bounds
	{
		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 extents;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 max;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 min;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 size;

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x19AD0F4", Offset = "0x19AD0F4", VA = "0x19AD0F4")]
		public TS_Bounds()
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x19AD1AC", Offset = "0x19AD1AC", VA = "0x19AD1AC")]
		public TS_Bounds(Bounds bounds)
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x1998A80", Offset = "0x1998A80", VA = "0x1998A80")]
		public TS_Bounds(Vector3 c, Vector3 s)
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x19AD2D8", Offset = "0x19AD2D8", VA = "0x19AD2D8")]
		public TS_Bounds(Vector3 min, Vector3 max, Vector3 center)
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x199A9CC", Offset = "0x199A9CC", VA = "0x199A9CC")]
		public void CreateFromMinMax(Vector3 min, Vector3 max)
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x19AD438", Offset = "0x19AD438", VA = "0x19AD438")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200051D")]
	public class TS_Mesh
	{
		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4[] tangents;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] colors;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] uv;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2[] uv2;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2[] uv3;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2[] uv4;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] triangles;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int[]> subMeshes;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TS_Bounds bounds;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool hasUpdate;

		[Token(Token = "0x170002FA")]
		public int vertexCount
		{
			[Token(Token = "0x600238D")]
			[Address(RVA = "0x19AD48C", Offset = "0x19AD48C", VA = "0x19AD48C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600238E")]
			[Address(RVA = "0x19AD4A8", Offset = "0x19AD4A8", VA = "0x19AD4A8")]
			set
			{
			}
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x199A144", Offset = "0x199A144", VA = "0x199A144")]
		public TS_Mesh()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x19AD4AC", Offset = "0x19AD4AC", VA = "0x19AD4AC")]
		public TS_Mesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x19AD814", Offset = "0x19AD814", VA = "0x19AD814")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x19AD680", Offset = "0x19AD680", VA = "0x19AD680")]
		public void CreateFromMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x19AD9C8", Offset = "0x19AD9C8", VA = "0x19AD9C8")]
		public void Combine(List<TS_Mesh> newMeshes, bool overwrite = false)
		{
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x19AEE2C", Offset = "0x19AEE2C", VA = "0x19AEE2C")]
		public void Combine(TS_Mesh newMesh)
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x19AF514", Offset = "0x19AF514", VA = "0x19AF514")]
		public static TS_Mesh Copy(TS_Mesh input)
		{
			return null;
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x19AF8C8", Offset = "0x19AF8C8", VA = "0x19AF8C8")]
		public void Absorb(TS_Mesh input)
		{
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x19AFEB8", Offset = "0x19AFEB8", VA = "0x19AFEB8")]
		public void WriteMesh(ref Mesh input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051E")]
	public class TS_Transform
	{
		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool setPosition;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool setRotation;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool setScale;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool setLocalPosition;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool setLocalRotation;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Transform _transform;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private float posX;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private float posY;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private float posZ;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[HideInInspector]
		private float scaleX;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private float scaleY;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		private float scaleZ;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleX;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleY;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleZ;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[HideInInspector]
		private float rotX;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private float rotY;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[HideInInspector]
		private float rotZ;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private float rotW;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private float lposX;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private float lposY;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[HideInInspector]
		private float lposZ;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private float lrotX;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[HideInInspector]
		private float lrotY;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private float lrotZ;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[HideInInspector]
		private float lrotW;

		[Token(Token = "0x170002FB")]
		public Vector3 position
		{
			[Token(Token = "0x6002398")]
			[Address(RVA = "0x13EEDF8", Offset = "0x13EEDF8", VA = "0x13EEDF8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002399")]
			[Address(RVA = "0x13EEE6C", Offset = "0x13EEE6C", VA = "0x13EEE6C")]
			set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public Quaternion rotation
		{
			[Token(Token = "0x600239A")]
			[Address(RVA = "0x13EEEC8", Offset = "0x13EEEC8", VA = "0x13EEEC8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600239B")]
			[Address(RVA = "0x13EEF44", Offset = "0x13EEF44", VA = "0x13EEF44")]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public Vector3 scale
		{
			[Token(Token = "0x600239C")]
			[Address(RVA = "0x13EEFAC", Offset = "0x13EEFAC", VA = "0x13EEFAC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600239D")]
			[Address(RVA = "0x13EF020", Offset = "0x13EF020", VA = "0x13EF020")]
			set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		public Vector3 lossyScale
		{
			[Token(Token = "0x600239E")]
			[Address(RVA = "0x13EF078", Offset = "0x13EF078", VA = "0x13EF078")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600239F")]
			[Address(RVA = "0x13EF0EC", Offset = "0x13EF0EC", VA = "0x13EF0EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public Vector3 localPosition
		{
			[Token(Token = "0x60023A0")]
			[Address(RVA = "0x13EF144", Offset = "0x13EF144", VA = "0x13EF144")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60023A1")]
			[Address(RVA = "0x13EF1B8", Offset = "0x13EF1B8", VA = "0x13EF1B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public Quaternion localRotation
		{
			[Token(Token = "0x60023A2")]
			[Address(RVA = "0x13EF214", Offset = "0x13EF214", VA = "0x13EF214")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x13EF290", Offset = "0x13EF290", VA = "0x13EF290")]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public Transform transform
		{
			[Token(Token = "0x60023A4")]
			[Address(RVA = "0x13EF2F8", Offset = "0x13EF2F8", VA = "0x13EF2F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x13EF300", Offset = "0x13EF300", VA = "0x13EF300")]
		public TS_Transform(Transform input)
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x13EF388", Offset = "0x13EF388", VA = "0x13EF388")]
		public void Update()
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x13EF378", Offset = "0x13EF378", VA = "0x13EF378")]
		public void SetTransform(Transform input)
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x13EF564", Offset = "0x13EF564", VA = "0x13EF564")]
		public bool HasChange()
		{
			return default(bool);
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x13EF5A8", Offset = "0x13EF5A8", VA = "0x13EF5A8")]
		public bool HasPositionChange()
		{
			return default(bool);
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x13EF638", Offset = "0x13EF638", VA = "0x13EF638")]
		public bool HasRotationChange()
		{
			return default(bool);
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x13EF6E8", Offset = "0x13EF6E8", VA = "0x13EF6E8")]
		public bool HasScaleChange()
		{
			return default(bool);
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x13EF778", Offset = "0x13EF778", VA = "0x13EF778")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x13EF8E8", Offset = "0x13EF8E8", VA = "0x13EF8E8")]
		public Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x13EF9BC", Offset = "0x13EF9BC", VA = "0x13EF9BC")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x13EFA78", Offset = "0x13EFA78", VA = "0x13EFA78")]
		public Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023B0")]
		public T GetComponent<T>()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200051F")]
	public static class TransformUtility
	{
		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x13EFB9C", Offset = "0x13EFB9C", VA = "0x13EFB9C")]
		public static Vector3 GetPosition(Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x13EFC40", Offset = "0x13EFC40", VA = "0x13EFC40")]
		public static Quaternion GetRotation(Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x13EFD5C", Offset = "0x13EFD5C", VA = "0x13EFD5C")]
		public static Vector3 GetScale(Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x13EFE20", Offset = "0x13EFE20", VA = "0x13EFE20")]
		public static void SetPosition(ref Matrix4x4 m, ref Vector3 p)
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x13EFE78", Offset = "0x13EFE78", VA = "0x13EFE78")]
		public static void GetChildCount(Transform parent, ref int count)
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x13F00C4", Offset = "0x13F00C4", VA = "0x13F00C4")]
		public static bool IsParent(Transform child, Transform parent)
		{
			return default(bool);
		}
	}
}
namespace Dreamteck.Splines
{
	[Token(Token = "0x2000520")]
	public class BlankUser : SplineUser
	{
		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x1326FB0", Offset = "0x1326FB0", VA = "0x1326FB0")]
		private void Start()
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x1326FB4", Offset = "0x1326FB4", VA = "0x1326FB4", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x1326FBC", Offset = "0x1326FBC", VA = "0x1326FBC", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x1326FC4", Offset = "0x1326FC4", VA = "0x1326FC4", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x1326FCC", Offset = "0x1326FCC", VA = "0x1326FCC")]
		public BlankUser()
		{
		}
	}
	[Token(Token = "0x2000521")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34DAC", Offset = "0xA34DAC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34DAC", Offset = "0xA34DAC")]
	public class EdgeColliderGenerator : SplineUser
	{
		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		protected EdgeCollider2D edgeCollider;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float lastUpdateTime;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool updateCollider;

		[Token(Token = "0x17000302")]
		public float offset
		{
			[Token(Token = "0x60023BC")]
			[Address(RVA = "0x1327618", Offset = "0x1327618", VA = "0x1327618")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x1327620", Offset = "0x1327620", VA = "0x1327620")]
			set
			{
			}
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x1327640", Offset = "0x1327640", VA = "0x1327640", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x13276A4", Offset = "0x13276A4", VA = "0x13276A4", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x13276AC", Offset = "0x13276AC", VA = "0x13276AC", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x13276B4", Offset = "0x13276B4", VA = "0x13276B4", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x13276BC", Offset = "0x13276BC", VA = "0x13276BC", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x13276C4", Offset = "0x13276C4", VA = "0x13276C4", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x1327798", Offset = "0x1327798", VA = "0x1327798", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x13279AC", Offset = "0x13279AC", VA = "0x13279AC", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x1327B4C", Offset = "0x1327B4C", VA = "0x1327B4C")]
		public EdgeColliderGenerator()
		{
		}
	}
	[Token(Token = "0x2000522")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34E34", Offset = "0xA34E34")]
	public class LengthCalculator : SplineUser
	{
		[Serializable]
		[Token(Token = "0x2000843")]
		public class LengthEvent
		{
			[Token(Token = "0x2000892")]
			public enum Type
			{
				[Token(Token = "0x40030BA")]
				Growing,
				[Token(Token = "0x40030BB")]
				Shrinking,
				[Token(Token = "0x40030BC")]
				Both
			}

			[Token(Token = "0x4002F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4002F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float targetLength;

			[Token(Token = "0x4002F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent onChange;

			[Token(Token = "0x4002F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Type type;

			[Token(Token = "0x6003440")]
			[Address(RVA = "0x18E15D0", Offset = "0x18E15D0", VA = "0x18E15D0")]
			public LengthEvent()
			{
			}

			[Token(Token = "0x6003441")]
			[Address(RVA = "0x18E1648", Offset = "0x18E1648", VA = "0x18E1648")]
			public LengthEvent(Type t)
			{
			}

			[Token(Token = "0x6003442")]
			[Address(RVA = "0x18E1408", Offset = "0x18E1408", VA = "0x18E1408")]
			public void Check(float fromLength, float toLength)
			{
			}
		}

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public LengthEvent[] lengthEvents;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public float idealLength;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float _length;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float lastLength;

		[Token(Token = "0x17000303")]
		public float length
		{
			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x18E12BC", Offset = "0x18E12BC", VA = "0x18E12BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x18E12C4", Offset = "0x18E12C4", VA = "0x18E12C4", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x18E1368", Offset = "0x18E1368", VA = "0x18E1368", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x18E1488", Offset = "0x18E1488", VA = "0x18E1488")]
		private void AddEvent(LengthEvent lengthEvent)
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x18E1568", Offset = "0x18E1568", VA = "0x18E1568")]
		public LengthCalculator()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class MeshGenerator : SplineUser
	{
		[Token(Token = "0x2000844")]
		public enum UVMode
		{
			[Token(Token = "0x4002F77")]
			Clip,
			[Token(Token = "0x4002F78")]
			UniformClip,
			[Token(Token = "0x4002F79")]
			Clamp,
			[Token(Token = "0x4002F7A")]
			UniformClamp
		}

		[Token(Token = "0x2000845")]
		public enum NormalMethod
		{
			[Token(Token = "0x4002F7C")]
			Recalculate,
			[Token(Token = "0x4002F7D")]
			SplineNormals
		}

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[SerializeField]
		[HideInInspector]
		private bool _baked;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		[SerializeField]
		[HideInInspector]
		private bool _markDynamic;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private Color _color;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _offset;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		private NormalMethod _normalMethod;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		private bool _calculateTangents;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4888C", Offset = "0xA4888C")]
		private float _rotation;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		private bool _flipFaces;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[SerializeField]
		[HideInInspector]
		private bool _doubleSided;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		[HideInInspector]
		private UVMode _uvMode;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvScale;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvOffset;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		private float _uvRotation;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		protected MeshCollider meshCollider;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		protected MeshFilter filter;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		protected MeshRenderer meshRenderer;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		protected TS_Mesh tsMesh;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		protected Mesh mesh;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public float colliderUpdateRate;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected bool updateCollider;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected float lastUpdateTime;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float vDist;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Vector2 uvs;

		[Token(Token = "0x17000304")]
		public float size
		{
			[Token(Token = "0x60023CC")]
			[Address(RVA = "0x18E16D4", Offset = "0x18E16D4", VA = "0x18E16D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x18E16DC", Offset = "0x18E16DC", VA = "0x18E16DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public Color color
		{
			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x18E16FC", Offset = "0x18E16FC", VA = "0x18E16FC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x18D45D8", Offset = "0x18D45D8", VA = "0x18D45D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000306")]
		public Vector3 offset
		{
			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x18E1708", Offset = "0x18E1708", VA = "0x18E1708")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x18E1714", Offset = "0x18E1714", VA = "0x18E1714")]
			set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public NormalMethod normalMethod
		{
			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x18E17F0", Offset = "0x18E17F0", VA = "0x18E17F0")]
			get
			{
				return default(NormalMethod);
			}
			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x18E17F8", Offset = "0x18E17F8", VA = "0x18E17F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public bool calculateTangents
		{
			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x18E1818", Offset = "0x18E1818", VA = "0x18E1818")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023D5")]
			[Address(RVA = "0x18E1820", Offset = "0x18E1820", VA = "0x18E1820")]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public float rotation
		{
			[Token(Token = "0x60023D6")]
			[Address(RVA = "0x18E184C", Offset = "0x18E184C", VA = "0x18E184C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023D7")]
			[Address(RVA = "0x18E1854", Offset = "0x18E1854", VA = "0x18E1854")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public bool flipFaces
		{
			[Token(Token = "0x60023D8")]
			[Address(RVA = "0x18E1874", Offset = "0x18E1874", VA = "0x18E1874")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023D9")]
			[Address(RVA = "0x18E187C", Offset = "0x18E187C", VA = "0x18E187C")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public bool doubleSided
		{
			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x18E18A8", Offset = "0x18E18A8", VA = "0x18E18A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x18E18B0", Offset = "0x18E18B0", VA = "0x18E18B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public UVMode uvMode
		{
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x18E18DC", Offset = "0x18E18DC", VA = "0x18E18DC")]
			get
			{
				return default(UVMode);
			}
			[Token(Token = "0x60023DD")]
			[Address(RVA = "0x18E18E4", Offset = "0x18E18E4", VA = "0x18E18E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public Vector2 uvScale
		{
			[Token(Token = "0x60023DE")]
			[Address(RVA = "0x18E1904", Offset = "0x18E1904", VA = "0x18E1904")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60023DF")]
			[Address(RVA = "0x18E190C", Offset = "0x18E190C", VA = "0x18E190C")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public Vector2 uvOffset
		{
			[Token(Token = "0x60023E0")]
			[Address(RVA = "0x18E19C8", Offset = "0x18E19C8", VA = "0x18E19C8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60023E1")]
			[Address(RVA = "0x18E19D4", Offset = "0x18E19D4", VA = "0x18E19D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public float uvRotation
		{
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0x18E1A98", Offset = "0x18E1A98", VA = "0x18E1A98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023E3")]
			[Address(RVA = "0x18E1AA0", Offset = "0x18E1AA0", VA = "0x18E1AA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public bool baked
		{
			[Token(Token = "0x60023E4")]
			[Address(RVA = "0x18E1AC0", Offset = "0x18E1AC0", VA = "0x18E1AC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000311")]
		public bool markDynamic
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x18E1AC8", Offset = "0x18E1AC8", VA = "0x18E1AC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023E6")]
			[Address(RVA = "0x18E1AD0", Offset = "0x18E1AD0", VA = "0x18E1AD0")]
			set
			{
			}
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x18E1BAC", Offset = "0x18E1BAC", VA = "0x18E1BAC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x18E1C98", Offset = "0x18E1C98", VA = "0x18E1C98", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x18E1CA0", Offset = "0x18E1CA0", VA = "0x18E1CA0")]
		public void CloneMesh()
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x18E1DB0", Offset = "0x18E1DB0", VA = "0x18E1DB0", Slot = "12")]
		public override void Rebuild()
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x18E1DC4", Offset = "0x18E1DC4", VA = "0x18E1DC4", Slot = "13")]
		public override void RebuildImmediate()
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x18E1DD8", Offset = "0x18E1DD8", VA = "0x18E1DD8", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x18E1DE0", Offset = "0x18E1DE0", VA = "0x18E1DE0", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x18E1DE8", Offset = "0x18E1DE8", VA = "0x18E1DE8", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x18E1F08", Offset = "0x18E1F08", VA = "0x18E1F08")]
		public void UpdateCollider()
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x18E1FEC", Offset = "0x18E1FEC", VA = "0x18E1FEC", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x18E20E0", Offset = "0x18E20E0", VA = "0x18E20E0", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x18E2114", Offset = "0x18E2114", VA = "0x18E2114", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x18E2148", Offset = "0x18E2148", VA = "0x18E2148", Slot = "20")]
		protected virtual void BuildMesh()
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x18E214C", Offset = "0x18E214C", VA = "0x18E214C", Slot = "21")]
		protected virtual void WriteMesh()
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x18E22F8", Offset = "0x18E22F8", VA = "0x18E22F8", Slot = "22")]
		protected virtual void AllocateMesh(int vertexCount, int trisCount)
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x18E2448", Offset = "0x18E2448", VA = "0x18E2448")]
		protected void ResetUVDistance()
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x18E24A8", Offset = "0x18E24A8", VA = "0x18E24A8")]
		protected void AddUVDistance(int sampleIndex)
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x18E25A4", Offset = "0x18E25A4", VA = "0x18E25A4")]
		protected void CalculateUVs(double percent, float u)
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x18E2748", Offset = "0x18E2748", VA = "0x18E2748")]
		public MeshGenerator()
		{
		}
	}
	[Token(Token = "0x2000524")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34E6C", Offset = "0xA34E6C")]
	public class Node : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000846")]
		public class Connection
		{
			[Token(Token = "0x4002F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool invertTangents;

			[Token(Token = "0x4002F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private int _pointIndex;

			[Token(Token = "0x4002F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineComputer _computer;

			[Token(Token = "0x4002F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			internal SplinePoint point;

			[Token(Token = "0x1700072E")]
			public SplineComputer spline
			{
				[Token(Token = "0x6003443")]
				[Address(RVA = "0x18E4B7C", Offset = "0x18E4B7C", VA = "0x18E4B7C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700072F")]
			public int pointIndex
			{
				[Token(Token = "0x6003444")]
				[Address(RVA = "0x18E4B84", Offset = "0x18E4B84", VA = "0x18E4B84")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000730")]
			internal bool isValid
			{
				[Token(Token = "0x6003445")]
				[Address(RVA = "0x18E4104", Offset = "0x18E4104", VA = "0x18E4104")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6003446")]
			[Address(RVA = "0x18E4860", Offset = "0x18E4860", VA = "0x18E4860")]
			internal Connection(SplineComputer comp, int index, SplinePoint inputPoint)
			{
			}
		}

		[Token(Token = "0x2000847")]
		public enum Type
		{
			[Token(Token = "0x4002F83")]
			Smooth,
			[Token(Token = "0x4002F84")]
			Free
		}

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Type type;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		protected Connection[] connections;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private bool _transformSize;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		[HideInInspector]
		private bool _transformNormals;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		[HideInInspector]
		private bool _transformTangents;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastPosition;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 lastScale;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion lastRotation;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform trs;

		[Token(Token = "0x17000312")]
		public bool transformNormals
		{
			[Token(Token = "0x60023FB")]
			[Address(RVA = "0x18E2F3C", Offset = "0x18E2F3C", VA = "0x18E2F3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023FC")]
			[Address(RVA = "0x18E2F44", Offset = "0x18E2F44", VA = "0x18E2F44")]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public bool transformSize
		{
			[Token(Token = "0x60023FD")]
			[Address(RVA = "0x18E30A0", Offset = "0x18E30A0", VA = "0x18E30A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023FE")]
			[Address(RVA = "0x18E30A8", Offset = "0x18E30A8", VA = "0x18E30A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000314")]
		public bool transformTangents
		{
			[Token(Token = "0x60023FF")]
			[Address(RVA = "0x18E30CC", Offset = "0x18E30CC", VA = "0x18E30CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002400")]
			[Address(RVA = "0x18E30D4", Offset = "0x18E30D4", VA = "0x18E30D4")]
			set
			{
			}
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x18E30F8", Offset = "0x18E30F8", VA = "0x18E30F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x18E318C", Offset = "0x18E318C", VA = "0x18E318C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x18E31D0", Offset = "0x18E31D0", VA = "0x18E31D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x18E31D4", Offset = "0x18E31D4", VA = "0x18E31D4")]
		private bool TransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x18E3124", Offset = "0x18E3124", VA = "0x18E3124")]
		private void SampleTransform()
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x18E3190", Offset = "0x18E3190", VA = "0x18E3190")]
		private void Run()
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x18E3728", Offset = "0x18E3728", VA = "0x18E3728")]
		public SplinePoint GetPoint(int connectionIndex, bool swapTangents)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x18E3998", Offset = "0x18E3998", VA = "0x18E3998")]
		public void SetPoint(int connectionIndex, SplinePoint worldPoint, bool swappedTangents)
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x18E3FDC", Offset = "0x18E3FDC", VA = "0x18E3FDC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x18E3FE0", Offset = "0x18E3FE0", VA = "0x18E3FE0")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x18E338C", Offset = "0x18E338C", VA = "0x18E338C")]
		public void UpdateConnectedComputers([Optional] SplineComputer excludeComputer)
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x18E4320", Offset = "0x18E4320", VA = "0x18E4320")]
		public void UpdatePoint(SplineComputer computer, int pointIndex, SplinePoint point, bool updatePosition = true)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x18E2F68", Offset = "0x18E2F68", VA = "0x18E2F68")]
		public void UpdatePoints()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x18E4470", Offset = "0x18E4470", VA = "0x18E4470")]
		protected void RemoveInvalidConnections()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0x18E4500", Offset = "0x18E4500", VA = "0x18E4500", Slot = "4")]
		public virtual void AddConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x18E3E58", Offset = "0x18E3E58", VA = "0x18E3E58")]
		protected SplinePoint PointToLocal(SplinePoint worldPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x18E384C", Offset = "0x18E384C", VA = "0x18E384C")]
		protected SplinePoint PointToWorld(SplinePoint localPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x18E48B0", Offset = "0x18E48B0", VA = "0x18E48B0", Slot = "5")]
		public virtual void RemoveConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x18E41A4", Offset = "0x18E41A4", VA = "0x18E41A4")]
		private void RemoveConnection(int index)
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x18E49B0", Offset = "0x18E49B0", VA = "0x18E49B0", Slot = "6")]
		public virtual bool HasConnection(SplineComputer computer, int pointIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x18E4B04", Offset = "0x18E4B04", VA = "0x18E4B04")]
		public Connection[] GetConnections()
		{
			return null;
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x18E4B0C", Offset = "0x18E4B0C", VA = "0x18E4B0C")]
		public Node()
		{
		}
	}
	[Token(Token = "0x2000525")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34EB8", Offset = "0xA34EB8")]
	public class ObjectBender : SplineUser
	{
		[Token(Token = "0x2000848")]
		public enum Axis
		{
			[Token(Token = "0x4002F86")]
			X,
			[Token(Token = "0x4002F87")]
			Y,
			[Token(Token = "0x4002F88")]
			Z
		}

		[Token(Token = "0x2000849")]
		public enum NormalMode
		{
			[Token(Token = "0x4002F8A")]
			Spline,
			[Token(Token = "0x4002F8B")]
			Auto,
			[Token(Token = "0x4002F8C")]
			Custom
		}

		[Token(Token = "0x200084A")]
		public enum ForwardMode
		{
			[Token(Token = "0x4002F8E")]
			Spline,
			[Token(Token = "0x4002F8F")]
			Custom
		}

		[Serializable]
		[Token(Token = "0x200084B")]
		public class BendProperty
		{
			[Token(Token = "0x4002F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4002F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TS_Transform transform;

			[Token(Token = "0x4002F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool applyRotation;

			[Token(Token = "0x4002F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool applyScale;

			[Token(Token = "0x4002F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool generateLightmapUVs;

			[Token(Token = "0x4002F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			[SerializeField]
			[HideInInspector]
			private bool _bendMesh;

			[Token(Token = "0x4002F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private bool _bendSpline;

			[Token(Token = "0x4002F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			[SerializeField]
			[HideInInspector]
			private bool _bendCollider;

			[Token(Token = "0x4002F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float colliderUpdateDue;

			[Token(Token = "0x4002F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float colliderUpdateRate;

			[Token(Token = "0x4002F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool updateCollider;

			[Token(Token = "0x4002F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 originalPosition;

			[Token(Token = "0x4002F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 originalScale;

			[Token(Token = "0x4002F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Quaternion originalRotation;

			[Token(Token = "0x4002F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Quaternion parentRotation;

			[Token(Token = "0x4002F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Vector3 positionPercent;

			[Token(Token = "0x4002FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector3[] vertexPercents;

			[Token(Token = "0x4002FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector3[] normals;

			[Token(Token = "0x4002FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Vector3[] colliderVertexPercents;

			[Token(Token = "0x4002FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Vector3[] colliderNormals;

			[Token(Token = "0x4002FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalMesh;

			[Token(Token = "0x4002FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalColliderMesh;

			[Token(Token = "0x4002FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Spline _originalSpline;

			[Token(Token = "0x4002FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationMesh;

			[Token(Token = "0x4002FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationColliderMesh;

			[Token(Token = "0x4002FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Spline destinationSpline;

			[Token(Token = "0x4002FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public TS_Mesh _editMesh;

			[Token(Token = "0x4002FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public TS_Mesh _editColliderMesh;

			[Token(Token = "0x4002FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public MeshFilter filter;

			[Token(Token = "0x4002FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public MeshCollider collider;

			[Token(Token = "0x4002FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public SplineComputer splineComputer;

			[Token(Token = "0x4002FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public Vector3[] splinePointPercents;

			[Token(Token = "0x4002FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public Vector3[] primaryTangentPercents;

			[Token(Token = "0x4002FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public Vector3[] secondaryTangentPercents;

			[Token(Token = "0x4002FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[SerializeField]
			[HideInInspector]
			private bool parent;

			[Token(Token = "0x17000731")]
			public bool isValid
			{
				[Token(Token = "0x6003447")]
				[Address(RVA = "0x18E8B54", Offset = "0x18E8B54", VA = "0x18E8B54")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000732")]
			public bool bendMesh
			{
				[Token(Token = "0x6003448")]
				[Address(RVA = "0x18E8BDC", Offset = "0x18E8BDC", VA = "0x18E8BDC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6003449")]
				[Address(RVA = "0x18E6144", Offset = "0x18E6144", VA = "0x18E6144")]
				set
				{
				}
			}

			[Token(Token = "0x17000733")]
			public bool bendCollider
			{
				[Token(Token = "0x600344A")]
				[Address(RVA = "0x18E8C78", Offset = "0x18E8C78", VA = "0x18E8C78")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600344B")]
				[Address(RVA = "0x18E62DC", Offset = "0x18E62DC", VA = "0x18E62DC")]
				set
				{
				}
			}

			[Token(Token = "0x17000734")]
			public bool bendSpline
			{
				[Token(Token = "0x600344C")]
				[Address(RVA = "0x18E8D14", Offset = "0x18E8D14", VA = "0x18E8D14")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600344D")]
				[Address(RVA = "0x18E8D1C", Offset = "0x18E8D1C", VA = "0x18E8D1C")]
				set
				{
				}
			}

			[Token(Token = "0x17000735")]
			public TS_Mesh editMesh
			{
				[Token(Token = "0x600344E")]
				[Address(RVA = "0x18E70D0", Offset = "0x18E70D0", VA = "0x18E70D0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000736")]
			public TS_Mesh editColliderMesh
			{
				[Token(Token = "0x600344F")]
				[Address(RVA = "0x18E71D0", Offset = "0x18E71D0", VA = "0x18E71D0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000737")]
			public Spline originalSpline
			{
				[Token(Token = "0x6003450")]
				[Address(RVA = "0x18E72FC", Offset = "0x18E72FC", VA = "0x18E72FC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000738")]
			public bool isParent
			{
				[Token(Token = "0x6003451")]
				[Address(RVA = "0x18E8D28", Offset = "0x18E8D28", VA = "0x18E8D28")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6003452")]
			[Address(RVA = "0x18E5B10", Offset = "0x18E5B10", VA = "0x18E5B10")]
			public BendProperty(Transform t, bool parent = false)
			{
			}

			[Token(Token = "0x6003453")]
			[Address(RVA = "0x18E7524", Offset = "0x18E7524", VA = "0x18E7524")]
			public void Revert()
			{
			}

			[Token(Token = "0x6003454")]
			[Address(RVA = "0x18E8BE4", Offset = "0x18E8BE4", VA = "0x18E8BE4")]
			private void RevertMesh()
			{
			}

			[Token(Token = "0x6003455")]
			[Address(RVA = "0x18E8D30", Offset = "0x18E8D30", VA = "0x18E8D30")]
			private void RevertTransform()
			{
			}

			[Token(Token = "0x6003456")]
			[Address(RVA = "0x18E8C80", Offset = "0x18E8C80", VA = "0x18E8C80")]
			private void RevertCollider()
			{
			}

			[Token(Token = "0x6003457")]
			[Address(RVA = "0x18E7670", Offset = "0x18E7670", VA = "0x18E7670")]
			public void Apply(bool applyTransform)
			{
			}

			[Token(Token = "0x6003458")]
			[Address(RVA = "0x18E77FC", Offset = "0x18E77FC", VA = "0x18E77FC")]
			public void Update()
			{
			}

			[Token(Token = "0x6003459")]
			[Address(RVA = "0x18E8DB4", Offset = "0x18E8DB4", VA = "0x18E8DB4")]
			private void ApplyMesh()
			{
			}

			[Token(Token = "0x600345A")]
			[Address(RVA = "0x18E8F64", Offset = "0x18E8F64", VA = "0x18E8F64")]
			private void ApplyCollider()
			{
			}

			[Token(Token = "0x600345B")]
			[Address(RVA = "0x18E8F34", Offset = "0x18E8F34", VA = "0x18E8F34")]
			private void ApplySpline()
			{
			}
		}

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[SerializeField]
		[HideInInspector]
		private bool _bend;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public BendProperty[] bendProperties;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		private bool _parentIsTheSpline;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private TS_Bounds bounds;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		private NormalMode _normalMode;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		private ForwardMode _forwardMode;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA48DAC", Offset = "0xA48DAC")]
		private Vector3 _customNormal;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _customForward;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Quaternion bendRotation;

		[Token(Token = "0x17000315")]
		public bool bend
		{
			[Token(Token = "0x6002417")]
			[Address(RVA = "0x18E4B8C", Offset = "0x18E4B8C", VA = "0x18E4B8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002418")]
			[Address(RVA = "0x18E4B94", Offset = "0x18E4B94", VA = "0x18E4B94")]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public Axis axis
		{
			[Token(Token = "0x6002419")]
			[Address(RVA = "0x18E4E10", Offset = "0x18E4E10", VA = "0x18E4E10")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x600241A")]
			[Address(RVA = "0x18E4E18", Offset = "0x18E4E18", VA = "0x18E4E18")]
			set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public NormalMode upMode
		{
			[Token(Token = "0x600241B")]
			[Address(RVA = "0x18E4ED4", Offset = "0x18E4ED4", VA = "0x18E4ED4")]
			get
			{
				return default(NormalMode);
			}
			[Token(Token = "0x600241C")]
			[Address(RVA = "0x18E4EDC", Offset = "0x18E4EDC", VA = "0x18E4EDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public Vector3 customNormal
		{
			[Token(Token = "0x600241D")]
			[Address(RVA = "0x18E4F90", Offset = "0x18E4F90", VA = "0x18E4F90")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600241E")]
			[Address(RVA = "0x18E4F9C", Offset = "0x18E4F9C", VA = "0x18E4F9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public ForwardMode forwardMode
		{
			[Token(Token = "0x600241F")]
			[Address(RVA = "0x18E50B8", Offset = "0x18E50B8", VA = "0x18E50B8")]
			get
			{
				return default(ForwardMode);
			}
			[Token(Token = "0x6002420")]
			[Address(RVA = "0x18E50C0", Offset = "0x18E50C0", VA = "0x18E50C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public Vector3 customForward
		{
			[Token(Token = "0x6002421")]
			[Address(RVA = "0x18E5174", Offset = "0x18E5174", VA = "0x18E5174")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002422")]
			[Address(RVA = "0x18E5180", Offset = "0x18E5180", VA = "0x18E5180")]
			set
			{
			}
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x18E529C", Offset = "0x18E529C", VA = "0x18E529C")]
		private void GetTransformsRecursively(Transform current, ref List<Transform> transformList)
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x18E5514", Offset = "0x18E5514", VA = "0x18E5514")]
		private void GetObjects()
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x18E5A48", Offset = "0x18E5A48", VA = "0x18E5A48")]
		public TS_Bounds GetBounds()
		{
			return null;
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x18E5690", Offset = "0x18E5690", VA = "0x18E5690")]
		private void CreateProperty(ref BendProperty property, Transform t)
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x18E6438", Offset = "0x18E6438", VA = "0x18E6438")]
		private void CalculateBounds()
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x18E65EC", Offset = "0x18E65EC", VA = "0x18E65EC")]
		private void CalculatePropertyBounds(ref BendProperty property)
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x18E6BE0", Offset = "0x18E6BE0", VA = "0x18E6BE0")]
		public void CalculatePercents(BendProperty property)
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x18E4DA8", Offset = "0x18E4DA8", VA = "0x18E4DA8")]
		private void Revert()
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x18E4C00", Offset = "0x18E4C00", VA = "0x18E4C00")]
		public void UpdateReferences()
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x18E7848", Offset = "0x18E7848", VA = "0x18E7848")]
		private void GetevalResult(Vector3 percentage)
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x18E742C", Offset = "0x18E742C", VA = "0x18E742C")]
		private Vector3 GetPercentage(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x18E7FC4", Offset = "0x18E7FC4", VA = "0x18E7FC4", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x18E75EC", Offset = "0x18E75EC", VA = "0x18E75EC")]
		private void Bend()
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x18E8000", Offset = "0x18E8000", VA = "0x18E8000")]
		public void BendObject(BendProperty p)
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x18E86C8", Offset = "0x18E86C8", VA = "0x18E86C8")]
		private void BendMesh(Vector3[] vertexPercents, Vector3[] originalNormals, TS_Mesh mesh, Matrix4x4 worldToLocalMatrix)
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x18E88C0", Offset = "0x18E88C0", VA = "0x18E88C0", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x18E8A00", Offset = "0x18E8A00", VA = "0x18E8A00", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x18E8A70", Offset = "0x18E8A70", VA = "0x18E8A70")]
		public ObjectBender()
		{
		}
	}
	[Token(Token = "0x2000526")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34EF0", Offset = "0xA34EF0")]
	public class ObjectController : SplineUser
	{
		[Serializable]
		[Token(Token = "0x200084C")]
		internal class ObjectControl
		{
			[Token(Token = "0x4002FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4002FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x4002FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x4002FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 scale;

			[Token(Token = "0x4002FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool active;

			[Token(Token = "0x4002FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector3 baseScale;

			[Token(Token = "0x17000739")]
			public bool isNull
			{
				[Token(Token = "0x600345C")]
				[Address(RVA = "0x18EBB94", Offset = "0x18EBB94", VA = "0x18EBB94")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700073A")]
			public Transform transform
			{
				[Token(Token = "0x600345D")]
				[Address(RVA = "0x18E9F6C", Offset = "0x18E9F6C", VA = "0x18E9F6C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600345E")]
			[Address(RVA = "0x18EA6A0", Offset = "0x18EA6A0", VA = "0x18EA6A0")]
			public ObjectControl(GameObject input)
			{
			}

			[Token(Token = "0x600345F")]
			[Address(RVA = "0x18EA004", Offset = "0x18EA004", VA = "0x18EA004")]
			public void Destroy()
			{
			}

			[Token(Token = "0x6003460")]
			[Address(RVA = "0x18EA0CC", Offset = "0x18EA0CC", VA = "0x18EA0CC")]
			public void DestroyImmediate()
			{
			}

			[Token(Token = "0x6003461")]
			[Address(RVA = "0x18EB7DC", Offset = "0x18EB7DC", VA = "0x18EB7DC")]
			public void Apply()
			{
			}
		}

		[Token(Token = "0x200084D")]
		public enum ObjectMethod
		{
			[Token(Token = "0x4002FBA")]
			Instantiate,
			[Token(Token = "0x4002FBB")]
			GetChildren
		}

		[Token(Token = "0x200084E")]
		public enum Positioning
		{
			[Token(Token = "0x4002FBD")]
			Stretch,
			[Token(Token = "0x4002FBE")]
			Clip
		}

		[Token(Token = "0x200084F")]
		public enum Iteration
		{
			[Token(Token = "0x4002FC0")]
			Ordered,
			[Token(Token = "0x4002FC1")]
			Random
		}

		[Token(Token = "0x2000850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA377A8", Offset = "0xA377A8")]
		private sealed class <InstantiateAllWithDelay>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectController <>4__this;

			[Token(Token = "0x4002FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700073B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003465")]
				[Address(RVA = "0x18EBB24", Offset = "0x18EBB24", VA = "0x18EBB24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700073C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003467")]
				[Address(RVA = "0x18EBB8C", Offset = "0x18EBB8C", VA = "0x18EBB8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003462")]
			[Address(RVA = "0x18EA954", Offset = "0x18EA954", VA = "0x18EA954")]
			[DebuggerHidden]
			public <InstantiateAllWithDelay>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6003463")]
			[Address(RVA = "0x18EB9EC", Offset = "0x18EB9EC", VA = "0x18EB9EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003464")]
			[Address(RVA = "0x18EB9F0", Offset = "0x18EB9F0", VA = "0x18EB9F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003466")]
			[Address(RVA = "0x18EBB2C", Offset = "0x18EBB2C", VA = "0x18EBB2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		public GameObject[] objects;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		private float _evaluateOffset;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[HideInInspector]
		private int _spawnCount;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private Positioning _objectPositioning;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[HideInInspector]
		private Iteration _iteration;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minOffset;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxOffset;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[HideInInspector]
		private bool _offsetUseWorldCoords;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minRotation;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxRotation;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformScaleLerp;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minScaleMultiplier;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxScaleMultiplier;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private bool _shellOffset;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		[SerializeField]
		[HideInInspector]
		private bool _applyRotation;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
		[SerializeField]
		[HideInInspector]
		private bool _rotateByOffset;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x137")]
		[SerializeField]
		[HideInInspector]
		private bool _applyScale;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private ObjectMethod _objectMethod;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[HideInInspector]
		public bool delayedSpawn;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public float spawnDelay;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[HideInInspector]
		private int lastChildCount;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private ObjectControl[] spawned;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private System.Random offsetRandomizer;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private System.Random shellRandomizer;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private System.Random rotationRandomizer;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private System.Random scaleRandomizer;

		[Token(Token = "0x1700031B")]
		public ObjectMethod objectMethod
		{
			[Token(Token = "0x6002435")]
			[Address(RVA = "0x18E9138", Offset = "0x18E9138", VA = "0x18E9138")]
			get
			{
				return default(ObjectMethod);
			}
			[Token(Token = "0x6002436")]
			[Address(RVA = "0x18E9140", Offset = "0x18E9140", VA = "0x18E9140")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public int spawnCount
		{
			[Token(Token = "0x6002437")]
			[Address(RVA = "0x18E9210", Offset = "0x18E9210", VA = "0x18E9210")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002438")]
			[Address(RVA = "0x18E9218", Offset = "0x18E9218", VA = "0x18E9218")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public Positioning objectPositioning
		{
			[Token(Token = "0x6002439")]
			[Address(RVA = "0x18E9480", Offset = "0x18E9480", VA = "0x18E9480")]
			get
			{
				return default(Positioning);
			}
			[Token(Token = "0x600243A")]
			[Address(RVA = "0x18E9488", Offset = "0x18E9488", VA = "0x18E9488")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public Iteration iteration
		{
			[Token(Token = "0x600243B")]
			[Address(RVA = "0x18E94A8", Offset = "0x18E94A8", VA = "0x18E94A8")]
			get
			{
				return default(Iteration);
			}
			[Token(Token = "0x600243C")]
			[Address(RVA = "0x18E94B0", Offset = "0x18E94B0", VA = "0x18E94B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public int randomSeed
		{
			[Token(Token = "0x600243D")]
			[Address(RVA = "0x18E94D0", Offset = "0x18E94D0", VA = "0x18E94D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600243E")]
			[Address(RVA = "0x18E94D8", Offset = "0x18E94D8", VA = "0x18E94D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public Vector3 minOffset
		{
			[Token(Token = "0x600243F")]
			[Address(RVA = "0x18E94F8", Offset = "0x18E94F8", VA = "0x18E94F8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002440")]
			[Address(RVA = "0x18E9504", Offset = "0x18E9504", VA = "0x18E9504")]
			set
			{
			}
		}

		[Token(Token = "0x17000321")]
		public Vector3 maxOffset
		{
			[Token(Token = "0x6002441")]
			[Address(RVA = "0x18E95E0", Offset = "0x18E95E0", VA = "0x18E95E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002442")]
			[Address(RVA = "0x18E95EC", Offset = "0x18E95EC", VA = "0x18E95EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000322")]
		public bool offsetUseWorldCoords
		{
			[Token(Token = "0x6002443")]
			[Address(RVA = "0x18E96C8", Offset = "0x18E96C8", VA = "0x18E96C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002444")]
			[Address(RVA = "0x18E96D0", Offset = "0x18E96D0", VA = "0x18E96D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public Vector3 minRotation
		{
			[Token(Token = "0x6002445")]
			[Address(RVA = "0x18E96FC", Offset = "0x18E96FC", VA = "0x18E96FC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002446")]
			[Address(RVA = "0x18E970C", Offset = "0x18E970C", VA = "0x18E970C")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public Vector3 maxRotation
		{
			[Token(Token = "0x6002447")]
			[Address(RVA = "0x18E97F0", Offset = "0x18E97F0", VA = "0x18E97F0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002448")]
			[Address(RVA = "0x18E9800", Offset = "0x18E9800", VA = "0x18E9800")]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x6002449")]
			[Address(RVA = "0x18E98E4", Offset = "0x18E98E4", VA = "0x18E98E4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600244A")]
			[Address(RVA = "0x18E999C", Offset = "0x18E999C", VA = "0x18E999C")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public Vector3 minScaleMultiplier
		{
			[Token(Token = "0x600244B")]
			[Address(RVA = "0x18E9AD4", Offset = "0x18E9AD4", VA = "0x18E9AD4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600244C")]
			[Address(RVA = "0x18E9AE4", Offset = "0x18E9AE4", VA = "0x18E9AE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public Vector3 maxScaleMultiplier
		{
			[Token(Token = "0x600244D")]
			[Address(RVA = "0x18E9BC8", Offset = "0x18E9BC8", VA = "0x18E9BC8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600244E")]
			[Address(RVA = "0x18E9BD8", Offset = "0x18E9BD8", VA = "0x18E9BD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public bool uniformScaleLerp
		{
			[Token(Token = "0x600244F")]
			[Address(RVA = "0x18E9CBC", Offset = "0x18E9CBC", VA = "0x18E9CBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002450")]
			[Address(RVA = "0x18E9CC4", Offset = "0x18E9CC4", VA = "0x18E9CC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public bool shellOffset
		{
			[Token(Token = "0x6002451")]
			[Address(RVA = "0x18E9CF0", Offset = "0x18E9CF0", VA = "0x18E9CF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002452")]
			[Address(RVA = "0x18E9CF8", Offset = "0x18E9CF8", VA = "0x18E9CF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public bool applyRotation
		{
			[Token(Token = "0x6002453")]
			[Address(RVA = "0x18E9D24", Offset = "0x18E9D24", VA = "0x18E9D24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002454")]
			[Address(RVA = "0x18E9D2C", Offset = "0x18E9D2C", VA = "0x18E9D2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public bool rotateByOffset
		{
			[Token(Token = "0x6002455")]
			[Address(RVA = "0x18E9D58", Offset = "0x18E9D58", VA = "0x18E9D58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002456")]
			[Address(RVA = "0x18E9D60", Offset = "0x18E9D60", VA = "0x18E9D60")]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public bool applyScale
		{
			[Token(Token = "0x6002457")]
			[Address(RVA = "0x18E9D8C", Offset = "0x18E9D8C", VA = "0x18E9D8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002458")]
			[Address(RVA = "0x18E9D94", Offset = "0x18E9D94", VA = "0x18E9D94")]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		public float evaluateOffset
		{
			[Token(Token = "0x6002459")]
			[Address(RVA = "0x18E9DC0", Offset = "0x18E9DC0", VA = "0x18E9DC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600245A")]
			[Address(RVA = "0x18E9DC8", Offset = "0x18E9DC8", VA = "0x18E9DC8")]
			set
			{
			}
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x18E9DE8", Offset = "0x18E9DE8", VA = "0x18E9DE8")]
		public void Clear()
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x18EA0B8", Offset = "0x18EA0B8", VA = "0x18EA0B8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x18E924C", Offset = "0x18E924C", VA = "0x18E924C")]
		private void Remove()
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x18EA180", Offset = "0x18EA180", VA = "0x18EA180")]
		public void GetAll()
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x18E9160", Offset = "0x18E9160", VA = "0x18E9160")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x18EA8D8", Offset = "0x18EA8D8", VA = "0x18EA8D8", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x18EA7AC", Offset = "0x18EA7AC", VA = "0x18EA7AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA5A518", Offset = "0xA5A518")]
		private IEnumerator InstantiateAllWithDelay()
		{
			return null;
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x18EA81C", Offset = "0x18EA81C", VA = "0x18EA81C")]
		private void InstantiateAll()
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x18EA980", Offset = "0x18EA980", VA = "0x18EA980")]
		private void InstantiateSingle()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x18EAC64", Offset = "0x18EAC64", VA = "0x18EAC64", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x18EB76C", Offset = "0x18EB76C", VA = "0x18EB76C", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x18EB8C8", Offset = "0x18EB8C8", VA = "0x18EB8C8")]
		public ObjectController()
		{
		}
	}
	[Token(Token = "0x2000527")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34F28", Offset = "0xA34F28")]
	public class ParticleController : SplineUser
	{
		[Token(Token = "0x2000851")]
		public enum EmitPoint
		{
			[Token(Token = "0x4002FC7")]
			Beginning,
			[Token(Token = "0x4002FC8")]
			Ending,
			[Token(Token = "0x4002FC9")]
			Random,
			[Token(Token = "0x4002FCA")]
			Ordered
		}

		[Token(Token = "0x2000852")]
		public enum MotionType
		{
			[Token(Token = "0x4002FCC")]
			None,
			[Token(Token = "0x4002FCD")]
			UseParticleSystem,
			[Token(Token = "0x4002FCE")]
			FollowForward,
			[Token(Token = "0x4002FCF")]
			FollowBackward,
			[Token(Token = "0x4002FD0")]
			ByNormal,
			[Token(Token = "0x4002FD1")]
			ByNormalRandomized
		}

		[Token(Token = "0x2000853")]
		public enum Wrap
		{
			[Token(Token = "0x4002FD3")]
			Default,
			[Token(Token = "0x4002FD4")]
			Loop
		}

		[Token(Token = "0x2000854")]
		public class Particle
		{
			[Token(Token = "0x4002FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector2 startOffset;

			[Token(Token = "0x4002FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vector2 endOffset;

			[Token(Token = "0x4002FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float cycleSpeed;

			[Token(Token = "0x4002FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float startLifetime;

			[Token(Token = "0x4002FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Color startColor;

			[Token(Token = "0x4002FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float remainingLifetime;

			[Token(Token = "0x4002FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal float lifeTime;

			[Token(Token = "0x4002FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal double startPercent;

			[Token(Token = "0x6003468")]
			[Address(RVA = "0x197CBE0", Offset = "0x197CBE0", VA = "0x197CBE0")]
			internal double GetSplinePercent(Wrap wrap, ParticleSystem.Particle particle)
			{
				return default(double);
			}

			[Token(Token = "0x6003469")]
			[Address(RVA = "0x197CD1C", Offset = "0x197CD1C", VA = "0x197CD1C")]
			public Particle()
			{
			}
		}

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public ParticleSystem _particleSystem;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public bool volumetric;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[HideInInspector]
		public bool emitFromShell;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public Vector2 scale;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		public EmitPoint emitPoint;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public MotionType motionType;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public float minCycles;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[HideInInspector]
		public float maxCycles;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Particle[] controllers;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int particleCount;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int birthIndex;

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x18EC34C", Offset = "0x18EC34C", VA = "0x18EC34C", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x18EC7AC", Offset = "0x18EC7AC", VA = "0x18EC7AC")]
		private void TransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x18ED6C4", Offset = "0x18ED6C4", VA = "0x18ED6C4")]
		private void InverseTransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x18EDC90", Offset = "0x18EDC90", VA = "0x18EDC90", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x18ED730", Offset = "0x18ED730", VA = "0x18ED730")]
		private void HandleParticle(int index)
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x18EDD34", Offset = "0x18EDD34", VA = "0x18EDD34")]
		private void OnParticleDie(int index)
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x18EC818", Offset = "0x18EC818", VA = "0x18EC818")]
		private void OnParticleBorn(int index)
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x18EDD38", Offset = "0x18EDD38", VA = "0x18EDD38")]
		public ParticleController()
		{
		}
	}
	[Token(Token = "0x2000528")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34F74", Offset = "0xA34F74")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA34F74", Offset = "0xA34F74")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA34F74", Offset = "0xA34F74")]
	public class PathGenerator : MeshGenerator
	{
		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[HideInInspector]
		private bool _useShapeCurve;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _shape;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _lastShape;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private float _shapeExposure;

		[Token(Token = "0x1700032E")]
		public int slices
		{
			[Token(Token = "0x600246F")]
			[Address(RVA = "0x197CDAC", Offset = "0x197CDAC", VA = "0x197CDAC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002470")]
			[Address(RVA = "0x197CDB4", Offset = "0x197CDB4", VA = "0x197CDB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700032F")]
		public bool useShapeCurve
		{
			[Token(Token = "0x6002471")]
			[Address(RVA = "0x197CDDC", Offset = "0x197CDDC", VA = "0x197CDDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002472")]
			[Address(RVA = "0x197CDE4", Offset = "0x197CDE4", VA = "0x197CDE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public float shapeExposure
		{
			[Token(Token = "0x6002473")]
			[Address(RVA = "0x197CF20", Offset = "0x197CF20", VA = "0x197CF20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002474")]
			[Address(RVA = "0x197CF28", Offset = "0x197CF28", VA = "0x197CF28")]
			set
			{
			}
		}

		[Token(Token = "0x17000331")]
		public AnimationCurve shape
		{
			[Token(Token = "0x6002475")]
			[Address(RVA = "0x197CFD8", Offset = "0x197CFD8", VA = "0x197CFD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002476")]
			[Address(RVA = "0x197CFE0", Offset = "0x197CFE0", VA = "0x197CFE0")]
			set
			{
			}
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x197D33C", Offset = "0x197D33C", VA = "0x197D33C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x197D3A4", Offset = "0x197D3A4", VA = "0x197D3A4", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x197D3AC", Offset = "0x197D3AC", VA = "0x197D3AC", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x197D460", Offset = "0x197D460", VA = "0x197D460")]
		private void GenerateVertices()
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x197E224", Offset = "0x197E224", VA = "0x197E224")]
		public PathGenerator()
		{
		}
	}
	[Token(Token = "0x2000529")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA35024", Offset = "0xA35024")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA35024", Offset = "0xA35024")]
	public class PolygonColliderGenerator : SplineUser
	{
		[Token(Token = "0x2000855")]
		public enum Type
		{
			[Token(Token = "0x4002FDE")]
			Path,
			[Token(Token = "0x4002FDF")]
			Shape
		}

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private Type _type;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		protected PolygonCollider2D polygonCollider;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float lastUpdateTime;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool updateCollider;

		[Token(Token = "0x17000332")]
		public Type type
		{
			[Token(Token = "0x600247C")]
			[Address(RVA = "0x197E29C", Offset = "0x197E29C", VA = "0x197E29C")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x600247D")]
			[Address(RVA = "0x197E2A4", Offset = "0x197E2A4", VA = "0x197E2A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000333")]
		public float size
		{
			[Token(Token = "0x600247E")]
			[Address(RVA = "0x197E2C4", Offset = "0x197E2C4", VA = "0x197E2C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600247F")]
			[Address(RVA = "0x197E2CC", Offset = "0x197E2CC", VA = "0x197E2CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public float offset
		{
			[Token(Token = "0x6002480")]
			[Address(RVA = "0x197E2EC", Offset = "0x197E2EC", VA = "0x197E2EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002481")]
			[Address(RVA = "0x197E2F4", Offset = "0x197E2F4", VA = "0x197E2F4")]
			set
			{
			}
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x197E314", Offset = "0x197E314", VA = "0x197E314", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x197E378", Offset = "0x197E378", VA = "0x197E378", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x197E380", Offset = "0x197E380", VA = "0x197E380", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x197E388", Offset = "0x197E388", VA = "0x197E388", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x197E390", Offset = "0x197E390", VA = "0x197E390", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x197E398", Offset = "0x197E398", VA = "0x197E398", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x197E470", Offset = "0x197E470", VA = "0x197E470", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x197E9B0", Offset = "0x197E9B0", VA = "0x197E9B0", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x197E4C4", Offset = "0x197E4C4", VA = "0x197E4C4")]
		private void GeneratePath()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x197E7A8", Offset = "0x197E7A8", VA = "0x197E7A8")]
		private void GenerateShape()
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x197EB54", Offset = "0x197EB54", VA = "0x197EB54")]
		public PolygonColliderGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052A")]
	public class ColorModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x2000856")]
		public class ColorKey : Key
		{
			[Token(Token = "0x2000893")]
			public enum BlendMode
			{
				[Token(Token = "0x40030BE")]
				Lerp,
				[Token(Token = "0x40030BF")]
				Multiply,
				[Token(Token = "0x40030C0")]
				Add,
				[Token(Token = "0x40030C1")]
				Subtract
			}

			[Token(Token = "0x4002FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Color color;

			[Token(Token = "0x4002FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public BlendMode blendMode;

			[Token(Token = "0x600346A")]
			[Address(RVA = "0x1327308", Offset = "0x1327308", VA = "0x1327308")]
			public ColorKey(double f, double t, ColorModifier modifier)
			{
			}

			[Token(Token = "0x600346B")]
			[Address(RVA = "0x132748C", Offset = "0x132748C", VA = "0x132748C")]
			public Color Blend(Color input, float percent)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ColorKey> keys;

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x1326FD4", Offset = "0x1326FD4", VA = "0x1326FD4")]
		public ColorModifier()
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x1327068", Offset = "0x1327068", VA = "0x1327068", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x1327140", Offset = "0x1327140", VA = "0x1327140", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x132726C", Offset = "0x132726C", VA = "0x132726C")]
		public void AddKey(double f, double t)
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x132735C", Offset = "0x132735C", VA = "0x132735C", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052B")]
	public class MeshScaleModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x2000857")]
		public class ScaleKey : Key
		{
			[Token(Token = "0x4002FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector2 scale;

			[Token(Token = "0x600346C")]
			[Address(RVA = "0x18E2C1C", Offset = "0x18E2C1C", VA = "0x18E2C1C")]
			public ScaleKey(double f, double t, MeshScaleModifier modifier)
			{
			}
		}

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ScaleKey> keys;

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x18E28C8", Offset = "0x18E28C8", VA = "0x18E28C8")]
		public MeshScaleModifier()
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x18E295C", Offset = "0x18E295C", VA = "0x18E295C", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x18E2A34", Offset = "0x18E2A34", VA = "0x18E2A34", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x18E2B80", Offset = "0x18E2B80", VA = "0x18E2B80")]
		public void AddKey(double f, double t)
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x18E2CB8", Offset = "0x18E2CB8", VA = "0x18E2CB8", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x18E2DCC", Offset = "0x18E2DCC", VA = "0x18E2DCC")]
		public Vector2 GetScale(SplineSample sample)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x200052C")]
	public class OffsetModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x2000858")]
		public class OffsetKey : Key
		{
			[Token(Token = "0x4002FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector2 offset;

			[Token(Token = "0x600346D")]
			[Address(RVA = "0x18EBF50", Offset = "0x18EBF50", VA = "0x18EBF50")]
			public OffsetKey(Vector2 o, double f, double t, OffsetModifier modifier)
			{
			}
		}

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<OffsetKey> keys;

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x18EBC04", Offset = "0x18EBC04", VA = "0x18EBC04")]
		public OffsetModifier()
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x18EBC98", Offset = "0x18EBC98", VA = "0x18EBC98", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x18EBD70", Offset = "0x18EBD70", VA = "0x18EBD70", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x18EBE9C", Offset = "0x18EBE9C", VA = "0x18EBE9C")]
		public void AddKey(Vector2 offset, double f, double t)
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x18EC004", Offset = "0x18EC004", VA = "0x18EC004", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x18EC170", Offset = "0x18EC170", VA = "0x18EC170")]
		private Vector2 Evaluate(double time)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x200052D")]
	public class RotationModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x2000859")]
		public class RotationKey : Key
		{
			[Token(Token = "0x4002FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool useLookTarget;

			[Token(Token = "0x4002FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform target;

			[Token(Token = "0x4002FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 rotation;

			[Token(Token = "0x600346E")]
			[Address(RVA = "0x19825C4", Offset = "0x19825C4", VA = "0x19825C4")]
			public RotationKey(Vector3 rotation, double f, double t, RotationModifier modifier)
			{
			}
		}

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RotationKey> keys;

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x1982268", Offset = "0x1982268", VA = "0x1982268")]
		public RotationModifier()
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x19822FC", Offset = "0x19822FC", VA = "0x19822FC", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x19823D4", Offset = "0x19823D4", VA = "0x19823D4", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x1982500", Offset = "0x1982500", VA = "0x1982500")]
		public void AddKey(Vector3 rotation, double f, double t)
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x198268C", Offset = "0x198268C", VA = "0x198268C", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052E")]
	public class SizeModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x200085A")]
		public class SizeKey : Key
		{
			[Token(Token = "0x4002FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float size;

			[Token(Token = "0x600346F")]
			[Address(RVA = "0x1985EE0", Offset = "0x1985EE0", VA = "0x1985EE0")]
			public SizeKey(double f, double t, SizeModifier modifier)
			{
			}
		}

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SizeKey> keys;

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x1985B88", Offset = "0x1985B88", VA = "0x1985B88")]
		public SizeModifier()
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x1985C1C", Offset = "0x1985C1C", VA = "0x1985C1C", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x1985CF4", Offset = "0x1985CF4", VA = "0x1985CF4", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x1985E40", Offset = "0x1985E40", VA = "0x1985E40")]
		public void AddKey(double f, double t)
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x1985EE8", Offset = "0x1985EE8", VA = "0x1985EE8", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052F")]
	public class SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x200085B")]
		public class Key
		{
			[Token(Token = "0x4002FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private double _featherStart;

			[Token(Token = "0x4002FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private double _featherEnd;

			[Token(Token = "0x4002FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _centerStart;

			[Token(Token = "0x4002FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _centerEnd;

			[Token(Token = "0x4002FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			internal SplineSampleModifier modifier;

			[Token(Token = "0x4002FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationCurve interpolation;

			[Token(Token = "0x4002FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float blend;

			[Token(Token = "0x1700073D")]
			public double start
			{
				[Token(Token = "0x6003470")]
				[Address(RVA = "0x19A2268", Offset = "0x19A2268", VA = "0x19A2268")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6003471")]
				[Address(RVA = "0x19A2270", Offset = "0x19A2270", VA = "0x19A2270")]
				set
				{
				}
			}

			[Token(Token = "0x1700073E")]
			public double end
			{
				[Token(Token = "0x6003472")]
				[Address(RVA = "0x19A22A4", Offset = "0x19A22A4", VA = "0x19A22A4")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6003473")]
				[Address(RVA = "0x19A22AC", Offset = "0x19A22AC", VA = "0x19A22AC")]
				set
				{
				}
			}

			[Token(Token = "0x1700073F")]
			public double centerStart
			{
				[Token(Token = "0x6003474")]
				[Address(RVA = "0x19A22E0", Offset = "0x19A22E0", VA = "0x19A22E0")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6003475")]
				[Address(RVA = "0x19A22E8", Offset = "0x19A22E8", VA = "0x19A22E8")]
				set
				{
				}
			}

			[Token(Token = "0x17000740")]
			public double centerEnd
			{
				[Token(Token = "0x6003476")]
				[Address(RVA = "0x19A2328", Offset = "0x19A2328", VA = "0x19A2328")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6003477")]
				[Address(RVA = "0x19A2330", Offset = "0x19A2330", VA = "0x19A2330")]
				set
				{
				}
			}

			[Token(Token = "0x17000741")]
			public double globalCenterStart
			{
				[Token(Token = "0x6003478")]
				[Address(RVA = "0x19A2370", Offset = "0x19A2370", VA = "0x19A2370")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6003479")]
				[Address(RVA = "0x19A23D8", Offset = "0x19A23D8", VA = "0x19A23D8")]
				set
				{
				}
			}

			[Token(Token = "0x17000742")]
			public double globalCenterEnd
			{
				[Token(Token = "0x600347A")]
				[Address(RVA = "0x19A247C", Offset = "0x19A247C", VA = "0x19A247C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600347B")]
				[Address(RVA = "0x19A2484", Offset = "0x19A2484", VA = "0x19A2484")]
				set
				{
				}
			}

			[Token(Token = "0x17000743")]
			public double position
			{
				[Token(Token = "0x600347C")]
				[Address(RVA = "0x19A24D0", Offset = "0x19A24D0", VA = "0x19A24D0")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600347D")]
				[Address(RVA = "0x19A2558", Offset = "0x19A2558", VA = "0x19A2558")]
				set
				{
				}
			}

			[Token(Token = "0x600347E")]
			[Address(RVA = "0x19A25C0", Offset = "0x19A25C0", VA = "0x19A25C0")]
			internal Key(double f, double t, SplineSampleModifier modifier)
			{
			}

			[Token(Token = "0x600347F")]
			[Address(RVA = "0x19A2424", Offset = "0x19A2424", VA = "0x19A2424")]
			private double GlobalToLocalPercent(double t)
			{
				return default(double);
			}

			[Token(Token = "0x6003480")]
			[Address(RVA = "0x19A2378", Offset = "0x19A2378", VA = "0x19A2378")]
			private double LocalToGlobalPercent(double t)
			{
				return default(double);
			}

			[Token(Token = "0x6003481")]
			[Address(RVA = "0x19A2664", Offset = "0x19A2664", VA = "0x19A2664")]
			public float Evaluate(double t)
			{
				return default(float);
			}

			[Token(Token = "0x6003482")]
			[Address(RVA = "0x19A26FC", Offset = "0x19A26FC", VA = "0x19A26FC", Slot = "4")]
			public virtual Key Duplicate()
			{
				return null;
			}
		}

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float blend;

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x19A2118", Offset = "0x19A2118", VA = "0x19A2118", Slot = "4")]
		public virtual List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x19A217C", Offset = "0x19A217C", VA = "0x19A217C", Slot = "5")]
		public virtual void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x19A2214", Offset = "0x19A2214", VA = "0x19A2214", Slot = "6")]
		public virtual void Apply(SplineSample result)
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x19A2218", Offset = "0x19A2218", VA = "0x19A2218", Slot = "7")]
		public virtual void Apply(SplineSample source, SplineSample destination)
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x19A2258", Offset = "0x19A2258", VA = "0x19A2258")]
		public SplineSampleModifier()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public delegate void EmptySplineHandler();
	[Token(Token = "0x2000531")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA350AC", Offset = "0xA350AC")]
	[ExecuteInEditMode]
	public class SplineComputer : MonoBehaviour
	{
		[Token(Token = "0x200085C")]
		public enum Space
		{
			[Token(Token = "0x4002FF0")]
			World,
			[Token(Token = "0x4002FF1")]
			Local
		}

		[Token(Token = "0x200085D")]
		public enum EvaluateMode
		{
			[Token(Token = "0x4002FF3")]
			Cached,
			[Token(Token = "0x4002FF4")]
			Calculate
		}

		[Token(Token = "0x200085E")]
		public enum SampleMode
		{
			[Token(Token = "0x4002FF6")]
			Default,
			[Token(Token = "0x4002FF7")]
			Uniform,
			[Token(Token = "0x4002FF8")]
			Optimized
		}

		[Token(Token = "0x200085F")]
		public enum UpdateMode
		{
			[Token(Token = "0x4002FFA")]
			Update,
			[Token(Token = "0x4002FFB")]
			FixedUpdate,
			[Token(Token = "0x4002FFC")]
			LateUpdate,
			[Token(Token = "0x4002FFD")]
			AllUpdate,
			[Token(Token = "0x4002FFE")]
			None
		}

		[Serializable]
		[Token(Token = "0x2000860")]
		internal class NodeLink
		{
			[Token(Token = "0x4002FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			internal Node node;

			[Token(Token = "0x4003000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			internal int pointIndex;

			[Token(Token = "0x6003483")]
			[Address(RVA = "0x198FBD8", Offset = "0x198FBD8", VA = "0x198FBD8")]
			internal List<Node.Connection> GetConnections(SplineComputer exclude)
			{
				return null;
			}

			[Token(Token = "0x6003484")]
			[Address(RVA = "0x19905D4", Offset = "0x19905D4", VA = "0x19905D4")]
			public NodeLink()
			{
			}
		}

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool multithreaded;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool rebuildOnAwake;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public UpdateMode updateMode;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public TriggerGroup[] triggerGroups;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Spline spline;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private SplineSample[] _rawSamples;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private SplineSample[] _transformedSamples;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private SampleCollection sampleCollection;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private double[] originalSamplePercents;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool[] sampleFlter;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[SerializeField]
		private int _sampleCount;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		[SerializeField]
		private bool _is2D;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[HideInInspector]
		[SerializeField]
		private bool hasSamples;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		private bool[] pointsDirty;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA49800", Offset = "0xA49800")]
		private float _optimizeAngleThreshold;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		[SerializeField]
		private Space _space;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private SampleMode _sampleMode;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		[SerializeField]
		private SplineUser[] _subscribers;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA49900", Offset = "0xA49900")]
		private NodeLink[] nodes;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool rebuildPending;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _trsCheck;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform _trs;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Matrix4x4 transformMatrix;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Matrix4x4 inverseTransformMatrix;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool queueResample;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool queueRebuild;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 lastScale;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool uniformScale;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Quaternion lastRotation;

		[Token(Token = "0x17000335")]
		public Space space
		{
			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x198AAE0", Offset = "0x198AAE0", VA = "0x198AAE0")]
			get
			{
				return default(Space);
			}
			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x198AAE8", Offset = "0x198AAE8", VA = "0x198AAE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000336")]
		public Spline.Type type
		{
			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x198AE58", Offset = "0x198AE58", VA = "0x198AE58")]
			get
			{
				return default(Spline.Type);
			}
			[Token(Token = "0x60024B4")]
			[Address(RVA = "0x1981F58", Offset = "0x1981F58", VA = "0x1981F58")]
			set
			{
			}
		}

		[Token(Token = "0x17000337")]
		public bool linearAverageDirection
		{
			[Token(Token = "0x60024B5")]
			[Address(RVA = "0x198AE74", Offset = "0x198AE74", VA = "0x198AE74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x198AE90", Offset = "0x198AE90", VA = "0x198AE90")]
			set
			{
			}
		}

		[Token(Token = "0x17000338")]
		public bool is2D
		{
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x198AEE8", Offset = "0x198AEE8", VA = "0x198AEE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x198AEF0", Offset = "0x198AEF0", VA = "0x198AEF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000339")]
		public int sampleRate
		{
			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x198AF40", Offset = "0x198AF40", VA = "0x198AF40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60024BA")]
			[Address(RVA = "0x198AF5C", Offset = "0x198AF5C", VA = "0x198AF5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700033A")]
		public float optimizeAngleThreshold
		{
			[Token(Token = "0x60024BB")]
			[Address(RVA = "0x198AFB4", Offset = "0x198AFB4", VA = "0x198AFB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x198AFBC", Offset = "0x198AFBC", VA = "0x198AFBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700033B")]
		public SampleMode sampleMode
		{
			[Token(Token = "0x60024BD")]
			[Address(RVA = "0x198B018", Offset = "0x198B018", VA = "0x198B018")]
			get
			{
				return default(SampleMode);
			}
			[Token(Token = "0x60024BE")]
			[Address(RVA = "0x198B020", Offset = "0x198B020", VA = "0x198B020")]
			set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		public AnimationCurve customValueInterpolation
		{
			[Token(Token = "0x60024BF")]
			[Address(RVA = "0x198B060", Offset = "0x198B060", VA = "0x198B060")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024C0")]
			[Address(RVA = "0x198B07C", Offset = "0x198B07C", VA = "0x198B07C")]
			set
			{
			}
		}

		[Token(Token = "0x1700033D")]
		public AnimationCurve customNormalInterpolation
		{
			[Token(Token = "0x60024C1")]
			[Address(RVA = "0x198B0A8", Offset = "0x198B0A8", VA = "0x198B0A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x198B0C4", Offset = "0x198B0C4", VA = "0x198B0C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public int iterations
		{
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x198B0F0", Offset = "0x198B0F0", VA = "0x198B0F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700033F")]
		public double moveStep
		{
			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x198B108", Offset = "0x198B108", VA = "0x198B108")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000340")]
		public bool isClosed
		{
			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x1981FA4", Offset = "0x1981FA4", VA = "0x1981FA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000341")]
		public int pointCount
		{
			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x198B120", Offset = "0x198B120", VA = "0x198B120")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000342")]
		public SplineSample[] samples
		{
			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x198B148", Offset = "0x198B148", VA = "0x198B148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		public int sampleCount
		{
			[Token(Token = "0x60024C8")]
			[Address(RVA = "0x198B164", Offset = "0x198B164", VA = "0x198B164")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000344")]
		public SplineSample[] rawSamples
		{
			[Token(Token = "0x60024C9")]
			[Address(RVA = "0x198B16C", Offset = "0x198B16C", VA = "0x198B16C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		public Vector3 position
		{
			[Token(Token = "0x60024CA")]
			[Address(RVA = "0x198B174", Offset = "0x198B174", VA = "0x198B174")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000346")]
		public Quaternion rotation
		{
			[Token(Token = "0x60024CB")]
			[Address(RVA = "0x198B184", Offset = "0x198B184", VA = "0x198B184")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000347")]
		public Vector3 scale
		{
			[Token(Token = "0x60024CC")]
			[Address(RVA = "0x198B198", Offset = "0x198B198", VA = "0x198B198")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000348")]
		public int subscriberCount
		{
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x198B1A8", Offset = "0x198B1A8", VA = "0x198B1A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000349")]
		public Transform trs
		{
			[Token(Token = "0x60024CE")]
			[Address(RVA = "0x198B1C4", Offset = "0x198B1C4", VA = "0x198B1C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		private bool useMultithreading
		{
			[Token(Token = "0x60024D1")]
			[Address(RVA = "0x198B350", Offset = "0x198B350", VA = "0x198B350")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000022")]
		public event EmptySplineHandler onRebuild
		{
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0x198B200", Offset = "0x198B200", VA = "0x198B200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A57C", Offset = "0xA5A57C")]
			add
			{
			}
			[Token(Token = "0x60024D0")]
			[Address(RVA = "0x198B2A8", Offset = "0x198B2A8", VA = "0x198B2A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A58C", Offset = "0xA5A58C")]
			remove
			{
			}
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x198B358", Offset = "0x198B358", VA = "0x198B358")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x198B5F8", Offset = "0x198B5F8", VA = "0x198B5F8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x198B7E4", Offset = "0x198B7E4", VA = "0x198B7E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x198B7FC", Offset = "0x198B7FC", VA = "0x198B7FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x198B610", Offset = "0x198B610", VA = "0x198B610")]
		private void RunUpdate()
		{
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x198C7A8", Offset = "0x198C7A8", VA = "0x198C7A8")]
		private void TransformSamplesThreaded()
		{
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x198C7B0", Offset = "0x198C7B0", VA = "0x198C7B0")]
		private void CalculateAndTransformSamples()
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x198B814", Offset = "0x198B814", VA = "0x198B814")]
		private bool TransformHasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x198C7D8", Offset = "0x198C7D8", VA = "0x198C7D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x198C7F8", Offset = "0x198C7F8", VA = "0x198C7F8")]
		public void GetSamples(SampleCollection collection)
		{
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x198B3D8", Offset = "0x198B3D8", VA = "0x198B3D8")]
		public void ResampleTransform()
		{
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x198C838", Offset = "0x198C838", VA = "0x198C838")]
		public void Subscribe(SplineUser input)
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x198C990", Offset = "0x198C990", VA = "0x198C990")]
		public void Unsubscribe(SplineUser input)
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x198C8B8", Offset = "0x198C8B8", VA = "0x198C8B8")]
		public bool IsSubscribed(SplineUser user)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x198CA84", Offset = "0x198CA84", VA = "0x198CA84")]
		public SplineUser[] GetSubscribers()
		{
			return null;
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x198AC34", Offset = "0x198AC34", VA = "0x198AC34")]
		public SplinePoint[] GetPoints(Space getSpace = Space.World)
		{
			return null;
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x198CB20", Offset = "0x198CB20", VA = "0x198CB20")]
		public SplinePoint GetPoint(int index, Space getSpace = Space.World)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x198CCDC", Offset = "0x198CCDC", VA = "0x198CCDC")]
		public Vector3 GetPointPosition(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x198CD70", Offset = "0x198CD70", VA = "0x198CD70")]
		public Vector3 GetPointNormal(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x198CE08", Offset = "0x198CE08", VA = "0x198CE08")]
		public Vector3 GetPointTangent(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x198CE9C", Offset = "0x198CE9C", VA = "0x198CE9C")]
		public Vector3 GetPointTangent2(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x198CF30", Offset = "0x198CF30", VA = "0x198CF30")]
		public float GetPointSize(int index, Space getSpace = Space.World)
		{
			return default(float);
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x198CF78", Offset = "0x198CF78", VA = "0x198CF78")]
		public Color GetPointColor(int index, Space getSpace = Space.World)
		{
			return default(Color);
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x198CFC4", Offset = "0x198CFC4", VA = "0x198CFC4")]
		private void Make2D(ref SplinePoint point)
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x1981B30", Offset = "0x1981B30", VA = "0x1981B30")]
		public void SetPoints(SplinePoint[] points, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x198D358", Offset = "0x198D358", VA = "0x198D358")]
		public void SetPointPosition(int index, Vector3 pos, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x198D6B8", Offset = "0x198D6B8", VA = "0x198D6B8")]
		public void SetPointTangents(int index, Vector3 tan1, Vector3 tan2, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x198D9F0", Offset = "0x198D9F0", VA = "0x198D9F0")]
		public void SetPointNormal(int index, Vector3 nrm, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x198DBF4", Offset = "0x198DBF4", VA = "0x198DBF4")]
		public void SetPointSize(int index, float size)
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x198DD0C", Offset = "0x198DD0C", VA = "0x198DD0C")]
		public void SetPointColor(int index, Color color)
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x198DE54", Offset = "0x198DE54", VA = "0x198DE54")]
		public void SetPoint(int index, SplinePoint point, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x198D528", Offset = "0x198D528", VA = "0x198D528")]
		private void AppendPoints(int count)
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x198E054", Offset = "0x198E054", VA = "0x198E054")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x198E18C", Offset = "0x198E18C", VA = "0x198E18C")]
		public int PercentToPointIndex(double percent, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(int);
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x198E2D0", Offset = "0x198E2D0", VA = "0x198E2D0")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x198E2D8", Offset = "0x198E2D8", VA = "0x198E2D8")]
		public Vector3 EvaluatePosition(double percent, EvaluateMode mode = EvaluateMode.Cached)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x198E328", Offset = "0x198E328", VA = "0x198E328")]
		public Vector3 EvaluatePosition(int pointIndex, EvaluateMode mode = EvaluateMode.Cached)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x198E354", Offset = "0x198E354", VA = "0x198E354")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x198E35C", Offset = "0x198E35C", VA = "0x198E35C")]
		public SplineSample Evaluate(double percent, EvaluateMode mode = EvaluateMode.Cached)
		{
			return null;
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x198E444", Offset = "0x198E444", VA = "0x198E444")]
		public SplineSample Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x198E4C0", Offset = "0x198E4C0", VA = "0x198E4C0")]
		public void Evaluate(int pointIndex, SplineSample result)
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x198E4F4", Offset = "0x198E4F4", VA = "0x198E4F4")]
		public void Evaluate(double percent, SplineSample result)
		{
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x198E3E8", Offset = "0x198E3E8", VA = "0x198E3E8")]
		public void Evaluate(double percent, SplineSample result, EvaluateMode mode = EvaluateMode.Cached)
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x198E5D8", Offset = "0x198E5D8", VA = "0x198E5D8")]
		public void Evaluate(ref SplineSample[] results, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x198E5F0", Offset = "0x198E5F0", VA = "0x198E5F0")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x198E608", Offset = "0x198E608", VA = "0x198E608")]
		public double Travel(double start, float distance, out float moved, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x198E634", Offset = "0x198E634", VA = "0x198E634")]
		public double Travel(double start, float distance, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x198E65C", Offset = "0x198E65C", VA = "0x198E65C")]
		public void Project(SplineSample result, Vector3 position, double from = 0.0, double to = 1.0, EvaluateMode mode = EvaluateMode.Cached, int subdivisions = 4)
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x198E754", Offset = "0x198E754", VA = "0x198E754")]
		public SplineSample Project(Vector3 point, double from = 0.0, double to = 1.0)
		{
			return null;
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x198E808", Offset = "0x198E808", VA = "0x198E808")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x198E50C", Offset = "0x198E50C", VA = "0x198E50C")]
		private void TransformResult(SplineSample result)
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x198AE20", Offset = "0x198AE20", VA = "0x198AE20")]
		public void Rebuild(bool forceUpdateAll = false)
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x198B398", Offset = "0x198B398", VA = "0x198B398")]
		public void RebuildImmediate(bool calculateSamples = true, bool forceUpdateAll = false)
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x198BC98", Offset = "0x198BC98", VA = "0x198BC98")]
		private void RebuildUsers()
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x198E830", Offset = "0x198E830", VA = "0x198E830")]
		private void UnsetPointsDirty()
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x198C6E8", Offset = "0x198C6E8", VA = "0x198C6E8")]
		private void SetPointsDirty()
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x198D058", Offset = "0x198D058", VA = "0x198D058")]
		private void SetDirty(int index)
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x198BE74", Offset = "0x198BE74", VA = "0x198BE74")]
		private void CalculateSamples()
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x198C260", Offset = "0x198C260", VA = "0x198C260")]
		private void TransformSamples(bool forceTransformAll = false)
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x198ECCC", Offset = "0x198ECCC", VA = "0x198ECCC")]
		private void OptimizeSamples()
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x198E8EC", Offset = "0x198E8EC", VA = "0x198E8EC")]
		private bool IsDirtyBezier(double samplePercent)
		{
			return default(bool);
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x198EA94", Offset = "0x198EA94", VA = "0x198EA94")]
		private bool IsDirtyHermite(double samplePercent)
		{
			return default(bool);
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x1981FE4", Offset = "0x1981FE4", VA = "0x1981FE4")]
		public void Break()
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x198F048", Offset = "0x198F048", VA = "0x198F048")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x1981E3C", Offset = "0x1981E3C", VA = "0x1981E3C")]
		public void Close()
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x198F0D0", Offset = "0x198F0D0", VA = "0x198F0D0")]
		public void CatToBezierTangents()
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x198F110", Offset = "0x198F110", VA = "0x198F110")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x198F384", Offset = "0x198F384", VA = "0x198F384")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x198F78C", Offset = "0x198F78C", VA = "0x198F78C")]
		public void CheckTriggers(double start, double end, [Optional] SplineUser user)
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x198F814", Offset = "0x198F814", VA = "0x198F814")]
		public void CheckTriggers(int group, double start, double end)
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x198F940", Offset = "0x198F940", VA = "0x198F940")]
		public void ResetTriggers()
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x198F9AC", Offset = "0x198F9AC", VA = "0x198F9AC")]
		public void ResetTriggers(int group)
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x198FAFC", Offset = "0x198FAFC", VA = "0x198FAFC")]
		public List<Node.Connection> GetJunctions(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x198FD10", Offset = "0x198FD10", VA = "0x198FD10")]
		public Dictionary<int, List<Node.Connection>> GetJunctions(double start = 0.0, double end = 1.0)
		{
			return null;
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x198FF60", Offset = "0x198FF60", VA = "0x198FF60")]
		public void ConnectNode(Node node, int pointIndex)
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x19904F0", Offset = "0x19904F0", VA = "0x19904F0")]
		public void DisconnectNode(int pointIndex)
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x1990458", Offset = "0x1990458", VA = "0x1990458")]
		private void AddNodeLink(Node node, int pointIndex)
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x19905DC", Offset = "0x19905DC", VA = "0x19905DC")]
		public Dictionary<int, Node> GetNodes(double start = 0.0, double end = 1.0)
		{
			return null;
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x1990820", Offset = "0x1990820", VA = "0x1990820")]
		public Node GetNode(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x19908B0", Offset = "0x19908B0", VA = "0x19908B0")]
		public void TransferNode(int pointIndex, int newPointIndex)
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x1990AAC", Offset = "0x1990AAC", VA = "0x1990AAC")]
		public void ShiftNodes(int startIndex, int endIndex, int shift)
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x1990BD4", Offset = "0x1990BD4", VA = "0x1990BD4")]
		public void GetConnectedComputers(List<SplineComputer> computers, List<int> connectionIndices, List<int> connectedIndices, double percent, Spline.Direction direction, bool includeEqual)
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x1990EF8", Offset = "0x1990EF8", VA = "0x1990EF8")]
		public List<SplineComputer> GetConnectedComputers()
		{
			return null;
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x198E2B8", Offset = "0x198E2B8", VA = "0x198E2B8")]
		public void GetSamplingValues(double percent, out int index, out double lerp)
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x1990FA8", Offset = "0x1990FA8", VA = "0x1990FA8")]
		private void GetConnectedComputers(ref List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x1991254", Offset = "0x1991254", VA = "0x1991254")]
		private void RemoveNodeLinkAt(int index)
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x198D5E8", Offset = "0x198D5E8", VA = "0x198D5E8")]
		private void SetNodeForPoint(int index, SplinePoint worldPoint)
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x198D0F4", Offset = "0x198D0F4", VA = "0x198D0F4")]
		private void UpdateConnectedNodes(SplinePoint[] worldPoints)
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x198BA38", Offset = "0x198BA38", VA = "0x198BA38")]
		private void UpdateConnectedNodes()
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x198CB08", Offset = "0x198CB08", VA = "0x198CB08")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x198D040", Offset = "0x198D040", VA = "0x198D040")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x198CB14", Offset = "0x198CB14", VA = "0x198CB14")]
		public Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x198D04C", Offset = "0x198D04C", VA = "0x198D04C")]
		public Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x1991380", Offset = "0x1991380", VA = "0x1991380")]
		public SplineComputer()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public delegate void SplineReachHandler();
	[Token(Token = "0x2000533")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA350F8", Offset = "0xA350F8")]
	public class SplineFollower : SplineTracer
	{
		[Token(Token = "0x2000861")]
		public enum FollowMode
		{
			[Token(Token = "0x4003002")]
			Uniform,
			[Token(Token = "0x4003003")]
			Time
		}

		[Token(Token = "0x2000862")]
		public enum Wrap
		{
			[Token(Token = "0x4003005")]
			Default,
			[Token(Token = "0x4003006")]
			Loop,
			[Token(Token = "0x4003007")]
			PingPong
		}

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		public FollowMode followMode;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public bool autoStartPosition;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		[HideInInspector]
		public bool follow;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		[HideInInspector]
		public bool preserveUniformSpeedWithOffset;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private float _followSpeed;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[HideInInspector]
		private float _followDuration;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA49A4C", Offset = "0xA49A4C")]
		private double _startPosition;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private double lastClippedPercent;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool followStarted;

		[Token(Token = "0x1700034B")]
		public float followSpeed
		{
			[Token(Token = "0x6002534")]
			[Address(RVA = "0x1991544", Offset = "0x1991544", VA = "0x1991544")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002535")]
			[Address(RVA = "0x199154C", Offset = "0x199154C", VA = "0x199154C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		public double startPosition
		{
			[Token(Token = "0x6002536")]
			[Address(RVA = "0x1991568", Offset = "0x1991568", VA = "0x1991568")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002537")]
			[Address(RVA = "0x1991570", Offset = "0x1991570", VA = "0x1991570")]
			set
			{
			}
		}

		[Token(Token = "0x1700034D")]
		public float followDuration
		{
			[Token(Token = "0x6002538")]
			[Address(RVA = "0x19915D0", Offset = "0x19915D0", VA = "0x19915D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002539")]
			[Address(RVA = "0x19915D8", Offset = "0x19915D8", VA = "0x19915D8")]
			set
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<double> onEndReached
		{
			[Token(Token = "0x600253A")]
			[Address(RVA = "0x19915F4", Offset = "0x19915F4", VA = "0x19915F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A59C", Offset = "0xA5A59C")]
			add
			{
			}
			[Token(Token = "0x600253B")]
			[Address(RVA = "0x199169C", Offset = "0x199169C", VA = "0x199169C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A5AC", Offset = "0xA5A5AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<double> onBeginningReached
		{
			[Token(Token = "0x600253C")]
			[Address(RVA = "0x1991744", Offset = "0x1991744", VA = "0x1991744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A5BC", Offset = "0xA5A5BC")]
			add
			{
			}
			[Token(Token = "0x600253D")]
			[Address(RVA = "0x19917EC", Offset = "0x19917EC", VA = "0x19917EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A5CC", Offset = "0xA5A5CC")]
			remove
			{
			}
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x1991894", Offset = "0x1991894", VA = "0x1991894", Slot = "20")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x1991930", Offset = "0x1991930", VA = "0x1991930", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x1991AB8", Offset = "0x1991AB8", VA = "0x1991AB8", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x199196C", Offset = "0x199196C", VA = "0x199196C")]
		private void Follow()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x1992198", Offset = "0x1992198", VA = "0x1992198")]
		public void Restart(double startPosition = 0.0)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x19921B4", Offset = "0x19921B4", VA = "0x19921B4", Slot = "21")]
		public override void SetPercent(double percent, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x19921F0", Offset = "0x19921F0", VA = "0x19921F0", Slot = "22")]
		public override void SetDistance(float distance, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x1991E50", Offset = "0x1991E50", VA = "0x1991E50")]
		public void Move(double percent)
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x1991B1C", Offset = "0x1991B1C", VA = "0x1991B1C")]
		public void Move(float distance)
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x1992280", Offset = "0x1992280", VA = "0x1992280", Slot = "26")]
		protected virtual double DoTravel(double start, float distance, out float moved)
		{
			return default(double);
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x199239C", Offset = "0x199239C", VA = "0x199239C")]
		public SplineFollower()
		{
		}
	}
	[Token(Token = "0x2000534")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA35130", Offset = "0xA35130")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA35130", Offset = "0xA35130")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA35130", Offset = "0xA35130")]
	public class SplineMesh : MeshGenerator
	{
		[Serializable]
		[Token(Token = "0x2000863")]
		public class Channel
		{
			[Token(Token = "0x2000894")]
			public delegate float FloatHandler(double percent);

			[Token(Token = "0x2000895")]
			public delegate Vector2 Vector2Handler(double percent);

			[Token(Token = "0x2000896")]
			public delegate Vector3 Vector3Handler(double percent);

			[Token(Token = "0x2000897")]
			public delegate Quaternion QuaternionHandler(double percent);

			[Token(Token = "0x2000898")]
			public enum Type
			{
				[Token(Token = "0x40030C3")]
				Extrude,
				[Token(Token = "0x40030C4")]
				Place
			}

			[Token(Token = "0x2000899")]
			public enum UVOverride
			{
				[Token(Token = "0x40030C6")]
				None,
				[Token(Token = "0x40030C7")]
				ClampU,
				[Token(Token = "0x40030C8")]
				ClampV,
				[Token(Token = "0x40030C9")]
				UniformU,
				[Token(Token = "0x40030CA")]
				UniformV
			}

			[Serializable]
			[Token(Token = "0x200089A")]
			public class MeshDefinition
			{
				[Token(Token = "0x20008A0")]
				public enum MirrorMethod
				{
					[Token(Token = "0x40030F2")]
					None,
					[Token(Token = "0x40030F3")]
					X,
					[Token(Token = "0x40030F4")]
					Y,
					[Token(Token = "0x40030F5")]
					Z
				}

				[Serializable]
				[Token(Token = "0x20008A1")]
				public class Submesh
				{
					[Token(Token = "0x40030F6")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public int[] triangles;

					[Token(Token = "0x6003556")]
					[Address(RVA = "0x199B40C", Offset = "0x199B40C", VA = "0x199B40C")]
					public Submesh()
					{
					}

					[Token(Token = "0x6003557")]
					[Address(RVA = "0x1998BE8", Offset = "0x1998BE8", VA = "0x1998BE8")]
					public Submesh(int[] input)
					{
					}
				}

				[Serializable]
				[Token(Token = "0x20008A2")]
				public class VertexGroup
				{
					[Token(Token = "0x40030F7")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public float value;

					[Token(Token = "0x40030F8")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					public double percent;

					[Token(Token = "0x40030F9")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
					public int[] ids;

					[Token(Token = "0x6003558")]
					[Address(RVA = "0x199B30C", Offset = "0x199B30C", VA = "0x199B30C")]
					public VertexGroup(float val, double perc, int[] vertIds)
					{
					}

					[Token(Token = "0x6003559")]
					[Address(RVA = "0x199B350", Offset = "0x199B350", VA = "0x199B350")]
					public void AddId(int id)
					{
					}
				}

				[Token(Token = "0x40030CB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[SerializeField]
				[HideInInspector]
				internal Vector3[] vertices;

				[Token(Token = "0x40030CC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[SerializeField]
				[HideInInspector]
				internal Vector3[] normals;

				[Token(Token = "0x40030CD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				[SerializeField]
				[HideInInspector]
				internal Vector4[] tangents;

				[Token(Token = "0x40030CE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				[SerializeField]
				[HideInInspector]
				internal Color[] colors;

				[Token(Token = "0x40030CF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv;

				[Token(Token = "0x40030D0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv2;

				[Token(Token = "0x40030D1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv3;

				[Token(Token = "0x40030D2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv4;

				[Token(Token = "0x40030D3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				[SerializeField]
				[HideInInspector]
				internal int[] triangles;

				[Token(Token = "0x40030D4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				[SerializeField]
				[HideInInspector]
				internal List<Submesh> subMeshes;

				[Token(Token = "0x40030D5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				[SerializeField]
				[HideInInspector]
				internal TS_Bounds bounds;

				[Token(Token = "0x40030D6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				[SerializeField]
				[HideInInspector]
				internal List<VertexGroup> vertexGroups;

				[Token(Token = "0x40030D7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				[SerializeField]
				[HideInInspector]
				private Mesh _mesh;

				[Token(Token = "0x40030D8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _rotation;

				[Token(Token = "0x40030D9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _offset;

				[Token(Token = "0x40030DA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _scale;

				[Token(Token = "0x40030DB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _uvScale;

				[Token(Token = "0x40030DC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _uvOffset;

				[Token(Token = "0x40030DD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
				[SerializeField]
				[HideInInspector]
				private float _uvRotation;

				[Token(Token = "0x40030DE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
				[SerializeField]
				[HideInInspector]
				private MirrorMethod _mirror;

				[Token(Token = "0x40030DF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
				[SerializeField]
				[HideInInspector]
				private float _vertexGroupingMargin;

				[Token(Token = "0x40030E0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
				[SerializeField]
				[HideInInspector]
				private bool _removeInnerFaces;

				[Token(Token = "0x40030E1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
				[SerializeField]
				[HideInInspector]
				private bool _flipFaces;

				[Token(Token = "0x40030E2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
				[SerializeField]
				[HideInInspector]
				private bool _doubleSided;

				[Token(Token = "0x17000768")]
				public Mesh mesh
				{
					[Token(Token = "0x600352C")]
					[Address(RVA = "0x1997644", Offset = "0x1997644", VA = "0x1997644")]
					get
					{
						return null;
					}
					[Token(Token = "0x600352D")]
					[Address(RVA = "0x199764C", Offset = "0x199764C", VA = "0x199764C")]
					set
					{
					}
				}

				[Token(Token = "0x17000769")]
				public Vector3 rotation
				{
					[Token(Token = "0x600352E")]
					[Address(RVA = "0x1997EC8", Offset = "0x1997EC8", VA = "0x1997EC8")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x600352F")]
					[Address(RVA = "0x1997ED4", Offset = "0x1997ED4", VA = "0x1997ED4")]
					set
					{
					}
				}

				[Token(Token = "0x1700076A")]
				public Vector3 offset
				{
					[Token(Token = "0x6003530")]
					[Address(RVA = "0x1997FA8", Offset = "0x1997FA8", VA = "0x1997FA8")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6003531")]
					[Address(RVA = "0x1997FB4", Offset = "0x1997FB4", VA = "0x1997FB4")]
					set
					{
					}
				}

				[Token(Token = "0x1700076B")]
				public Vector3 scale
				{
					[Token(Token = "0x6003532")]
					[Address(RVA = "0x1998088", Offset = "0x1998088", VA = "0x1998088")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6003533")]
					[Address(RVA = "0x1998094", Offset = "0x1998094", VA = "0x1998094")]
					set
					{
					}
				}

				[Token(Token = "0x1700076C")]
				public Vector2 uvScale
				{
					[Token(Token = "0x6003534")]
					[Address(RVA = "0x1998168", Offset = "0x1998168", VA = "0x1998168")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6003535")]
					[Address(RVA = "0x1998170", Offset = "0x1998170", VA = "0x1998170")]
					set
					{
					}
				}

				[Token(Token = "0x1700076D")]
				public Vector2 uvOffset
				{
					[Token(Token = "0x6003536")]
					[Address(RVA = "0x1998224", Offset = "0x1998224", VA = "0x1998224")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6003537")]
					[Address(RVA = "0x199822C", Offset = "0x199822C", VA = "0x199822C")]
					set
					{
					}
				}

				[Token(Token = "0x1700076E")]
				public float uvRotation
				{
					[Token(Token = "0x6003538")]
					[Address(RVA = "0x19982E0", Offset = "0x19982E0", VA = "0x19982E0")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x6003539")]
					[Address(RVA = "0x19982E8", Offset = "0x19982E8", VA = "0x19982E8")]
					set
					{
					}
				}

				[Token(Token = "0x1700076F")]
				public float vertexGroupingMargin
				{
					[Token(Token = "0x600353A")]
					[Address(RVA = "0x1998300", Offset = "0x1998300", VA = "0x1998300")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x600353B")]
					[Address(RVA = "0x1998308", Offset = "0x1998308", VA = "0x1998308")]
					set
					{
					}
				}

				[Token(Token = "0x17000770")]
				public MirrorMethod mirror
				{
					[Token(Token = "0x600353C")]
					[Address(RVA = "0x1998320", Offset = "0x1998320", VA = "0x1998320")]
					get
					{
						return default(MirrorMethod);
					}
					[Token(Token = "0x600353D")]
					[Address(RVA = "0x1998328", Offset = "0x1998328", VA = "0x1998328")]
					set
					{
					}
				}

				[Token(Token = "0x17000771")]
				public bool removeInnerFaces
				{
					[Token(Token = "0x600353E")]
					[Address(RVA = "0x1998340", Offset = "0x1998340", VA = "0x1998340")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x600353F")]
					[Address(RVA = "0x1998348", Offset = "0x1998348", VA = "0x1998348")]
					set
					{
					}
				}

				[Token(Token = "0x17000772")]
				public bool flipFaces
				{
					[Token(Token = "0x6003540")]
					[Address(RVA = "0x199836C", Offset = "0x199836C", VA = "0x199836C")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6003541")]
					[Address(RVA = "0x1998374", Offset = "0x1998374", VA = "0x1998374")]
					set
					{
					}
				}

				[Token(Token = "0x17000773")]
				public bool doubleSided
				{
					[Token(Token = "0x6003542")]
					[Address(RVA = "0x1998398", Offset = "0x1998398", VA = "0x1998398")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6003543")]
					[Address(RVA = "0x19983A0", Offset = "0x19983A0", VA = "0x19983A0")]
					set
					{
					}
				}

				[Token(Token = "0x6003544")]
				[Address(RVA = "0x19983C4", Offset = "0x19983C4", VA = "0x19983C4")]
				internal MeshDefinition Copy()
				{
					return null;
				}

				[Token(Token = "0x6003545")]
				[Address(RVA = "0x199881C", Offset = "0x199881C", VA = "0x199881C")]
				public MeshDefinition(Mesh input)
				{
				}

				[Token(Token = "0x6003546")]
				[Address(RVA = "0x19976E8", Offset = "0x19976E8", VA = "0x19976E8")]
				public void Refresh()
				{
				}

				[Token(Token = "0x6003547")]
				[Address(RVA = "0x1999958", Offset = "0x1999958", VA = "0x1999958")]
				private void RemoveInnerFaces()
				{
				}

				[Token(Token = "0x6003548")]
				[Address(RVA = "0x1999264", Offset = "0x1999264", VA = "0x1999264")]
				private void FlipFaces()
				{
				}

				[Token(Token = "0x6003549")]
				[Address(RVA = "0x1999064", Offset = "0x1999064", VA = "0x1999064")]
				private void DoubleSided()
				{
				}

				[Token(Token = "0x600354A")]
				[Address(RVA = "0x199A300", Offset = "0x199A300", VA = "0x199A300")]
				public void Write(TS_Mesh target, int forceMaterialId = -1)
				{
				}

				[Token(Token = "0x600354B")]
				[Address(RVA = "0x1999800", Offset = "0x1999800", VA = "0x1999800")]
				private void CalculateBounds()
				{
				}

				[Token(Token = "0x600354C")]
				[Address(RVA = "0x1998C80", Offset = "0x1998C80", VA = "0x1998C80")]
				private void Mirror()
				{
				}

				[Token(Token = "0x600354D")]
				[Address(RVA = "0x1999378", Offset = "0x1999378", VA = "0x1999378")]
				private void TransformVertices()
				{
				}

				[Token(Token = "0x600354E")]
				[Address(RVA = "0x1999D84", Offset = "0x1999D84", VA = "0x1999D84")]
				private void GroupVertices()
				{
				}

				[Token(Token = "0x600354F")]
				[Address(RVA = "0x199B1F0", Offset = "0x199B1F0", VA = "0x199B1F0")]
				private int FindInsertIndex(Vector3 pos, float value)
				{
					return default(int);
				}

				[Token(Token = "0x6003550")]
				[Address(RVA = "0x199AADC", Offset = "0x199AADC", VA = "0x199AADC")]
				private void CalculateTangents()
				{
				}
			}

			[Token(Token = "0x4003008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4003009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private System.Random iterationRandom;

			[Token(Token = "0x400300A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			private int _iterationSeed;

			[Token(Token = "0x400300B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private int _offsetSeed;

			[Token(Token = "0x400300C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private System.Random offsetRandom;

			[Token(Token = "0x400300D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2Handler _offsetHandler;

			[Token(Token = "0x400300E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[HideInInspector]
			private int _rotationSeed;

			[Token(Token = "0x400300F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private System.Random rotationRandom;

			[Token(Token = "0x4003010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private QuaternionHandler _placeRotationHandler;

			[Token(Token = "0x4003011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FloatHandler _extrudeRotationHandler;

			[Token(Token = "0x4003012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			[HideInInspector]
			private int _scaleSeed;

			[Token(Token = "0x4003013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private System.Random scaleRandom;

			[Token(Token = "0x4003014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3Handler _scaleHandler;

			[Token(Token = "0x4003015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			internal SplineMesh owner;

			[Token(Token = "0x4003016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			[HideInInspector]
			private List<MeshDefinition> meshes;

			[Token(Token = "0x4003017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			[HideInInspector]
			private double _clipFrom;

			[Token(Token = "0x4003018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			[HideInInspector]
			private double _clipTo;

			[Token(Token = "0x4003019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOrder;

			[Token(Token = "0x400301A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[SerializeField]
			[HideInInspector]
			private UVOverride _overrideUVs;

			[Token(Token = "0x400301B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvScale;

			[Token(Token = "0x400301C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvOffset;

			[Token(Token = "0x400301D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			[HideInInspector]
			private bool _overrideNormal;

			[Token(Token = "0x400301E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _customNormal;

			[Token(Token = "0x400301F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			[HideInInspector]
			private Type _type;

			[Token(Token = "0x4003020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[SerializeField]
			[HideInInspector]
			private int _count;

			[Token(Token = "0x4003021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			[HideInInspector]
			private bool _autoCount;

			[Token(Token = "0x4003022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[SerializeField]
			[HideInInspector]
			private double _spacing;

			[Token(Token = "0x4003023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[SerializeField]
			[HideInInspector]
			private bool _randomRotation;

			[Token(Token = "0x4003024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _minRotation;

			[Token(Token = "0x4003025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _maxRotation;

			[Token(Token = "0x4003026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOffset;

			[Token(Token = "0x4003027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _minOffset;

			[Token(Token = "0x4003028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _maxOffset;

			[Token(Token = "0x4003029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			[SerializeField]
			[HideInInspector]
			private bool _randomScale;

			[Token(Token = "0x400302A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
			[SerializeField]
			[HideInInspector]
			private bool _uniformRandomScale;

			[Token(Token = "0x400302B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _minScale;

			[Token(Token = "0x400302C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _maxScale;

			[Token(Token = "0x400302D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
			private int iterator;

			[Token(Token = "0x400302E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			[SerializeField]
			[HideInInspector]
			private bool _overrideMaterialID;

			[Token(Token = "0x400302F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
			[SerializeField]
			[HideInInspector]
			private int _targetMaterialID;

			[Token(Token = "0x4003030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[SerializeField]
			[HideInInspector]
			protected MeshScaleModifier _scaleModifier;

			[Token(Token = "0x17000744")]
			public double clipFrom
			{
				[Token(Token = "0x6003485")]
				[Address(RVA = "0x19950B4", Offset = "0x19950B4", VA = "0x19950B4")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6003486")]
				[Address(RVA = "0x19950BC", Offset = "0x19950BC", VA = "0x19950BC")]
				set
				{
				}
			}

			[Token(Token = "0x17000745")]
			public double clipTo
			{
				[Token(Token = "0x6003487")]
				[Address(RVA = "0x199516C", Offset = "0x199516C", VA = "0x199516C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6003488")]
				[Address(RVA = "0x1995174", Offset = "0x1995174", VA = "0x1995174")]
				set
				{
				}
			}

			[Token(Token = "0x17000746")]
			public bool randomOffset
			{
				[Token(Token = "0x6003489")]
				[Address(RVA = "0x199518C", Offset = "0x199518C", VA = "0x199518C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600348A")]
				[Address(RVA = "0x1995194", Offset = "0x1995194", VA = "0x1995194")]
				set
				{
				}
			}

			[Token(Token = "0x17000747")]
			public Vector2Handler offsetHandler
			{
				[Token(Token = "0x600348B")]
				[Address(RVA = "0x19951B8", Offset = "0x19951B8", VA = "0x19951B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x600348C")]
				[Address(RVA = "0x19951C0", Offset = "0x19951C0", VA = "0x19951C0")]
				set
				{
				}
			}

			[Token(Token = "0x17000748")]
			public bool overrideMaterialID
			{
				[Token(Token = "0x600348D")]
				[Address(RVA = "0x199520C", Offset = "0x199520C", VA = "0x199520C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600348E")]
				[Address(RVA = "0x1995214", Offset = "0x1995214", VA = "0x1995214")]
				set
				{
				}
			}

			[Token(Token = "0x17000749")]
			public int targetMaterialID
			{
				[Token(Token = "0x600348F")]
				[Address(RVA = "0x1995238", Offset = "0x1995238", VA = "0x1995238")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6003490")]
				[Address(RVA = "0x1995240", Offset = "0x1995240", VA = "0x1995240")]
				set
				{
				}
			}

			[Token(Token = "0x1700074A")]
			public bool randomRotation
			{
				[Token(Token = "0x6003491")]
				[Address(RVA = "0x1995258", Offset = "0x1995258", VA = "0x1995258")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6003492")]
				[Address(RVA = "0x1995260", Offset = "0x1995260", VA = "0x1995260")]
				set
				{
				}
			}

			[Token(Token = "0x1700074B")]
			public QuaternionHandler placeRotationHandler
			{
				[Token(Token = "0x6003493")]
				[Address(RVA = "0x1995284", Offset = "0x1995284", VA = "0x1995284")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003494")]
				[Address(RVA = "0x199528C", Offset = "0x199528C", VA = "0x199528C")]
				set
				{
				}
			}

			[Token(Token = "0x1700074C")]
			public FloatHandler extrudeRotationHandler
			{
				[Token(Token = "0x6003495")]
				[Address(RVA = "0x19952D8", Offset = "0x19952D8", VA = "0x19952D8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003496")]
				[Address(RVA = "0x19952E0", Offset = "0x19952E0", VA = "0x19952E0")]
				set
				{
				}
			}

			[Token(Token = "0x1700074D")]
			public bool randomScale
			{
				[Token(Token = "0x6003497")]
				[Address(RVA = "0x199532C", Offset = "0x199532C", VA = "0x199532C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6003498")]
				[Address(RVA = "0x1995334", Offset = "0x1995334", VA = "0x1995334")]
				set
				{
				}
			}

			[Token(Token = "0x1700074E")]
			public Vector3Handler scaleHandler
			{
				[Token(Token = "0x6003499")]
				[Address(RVA = "0x1995358", Offset = "0x1995358", VA = "0x1995358")]
				get
				{
					return null;
				}
				[Token(Token = "0x600349A")]
				[Address(RVA = "0x1995360", Offset = "0x1995360", VA = "0x1995360")]
				set
				{
				}
			}

			[Token(Token = "0x1700074F")]
			public bool uniformRandomScale
			{
				[Token(Token = "0x600349B")]
				[Address(RVA = "0x19953AC", Offset = "0x19953AC", VA = "0x19953AC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600349C")]
				[Address(RVA = "0x19953B4", Offset = "0x19953B4", VA = "0x19953B4")]
				set
				{
				}
			}

			[Token(Token = "0x17000750")]
			public int offsetSeed
			{
				[Token(Token = "0x600349D")]
				[Address(RVA = "0x19953D8", Offset = "0x19953D8", VA = "0x19953D8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600349E")]
				[Address(RVA = "0x19953E0", Offset = "0x19953E0", VA = "0x19953E0")]
				set
				{
				}
			}

			[Token(Token = "0x17000751")]
			public int rotationSeed
			{
				[Token(Token = "0x600349F")]
				[Address(RVA = "0x19953F8", Offset = "0x19953F8", VA = "0x19953F8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60034A0")]
				[Address(RVA = "0x1995400", Offset = "0x1995400", VA = "0x1995400")]
				set
				{
				}
			}

			[Token(Token = "0x17000752")]
			public int scaleSeed
			{
				[Token(Token = "0x60034A1")]
				[Address(RVA = "0x1995418", Offset = "0x1995418", VA = "0x1995418")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60034A2")]
				[Address(RVA = "0x1995420", Offset = "0x1995420", VA = "0x1995420")]
				set
				{
				}
			}

			[Token(Token = "0x17000753")]
			public double spacing
			{
				[Token(Token = "0x60034A3")]
				[Address(RVA = "0x1995438", Offset = "0x1995438", VA = "0x1995438")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x60034A4")]
				[Address(RVA = "0x1995440", Offset = "0x1995440", VA = "0x1995440")]
				set
				{
				}
			}

			[Token(Token = "0x17000754")]
			public Vector2 minOffset
			{
				[Token(Token = "0x60034A5")]
				[Address(RVA = "0x1995458", Offset = "0x1995458", VA = "0x1995458")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x60034A6")]
				[Address(RVA = "0x1995460", Offset = "0x1995460", VA = "0x1995460")]
				set
				{
				}
			}

			[Token(Token = "0x17000755")]
			public Vector2 maxOffset
			{
				[Token(Token = "0x60034A7")]
				[Address(RVA = "0x1995514", Offset = "0x1995514", VA = "0x1995514")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x60034A8")]
				[Address(RVA = "0x199551C", Offset = "0x199551C", VA = "0x199551C")]
				set
				{
				}
			}

			[Token(Token = "0x17000756")]
			public Vector3 minRotation
			{
				[Token(Token = "0x60034A9")]
				[Address(RVA = "0x19955D0", Offset = "0x19955D0", VA = "0x19955D0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60034AA")]
				[Address(RVA = "0x19955DC", Offset = "0x19955DC", VA = "0x19955DC")]
				set
				{
				}
			}

			[Token(Token = "0x17000757")]
			public Vector3 maxRotation
			{
				[Token(Token = "0x60034AB")]
				[Address(RVA = "0x19956B0", Offset = "0x19956B0", VA = "0x19956B0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60034AC")]
				[Address(RVA = "0x19956BC", Offset = "0x19956BC", VA = "0x19956BC")]
				set
				{
				}
			}

			[Token(Token = "0x17000758")]
			public Vector3 minScale
			{
				[Token(Token = "0x60034AD")]
				[Address(RVA = "0x1995790", Offset = "0x1995790", VA = "0x1995790")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60034AE")]
				[Address(RVA = "0x19957A0", Offset = "0x19957A0", VA = "0x19957A0")]
				set
				{
				}
			}

			[Token(Token = "0x17000759")]
			public Vector3 maxScale
			{
				[Token(Token = "0x60034AF")]
				[Address(RVA = "0x199587C", Offset = "0x199587C", VA = "0x199587C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60034B0")]
				[Address(RVA = "0x199588C", Offset = "0x199588C", VA = "0x199588C")]
				set
				{
				}
			}

			[Token(Token = "0x1700075A")]
			public Type type
			{
				[Token(Token = "0x60034B1")]
				[Address(RVA = "0x1995968", Offset = "0x1995968", VA = "0x1995968")]
				get
				{
					return default(Type);
				}
				[Token(Token = "0x60034B2")]
				[Address(RVA = "0x1995970", Offset = "0x1995970", VA = "0x1995970")]
				set
				{
				}
			}

			[Token(Token = "0x1700075B")]
			public bool randomOrder
			{
				[Token(Token = "0x60034B3")]
				[Address(RVA = "0x1995988", Offset = "0x1995988", VA = "0x1995988")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60034B4")]
				[Address(RVA = "0x1995990", Offset = "0x1995990", VA = "0x1995990")]
				set
				{
				}
			}

			[Token(Token = "0x1700075C")]
			public int randomSeed
			{
				[Token(Token = "0x60034B5")]
				[Address(RVA = "0x19959B4", Offset = "0x19959B4", VA = "0x19959B4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60034B6")]
				[Address(RVA = "0x19959BC", Offset = "0x19959BC", VA = "0x19959BC")]
				set
				{
				}
			}

			[Token(Token = "0x1700075D")]
			public int count
			{
				[Token(Token = "0x60034B7")]
				[Address(RVA = "0x19959DC", Offset = "0x19959DC", VA = "0x19959DC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60034B8")]
				[Address(RVA = "0x1993600", Offset = "0x1993600", VA = "0x1993600")]
				set
				{
				}
			}

			[Token(Token = "0x1700075E")]
			public bool autoCount
			{
				[Token(Token = "0x60034B9")]
				[Address(RVA = "0x19959E4", Offset = "0x19959E4", VA = "0x19959E4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60034BA")]
				[Address(RVA = "0x19959EC", Offset = "0x19959EC", VA = "0x19959EC")]
				set
				{
				}
			}

			[Token(Token = "0x1700075F")]
			public UVOverride overrideUVs
			{
				[Token(Token = "0x60034BB")]
				[Address(RVA = "0x1995A10", Offset = "0x1995A10", VA = "0x1995A10")]
				get
				{
					return default(UVOverride);
				}
				[Token(Token = "0x60034BC")]
				[Address(RVA = "0x1995A18", Offset = "0x1995A18", VA = "0x1995A18")]
				set
				{
				}
			}

			[Token(Token = "0x17000760")]
			public Vector2 uvOffset
			{
				[Token(Token = "0x60034BD")]
				[Address(RVA = "0x1995A30", Offset = "0x1995A30", VA = "0x1995A30")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x60034BE")]
				[Address(RVA = "0x1995A38", Offset = "0x1995A38", VA = "0x1995A38")]
				set
				{
				}
			}

			[Token(Token = "0x17000761")]
			public Vector2 uvScale
			{
				[Token(Token = "0x60034BF")]
				[Address(RVA = "0x1995AEC", Offset = "0x1995AEC", VA = "0x1995AEC")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x60034C0")]
				[Address(RVA = "0x1995AF4", Offset = "0x1995AF4", VA = "0x1995AF4")]
				set
				{
				}
			}

			[Token(Token = "0x17000762")]
			public bool overrideNormal
			{
				[Token(Token = "0x60034C1")]
				[Address(RVA = "0x1995BA8", Offset = "0x1995BA8", VA = "0x1995BA8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60034C2")]
				[Address(RVA = "0x1995BB0", Offset = "0x1995BB0", VA = "0x1995BB0")]
				set
				{
				}
			}

			[Token(Token = "0x17000763")]
			public Vector3 customNormal
			{
				[Token(Token = "0x60034C3")]
				[Address(RVA = "0x1995BD4", Offset = "0x1995BD4", VA = "0x1995BD4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60034C4")]
				[Address(RVA = "0x1995BE0", Offset = "0x1995BE0", VA = "0x1995BE0")]
				set
				{
				}
			}

			[Token(Token = "0x17000764")]
			public MeshScaleModifier scaleModifier
			{
				[Token(Token = "0x60034C5")]
				[Address(RVA = "0x1995CB4", Offset = "0x1995CB4", VA = "0x1995CB4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034C6")]
			[Address(RVA = "0x1992938", Offset = "0x1992938", VA = "0x1992938")]
			public Channel(string n, SplineMesh parent)
			{
			}

			[Token(Token = "0x60034C7")]
			[Address(RVA = "0x1992748", Offset = "0x1992748", VA = "0x1992748")]
			public Channel(string n, Mesh inputMesh, SplineMesh parent)
			{
			}

			[Token(Token = "0x60034C8")]
			[Address(RVA = "0x1995CBC", Offset = "0x1995CBC", VA = "0x1995CBC")]
			private void Init()
			{
			}

			[Token(Token = "0x60034C9")]
			[Address(RVA = "0x1995DB0", Offset = "0x1995DB0", VA = "0x1995DB0")]
			public void CopyTo(Channel target)
			{
			}

			[Token(Token = "0x60034CA")]
			[Address(RVA = "0x1993538", Offset = "0x1993538", VA = "0x1993538")]
			public int GetMeshCount()
			{
				return default(int);
			}

			[Token(Token = "0x60034CB")]
			[Address(RVA = "0x1995FA0", Offset = "0x1995FA0", VA = "0x1995FA0")]
			public void SwapMeshes(int a, int b)
			{
			}

			[Token(Token = "0x60034CC")]
			[Address(RVA = "0x19960C0", Offset = "0x19960C0", VA = "0x19960C0")]
			public void DuplicateMesh(int index)
			{
			}

			[Token(Token = "0x60034CD")]
			[Address(RVA = "0x1993588", Offset = "0x1993588", VA = "0x1993588")]
			public MeshDefinition GetMesh(int index)
			{
				return null;
			}

			[Token(Token = "0x60034CE")]
			[Address(RVA = "0x1996178", Offset = "0x1996178", VA = "0x1996178")]
			public void AddMesh(Mesh input)
			{
			}

			[Token(Token = "0x60034CF")]
			[Address(RVA = "0x199620C", Offset = "0x199620C", VA = "0x199620C")]
			public void RemoveMesh(int index)
			{
			}

			[Token(Token = "0x60034D0")]
			[Address(RVA = "0x1993620", Offset = "0x1993620", VA = "0x1993620")]
			public void ResetIteration()
			{
			}

			[Token(Token = "0x60034D1")]
			[Address(RVA = "0x19947E4", Offset = "0x19947E4", VA = "0x19947E4")]
			public Vector2 NextOffset(double percent)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60034D2")]
			[Address(RVA = "0x1994918", Offset = "0x1994918", VA = "0x1994918")]
			public Quaternion NextPlaceRotation(double percent)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60034D3")]
			[Address(RVA = "0x1994ED0", Offset = "0x1994ED0", VA = "0x1994ED0")]
			public float NextExtrudeRotation(double percent)
			{
				return default(float);
			}

			[Token(Token = "0x60034D4")]
			[Address(RVA = "0x1994CD8", Offset = "0x1994CD8", VA = "0x1994CD8")]
			public Vector3 NextExtrudeScale(double percent)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60034D5")]
			[Address(RVA = "0x1994AD8", Offset = "0x1994AD8", VA = "0x1994AD8")]
			public Vector3 NextPlaceScale()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60034D6")]
			[Address(RVA = "0x1994714", Offset = "0x1994714", VA = "0x1994714")]
			public MeshDefinition NextMesh()
			{
				return null;
			}

			[Token(Token = "0x60034D7")]
			[Address(RVA = "0x19950D4", Offset = "0x19950D4", VA = "0x19950D4")]
			internal void Rebuild()
			{
			}

			[Token(Token = "0x60034D8")]
			[Address(RVA = "0x199627C", Offset = "0x199627C", VA = "0x199627C")]
			private void Refresh()
			{
			}
		}

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private List<Channel> channels;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool useLastResult;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<TS_Mesh> combineMeshes;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int meshCount;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private SplineSample lastResult;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private SplineSample modifiedResult;

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x19923BC", Offset = "0x19923BC", VA = "0x19923BC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x1992424", Offset = "0x1992424", VA = "0x1992424", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x1992510", Offset = "0x1992510", VA = "0x1992510")]
		public void RemoveChannel(int index)
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x1992588", Offset = "0x1992588", VA = "0x1992588")]
		public void SwapChannels(int a, int b)
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x19926B0", Offset = "0x19926B0", VA = "0x19926B0")]
		public Channel AddChannel(Mesh inputMesh, string name)
		{
			return null;
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x1992480", Offset = "0x1992480", VA = "0x1992480")]
		public Channel AddChannel(string name)
		{
			return null;
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x1992AD0", Offset = "0x1992AD0", VA = "0x1992AD0")]
		public int GetChannelCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x1992B20", Offset = "0x1992B20", VA = "0x1992B20")]
		public Channel GetChannel(int index)
		{
			return null;
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x1992B98", Offset = "0x1992B98", VA = "0x1992B98", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x1992BC0", Offset = "0x1992BC0", VA = "0x1992BC0")]
		private void Generate()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x1994088", Offset = "0x1994088", VA = "0x1994088")]
		private void Place(Channel channel, TS_Mesh target, double percent)
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x199372C", Offset = "0x199372C", VA = "0x199372C")]
		private void Stretch(Channel channel, TS_Mesh target, double from, double to)
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x1994FBC", Offset = "0x1994FBC", VA = "0x1994FBC")]
		public SplineMesh()
		{
		}
	}
	[Token(Token = "0x2000535")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA351E0", Offset = "0xA351E0")]
	public class SplineMorph : MonoBehaviour
	{
		[Token(Token = "0x2000864")]
		public enum CycleMode
		{
			[Token(Token = "0x4003032")]
			Default,
			[Token(Token = "0x4003033")]
			Loop,
			[Token(Token = "0x4003034")]
			PingPong
		}

		[Token(Token = "0x2000865")]
		public enum UpdateMode
		{
			[Token(Token = "0x4003036")]
			Update,
			[Token(Token = "0x4003037")]
			FixedUpdate,
			[Token(Token = "0x4003038")]
			LateUpdate
		}

		[Serializable]
		[Token(Token = "0x2000866")]
		public class Channel
		{
			[Token(Token = "0x200089B")]
			public enum Interpolation
			{
				[Token(Token = "0x40030E4")]
				Linear,
				[Token(Token = "0x40030E5")]
				Spherical
			}

			[Token(Token = "0x4003039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			internal SplinePoint[] points;

			[Token(Token = "0x400303A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			internal float percent;

			[Token(Token = "0x400303B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x400303C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve curve;

			[Token(Token = "0x400303D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Interpolation interpolation;

			[Token(Token = "0x60034D9")]
			[Address(RVA = "0x199D6B0", Offset = "0x199D6B0", VA = "0x199D6B0")]
			public Channel()
			{
			}
		}

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SplineComputer.Space space;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool cycle;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public CycleMode cycleMode;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public UpdateMode cycleUpdateMode;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float cycleDuration;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private SplineComputer _spline;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplinePoint[] points;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float cycleValue;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private short cycleDirection;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA49B5C", Offset = "0xA49B5C")]
		private Channel[] channels;

		[Token(Token = "0x1700034E")]
		public SplineComputer spline
		{
			[Token(Token = "0x6002556")]
			[Address(RVA = "0x199BE10", Offset = "0x199BE10", VA = "0x199BE10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002557")]
			[Address(RVA = "0x199BE18", Offset = "0x199BE18", VA = "0x199BE18")]
			set
			{
			}
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x199BEB4", Offset = "0x199BEB4", VA = "0x199BEB4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x199BF10", Offset = "0x199BF10", VA = "0x199BF10")]
		private void Update()
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x199C0C0", Offset = "0x199C0C0", VA = "0x199C0C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x199C0D4", Offset = "0x199C0D4", VA = "0x199C0D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x199BF20", Offset = "0x199BF20", VA = "0x199BF20")]
		private void RunUpdate()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x199C21C", Offset = "0x199C21C", VA = "0x199C21C")]
		public void SetCycle(float value)
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x199C298", Offset = "0x199C298", VA = "0x199C298")]
		public void SetWeight(int index, float weight)
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x199CF2C", Offset = "0x199CF2C", VA = "0x199CF2C")]
		public void SetWeight(string name, float weight)
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x199C0E8", Offset = "0x199C0E8", VA = "0x199C0E8")]
		public void SetWeight(float percent, bool loop = false)
		{
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x199D0F4", Offset = "0x199D0F4", VA = "0x199D0F4")]
		public void CaptureSnapshot(string name)
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x199D11C", Offset = "0x199D11C", VA = "0x199D11C")]
		public void CaptureSnapshot(int index)
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x199D2BC", Offset = "0x199D2BC", VA = "0x199D2BC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x199D314", Offset = "0x199D314", VA = "0x199D314")]
		public SplinePoint[] GetSnapshot(int index)
		{
			return null;
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x199D358", Offset = "0x199D358", VA = "0x199D358")]
		public SplinePoint[] GetSnapshot(string name)
		{
			return null;
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x199D3AC", Offset = "0x199D3AC", VA = "0x199D3AC")]
		public float GetWeight(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x199D3F0", Offset = "0x199D3F0", VA = "0x199D3F0")]
		public float GetWeight(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x199D444", Offset = "0x199D444", VA = "0x199D444")]
		public void AddChannel(string name)
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x199D728", Offset = "0x199D728", VA = "0x199D728")]
		public void RemoveChannel(string name)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x199D750", Offset = "0x199D750", VA = "0x199D750")]
		public void RemoveChannel(int index)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x199CFF8", Offset = "0x199CFF8", VA = "0x199CFF8")]
		private int GetChannelIndex(string name)
		{
			return default(int);
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x199D8A0", Offset = "0x199D8A0", VA = "0x199D8A0")]
		public int GetChannelCount()
		{
			return default(int);
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x199D8B8", Offset = "0x199D8B8", VA = "0x199D8B8")]
		public Channel GetChannel(int index)
		{
			return null;
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x199D8F4", Offset = "0x199D8F4", VA = "0x199D8F4")]
		public Channel GetChannel(string name)
		{
			return null;
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x199C354", Offset = "0x199C354", VA = "0x199C354")]
		public void UpdateMorph()
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x199D94C", Offset = "0x199D94C", VA = "0x199D94C")]
		public SplineMorph()
		{
		}
	}
	[Token(Token = "0x2000536")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA35218", Offset = "0xA35218")]
	public class SplinePositioner : SplineTracer
	{
		[Token(Token = "0x2000867")]
		public enum Mode
		{
			[Token(Token = "0x400303F")]
			Percent,
			[Token(Token = "0x4003040")]
			Distance
		}

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private double _position;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private float animPosition;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x1700034F")]
		public GameObject targetObject
		{
			[Token(Token = "0x6002571")]
			[Address(RVA = "0x199EA40", Offset = "0x199EA40", VA = "0x199EA40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002572")]
			[Address(RVA = "0x199EAD0", Offset = "0x199EAD0", VA = "0x199EAD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public double position
		{
			[Token(Token = "0x6002573")]
			[Address(RVA = "0x199EC00", Offset = "0x199EC00", VA = "0x199EC00")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002574")]
			[Address(RVA = "0x199EC08", Offset = "0x199EC08", VA = "0x199EC08")]
			set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public Mode mode
		{
			[Token(Token = "0x6002575")]
			[Address(RVA = "0x199EC60", Offset = "0x199EC60", VA = "0x199EC60")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6002576")]
			[Address(RVA = "0x199EC68", Offset = "0x199EC68", VA = "0x199EC68")]
			set
			{
			}
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x199EC88", Offset = "0x199EC88", VA = "0x199EC88", Slot = "11")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x199ED44", Offset = "0x199ED44", VA = "0x199ED44", Slot = "25")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x199ED64", Offset = "0x199ED64", VA = "0x199ED64", Slot = "23")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x199EDC0", Offset = "0x199EDC0", VA = "0x199EDC0", Slot = "24")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x199EE1C", Offset = "0x199EE1C", VA = "0x199EE1C", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x199EE64", Offset = "0x199EE64", VA = "0x199EE64", Slot = "21")]
		public override void SetPercent(double percent, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x199EF30", Offset = "0x199EF30", VA = "0x199EF30", Slot = "22")]
		public override void SetDistance(float distance, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x199F024", Offset = "0x199F024", VA = "0x199F024")]
		public SplinePositioner()
		{
		}
	}
	[Token(Token = "0x2000537")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA35250", Offset = "0xA35250")]
	public class SplineProjector : SplineTracer
	{
		[Token(Token = "0x2000868")]
		public enum Mode
		{
			[Token(Token = "0x4003042")]
			Accurate,
			[Token(Token = "0x4003043")]
			Cached
		}

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private bool _autoProject;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA49D08", Offset = "0xA49D08")]
		private int _subdivide;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Transform _projectTarget;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private Transform applyTarget;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		public Vector2 _offset;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		public Vector3 _rotationOffset;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[HideInInspector]
		private Vector3 lastPosition;

		[Token(Token = "0x17000352")]
		public Mode mode
		{
			[Token(Token = "0x600257F")]
			[Address(RVA = "0x199F0F0", Offset = "0x199F0F0", VA = "0x199F0F0")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6002580")]
			[Address(RVA = "0x199F0F8", Offset = "0x199F0F8", VA = "0x199F0F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public bool autoProject
		{
			[Token(Token = "0x6002581")]
			[Address(RVA = "0x199F118", Offset = "0x199F118", VA = "0x199F118")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002582")]
			[Address(RVA = "0x199F120", Offset = "0x199F120", VA = "0x199F120")]
			set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public int subdivide
		{
			[Token(Token = "0x6002583")]
			[Address(RVA = "0x199F150", Offset = "0x199F150", VA = "0x199F150")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002584")]
			[Address(RVA = "0x199F158", Offset = "0x199F158", VA = "0x199F158")]
			set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public Transform projectTarget
		{
			[Token(Token = "0x6002585")]
			[Address(RVA = "0x199F180", Offset = "0x199F180", VA = "0x199F180")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002586")]
			[Address(RVA = "0x199F210", Offset = "0x199F210", VA = "0x199F210")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public GameObject targetObject
		{
			[Token(Token = "0x6002587")]
			[Address(RVA = "0x199F2B4", Offset = "0x199F2B4", VA = "0x199F2B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002588")]
			[Address(RVA = "0x199F384", Offset = "0x199F384", VA = "0x199F384")]
			set
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event SplineReachHandler onEndReached
		{
			[Token(Token = "0x6002589")]
			[Address(RVA = "0x199F430", Offset = "0x199F430", VA = "0x199F430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A5DC", Offset = "0xA5A5DC")]
			add
			{
			}
			[Token(Token = "0x600258A")]
			[Address(RVA = "0x199F4D8", Offset = "0x199F4D8", VA = "0x199F4D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A5EC", Offset = "0xA5A5EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event SplineReachHandler onBeginningReached
		{
			[Token(Token = "0x600258B")]
			[Address(RVA = "0x199F580", Offset = "0x199F580", VA = "0x199F580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A5FC", Offset = "0xA5A5FC")]
			add
			{
			}
			[Token(Token = "0x600258C")]
			[Address(RVA = "0x199F628", Offset = "0x199F628", VA = "0x199F628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A60C", Offset = "0xA5A60C")]
			remove
			{
			}
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x199F6D0", Offset = "0x199F6D0", VA = "0x199F6D0", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x199F6FC", Offset = "0x199F6FC", VA = "0x199F6FC", Slot = "25")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x199F7A4", Offset = "0x199F7A4", VA = "0x199F7A4", Slot = "23")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x199F850", Offset = "0x199F850", VA = "0x199F850", Slot = "24")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x199F8FC", Offset = "0x199F8FC", VA = "0x199F8FC", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x199FCCC", Offset = "0x199FCCC", VA = "0x199FCCC", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x199FCD0", Offset = "0x199FCD0", VA = "0x199FCD0", Slot = "18")]
		protected override void OnSplineChanged()
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x199FE00", Offset = "0x199FE00", VA = "0x199FE00")]
		private void Project()
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x199FA50", Offset = "0x199FA50", VA = "0x199FA50")]
		public void CalculateProjection()
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x19A08B8", Offset = "0x19A08B8", VA = "0x19A08B8")]
		public SplineProjector()
		{
		}
	}
	[Token(Token = "0x2000538")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3529C", Offset = "0xA3529C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3529C", Offset = "0xA3529C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA3529C", Offset = "0xA3529C")]
	[ExecuteInEditMode]
	public class SplineRenderer : MeshGenerator
	{
		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public bool autoOrient;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[HideInInspector]
		public int updateFrameInterval;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int currentFrame;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Vector3 vertexDirection;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool orthographic;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		private bool init;

		[Token(Token = "0x17000357")]
		public int slices
		{
			[Token(Token = "0x6002597")]
			[Address(RVA = "0x19A09A0", Offset = "0x19A09A0", VA = "0x19A09A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002598")]
			[Address(RVA = "0x19A09A8", Offset = "0x19A09A8", VA = "0x19A09A8")]
			set
			{
			}
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x19A09D0", Offset = "0x19A09D0", VA = "0x19A09D0", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x19A0A38", Offset = "0x19A0A38", VA = "0x19A0A38")]
		private void Start()
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x19A0ADC", Offset = "0x19A0ADC", VA = "0x19A0ADC", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x19A0B00", Offset = "0x19A0B00", VA = "0x19A0B00", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x19A1320", Offset = "0x19A1320", VA = "0x19A1320")]
		public void RenderWithCamera(Camera cam)
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x19A1478", Offset = "0x19A1478", VA = "0x19A1478")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x19A0BC4", Offset = "0x19A0BC4", VA = "0x19A0BC4")]
		public void GenerateVertices(Vector3 vertexDirection, bool orthoGraphic)
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x19A1528", Offset = "0x19A1528", VA = "0x19A1528")]
		public SplineRenderer()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class SplineTracer : SplineUser
	{
		[Token(Token = "0x2000869")]
		public class NodeConnection
		{
			[Token(Token = "0x4003044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node node;

			[Token(Token = "0x4003045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int point;

			[Token(Token = "0x60034DA")]
			[Address(RVA = "0x19A4B54", Offset = "0x19A4B54", VA = "0x19A4B54")]
			public NodeConnection(Node node, int point)
			{
			}
		}

		[Token(Token = "0x200086A")]
		public enum PhysicsMode
		{
			[Token(Token = "0x4003047")]
			Transform,
			[Token(Token = "0x4003048")]
			Rigidbody,
			[Token(Token = "0x4003049")]
			Rigidbody2D
		}

		[Token(Token = "0x200086B")]
		public delegate void JunctionHandler(List<NodeConnection> passed);

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SplineTrigger[] triggerInvokeQueue;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<NodeConnection> nodeConnectionQueue;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int addTriggerIndex;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		public bool applyDirectionRotation;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[HideInInspector]
		public bool useTriggers;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public int triggerGroup;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		protected Spline.Direction _direction;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		protected PhysicsMode _physicsMode;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		protected TransformModule _motion;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody targetRigidbody;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody2D targetRigidbody2D;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		protected Transform targetTransform;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		protected SplineSample _result;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		protected SplineSample _finalResult;

		[Token(Token = "0x400239F")]
		private const double MIN_DELTA = 1E-06;

		[Token(Token = "0x17000358")]
		public PhysicsMode physicsMode
		{
			[Token(Token = "0x60025A1")]
			[Address(RVA = "0x19A3B40", Offset = "0x19A3B40", VA = "0x19A3B40")]
			get
			{
				return default(PhysicsMode);
			}
			[Token(Token = "0x60025A2")]
			[Address(RVA = "0x19A3B48", Offset = "0x19A3B48", VA = "0x19A3B48")]
			set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public TransformModule motion
		{
			[Token(Token = "0x60025A3")]
			[Address(RVA = "0x19A3B50", Offset = "0x19A3B50", VA = "0x19A3B50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public SplineSample result
		{
			[Token(Token = "0x60025A4")]
			[Address(RVA = "0x19A3C5C", Offset = "0x19A3C5C", VA = "0x19A3C5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public SplineSample modifiedResult
		{
			[Token(Token = "0x60025A5")]
			[Address(RVA = "0x19A3C64", Offset = "0x19A3C64", VA = "0x19A3C64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		public Spline.Direction direction
		{
			[Token(Token = "0x60025A6")]
			[Address(RVA = "0x19A3C6C", Offset = "0x19A3C6C", VA = "0x19A3C6C")]
			get
			{
				return default(Spline.Direction);
			}
			[Token(Token = "0x60025A7")]
			[Address(RVA = "0x19A3C74", Offset = "0x19A3C74", VA = "0x19A3C74")]
			set
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event JunctionHandler onNode
		{
			[Token(Token = "0x60025A8")]
			[Address(RVA = "0x19A3C8C", Offset = "0x19A3C8C", VA = "0x19A3C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A61C", Offset = "0xA5A61C")]
			add
			{
			}
			[Token(Token = "0x60025A9")]
			[Address(RVA = "0x19A3D34", Offset = "0x19A3D34", VA = "0x19A3D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A62C", Offset = "0xA5A62C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event EmptySplineHandler onMotionApplied
		{
			[Token(Token = "0x60025AA")]
			[Address(RVA = "0x19A3DDC", Offset = "0x19A3DDC", VA = "0x19A3DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A63C", Offset = "0xA5A63C")]
			add
			{
			}
			[Token(Token = "0x60025AB")]
			[Address(RVA = "0x19A3E84", Offset = "0x19A3E84", VA = "0x19A3E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A64C", Offset = "0xA5A64C")]
			remove
			{
			}
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x19A3F2C", Offset = "0x19A3F2C", VA = "0x19A3F2C", Slot = "20")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x199EE9C", Offset = "0x199EE9C", VA = "0x199EE9C", Slot = "21")]
		public virtual void SetPercent(double percent, bool checkTriggers = false, bool handleJunctions = false)
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x199EF6C", Offset = "0x199EF6C", VA = "0x199EF6C", Slot = "22")]
		public virtual void SetDistance(float distance, bool checkTriggers = false, bool handleJunctions = false)
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x19A3FBC", Offset = "0x19A3FBC", VA = "0x19A3FBC", Slot = "23")]
		protected virtual Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x19A400C", Offset = "0x19A400C", VA = "0x19A400C", Slot = "24")]
		protected virtual Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x19A405C", Offset = "0x19A405C", VA = "0x19A405C", Slot = "25")]
		protected virtual Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x19A04C8", Offset = "0x19A04C8", VA = "0x19A04C8")]
		protected void ApplyMotion()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x19A02A8", Offset = "0x19A02A8", VA = "0x19A02A8")]
		protected void CheckNodes(double from, double to)
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x19A0834", Offset = "0x19A0834", VA = "0x19A0834")]
		protected void InvokeNodes()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x19A0150", Offset = "0x19A0150", VA = "0x19A0150")]
		protected void CheckTriggers(double from, double to)
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x19A4530", Offset = "0x19A4530", VA = "0x19A4530")]
		private NodeConnection GetJunction(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x19A07BC", Offset = "0x19A07BC", VA = "0x19A07BC")]
		protected void InvokeTriggers()
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x199EB7C", Offset = "0x199EB7C", VA = "0x199EB7C")]
		protected void RefreshTargets()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x19A4A24", Offset = "0x19A4A24", VA = "0x19A4A24")]
		private void AddTriggerToQueue(SplineTrigger trigger)
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x199F028", Offset = "0x199F028", VA = "0x199F028")]
		public SplineTracer()
		{
		}
	}
	[Token(Token = "0x200053A")]
	[ExecuteInEditMode]
	public class SplineUser : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x200086C")]
		public enum UpdateMethod
		{
			[Token(Token = "0x400304B")]
			Update,
			[Token(Token = "0x400304C")]
			FixedUpdate,
			[Token(Token = "0x400304D")]
			LateUpdate
		}

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public UpdateMethod updateMethod;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA4A178", Offset = "0xA4A178")]
		private SplineComputer _spline;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private bool _autoUpdate;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		protected RotationModifier _rotationModifier;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		protected OffsetModifier _offsetModifier;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		protected ColorModifier _colorModifier;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		protected SizeModifier _sizeModifier;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private SampleCollection sampleCollection;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private SplineSample clipFromSample;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private SplineSample clipToSample;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private bool _loopSamples;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private double _clipFrom;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		private double _clipTo;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		private float animClipFrom;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[HideInInspector]
		private float animClipTo;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool rebuild;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool getSamples;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool postBuild;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform _trs;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _hasTransform;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[HideInInspector]
		private int _sampleCount;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[HideInInspector]
		private int startSampleIndex;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected SplineSample evalResult;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public bool multithreaded;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[HideInInspector]
		public bool buildOnAwake;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		[HideInInspector]
		public bool buildOnEnable;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		private bool _isUpdated;

		[Token(Token = "0x1700035D")]
		public SplineComputer spline
		{
			[Token(Token = "0x60025BB")]
			[Address(RVA = "0x19A5010", Offset = "0x19A5010", VA = "0x19A5010")]
			get
			{
				return null;
			}
			[Token(Token = "0x60025BC")]
			[Address(RVA = "0x19A5018", Offset = "0x19A5018", VA = "0x19A5018")]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public double clipFrom
		{
			[Token(Token = "0x60025BD")]
			[Address(RVA = "0x19A5158", Offset = "0x19A5158", VA = "0x19A5158")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60025BE")]
			[Address(RVA = "0x19A5160", Offset = "0x19A5160", VA = "0x19A5160")]
			set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public double clipTo
		{
			[Token(Token = "0x60025BF")]
			[Address(RVA = "0x19A51E8", Offset = "0x19A51E8", VA = "0x19A51E8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60025C0")]
			[Address(RVA = "0x19A51F0", Offset = "0x19A51F0", VA = "0x19A51F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public bool autoUpdate
		{
			[Token(Token = "0x60025C1")]
			[Address(RVA = "0x19A5278", Offset = "0x19A5278", VA = "0x19A5278")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025C2")]
			[Address(RVA = "0x19A5280", Offset = "0x19A5280", VA = "0x19A5280")]
			set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public bool loopSamples
		{
			[Token(Token = "0x60025C3")]
			[Address(RVA = "0x19A52B0", Offset = "0x19A52B0", VA = "0x19A52B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025C4")]
			[Address(RVA = "0x19A52B8", Offset = "0x19A52B8", VA = "0x19A52B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public double span
		{
			[Token(Token = "0x60025C5")]
			[Address(RVA = "0x19A52F8", Offset = "0x19A52F8", VA = "0x19A52F8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000363")]
		public bool samplesAreLooped
		{
			[Token(Token = "0x60025C6")]
			[Address(RVA = "0x19A0130", Offset = "0x19A0130", VA = "0x19A0130")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000364")]
		public RotationModifier rotationModifier
		{
			[Token(Token = "0x60025C7")]
			[Address(RVA = "0x19A5328", Offset = "0x19A5328", VA = "0x19A5328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		public OffsetModifier offsetModifier
		{
			[Token(Token = "0x60025C8")]
			[Address(RVA = "0x19A5330", Offset = "0x19A5330", VA = "0x19A5330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		public ColorModifier colorModifier
		{
			[Token(Token = "0x60025C9")]
			[Address(RVA = "0x19A5338", Offset = "0x19A5338", VA = "0x19A5338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		public SizeModifier sizeModifier
		{
			[Token(Token = "0x60025CA")]
			[Address(RVA = "0x19A5340", Offset = "0x19A5340", VA = "0x19A5340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		protected Transform trs
		{
			[Token(Token = "0x60025CB")]
			[Address(RVA = "0x19A5348", Offset = "0x19A5348", VA = "0x19A5348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		protected bool hasTransform
		{
			[Token(Token = "0x60025CC")]
			[Address(RVA = "0x19A5350", Offset = "0x19A5350", VA = "0x19A5350")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036A")]
		public int sampleCount
		{
			[Token(Token = "0x60025CD")]
			[Address(RVA = "0x19A5358", Offset = "0x19A5358", VA = "0x19A5358")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000029")]
		public event EmptySplineHandler onPostBuild
		{
			[Token(Token = "0x60025CE")]
			[Address(RVA = "0x19A5360", Offset = "0x19A5360", VA = "0x19A5360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A65C", Offset = "0xA5A65C")]
			add
			{
			}
			[Token(Token = "0x60025CF")]
			[Address(RVA = "0x19A5404", Offset = "0x19A5404", VA = "0x19A5404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A66C", Offset = "0xA5A66C")]
			remove
			{
			}
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x19A54A8", Offset = "0x19A54A8", VA = "0x19A54A8", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x19A557C", Offset = "0x19A557C", VA = "0x19A557C")]
		protected void CacheTransform()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x199F6F8", Offset = "0x199F6F8", VA = "0x199F6F8", Slot = "7")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x19A55AC", Offset = "0x19A55AC", VA = "0x19A55AC", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x19A55C8", Offset = "0x19A55C8", VA = "0x19A55C8", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x19A55CC", Offset = "0x19A55CC", VA = "0x19A55CC", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x199ECC4", Offset = "0x199ECC4", VA = "0x199ECC4", Slot = "11")]
		protected virtual void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x19A56E0", Offset = "0x19A56E0", VA = "0x19A56E0")]
		public SplineSample GetSampleRaw(int index)
		{
			return null;
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x19A14F8", Offset = "0x19A14F8", VA = "0x19A14F8")]
		public void GetSample(int index, SplineSample target)
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x19A5828", Offset = "0x19A5828", VA = "0x19A5828", Slot = "12")]
		public virtual void Rebuild()
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x19A583C", Offset = "0x19A583C", VA = "0x19A583C", Slot = "13")]
		public virtual void RebuildImmediate()
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x19A5974", Offset = "0x19A5974", VA = "0x19A5974")]
		private void Update()
		{
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x19A5B00", Offset = "0x19A5B00", VA = "0x19A5B00")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x19A5B54", Offset = "0x19A5B54", VA = "0x19A5B54")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x19A59C4", Offset = "0x19A59C4", VA = "0x19A59C4")]
		private void RunUpdate()
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x19A5BA8", Offset = "0x19A5BA8", VA = "0x19A5BA8")]
		private void BuildThreaded()
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x19A5BDC", Offset = "0x19A5BDC", VA = "0x19A5BDC")]
		private void ResampleAndBuildThreaded()
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x19A5C18", Offset = "0x19A5C18", VA = "0x19A5C18", Slot = "14")]
		protected virtual void Run()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x199FA4C", Offset = "0x199FA4C", VA = "0x199FA4C", Slot = "15")]
		protected virtual void LateRun()
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x19A5C1C", Offset = "0x19A5C1C", VA = "0x19A5C1C", Slot = "16")]
		protected virtual void Build()
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x199EE60", Offset = "0x199EE60", VA = "0x199EE60", Slot = "17")]
		protected virtual void PostBuild()
		{
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x19A5C20", Offset = "0x19A5C20", VA = "0x19A5C20", Slot = "18")]
		protected virtual void OnSplineChanged()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x19A4064", Offset = "0x19A4064", VA = "0x19A4064")]
		public void ModifySample(SplineSample source, SplineSample destination)
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x19A5C24", Offset = "0x19A5C24", VA = "0x19A5C24")]
		public void ModifySample(SplineSample sample)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x19A5CA0", Offset = "0x19A5CA0", VA = "0x19A5CA0")]
		public void SetClipRange(double from, double to)
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x19A55D0", Offset = "0x19A55D0", VA = "0x19A55D0")]
		private void GetSamples()
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x199FDD8", Offset = "0x199FDD8", VA = "0x199FDD8")]
		public double ClipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x19A5D24", Offset = "0x19A5D24", VA = "0x19A5D24")]
		public void ClipPercent(ref double percent)
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x19A5DF0", Offset = "0x19A5DF0", VA = "0x19A5DF0")]
		public double UnclipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x19A4474", Offset = "0x19A4474", VA = "0x19A4474")]
		public void UnclipPercent(ref double percent)
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x19A5E18", Offset = "0x19A5E18", VA = "0x19A5E18")]
		private int GetSampleIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x19A5E74", Offset = "0x19A5E74", VA = "0x19A5E74")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x19A3F30", Offset = "0x19A3F30", VA = "0x19A3F30")]
		public void Evaluate(double percent, SplineSample result)
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x19A5EB0", Offset = "0x19A5EB0", VA = "0x19A5EB0")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x19A5F50", Offset = "0x19A5F50", VA = "0x19A5F50")]
		public void Evaluate(ref SplineSample[] results, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x19A6018", Offset = "0x19A6018", VA = "0x19A6018")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x19A608C", Offset = "0x19A608C", VA = "0x19A608C")]
		public double Travel(double start, float distance, Spline.Direction direction, out float moved)
		{
			return default(double);
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x19A3F98", Offset = "0x19A3F98", VA = "0x19A3F98")]
		public double Travel(double start, float distance, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x19A6168", Offset = "0x19A6168", VA = "0x19A6168")]
		public double TravelWithOffset(double start, float distance, Spline.Direction direction, Vector3 offset, out float moved)
		{
			return default(double);
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x19A6274", Offset = "0x19A6274", VA = "0x19A6274", Slot = "19")]
		public virtual void Project(Vector3 position, SplineSample result, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x19A63B8", Offset = "0x19A63B8", VA = "0x19A63B8")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x19A6424", Offset = "0x19A6424", VA = "0x19A6424")]
		public float CalculateLengthWithOffset(Vector3 offset, double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x19A64B0", Offset = "0x19A64B0", VA = "0x19A64B0", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x19A64F4", Offset = "0x19A64F4", VA = "0x19A64F4", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x19A4C48", Offset = "0x19A4C48", VA = "0x19A4C48")]
		public SplineUser()
		{
		}
	}
	[Token(Token = "0x200053B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3536C", Offset = "0xA3536C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3536C", Offset = "0xA3536C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA3536C", Offset = "0xA3536C")]
	public class SurfaceGenerator : MeshGenerator
	{
		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private float _expand;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[HideInInspector]
		private float _extrude;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvScale;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvOffset;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private SplineComputer _extrudeSpline;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private SplineSample[] extrudeResults;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityVertices;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityNormals;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] projectedVerts;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		[HideInInspector]
		private int[] surfaceTris;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[HideInInspector]
		private int[] wallTris;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeFrom;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeTo;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformUvs;

		[Token(Token = "0x1700036B")]
		public float expand
		{
			[Token(Token = "0x60025FD")]
			[Address(RVA = "0x19A65B8", Offset = "0x19A65B8", VA = "0x19A65B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025FE")]
			[Address(RVA = "0x19A65C0", Offset = "0x19A65C0", VA = "0x19A65C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public float extrude
		{
			[Token(Token = "0x60025FF")]
			[Address(RVA = "0x19A65E0", Offset = "0x19A65E0", VA = "0x19A65E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002600")]
			[Address(RVA = "0x19A65E8", Offset = "0x19A65E8", VA = "0x19A65E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public double extrudeClipFrom
		{
			[Token(Token = "0x6002601")]
			[Address(RVA = "0x19A6608", Offset = "0x19A6608", VA = "0x19A6608")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002602")]
			[Address(RVA = "0x19A6610", Offset = "0x19A6610", VA = "0x19A6610")]
			set
			{
			}
		}

		[Token(Token = "0x1700036E")]
		public double extrudeClipTo
		{
			[Token(Token = "0x6002603")]
			[Address(RVA = "0x19A6630", Offset = "0x19A6630", VA = "0x19A6630")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002604")]
			[Address(RVA = "0x19A6638", Offset = "0x19A6638", VA = "0x19A6638")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public Vector2 sideUvScale
		{
			[Token(Token = "0x6002605")]
			[Address(RVA = "0x19A6658", Offset = "0x19A6658", VA = "0x19A6658")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002606")]
			[Address(RVA = "0x19A6664", Offset = "0x19A6664", VA = "0x19A6664")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public Vector2 sideUvOffset
		{
			[Token(Token = "0x6002607")]
			[Address(RVA = "0x19A6728", Offset = "0x19A6728", VA = "0x19A6728")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002608")]
			[Address(RVA = "0x19A6734", Offset = "0x19A6734", VA = "0x19A6734")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public SplineComputer extrudeSpline
		{
			[Token(Token = "0x6002609")]
			[Address(RVA = "0x19A67F8", Offset = "0x19A67F8", VA = "0x19A67F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600260A")]
			[Address(RVA = "0x19A6800", Offset = "0x19A6800", VA = "0x19A6800")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public bool uniformUvs
		{
			[Token(Token = "0x600260B")]
			[Address(RVA = "0x19A692C", Offset = "0x19A692C", VA = "0x19A692C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600260C")]
			[Address(RVA = "0x19A6934", Offset = "0x19A6934", VA = "0x19A6934")]
			set
			{
			}
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x19A6960", Offset = "0x19A6960", VA = "0x19A6960", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x19A69C8", Offset = "0x19A69C8", VA = "0x19A69C8", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x19A6A18", Offset = "0x19A6A18", VA = "0x19A6A18")]
		public void Generate()
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0x19A8894", Offset = "0x19A8894", VA = "0x19A8894")]
		private void GenerateSurfaceTris(bool flip)
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x19A8CE8", Offset = "0x19A8CE8", VA = "0x19A8CE8")]
		private int WriteTris(ref int[] tris, ref int[] target, int vertexOffset, int trisOffset, bool flip)
		{
			return default(int);
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x19A87C8", Offset = "0x19A87C8", VA = "0x19A87C8")]
		private bool IsClockwise(Vector2[] points2D)
		{
			return default(bool);
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x19A894C", Offset = "0x19A894C", VA = "0x19A894C")]
		private void GetIdentityVerts(Vector3 center, Vector3 normal, bool clockwise)
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x19A825C", Offset = "0x19A825C", VA = "0x19A825C")]
		private void GetProjectedVertices(int count, out Vector3 center, out Vector3 normal)
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x19A8EBC", Offset = "0x19A8EBC", VA = "0x19A8EBC")]
		public SurfaceGenerator()
		{
		}
	}
	[Token(Token = "0x200053C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3541C", Offset = "0xA3541C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA3541C", Offset = "0xA3541C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA3541C", Offset = "0xA3541C")]
	public class TubeGenerator : MeshGenerator
	{
		[Token(Token = "0x200086D")]
		public enum CapMethod
		{
			[Token(Token = "0x400304F")]
			None,
			[Token(Token = "0x4003050")]
			Flat,
			[Token(Token = "0x4003051")]
			Round
		}

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private int _sides;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[HideInInspector]
		private int _roundCapLatitude;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private CapMethod _capMode;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4A94C", Offset = "0xA4A94C")]
		private float _revolve;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private float _capUVScale;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		[HideInInspector]
		private float _uvTwist;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bodyVertexCount;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int bodyTrisCount;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int capVertexCount;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int capTrisCount;

		[Token(Token = "0x17000373")]
		public int sides
		{
			[Token(Token = "0x6002616")]
			[Address(RVA = "0x19AA16C", Offset = "0x19AA16C", VA = "0x19AA16C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002617")]
			[Address(RVA = "0x19AA174", Offset = "0x19AA174", VA = "0x19AA174")]
			set
			{
			}
		}

		[Token(Token = "0x17000374")]
		public CapMethod capMode
		{
			[Token(Token = "0x6002618")]
			[Address(RVA = "0x19AA1A0", Offset = "0x19AA1A0", VA = "0x19AA1A0")]
			get
			{
				return default(CapMethod);
			}
			[Token(Token = "0x6002619")]
			[Address(RVA = "0x19AA1A8", Offset = "0x19AA1A8", VA = "0x19AA1A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public int roundCapLatitude
		{
			[Token(Token = "0x600261A")]
			[Address(RVA = "0x19AA1C8", Offset = "0x19AA1C8", VA = "0x19AA1C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600261B")]
			[Address(RVA = "0x19AA1D0", Offset = "0x19AA1D0", VA = "0x19AA1D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public float revolve
		{
			[Token(Token = "0x600261C")]
			[Address(RVA = "0x19AA204", Offset = "0x19AA204", VA = "0x19AA204")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600261D")]
			[Address(RVA = "0x19AA20C", Offset = "0x19AA20C", VA = "0x19AA20C")]
			set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public float capUVScale
		{
			[Token(Token = "0x600261E")]
			[Address(RVA = "0x19AA22C", Offset = "0x19AA22C", VA = "0x19AA22C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600261F")]
			[Address(RVA = "0x19AA234", Offset = "0x19AA234", VA = "0x19AA234")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public float uvTwist
		{
			[Token(Token = "0x6002620")]
			[Address(RVA = "0x19AA254", Offset = "0x19AA254", VA = "0x19AA254")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002621")]
			[Address(RVA = "0x19AA25C", Offset = "0x19AA25C", VA = "0x19AA25C")]
			set
			{
			}
		}

		[Token(Token = "0x17000379")]
		private bool useCap
		{
			[Token(Token = "0x6002622")]
			[Address(RVA = "0x19AA27C", Offset = "0x19AA27C", VA = "0x19AA27C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x19AA36C", Offset = "0x19AA36C", VA = "0x19AA36C", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x19AA374", Offset = "0x19AA374", VA = "0x19AA374", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x19AA3DC", Offset = "0x19AA3DC", VA = "0x19AA3DC", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0x19AA510", Offset = "0x19AA510", VA = "0x19AA510")]
		private void Generate()
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x19AABD4", Offset = "0x19AABD4", VA = "0x19AABD4")]
		private void GenerateFlatCaps()
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x19AB3A8", Offset = "0x19AB3A8", VA = "0x19AB3A8")]
		private void GenerateRoundCaps()
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x19AC64C", Offset = "0x19AC64C", VA = "0x19AC64C")]
		public TubeGenerator()
		{
		}
	}
	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA354CC", Offset = "0xA354CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xA354CC", Offset = "0xA354CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xA354CC", Offset = "0xA354CC")]
	public class WaveformGenerator : MeshGenerator
	{
		[Token(Token = "0x200086E")]
		public enum Axis
		{
			[Token(Token = "0x4003053")]
			X,
			[Token(Token = "0x4003054")]
			Y,
			[Token(Token = "0x4003055")]
			Z
		}

		[Token(Token = "0x200086F")]
		public enum Space
		{
			[Token(Token = "0x4003057")]
			World,
			[Token(Token = "0x4003058")]
			Local
		}

		[Token(Token = "0x2000870")]
		public enum UVWrapMode
		{
			[Token(Token = "0x400305A")]
			Clamp,
			[Token(Token = "0x400305B")]
			UniformX,
			[Token(Token = "0x400305C")]
			UniformY,
			[Token(Token = "0x400305D")]
			Uniform
		}

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[HideInInspector]
		private bool _symmetry;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private UVWrapMode _uvWrapMode;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x1700037A")]
		public Axis axis
		{
			[Token(Token = "0x600262A")]
			[Address(RVA = "0x19AC6D0", Offset = "0x19AC6D0", VA = "0x19AC6D0")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x600262B")]
			[Address(RVA = "0x19AC6D8", Offset = "0x19AC6D8", VA = "0x19AC6D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public bool symmetry
		{
			[Token(Token = "0x600262C")]
			[Address(RVA = "0x19AC6F8", Offset = "0x19AC6F8", VA = "0x19AC6F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600262D")]
			[Address(RVA = "0x19AC700", Offset = "0x19AC700", VA = "0x19AC700")]
			set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public UVWrapMode uvWrapMode
		{
			[Token(Token = "0x600262E")]
			[Address(RVA = "0x19AC72C", Offset = "0x19AC72C", VA = "0x19AC72C")]
			get
			{
				return default(UVWrapMode);
			}
			[Token(Token = "0x600262F")]
			[Address(RVA = "0x19AC734", Offset = "0x19AC734", VA = "0x19AC734")]
			set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public int slices
		{
			[Token(Token = "0x6002630")]
			[Address(RVA = "0x19AC754", Offset = "0x19AC754", VA = "0x19AC754")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002631")]
			[Address(RVA = "0x19AC75C", Offset = "0x19AC75C", VA = "0x19AC75C")]
			set
			{
			}
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x19AC784", Offset = "0x19AC784", VA = "0x19AC784", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x19AC7EC", Offset = "0x19AC7EC", VA = "0x19AC7EC", Slot = "20")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x19AD070", Offset = "0x19AD070", VA = "0x19AD070", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x19AD078", Offset = "0x19AD078", VA = "0x19AD078", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x19AC814", Offset = "0x19AC814", VA = "0x19AC814")]
		private void Generate()
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x19AD080", Offset = "0x19AD080", VA = "0x19AD080")]
		public WaveformGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200053E")]
	public class ObjectSequence<T>
	{
		[Token(Token = "0x2000871")]
		public enum Iteration
		{
			[Token(Token = "0x400305F")]
			Ordered,
			[Token(Token = "0x4003060")]
			Random
		}

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T startObject;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T endObject;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] objects;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Iteration iteration;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int index;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private System.Random randomizer;

		[Token(Token = "0x1700037E")]
		public int randomSeed
		{
			[Token(Token = "0x6002638")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002639")]
			set
			{
			}
		}

		[Token(Token = "0x600263A")]
		public ObjectSequence()
		{
		}

		[Token(Token = "0x600263B")]
		public T GetFirst()
		{
			return (T)null;
		}

		[Token(Token = "0x600263C")]
		public T GetLast()
		{
			return (T)null;
		}

		[Token(Token = "0x600263D")]
		public T Next()
		{
			return (T)null;
		}
	}
	[Serializable]
	[Token(Token = "0x200053F")]
	public class SampleCollection
	{
		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public SplineSample[] samples;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] optimizedIndices;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineComputer.SampleMode sampleMode;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SplineSample _workSample;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public double clipFrom;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public double clipTo;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool loopSamples;

		[Token(Token = "0x1700037F")]
		public int Count
		{
			[Token(Token = "0x600263E")]
			[Address(RVA = "0x1982BE4", Offset = "0x1982BE4", VA = "0x1982BE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000380")]
		private bool hasSamples
		{
			[Token(Token = "0x600263F")]
			[Address(RVA = "0x1982C00", Offset = "0x1982C00", VA = "0x1982C00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x1982C24", Offset = "0x1982C24", VA = "0x1982C24")]
		public SampleCollection()
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x1982CC4", Offset = "0x1982CC4", VA = "0x1982CC4")]
		public SampleCollection(SampleCollection input)
		{
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x1982D94", Offset = "0x1982D94", VA = "0x1982D94")]
		public int GetClippedSampleCount(double clipFrom, double clipTo, out int startIndex, out int endIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x1982ED0", Offset = "0x1982ED0", VA = "0x1982ED0")]
		public void GetSamplingValues(double percent, out int sampleIndex, out double lerp)
		{
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x1983058", Offset = "0x1983058", VA = "0x1983058")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x19831E4", Offset = "0x19831E4", VA = "0x19831E4")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x1983260", Offset = "0x1983260", VA = "0x1983260")]
		public void Evaluate(double percent, SplineSample result)
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x1983384", Offset = "0x1983384", VA = "0x1983384")]
		public void Evaluate(ref SplineSample[] results, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x1983690", Offset = "0x1983690", VA = "0x1983690")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x19838C4", Offset = "0x19838C4", VA = "0x19838C4")]
		public double Travel(double start, float distance, Spline.Direction direction, out float moved, double clipFrom = 0.0, double clipTo = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x1983CB0", Offset = "0x1983CB0", VA = "0x1983CB0")]
		public double TravelWithOffset(double start, float distance, Spline.Direction direction, Vector3 offset, out float moved, double clipFrom = 0.0, double clipTo = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x19846D0", Offset = "0x19846D0", VA = "0x19846D0")]
		public double Travel(double start, float distance, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x19846FC", Offset = "0x19846FC", VA = "0x19846FC")]
		public void Project(Vector3 position, int controlPointCount, SplineSample result, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x1985234", Offset = "0x1985234", VA = "0x1985234")]
		private double GetSamplePercent(int sampleIndex)
		{
			return default(double);
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x19852BC", Offset = "0x19852BC", VA = "0x19852BC")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x198552C", Offset = "0x198552C", VA = "0x198552C")]
		public float CalculateLengthWithOffset(Vector3 offset, double from = 0.0, double to = 1.0)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000540")]
	public class Spline
	{
		[Token(Token = "0x2000872")]
		public enum Direction
		{
			[Token(Token = "0x4003062")]
			Forward = 1,
			[Token(Token = "0x4003063")]
			Backward = -1
		}

		[Token(Token = "0x2000873")]
		public enum Type
		{
			[Token(Token = "0x4003065")]
			CatmullRom,
			[Token(Token = "0x4003066")]
			BSpline,
			[Token(Token = "0x4003067")]
			Bezier,
			[Token(Token = "0x4003068")]
			Linear
		}

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplinePoint[] points;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool closed;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Type type;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool linearAverageDirection;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve customValueInterpolation;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve customNormalInterpolation;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sampleRate;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] catPoints;

		[Token(Token = "0x17000381")]
		public bool isClosed
		{
			[Token(Token = "0x6002650")]
			[Address(RVA = "0x19819A4", Offset = "0x19819A4", VA = "0x19819A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002651")]
			[Address(RVA = "0x1985FFC", Offset = "0x1985FFC", VA = "0x1985FFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000382")]
		public double moveStep
		{
			[Token(Token = "0x6002652")]
			[Address(RVA = "0x1986000", Offset = "0x1986000", VA = "0x1986000")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002653")]
			[Address(RVA = "0x1986098", Offset = "0x1986098", VA = "0x1986098")]
			set
			{
			}
		}

		[Token(Token = "0x17000383")]
		public int iterations
		{
			[Token(Token = "0x6002654")]
			[Address(RVA = "0x1986048", Offset = "0x1986048", VA = "0x1986048")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x19817CC", Offset = "0x19817CC", VA = "0x19817CC")]
		public Spline(Type type)
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x198609C", Offset = "0x198609C", VA = "0x198609C")]
		public Spline(Type type, int sampleRate)
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x1986140", Offset = "0x1986140", VA = "0x1986140")]
		public float CalculateLength(double from = 0.0, double to = 1.0, double resolution = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x198639C", Offset = "0x198639C", VA = "0x198639C")]
		public double Project(Vector3 position, int subdivide = 4, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x1986904", Offset = "0x1986904", VA = "0x1986904")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x1986B90", Offset = "0x1986B90", VA = "0x1986B90")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x1986FBC", Offset = "0x1986FBC", VA = "0x1986FBC")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x19862E0", Offset = "0x19862E0", VA = "0x19862E0")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x19870F0", Offset = "0x19870F0", VA = "0x19870F0")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x19878B4", Offset = "0x19878B4", VA = "0x19878B4")]
		public SplineSample Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x1987938", Offset = "0x1987938", VA = "0x1987938")]
		public void Evaluate(SplineSample result, int pointIndex)
		{
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x198716C", Offset = "0x198716C", VA = "0x198716C")]
		public void Evaluate(SplineSample result, double percent)
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x1987A6C", Offset = "0x1987A6C", VA = "0x1987A6C")]
		public void Evaluate(ref SplineSample[] samples, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x1987C4C", Offset = "0x1987C4C", VA = "0x1987C4C")]
		public void EvaluateUniform(ref SplineSample[] samples, ref double[] originalSamplePercents, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0x198826C", Offset = "0x198826C", VA = "0x198826C")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0x198801C", Offset = "0x198801C", VA = "0x198801C")]
		public double Travel(double start, float distance, out float moved, Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0x198842C", Offset = "0x198842C", VA = "0x198842C")]
		public double Travel(double start, float distance, Direction direction = Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x1986FEC", Offset = "0x1986FEC", VA = "0x1986FEC")]
		public void EvaluatePosition(ref Vector3 point, double percent)
		{
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0x1987968", Offset = "0x1987968", VA = "0x1987968")]
		public void EvaluateTangent(ref Vector3 tangent, double percent)
		{
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x1986664", Offset = "0x1986664", VA = "0x1986664")]
		private double GetClosestPoint(int iterations, Vector3 point, double start, double end, int slices)
		{
			return default(double);
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0x19819D8", Offset = "0x19819D8", VA = "0x19819D8")]
		public void Break()
		{
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0x19885FC", Offset = "0x19885FC", VA = "0x19885FC")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0x1981868", Offset = "0x1981868", VA = "0x1981868")]
		public void Close()
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0x1988850", Offset = "0x1988850", VA = "0x1988850")]
		public void CatToBezierTangents()
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0x1988454", Offset = "0x1988454", VA = "0x1988454")]
		private void GetPoint(ref Vector3 point, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0x19885D4", Offset = "0x19885D4", VA = "0x19885D4")]
		private void GetTangent(ref Vector3 tangent, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x1989FE0", Offset = "0x1989FE0", VA = "0x1989FE0")]
		private void LinearGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0x198A848", Offset = "0x198A848", VA = "0x198A848")]
		private void LinearGetTangent(ref Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x1989B30", Offset = "0x1989B30", VA = "0x1989B30")]
		private void BSPGetPoint(ref Vector3 point, double time, int i)
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x1989878", Offset = "0x1989878", VA = "0x1989878")]
		private void BezierGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x198A4C4", Offset = "0x198A4C4", VA = "0x198A4C4")]
		private void BezierGetTangent(ref Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x19893DC", Offset = "0x19893DC", VA = "0x19893DC")]
		private void CatmullRomGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x198A1A8", Offset = "0x198A1A8", VA = "0x198A1A8")]
		private void GetCatmullRomTangent(ref Vector3 direction, double t, int i)
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0x1988D68", Offset = "0x1988D68", VA = "0x1988D68")]
		private void GetCatPoints(int i)
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x1983614", Offset = "0x1983614", VA = "0x1983614")]
		public static void FormatFromTo(ref double from, ref double to, bool preventInvert = true)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000541")]
	public struct SplinePoint
	{
		[Token(Token = "0x2000874")]
		public enum Type
		{
			[Token(Token = "0x400306A")]
			SmoothMirrored,
			[Token(Token = "0x400306B")]
			Broken,
			[Token(Token = "0x400306C")]
			SmoothFree
		}

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA4ABE8", Offset = "0xA4ABE8")]
		[SerializeField]
		[HideInInspector]
		private Type _type;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 normal;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float size;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 tangent;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 tangent2;

		[Token(Token = "0x17000384")]
		public Type type
		{
			[Token(Token = "0x6002679")]
			[Address(RVA = "0xBA1DC0", Offset = "0xBA1DC0", VA = "0xBA1DC0")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x600267A")]
			[Address(RVA = "0xBA1DC8", Offset = "0xBA1DC8", VA = "0xBA1DC8")]
			set
			{
			}
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0x199DAB0", Offset = "0x199DAB0", VA = "0x199DAB0")]
		public static SplinePoint Lerp(SplinePoint a, SplinePoint b, float t)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0x199DCBC", Offset = "0x199DCBC", VA = "0x199DCBC")]
		private static void GetInterpolatedTangents(SplinePoint a, SplinePoint b, float t, out Vector3 t1, out Vector3 t2)
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0x199DF70", Offset = "0x199DF70", VA = "0x199DF70")]
		public static bool AreDifferent(ref SplinePoint a, ref SplinePoint b)
		{
			return default(bool);
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xBA1DD8", Offset = "0xBA1DD8", VA = "0xBA1DD8")]
		public void SetPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xBA1DE0", Offset = "0xBA1DE0", VA = "0xBA1DE0")]
		public void SetTangentPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xBA1DE8", Offset = "0xBA1DE8", VA = "0xBA1DE8")]
		public void SetTangent2Position(Vector3 pos)
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xBA1DF0", Offset = "0xBA1DF0", VA = "0xBA1DF0")]
		public SplinePoint(Vector3 p)
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xBA1DF8", Offset = "0xBA1DF8", VA = "0xBA1DF8")]
		public SplinePoint(Vector3 p, Vector3 t)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xBA1E00", Offset = "0xBA1E00", VA = "0xBA1E00")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xBA1E28", Offset = "0xBA1E28", VA = "0xBA1E28")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 tan2, Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xBA1E68", Offset = "0xBA1E68", VA = "0xBA1E68")]
		public SplinePoint(SplinePoint source)
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xBA1EA4", Offset = "0xBA1EA4", VA = "0xBA1EA4")]
		private void SmoothMirrorTangent2()
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xBA1EAC", Offset = "0xBA1EAC", VA = "0xBA1EAC")]
		private void SmoothMirrorTangent()
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xBA1EB4", Offset = "0xBA1EB4", VA = "0xBA1EB4")]
		private void SmoothFreeTangent2()
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xBA1EBC", Offset = "0xBA1EBC", VA = "0xBA1EBC")]
		private void SmoothFreeTangent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000542")]
	public class SplineSample
	{
		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 up;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 forward;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float size;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double percent;

		[Token(Token = "0x17000385")]
		public Quaternion rotation
		{
			[Token(Token = "0x600268A")]
			[Address(RVA = "0x19A15D0", Offset = "0x19A15D0", VA = "0x19A15D0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000386")]
		public Vector3 right
		{
			[Token(Token = "0x600268B")]
			[Address(RVA = "0x19A1784", Offset = "0x19A1784", VA = "0x19A1784")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x19A192C", Offset = "0x19A192C", VA = "0x19A192C")]
		public static SplineSample Lerp(SplineSample a, SplineSample b, float t)
		{
			return null;
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x19A1C14", Offset = "0x19A1C14", VA = "0x19A1C14")]
		public static SplineSample Lerp(SplineSample a, SplineSample b, double t)
		{
			return null;
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x19A1C9C", Offset = "0x19A1C9C", VA = "0x19A1C9C")]
		public static void Lerp(SplineSample a, SplineSample b, double t, SplineSample target)
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x19A1A64", Offset = "0x19A1A64", VA = "0x19A1A64")]
		public static void Lerp(SplineSample a, SplineSample b, float t, SplineSample target)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x19A1E4C", Offset = "0x19A1E4C", VA = "0x19A1E4C")]
		public void Lerp(SplineSample b, double t)
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x19A1E54", Offset = "0x19A1E54", VA = "0x19A1E54")]
		public void Lerp(SplineSample b, float t)
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x19A1E5C", Offset = "0x19A1E5C", VA = "0x19A1E5C")]
		public void CopyFrom(SplineSample input)
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x19A19B4", Offset = "0x19A19B4", VA = "0x19A19B4")]
		public SplineSample()
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x19A1EB8", Offset = "0x19A1EB8", VA = "0x19A1EB8")]
		public SplineSample(Vector3 position, Vector3 normal, Vector3 direction, Color color, float size, double percent)
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x19A2008", Offset = "0x19A2008", VA = "0x19A2008")]
		public SplineSample(SplineSample input)
		{
		}
	}
	[Token(Token = "0x2000543")]
	public static class SplineThreading
	{
		[Token(Token = "0x2000875")]
		public delegate void EmptyHandler();

		[Token(Token = "0x2000876")]
		internal class ThreadDef
		{
			[Token(Token = "0x200089C")]
			internal class Worker
			{
				[Token(Token = "0x40030E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				internal bool computing;

				[Token(Token = "0x40030E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				internal Queue<EmptyHandler> instructions;

				[Token(Token = "0x6003551")]
				[Address(RVA = "0x19A37B4", Offset = "0x19A37B4", VA = "0x19A37B4")]
				public Worker()
				{
				}
			}

			[Token(Token = "0x200089D")]
			internal delegate void BoolHandler(bool flag);

			[Token(Token = "0x400306D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private ParameterizedThreadStart start;

			[Token(Token = "0x400306E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Thread thread;

			[Token(Token = "0x400306F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Worker worker;

			[Token(Token = "0x17000765")]
			internal bool isAlive
			{
				[Token(Token = "0x60034E3")]
				[Address(RVA = "0x19A34E0", Offset = "0x19A34E0", VA = "0x19A34E0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000766")]
			internal bool computing
			{
				[Token(Token = "0x60034E4")]
				[Address(RVA = "0x19A34F4", Offset = "0x19A34F4", VA = "0x19A34F4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60034E5")]
			[Address(RVA = "0x19A2940", Offset = "0x19A2940", VA = "0x19A2940")]
			internal ThreadDef()
			{
			}

			[Token(Token = "0x60034E6")]
			[Address(RVA = "0x19A3510", Offset = "0x19A3510", VA = "0x19A3510")]
			internal void Queue(EmptyHandler handler)
			{
			}

			[Token(Token = "0x60034E7")]
			[Address(RVA = "0x19A3580", Offset = "0x19A3580", VA = "0x19A3580")]
			internal void Interrupt()
			{
			}

			[Token(Token = "0x60034E8")]
			[Address(RVA = "0x19A29D8", Offset = "0x19A29D8", VA = "0x19A29D8")]
			internal void Restart()
			{
			}

			[Token(Token = "0x60034E9")]
			[Address(RVA = "0x19A36D4", Offset = "0x19A36D4", VA = "0x19A36D4")]
			internal void Abort()
			{
			}
		}

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static ThreadDef[] threads;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly object locker;

		[Token(Token = "0x17000387")]
		public static int threadCount
		{
			[Token(Token = "0x6002696")]
			[Address(RVA = "0x19A27AC", Offset = "0x19A27AC", VA = "0x19A27AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002697")]
			[Address(RVA = "0x19A2820", Offset = "0x19A2820", VA = "0x19A2820")]
			set
			{
			}
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x19A2A90", Offset = "0x19A2A90", VA = "0x19A2A90")]
		static SplineThreading()
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x19A2BBC", Offset = "0x19A2BBC", VA = "0x19A2BBC")]
		private static void Quitting()
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x19A2CEC", Offset = "0x19A2CEC", VA = "0x19A2CEC")]
		private static void RunThread(object o)
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x19A3248", Offset = "0x19A3248", VA = "0x19A3248")]
		public static void Run(EmptyHandler handler)
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x19A359C", Offset = "0x19A359C", VA = "0x19A359C")]
		public static void PrewarmThreads()
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x19A2C18", Offset = "0x19A2C18", VA = "0x19A2C18")]
		public static void Stop()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000544")]
	public class TriggerGroup
	{
		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SplineTrigger[] triggers;

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x19A9FD4", Offset = "0x19A9FD4", VA = "0x19A9FD4")]
		public void Check(double start, double end, [Optional] SplineUser user)
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x19AA088", Offset = "0x19AA088", VA = "0x19AA088")]
		public void Reset()
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x19AA0E4", Offset = "0x19AA0E4", VA = "0x19AA0E4")]
		public TriggerGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000545")]
	public class SplineTrigger
	{
		[Token(Token = "0x2000877")]
		public enum Type
		{
			[Token(Token = "0x4003071")]
			Double,
			[Token(Token = "0x4003072")]
			Forward,
			[Token(Token = "0x4003073")]
			Backward
		}

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type type;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool workOnce;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool worked;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4AC54", Offset = "0xA4AC54")]
		public double position;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public Color color;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public UnityEvent onCross;

		[Token(Token = "0x1400002A")]
		public event Action<SplineUser> onUserCross
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0x19A4DD4", Offset = "0x19A4DD4", VA = "0x19A4DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A67C", Offset = "0xA5A67C")]
			add
			{
			}
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0x19A4E78", Offset = "0x19A4E78", VA = "0x19A4E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA5A68C", Offset = "0xA5A68C")]
			remove
			{
			}
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x19A4F1C", Offset = "0x19A4F1C", VA = "0x19A4F1C")]
		public SplineTrigger(Type t)
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x19A4FEC", Offset = "0x19A4FEC", VA = "0x19A4FEC")]
		public void AddListener(UnityAction action)
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x19A5008", Offset = "0x19A5008", VA = "0x19A5008")]
		public void Reset()
		{
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x19A4990", Offset = "0x19A4990", VA = "0x19A4990")]
		public bool Check(double previousPercent, double currentPercent)
		{
			return default(bool);
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x19A4B90", Offset = "0x19A4B90", VA = "0x19A4B90")]
		public void Invoke([Optional] SplineUser user)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000546")]
	public class TransformModule : ISerializationCallbackReceiver
	{
		[Token(Token = "0x2000878")]
		public enum VelocityHandleMode
		{
			[Token(Token = "0x4003075")]
			Zero,
			[Token(Token = "0x4003076")]
			Preserve,
			[Token(Token = "0x4003077")]
			Align,
			[Token(Token = "0x4003078")]
			AlignRealistic
		}

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		private bool _hasOffset;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		[HideInInspector]
		private bool _hasRotationOffset;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA4AD44", Offset = "0xA4AD44")]
		private Vector2 _offset;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA4ADA0", Offset = "0xA4ADA0")]
		private Vector3 _rotationOffset;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA4ADFC", Offset = "0xA4ADFC")]
		private Vector3 _baseScale;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VelocityHandleMode velocityHandleMode;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplineSample _splineResult;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool applyPositionX;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool applyPositionY;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool applyPositionZ;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Spline.Direction direction;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool applyRotationX;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool applyRotationY;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool applyRotationZ;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool applyScaleX;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool applyScaleY;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool applyScaleZ;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public SplineUser targetUser;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 position;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Quaternion rotation;

		[Token(Token = "0x17000388")]
		public Vector2 offset
		{
			[Token(Token = "0x60026A8")]
			[Address(RVA = "0x19A8FEC", Offset = "0x19A8FEC", VA = "0x19A8FEC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60026A9")]
			[Address(RVA = "0x19A8FF4", Offset = "0x19A8FF4", VA = "0x19A8FF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x60026AA")]
			[Address(RVA = "0x19A9130", Offset = "0x19A9130", VA = "0x19A9130")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60026AB")]
			[Address(RVA = "0x19A913C", Offset = "0x19A913C", VA = "0x19A913C")]
			set
			{
			}
		}

		[Token(Token = "0x1700038A")]
		public bool hasOffset
		{
			[Token(Token = "0x60026AC")]
			[Address(RVA = "0x19A92A0", Offset = "0x19A92A0", VA = "0x19A92A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038B")]
		public bool hasRotationOffset
		{
			[Token(Token = "0x60026AD")]
			[Address(RVA = "0x19A92A8", Offset = "0x19A92A8", VA = "0x19A92A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038C")]
		public Vector3 baseScale
		{
			[Token(Token = "0x60026AE")]
			[Address(RVA = "0x19A92B0", Offset = "0x19A92B0", VA = "0x19A92B0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60026AF")]
			[Address(RVA = "0x19A92BC", Offset = "0x19A92BC", VA = "0x19A92BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		public SplineSample splineResult
		{
			[Token(Token = "0x60026B0")]
			[Address(RVA = "0x19A93D8", Offset = "0x19A93D8", VA = "0x19A93D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026B1")]
			[Address(RVA = "0x19A409C", Offset = "0x19A409C", VA = "0x19A409C")]
			set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public bool applyPosition
		{
			[Token(Token = "0x60026B2")]
			[Address(RVA = "0x19A9440", Offset = "0x19A9440", VA = "0x19A9440")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026B3")]
			[Address(RVA = "0x19A9468", Offset = "0x19A9468", VA = "0x19A9468")]
			set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public bool applyRotation
		{
			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x19A947C", Offset = "0x19A947C", VA = "0x19A947C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x19A94A4", Offset = "0x19A94A4", VA = "0x19A94A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public bool applyScale
		{
			[Token(Token = "0x60026B6")]
			[Address(RVA = "0x19A94B8", Offset = "0x19A94B8", VA = "0x19A94B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026B7")]
			[Address(RVA = "0x19A94E0", Offset = "0x19A94E0", VA = "0x19A94E0")]
			set
			{
			}
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x19A4124", Offset = "0x19A4124", VA = "0x19A4124")]
		public void ApplyTransform(Transform input)
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x19A41A8", Offset = "0x19A41A8", VA = "0x19A41A8")]
		public void ApplyRigidbody(Rigidbody input)
		{
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x19A42B4", Offset = "0x19A42B4", VA = "0x19A42B4")]
		public void ApplyRigidbody2D(Rigidbody2D input)
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x19A9B30", Offset = "0x19A9B30", VA = "0x19A9B30")]
		private Vector3 HandleVelocity(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x19A94F4", Offset = "0x19A94F4", VA = "0x19A94F4")]
		private Vector3 GetPosition(Vector3 inputPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x19A97B4", Offset = "0x19A97B4", VA = "0x19A97B4")]
		private Quaternion GetRotation(Quaternion inputRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x19A9AC8", Offset = "0x19A9AC8", VA = "0x19A9AC8")]
		private Vector3 GetScale(Vector3 inputScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x19A9E28", Offset = "0x19A9E28", VA = "0x19A9E28", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x19A9E2C", Offset = "0x19A9E2C", VA = "0x19A9E2C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x19A3BB8", Offset = "0x19A3BB8", VA = "0x19A3BB8")]
		public TransformModule()
		{
		}
	}
}
namespace Dreamteck.Splines.Examples
{
	[Token(Token = "0x2000547")]
	public class SpectrumVisualizer : MonoBehaviour
	{
		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int samples;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4AE68", Offset = "0xA4AE68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4AE68", Offset = "0xA4AE68")]
		public float minSpectrumRange;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA4AEBC", Offset = "0xA4AEBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4AEBC", Offset = "0xA4AEBC")]
		public float maxSpectrumRange;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float increaseSpeed;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float decreaseSpeed;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxOffset;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource source;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplineComputer computer;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] positions;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve spectrumMultiply;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] spectrumLerp;

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x18D4658", Offset = "0x18D4658", VA = "0x18D4658")]
		private void Start()
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x18D47BC", Offset = "0x18D47BC", VA = "0x18D47BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x18D4BCC", Offset = "0x18D4BCC", VA = "0x18D4BCC")]
		public SpectrumVisualizer()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public class CameraSmoothRotation : MonoBehaviour
	{
		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float damp;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SplineFollower follower;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform trs;

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x1328898", Offset = "0x1328898", VA = "0x1328898")]
		private void Start()
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x1328900", Offset = "0x1328900", VA = "0x1328900")]
		private void Update()
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x1328A6C", Offset = "0x1328A6C", VA = "0x1328A6C")]
		public CameraSmoothRotation()
		{
		}
	}
	[Token(Token = "0x2000549")]
	public class JunctionSwitch : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000879")]
		public class Bridge
		{
			[Token(Token = "0x200089E")]
			public enum Direction
			{
				[Token(Token = "0x40030E9")]
				Forward = 1,
				[Token(Token = "0x40030EA")]
				Backward = -1,
				[Token(Token = "0x40030EB")]
				None = 0
			}

			[Token(Token = "0x4003079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool active;

			[Token(Token = "0x400307A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int a;

			[Token(Token = "0x400307B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Direction aDirection;

			[Token(Token = "0x400307C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int b;

			[Token(Token = "0x400307D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Direction bDirection;

			[Token(Token = "0x60034EA")]
			[Address(RVA = "0x1328BC0", Offset = "0x1328BC0", VA = "0x1328BC0")]
			public Bridge()
			{
			}
		}

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bridge[] bridges;

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x1328A74", Offset = "0x1328A74", VA = "0x1328A74")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x1328BB8", Offset = "0x1328BB8", VA = "0x1328BB8")]
		public JunctionSwitch()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class TrainEngine : MonoBehaviour
	{
		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrickManager trickManager;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SplineFollower _tracer;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double _lastPercent;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Wagon _wagon;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Node targetNode;

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x18D4BE8", Offset = "0x18D4BE8", VA = "0x18D4BE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x18D4C40", Offset = "0x18D4C40", VA = "0x18D4C40")]
		public void SetTargetNode(Node node)
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x18D4C48", Offset = "0x18D4C48", VA = "0x18D4C48")]
		private void Start()
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x18D4D30", Offset = "0x18D4D30", VA = "0x18D4D30")]
		public SplineTracer CurrentSpline()
		{
			return null;
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x18D4D38", Offset = "0x18D4D38", VA = "0x18D4D38")]
		private void OnMotionApplied()
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x18D4E10", Offset = "0x18D4E10", VA = "0x18D4E10")]
		private void FollowerOnBeginningReached(double lastPercent)
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x18D4E18", Offset = "0x18D4E18", VA = "0x18D4E18")]
		private void FollowerOnEndReached(double lastPercent)
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x18D4E20", Offset = "0x18D4E20", VA = "0x18D4E20")]
		private void OnCallNode(List<SplineTracer.NodeConnection> passed)
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x18D4F04", Offset = "0x18D4F04", VA = "0x18D4F04")]
		private void OnJunction(List<SplineTracer.NodeConnection> passed)
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x18D54D0", Offset = "0x18D54D0", VA = "0x18D54D0")]
		private void SwitchSpline(Node.Connection from, Node.Connection to)
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x18D58CC", Offset = "0x18D58CC", VA = "0x18D58CC")]
		public TrainEngine()
		{
		}
	}
	[Token(Token = "0x200054B")]
	public class Wagon : MonoBehaviour
	{
		[Token(Token = "0x200087A")]
		public class SplineSegment
		{
			[Token(Token = "0x400307E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplineComputer spline;

			[Token(Token = "0x400307F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int start;

			[Token(Token = "0x4003080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int end;

			[Token(Token = "0x4003081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Spline.Direction direction;

			[Token(Token = "0x60034EB")]
			[Address(RVA = "0x18D599C", Offset = "0x18D599C", VA = "0x18D599C")]
			public SplineSegment(SplineComputer spline, int entryPoint, Spline.Direction direction)
			{
			}

			[Token(Token = "0x60034EC")]
			[Address(RVA = "0x18D6078", Offset = "0x18D6078", VA = "0x18D6078")]
			public SplineSegment(SplineSegment input)
			{
			}

			[Token(Token = "0x60034ED")]
			[Address(RVA = "0x18D5E34", Offset = "0x18D5E34", VA = "0x18D5E34")]
			public double Travel(double percent, float distance, Spline.Direction direction, out float moved, bool loop)
			{
				return default(double);
			}

			[Token(Token = "0x60034EE")]
			[Address(RVA = "0x18D5FD4", Offset = "0x18D5FD4", VA = "0x18D5FD4")]
			public double Travel(float distance, Spline.Direction direction, out float moved, bool loop)
			{
				return default(double);
			}

			[Token(Token = "0x60034EF")]
			[Address(RVA = "0x18D60D0", Offset = "0x18D60D0", VA = "0x18D60D0")]
			private double TravelClamped(double percent, float distance, Spline.Direction direction, double max, out float moved, bool loop)
			{
				return default(double);
			}
		}

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SplineTracer tracer;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isEngine;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Wagon back;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float offset;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Wagon front;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SplineSegment segment;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SplineSegment tempSegment;

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x18D58D4", Offset = "0x18D58D4", VA = "0x18D58D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x18D59E8", Offset = "0x18D59E8", VA = "0x18D59E8")]
		private void SetupRecursively(Wagon frontWagon, SplineSegment inputSegment)
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x18D4D70", Offset = "0x18D4D70", VA = "0x18D4D70")]
		public void UpdateOffset()
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x18D5CD4", Offset = "0x18D5CD4", VA = "0x18D5CD4")]
		private Wagon GetRootWagon()
		{
			return null;
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x18D5AA0", Offset = "0x18D5AA0", VA = "0x18D5AA0")]
		private void ApplyOffset()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x18D5D68", Offset = "0x18D5D68", VA = "0x18D5D68")]
		private void ResetSegments()
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x18D5EBC", Offset = "0x18D5EBC", VA = "0x18D5EBC")]
		private void ApplyTracer(SplineComputer spline, double percent, Spline.Direction direction)
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x18D57D8", Offset = "0x18D57D8", VA = "0x18D57D8")]
		public void EnterSplineSegment(int previousSplineExitPoint, SplineComputer spline, int entryPoint, Spline.Direction direction)
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x18D5E1C", Offset = "0x18D5E1C", VA = "0x18D5E1C")]
		private static void InvertDirection(ref Spline.Direction direction)
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x18D6070", Offset = "0x18D6070", VA = "0x18D6070")]
		public Wagon()
		{
		}
	}
	[Token(Token = "0x200054C")]
	public class SetMaterialColor : MonoBehaviour
	{
		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color[] colors;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SplineRenderer rend;

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x18D450C", Offset = "0x18D450C", VA = "0x18D450C")]
		private void Start()
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x18D4564", Offset = "0x18D4564", VA = "0x18D4564")]
		public void SetColor(int index)
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x18D4650", Offset = "0x18D4650", VA = "0x18D4650")]
		public SetMaterialColor()
		{
		}
	}
	[Token(Token = "0x200054D")]
	public class AddForceAlongPath : MonoBehaviour
	{
		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float force;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rb;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SplineProjector projector;

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x1327E0C", Offset = "0x1327E0C", VA = "0x1327E0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0x1327E7C", Offset = "0x1327E7C", VA = "0x1327E7C")]
		private void Update()
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x1327F5C", Offset = "0x1327F5C", VA = "0x1327F5C")]
		public AddForceAlongPath()
		{
		}
	}
	[Token(Token = "0x200054E")]
	public class BallCamera : MonoBehaviour
	{
		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody rb;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineProjector projector;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float positionSpeed;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rotationSpeed;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform trs;

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x1327F6C", Offset = "0x1327F6C", VA = "0x1327F6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x1328144", Offset = "0x1328144", VA = "0x1328144")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x13283B4", Offset = "0x13283B4", VA = "0x13283B4")]
		public BallCamera()
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class LapCounter : MonoBehaviour
	{
		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int currentLap;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMesh text;

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x1328BD0", Offset = "0x1328BD0", VA = "0x1328BD0")]
		public void CountLap()
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x1328C74", Offset = "0x1328C74", VA = "0x1328C74")]
		public LapCounter()
		{
		}
	}
	[Token(Token = "0x2000550")]
	public class CameraLook : MonoBehaviour
	{
		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sensitivity;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float dampSpeed;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float lookRange;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float xMove;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float yMove;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float crosshairZ;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float idealCrosshairZ;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform crosshairSphere;

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x132844C", Offset = "0x132844C", VA = "0x132844C")]
		private void Update()
		{
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x1328874", Offset = "0x1328874", VA = "0x1328874")]
		public CameraLook()
		{
		}
	}
	[Token(Token = "0x2000551")]
	public class RollerCoaster : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200087B")]
		public class CoasterSound
		{
			[Token(Token = "0x4003082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float startPercent;

			[Token(Token = "0x4003083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float endPercent;

			[Token(Token = "0x4003084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioSource source;

			[Token(Token = "0x4003085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float startPitch;

			[Token(Token = "0x4003086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float endPitch;

			[Token(Token = "0x60034F0")]
			[Address(RVA = "0x18D44F4", Offset = "0x18D44F4", VA = "0x18D44F4")]
			public CoasterSound()
			{
			}
		}

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minSpeed;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxSpeed;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float frictionForce;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gravityForce;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeRange;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SplineFollower follower;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve speedGain;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve speedLoss;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float brakeSpeed;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float brakeReleaseSpeed;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float brakeTime;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float brakeForce;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float addForce;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CoasterSound[] sounds;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource brakeSound;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioSource boostSound;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float soundFadeLength;

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x1328C7C", Offset = "0x1328C7C", VA = "0x1328C7C")]
		private void Start()
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x1328D34", Offset = "0x1328D34", VA = "0x1328D34")]
		private void OnEndReached(double last)
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x1328F64", Offset = "0x1328F64", VA = "0x1328F64")]
		private void Update()
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x13294E0", Offset = "0x13294E0", VA = "0x13294E0")]
		public void AddBrake(float time)
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x1329538", Offset = "0x1329538", VA = "0x1329538")]
		public void RemoveBrake()
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x1329540", Offset = "0x1329540", VA = "0x1329540")]
		public void AddForce(float amount)
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x1329580", Offset = "0x1329580", VA = "0x1329580")]
		public RollerCoaster()
		{
		}
	}
}
namespace Dreamteck.Splines.Primitives
{
	[Token(Token = "0x2000552")]
	public class Capsule : SplinePrimitive
	{
		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float radius;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float height;

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x197EBC8", Offset = "0x197EBC8", VA = "0x197EBC8", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x197EBD0", Offset = "0x197EBD0", VA = "0x197EBD0", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x197F4E8", Offset = "0x197F4E8", VA = "0x197F4E8")]
		public Capsule()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public class Ellipse : SplinePrimitive
	{
		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float xRadius;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yRadius;

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x197F598", Offset = "0x197F598", VA = "0x197F598", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x197F5A0", Offset = "0x197F5A0", VA = "0x197F5A0", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x197F9AC", Offset = "0x197F9AC", VA = "0x197F9AC")]
		public Ellipse()
		{
		}
	}
	[Token(Token = "0x2000554")]
	public class Line : SplinePrimitive
	{
		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool mirror;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float length;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int segments;

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x197F9B8", Offset = "0x197F9B8", VA = "0x197F9B8", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x197F9C0", Offset = "0x197F9C0", VA = "0x197F9C0", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x197FB78", Offset = "0x197FB78", VA = "0x197FB78")]
		public Line()
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class Ngon : SplinePrimitive
	{
		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float radius;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int sides;

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x197FB90", Offset = "0x197FB90", VA = "0x197FB90", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x197FB98", Offset = "0x197FB98", VA = "0x197FB98", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x197FD6C", Offset = "0x197FD6C", VA = "0x197FD6C")]
		public Ngon()
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class Rectangle : SplinePrimitive
	{
		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 size;

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x197FD7C", Offset = "0x197FD7C", VA = "0x197FD7C", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x197FD84", Offset = "0x197FD84", VA = "0x197FD84", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x19800AC", Offset = "0x19800AC", VA = "0x19800AC")]
		public Rectangle()
		{
		}
	}
	[Token(Token = "0x2000557")]
	public class RoundedRectangle : SplinePrimitive
	{
		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 size;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float xRadius;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yRadius;

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x198011C", Offset = "0x198011C", VA = "0x198011C", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x1980124", Offset = "0x1980124", VA = "0x1980124", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x1980A74", Offset = "0x1980A74", VA = "0x1980A74")]
		public RoundedRectangle()
		{
		}
	}
	[Token(Token = "0x2000558")]
	public class Spiral : SplinePrimitive
	{
		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float startRadius;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float endRadius;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float stretch;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int iterations;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool clockwise;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve curve;

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x1980AEC", Offset = "0x1980AEC", VA = "0x1980AEC", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x1980AF4", Offset = "0x1980AF4", VA = "0x1980AF4", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x19812AC", Offset = "0x19812AC", VA = "0x19812AC")]
		public Spiral()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class SplinePrimitive
	{
		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool closed;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SplinePoint[] points;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 rotation;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool is2D;

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x198132C", Offset = "0x198132C", VA = "0x198132C", Slot = "4")]
		public virtual void Calculate()
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x197F374", Offset = "0x197F374", VA = "0x197F374", Slot = "5")]
		protected virtual void Generate()
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x1981714", Offset = "0x1981714", VA = "0x1981714")]
		public Spline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x1981904", Offset = "0x1981904", VA = "0x1981904")]
		public void UpdateSpline(Spline spline)
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x19819E0", Offset = "0x19819E0", VA = "0x19819E0")]
		public SplineComputer CreateSplineComputer(string name, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x1981EB4", Offset = "0x1981EB4", VA = "0x1981EB4")]
		public void UpdateSplineComputer(SplineComputer comp)
		{
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0x1981FEC", Offset = "0x1981FEC", VA = "0x1981FEC")]
		public SplinePoint[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0x1981FF4", Offset = "0x1981FF4", VA = "0x1981FF4", Slot = "6")]
		public virtual Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x1981FFC", Offset = "0x1981FFC", VA = "0x1981FFC")]
		public bool GetIsClosed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x1981358", Offset = "0x1981358", VA = "0x1981358")]
		private void ApplyOffset()
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x197F378", Offset = "0x197F378", VA = "0x197F378")]
		protected void CreatePoints(int count, SplinePoint.Type type)
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x197F4F8", Offset = "0x197F4F8", VA = "0x197F4F8")]
		public SplinePrimitive()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class Star : SplinePrimitive
	{
		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float radius;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float depth;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int sides;

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x1982004", Offset = "0x1982004", VA = "0x1982004", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x198200C", Offset = "0x198200C", VA = "0x198200C", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x1982250", Offset = "0x1982250", VA = "0x1982250")]
		public Star()
		{
		}
	}
}
namespace Dreamteck.Splines.IO
{
	[Token(Token = "0x200055B")]
	public class CSV : SplineParser
	{
		[Token(Token = "0x200087C")]
		public enum ColumnType
		{
			[Token(Token = "0x4003088")]
			Position,
			[Token(Token = "0x4003089")]
			Tangent,
			[Token(Token = "0x400308A")]
			Tangent2,
			[Token(Token = "0x400308B")]
			Normal,
			[Token(Token = "0x400308C")]
			Size,
			[Token(Token = "0x400308D")]
			Color
		}

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ColumnType> columns;

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x18D62E4", Offset = "0x18D62E4", VA = "0x18D62E4")]
		public CSV(SplineComputer computer)
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x18D6658", Offset = "0x18D6658", VA = "0x18D6658")]
		public CSV(string filePath, [Optional] List<ColumnType> customColumns)
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x18D69BC", Offset = "0x18D69BC", VA = "0x18D69BC")]
		private void Read(string[] lines)
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x18D7558", Offset = "0x18D7558", VA = "0x18D7558")]
		public SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x18D777C", Offset = "0x18D777C", VA = "0x18D777C")]
		public Spline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x18D783C", Offset = "0x18D783C", VA = "0x18D783C")]
		public void FlatX()
		{
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x18D7A0C", Offset = "0x18D7A0C", VA = "0x18D7A0C")]
		public void FlatY()
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x18D7B90", Offset = "0x18D7B90", VA = "0x18D7B90")]
		public void FlatZ()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x18D7D54", Offset = "0x18D7D54", VA = "0x18D7D54")]
		private void AddTitle(ref string[] content, string title)
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x18D7E20", Offset = "0x18D7E20", VA = "0x18D7E20")]
		private void AddVector3Title(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x18D7FC8", Offset = "0x18D7FC8", VA = "0x18D7FC8")]
		private void AddColorTitle(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x18D81CC", Offset = "0x18D81CC", VA = "0x18D81CC")]
		private void AddVector3(ref string[] content, int index, Vector3 vector)
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x18D8320", Offset = "0x18D8320", VA = "0x18D8320")]
		private void AddColor(ref string[] content, int index, Color color)
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x18D821C", Offset = "0x18D821C", VA = "0x18D821C")]
		private void AddFloat(ref string[] content, int index, float value)
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x18D838C", Offset = "0x18D838C", VA = "0x18D838C")]
		public void Write(string filePath)
		{
		}
	}
	[Token(Token = "0x200055C")]
	public class SVG : SplineParser
	{
		[Token(Token = "0x200087D")]
		public enum Axis
		{
			[Token(Token = "0x400308F")]
			X,
			[Token(Token = "0x4003090")]
			Y,
			[Token(Token = "0x4003091")]
			Z
		}

		[Token(Token = "0x200087E")]
		internal class PathSegment
		{
			[Token(Token = "0x200089F")]
			internal enum Type
			{
				[Token(Token = "0x40030ED")]
				Cubic,
				[Token(Token = "0x40030EE")]
				CubicShort,
				[Token(Token = "0x40030EF")]
				Quadratic,
				[Token(Token = "0x40030F0")]
				QuadraticShort
			}

			[Token(Token = "0x4003092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector3 startTangent;

			[Token(Token = "0x4003093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal Vector3 endTangent;

			[Token(Token = "0x4003094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vector3 endPoint;

			[Token(Token = "0x60034F1")]
			[Address(RVA = "0x18E026C", Offset = "0x18E026C", VA = "0x18E026C")]
			internal PathSegment(Vector2 s, Vector2 e, Vector2 c)
			{
			}

			[Token(Token = "0x60034F2")]
			[Address(RVA = "0x18E01D4", Offset = "0x18E01D4", VA = "0x18E01D4")]
			internal PathSegment()
			{
			}
		}

		[Token(Token = "0x200087F")]
		public enum Element
		{
			[Token(Token = "0x4003096")]
			All,
			[Token(Token = "0x4003097")]
			Path,
			[Token(Token = "0x4003098")]
			Polygon,
			[Token(Token = "0x4003099")]
			Ellipse,
			[Token(Token = "0x400309A")]
			Rectangle,
			[Token(Token = "0x400309B")]
			Line
		}

		[Serializable]
		[Token(Token = "0x2000880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA377B8", Offset = "0xA377B8")]
		private sealed class <>c
		{
			[Token(Token = "0x400309C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400309D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__23_0;

			[Token(Token = "0x60034F4")]
			[Address(RVA = "0x18E0404", Offset = "0x18E0404", VA = "0x18E0404")]
			public <>c()
			{
			}

			[Token(Token = "0x60034F5")]
			[Address(RVA = "0x18E040C", Offset = "0x18E040C", VA = "0x18E040C")]
			internal bool <ReadPath>b__23_0(string t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SplineDefinition> paths;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SplineDefinition> polygons;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SplineDefinition> ellipses;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SplineDefinition> rectangles;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SplineDefinition> lines;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Transformation> transformBuffer;

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x18D8858", Offset = "0x18D8858", VA = "0x18D8858")]
		public SVG(string filePath)
		{
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x18D8BE4", Offset = "0x18D8BE4", VA = "0x18D8BE4")]
		public SVG(List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x18D8F1C", Offset = "0x18D8F1C", VA = "0x18D8F1C")]
		public void Write(string filePath, Axis ax = Axis.Z)
		{
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x18D9D10", Offset = "0x18D9D10", VA = "0x18D9D10")]
		private Vector2 MapPoint(Vector3 original, Axis ax)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x18D8B5C", Offset = "0x18D8B5C", VA = "0x18D8B5C")]
		private void Read(XmlDocument doc)
		{
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x18D9DF8", Offset = "0x18D9DF8", VA = "0x18D9DF8")]
		private void Traverse(XmlNodeList nodes)
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x18DB924", Offset = "0x18DB924", VA = "0x18DB924")]
		public List<SplineComputer> CreateSplineComputers(Vector3 position, Quaternion rotation, Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x18DBF58", Offset = "0x18DBF58", VA = "0x18DBF58")]
		public List<Spline> CreateSplines(Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x18DB4B0", Offset = "0x18DB4B0", VA = "0x18DB4B0")]
		private int ReadRectangle(XmlNode rectNode)
		{
			return default(int);
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x18DB1D8", Offset = "0x18DB1D8", VA = "0x18DB1D8")]
		private int ReadLine(XmlNode lineNode)
		{
			return default(int);
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x18DAE04", Offset = "0x18DAE04", VA = "0x18DAE04")]
		private int ReadEllipse(XmlNode ellipseNode)
		{
			return default(int);
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x18DAB2C", Offset = "0x18DAB2C", VA = "0x18DAB2C")]
		private int ReadPolygon(XmlNode polyNode, bool closed)
		{
			return default(int);
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x18DA328", Offset = "0x18DA328", VA = "0x18DA328")]
		private int ParseTransformation(XmlNode node)
		{
			return default(int);
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x18DC9B0", Offset = "0x18DC9B0", VA = "0x18DC9B0")]
		private List<Transformation> ParseTransformations(string transformContent)
		{
			return null;
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x18DA3E4", Offset = "0x18DA3E4", VA = "0x18DA3E4")]
		private int ReadPath(XmlNode pathNode)
		{
			return default(int);
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x18DD838", Offset = "0x18DD838", VA = "0x18DD838")]
		private void PathStart(string name, string coords, bool relative)
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x18DDA48", Offset = "0x18DDA48", VA = "0x18DDA48")]
		private void PathClose()
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x18DDA84", Offset = "0x18DDA84", VA = "0x18DDA84")]
		private void PathLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x18DDC18", Offset = "0x18DDC18", VA = "0x18DDC18")]
		private void PathHorizontalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x18DDCCC", Offset = "0x18DDCCC", VA = "0x18DDCCC")]
		private void PathVerticalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x18DDD88", Offset = "0x18DDD88", VA = "0x18DDD88")]
		private void PathCurveTo(string coords, PathSegment.Type type, bool relative)
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x18DE368", Offset = "0x18DE368", VA = "0x18DE368")]
		private void PathArcTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x18DFE20", Offset = "0x18DFE20", VA = "0x18DFE20")]
		private void FlipTangents(ref SplinePoint point)
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x18DFA70", Offset = "0x18DFA70", VA = "0x18DFA70")]
		private void CalculateEllipseParams(Vector2 p0, Vector2 p1, float phi, float rx, float ry, bool fa, bool fs, out Vector2 c, out float theta1, out float sweepTheta, out float adjustedRx, out float adjustedRy)
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0x18DFE6C", Offset = "0x18DFE6C", VA = "0x18DFE6C")]
		private double[] GetArcSegmentPercentages(double start, double end)
		{
			return null;
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0x18E00E0", Offset = "0x18E00E0", VA = "0x18E00E0")]
		private double[] ReturnPercentage(bool swap, List<double> percentages)
		{
			return null;
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0x18DFFE4", Offset = "0x18DFFE4", VA = "0x18DFFE4")]
		private float VectorAngle(Vector2 u, Vector2 v)
		{
			return default(float);
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0x18DFE44", Offset = "0x18DFE44", VA = "0x18DFE44")]
		private float ModP(float f, float div)
		{
			return default(float);
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0x18DFFBC", Offset = "0x18DFFBC", VA = "0x18DFFBC")]
		private double ModP(double d, double div)
		{
			return default(double);
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0x18DC5FC", Offset = "0x18DC5FC", VA = "0x18DC5FC")]
		private void WriteBufferTo(List<SplineDefinition> list)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0x18DF074", Offset = "0x18DF074", VA = "0x18DF074")]
		private PathSegment[] ParsePathSegment(string coord, PathSegment.Type type)
		{
			return null;
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0x18D9730", Offset = "0x18D9730", VA = "0x18D9730")]
		private string EncodePath(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0x18D94BC", Offset = "0x18D94BC", VA = "0x18D94BC")]
		private string EncodePolygon(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x18DC4C4", Offset = "0x18DC4C4", VA = "0x18DC4C4")]
		private string GetAttributeContent(XmlNode node, string attributeName)
		{
			return null;
		}
	}
	[Token(Token = "0x200055D")]
	public class SplineParser
	{
		[Token(Token = "0x2000881")]
		internal class Transformation
		{
			[Token(Token = "0x400309E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected static Matrix4x4 matrix;

			[Token(Token = "0x60034F6")]
			[Address(RVA = "0x18E0DBC", Offset = "0x18E0DBC", VA = "0x18E0DBC")]
			internal static void ResetMatrix()
			{
			}

			[Token(Token = "0x60034F7")]
			[Address(RVA = "0x18E1098", Offset = "0x18E1098", VA = "0x18E1098", Slot = "4")]
			internal virtual void Push()
			{
			}

			[Token(Token = "0x60034F8")]
			[Address(RVA = "0x18E0EE8", Offset = "0x18E0EE8", VA = "0x18E0EE8")]
			internal static void Apply(SplinePoint[] points)
			{
			}

			[Token(Token = "0x60034F9")]
			[Address(RVA = "0x18E04FC", Offset = "0x18E04FC", VA = "0x18E04FC")]
			public Transformation()
			{
			}
		}

		[Token(Token = "0x2000882")]
		internal class Translate : Transformation
		{
			[Token(Token = "0x400309F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 offset;

			[Token(Token = "0x60034FB")]
			[Address(RVA = "0x18DD3E0", Offset = "0x18DD3E0", VA = "0x18DD3E0")]
			public Translate(Vector2 o)
			{
			}

			[Token(Token = "0x60034FC")]
			[Address(RVA = "0x18E10A0", Offset = "0x18E10A0", VA = "0x18E10A0", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000883")]
		internal class Rotate : Transformation
		{
			[Token(Token = "0x40030A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float angle;

			[Token(Token = "0x60034FD")]
			[Address(RVA = "0x18DD48C", Offset = "0x18DD48C", VA = "0x18DD48C")]
			public Rotate(float a)
			{
			}

			[Token(Token = "0x60034FE")]
			[Address(RVA = "0x18E0608", Offset = "0x18E0608", VA = "0x18E0608", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000884")]
		internal class Scale : Transformation
		{
			[Token(Token = "0x40030A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 multiplier;

			[Token(Token = "0x60034FF")]
			[Address(RVA = "0x18DD508", Offset = "0x18DD508", VA = "0x18DD508")]
			public Scale(Vector2 s)
			{
			}

			[Token(Token = "0x6003500")]
			[Address(RVA = "0x18E0810", Offset = "0x18E0810", VA = "0x18E0810", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000885")]
		internal class SkewX : Transformation
		{
			[Token(Token = "0x40030A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x6003501")]
			[Address(RVA = "0x18DD5B4", Offset = "0x18DD5B4", VA = "0x18DD5B4")]
			public SkewX(float a)
			{
			}

			[Token(Token = "0x6003502")]
			[Address(RVA = "0x18E0A1C", Offset = "0x18E0A1C", VA = "0x18E0A1C", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000886")]
		internal class SkewY : Transformation
		{
			[Token(Token = "0x40030A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x6003503")]
			[Address(RVA = "0x18DD630", Offset = "0x18DD630", VA = "0x18DD630")]
			public SkewY(float a)
			{
			}

			[Token(Token = "0x6003504")]
			[Address(RVA = "0x18E0BEC", Offset = "0x18E0BEC", VA = "0x18E0BEC", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000887")]
		internal class MatrixTransform : Transformation
		{
			[Token(Token = "0x40030A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Matrix4x4 transformMatrix;

			[Token(Token = "0x6003505")]
			[Address(RVA = "0x18DD6AC", Offset = "0x18DD6AC", VA = "0x18DD6AC")]
			public MatrixTransform(float a, float b, float c, float d, float e, float f)
			{
			}

			[Token(Token = "0x6003506")]
			[Address(RVA = "0x18E0504", Offset = "0x18E0504", VA = "0x18E0504", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000888")]
		internal class SplineDefinition
		{
			[Token(Token = "0x40030A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string name;

			[Token(Token = "0x40030A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Spline.Type type;

			[Token(Token = "0x40030A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal List<SplinePoint> points;

			[Token(Token = "0x40030A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool closed;

			[Token(Token = "0x40030A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal Vector3 position;

			[Token(Token = "0x40030AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Vector3 tangent;

			[Token(Token = "0x40030AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal Vector3 tangent2;

			[Token(Token = "0x40030AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal Vector3 normal;

			[Token(Token = "0x40030AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal float size;

			[Token(Token = "0x40030AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal Color color;

			[Token(Token = "0x17000767")]
			internal int pointCount
			{
				[Token(Token = "0x6003507")]
				[Address(RVA = "0x18D79BC", Offset = "0x18D79BC", VA = "0x18D79BC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6003508")]
			[Address(RVA = "0x18D68A0", Offset = "0x18D68A0", VA = "0x18D68A0")]
			internal SplineDefinition(string n, Spline.Type t)
			{
			}

			[Token(Token = "0x6003509")]
			[Address(RVA = "0x18D64EC", Offset = "0x18D64EC", VA = "0x18D64EC")]
			internal SplineDefinition(string n, Spline spline)
			{
			}

			[Token(Token = "0x600350A")]
			[Address(RVA = "0x18DECD4", Offset = "0x18DECD4", VA = "0x18DECD4")]
			internal SplinePoint GetLastPoint()
			{
				return default(SplinePoint);
			}

			[Token(Token = "0x600350B")]
			[Address(RVA = "0x18DF824", Offset = "0x18DF824", VA = "0x18DF824")]
			internal void SetLastPoint(SplinePoint point)
			{
			}

			[Token(Token = "0x600350C")]
			[Address(RVA = "0x18DC8CC", Offset = "0x18DC8CC", VA = "0x18DC8CC")]
			internal void CreateClosingPoint()
			{
			}

			[Token(Token = "0x600350D")]
			[Address(RVA = "0x18D7434", Offset = "0x18D7434", VA = "0x18D7434")]
			internal void CreateSmooth()
			{
			}

			[Token(Token = "0x600350E")]
			[Address(RVA = "0x18DF8D0", Offset = "0x18DF8D0", VA = "0x18DF8D0")]
			internal void CreateBroken()
			{
			}

			[Token(Token = "0x600350F")]
			[Address(RVA = "0x18DC67C", Offset = "0x18DC67C", VA = "0x18DC67C")]
			internal void CreateLinear()
			{
			}

			[Token(Token = "0x6003510")]
			[Address(RVA = "0x18D7570", Offset = "0x18D7570", VA = "0x18D7570")]
			internal SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
			{
				return null;
			}

			[Token(Token = "0x6003511")]
			[Address(RVA = "0x18D7794", Offset = "0x18D7794", VA = "0x18D7794")]
			internal Spline CreateSpline()
			{
				return null;
			}

			[Token(Token = "0x6003512")]
			[Address(RVA = "0x18DEA60", Offset = "0x18DEA60", VA = "0x18DEA60")]
			internal void Transform(List<Transformation> trs)
			{
			}
		}

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string fileName;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal SplineDefinition buffer;

		[Token(Token = "0x17000391")]
		public string name
		{
			[Token(Token = "0x6002749")]
			[Address(RVA = "0x18E0430", Offset = "0x18E0430", VA = "0x18E0430")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x18DED70", Offset = "0x18DED70", VA = "0x18DED70")]
		internal Vector2[] ParseVector2(string coord)
		{
			return null;
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x18DEF7C", Offset = "0x18DEF7C", VA = "0x18DEF7C")]
		internal float[] ParseFloat(string coord)
		{
			return null;
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x18DC690", Offset = "0x18DC690", VA = "0x18DC690")]
		internal List<float> ParseFloatArray(string content)
		{
			return null;
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x18E0438", Offset = "0x18E0438", VA = "0x18E0438")]
		public bool IsWHiteSpace(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x18D6494", Offset = "0x18D6494", VA = "0x18D6494")]
		public SplineParser()
		{
		}
	}
}
namespace TFHC_Shader_Samples
{
	[Token(Token = "0x200055E")]
	public class highlightAnimated : MonoBehaviour
	{
		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x10E1F50", Offset = "0x10E1F50", VA = "0x10E1F50")]
		private void Start()
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x10E1FB8", Offset = "0x10E1FB8", VA = "0x10E1FB8")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x10E2038", Offset = "0x10E2038", VA = "0x10E2038")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x10E1FC0", Offset = "0x10E1FC0", VA = "0x10E1FC0")]
		private void switchhighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x10E2040", Offset = "0x10E2040", VA = "0x10E2040")]
		public highlightAnimated()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x200055F")]
	public class ForceShieldDestroyBall : MonoBehaviour
	{
		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x10E19C4", Offset = "0x10E19C4", VA = "0x10E19C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x10E1A50", Offset = "0x10E1A50", VA = "0x10E1A50")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x2000560")]
	public class ForceShieldImpactDetection : MonoBehaviour
	{
		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hitTime;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x10E1A60", Offset = "0x10E1A60", VA = "0x10E1A60")]
		private void Start()
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x10E1AC8", Offset = "0x10E1AC8", VA = "0x10E1AC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x10E1B6C", Offset = "0x10E1B6C", VA = "0x10E1B6C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x10E1D1C", Offset = "0x10E1D1C", VA = "0x10E1D1C")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class ForceShieldShootBall : MonoBehaviour
	{
		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bullet;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform origshoot;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x10E1D24", Offset = "0x10E1D24", VA = "0x10E1D24")]
		private void Update()
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x10E1F3C", Offset = "0x10E1F3C", VA = "0x10E1F3C")]
		public ForceShieldShootBall()
		{
		}
	}
}
namespace AmplifyImpostors
{
	[Token(Token = "0x2000562")]
	public enum LODReplacement
	{
		[Token(Token = "0x4002490")]
		DoNothing,
		[Token(Token = "0x4002491")]
		ReplaceCulled,
		[Token(Token = "0x4002492")]
		ReplaceLast,
		[Token(Token = "0x4002493")]
		ReplaceAllExceptFirst,
		[Token(Token = "0x4002494")]
		ReplaceSpecific,
		[Token(Token = "0x4002495")]
		ReplaceAfterSpecific,
		[Token(Token = "0x4002496")]
		InsertAfter
	}
	[Token(Token = "0x2000563")]
	public enum CutMode
	{
		[Token(Token = "0x4002498")]
		Automatic,
		[Token(Token = "0x4002499")]
		Manual
	}
	[Token(Token = "0x2000564")]
	public enum FolderMode
	{
		[Token(Token = "0x400249B")]
		RelativeToPrefab,
		[Token(Token = "0x400249C")]
		Global
	}
	[Token(Token = "0x2000565")]
	public enum RenderPipelineInUse
	{
		[Token(Token = "0x400249E")]
		None = 0,
		[Token(Token = "0x400249F")]
		LW = 1,
		[Token(Token = "0x40024A0")]
		HD = 2,
		[Token(Token = "0x40024A1")]
		URP = 3,
		[Token(Token = "0x40024A2")]
		Custom = 3
	}
	[Token(Token = "0x2000566")]
	public class AmplifyImpostor : MonoBehaviour
	{
		[Token(Token = "0x40024A3")]
		private const string ShaderGUID = "e82933f4c0eb9ba42aab0739f48efe21";

		[Token(Token = "0x40024A4")]
		private const string DilateGUID = "57c23892d43bc9f458360024c5985405";

		[Token(Token = "0x40024A5")]
		private const string PackerGUID = "31bd3cd74692f384a916d9d7ea87710d";

		[Token(Token = "0x40024A6")]
		private const string ShaderOctaGUID = "572f9be5706148142b8da6e9de53acdb";

		[Token(Token = "0x40024A7")]
		private const string StandardPreset = "e4786beb7716da54dbb02a632681cc37";

		[Token(Token = "0x40024A8")]
		private const string LWPreset = "089f3a2f6b5f48348a48c755f8d9a7a2";

		[Token(Token = "0x40024A9")]
		private const string LWShaderOctaGUID = "94e2ddcdfb3257a43872042f97e2fb01";

		[Token(Token = "0x40024AA")]
		private const string LWShaderGUID = "990451a2073f6994ebf9fd6f90a842b3";

		[Token(Token = "0x40024AB")]
		private const string HDPreset = "47b6b3dcefe0eaf4997acf89caf8c75e";

		[Token(Token = "0x40024AC")]
		private const string HDShaderOctaGUID = "56236dc63ad9b7949b63a27f0ad180b3";

		[Token(Token = "0x40024AD")]
		private const string HDShaderGUID = "175c951fec709c44fa2f26b8ab78b8dd";

		[Token(Token = "0x40024AE")]
		private const string UPreset = "0403878495ffa3c4e9d4bcb3eac9b559";

		[Token(Token = "0x40024AF")]
		private const string UShaderOctaGUID = "83dd8de9a5c14874884f9012def4fdcc";

		[Token(Token = "0x40024B0")]
		private const string UShaderGUID = "da79d698f4bf0164e910ad798d07efdf";

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AmplifyImpostorAsset m_data;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rootTransform;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LODGroup m_lodGroup;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_renderers;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LODReplacement m_lodReplacement;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public RenderPipelineInUse m_renderPipelineInUse;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int m_insertIndex;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public GameObject m_lastImpostor;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public string m_folderPath;

		[NonSerialized]
		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_impostorName;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public CutMode m_cutMode;

		[NonSerialized]
		[Token(Token = "0x40024BC")]
		private const float StartXRotation = -90f;

		[NonSerialized]
		[Token(Token = "0x40024BD")]
		private const float StartYRotation = 90f;

		[NonSerialized]
		[Token(Token = "0x40024BE")]
		private const int MinAlphaResolution = 256;

		[NonSerialized]
		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture[] m_rtGBuffers;

		[NonSerialized]
		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTexture[] m_alphaGBuffers;

		[NonSerialized]
		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_trueDepth;

		[NonSerialized]
		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D m_alphaTex;

		[NonSerialized]
		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_xyFitSize;

		[NonSerialized]
		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_depthFitSize;

		[NonSerialized]
		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 m_pixelOffset;

		[NonSerialized]
		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Bounds m_originalBound;

		[NonSerialized]
		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 m_oriPos;

		[NonSerialized]
		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion m_oriRot;

		[NonSerialized]
		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 m_oriSca;

		[NonSerialized]
		[Token(Token = "0x40024CA")]
		private const int BlockSize = 65536;

		[Token(Token = "0x17000392")]
		public AmplifyImpostorAsset Data
		{
			[Token(Token = "0x600275C")]
			[Address(RVA = "0x128F7D4", Offset = "0x128F7D4", VA = "0x128F7D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600275D")]
			[Address(RVA = "0x128F7DC", Offset = "0x128F7DC", VA = "0x128F7DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000393")]
		public Transform RootTransform
		{
			[Token(Token = "0x600275E")]
			[Address(RVA = "0x128F7E4", Offset = "0x128F7E4", VA = "0x128F7E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600275F")]
			[Address(RVA = "0x128F7EC", Offset = "0x128F7EC", VA = "0x128F7EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public LODGroup LodGroup
		{
			[Token(Token = "0x6002760")]
			[Address(RVA = "0x128F7F4", Offset = "0x128F7F4", VA = "0x128F7F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002761")]
			[Address(RVA = "0x128F7FC", Offset = "0x128F7FC", VA = "0x128F7FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public Renderer[] Renderers
		{
			[Token(Token = "0x6002762")]
			[Address(RVA = "0x128F804", Offset = "0x128F804", VA = "0x128F804")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002763")]
			[Address(RVA = "0x128F80C", Offset = "0x128F80C", VA = "0x128F80C")]
			set
			{
			}
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x128F814", Offset = "0x128F814", VA = "0x128F814")]
		private void GenerateTextures(List<TextureOutput> outputList, bool standardRendering)
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x128FCAC", Offset = "0x128FCAC", VA = "0x128FCAC")]
		private void GenerateAlphaTextures(List<TextureOutput> outputList)
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x128FE44", Offset = "0x128FE44", VA = "0x128FE44")]
		private void ClearBuffers()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x128FECC", Offset = "0x128FECC", VA = "0x128FECC")]
		private void ClearAlphaBuffers()
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x128FF54", Offset = "0x128FF54", VA = "0x128FF54")]
		public void RenderImpostor(ImpostorType impostorType, int targetAmount, bool impostorMaps = true, bool combinedAlphas = false, bool useMinResolution = false, [Optional] Shader customShader)
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x1291928", Offset = "0x1291928", VA = "0x1291928")]
		private Matrix4x4 GetCameraRotationMatrix(ImpostorType impostorType, int hframes, int vframes, int x, int y)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x12920EC", Offset = "0x12920EC", VA = "0x12920EC")]
		private Vector3 OctahedronToVector(Vector2 oct)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x1291ED0", Offset = "0x1291ED0", VA = "0x1291ED0")]
		private Vector3 OctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x1291FFC", Offset = "0x1291FFC", VA = "0x1291FFC")]
		private Vector3 HemiOctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x1292218", Offset = "0x1292218", VA = "0x1292218")]
		public void GenerateAutomaticMesh(AmplifyImpostorAsset data)
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x12932F4", Offset = "0x12932F4", VA = "0x12932F4")]
		public Mesh GenerateMesh(Vector2[] points, Vector3 offset, float width = 1f, float height = 1f, bool invertY = true)
		{
			return null;
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0x12939D4", Offset = "0x12939D4", VA = "0x12939D4")]
		public AmplifyImpostor()
		{
		}
	}
	[Token(Token = "0x2000567")]
	public enum ImpostorType
	{
		[Token(Token = "0x40024CC")]
		Spherical,
		[Token(Token = "0x40024CD")]
		Octahedron,
		[Token(Token = "0x40024CE")]
		HemiOctahedron
	}
	[Token(Token = "0x2000568")]
	[Flags]
	public enum DeferredBuffers
	{
		[Token(Token = "0x40024D0")]
		AlbedoAlpha = 1,
		[Token(Token = "0x40024D1")]
		SpecularSmoothness = 2,
		[Token(Token = "0x40024D2")]
		NormalDepth = 4,
		[Token(Token = "0x40024D3")]
		EmissionOcclusion = 8
	}
	[Token(Token = "0x2000569")]
	public enum RenderingMaps
	{
		[Token(Token = "0x40024D5")]
		Standard,
		[Token(Token = "0x40024D6")]
		Custom
	}
	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA3558C", Offset = "0xA3558C")]
	public class AmplifyImpostorAsset : ScriptableObject
	{
		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material Material;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Mesh Mesh;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		public int Version;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public ImpostorType ImpostorType;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		public bool LockedSizes;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		[SerializeField]
		public int SelectedSize;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Vector2 TexSize;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		public bool DecoupleAxisFrames;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4B0C0", Offset = "0xA4B0C0")]
		public int HorizontalFrames;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4B104", Offset = "0xA4B104")]
		public int VerticalFrames;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4B148", Offset = "0xA4B148")]
		public int PixelPadding;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4B18C", Offset = "0xA4B18C")]
		public int MaxVertices;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4B1CC", Offset = "0xA4B1CC")]
		public float Tolerance;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA4B210", Offset = "0xA4B210")]
		public float NormalScale;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Vector2[] ShapePoints;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public AmplifyImpostorBakePreset Preset;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public List<TextureOutput> OverrideOutput;

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x1293AE0", Offset = "0x1293AE0", VA = "0x1293AE0")]
		public AmplifyImpostorAsset()
		{
		}
	}
	[Token(Token = "0x200056B")]
	public enum ImageFormat
	{
		[Token(Token = "0x40024E9")]
		PNG,
		[Token(Token = "0x40024EA")]
		TGA,
		[Token(Token = "0x40024EB")]
		EXR
	}
	[Token(Token = "0x200056C")]
	public enum TextureChannels
	{
		[Token(Token = "0x40024ED")]
		RGBA,
		[Token(Token = "0x40024EE")]
		RGB
	}
	[Token(Token = "0x200056D")]
	public enum TextureCompression
	{
		[Token(Token = "0x40024F0")]
		None,
		[Token(Token = "0x40024F1")]
		Normal,
		[Token(Token = "0x40024F2")]
		High,
		[Token(Token = "0x40024F3")]
		Low
	}
	[Token(Token = "0x200056E")]
	public enum TextureScale
	{
		[Token(Token = "0x40024F5")]
		Full = 1,
		[Token(Token = "0x40024F6")]
		Half = 2,
		[Token(Token = "0x40024F7")]
		Quarter = 4,
		[Token(Token = "0x40024F8")]
		Eighth = 8
	}
	[Token(Token = "0x200056F")]
	[Flags]
	public enum OverrideMask
	{
		[Token(Token = "0x40024FA")]
		OutputToggle = 1,
		[Token(Token = "0x40024FB")]
		NameSuffix = 2,
		[Token(Token = "0x40024FC")]
		RelativeScale = 4,
		[Token(Token = "0x40024FD")]
		ColorSpace = 8,
		[Token(Token = "0x40024FE")]
		QualityCompression = 0x10,
		[Token(Token = "0x40024FF")]
		FileFormat = 0x20
	}
	[Token(Token = "0x2000570")]
	public enum PresetPipeline
	{
		[Token(Token = "0x4002501")]
		Legacy,
		[Token(Token = "0x4002502")]
		Lightweight,
		[Token(Token = "0x4002503")]
		HighDefinition
	}
	[Serializable]
	[Token(Token = "0x2000571")]
	public class TextureOutput
	{
		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int Index;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public OverrideMask OverrideMask;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Active;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Name;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextureScale Scale;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool SRGB;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextureChannels Channels;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TextureCompression Compression;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ImageFormat ImageFormat;

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x1294C84", Offset = "0x1294C84", VA = "0x1294C84")]
		public TextureOutput()
		{
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x1294D00", Offset = "0x1294D00", VA = "0x1294D00")]
		public TextureOutput(bool a, string n, TextureScale s, bool sr, TextureChannels c, TextureCompression nc, ImageFormat i)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x1294DDC", Offset = "0x1294DDC", VA = "0x1294DDC")]
		public TextureOutput Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x2000572")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xA355E0", Offset = "0xA355E0")]
	public class AmplifyImpostorBakePreset : ScriptableObject
	{
		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Shader BakeShader;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Shader RuntimeShader;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public PresetPipeline Pipeline;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public int AlphaIndex;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<TextureOutput> Output;

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x1293D50", Offset = "0x1293D50", VA = "0x1293D50")]
		public AmplifyImpostorBakePreset()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public static class BoundsEx
	{
		[Token(Token = "0x6002775")]
		[Address(RVA = "0x1291CBC", Offset = "0x1291CBC", VA = "0x1291CBC")]
		public static Bounds Transform(this Bounds bounds, Matrix4x4 matrix)
		{
			return default(Bounds);
		}
	}
	[Token(Token = "0x2000574")]
	public static class Texture2DEx
	{
		[Token(Token = "0x2000889")]
		public enum Compression
		{
			[Token(Token = "0x40030B0")]
			None,
			[Token(Token = "0x40030B1")]
			RLE
		}

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly byte[] Footer;

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x1294194", Offset = "0x1294194", VA = "0x1294194")]
		public static byte[] EncodeToTGA(this Texture2D tex, Compression compression = Compression.RLE)
		{
			return null;
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x1294BC4", Offset = "0x1294BC4", VA = "0x1294BC4")]
		private static bool Equals(Color32 first, Color32 second)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000575")]
	public static class SpriteUtilityEx
	{
		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type type;

		[Token(Token = "0x17000396")]
		public static Type Type
		{
			[Token(Token = "0x6002779")]
			[Address(RVA = "0x1294044", Offset = "0x1294044", VA = "0x1294044")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x1292700", Offset = "0x1292700", VA = "0x1292700")]
		public static void GenerateOutline(Texture2D texture, Rect rect, float detail, byte alphaTolerance, bool holeDetection, out Vector2[][] paths)
		{
		}
	}
	[Token(Token = "0x2000576")]
	public static class RenderTextureEx
	{
		[Token(Token = "0x600277C")]
		[Address(RVA = "0x1293FC4", Offset = "0x1293FC4", VA = "0x1293FC4")]
		public static RenderTexture GetTemporary(RenderTexture renderTexture)
		{
			return null;
		}
	}
	[Token(Token = "0x2000577")]
	public static class Vector2Ex
	{
		[Serializable]
		[Token(Token = "0x200088A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA377C8", Offset = "0xA377C8")]
		private sealed class <>c
		{
			[Token(Token = "0x40030B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Vector2> <>9__3_0;

			[Token(Token = "0x6003514")]
			[Address(RVA = "0x1295AE0", Offset = "0x1295AE0", VA = "0x1295AE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003515")]
			[Address(RVA = "0x1295AE8", Offset = "0x1295AE8", VA = "0x1295AE8")]
			internal int <ConvexHull>b__3_0(Vector2 a, Vector2 b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200088B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA377D8", Offset = "0xA377D8")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40030B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2[] P;

			[Token(Token = "0x40030B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int smallestIndex;

			[Token(Token = "0x6003516")]
			[Address(RVA = "0x12957E0", Offset = "0x12957E0", VA = "0x12957E0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6003517")]
			[Address(RVA = "0x1295B2C", Offset = "0x1295B2C", VA = "0x1295B2C")]
			internal bool <ReduceLeastSignificantVertice>b__0(Vector2 x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x12953A8", Offset = "0x12953A8", VA = "0x12953A8")]
		public static float Cross(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x12953C8", Offset = "0x12953C8", VA = "0x12953C8")]
		public static float TriangleArea(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x1295478", Offset = "0x1295478", VA = "0x1295478")]
		public static float TriangleArea(this Vector3 O, Vector3 A, Vector3 B)
		{
			return default(float);
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x1292A04", Offset = "0x1292A04", VA = "0x1292A04")]
		public static Vector2[] ConvexHull(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x1293058", Offset = "0x1293058", VA = "0x1293058")]
		public static Vector2[] ScaleAlongNormals(Vector2[] P, float scaleAmount)
		{
			return null;
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x1295524", Offset = "0x1295524", VA = "0x1295524")]
		private static Vector2[] ReduceLeastSignificantVertice(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x1292D18", Offset = "0x1292D18", VA = "0x1292D18")]
		public static Vector2[] ReduceVertices(Vector2[] P, int maxVertices)
		{
			return null;
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x12957E8", Offset = "0x12957E8", VA = "0x12957E8")]
		private static Vector2 GetIntersectionPointCoordinates(Vector2 A1, Vector2 A2, Vector2 B1, Vector2 B2)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x1295988", Offset = "0x1295988", VA = "0x1295988")]
		private static float OutsideBounds(Vector2 P)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000578")]
	public static class ImpostorBakingTools
	{
		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string PrefGlobalFolder;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string PrefGlobalRelativeFolder;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string PrefGlobalDefault;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string PrefGlobalTexImport;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string PrefGlobalCreateLodGroup;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string PrefGlobalGBuffer0Name;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string PrefGlobalGBuffer1Name;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly string PrefGlobalGBuffer2Name;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string PrefGlobalGBuffer3Name;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly string PrefGlobalBakingOptions;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly string PrefDataImpType;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly string PrefDataTexSizeLocked;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly string PrefDataTexSizeSelected;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly string PrefDataTexSizeX;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly string PrefDataTexSizeY;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly string PrefDataDecoupledFrames;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly string PrefDataXFrames;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly string PrefDataYFrames;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly string PrefDataPixelBleeding;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static readonly string PrefDataTolerance;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly string PrefDataNormalScale;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static readonly string PrefDataMaxVertices;
	}
	[Token(Token = "0x2000579")]
	public class Triangulator
	{
		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector2> m_points;

		[Token(Token = "0x17000397")]
		public List<Vector2> Points
		{
			[Token(Token = "0x6002787")]
			[Address(RVA = "0x1294E64", Offset = "0x1294E64", VA = "0x1294E64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x12936A4", Offset = "0x12936A4", VA = "0x12936A4")]
		public Triangulator(Vector2[] points)
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x1294E6C", Offset = "0x1294E6C", VA = "0x1294E6C")]
		public Triangulator(Vector2[] points, bool invertY = true)
		{
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x1293748", Offset = "0x1293748", VA = "0x1293748")]
		public int[] Triangulate()
		{
			return null;
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x1294FC4", Offset = "0x1294FC4", VA = "0x1294FC4")]
		private float Area()
		{
			return default(float);
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x12950E0", Offset = "0x12950E0", VA = "0x12950E0")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x1295334", Offset = "0x1295334", VA = "0x1295334")]
		private bool InsideTriangle(Vector2 pt, Vector2 v1, Vector2 v2, Vector2 v3)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200057A")]
	public class VersionInfo
	{
		[Token(Token = "0x400252B")]
		public const byte Major = 0;

		[Token(Token = "0x400252C")]
		public const byte Minor = 9;

		[Token(Token = "0x400252D")]
		public const byte Release = 7;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static byte Revision;

		[Token(Token = "0x17000398")]
		public static int FullNumber
		{
			[Token(Token = "0x600278F")]
			[Address(RVA = "0x1295CF8", Offset = "0x1295CF8", VA = "0x1295CF8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000399")]
		public static string FullLabel
		{
			[Token(Token = "0x6002790")]
			[Address(RVA = "0x1295D68", Offset = "0x1295D68", VA = "0x1295D68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x1295BA4", Offset = "0x1295BA4", VA = "0x1295BA4")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x1295E00", Offset = "0x1295E00", VA = "0x1295E00")]
		public VersionInfo()
		{
		}
	}
}
