using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using AOT;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using MagicalFX;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Photon.Chat;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using TriangleNet.Geometry;
using TriangleNet.Logging;
using TriangleNet.Meshing;
using TriangleNet.Meshing.Data;
using TriangleNet.Topology;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityStandardAssets.ImageEffects;
using WenklyStudio;
using WenklyStudio.Curves;
using WenklyStudio.ElvenAssassin;
using WenklyStudio.Movement;
using WenklyStudio.Payload;

[assembly: AssemblyVersion("1.0.0.0")]
[Token(Token = "0x2000002")]
public class FastList<T>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x6000002")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000002")]
	public T this[int i]
	{
		[Token(Token = "0x6000003")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x6000001")]
	public FastList()
	{
	}

	[Token(Token = "0x6000004")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000005")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000006")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000007")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000008")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000009")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600000A")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600000B")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600000C")]
	private void Trim()
	{
	}

	[Token(Token = "0x600000D")]
	public void Clear()
	{
	}
}
[Token(Token = "0x2000003")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x7C7A18", Offset = "0x7C7A18", VA = "0x7C7A18")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x7C7B58", Offset = "0x7C7B58", VA = "0x7C7B58")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x7C7E88", Offset = "0x7C7E88", VA = "0x7C7E88")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x7C8028", Offset = "0x7C8028", VA = "0x7C8028", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x7C829C", Offset = "0x7C829C", VA = "0x7C829C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000004")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x7C831C", Offset = "0x7C831C", VA = "0x7C831C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x7C8398", Offset = "0x7C8398", VA = "0x7C8398")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x7C8508", Offset = "0x7C8508", VA = "0x7C8508")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000005")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000003")]
	public bool IsVisible
	{
		[Token(Token = "0x6000016")]
		[Address(RVA = "0x7C8510", Offset = "0x7C8510", VA = "0x7C8510")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000017")]
		[Address(RVA = "0x7C8518", Offset = "0x7C8518", VA = "0x7C8518")]
		set
		{
		}
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x7C863C", Offset = "0x7C863C", VA = "0x7C863C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x7C882C", Offset = "0x7C882C", VA = "0x7C882C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x7C8834", Offset = "0x7C8834", VA = "0x7C8834")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000006")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000007")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000021")]
		[Address(RVA = "0x7C9660", Offset = "0x7C9660", VA = "0x7C9660")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000008")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float LatencyWeight;

		[Token(Token = "0x4000015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MaxSamples;

		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000022")]
		[Address(RVA = "0x7C9668", Offset = "0x7C9668", VA = "0x7C9668")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000023")]
		[Address(RVA = "0x7C9DE4", Offset = "0x7C9DE4", VA = "0x7C9DE4")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x7C8848", Offset = "0x7C8848", VA = "0x7C8848")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x7C89A0", Offset = "0x7C89A0", VA = "0x7C89A0")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x7C8FBC", Offset = "0x7C8FBC", VA = "0x7C8FBC")]
	private void Update()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x7C8F10", Offset = "0x7C8F10", VA = "0x7C8F10")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x7C9350", Offset = "0x7C9350", VA = "0x7C9350")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x7C9D24", Offset = "0x7C9D24", VA = "0x7C9D24")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000009")]
public class P2PManager
{
	[Token(Token = "0x200000A")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400001A")]
		Update = 1
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x7C9E84", Offset = "0x7C9E84", VA = "0x7C9E84")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x7C9F50", Offset = "0x7C9F50", VA = "0x7C9F50")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x7CA190", Offset = "0x7CA190", VA = "0x7CA190")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x7CA2D8", Offset = "0x7CA2D8", VA = "0x7CA2D8")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x7CA428", Offset = "0x7CA428", VA = "0x7CA428")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x7CA614", Offset = "0x7CA614", VA = "0x7CA614")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x7CA9CC", Offset = "0x7CA9CC", VA = "0x7CA9CC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x7CAC54", Offset = "0x7CAC54", VA = "0x7CAC54")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x7CA7D8", Offset = "0x7CA7D8", VA = "0x7CA7D8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x7CABA0", Offset = "0x7CABA0", VA = "0x7CABA0")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x7CA8A4", Offset = "0x7CA8A4", VA = "0x7CA8A4")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x7CAE74", Offset = "0x7CAE74", VA = "0x7CAE74")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x7CA814", Offset = "0x7CA814", VA = "0x7CA814")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x7CABD8", Offset = "0x7CABD8", VA = "0x7CABD8")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x7CA93C", Offset = "0x7CA93C", VA = "0x7CA93C")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x7CAEF0", Offset = "0x7CAEF0", VA = "0x7CAEF0")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200000B")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x7CAF6C", Offset = "0x7CAF6C", VA = "0x7CAF6C", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x7CB334", Offset = "0x7CB334", VA = "0x7CB334", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x7CB358", Offset = "0x7CB358", VA = "0x7CB358", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x7CB708", Offset = "0x7CB708", VA = "0x7CB708")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x7CB868", Offset = "0x7CB868", VA = "0x7CB868")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x7CB8E4", Offset = "0x7CB8E4", VA = "0x7CB8E4")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x7CB9D0", Offset = "0x7CB9D0", VA = "0x7CB9D0")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200000C")]
public class RemotePlayer
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x7CBAB4", Offset = "0x7CBAB4", VA = "0x7CBAB4")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200000D")]
public class RoomManager
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x7CBABC", Offset = "0x7CBABC", VA = "0x7CBABC")]
	public RoomManager()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x7CBBA0", Offset = "0x7CBBA0", VA = "0x7CBBA0")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x7CBD9C", Offset = "0x7CBD9C", VA = "0x7CBD9C")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x7CBEB4", Offset = "0x7CBEB4", VA = "0x7CBEB4")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x7CBF6C", Offset = "0x7CBF6C", VA = "0x7CBF6C")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x7CBDC8", Offset = "0x7CBDC8", VA = "0x7CBDC8")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x7CC358", Offset = "0x7CC358", VA = "0x7CC358")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x7CCAD4", Offset = "0x7CCAD4", VA = "0x7CCAD4")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x7CCE14", Offset = "0x7CCE14", VA = "0x7CCE14")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x7CC684", Offset = "0x7CC684", VA = "0x7CC684")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x200000E")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200000F")]
	public enum State
	{
		[Token(Token = "0x4000052")]
		INITIALIZING,
		[Token(Token = "0x4000053")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000054")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000055")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000056")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000057")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000058")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000059")]
		SHUTDOWN
	}

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000004")]
	public static State CurrentState
	{
		[Token(Token = "0x6000052")]
		[Address(RVA = "0x7CEBD4", Offset = "0x7CEBD4", VA = "0x7CEBD4")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000005")]
	public static ulong MyID
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0x7CA018", Offset = "0x7CA018", VA = "0x7CA018")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000006")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000054")]
		[Address(RVA = "0x7CEC38", Offset = "0x7CEC38", VA = "0x7CEC38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x7CB370", Offset = "0x7CB370", VA = "0x7CB370", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x7CAFA0", Offset = "0x7CAFA0", VA = "0x7CAFA0", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x7CD8BC", Offset = "0x7CD8BC", VA = "0x7CD8BC")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x7CB354", Offset = "0x7CB354", VA = "0x7CB354", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x7CDA44", Offset = "0x7CDA44", VA = "0x7CDA44")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x7CDB3C", Offset = "0x7CDB3C", VA = "0x7CDB3C")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x7CE324", Offset = "0x7CE324", VA = "0x7CE324")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x7CE73C", Offset = "0x7CE73C", VA = "0x7CE73C")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x7CE960", Offset = "0x7CE960", VA = "0x7CE960")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x7CEB6C", Offset = "0x7CEB6C", VA = "0x7CEB6C")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x7CD748", Offset = "0x7CD748", VA = "0x7CD748")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x7CBCF0", Offset = "0x7CBCF0", VA = "0x7CBCF0")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x7CC058", Offset = "0x7CC058", VA = "0x7CC058")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x7CED3C", Offset = "0x7CED3C", VA = "0x7CED3C")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x7CC298", Offset = "0x7CC298", VA = "0x7CC298")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x7CCE7C", Offset = "0x7CCE7C", VA = "0x7CCE7C")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x7CD274", Offset = "0x7CD274", VA = "0x7CD274")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x7CD354", Offset = "0x7CD354", VA = "0x7CD354")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x7CA0DC", Offset = "0x7CA0DC", VA = "0x7CA0DC")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x7CD000", Offset = "0x7CD000", VA = "0x7CD000")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x7CD088", Offset = "0x7CD088", VA = "0x7CD088")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x7CEEC0", Offset = "0x7CEEC0", VA = "0x7CEEC0")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x7CF184", Offset = "0x7CF184", VA = "0x7CF184")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x7CD6D0", Offset = "0x7CD6D0", VA = "0x7CD6D0")]
	[MonoPInvokeCallback(typeof(CAPI.FilterCallback))]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x7CA200", Offset = "0x7CA200", VA = "0x7CA200")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x7CBA2C", Offset = "0x7CBA2C", VA = "0x7CBA2C")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000010")]
public class VoipManager
{
	[Token(Token = "0x6000064")]
	[Address(RVA = "0x7CD7F0", Offset = "0x7CD7F0", VA = "0x7CD7F0")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x7CF0BC", Offset = "0x7CF0BC", VA = "0x7CF0BC")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x7CEAFC", Offset = "0x7CEAFC", VA = "0x7CEAFC")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x7CF4C0", Offset = "0x7CF4C0", VA = "0x7CF4C0")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x7CF610", Offset = "0x7CF610", VA = "0x7CF610")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000011")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x7CF7FC", Offset = "0x7CF7FC", VA = "0x7CF7FC")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x7CF880", Offset = "0x7CF880", VA = "0x7CF880")]
	private void Start()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x7CF9C4", Offset = "0x7CF9C4", VA = "0x7CF9C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x7CFA18", Offset = "0x7CFA18", VA = "0x7CFA18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x7CF8B0", Offset = "0x7CF8B0", VA = "0x7CF8B0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x7CFAC8", Offset = "0x7CFAC8", VA = "0x7CFAC8")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x7CFAE0", Offset = "0x7CFAE0", VA = "0x7CFAE0")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class AvatarLayer
{
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x7CFAE8", Offset = "0x7CFAE8", VA = "0x7CFAE8")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000013")]
public class PacketRecordSettings
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x7CFAF0", Offset = "0x7CFAF0", VA = "0x7CFAF0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000014")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x7D33B4", Offset = "0x7D33B4", VA = "0x7D33B4")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000016")]
	public enum HandType
	{
		[Token(Token = "0x40000BB")]
		Right,
		[Token(Token = "0x40000BC")]
		Left,
		[Token(Token = "0x40000BD")]
		Max
	}

	[Token(Token = "0x2000017")]
	public enum HandJoint
	{
		[Token(Token = "0x40000BF")]
		HandBase,
		[Token(Token = "0x40000C0")]
		IndexBase,
		[Token(Token = "0x40000C1")]
		IndexTip,
		[Token(Token = "0x40000C2")]
		ThumbBase,
		[Token(Token = "0x40000C3")]
		ThumbTip,
		[Token(Token = "0x40000C4")]
		Max
	}

	[Token(Token = "0x2000018")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000AA")]
			[Address(RVA = "0x7D5644", Offset = "0x7D5644", VA = "0x7D5644", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000AB")]
			[Address(RVA = "0x7D564C", Offset = "0x7D564C", VA = "0x7D564C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x7D5100", Offset = "0x7D5100", VA = "0x7D5100")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x7D549C", Offset = "0x7D549C", VA = "0x7D549C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x7D54A0", Offset = "0x7D54A0", VA = "0x7D54A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool EnableBody;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool RecordPackets;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool StartWithControllers;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool CombineMeshes;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool EnableLaughter;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400009B")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400009D")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400009E")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400009F")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000A0")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000A1")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x7CFB04", Offset = "0x7CFB04", VA = "0x7CFB04")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x7CFF98", Offset = "0x7CFF98", VA = "0x7CFF98")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x7D0030", Offset = "0x7D0030", VA = "0x7D0030")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x7D008C", Offset = "0x7D008C", VA = "0x7D008C")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x7D01A0", Offset = "0x7D01A0", VA = "0x7D01A0")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x7D027C", Offset = "0x7D027C", VA = "0x7D027C")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x7D034C", Offset = "0x7D034C", VA = "0x7D034C")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x7D051C", Offset = "0x7D051C", VA = "0x7D051C")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x7D05E4", Offset = "0x7D05E4", VA = "0x7D05E4")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x7D0658", Offset = "0x7D0658", VA = "0x7D0658")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x7D0710", Offset = "0x7D0710", VA = "0x7D0710")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x7D0798", Offset = "0x7D0798", VA = "0x7D0798")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x7D083C", Offset = "0x7D083C", VA = "0x7D083C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x7D0854", Offset = "0x7D0854", VA = "0x7D0854")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000080")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x7D0C60", Offset = "0x7D0C60", VA = "0x7D0C60")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x7D0F8C", Offset = "0x7D0F8C", VA = "0x7D0F8C")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x7D1164", Offset = "0x7D1164", VA = "0x7D1164")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x7D13A0", Offset = "0x7D13A0", VA = "0x7D13A0")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x7D14D4", Offset = "0x7D14D4", VA = "0x7D14D4")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x7D181C", Offset = "0x7D181C", VA = "0x7D181C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x7D1B3C", Offset = "0x7D1B3C", VA = "0x7D1B3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x7D260C", Offset = "0x7D260C", VA = "0x7D260C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x7D2650", Offset = "0x7D2650", VA = "0x7D2650")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x7CB928", Offset = "0x7CB928", VA = "0x7CB928")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x7D1774", Offset = "0x7D1774", VA = "0x7D1774")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x7D267C", Offset = "0x7D267C", VA = "0x7D267C")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x7D1F28", Offset = "0x7D1F28", VA = "0x7D1F28")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x7D2904", Offset = "0x7D2904", VA = "0x7D2904")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x7D272C", Offset = "0x7D272C", VA = "0x7D272C")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x7D3428", Offset = "0x7D3428", VA = "0x7D3428")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x7D38AC", Offset = "0x7D38AC", VA = "0x7D38AC")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x7D3CC4", Offset = "0x7D3CC4", VA = "0x7D3CC4")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x7D3DFC", Offset = "0x7D3DFC", VA = "0x7D3DFC")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x7D3FC8", Offset = "0x7D3FC8", VA = "0x7D3FC8")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x7D20E4", Offset = "0x7D20E4", VA = "0x7D20E4")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x7D4090", Offset = "0x7D4090", VA = "0x7D4090")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x7D1F38", Offset = "0x7D1F38", VA = "0x7D1F38")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x7D416C", Offset = "0x7D416C", VA = "0x7D416C")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x7D479C", Offset = "0x7D479C", VA = "0x7D479C")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x7D4C24", Offset = "0x7D4C24", VA = "0x7D4C24")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x7D4C4C", Offset = "0x7D4C4C", VA = "0x7D4C4C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x7D4C74", Offset = "0x7D4C74", VA = "0x7D4C74")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x7D24B4", Offset = "0x7D24B4", VA = "0x7D24B4")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x7D4228", Offset = "0x7D4228", VA = "0x7D4228")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x7D508C", Offset = "0x7D508C", VA = "0x7D508C")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x7D5128", Offset = "0x7D5128", VA = "0x7D5128")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x7D4F20", Offset = "0x7D4F20", VA = "0x7D4F20")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x7CF2B0", Offset = "0x7CF2B0", VA = "0x7CF2B0")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x7D51CC", Offset = "0x7D51CC", VA = "0x7D51CC")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x7D4CB0", Offset = "0x7D4CB0", VA = "0x7D4CB0")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x7D5294", Offset = "0x7D5294", VA = "0x7D5294")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000019")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x7D5654", Offset = "0x7D5654", VA = "0x7D5654")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200001A")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x7D565C", Offset = "0x7D565C", VA = "0x7D565C")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x7D67F0", Offset = "0x7D67F0", VA = "0x7D67F0")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x7D643C", Offset = "0x7D643C", VA = "0x7D643C")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x7D61C0", Offset = "0x7D61C0", VA = "0x7D61C0")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x7D62A0", Offset = "0x7D62A0", VA = "0x7D62A0")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x7D6A3C", Offset = "0x7D6A3C", VA = "0x7D6A3C")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200001B")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x7D6FCC", Offset = "0x7D6FCC", VA = "0x7D6FCC")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200001C")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x7D7214", Offset = "0x7D7214", VA = "0x7D7214")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x7D763C", Offset = "0x7D763C", VA = "0x7D763C")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200001D")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x7D3B78", Offset = "0x7D3B78", VA = "0x7D3B78")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x7D7768", Offset = "0x7D7768", VA = "0x7D7768")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x7D787C", Offset = "0x7D787C", VA = "0x7D787C")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x7D78D0", Offset = "0x7D78D0", VA = "0x7D78D0")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x7D7328", Offset = "0x7D7328", VA = "0x7D7328")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x7D78D8", Offset = "0x7D78D8", VA = "0x7D78D8")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x7D792C", Offset = "0x7D792C", VA = "0x7D792C")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x7D8034", Offset = "0x7D8034", VA = "0x7D8034")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x7D7690", Offset = "0x7D7690", VA = "0x7D7690")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200001F")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000020")]
	public enum PacketMode
	{
		[Token(Token = "0x40000E0")]
		SDK,
		[Token(Token = "0x40000E1")]
		Unity
	}

	[Token(Token = "0x2000021")]
	public struct ControllerPose
	{
		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x7D9D44", Offset = "0x7D9D44", VA = "0x7D9D44")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000022")]
	public struct PoseFrame
	{
		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x7D30BC", Offset = "0x7D30BC", VA = "0x7D30BC")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x7D9CB8", Offset = "0x7D9CB8", VA = "0x7D9CB8")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000C1")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x7D9CC8", Offset = "0x7D9CC8", VA = "0x7D9CC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x7C8050", Offset = "0x7C8050", VA = "0x7C8050")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x7C8020", Offset = "0x7C8020", VA = "0x7C8020")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x7C830C", Offset = "0x7C830C", VA = "0x7C830C")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000023")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x7D9DB4", Offset = "0x7D9DB4", VA = "0x7D9DB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x7D9EF4", Offset = "0x7D9EF4", VA = "0x7D9EF4")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000024")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x7D9F50", Offset = "0x7D9F50", VA = "0x7D9F50")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x7DA090", Offset = "0x7DA090", VA = "0x7DA090")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x7DA3C0", Offset = "0x7DA3C0", VA = "0x7DA3C0")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x7DA5DC", Offset = "0x7DA5DC", VA = "0x7DA5DC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x7DA604", Offset = "0x7DA604", VA = "0x7DA604")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000025")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000026")]
	public enum TextureType
	{
		[Token(Token = "0x4000117")]
		DiffuseTextures,
		[Token(Token = "0x4000118")]
		NormalMaps,
		[Token(Token = "0x4000119")]
		RoughnessMaps,
		[Token(Token = "0x400011A")]
		Count
	}

	[Token(Token = "0x2000027")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000028")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000029")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200002A")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x7DC5CC", Offset = "0x7DC5CC", VA = "0x7DC5CC")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200002B")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E2")]
			[Address(RVA = "0x7DD08C", Offset = "0x7DD08C", VA = "0x7DD08C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E3")]
			[Address(RVA = "0x7DD094", Offset = "0x7DD094", VA = "0x7DD094", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x7DC388", Offset = "0x7DC388", VA = "0x7DC388")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x7DCA24", Offset = "0x7DCA24", VA = "0x7DCA24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x7DCA28", Offset = "0x7DCA28", VA = "0x7DCA28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000112")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000113")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000114")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000115")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x7DA6A4", Offset = "0x7DA6A4", VA = "0x7DA6A4")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x7DA878", Offset = "0x7DA878", VA = "0x7DA878")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x7DA8B4", Offset = "0x7DA8B4", VA = "0x7DA8B4")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x7DAFE8", Offset = "0x7DAFE8", VA = "0x7DAFE8")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x7DB050", Offset = "0x7DB050", VA = "0x7DB050")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x7DA954", Offset = "0x7DA954", VA = "0x7DA954")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x7DB0A0", Offset = "0x7DB0A0", VA = "0x7DB0A0")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x7DADA0", Offset = "0x7DADA0", VA = "0x7DADA0")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x7DB17C", Offset = "0x7DB17C", VA = "0x7DB17C")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x7DB400", Offset = "0x7DB400", VA = "0x7DB400")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x7DB524", Offset = "0x7DB524", VA = "0x7DB524")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x7DB55C", Offset = "0x7DB55C", VA = "0x7DB55C")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x7DAF58", Offset = "0x7DAF58", VA = "0x7DAF58")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x7DC3B0", Offset = "0x7DC3B0", VA = "0x7DC3B0")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200002C")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700000B")]
	public float Duration
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x7D2E4C", Offset = "0x7D2E4C", VA = "0x7D2E4C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000C")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x7D3034", Offset = "0x7D3034", VA = "0x7D3034")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x7C979C", Offset = "0x7C979C", VA = "0x7C979C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x7D2BB4", Offset = "0x7D2BB4", VA = "0x7D2BB4")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x7DD09C", Offset = "0x7DD09C", VA = "0x7DD09C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x7D2EB0", Offset = "0x7D2EB0", VA = "0x7D2EB0")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x7DD228", Offset = "0x7DD228", VA = "0x7DD228")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x7C98F0", Offset = "0x7C98F0", VA = "0x7C98F0")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x7C8CEC", Offset = "0x7C8CEC", VA = "0x7C8CEC")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200002D")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x7DD5A0", Offset = "0x7DD5A0", VA = "0x7DD5A0")]
	public static void Write(BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x7DD6A8", Offset = "0x7DD6A8", VA = "0x7DD6A8")]
	public static void Write(BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x7DD834", Offset = "0x7DD834", VA = "0x7DD834")]
	public static void Write(BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x7DD70C", Offset = "0x7DD70C", VA = "0x7DD70C")]
	public static void Write(BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x7DD794", Offset = "0x7DD794", VA = "0x7DD794")]
	public static void Write(BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200002E")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x7DD404", Offset = "0x7DD404", VA = "0x7DD404")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x7DDA5C", Offset = "0x7DDA5C", VA = "0x7DDA5C")]
	public static Vector2 ReadVector2(BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x7DD87C", Offset = "0x7DD87C", VA = "0x7DD87C")]
	public static Vector3 ReadVector3(BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x7DD8E8", Offset = "0x7DD8E8", VA = "0x7DD8E8")]
	public static Quaternion ReadQuaternion(BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x7DD978", Offset = "0x7DD978", VA = "0x7DD978")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400013C")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400013D")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x7C9CA0", Offset = "0x7C9CA0", VA = "0x7C9CA0")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x7DDAAC", Offset = "0x7DDAAC", VA = "0x7DDAAC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x7DDAC8", Offset = "0x7DDAC8", VA = "0x7DDAC8")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x7DDC78", Offset = "0x7DDC78", VA = "0x7DDC78")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x7DDE34", Offset = "0x7DDE34", VA = "0x7DDE34")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000030")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x7DDEF0", Offset = "0x7DDEF0", VA = "0x7DDEF0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x7DDFCC", Offset = "0x7DDFCC", VA = "0x7DDFCC")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x7DE41C", Offset = "0x7DE41C", VA = "0x7DE41C")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x7DE764", Offset = "0x7DE764", VA = "0x7DE764")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x7DE868", Offset = "0x7DE868", VA = "0x7DE868")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000031")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000146")]
	Body = 1,
	[Token(Token = "0x4000147")]
	Hands = 2,
	[Token(Token = "0x4000148")]
	Base = 4,
	[Token(Token = "0x4000149")]
	BodyTilt = 0x10,
	[Token(Token = "0x400014A")]
	Expressive = 0x20,
	[Token(Token = "0x400014B")]
	All = -1
}
[Token(Token = "0x2000032")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400014D")]
	AvatarSpecification,
	[Token(Token = "0x400014E")]
	AssetLoaded,
	[Token(Token = "0x400014F")]
	Count
}
[Token(Token = "0x2000033")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000034")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000035")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000155")]
	Mesh,
	[Token(Token = "0x4000156")]
	Texture,
	[Token(Token = "0x4000157")]
	Pose,
	[Token(Token = "0x4000158")]
	Material,
	[Token(Token = "0x4000159")]
	CombinedMesh,
	[Token(Token = "0x400015A")]
	PBSMaterial,
	[Token(Token = "0x400015B")]
	FailedLoad,
	[Token(Token = "0x400015C")]
	Count
}
[Token(Token = "0x2000036")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000037")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000038")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000039")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003A")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003B")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000191")]
	RGB24,
	[Token(Token = "0x4000192")]
	DXT1,
	[Token(Token = "0x4000193")]
	DXT5,
	[Token(Token = "0x4000194")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000195")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000196")]
	Count
}
[Token(Token = "0x200003C")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200003D")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x400019E")]
	SkinnedMeshRender,
	[Token(Token = "0x400019F")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001A0")]
	ProjectorRender,
	[Token(Token = "0x40001A1")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001A2")]
	Count
}
[Token(Token = "0x200003E")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001A4")]
	Unknown,
	[Token(Token = "0x40001A5")]
	Default,
	[Token(Token = "0x40001A6")]
	Verbose,
	[Token(Token = "0x40001A7")]
	Debug,
	[Token(Token = "0x40001A8")]
	Info,
	[Token(Token = "0x40001A9")]
	Warn,
	[Token(Token = "0x40001AA")]
	Error,
	[Token(Token = "0x40001AB")]
	Fatal,
	[Token(Token = "0x40001AC")]
	Silent
}
[Token(Token = "0x200003F")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000040")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001B1")]
	One = 1,
	[Token(Token = "0x40001B2")]
	Two = 2,
	[Token(Token = "0x40001B3")]
	Three = 4,
	[Token(Token = "0x40001B4")]
	Joystick = 8
}
[Token(Token = "0x2000041")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001B6")]
	One = 1,
	[Token(Token = "0x40001B7")]
	Two = 2,
	[Token(Token = "0x40001B8")]
	Joystick = 4,
	[Token(Token = "0x40001B9")]
	ThumbRest = 8,
	[Token(Token = "0x40001BA")]
	Index = 0x10,
	[Token(Token = "0x40001BB")]
	Pointing = 0x40,
	[Token(Token = "0x40001BC")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000042")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000043")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000044")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000045")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000046")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000048")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004A")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001DC")]
	Add,
	[Token(Token = "0x40001DD")]
	Multiply,
	[Token(Token = "0x40001DE")]
	Count
}
[Token(Token = "0x200004B")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001E0")]
	Color,
	[Token(Token = "0x40001E1")]
	Texture,
	[Token(Token = "0x40001E2")]
	TextureSingleChannel,
	[Token(Token = "0x40001E3")]
	Parallax,
	[Token(Token = "0x40001E4")]
	Count
}
[Token(Token = "0x200004C")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001E6")]
	None,
	[Token(Token = "0x40001E7")]
	Positional,
	[Token(Token = "0x40001E8")]
	ViewReflection,
	[Token(Token = "0x40001E9")]
	Fresnel,
	[Token(Token = "0x40001EA")]
	Pulse,
	[Token(Token = "0x40001EB")]
	Count
}
[Token(Token = "0x200004D")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001ED")]
	Touch,
	[Token(Token = "0x40001EE")]
	Malibu,
	[Token(Token = "0x40001EF")]
	Go,
	[Token(Token = "0x40001F0")]
	Quest,
	[Token(Token = "0x40001F1")]
	Count
}
[Token(Token = "0x200004E")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001F3")]
	Lowest = 1,
	[Token(Token = "0x40001F4")]
	Medium = 3,
	[Token(Token = "0x40001F5")]
	Highest = 5
}
[Token(Token = "0x200004F")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001F7")]
	Unknown = -1,
	[Token(Token = "0x40001F8")]
	One,
	[Token(Token = "0x40001F9")]
	Two
}
[Token(Token = "0x2000050")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x7DEC40", Offset = "0x7DEC40", VA = "0x7DEC40")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x7DEC70", Offset = "0x7DEC70", VA = "0x7DEC70", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x7DEE80", Offset = "0x7DEE80", VA = "0x7DEE80", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000051")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x7DF0C4", Offset = "0x7DF0C4", VA = "0x7DF0C4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x7DF0F4", Offset = "0x7DF0F4", VA = "0x7DF0F4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x7DF484", Offset = "0x7DF484", VA = "0x7DF484", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000052")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x7DF82C", Offset = "0x7DF82C", VA = "0x7DF82C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x7DF85C", Offset = "0x7DF85C", VA = "0x7DF85C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x7DFAA4", Offset = "0x7DFAA4", VA = "0x7DFAA4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000053")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x7DFD78", Offset = "0x7DFD78", VA = "0x7DFD78")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x7DFDA8", Offset = "0x7DFDA8", VA = "0x7DFDA8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x7DFF70", Offset = "0x7DFF70", VA = "0x7DFF70", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000054")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x7E0184", Offset = "0x7E0184", VA = "0x7E0184")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000055")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000056")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x400022E")]
	FirstPerson = 1,
	[Token(Token = "0x400022F")]
	ThirdPerson = 2,
	[Token(Token = "0x4000230")]
	SelfOccluding = 4
}
[Token(Token = "0x2000057")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000059")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005A")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000242")]
	Default,
	[Token(Token = "0x4000243")]
	GripSphere,
	[Token(Token = "0x4000244")]
	GripCube,
	[Token(Token = "0x4000245")]
	Count
}
[Token(Token = "0x200005B")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000247")]
	Body,
	[Token(Token = "0x4000248")]
	Clothing,
	[Token(Token = "0x4000249")]
	Eyewear,
	[Token(Token = "0x400024A")]
	Hair,
	[Token(Token = "0x400024B")]
	Beard,
	[Token(Token = "0x400024C")]
	Count
}
[Token(Token = "0x200005C")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200005D")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200005F")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000060")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000256")]
	AvatarHead,
	[Token(Token = "0x4000257")]
	AvatarHand,
	[Token(Token = "0x4000258")]
	Object,
	[Token(Token = "0x4000259")]
	ObjectStatic,
	[Token(Token = "0x400025A")]
	Count
}
[Token(Token = "0x2000061")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000062")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000063")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000064")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000065")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000266")]
	Point,
	[Token(Token = "0x4000267")]
	Direction,
	[Token(Token = "0x4000268")]
	Spot,
	[Token(Token = "0x4000269")]
	Count
}
[Token(Token = "0x2000066")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000067")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000068")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000069")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200006A")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200006B")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200006C")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x7E1D70", Offset = "0x7E1D70", VA = "0x7E1D70")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000280")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000D")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600011A")]
		[Address(RVA = "0x7DE1B8", Offset = "0x7DE1B8", VA = "0x7DE1B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x7E0A2C", Offset = "0x7E0A2C", VA = "0x7E0A2C")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x7E0D7C", Offset = "0x7E0D7C", VA = "0x7E0D7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x7E0DE0", Offset = "0x7E0DE0", VA = "0x7E0DE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x7E1780", Offset = "0x7E1780", VA = "0x7E1780")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x7E17D0", Offset = "0x7E17D0", VA = "0x7E17D0")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x7E1820", Offset = "0x7E1820", VA = "0x7E1820")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x7E18C8", Offset = "0x7E18C8", VA = "0x7E18C8")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x7E1920", Offset = "0x7E1920", VA = "0x7E1920")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x7E15A4", Offset = "0x7E15A4", VA = "0x7E15A4")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x7E19E4", Offset = "0x7E19E4", VA = "0x7E19E4")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x7E1B30", Offset = "0x7E1B30", VA = "0x7E1B30")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x7DE3A4", Offset = "0x7DE3A4", VA = "0x7DE3A4")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x7E1C1C", Offset = "0x7E1C1C", VA = "0x7E1C1C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x7E0D3C", Offset = "0x7E0D3C", VA = "0x7E0D3C")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x7E1CE4", Offset = "0x7E1CE4", VA = "0x7E1CE4")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x7E1D58", Offset = "0x7E1D58", VA = "0x7E1D58")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200006D")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000E")]
	public static string AppID
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x7E1CAC", Offset = "0x7E1CAC", VA = "0x7E1CAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x7E1F1C", Offset = "0x7E1F1C", VA = "0x7E1F1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public static string MobileAppID
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x7E1CC8", Offset = "0x7E1CC8", VA = "0x7E1CC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x7E1F40", Offset = "0x7E1F40", VA = "0x7E1F40")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x7E1DD8", Offset = "0x7E1DD8", VA = "0x7E1DD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x7E1F64", Offset = "0x7E1F64", VA = "0x7E1F64")]
		set
		{
		}
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x7E1FBC", Offset = "0x7E1FBC", VA = "0x7E1FBC")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200006E")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x7E2024", Offset = "0x7E2024", VA = "0x7E2024")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x7E22E8", Offset = "0x7E22E8", VA = "0x7E22E8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x7E21A0", Offset = "0x7E21A0", VA = "0x7E21A0")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x7E24F8", Offset = "0x7E24F8", VA = "0x7E24F8")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200006F")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x7E2508", Offset = "0x7E2508", VA = "0x7E2508")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x7E2658", Offset = "0x7E2658", VA = "0x7E2658")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x7E2808", Offset = "0x7E2808", VA = "0x7E2808")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000070")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000297")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000298")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000299")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x7E2818", Offset = "0x7E2818", VA = "0x7E2818")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x7E37E4", Offset = "0x7E37E4", VA = "0x7E37E4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x7E39F0", Offset = "0x7E39F0", VA = "0x7E39F0")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x7E2F60", Offset = "0x7E2F60", VA = "0x7E2F60")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x7E2C5C", Offset = "0x7E2C5C", VA = "0x7E2C5C")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x7E2DD4", Offset = "0x7E2DD4", VA = "0x7E2DD4")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x7E4214", Offset = "0x7E4214", VA = "0x7E4214")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000071")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000072")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000073")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x7E4B74", Offset = "0x7E4B74", VA = "0x7E4B74")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000074")]
	public struct TextureSet
	{
		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x7E4DC4", Offset = "0x7E4DC4", VA = "0x7E4DC4")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000075")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000150")]
			[Address(RVA = "0x7E5690", Offset = "0x7E5690", VA = "0x7E5690", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000151")]
			[Address(RVA = "0x7E5698", Offset = "0x7E5698", VA = "0x7E5698", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014D")]
		[Address(RVA = "0x7E4F2C", Offset = "0x7E4F2C", VA = "0x7E4F2C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x7E50B8", Offset = "0x7E50B8", VA = "0x7E50B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0x7E50BC", Offset = "0x7E50BC", VA = "0x7E50BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400029D")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400029E")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002A1")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002A2")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002A3")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002A4")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002A5")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002A6")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002A7")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x7E4224", Offset = "0x7E4224", VA = "0x7E4224")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x7E4788", Offset = "0x7E4788", VA = "0x7E4788")]
	public void Update()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x7E496C", Offset = "0x7E496C", VA = "0x7E496C")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x7E49B4", Offset = "0x7E49B4", VA = "0x7E49B4")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x7E48EC", Offset = "0x7E48EC", VA = "0x7E48EC")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x7E4BC4", Offset = "0x7E4BC4", VA = "0x7E4BC4")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x7E4DEC", Offset = "0x7E4DEC", VA = "0x7E4DEC")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x7E4E84", Offset = "0x7E4E84", VA = "0x7E4E84")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x7E19A4", Offset = "0x7E19A4", VA = "0x7E19A4")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x7E4F54", Offset = "0x7E4F54", VA = "0x7E4F54")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000076")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x7E56A0", Offset = "0x7E56A0", VA = "0x7E56A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x7E57E4", Offset = "0x7E57E4", VA = "0x7E57E4")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000077")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000154")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x7E5844", Offset = "0x7E5844", VA = "0x7E5844")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000078")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x7E584C", Offset = "0x7E584C", VA = "0x7E584C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x7E58BC", Offset = "0x7E58BC", VA = "0x7E58BC")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x7E5B14", Offset = "0x7E5B14", VA = "0x7E5B14")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000079")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x7E5B44", Offset = "0x7E5B44", VA = "0x7E5B44")]
	private void Start()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x7E5D60", Offset = "0x7E5D60", VA = "0x7E5D60")]
	private void Update()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x7E5E24", Offset = "0x7E5E24", VA = "0x7E5E24")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x7E6084", Offset = "0x7E6084", VA = "0x7E6084")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x7E60D0", Offset = "0x7E60D0", VA = "0x7E60D0")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x200007A")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000013")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x600015E")]
		[Address(RVA = "0x7E60E0", Offset = "0x7E60E0", VA = "0x7E60E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x7E63E4", Offset = "0x7E63E4", VA = "0x7E63E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x7E64F0", Offset = "0x7E64F0", VA = "0x7E64F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x7E6444", Offset = "0x7E6444", VA = "0x7E6444")]
	public void Init()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x7E6538", Offset = "0x7E6538", VA = "0x7E6538")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x7E6640", Offset = "0x7E6640", VA = "0x7E6640")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x7E606C", Offset = "0x7E606C", VA = "0x7E606C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x7E66C0", Offset = "0x7E66C0", VA = "0x7E66C0")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x7E6568", Offset = "0x7E6568", VA = "0x7E6568")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x7E6690", Offset = "0x7E6690", VA = "0x7E6690")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x7E66F0", Offset = "0x7E66F0", VA = "0x7E66F0")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x7E68F8", Offset = "0x7E68F8", VA = "0x7E68F8")]
	private void Prune()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x7E6700", Offset = "0x7E6700", VA = "0x7E6700")]
	private void Display()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x7E6998", Offset = "0x7E6998", VA = "0x7E6998")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x200007B")]
public static class OVRTouchpad
{
	[Token(Token = "0x200007C")]
	public enum TouchEvent
	{
		[Token(Token = "0x40002CE")]
		SingleTap,
		[Token(Token = "0x40002CF")]
		DoubleTap,
		[Token(Token = "0x40002D0")]
		Left,
		[Token(Token = "0x40002D1")]
		Right,
		[Token(Token = "0x40002D2")]
		Up,
		[Token(Token = "0x40002D3")]
		Down
	}

	[Token(Token = "0x200007D")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x7E6A14", Offset = "0x7E6A14", VA = "0x7E6A14")]
	public static void Create()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x7E6A18", Offset = "0x7E6A18", VA = "0x7E6A18")]
	public static void Update()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x7E6D78", Offset = "0x7E6D78", VA = "0x7E6D78")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x7E6B10", Offset = "0x7E6B10", VA = "0x7E6B10")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x7E5C4C", Offset = "0x7E5C4C", VA = "0x7E5C4C")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200007E")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000174")]
	[Address(RVA = "0x7E6E50", Offset = "0x7E6E50", VA = "0x7E6E50")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x7E6EBC", Offset = "0x7E6EBC", VA = "0x7E6EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x7E6F5C", Offset = "0x7E6F5C", VA = "0x7E6F5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x7E6FA8", Offset = "0x7E6FA8", VA = "0x7E6FA8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x7E6FFC", Offset = "0x7E6FFC", VA = "0x7E6FFC")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x7E7000", Offset = "0x7E7000", VA = "0x7E7000")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200007F")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000080")]
	public enum Result
	{
		[Token(Token = "0x40002DA")]
		Success = 0,
		[Token(Token = "0x40002DB")]
		Unknown = -2200,
		[Token(Token = "0x40002DC")]
		CannotCreateContext = -2201,
		[Token(Token = "0x40002DD")]
		InvalidParam = -2202,
		[Token(Token = "0x40002DE")]
		BadSampleRate = -2203,
		[Token(Token = "0x40002DF")]
		MissingDLL = -2204,
		[Token(Token = "0x40002E0")]
		BadVersion = -2205,
		[Token(Token = "0x40002E1")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000081")]
	public enum AudioDataType
	{
		[Token(Token = "0x40002E3")]
		S16_Mono,
		[Token(Token = "0x40002E4")]
		S16_Stereo,
		[Token(Token = "0x40002E5")]
		F32_Mono,
		[Token(Token = "0x40002E6")]
		F32_Stereo
	}

	[Token(Token = "0x2000082")]
	public enum Viseme
	{
		[Token(Token = "0x40002E8")]
		sil,
		[Token(Token = "0x40002E9")]
		PP,
		[Token(Token = "0x40002EA")]
		FF,
		[Token(Token = "0x40002EB")]
		TH,
		[Token(Token = "0x40002EC")]
		DD,
		[Token(Token = "0x40002ED")]
		kk,
		[Token(Token = "0x40002EE")]
		CH,
		[Token(Token = "0x40002EF")]
		SS,
		[Token(Token = "0x40002F0")]
		nn,
		[Token(Token = "0x40002F1")]
		RR,
		[Token(Token = "0x40002F2")]
		aa,
		[Token(Token = "0x40002F3")]
		E,
		[Token(Token = "0x40002F4")]
		ih,
		[Token(Token = "0x40002F5")]
		oh,
		[Token(Token = "0x40002F6")]
		ou
	}

	[Token(Token = "0x2000083")]
	public enum Signals
	{
		[Token(Token = "0x40002F8")]
		VisemeOn,
		[Token(Token = "0x40002F9")]
		VisemeOff,
		[Token(Token = "0x40002FA")]
		VisemeAmount,
		[Token(Token = "0x40002FB")]
		VisemeSmoothing,
		[Token(Token = "0x40002FC")]
		LaughterAmount
	}

	[Token(Token = "0x2000084")]
	public enum ContextProviders
	{
		[Token(Token = "0x40002FE")]
		Original,
		[Token(Token = "0x40002FF")]
		Enhanced,
		[Token(Token = "0x4000300")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000085")]
	public class Frame
	{
		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x7E83D8", Offset = "0x7E83D8", VA = "0x7E83D8")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x7E8424", Offset = "0x7E8424", VA = "0x7E8424")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000193")]
		[Address(RVA = "0x7E849C", Offset = "0x7E849C", VA = "0x7E849C")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40002D6")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x600017A")]
	[Address(RVA = "0x7E7008", Offset = "0x7E7008", VA = "0x7E7008")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x600017B")]
	[Address(RVA = "0x7E708C", Offset = "0x7E708C", VA = "0x7E708C")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x600017C")]
	[Address(RVA = "0x7E70F0", Offset = "0x7E70F0", VA = "0x7E70F0")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600017D")]
	[Address(RVA = "0x7E718C", Offset = "0x7E718C", VA = "0x7E718C")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600017E")]
	[Address(RVA = "0x7E7254", Offset = "0x7E7254", VA = "0x7E7254")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x600017F")]
	[Address(RVA = "0x7E72D0", Offset = "0x7E72D0", VA = "0x7E72D0")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000180")]
	[Address(RVA = "0x7E734C", Offset = "0x7E734C", VA = "0x7E734C")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000181")]
	[Address(RVA = "0x7E73E8", Offset = "0x7E73E8", VA = "0x7E73E8")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x7E74E4", Offset = "0x7E74E4", VA = "0x7E74E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x7E78C4", Offset = "0x7E78C4", VA = "0x7E78C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x7E7784", Offset = "0x7E7784", VA = "0x7E7784")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x7E79A8", Offset = "0x7E79A8", VA = "0x7E79A8")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x7E7AC8", Offset = "0x7E7AC8", VA = "0x7E7AC8")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x7E7B28", Offset = "0x7E7B28", VA = "0x7E7B28")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x7E7B80", Offset = "0x7E7B80", VA = "0x7E7B80")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x7E7C78", Offset = "0x7E7C78", VA = "0x7E7C78")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x7E7D78", Offset = "0x7E7D78", VA = "0x7E7D78")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x7E7E28", Offset = "0x7E7E28", VA = "0x7E7E28")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x7E7ED8", Offset = "0x7E7ED8", VA = "0x7E7ED8")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x7E7FB8", Offset = "0x7E7FB8", VA = "0x7E7FB8")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x7E8138", Offset = "0x7E8138", VA = "0x7E8138")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x7E82B0", Offset = "0x7E82B0", VA = "0x7E82B0")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000086")]
[RequireComponent(typeof(AudioSource))]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool enableTouchInput;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool audioLoopback;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool showVisemes;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool skipAudioSource;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float gain;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x7E852C", Offset = "0x7E852C", VA = "0x7E852C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x7E8658", Offset = "0x7E8658", VA = "0x7E8658")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x7E8970", Offset = "0x7E8970", VA = "0x7E8970")]
	private void Update()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x7E8C04", Offset = "0x7E8C04", VA = "0x7E8C04")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x7E8C5C", Offset = "0x7E8C5C", VA = "0x7E8C5C")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x7E8CBC", Offset = "0x7E8CBC", VA = "0x7E8CBC")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x7E8E38", Offset = "0x7E8E38", VA = "0x7E8E38")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x7E8FB4", Offset = "0x7E8FB4", VA = "0x7E8FB4")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x7E90C4", Offset = "0x7E90C4", VA = "0x7E90C4")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x7E89A8", Offset = "0x7E89A8", VA = "0x7E89A8")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x7E88CC", Offset = "0x7E88CC", VA = "0x7E88CC")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x7E90D4", Offset = "0x7E90D4", VA = "0x7E90D4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x7E91CC", Offset = "0x7E91CC", VA = "0x7E91CC")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000087")]
[RequireComponent(typeof(AudioSource))]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool enableAcceleration;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000014")]
	public int Smoothing
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x7E935C", Offset = "0x7E935C", VA = "0x7E935C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x7E926C", Offset = "0x7E926C", VA = "0x7E926C")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public uint Context
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x7E9364", Offset = "0x7E9364", VA = "0x7E9364")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000016")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x7E936C", Offset = "0x7E936C", VA = "0x7E936C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x7E9374", Offset = "0x7E9374", VA = "0x7E9374")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x7E9554", Offset = "0x7E9554", VA = "0x7E9554")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x7E96A8", Offset = "0x7E96A8", VA = "0x7E96A8")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x7E96B0", Offset = "0x7E96B0", VA = "0x7E96B0")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x7E979C", Offset = "0x7E979C", VA = "0x7E979C")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x7E9864", Offset = "0x7E9864", VA = "0x7E9864")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x7E91F0", Offset = "0x7E91F0", VA = "0x7E91F0")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000088")]
[RequireComponent(typeof(AudioSource))]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x7E98CC", Offset = "0x7E98CC", VA = "0x7E98CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x7E9A40", Offset = "0x7E9A40", VA = "0x7E9A40")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000089")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public KeyCode laughterKey;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int laughterBlendTarget;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float laughterThreshold;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float laughterMultiplier;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int smoothAmount;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x7E9A44", Offset = "0x7E9A44", VA = "0x7E9A44")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x7E9B94", Offset = "0x7E9B94", VA = "0x7E9B94")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x7E9D94", Offset = "0x7E9D94", VA = "0x7E9D94")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x7E9C7C", Offset = "0x7E9C7C", VA = "0x7E9C7C")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x7E9D1C", Offset = "0x7E9D1C", VA = "0x7E9D1C")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x7E9E44", Offset = "0x7E9E44", VA = "0x7E9E44")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x7E9EFC", Offset = "0x7E9EFC", VA = "0x7E9EFC")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x7E9F54", Offset = "0x7E9F54", VA = "0x7E9F54")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x200008A")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture[] Textures;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int smoothAmount;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x7EA078", Offset = "0x7EA078", VA = "0x7EA078")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x7EA1DC", Offset = "0x7EA1DC", VA = "0x7EA1DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x7EA364", Offset = "0x7EA364", VA = "0x7EA364")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x7EA47C", Offset = "0x7EA47C", VA = "0x7EA47C")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x200008B")]
[RequireComponent(typeof(AudioSource))]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x200008C")]
	public enum micActivation
	{
		[Token(Token = "0x4000335")]
		HoldToSpeak,
		[Token(Token = "0x4000336")]
		PushToSpeak,
		[Token(Token = "0x4000337")]
		ConstantSpeak
	}

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float micInputVolume;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int micFrequency;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public micActivation micControl;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public KeyCode micActivationKey;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string selectedDevice;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000017")]
	public float MicFrequency
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x7EA55C", Offset = "0x7EA55C", VA = "0x7EA55C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x7EA568", Offset = "0x7EA568", VA = "0x7EA568")]
		set
		{
		}
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x7EA5A0", Offset = "0x7EA5A0", VA = "0x7EA5A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x7EA65C", Offset = "0x7EA65C", VA = "0x7EA65C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x7EA69C", Offset = "0x7EA69C", VA = "0x7EA69C")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x7EA7DC", Offset = "0x7EA7DC", VA = "0x7EA7DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x7EAC00", Offset = "0x7EAC00", VA = "0x7EAC00")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x7EAC14", Offset = "0x7EAC14", VA = "0x7EAC14")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x7EAC2C", Offset = "0x7EAC2C", VA = "0x7EAC2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x7EAC30", Offset = "0x7EAC30", VA = "0x7EAC30")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x7EACA4", Offset = "0x7EACA4", VA = "0x7EACA4")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x7EA724", Offset = "0x7EA724", VA = "0x7EA724")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x7EAA70", Offset = "0x7EAA70", VA = "0x7EAA70")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x7EA934", Offset = "0x7EA934", VA = "0x7EA934")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x7EAE7C", Offset = "0x7EAE7C", VA = "0x7EAE7C")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x7EAE84", Offset = "0x7EAE84", VA = "0x7EAE84")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x200008D")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x7E9988", Offset = "0x7E9988", VA = "0x7E9988")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x7EAEB4", Offset = "0x7EAEB4", VA = "0x7EAEB4")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x200008E")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	public delegate void OnClick();

	[Token(Token = "0x2000090")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000091")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000092")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x7EC180", Offset = "0x7EC180", VA = "0x7EC180")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x7ECFEC", Offset = "0x7ECFEC", VA = "0x7ECFEC")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000093")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x7EC448", Offset = "0x7EC448", VA = "0x7EC448")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x7ED010", Offset = "0x7ED010", VA = "0x7ED010")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000094")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x7EC6BC", Offset = "0x7EC6BC", VA = "0x7EC6BC")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x7ED034", Offset = "0x7ED034", VA = "0x7ED034")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000095")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x7EC8B8", Offset = "0x7EC8B8", VA = "0x7EC8B8")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x7ED05C", Offset = "0x7ED05C", VA = "0x7ED05C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000096")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x7ECBB0", Offset = "0x7ECBB0", VA = "0x7ECBB0")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x7ED084", Offset = "0x7ED084", VA = "0x7ED084")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400033A")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400033B")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400033C")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000349")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400034A")]
	private const float marginH = 16f;

	[Token(Token = "0x400034B")]
	private const float marginV = 16f;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x7EAF3C", Offset = "0x7EAF3C", VA = "0x7EAF3C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x7EB4A0", Offset = "0x7EB4A0", VA = "0x7EB4A0")]
	public void Show()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x7EBA04", Offset = "0x7EBA04", VA = "0x7EBA04")]
	public void Hide()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x7EB80C", Offset = "0x7EB80C", VA = "0x7EB80C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x7EBB80", Offset = "0x7EBB80", VA = "0x7EBB80")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x7EBEFC", Offset = "0x7EBEFC", VA = "0x7EBEFC")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x7EC188", Offset = "0x7EC188", VA = "0x7EC188")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x7EC280", Offset = "0x7EC280", VA = "0x7EC280")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x7EC450", Offset = "0x7EC450", VA = "0x7EC450")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x7EC4E8", Offset = "0x7EC4E8", VA = "0x7EC4E8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x7EC6C4", Offset = "0x7EC6C4", VA = "0x7EC6C4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x7EC8C0", Offset = "0x7EC8C0", VA = "0x7EC8C0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x7ECBB8", Offset = "0x7ECBB8", VA = "0x7ECBB8")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x7ECC4C", Offset = "0x7ECC4C", VA = "0x7ECC4C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000097")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x7ED0AC", Offset = "0x7ED0AC", VA = "0x7ED0AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x7ED150", Offset = "0x7ED150", VA = "0x7ED150")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x7ED1EC", Offset = "0x7ED1EC", VA = "0x7ED1EC")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x7ED224", Offset = "0x7ED224", VA = "0x7ED224")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000098")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000099")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000368")]
		On,
		[Token(Token = "0x4000369")]
		Off,
		[Token(Token = "0x400036A")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000018")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x7ED22C", Offset = "0x7ED22C", VA = "0x7ED22C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x7EB460", Offset = "0x7EB460", VA = "0x7EB460")]
		set
		{
		}
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x7ED234", Offset = "0x7ED234", VA = "0x7ED234")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x7ED28C", Offset = "0x7ED28C", VA = "0x7ED28C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x7ED3C4", Offset = "0x7ED3C4", VA = "0x7ED3C4", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x7ED3E0", Offset = "0x7ED3E0", VA = "0x7ED3E0", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x7ED430", Offset = "0x7ED430", VA = "0x7ED430")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x7ED5D0", Offset = "0x7ED5D0", VA = "0x7ED5D0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x7ED6E0", Offset = "0x7ED6E0", VA = "0x7ED6E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x7ED764", Offset = "0x7ED764", VA = "0x7ED764")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x7ED824", Offset = "0x7ED824", VA = "0x7ED824")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x7ED8CC", Offset = "0x7ED8CC", VA = "0x7ED8CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x7ED9B8", Offset = "0x7ED9B8", VA = "0x7ED9B8")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200009A")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x7ED9C8", Offset = "0x7ED9C8", VA = "0x7ED9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x7EDC48", Offset = "0x7EDC48", VA = "0x7EDC48")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x7EDF88", Offset = "0x7EDF88", VA = "0x7EDF88")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200009B")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x7EDF90", Offset = "0x7EDF90", VA = "0x7EDF90")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x7EE020", Offset = "0x7EE020", VA = "0x7EE020")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x7EE248", Offset = "0x7EE248", VA = "0x7EE248")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200009C")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000019")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x7EE2EC", Offset = "0x7EE2EC", VA = "0x7EE2EC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x7EDBAC", Offset = "0x7EDBAC", VA = "0x7EDBAC")]
		add
		{
		}
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x7EE250", Offset = "0x7EE250", VA = "0x7EE250")]
		remove
		{
		}
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x7EE2F8", Offset = "0x7EE2F8", VA = "0x7EE2F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x7EE464", Offset = "0x7EE464", VA = "0x7EE464")]
	private void Update()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x7EE5E8", Offset = "0x7EE5E8", VA = "0x7EE5E8")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x7EE5F0", Offset = "0x7EE5F0", VA = "0x7EE5F0")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x200009D")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000378")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000379")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400037A")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float HeightOffset;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinimumHeight;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MaximumHeight;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x7EE600", Offset = "0x7EE600", VA = "0x7EE600")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x7EE608", Offset = "0x7EE608", VA = "0x7EE608")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x7EE698", Offset = "0x7EE698", VA = "0x7EE698")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x7EE7BC", Offset = "0x7EE7BC", VA = "0x7EE7BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x7EE8E0", Offset = "0x7EE8E0", VA = "0x7EE8E0")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x7EEC00", Offset = "0x7EEC00", VA = "0x7EEC00")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x7EEE60", Offset = "0x7EEE60", VA = "0x7EEE60")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200009E")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x7EF5B8", Offset = "0x7EF5B8", VA = "0x7EF5B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x7EF664", Offset = "0x7EF664", VA = "0x7EF664")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200009F")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20000A0")]
	public enum States
	{
		[Token(Token = "0x40003A8")]
		Ready,
		[Token(Token = "0x40003A9")]
		Aim,
		[Token(Token = "0x40003AA")]
		CancelAim,
		[Token(Token = "0x40003AB")]
		PreTeleport,
		[Token(Token = "0x40003AC")]
		CancelTeleport,
		[Token(Token = "0x40003AD")]
		Teleporting,
		[Token(Token = "0x40003AE")]
		PostTeleport
	}

	[Token(Token = "0x20000A1")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40003B0")]
		None,
		[Token(Token = "0x40003B1")]
		Aim,
		[Token(Token = "0x40003B2")]
		PreTeleport,
		[Token(Token = "0x40003B3")]
		Teleport
	}

	[Token(Token = "0x20000A2")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40003B5")]
		Point,
		[Token(Token = "0x40003B6")]
		Sphere,
		[Token(Token = "0x40003B7")]
		Capsule
	}

	[Token(Token = "0x20000A3")]
	public class AimData
	{
		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700001D")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000246")]
			[Address(RVA = "0x7F1384", Offset = "0x7F1384", VA = "0x7F1384")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000247")]
			[Address(RVA = "0x7F138C", Offset = "0x7F138C", VA = "0x7F138C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0x7F12FC", Offset = "0x7F12FC", VA = "0x7F12FC")]
		public AimData()
		{
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0x7F1394", Offset = "0x7F1394", VA = "0x7F1394")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000A4")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600024C")]
			[Address(RVA = "0x7F14FC", Offset = "0x7F14FC", VA = "0x7F14FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600024D")]
			[Address(RVA = "0x7F1504", Offset = "0x7F1504", VA = "0x7F1504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000249")]
		[Address(RVA = "0x7F0050", Offset = "0x7F0050", VA = "0x7F0050")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0x7F13EC", Offset = "0x7F13EC", VA = "0x7F13EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600024B")]
		[Address(RVA = "0x7F13F0", Offset = "0x7F13F0", VA = "0x7F13F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A5")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000251")]
			[Address(RVA = "0x7F1668", Offset = "0x7F1668", VA = "0x7F1668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000252")]
			[Address(RVA = "0x7F1670", Offset = "0x7F1670", VA = "0x7F1670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600024E")]
		[Address(RVA = "0x7F04D8", Offset = "0x7F04D8", VA = "0x7F04D8")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0x7F150C", Offset = "0x7F150C", VA = "0x7F150C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0x7F1510", Offset = "0x7F1510", VA = "0x7F1510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A6")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000256")]
			[Address(RVA = "0x7F172C", Offset = "0x7F172C", VA = "0x7F172C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000257")]
			[Address(RVA = "0x7F1734", Offset = "0x7F1734", VA = "0x7F1734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0x7F06AC", Offset = "0x7F06AC", VA = "0x7F06AC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0x7F1678", Offset = "0x7F1678", VA = "0x7F1678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0x7F167C", Offset = "0x7F167C", VA = "0x7F167C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A7")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600025B")]
			[Address(RVA = "0x7F1824", Offset = "0x7F1824", VA = "0x7F1824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600025C")]
			[Address(RVA = "0x7F182C", Offset = "0x7F182C", VA = "0x7F182C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0x7F0880", Offset = "0x7F0880", VA = "0x7F0880")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000259")]
		[Address(RVA = "0x7F173C", Offset = "0x7F173C", VA = "0x7F173C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0x7F1740", Offset = "0x7F1740", VA = "0x7F1740", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A8")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000260")]
			[Address(RVA = "0x7F18E8", Offset = "0x7F18E8", VA = "0x7F18E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000261")]
			[Address(RVA = "0x7F18F0", Offset = "0x7F18F0", VA = "0x7F18F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x7F0A54", Offset = "0x7F0A54", VA = "0x7F0A54")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x7F1834", Offset = "0x7F1834", VA = "0x7F1834", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0x7F1838", Offset = "0x7F1838", VA = "0x7F1838", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A9")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000265")]
			[Address(RVA = "0x7F19DC", Offset = "0x7F19DC", VA = "0x7F19DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000266")]
			[Address(RVA = "0x7F19E4", Offset = "0x7F19E4", VA = "0x7F19E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x7F0C28", Offset = "0x7F0C28", VA = "0x7F0C28")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x7F18F8", Offset = "0x7F18F8", VA = "0x7F18F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x7F18FC", Offset = "0x7F18FC", VA = "0x7F18FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000AA")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026A")]
			[Address(RVA = "0x7F1AF0", Offset = "0x7F1AF0", VA = "0x7F1AF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026B")]
			[Address(RVA = "0x7F1AF8", Offset = "0x7F1AF8", VA = "0x7F1AF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x7F0DFC", Offset = "0x7F0DFC", VA = "0x7F0DFC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x7F19EC", Offset = "0x7F19EC", VA = "0x7F19EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x7F19F0", Offset = "0x7F19F0", VA = "0x7F19F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float AimCollisionRadius;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700001A")]
	public States CurrentState
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x7EF6B4", Offset = "0x7EF6B4", VA = "0x7EF6B4")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000214")]
		[Address(RVA = "0x7EF6BC", Offset = "0x7EF6BC", VA = "0x7EF6BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0x7EF88C", Offset = "0x7EF88C", VA = "0x7EF88C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001C")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000219")]
		[Address(RVA = "0x7EF8B0", Offset = "0x7EF8B0", VA = "0x7EF8B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x7EF8B8", Offset = "0x7EF8B8", VA = "0x7EF8B8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x7EF6C4", Offset = "0x7EF6C4", VA = "0x7EF6C4")]
		add
		{
		}
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x7EF774", Offset = "0x7EF774", VA = "0x7EF774")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x7EFF18", Offset = "0x7EFF18", VA = "0x7EFF18")]
		add
		{
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x7EFFB4", Offset = "0x7EFFB4", VA = "0x7EFFB4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x7F0078", Offset = "0x7F0078", VA = "0x7F0078")]
		add
		{
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x7F0114", Offset = "0x7F0114", VA = "0x7F0114")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x7F01B0", Offset = "0x7F01B0", VA = "0x7F01B0")]
		add
		{
		}
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x7F0260", Offset = "0x7F0260", VA = "0x7F0260")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x7F032C", Offset = "0x7F032C", VA = "0x7F032C")]
		add
		{
		}
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x7F03C8", Offset = "0x7F03C8", VA = "0x7F03C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x7F0500", Offset = "0x7F0500", VA = "0x7F0500")]
		add
		{
		}
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x7F059C", Offset = "0x7F059C", VA = "0x7F059C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x7F06D4", Offset = "0x7F06D4", VA = "0x7F06D4")]
		add
		{
		}
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x7F0770", Offset = "0x7F0770", VA = "0x7F0770")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x7F08A8", Offset = "0x7F08A8", VA = "0x7F08A8")]
		add
		{
		}
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x7F0944", Offset = "0x7F0944", VA = "0x7F0944")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x7F0A7C", Offset = "0x7F0A7C", VA = "0x7F0A7C")]
		add
		{
		}
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x7F0B18", Offset = "0x7F0B18", VA = "0x7F0B18")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0x7F0C50", Offset = "0x7F0C50", VA = "0x7F0C50")]
		add
		{
		}
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x7F0CEC", Offset = "0x7F0CEC", VA = "0x7F0CEC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x7F0E24", Offset = "0x7F0E24", VA = "0x7F0E24")]
		add
		{
		}
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x7F0ED4", Offset = "0x7F0ED4", VA = "0x7F0ED4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x7EF66C", Offset = "0x7EF66C", VA = "0x7EF66C")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x7EF690", Offset = "0x7EF690", VA = "0x7EF690")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x7EF824", Offset = "0x7EF824", VA = "0x7EF824")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x7EF8C0", Offset = "0x7EF8C0", VA = "0x7EF8C0")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x7EFB88", Offset = "0x7EFB88", VA = "0x7EFB88")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x7EFC30", Offset = "0x7EFC30", VA = "0x7EFC30")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x7EFD1C", Offset = "0x7EFD1C", VA = "0x7EFD1C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x7EFD38", Offset = "0x7EFD38", VA = "0x7EFD38")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x7EFDE8", Offset = "0x7EFDE8", VA = "0x7EFDE8")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x7EFE18", Offset = "0x7EFE18", VA = "0x7EFE18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x7EFE78", Offset = "0x7EFE78", VA = "0x7EFE78", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x7EFF10", Offset = "0x7EFF10", VA = "0x7EFF10", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x7EFE9C", Offset = "0x7EFE9C", VA = "0x7EFE9C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x7F0310", Offset = "0x7F0310", VA = "0x7F0310")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x7F0464", Offset = "0x7F0464", VA = "0x7F0464")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x7F0638", Offset = "0x7F0638", VA = "0x7F0638")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x7F080C", Offset = "0x7F080C", VA = "0x7F080C")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x7F09E0", Offset = "0x7F09E0", VA = "0x7F09E0")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x7F0BB4", Offset = "0x7F0BB4", VA = "0x7F0BB4")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x7F0D88", Offset = "0x7F0D88", VA = "0x7F0D88")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x7F0F84", Offset = "0x7F0F84", VA = "0x7F0F84")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x7F1098", Offset = "0x7F1098", VA = "0x7F1098")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x7F10C8", Offset = "0x7F10C8", VA = "0x7F10C8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x7F1204", Offset = "0x7F1204", VA = "0x7F1204")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x7F12EC", Offset = "0x7F12EC", VA = "0x7F12EC")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000AB")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0x7EE720", Offset = "0x7EE720", VA = "0x7EE720")]
		add
		{
		}
		[Token(Token = "0x600026D")]
		[Address(RVA = "0x7EE844", Offset = "0x7EE844", VA = "0x7EE844")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0x7F1B00", Offset = "0x7F1B00", VA = "0x7F1B00")]
		add
		{
		}
		[Token(Token = "0x600026F")]
		[Address(RVA = "0x7F1B9C", Offset = "0x7F1B9C", VA = "0x7F1B9C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x7F1C38", Offset = "0x7F1C38", VA = "0x7F1C38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x7F1D18", Offset = "0x7F1D18", VA = "0x7F1D18")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x7F1D8C", Offset = "0x7F1D8C", VA = "0x7F1D8C")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x7F1EB0", Offset = "0x7F1EB0", VA = "0x7F1EB0")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x7F2128", Offset = "0x7F2128", VA = "0x7F2128")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x7F22D4", Offset = "0x7F22D4", VA = "0x7F22D4")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000AC")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000276")]
	[Address(RVA = "0x7F22F4", Offset = "0x7F22F4", VA = "0x7F22F4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x7F2320", Offset = "0x7F2320", VA = "0x7F2320", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000278")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x7F23B0", Offset = "0x7F23B0", VA = "0x7F23B0")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000AD")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Range;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x7F23B8", Offset = "0x7F23B8", VA = "0x7F23B8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x7F2548", Offset = "0x7F2548", VA = "0x7F2548")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000AE")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Range;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinimumElevation;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Gravity;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float AimVelocity;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float AimStep;

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x7F2558", Offset = "0x7F2558", VA = "0x7F2558", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x7F272C", Offset = "0x7F272C", VA = "0x7F272C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000AF")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x7F2740", Offset = "0x7F2740", VA = "0x7F2740")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x7F286C", Offset = "0x7F286C", VA = "0x7F286C")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x7F2898", Offset = "0x7F2898", VA = "0x7F2898")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x7F28C4", Offset = "0x7F28C4", VA = "0x7F28C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x7F2968", Offset = "0x7F2968", VA = "0x7F2968", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x7F29B0", Offset = "0x7F29B0", VA = "0x7F29B0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x7F29FC", Offset = "0x7F29FC", VA = "0x7F29FC")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000B0")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform PositionIndicator;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700002C")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000285")]
		[Address(RVA = "0x8C1580", Offset = "0x8C1580", VA = "0x8C1580")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x8C1588", Offset = "0x8C1588", VA = "0x8C1588")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x8C1718", Offset = "0x8C1718", VA = "0x8C1718")]
		add
		{
		}
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x8C17C8", Offset = "0x8C17C8", VA = "0x8C17C8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x8C1594", Offset = "0x8C1594", VA = "0x8C1594")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x8C1618", Offset = "0x8C1618", VA = "0x8C1618")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x8C16E0", Offset = "0x8C16E0", VA = "0x8C16E0")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x8C1714", Offset = "0x8C1714", VA = "0x8C1714")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x8C1878", Offset = "0x8C1878", VA = "0x8C1878")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x8C189C", Offset = "0x8C189C", VA = "0x8C189C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x8C18BC", Offset = "0x8C18BC", VA = "0x8C18BC", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000B1")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000B2")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029C")]
			[Address(RVA = "0x8C1EB0", Offset = "0x8C1EB0", VA = "0x8C1EB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600029D")]
			[Address(RVA = "0x8C1EB8", Offset = "0x8C1EB8", VA = "0x8C1EB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0x8C1D1C", Offset = "0x8C1D1C", VA = "0x8C1D1C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0x8C1E20", Offset = "0x8C1E20", VA = "0x8C1E20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x8C1E24", Offset = "0x8C1E24", VA = "0x8C1E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000B3")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002A1")]
			[Address(RVA = "0x8C1F5C", Offset = "0x8C1F5C", VA = "0x8C1F5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A2")]
			[Address(RVA = "0x8C1F64", Offset = "0x8C1F64", VA = "0x8C1F64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x8C1DB8", Offset = "0x8C1DB8", VA = "0x8C1DB8")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x8C1EC0", Offset = "0x8C1EC0", VA = "0x8C1EC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x8C1EC4", Offset = "0x8C1EC4", VA = "0x8C1EC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x8C1AB0", Offset = "0x8C1AB0", VA = "0x8C1AB0")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x8C1B8C", Offset = "0x8C1B8C", VA = "0x8C1B8C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x8C1BEC", Offset = "0x8C1BEC", VA = "0x8C1BEC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x8C1CA8", Offset = "0x8C1CA8", VA = "0x8C1CA8")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x8C1D44", Offset = "0x8C1D44", VA = "0x8C1D44")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000295")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000296")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x8C1DE0", Offset = "0x8C1DE0", VA = "0x8C1DE0")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x8C1E00", Offset = "0x8C1E00", VA = "0x8C1E00")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000B4")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool FastTeleport;

	[Token(Token = "0x17000031")]
	public Transform Pointer
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x8C1F6C", Offset = "0x8C1F6C", VA = "0x8C1F6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x8C1F74", Offset = "0x8C1F74", VA = "0x8C1F74")]
		private set
		{
		}
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x8C1F7C", Offset = "0x8C1F7C", VA = "0x8C1F7C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x8C20A8", Offset = "0x8C20A8", VA = "0x8C20A8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x8C215C", Offset = "0x8C215C", VA = "0x8C215C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000B5")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000B6")]
	public enum InputModes
	{
		[Token(Token = "0x4000408")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000409")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400040A")]
		ThumbstickTeleport,
		[Token(Token = "0x400040B")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000B7")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400040D")]
		A,
		[Token(Token = "0x400040E")]
		B,
		[Token(Token = "0x400040F")]
		LeftTrigger,
		[Token(Token = "0x4000410")]
		LeftThumbstick,
		[Token(Token = "0x4000411")]
		RightTrigger,
		[Token(Token = "0x4000412")]
		RightThumbstick,
		[Token(Token = "0x4000413")]
		X,
		[Token(Token = "0x4000414")]
		Y
	}

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public InputModes InputMode;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x8C2160", Offset = "0x8C2160", VA = "0x8C2160", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x8C2594", Offset = "0x8C2594", VA = "0x8C2594", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x8C2650", Offset = "0x8C2650", VA = "0x8C2650")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000B8")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000B9")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000419")]
		HeadRelative,
		[Token(Token = "0x400041A")]
		ForwardFacing
	}

	[Token(Token = "0x20000BA")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B7")]
			[Address(RVA = "0x8C2B10", Offset = "0x8C2B10", VA = "0x8C2B10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B8")]
			[Address(RVA = "0x8C2B18", Offset = "0x8C2B18", VA = "0x8C2B18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x8C2920", Offset = "0x8C2920", VA = "0x8C2920")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x8C2A60", Offset = "0x8C2A60", VA = "0x8C2A60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x8C2A64", Offset = "0x8C2A64", VA = "0x8C2A64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x8C2740", Offset = "0x8C2740", VA = "0x8C2740")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x8C2828", Offset = "0x8C2828", VA = "0x8C2828")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x8C2830", Offset = "0x8C2830", VA = "0x8C2830", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x8C2870", Offset = "0x8C2870", VA = "0x8C2870", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x8C28AC", Offset = "0x8C28AC", VA = "0x8C28AC")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002B0")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002B1")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x8C2948", Offset = "0x8C2948", VA = "0x8C2948")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x8C2A40", Offset = "0x8C2A40", VA = "0x8C2A40")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000BB")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x8C2B20", Offset = "0x8C2B20", VA = "0x8C2B20", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x8C2B24", Offset = "0x8C2B24", VA = "0x8C2B24", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x8C2B9C", Offset = "0x8C2B9C", VA = "0x8C2B9C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000BC")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x8C2BA0", Offset = "0x8C2BA0", VA = "0x8C2BA0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x8C2BF0", Offset = "0x8C2BF0", VA = "0x8C2BF0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x8C306C", Offset = "0x8C306C", VA = "0x8C306C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000BD")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x8C3070", Offset = "0x8C3070", VA = "0x8C3070", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x8C30A8", Offset = "0x8C30A8", VA = "0x8C30A8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x8C3580", Offset = "0x8C3580", VA = "0x8C3580")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000BE")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x8C3590", Offset = "0x8C3590", VA = "0x8C3590")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x8C3598", Offset = "0x8C3598", VA = "0x8C3598")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x8C3684", Offset = "0x8C3684", VA = "0x8C3684")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x8C36A0", Offset = "0x8C36A0", VA = "0x8C36A0")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000BF")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000034")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x8C36B8", Offset = "0x8C36B8", VA = "0x8C36B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x8C36C0", Offset = "0x8C36C0", VA = "0x8C36C0")]
		private set
		{
		}
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x8C36C8", Offset = "0x8C36C8", VA = "0x8C36C8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x8C3730", Offset = "0x8C3730", VA = "0x8C3730", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x8C3758", Offset = "0x8C3758", VA = "0x8C3758")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x8C1BE0", Offset = "0x8C1BE0", VA = "0x8C1BE0", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x8C1CA0", Offset = "0x8C1CA0", VA = "0x8C1CA0", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x8C1B84", Offset = "0x8C1B84", VA = "0x8C1B84")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000C0")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000C1")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D9")]
			[Address(RVA = "0x8C3E44", Offset = "0x8C3E44", VA = "0x8C3E44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002DA")]
			[Address(RVA = "0x8C3E4C", Offset = "0x8C3E4C", VA = "0x8C3E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x8C3A0C", Offset = "0x8C3A0C", VA = "0x8C3A0C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x8C3B8C", Offset = "0x8C3B8C", VA = "0x8C3B8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x8C3B90", Offset = "0x8C3B90", VA = "0x8C3B90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000434")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x8C3828", Offset = "0x8C3828", VA = "0x8C3828")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x8C3944", Offset = "0x8C3944", VA = "0x8C3944", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x8C3970", Offset = "0x8C3970", VA = "0x8C3970", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x8C3998", Offset = "0x8C3998", VA = "0x8C3998")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x8C3A34", Offset = "0x8C3A34", VA = "0x8C3A34", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002D3")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x8C3A50", Offset = "0x8C3A50", VA = "0x8C3A50", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x8C3B6C", Offset = "0x8C3B6C", VA = "0x8C3B6C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000C2")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x8C3E54", Offset = "0x8C3E54", VA = "0x8C3E54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x8C3EBC", Offset = "0x8C3EBC", VA = "0x8C3EBC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x8C4028", Offset = "0x8C4028", VA = "0x8C4028", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x8C4118", Offset = "0x8C4118", VA = "0x8C4118")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000C3")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float LOSOffset;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x8C4124", Offset = "0x8C4124", VA = "0x8C4124", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x8C4324", Offset = "0x8C4324", VA = "0x8C4324")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000C4")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x8C4330", Offset = "0x8C4330", VA = "0x8C4330", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x8C449C", Offset = "0x8C449C", VA = "0x8C449C")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000C5")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x8C44A0", Offset = "0x8C44A0", VA = "0x8C44A0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x8C4528", Offset = "0x8C4528", VA = "0x8C4528", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002E5")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x8C45AC", Offset = "0x8C45AC", VA = "0x8C45AC")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000C6")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000C7")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002ED")]
			[Address(RVA = "0x8C4914", Offset = "0x8C4914", VA = "0x8C4914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002EE")]
			[Address(RVA = "0x8C491C", Offset = "0x8C491C", VA = "0x8C491C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x8C4648", Offset = "0x8C4648", VA = "0x8C4648")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x8C480C", Offset = "0x8C480C", VA = "0x8C480C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x8C4810", Offset = "0x8C4810", VA = "0x8C4810", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float TransitionDuration;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TeleportDelay;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x8C45B4", Offset = "0x8C45B4", VA = "0x8C45B4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x8C45D4", Offset = "0x8C45D4", VA = "0x8C45D4")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x8C4670", Offset = "0x8C4670", VA = "0x8C4670")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000C8")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x8C4924", Offset = "0x8C4924", VA = "0x8C4924", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x8C4940", Offset = "0x8C4940", VA = "0x8C4940")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000C9")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000CA")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002F7")]
			[Address(RVA = "0x8C4B70", Offset = "0x8C4B70", VA = "0x8C4B70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F8")]
			[Address(RVA = "0x8C4B78", Offset = "0x8C4B78", VA = "0x8C4B78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x8C49DC", Offset = "0x8C49DC", VA = "0x8C49DC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x8C4A4C", Offset = "0x8C4A4C", VA = "0x8C4A4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x8C4A50", Offset = "0x8C4A50", VA = "0x8C4A50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float TransitionDuration;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x8C4948", Offset = "0x8C4948", VA = "0x8C4948", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x8C4968", Offset = "0x8C4968", VA = "0x8C4968")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x8C4A04", Offset = "0x8C4A04", VA = "0x8C4A04")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000CB")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700003B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x8C4B80", Offset = "0x8C4B80", VA = "0x8C4B80")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x8C4E70", Offset = "0x8C4E70", VA = "0x8C4E70")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x8C50F0", Offset = "0x8C50F0", VA = "0x8C50F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x8C5164", Offset = "0x8C5164", VA = "0x8C5164")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003F")]
	public static long Duration
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x8C5268", Offset = "0x8C5268", VA = "0x8C5268")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000040")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x8C5370", Offset = "0x8C5370", VA = "0x8C5370")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x8C5478", Offset = "0x8C5478", VA = "0x8C5478")]
		set
		{
		}
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x8C55E0", Offset = "0x8C55E0", VA = "0x8C55E0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x8C57F8", Offset = "0x8C57F8", VA = "0x8C57F8")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x8C5900", Offset = "0x8C5900", VA = "0x8C5900")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x8C5A08", Offset = "0x8C5A08", VA = "0x8C5A08")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x8C5B10", Offset = "0x8C5B10", VA = "0x8C5B10")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x8C5C80", Offset = "0x8C5C80", VA = "0x8C5C80")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x8C5DEC", Offset = "0x8C5DEC", VA = "0x8C5DEC")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000CC")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000308")]
		[Address(RVA = "0x8C6040", Offset = "0x8C6040", VA = "0x8C6040")]
		add
		{
		}
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x8C60DC", Offset = "0x8C60DC", VA = "0x8C60DC")]
		remove
		{
		}
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x8C6178", Offset = "0x8C6178", VA = "0x8C6178", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x8C6194", Offset = "0x8C6194", VA = "0x8C6194")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000CD")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000CE")]
	public enum ButtonType
	{
		[Token(Token = "0x4000462")]
		Play,
		[Token(Token = "0x4000463")]
		Pause,
		[Token(Token = "0x4000464")]
		FastForward,
		[Token(Token = "0x4000465")]
		Rewind,
		[Token(Token = "0x4000466")]
		SkipForward,
		[Token(Token = "0x4000467")]
		SkipBack,
		[Token(Token = "0x4000468")]
		Stop
	}

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000041")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x8C619C", Offset = "0x8C619C", VA = "0x8C619C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600030D")]
		[Address(RVA = "0x8C61A4", Offset = "0x8C61A4", VA = "0x8C61A4")]
		set
		{
		}
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x8C61C8", Offset = "0x8C61C8", VA = "0x8C61C8", Slot = "43")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x8C701C", Offset = "0x8C701C", VA = "0x8C701C")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000CF")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000D0")]
	public enum VideoShape
	{
		[Token(Token = "0x400047C")]
		_360,
		[Token(Token = "0x400047D")]
		_180,
		[Token(Token = "0x400047E")]
		Quad
	}

	[Token(Token = "0x20000D1")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000480")]
		Mono,
		[Token(Token = "0x4000481")]
		TopBottom,
		[Token(Token = "0x4000482")]
		LeftRight,
		[Token(Token = "0x4000483")]
		BottomTop
	}

	[Token(Token = "0x20000D2")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000326")]
			[Address(RVA = "0x8C8494", Offset = "0x8C8494", VA = "0x8C8494", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000327")]
			[Address(RVA = "0x8C849C", Offset = "0x8C849C", VA = "0x8C849C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x8C7650", Offset = "0x8C7650", VA = "0x8C7650")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x8C82E8", Offset = "0x8C82E8", VA = "0x8C82E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x8C82EC", Offset = "0x8C82EC", VA = "0x8C82EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000D3")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x8C7948", Offset = "0x8C7948", VA = "0x8C7948")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x8C84A4", Offset = "0x8C84A4", VA = "0x8C84A4")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000042")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x8C7074", Offset = "0x8C7074", VA = "0x8C7074")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x8C707C", Offset = "0x8C707C", VA = "0x8C707C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public long Duration
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0x8C7088", Offset = "0x8C7088", VA = "0x8C7088")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x8C7090", Offset = "0x8C7090", VA = "0x8C7090")]
		private set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x8C7098", Offset = "0x8C7098", VA = "0x8C7098")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x8C70A0", Offset = "0x8C70A0", VA = "0x8C70A0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x8C70A8", Offset = "0x8C70A8", VA = "0x8C70A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x8C732C", Offset = "0x8C732C", VA = "0x8C732C")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x8C738C", Offset = "0x8C738C", VA = "0x8C738C")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x8C75DC", Offset = "0x8C75DC", VA = "0x8C75DC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x8C7678", Offset = "0x8C7678", VA = "0x8C7678")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x8C7950", Offset = "0x8C7950", VA = "0x8C7950")]
	public void Play()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x8C79D4", Offset = "0x8C79D4", VA = "0x8C79D4")]
	public void Pause()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x8C7A54", Offset = "0x8C7A54", VA = "0x8C7A54")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x8C7B40", Offset = "0x8C7B40", VA = "0x8C7B40")]
	private void Update()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x8C80DC", Offset = "0x8C80DC", VA = "0x8C80DC")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x8C8178", Offset = "0x8C8178", VA = "0x8C8178")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x8C81F8", Offset = "0x8C81F8", VA = "0x8C81F8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x8C82D8", Offset = "0x8C82D8", VA = "0x8C82D8")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000D4")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000D5")]
	private enum PlaybackState
	{
		[Token(Token = "0x40004A0")]
		Playing,
		[Token(Token = "0x40004A1")]
		Paused,
		[Token(Token = "0x40004A2")]
		Rewinding,
		[Token(Token = "0x40004A3")]
		FastForwarding
	}

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x8C8578", Offset = "0x8C8578", VA = "0x8C8578")]
	private void Start()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x8C88A4", Offset = "0x8C88A4", VA = "0x8C88A4")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x8C8A74", Offset = "0x8C8A74", VA = "0x8C8A74")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x8C8B98", Offset = "0x8C8B98", VA = "0x8C8B98")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x8C8C94", Offset = "0x8C8C94", VA = "0x8C8C94")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x8C8B6C", Offset = "0x8C8B6C", VA = "0x8C8B6C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x8C8CF4", Offset = "0x8C8CF4", VA = "0x8C8CF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x8C87A4", Offset = "0x8C87A4", VA = "0x8C87A4")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x8C9024", Offset = "0x8C9024", VA = "0x8C9024")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000D6")]
[RequireComponent(typeof(OVROverlay))]
[ExecuteInEditMode]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20000D7")]
	private enum CubeFace
	{
		[Token(Token = "0x40004B8")]
		Right,
		[Token(Token = "0x40004B9")]
		Left,
		[Token(Token = "0x40004BA")]
		Top,
		[Token(Token = "0x40004BB")]
		Bottom,
		[Token(Token = "0x40004BC")]
		Front,
		[Token(Token = "0x40004BD")]
		Back,
		[Token(Token = "0x40004BE")]
		COUNT
	}

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x8C9034", Offset = "0x8C9034", VA = "0x8C9034")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x8C91E4", Offset = "0x8C91E4", VA = "0x8C91E4")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x8C9328", Offset = "0x8C9328", VA = "0x8C9328")]
	private void Update()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x8C9730", Offset = "0x8C9730", VA = "0x8C9730")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x8C9A24", Offset = "0x8C9A24", VA = "0x8C9A24")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x8CB7C4", Offset = "0x8CB7C4", VA = "0x8CB7C4")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x8CB7FC", Offset = "0x8CB7FC", VA = "0x8CB7FC")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x8C9D5C", Offset = "0x8C9D5C", VA = "0x8C9D5C")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x8CB850", Offset = "0x8CB850", VA = "0x8CB850")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x8CB990", Offset = "0x8CB990", VA = "0x8CB990")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x8CA4E0", Offset = "0x8CA4E0", VA = "0x8CA4E0")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x8CAA44", Offset = "0x8CAA44", VA = "0x8CAA44")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x8CB164", Offset = "0x8CB164", VA = "0x8CB164")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x8CBA9C", Offset = "0x8CBA9C", VA = "0x8CBA9C")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000D8")]
public static class VectorUtil
{
	[Token(Token = "0x6000342")]
	[Address(RVA = "0x8C8064", Offset = "0x8C8064", VA = "0x8C8064")]
	public static Vector4 ToVector(Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000D9")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x8CBFC4", Offset = "0x8CBFC4", VA = "0x8CBFC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x8CC51C", Offset = "0x8CC51C", VA = "0x8CC51C")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x8CC5C8", Offset = "0x8CC5C8", VA = "0x8CC5C8")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x8CC858", Offset = "0x8CC858", VA = "0x8CC858")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x8CC92C", Offset = "0x8CC92C", VA = "0x8CC92C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x8CCA04", Offset = "0x8CCA04", VA = "0x8CCA04")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x8CCA6C", Offset = "0x8CCA6C", VA = "0x8CCA6C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x8CCA74", Offset = "0x8CCA74", VA = "0x8CCA74")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x8CCADC", Offset = "0x8CCADC", VA = "0x8CCADC")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x8CCB44", Offset = "0x8CCB44", VA = "0x8CCB44")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x8CCBAC", Offset = "0x8CCBAC", VA = "0x8CCBAC")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000DA")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000DB")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000355")]
			[Address(RVA = "0x8CD01C", Offset = "0x8CD01C", VA = "0x8CD01C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000356")]
			[Address(RVA = "0x8CD024", Offset = "0x8CD024", VA = "0x8CD024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x8CCEB8", Offset = "0x8CCEB8", VA = "0x8CCEB8")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x8CCEE8", Offset = "0x8CCEE8", VA = "0x8CCEE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x8CCEEC", Offset = "0x8CCEEC", VA = "0x8CCEEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x8CCC14", Offset = "0x8CCC14", VA = "0x8CCC14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x8CCD20", Offset = "0x8CCD20", VA = "0x8CCD20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x8CCCAC", Offset = "0x8CCCAC", VA = "0x8CCCAC")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x8CCEE0", Offset = "0x8CCEE0", VA = "0x8CCEE0")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000DC")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int SubdivisionsU;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int SubdivisionsV;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x8CD02C", Offset = "0x8CD02C", VA = "0x8CD02C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x8CE9D4", Offset = "0x8CE9D4", VA = "0x8CE9D4")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000DD")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000049")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x8CE9DC", Offset = "0x8CE9DC", VA = "0x8CE9DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x8CEA2C", Offset = "0x8CEA2C", VA = "0x8CEA2C")]
	public void Start()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x8CEE44", Offset = "0x8CEE44", VA = "0x8CEE44")]
	public void Update()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x8CEF1C", Offset = "0x8CEF1C", VA = "0x8CEF1C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600035D")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600035E")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600035F")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000360")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000361")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000362")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000363")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000364")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x8CEF74", Offset = "0x8CEF74", VA = "0x8CEF74")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x8CEFB4", Offset = "0x8CEFB4", VA = "0x8CEFB4")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x8CF020", Offset = "0x8CF020", VA = "0x8CF020")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x8CF16C", Offset = "0x8CF16C", VA = "0x8CF16C")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x8CF23C", Offset = "0x8CF23C", VA = "0x8CF23C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x8CED20", Offset = "0x8CED20", VA = "0x8CED20")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x8CF30C", Offset = "0x8CF30C", VA = "0x8CF30C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x8CF358", Offset = "0x8CF358", VA = "0x8CF358")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x8CF468", Offset = "0x8CF468", VA = "0x8CF468")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000DE")]
[RequireComponent(typeof(Canvas))]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000DF")]
	public enum DrawMode
	{
		[Token(Token = "0x40004E9")]
		Opaque,
		[Token(Token = "0x40004EA")]
		OpaqueWithClip,
		[Token(Token = "0x40004EB")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40004EC")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700004A")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000374")]
		[Address(RVA = "0x8D0AAC", Offset = "0x8D0AAC", VA = "0x8D0AAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000375")]
		[Address(RVA = "0x8D0B30", Offset = "0x8D0B30", VA = "0x8D0B30")]
		set
		{
		}
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x8CF470", Offset = "0x8CF470", VA = "0x8CF470")]
	private void Start()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x8D0134", Offset = "0x8D0134", VA = "0x8D0134")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x8D01A8", Offset = "0x8D01A8", VA = "0x8D01A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x8D0278", Offset = "0x8D0278", VA = "0x8D0278")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x8D0348", Offset = "0x8D0348", VA = "0x8D0348", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x8D054C", Offset = "0x8D054C", VA = "0x8D054C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x8D0BEC", Offset = "0x8D0BEC", VA = "0x8D0BEC")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000E0")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20000E1")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x8D0EAC", Offset = "0x8D0EAC", VA = "0x8D0EAC")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0x8D0FC0", Offset = "0x8D0FC0", VA = "0x8D0FC0")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x8D0CA8", Offset = "0x8D0CA8", VA = "0x8D0CA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x8D0EB4", Offset = "0x8D0EB4", VA = "0x8D0EB4")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x8D0FB8", Offset = "0x8D0FB8", VA = "0x8D0FB8")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000E2")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20000E3")]
	public enum RotationAxes
	{
		[Token(Token = "0x40004FB")]
		MouseXAndY,
		[Token(Token = "0x40004FC")]
		MouseX,
		[Token(Token = "0x40004FD")]
		MouseY
	}

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x8D0FDC", Offset = "0x8D0FDC", VA = "0x8D0FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x8D11A8", Offset = "0x8D11A8", VA = "0x8D11A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x8D1264", Offset = "0x8D1264", VA = "0x8D1264")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000E4")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000E5")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x8D1284", Offset = "0x8D1284", VA = "0x8D1284")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x8D13D4", Offset = "0x8D13D4", VA = "0x8D13D4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x8D12C0", Offset = "0x8D12C0", VA = "0x8D12C0")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x8D134C", Offset = "0x8D134C", VA = "0x8D134C")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x8D1410", Offset = "0x8D1410", VA = "0x8D1410")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x8D14A4", Offset = "0x8D14A4", VA = "0x8D14A4")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x8D1614", Offset = "0x8D1614", VA = "0x8D1614")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x8D1784", Offset = "0x8D1784", VA = "0x8D1784")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000E6")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20000E7")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000512")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000518")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x8D19C4", Offset = "0x8D19C4", VA = "0x8D19C4")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x8D1834", Offset = "0x8D1834", VA = "0x8D1834")]
	[MonoPInvokeCallback(typeof(AudioRaycastCallback))]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x8D19CC", Offset = "0x8D19CC", VA = "0x8D19CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x8D1B14", Offset = "0x8D1B14", VA = "0x8D1B14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x8D1C0C", Offset = "0x8D1C0C", VA = "0x8D1C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x8D25EC", Offset = "0x8D25EC", VA = "0x8D25EC")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600038F")]
	[Address(RVA = "0x8D1A8C", Offset = "0x8D1A8C", VA = "0x8D1A8C")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000390")]
	[Address(RVA = "0x8D1B88", Offset = "0x8D1B88", VA = "0x8D1B88")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000391")]
	[Address(RVA = "0x8D2380", Offset = "0x8D2380", VA = "0x8D2380")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000392")]
	[Address(RVA = "0x8D23FC", Offset = "0x8D23FC", VA = "0x8D23FC")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000393")]
	[Address(RVA = "0x8D2478", Offset = "0x8D2478", VA = "0x8D2478")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000394")]
	[Address(RVA = "0x8D24F4", Offset = "0x8D24F4", VA = "0x8D24F4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000395")]
	[Address(RVA = "0x8D2570", Offset = "0x8D2570", VA = "0x8D2570")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000396")]
	[Address(RVA = "0x8D3374", Offset = "0x8D3374", VA = "0x8D3374")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000397")]
	[Address(RVA = "0x8D3418", Offset = "0x8D3418", VA = "0x8D3418")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x8D34BC", Offset = "0x8D34BC", VA = "0x8D34BC")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000E8")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20000E9")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000520")]
		Uninitialized = -1,
		[Token(Token = "0x4000521")]
		NotEnabled,
		[Token(Token = "0x4000522")]
		Success,
		[Token(Token = "0x4000523")]
		StreamError,
		[Token(Token = "0x4000524")]
		ProcessError,
		[Token(Token = "0x4000525")]
		MaxStatValue
	}

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700004B")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x906060", Offset = "0x906060", VA = "0x906060")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x906068", Offset = "0x906068", VA = "0x906068")]
		set
		{
		}
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x906074", Offset = "0x906074", VA = "0x906074")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x9062B0", Offset = "0x9062B0", VA = "0x9062B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x9064DC", Offset = "0x9064DC", VA = "0x9064DC")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000EA")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x4000526")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700004C")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x9067FC", Offset = "0x9067FC", VA = "0x9067FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x906804", Offset = "0x906804", VA = "0x906804")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public float Gain
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x906810", Offset = "0x906810", VA = "0x906810")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x906818", Offset = "0x906818", VA = "0x906818")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x906834", Offset = "0x906834", VA = "0x906834")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x90683C", Offset = "0x90683C", VA = "0x90683C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float Near
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x906848", Offset = "0x906848", VA = "0x906848")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x906850", Offset = "0x906850", VA = "0x906850")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public float Far
	{
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x906870", Offset = "0x906870", VA = "0x906870")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x906878", Offset = "0x906878", VA = "0x906878")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x906898", Offset = "0x906898", VA = "0x906898")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x9068A0", Offset = "0x9068A0", VA = "0x9068A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public float ReverbSend
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x9068C0", Offset = "0x9068C0", VA = "0x9068C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x9068C8", Offset = "0x9068C8", VA = "0x9068C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x9068E8", Offset = "0x9068E8", VA = "0x9068E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x9068F0", Offset = "0x9068F0", VA = "0x9068F0")]
		set
		{
		}
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x906544", Offset = "0x906544", VA = "0x906544")]
	[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x906720", Offset = "0x906720", VA = "0x906720")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x9068FC", Offset = "0x9068FC", VA = "0x9068FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x906A60", Offset = "0x906A60", VA = "0x906A60")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x906960", Offset = "0x906960", VA = "0x906960")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x906B20", Offset = "0x906B20", VA = "0x906B20")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x906EA0", Offset = "0x906EA0", VA = "0x906EA0")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x9066A4", Offset = "0x9066A4", VA = "0x9066A4")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x906F54", Offset = "0x906F54", VA = "0x906F54")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000EB")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000531")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000533")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x906F70", Offset = "0x906F70", VA = "0x906F70")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x906F7C", Offset = "0x906F7C", VA = "0x906F7C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x907024", Offset = "0x907024", VA = "0x907024")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x906FA8", Offset = "0x906FA8", VA = "0x906FA8")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x9070A0", Offset = "0x9070A0", VA = "0x9070A0")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000EC")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20000ED")]
	private struct MeshMaterial
	{
		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20000EE")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400053A")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000054")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x9070B0", Offset = "0x9070B0", VA = "0x9070B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000055")]
	public string filePath
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x907138", Offset = "0x907138", VA = "0x907138")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x9071AC", Offset = "0x9071AC", VA = "0x9071AC")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x9072F0", Offset = "0x9072F0", VA = "0x9072F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x9072F4", Offset = "0x9072F4", VA = "0x9072F4")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x907900", Offset = "0x907900", VA = "0x907900")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x907C68", Offset = "0x907C68", VA = "0x907C68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x907DF0", Offset = "0x907DF0", VA = "0x907DF0")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x90870C", Offset = "0x90870C", VA = "0x90870C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x908744", Offset = "0x908744", VA = "0x908744")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x909DF0", Offset = "0x909DF0", VA = "0x909DF0")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x909CCC", Offset = "0x909CCC", VA = "0x909CCC")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x907720", Offset = "0x907720", VA = "0x907720")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x90754C", Offset = "0x90754C", VA = "0x90754C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x90A414", Offset = "0x90A414", VA = "0x90A414")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x90A880", Offset = "0x90A880", VA = "0x90A880")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000EF")]
internal class ONSPPropagation
{
	[Token(Token = "0x20000F0")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000543")]
		Int8,
		[Token(Token = "0x4000544")]
		UInt8,
		[Token(Token = "0x4000545")]
		Int16,
		[Token(Token = "0x4000546")]
		UInt16,
		[Token(Token = "0x4000547")]
		Int32,
		[Token(Token = "0x4000548")]
		UInt32,
		[Token(Token = "0x4000549")]
		Int64,
		[Token(Token = "0x400054A")]
		UInt64,
		[Token(Token = "0x400054B")]
		Float16,
		[Token(Token = "0x400054C")]
		Float32,
		[Token(Token = "0x400054D")]
		Float64
	}

	[Token(Token = "0x20000F1")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60003D3")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60003D4")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60003D5")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60003D6")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60003D7")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60003D8")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003D9")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60003DA")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60003DB")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60003DC")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60003DD")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20000F2")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000057")]
		private IntPtr context
		{
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0x90AE08", Offset = "0x90AE08", VA = "0x90AE08")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x90AE74", Offset = "0x90AE74", VA = "0x90AE74")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x90AEF8", Offset = "0x90AEF8", VA = "0x90AEF8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x90AF84", Offset = "0x90AF84", VA = "0x90AF84", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x90AFA4", Offset = "0x90AFA4", VA = "0x90AFA4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x90B024", Offset = "0x90B024", VA = "0x90B024", Slot = "5")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x90B03C", Offset = "0x90B03C", VA = "0x90B03C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x90B0B8", Offset = "0x90B0B8", VA = "0x90B0B8", Slot = "6")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x90B0C0", Offset = "0x90B0C0", VA = "0x90B0C0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x90B1D4", Offset = "0x90B1D4", VA = "0x90B1D4", Slot = "7")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x90B2D4", Offset = "0x90B2D4", VA = "0x90B2D4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x90B360", Offset = "0x90B360", VA = "0x90B360", Slot = "8")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x90B36C", Offset = "0x90B36C", VA = "0x90B36C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x90B40C", Offset = "0x90B40C", VA = "0x90B40C", Slot = "9")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x90B418", Offset = "0x90B418", VA = "0x90B418")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x90B4B8", Offset = "0x90B4B8", VA = "0x90B4B8", Slot = "10")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x90B4C4", Offset = "0x90B4C4", VA = "0x90B4C4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x90B544", Offset = "0x90B544", VA = "0x90B544", Slot = "11")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x90B55C", Offset = "0x90B55C", VA = "0x90B55C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x90B5D8", Offset = "0x90B5D8", VA = "0x90B5D8", Slot = "12")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x90B5E0", Offset = "0x90B5E0", VA = "0x90B5E0")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x90B67C", Offset = "0x90B67C", VA = "0x90B67C", Slot = "13")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x90B688", Offset = "0x90B688", VA = "0x90B688")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x90B70C", Offset = "0x90B70C", VA = "0x90B70C", Slot = "14")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x90ADB0", Offset = "0x90ADB0", VA = "0x90ADB0")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20000F3")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000058")]
		private IntPtr context
		{
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0x90B718", Offset = "0x90B718", VA = "0x90B718")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x90ABF8", Offset = "0x90ABF8", VA = "0x90ABF8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x90B784", Offset = "0x90B784", VA = "0x90B784")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x90B810", Offset = "0x90B810", VA = "0x90B810", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x90B830", Offset = "0x90B830", VA = "0x90B830")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x90B8B4", Offset = "0x90B8B4", VA = "0x90B8B4", Slot = "5")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x90B8CC", Offset = "0x90B8CC", VA = "0x90B8CC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x90B948", Offset = "0x90B948", VA = "0x90B948", Slot = "6")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x90B950", Offset = "0x90B950", VA = "0x90B950")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x90BA64", Offset = "0x90BA64", VA = "0x90BA64", Slot = "7")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000401")]
		[Address(RVA = "0x90BB64", Offset = "0x90BB64", VA = "0x90BB64")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x90BBF0", Offset = "0x90BBF0", VA = "0x90BBF0", Slot = "8")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x90BBFC", Offset = "0x90BBFC", VA = "0x90BBFC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x90BC9C", Offset = "0x90BC9C", VA = "0x90BC9C", Slot = "9")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000405")]
		[Address(RVA = "0x90BCA8", Offset = "0x90BCA8", VA = "0x90BCA8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x90BD48", Offset = "0x90BD48", VA = "0x90BD48", Slot = "10")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x90BD54", Offset = "0x90BD54", VA = "0x90BD54")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x90BDD8", Offset = "0x90BDD8", VA = "0x90BDD8", Slot = "11")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000409")]
		[Address(RVA = "0x90BDF0", Offset = "0x90BDF0", VA = "0x90BDF0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x90BE6C", Offset = "0x90BE6C", VA = "0x90BE6C", Slot = "12")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600040B")]
		[Address(RVA = "0x90BE74", Offset = "0x90BE74", VA = "0x90BE74")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x90BF10", Offset = "0x90BF10", VA = "0x90BF10", Slot = "13")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x90BF1C", Offset = "0x90BF1C", VA = "0x90BF1C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x90BFA0", Offset = "0x90BFA0", VA = "0x90BFA0", Slot = "14")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x90AC7C", Offset = "0x90AC7C", VA = "0x90AC7C")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20000F4")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000059")]
		private IntPtr context
		{
			[Token(Token = "0x6000410")]
			[Address(RVA = "0x90BFAC", Offset = "0x90BFAC", VA = "0x90BFAC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x90ACD4", Offset = "0x90ACD4", VA = "0x90ACD4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000412")]
		[Address(RVA = "0x90C018", Offset = "0x90C018", VA = "0x90C018")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x90C0A4", Offset = "0x90C0A4", VA = "0x90C0A4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000414")]
		[Address(RVA = "0x90C0C4", Offset = "0x90C0C4", VA = "0x90C0C4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x90C148", Offset = "0x90C148", VA = "0x90C148", Slot = "5")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000416")]
		[Address(RVA = "0x90C160", Offset = "0x90C160", VA = "0x90C160")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x90C1DC", Offset = "0x90C1DC", VA = "0x90C1DC", Slot = "6")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000418")]
		[Address(RVA = "0x90C1E4", Offset = "0x90C1E4", VA = "0x90C1E4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x90C2F8", Offset = "0x90C2F8", VA = "0x90C2F8", Slot = "7")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600041A")]
		[Address(RVA = "0x90C3F8", Offset = "0x90C3F8", VA = "0x90C3F8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x90C484", Offset = "0x90C484", VA = "0x90C484", Slot = "8")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600041C")]
		[Address(RVA = "0x90C490", Offset = "0x90C490", VA = "0x90C490")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x90C530", Offset = "0x90C530", VA = "0x90C530", Slot = "9")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600041E")]
		[Address(RVA = "0x90C53C", Offset = "0x90C53C", VA = "0x90C53C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x90C5DC", Offset = "0x90C5DC", VA = "0x90C5DC", Slot = "10")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000420")]
		[Address(RVA = "0x90C5E8", Offset = "0x90C5E8", VA = "0x90C5E8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x90C66C", Offset = "0x90C66C", VA = "0x90C66C", Slot = "11")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x90C684", Offset = "0x90C684", VA = "0x90C684")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x90C700", Offset = "0x90C700", VA = "0x90C700", Slot = "12")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x90C708", Offset = "0x90C708", VA = "0x90C708")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x90C7A4", Offset = "0x90C7A4", VA = "0x90C7A4", Slot = "13")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x90C7B0", Offset = "0x90C7B0", VA = "0x90C7B0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x90C834", Offset = "0x90C834", VA = "0x90C834", Slot = "14")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x90AD58", Offset = "0x90AD58", VA = "0x90AD58")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000056")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x9074D4", Offset = "0x9074D4", VA = "0x9074D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x90A990", Offset = "0x90A990", VA = "0x90A990")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}
}
[Token(Token = "0x20000F5")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20000F6")]
	public enum Preset
	{
		[Token(Token = "0x4000557")]
		Custom,
		[Token(Token = "0x4000558")]
		AcousticTile,
		[Token(Token = "0x4000559")]
		Brick,
		[Token(Token = "0x400055A")]
		BrickPainted,
		[Token(Token = "0x400055B")]
		Carpet,
		[Token(Token = "0x400055C")]
		CarpetHeavy,
		[Token(Token = "0x400055D")]
		CarpetHeavyPadded,
		[Token(Token = "0x400055E")]
		CeramicTile,
		[Token(Token = "0x400055F")]
		Concrete,
		[Token(Token = "0x4000560")]
		ConcreteRough,
		[Token(Token = "0x4000561")]
		ConcreteBlock,
		[Token(Token = "0x4000562")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000563")]
		Curtain,
		[Token(Token = "0x4000564")]
		Foliage,
		[Token(Token = "0x4000565")]
		Glass,
		[Token(Token = "0x4000566")]
		GlassHeavy,
		[Token(Token = "0x4000567")]
		Grass,
		[Token(Token = "0x4000568")]
		Gravel,
		[Token(Token = "0x4000569")]
		GypsumBoard,
		[Token(Token = "0x400056A")]
		PlasterOnBrick,
		[Token(Token = "0x400056B")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x400056C")]
		Soil,
		[Token(Token = "0x400056D")]
		SoundProof,
		[Token(Token = "0x400056E")]
		Snow,
		[Token(Token = "0x400056F")]
		Steel,
		[Token(Token = "0x4000570")]
		Water,
		[Token(Token = "0x4000571")]
		WoodThin,
		[Token(Token = "0x4000572")]
		WoodThick,
		[Token(Token = "0x4000573")]
		WoodFloor,
		[Token(Token = "0x4000574")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20000F7")]
	public sealed class Point
	{
		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x91ED10", Offset = "0x91ED10", VA = "0x91ED10")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F8")]
	[DefaultMember("Item")]
	public sealed class Spectrum
	{
		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x91EE20", Offset = "0x91EE20", VA = "0x91EE20")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Spectrum absorption;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Spectrum transmission;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Spectrum scattering;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700005A")]
	public Preset preset
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0x90C840", Offset = "0x90C840", VA = "0x90C840")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600042A")]
		[Address(RVA = "0x90C848", Offset = "0x90C848", VA = "0x90C848")]
		set
		{
		}
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x90C86C", Offset = "0x90C86C", VA = "0x90C86C")]
	private void Start()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x90A288", Offset = "0x90A288", VA = "0x90A288")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x90CE8C", Offset = "0x90CE8C", VA = "0x90CE8C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x90CE90", Offset = "0x90CE90", VA = "0x90CE90")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x90C870", Offset = "0x90C870", VA = "0x90C870")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x909B40", Offset = "0x909B40", VA = "0x909B40")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x90CF8C", Offset = "0x90CF8C", VA = "0x90CF8C")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x90DA1C", Offset = "0x90DA1C", VA = "0x90DA1C")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x90E4AC", Offset = "0x90E4AC", VA = "0x90E4AC")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x90EF3C", Offset = "0x90EF3C", VA = "0x90EF3C")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x90F9CC", Offset = "0x90F9CC", VA = "0x90F9CC")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x91045C", Offset = "0x91045C", VA = "0x91045C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x910EEC", Offset = "0x910EEC", VA = "0x910EEC")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x91197C", Offset = "0x91197C", VA = "0x91197C")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x91240C", Offset = "0x91240C", VA = "0x91240C")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x912E9C", Offset = "0x912E9C", VA = "0x912E9C")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x91392C", Offset = "0x91392C", VA = "0x91392C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x9143BC", Offset = "0x9143BC", VA = "0x9143BC")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x914E4C", Offset = "0x914E4C", VA = "0x914E4C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x9158DC", Offset = "0x9158DC", VA = "0x9158DC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x916364", Offset = "0x916364", VA = "0x916364")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x916DF4", Offset = "0x916DF4", VA = "0x916DF4")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x917568", Offset = "0x917568", VA = "0x917568")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x917CDC", Offset = "0x917CDC", VA = "0x917CDC")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x91876C", Offset = "0x91876C", VA = "0x91876C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x9191FC", Offset = "0x9191FC", VA = "0x9191FC")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x919C8C", Offset = "0x919C8C", VA = "0x919C8C")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x91A400", Offset = "0x91A400", VA = "0x91A400")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x91A64C", Offset = "0x91A64C", VA = "0x91A64C")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x91ADC0", Offset = "0x91ADC0", VA = "0x91ADC0")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x91B848", Offset = "0x91B848", VA = "0x91B848")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x91C2D8", Offset = "0x91C2D8", VA = "0x91C2D8")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x91CD60", Offset = "0x91CD60", VA = "0x91CD60")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x91D7F0", Offset = "0x91D7F0", VA = "0x91D7F0")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x91E280", Offset = "0x91E280", VA = "0x91E280")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x91ED3C", Offset = "0x91ED3C", VA = "0x91ED3C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000F9")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x91EEB0", Offset = "0x91EEB0", VA = "0x91EEB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x91EF70", Offset = "0x91EF70", VA = "0x91EF70")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000FA")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700005B")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000453")]
		[Address(RVA = "0x906560", Offset = "0x906560", VA = "0x906560")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x91EF80", Offset = "0x91EF80", VA = "0x91EF80")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000FB")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x400057C")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000455")]
	[Address(RVA = "0x91EF90", Offset = "0x91EF90", VA = "0x91EF90")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x91F024", Offset = "0x91F024", VA = "0x91F024")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x91F134", Offset = "0x91F134", VA = "0x91F134")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000FC")]
[RequireComponent(typeof(MeshRenderer))]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AGGlobalSettings : MonoBehaviour
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AOIntensity;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TranslucencyIntensity;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TranslucencyDistance;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool EnableTintColor;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float TintToggle;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D TintNoiseTexture;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TintNoiseTile;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float TintNoiseContrast;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x91F13C", Offset = "0x91F13C", VA = "0x91F13C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x91F1B4", Offset = "0x91F1B4", VA = "0x91F1B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x91F308", Offset = "0x91F308", VA = "0x91F308")]
	public AGGlobalSettings()
	{
	}
}
[Token(Token = "0x20000FD")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[RequireComponent(typeof(MeshRenderer))]
public class AGGlobalSnow : MonoBehaviour
{
	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableGlobalWind;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float WindToggle;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float WindGrassAmplitude;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float WindGrassSpeed;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WindGrassScale;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float WindGrassStiffness;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool EnableTintColor;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float TintToggle;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D TintNoiseTexture;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TintNoiseTile;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float TintNoiseContrast;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float SnowPropsIntensity;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float SnowPropsOffset;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float SnowPropsContrast;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float SnowMinimumHeight;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float SnowFadeHeight;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x91F32C", Offset = "0x91F32C", VA = "0x91F32C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x91F3A4", Offset = "0x91F3A4", VA = "0x91F3A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x91F658", Offset = "0x91F658", VA = "0x91F658")]
	public AGGlobalSnow()
	{
	}
}
[Token(Token = "0x20000FE")]
[RequireComponent(typeof(MeshRenderer))]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class AGGlobalSnowGrass : MonoBehaviour
{
	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float SnowGrassIntensity;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SnowGrassOffset;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SnowGrassContrast;

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x91F694", Offset = "0x91F694", VA = "0x91F694")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x91F70C", Offset = "0x91F70C", VA = "0x91F70C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x91F7A8", Offset = "0x91F7A8", VA = "0x91F7A8")]
	public AGGlobalSnowGrass()
	{
	}
}
[Token(Token = "0x20000FF")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
[RequireComponent(typeof(MeshRenderer))]
public class AGGlobalSnowHeight : MonoBehaviour
{
	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float SnowMinimumHeight;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SnowFadeHeight;

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x91F7C0", Offset = "0x91F7C0", VA = "0x91F7C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x91F838", Offset = "0x91F838", VA = "0x91F838")]
	private void Update()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x91F8B0", Offset = "0x91F8B0", VA = "0x91F8B0")]
	public AGGlobalSnowHeight()
	{
	}
}
[Token(Token = "0x2000100")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[RequireComponent(typeof(MeshRenderer))]
public class AGGlobalSnowProps : MonoBehaviour
{
	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float SnowPropsIntensity;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SnowPropsOffset;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SnowPropsContrast;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x91F8C4", Offset = "0x91F8C4", VA = "0x91F8C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x91F93C", Offset = "0x91F93C", VA = "0x91F93C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x91F9D8", Offset = "0x91F9D8", VA = "0x91F9D8")]
	public AGGlobalSnowProps()
	{
	}
}
[Token(Token = "0x2000101")]
[RequireComponent(typeof(MeshRenderer))]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class AGGlobalSnowTree : MonoBehaviour
{
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float SnowTreeIntensity;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SnowTreeOffset;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SnowTreeContrast;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SnowTreeArrowDirection;

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x91F9F0", Offset = "0x91F9F0", VA = "0x91F9F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x91FA68", Offset = "0x91FA68", VA = "0x91FA68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x91FB30", Offset = "0x91FB30", VA = "0x91FB30")]
	public AGGlobalSnowTree()
	{
	}
}
[Token(Token = "0x2000102")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
[RequireComponent(typeof(MeshRenderer))]
public class AGGlobalWind : MonoBehaviour
{
	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableGlobalWind;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float WindToggle;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float WindTreeAmplitude;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float WindTreeSpeed;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WindTreeScale;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float WindTreeStiffness;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float WindGrassAmplitude;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float WindGrassSpeed;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float WindGrassScale;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float WindGrassStiffness;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x91FB40", Offset = "0x91FB40", VA = "0x91FB40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x91FBB8", Offset = "0x91FBB8", VA = "0x91FBB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x91FDA8", Offset = "0x91FDA8", VA = "0x91FDA8")]
	public AGGlobalWind()
	{
	}
}
[Token(Token = "0x2000103")]
public class RemoveComponentName : MonoBehaviour
{
	[Token(Token = "0x600046D")]
	[Address(RVA = "0x91FDCC", Offset = "0x91FDCC", VA = "0x91FDCC")]
	public void RemoveComponents()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x91FF3C", Offset = "0x91FF3C", VA = "0x91FF3C")]
	public RemoveComponentName()
	{
	}
}
[Token(Token = "0x2000104")]
public class Achivements : MonoBehaviourPun
{
	[Token(Token = "0x2000105")]
	private enum FiredArrowsAchivementValues
	{
		[Token(Token = "0x40005B2")]
		Tier1 = 100,
		[Token(Token = "0x40005B3")]
		Tier2 = 1000,
		[Token(Token = "0x40005B4")]
		Tier3 = 5000,
		[Token(Token = "0x40005B5")]
		Tier4 = 20000,
		[Token(Token = "0x40005B6")]
		Tier5 = 50000
	}

	[Token(Token = "0x2000106")]
	private enum OrcsKilledAchivementValues
	{
		[Token(Token = "0x40005B8")]
		Tier1 = 50,
		[Token(Token = "0x40005B9")]
		Tier2 = 500,
		[Token(Token = "0x40005BA")]
		Tier3 = 2500,
		[Token(Token = "0x40005BB")]
		Tier4 = 10000,
		[Token(Token = "0x40005BC")]
		Tier5 = 25000,
		[Token(Token = "0x40005BD")]
		Tier6 = 50000
	}

	[Token(Token = "0x2000107")]
	private enum HeadShotsAchivementValues
	{
		[Token(Token = "0x40005BF")]
		Tier1 = 50,
		[Token(Token = "0x40005C0")]
		Tier2 = 500,
		[Token(Token = "0x40005C1")]
		Tier3 = 2500,
		[Token(Token = "0x40005C2")]
		Tier4 = 10000,
		[Token(Token = "0x40005C3")]
		Tier5 = 25000,
		[Token(Token = "0x40005C4")]
		Tier6 = 50000
	}

	[Token(Token = "0x2000108")]
	private enum WindowShotsAchivementValues
	{
		[Token(Token = "0x40005C6")]
		Tier1 = 50,
		[Token(Token = "0x40005C7")]
		Tier2 = 100,
		[Token(Token = "0x40005C8")]
		Tier3 = 1000,
		[Token(Token = "0x40005C9")]
		Tier4 = 20000
	}

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ClearStats;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool ClearAchivements;

	[Token(Token = "0x40005AD")]
	private const string FiredArrowsKey = "FiredArrows";

	[Token(Token = "0x40005AE")]
	private const string OrcKilledKey = "KilledOrcs";

	[Token(Token = "0x40005AF")]
	private const string HeadShotsKey = "HeadShots";

	[Token(Token = "0x40005B0")]
	private const string WindowShotsKey = "WindowShots";

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x91FF44", Offset = "0x91FF44", VA = "0x91FF44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x9201BC", Offset = "0x9201BC", VA = "0x9201BC")]
	private void OnEnemyGotKilled(Player killer, EnemyInfo enemyInfo)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x92031C", Offset = "0x92031C", VA = "0x92031C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x920614", Offset = "0x920614", VA = "0x920614")]
	public void RegisterFiredArrow()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x9209AC", Offset = "0x9209AC", VA = "0x9209AC")]
	[PunRPC]
	public void RpcRegisterKilledOrc()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x920D44", Offset = "0x920D44", VA = "0x920D44")]
	public void RegisterHeadShot()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x9210DC", Offset = "0x9210DC", VA = "0x9210DC")]
	public void RegisterWindowShot()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x921474", Offset = "0x921474", VA = "0x921474")]
	private int GetStat(string statName)
	{
		return default(int);
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x920598", Offset = "0x920598", VA = "0x920598")]
	public void StoreAllStats()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x92147C", Offset = "0x92147C", VA = "0x92147C")]
	public Achivements()
	{
	}
}
[Token(Token = "0x2000109")]
public class AdjustRotaterPinner : MonoBehaviour
{
	[Token(Token = "0x6000479")]
	[Address(RVA = "0x921484", Offset = "0x921484", VA = "0x921484")]
	public AdjustRotaterPinner()
	{
	}
}
[Token(Token = "0x200010A")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x92148C", Offset = "0x92148C", VA = "0x92148C")]
	private void Start()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x921988", Offset = "0x921988", VA = "0x921988")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x921490", Offset = "0x921490", VA = "0x921490")]
	public void Init()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x92198C", Offset = "0x92198C", VA = "0x92198C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x921E64", Offset = "0x921E64", VA = "0x921E64")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x921EA0", Offset = "0x921EA0", VA = "0x921EA0")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x200010B")]
public class UnluckFlagGUI : MonoBehaviour
{
	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] bgrs;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light[] lights;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject nextButton;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject prevButton;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bgrButton;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject lightButton;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject texturePreview;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject activeObj;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int counter;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int bCounter;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int lCounter;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh txt;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh debug;

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x921EDC", Offset = "0x921EDC", VA = "0x921EDC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x9225E4", Offset = "0x9225E4", VA = "0x9225E4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x9227C8", Offset = "0x9227C8", VA = "0x9227C8")]
	public void ButtonUp()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x922A8C", Offset = "0x922A8C", VA = "0x922A8C")]
	public void LightChange()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x922A38", Offset = "0x922A38", VA = "0x922A38")]
	public void NextBgr()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x9229CC", Offset = "0x9229CC", VA = "0x9229CC")]
	public void Next()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x922A04", Offset = "0x922A04", VA = "0x922A04")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x9222B8", Offset = "0x9222B8", VA = "0x9222B8")]
	public void Swap()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x922B24", Offset = "0x922B24", VA = "0x922B24")]
	public UnluckFlagGUI()
	{
	}
}
[Token(Token = "0x200010C")]
public class UnluckFPS : MonoBehaviour
{
	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh _textMesh;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float updateInterval;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeleft;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x922B2C", Offset = "0x922B2C", VA = "0x922B2C")]
	public void Start()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x922B9C", Offset = "0x922B9C", VA = "0x922B9C")]
	public void Update()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x922CAC", Offset = "0x922CAC", VA = "0x922CAC")]
	public UnluckFPS()
	{
	}
}
[Token(Token = "0x200010D")]
public class UnluckAnimatedMesh : MonoBehaviour
{
	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter[] meshCache;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform meshCached;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform meshContainerFBX;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float playSpeed;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float playSpeedRandom;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool randomSpeedLoop;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentSpeed;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float currentFrame;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int meshCacheCount;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshFilter meshFilter;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Renderer rendererComponent;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float updateInterval;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool randomRotateX;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool randomRotateY;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool randomRotateZ;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool randomStartFrame;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool randomRotateLoop;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool loop;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool pingPong;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool playOnAwake;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 randomStartDelay;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float startDelay;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float startDelayCounter;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float updateSeed;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool pingPongToggle;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform transformCache;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float delta;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x922CBC", Offset = "0x922CBC", VA = "0x922CBC")]
	public void Start()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x922EEC", Offset = "0x922EEC", VA = "0x922EEC")]
	public void Play()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x922FF8", Offset = "0x922FF8", VA = "0x922FF8")]
	public void RandomRotate()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x922E94", Offset = "0x922E94", VA = "0x922E94")]
	public void GetRequiredComponents()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x922FB8", Offset = "0x922FB8", VA = "0x922FB8")]
	public void RandomizePlaySpeed()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x9231A4", Offset = "0x9231A4", VA = "0x9231A4")]
	public void FillCacheArray()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x922DE8", Offset = "0x922DE8", VA = "0x922DE8")]
	public void CheckIfMeshHasChanged()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x9233D4", Offset = "0x9233D4", VA = "0x9233D4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x923508", Offset = "0x923508", VA = "0x923508")]
	public bool PingPongFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x923578", Offset = "0x923578", VA = "0x923578")]
	public bool NextFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x9235F0", Offset = "0x9235F0", VA = "0x9235F0")]
	public void RandomizePropertiesAfterLoop()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x92344C", Offset = "0x92344C", VA = "0x92344C")]
	public void Animate()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x923624", Offset = "0x923624", VA = "0x923624")]
	public UnluckAnimatedMesh()
	{
	}
}
[Token(Token = "0x200010E")]
public class ArrowResetController : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x6000499")]
	[Address(RVA = "0x923654", Offset = "0x923654", VA = "0x923654")]
	public void DestroyYourself()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x9236EC", Offset = "0x9236EC", VA = "0x9236EC", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x923714", Offset = "0x923714", VA = "0x923714")]
	public ArrowResetController()
	{
	}
}
[Token(Token = "0x200010F")]
public class ArrowSpellTrailEnabler : MonoBehaviour, IResetable
{
	[Token(Token = "0x2000110")]
	private sealed class <SetTrailLogic>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArrowSpellTrailEnabler <>4__this;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject trail;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delay;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004A8")]
			[Address(RVA = "0x923BA4", Offset = "0x923BA4", VA = "0x923BA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004A9")]
			[Address(RVA = "0x923BAC", Offset = "0x923BAC", VA = "0x923BAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x9239E4", Offset = "0x9239E4", VA = "0x9239E4")]
		[DebuggerHidden]
		public <SetTrailLogic>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x923AB8", Offset = "0x923AB8", VA = "0x923AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x923ABC", Offset = "0x923ABC", VA = "0x923ABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject iceTrail;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject fireTrail;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject otherTrail;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ArrowFlyController ArrowFlyController;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject activeTrail;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float delay;

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x92371C", Offset = "0x92371C", VA = "0x92371C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x9237F4", Offset = "0x9237F4", VA = "0x9237F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x9238CC", Offset = "0x9238CC", VA = "0x9238CC")]
	public void EnableIceTrailLogic()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x923994", Offset = "0x923994", VA = "0x923994")]
	public void EnableFireTrailLogic()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x9239BC", Offset = "0x9239BC", VA = "0x9239BC")]
	public void EnableOtherTrailLogic()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x9238F4", Offset = "0x9238F4", VA = "0x9238F4")]
	private IEnumerator SetTrailLogic(float delay, GameObject trail)
	{
		return null;
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x923A0C", Offset = "0x923A0C", VA = "0x923A0C")]
	private void StopTrail()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x923AA0", Offset = "0x923AA0", VA = "0x923AA0", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x923AA4", Offset = "0x923AA4", VA = "0x923AA4")]
	public ArrowSpellTrailEnabler()
	{
	}
}
[Token(Token = "0x2000111")]
public class ArrowVisibilityEnabler : MonoBehaviour
{
	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer arrowRenderer;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TrailRendererEnabler trailRendererEnabler;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x923BB4", Offset = "0x923BB4", VA = "0x923BB4")]
	public void EnableArrowVisiblity(bool isEnabled)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x923BF8", Offset = "0x923BF8", VA = "0x923BF8")]
	public void EnableArrowTrail(bool isEnabled)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x923C18", Offset = "0x923C18", VA = "0x923C18")]
	public ArrowVisibilityEnabler()
	{
	}
}
[Token(Token = "0x2000112")]
public class Sound_Manager : MonoBehaviour
{
	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float randomPitch;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource[] sources;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip whoosh;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip flesh;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject axe;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject playerCamera;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool play1;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x923C20", Offset = "0x923C20", VA = "0x923C20")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x923C78", Offset = "0x923C78", VA = "0x923C78")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x92412C", Offset = "0x92412C", VA = "0x92412C")]
	public Sound_Manager()
	{
	}
}
[Token(Token = "0x2000113")]
public class AxeBeingUsedController : MonoBehaviour
{
	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isAxeBeingUsed;

	[Token(Token = "0x1700005E")]
	public bool IsAxeBeingUsed
	{
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x924148", Offset = "0x924148", VA = "0x924148")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x924150", Offset = "0x924150", VA = "0x924150")]
		set
		{
		}
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x92415C", Offset = "0x92415C", VA = "0x92415C")]
	public AxeBeingUsedController()
	{
	}
}
[Token(Token = "0x2000114")]
public class AxeFreeze : MonoBehaviour
{
	[Token(Token = "0x4000625")]
	private const float iceBreakVolume = 0.15f;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int indexOfIceBreakSound;

	[Token(Token = "0x4000627")]
	private const float minPitch = 1f;

	[Token(Token = "0x4000628")]
	private const float maxPitch = 1.1f;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isFreezing;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer axeRenderer;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material freezeMaterial;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeToRemoveParticles;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ExplodeObject explodeObject;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject explosionParticle;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<AudioClip> iceBreakSounds;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x924164", Offset = "0x924164", VA = "0x924164")]
	public void Freeze(Transform parentObject)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x92435C", Offset = "0x92435C", VA = "0x92435C")]
	public void PlayIceBreakSound()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x924494", Offset = "0x924494", VA = "0x924494")]
	public AxeFreeze()
	{
	}
}
[Token(Token = "0x2000115")]
public class AxeHandle : MonoBehaviour
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AxeController axeController;

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x9244AC", Offset = "0x9244AC", VA = "0x9244AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x924510", Offset = "0x924510", VA = "0x924510")]
	public AxeHandle()
	{
	}
}
[Token(Token = "0x2000116")]
public class AxeSnapper : MonoBehaviour
{
	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider realCollider;

	[Token(Token = "0x4000634")]
	private const float minAxeRotationY = 145f;

	[Token(Token = "0x4000635")]
	private const float maxAxeRotationY = 160f;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x924518", Offset = "0x924518", VA = "0x924518")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x924740", Offset = "0x924740", VA = "0x924740")]
	public AxeSnapper()
	{
	}
}
[Token(Token = "0x2000117")]
public class BalistaHandsController : MonoBehaviour
{
	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject leftHandBalista;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightHandBalista;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform positionLeftHand;

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x924748", Offset = "0x924748", VA = "0x924748")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x924790", Offset = "0x924790", VA = "0x924790")]
	public void SetHands(bool Activate)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x9247D4", Offset = "0x9247D4", VA = "0x9247D4")]
	public BalistaHandsController()
	{
	}
}
[Token(Token = "0x2000118")]
public class BallistaAnimator : MonoBehaviour
{
	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation anim;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isIdle;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isLoading;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool isShot;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource ballistaAudio;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] ballistaLoadingClips;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] ballistaShotClips;

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x9247DC", Offset = "0x9247DC", VA = "0x9247DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x9247E0", Offset = "0x9247E0", VA = "0x9247E0")]
	private void State()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x924970", Offset = "0x924970", VA = "0x924970")]
	public BallistaAnimator()
	{
	}
}
[Token(Token = "0x2000119")]
public class BalistaAnimatorController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000640")]
	private const float ShootAnimatorSpeed = 3f;

	[Token(Token = "0x4000641")]
	private const float ReloadAdnimatorSpeed = 1f;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int shoot;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int load;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float animatorSpeed;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isShoot;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool isLoading;

	[Token(Token = "0x1700005F")]
	public bool IsShoot
	{
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x924978", Offset = "0x924978", VA = "0x924978")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x924980", Offset = "0x924980", VA = "0x924980")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public bool IsLoading
	{
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x9249AC", Offset = "0x9249AC", VA = "0x9249AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x9249B4", Offset = "0x9249B4", VA = "0x9249B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public float AnimatorSpeed
	{
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x9249E0", Offset = "0x9249E0", VA = "0x9249E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x9249E8", Offset = "0x9249E8", VA = "0x9249E8")]
		set
		{
		}
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x924A0C", Offset = "0x924A0C", VA = "0x924A0C")]
	public void PlayShootAnimation()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x924A38", Offset = "0x924A38", VA = "0x924A38")]
	public void PlayReloadAnimation()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x924A64", Offset = "0x924A64", VA = "0x924A64", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x924C04", Offset = "0x924C04", VA = "0x924C04")]
	public BalistaAnimatorController()
	{
	}
}
[Token(Token = "0x200011A")]
public class BalistaBoltEffectsController : MonoBehaviour
{
	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CollisionEvents collisionEvents;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TrailRenderer trailRenderer;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject dustPrefab;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x924C90", Offset = "0x924C90", VA = "0x924C90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x924D50", Offset = "0x924D50", VA = "0x924D50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x924DEC", Offset = "0x924DEC", VA = "0x924DEC")]
	private void OnCollision(Collision collision)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x924D30", Offset = "0x924D30", VA = "0x924D30")]
	private void SetTrailIsActive(bool isActive)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x924F70", Offset = "0x924F70", VA = "0x924F70")]
	public BalistaBoltEffectsController()
	{
	}
}
[Token(Token = "0x200011B")]
public class BalistaBoltRemover : MonoBehaviourPun
{
	[Token(Token = "0x200011C")]
	private sealed class <RevertToPoolCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BalistaBoltRemover <>4__this;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D6")]
			[Address(RVA = "0x92519C", Offset = "0x92519C", VA = "0x92519C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004D7")]
			[Address(RVA = "0x9251A4", Offset = "0x9251A4", VA = "0x9251A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x92500C", Offset = "0x92500C", VA = "0x92500C")]
		[DebuggerHidden]
		public <RevertToPoolCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x9250DC", Offset = "0x9250DC", VA = "0x9250DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x9250E0", Offset = "0x9250E0", VA = "0x9250E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float timeToRemove;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x924F78", Offset = "0x924F78", VA = "0x924F78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x924F98", Offset = "0x924F98", VA = "0x924F98")]
	private IEnumerator RevertToPoolCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x925034", Offset = "0x925034", VA = "0x925034")]
	private void RevertToPool()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x9250CC", Offset = "0x9250CC", VA = "0x9250CC")]
	public BalistaBoltRemover()
	{
	}
}
[Token(Token = "0x200011D")]
public class BalistaBoltVisibilityController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer boltRenderer;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isVisible;

	[Token(Token = "0x17000064")]
	public bool IsVisible
	{
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x9251AC", Offset = "0x9251AC", VA = "0x9251AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x9251B4", Offset = "0x9251B4", VA = "0x9251B4")]
		set
		{
		}
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x9251DC", Offset = "0x9251DC", VA = "0x9251DC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x9252A4", Offset = "0x9252A4", VA = "0x9252A4")]
	public BalistaBoltVisibilityController()
	{
	}
}
[Token(Token = "0x200011E")]
public class BalistaHandsPositionReference : MonoBehaviour
{
	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform leftHand;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rightHand;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer leftHandMesh;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer rightHandMesh;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HandsController handsControllerRightHanded;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private HandsController handsControllerLeftHanded;

	[Token(Token = "0x17000065")]
	public Transform LeftHand
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x9252B4", Offset = "0x9252B4", VA = "0x9252B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000066")]
	public Transform RightHand
	{
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x9252BC", Offset = "0x9252BC", VA = "0x9252BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public MeshRenderer LeftHandMesh
	{
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x9252C4", Offset = "0x9252C4", VA = "0x9252C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	public MeshRenderer RightHandMesh
	{
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x9252CC", Offset = "0x9252CC", VA = "0x9252CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000069")]
	public HandsController HandsController
	{
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x9252D4", Offset = "0x9252D4", VA = "0x9252D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x925374", Offset = "0x925374", VA = "0x925374")]
	public BalistaHandsPositionReference()
	{
	}
}
[Token(Token = "0x200011F")]
public class BalistaShootController : MonoBehaviourPun
{
	[Token(Token = "0x4000657")]
	private const float VelocityMultiplier = 200f;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject balistaBolt;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform boltAttachPoint;

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x92537C", Offset = "0x92537C", VA = "0x92537C")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x9257E0", Offset = "0x9257E0", VA = "0x9257E0")]
	[PunRPC]
	private void ReleaseBolt(int ArrowPhotonViewID, Vector3 Position, Vector3 Rotation, Vector3 loacalscale, Vector3 arrowVelocity)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x925914", Offset = "0x925914", VA = "0x925914")]
	public BalistaShootController()
	{
	}
}
[Token(Token = "0x2000120")]
public class BalistaSoundController : MonoBehaviourPun
{
	[Token(Token = "0x2000121")]
	private enum BalistaSoundType
	{
		[Token(Token = "0x400065F")]
		Shoot,
		[Token(Token = "0x4000660")]
		Reload
	}

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<AudioClip> shootSounds;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip reloadSound;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource shotAudioSource;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource reloadAudioSource;

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x92591C", Offset = "0x92591C", VA = "0x92591C")]
	public void PlayShootSound()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x925A48", Offset = "0x925A48", VA = "0x925A48")]
	public void PlayReloadSound()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x925B58", Offset = "0x925B58", VA = "0x925B58")]
	[PunRPC]
	private void PlayBalistaSound(BalistaSoundType type)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x925C10", Offset = "0x925C10", VA = "0x925C10")]
	public BalistaSoundController()
	{
	}
}
[Token(Token = "0x2000122")]
public class OwnershipChanger : MonoBehaviourPun
{
	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x925C18", Offset = "0x925C18", VA = "0x925C18")]
	public void SetOwnership()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x925C98", Offset = "0x925C98", VA = "0x925C98")]
	public OwnershipChanger()
	{
	}
}
[Token(Token = "0x2000123")]
public class BeforeEnrollmentTournamentController : MonoBehaviourPun, ILobbyCallbacks
{
	[Token(Token = "0x2000124")]
	private sealed class <GetRejoinInformation>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeforeEnrollmentTournamentController <>4__this;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050F")]
			[Address(RVA = "0x927CA8", Offset = "0x927CA8", VA = "0x927CA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000510")]
			[Address(RVA = "0x927CB0", Offset = "0x927CB0", VA = "0x927CB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x9264F8", Offset = "0x9264F8", VA = "0x9264F8")]
		[DebuggerHidden]
		public <GetRejoinInformation>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x927B78", Offset = "0x927B78", VA = "0x927B78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x927B7C", Offset = "0x927B7C", VA = "0x927B7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000125")]
	private sealed class <PlanningRoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeforeEnrollmentTournamentController <>4__this;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x927E04", Offset = "0x927E04", VA = "0x927E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000515")]
			[Address(RVA = "0x927E0C", Offset = "0x927E0C", VA = "0x927E0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x926820", Offset = "0x926820", VA = "0x926820")]
		[DebuggerHidden]
		public <PlanningRoutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x927CB8", Offset = "0x927CB8", VA = "0x927CB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x927CBC", Offset = "0x927CBC", VA = "0x927CBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000126")]
	private sealed class <>c
	{
		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<DateTime> <>9__33_0;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<TournamentHostingInfo, DateTime> <>9__34_1;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<bool> <>9__44_0;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<bool> <>9__44_2;

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x927E84", Offset = "0x927E84", VA = "0x927E84")]
		public <>c()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x927E8C", Offset = "0x927E8C", VA = "0x927E8C")]
		internal bool <GetNextTournamentDates>b__33_0(DateTime date)
		{
			return default(bool);
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x927F3C", Offset = "0x927F3C", VA = "0x927F3C")]
		internal DateTime <GetTournamentDatesAvailableForCurrentRegion>b__34_1(TournamentHostingInfo hostingInfo)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x927F54", Offset = "0x927F54", VA = "0x927F54")]
		internal bool <JoinTournament>b__44_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x927FB0", Offset = "0x927FB0", VA = "0x927FB0")]
		internal bool <JoinTournament>b__44_2()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000127")]
	private sealed class <JoinTournament>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeforeEnrollmentTournamentController <>4__this;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0x928404", Offset = "0x928404", VA = "0x928404", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000520")]
			[Address(RVA = "0x92840C", Offset = "0x92840C", VA = "0x92840C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x9277D4", Offset = "0x9277D4", VA = "0x9277D4")]
		[DebuggerHidden]
		public <JoinTournament>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x92800C", Offset = "0x92800C", VA = "0x92800C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x928010", Offset = "0x928010", VA = "0x928010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000661")]
	private const float secondsDelayOfPlanningRoutine = 30f;

	[Token(Token = "0x4000662")]
	private const float secondsBetweenRejoinCall = 5f;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool shouldJoinTournamentAfterDisconnection;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ProjectSettings projectSettings;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Map tournamentMap;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text tournamentStateComponent;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text tournamentTime;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject joinButton;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TournamentHostingDatesGatherer tournamentDatesGatherer;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject enrollmentWindow;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject disclaimerWindow;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject rejoinWindow;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private RejoinDBController rejoinDB;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool isUsingCurrentRegion;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private RandomPlayerNameCore randomPlayerName;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private VivePortNameSetter nameSetter;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isAnyNextTournamentPlanned;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private CloudRegionCode regionCode;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool canRejoin;

	[Token(Token = "0x1700006A")]
	private WaitForSeconds waitBetweenRejoinCall
	{
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x925CA0", Offset = "0x925CA0", VA = "0x925CA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006B")]
	public CloudRegionCode RegionCode
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x925D00", Offset = "0x925D00", VA = "0x925D00")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x925D08", Offset = "0x925D08", VA = "0x925D08")]
		set
		{
		}
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x925D10", Offset = "0x925D10", VA = "0x925D10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x926398", Offset = "0x926398", VA = "0x926398")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x926324", Offset = "0x926324", VA = "0x926324")]
	private IEnumerator GetRejoinInformation()
	{
		return null;
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x926520", Offset = "0x926520", VA = "0x926520")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x926794", Offset = "0x926794", VA = "0x926794")]
	public static string GetNameOfRegion(CloudRegionCode value)
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x925F04", Offset = "0x925F04", VA = "0x925F04")]
	private static CloudRegionCode GetCurrentRegionCode()
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x9262B0", Offset = "0x9262B0", VA = "0x9262B0")]
	private IEnumerator PlanningRoutine()
	{
		return null;
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x926848", Offset = "0x926848", VA = "0x926848")]
	public void AcquireNextTournamentDateFromPlan()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x926BAC", Offset = "0x926BAC", VA = "0x926BAC")]
	private void OnTournamentInformation(bool _canRejoin)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x926AA8", Offset = "0x926AA8", VA = "0x926AA8")]
	private List<DateTime> GetNextTournamentDates(List<DateTime> tournamentDates)
	{
		return null;
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x926904", Offset = "0x926904", VA = "0x926904")]
	private List<DateTime> GetTournamentDatesAvailableForCurrentRegion()
	{
		return null;
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x926524", Offset = "0x926524", VA = "0x926524")]
	private void UpdateWindowContentBasedOnCurrentTime()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x926FC4", Offset = "0x926FC4", VA = "0x926FC4")]
	private void OpenEnrollmentWindow()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x927408", Offset = "0x927408", VA = "0x927408")]
	private void OpenRejoinWindow()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x926FFC", Offset = "0x926FFC", VA = "0x926FFC")]
	private static string GetTextForTimeLeftForEnrollment()
	{
		return null;
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x926BB8", Offset = "0x926BB8", VA = "0x926BB8")]
	private static string GetTextForTimeLeftToNextTournament()
	{
		return null;
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x927454", Offset = "0x927454", VA = "0x927454")]
	public void ReactOnJoinButtonPressed()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x927504", Offset = "0x927504", VA = "0x927504")]
	private void CheckArcadeNickNameBeforeChoosing()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x9276BC", Offset = "0x9276BC", VA = "0x9276BC")]
	private void TryJoinTournamentAfterPopUp()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x927680", Offset = "0x927680", VA = "0x927680")]
	private void TryToConnectToRoom()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x927760", Offset = "0x927760", VA = "0x927760")]
	private IEnumerator JoinTournament()
	{
		return null;
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x9277FC", Offset = "0x9277FC", VA = "0x9277FC")]
	private void TryToUpdateRegion()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x9278C0", Offset = "0x9278C0", VA = "0x9278C0", Slot = "4")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x927A18", Offset = "0x927A18", VA = "0x927A18", Slot = "5")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x927A1C", Offset = "0x927A1C", VA = "0x927A1C", Slot = "6")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x927A20", Offset = "0x927A20", VA = "0x927A20", Slot = "7")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x927A24", Offset = "0x927A24", VA = "0x927A24")]
	public BeforeEnrollmentTournamentController()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x927A2C", Offset = "0x927A2C", VA = "0x927A2C")]
	private bool <PlanningRoutine>b__30_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x927A84", Offset = "0x927A84", VA = "0x927A84")]
	private bool <GetTournamentDatesAvailableForCurrentRegion>b__34_0(TournamentHostingInfo hostingInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x927ABC", Offset = "0x927ABC", VA = "0x927ABC")]
	private bool <JoinTournament>b__44_1()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000128")]
public class BhapticsHapticsPlayer : MonoBehaviourPun
{
	[Token(Token = "0x2000129")]
	public enum hitDirection
	{
		[Token(Token = "0x4000692")]
		left,
		[Token(Token = "0x4000693")]
		right,
		[Token(Token = "0x4000694")]
		front,
		[Token(Token = "0x4000695")]
		back
	}

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BowController bowSoundControllerLeft;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BowController bowSoundControllerRight;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string leftHit;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string rightHit;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string frontHit;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string backHit;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string shootLeft;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string shootRight;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string bowPullLeft;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string bowPullRight;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool lowHpPlayed;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string reward;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string lowhp;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string finished;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lowHpTriggerPoint;

	[Token(Token = "0x17000072")]
	private BowController bowController
	{
		[Token(Token = "0x6000521")]
		[Address(RVA = "0x928414", Offset = "0x928414", VA = "0x928414")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x9284B4", Offset = "0x9284B4", VA = "0x9284B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x928750", Offset = "0x928750", VA = "0x928750")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x9289E8", Offset = "0x9289E8", VA = "0x9289E8")]
	private void PlayHitHaptics(hitDirection dir)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x928B50", Offset = "0x928B50", VA = "0x928B50")]
	private void OnBowStrech()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x928CB4", Offset = "0x928CB4", VA = "0x928CB4")]
	private void OnPlayerGetReward(int arg1, Vector3 arg2)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x928DE4", Offset = "0x928DE4", VA = "0x928DE4")]
	private void OnGameOver()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x928DEC", Offset = "0x928DEC", VA = "0x928DEC")]
	private void OnLowHp(float hp)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x928CBC", Offset = "0x928CBC", VA = "0x928CBC")]
	public void PlayBasicHapticsEvent(string key)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x928E14", Offset = "0x928E14", VA = "0x928E14")]
	public void PlayHitHaptics(PlayerControllerCore victim, PlayerControllerCore killer)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x9290F0", Offset = "0x9290F0", VA = "0x9290F0")]
	public void PlayHitHaptics(PlayerControllerCore victim, Vector3 hitOrigin)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x929294", Offset = "0x929294", VA = "0x929294")]
	public void PlayShootHaptics()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x928B54", Offset = "0x928B54", VA = "0x928B54")]
	public void PlayBowPullHaptics()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x928FE0", Offset = "0x928FE0", VA = "0x928FE0")]
	private void CalculateHitDir(PlayerControllerCore victim, Vector3 hitDir, float hitDot)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x9293F4", Offset = "0x9293F4", VA = "0x9293F4")]
	public BhapticsHapticsPlayer()
	{
	}
}
[Token(Token = "0x200012A")]
public class RandomMaterial : MonoBehaviour
{
	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer targetRenderer;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x9295DC", Offset = "0x9295DC", VA = "0x9295DC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x9295E0", Offset = "0x9295E0", VA = "0x9295E0")]
	public void ChangeMaterial()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x929638", Offset = "0x929638", VA = "0x929638")]
	public RandomMaterial()
	{
	}
}
[Token(Token = "0x200012B")]
public class UnluckDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x929640", Offset = "0x929640", VA = "0x929640")]
	public void Start()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x92974C", Offset = "0x92974C", VA = "0x92974C")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x929780", Offset = "0x929780", VA = "0x929780")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x92984C", Offset = "0x92984C", VA = "0x92984C")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x929918", Offset = "0x929918", VA = "0x929918")]
	public UnluckDistanceDisabler()
	{
	}
}
[Token(Token = "0x200012C")]
public class FlockChild : MonoBehaviour
{
	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockController _spawner;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 _wayPoint;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _speed;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _dived;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _stuckCounter;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _damping;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool _soar;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool _landing;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _targetSpeed;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool _move;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _model;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _modelT;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _avoidValue;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float _avoidDistance;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _soarTimer;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _instantiated;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _updateSeed;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool _avoid;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _thisT;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 _landingPosOffset;

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x929934", Offset = "0x929934", VA = "0x929934")]
	public void Start()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x92A06C", Offset = "0x92A06C", VA = "0x92A06C")]
	public void Update()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x92A77C", Offset = "0x92A77C", VA = "0x92A77C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x92A7B0", Offset = "0x92A7B0", VA = "0x92A7B0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x929A18", Offset = "0x929A18", VA = "0x929A18")]
	public void FindRequiredComponents()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x929D14", Offset = "0x929D14", VA = "0x929D14")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x92A018", Offset = "0x92A018", VA = "0x92A018")]
	public void InitAvoidanceValues()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x929C18", Offset = "0x929C18", VA = "0x929C18")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x92A0C8", Offset = "0x92A0C8", VA = "0x92A0C8")]
	public void SoarTimeLimit()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x92A120", Offset = "0x92A120", VA = "0x92A120")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x92A230", Offset = "0x92A230", VA = "0x92A230")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x92AAA0", Offset = "0x92AAA0", VA = "0x92AAA0")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x92A524", Offset = "0x92A524", VA = "0x92A524")]
	public void LimitRotationOfModel()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x929B70", Offset = "0x929B70", VA = "0x929B70")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x92B01C", Offset = "0x92B01C", VA = "0x92B01C")]
	public void SetRandomMode()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x92A85C", Offset = "0x92A85C", VA = "0x92A85C")]
	public void Flap()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x929C54", Offset = "0x929C54", VA = "0x929C54")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x92B0DC", Offset = "0x92B0DC", VA = "0x92B0DC")]
	public void Soar()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x92B16C", Offset = "0x92B16C", VA = "0x92B16C")]
	public void Dive()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x92B508", Offset = "0x92B508", VA = "0x92B508")]
	public void animationSpeed()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x92B84C", Offset = "0x92B84C", VA = "0x92B84C")]
	public FlockChild()
	{
	}
}
[Token(Token = "0x200012D")]
[RequireComponent(typeof(AudioSource))]
public class FlockChildSound : MonoBehaviour
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] _idleSounds;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _idleSoundRandomChance;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] _flightSounds;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _flightSoundRandomChance;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] _scareSounds;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _pitchMin;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _pitchMax;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _volumeMin;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _volumeMax;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FlockChild _flockChild;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource _audio;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasLanded;

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x92B870", Offset = "0x92B870", VA = "0x92B870")]
	public void Start()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x92B988", Offset = "0x92B988", VA = "0x92B988")]
	public void PlayRandomSound()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x92BB8C", Offset = "0x92BB8C", VA = "0x92BB8C")]
	public void ScareSound()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x92BC88", Offset = "0x92BC88", VA = "0x92BC88")]
	public FlockChildSound()
	{
	}
}
[Token(Token = "0x200012E")]
public class FlockController : MonoBehaviour
{
	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockChild _childPrefab;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _childAmount;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _slowSpawn;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _spawnSphere;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _spawnSphereHeight;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _spawnSphereDepth;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _minSpeed;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _maxSpeed;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _minScale;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _maxScale;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _soarFrequency;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _soarAnimation;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _flapAnimation;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string _idleAnimation;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _diveValue;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _diveFrequency;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _minDamping;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _maxDamping;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _waypointDistance;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _minAnimationSpeed;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _randomPositionTimer;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _positionSphere;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _positionSphereHeight;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _positionSphereDepth;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool _childTriggerPos;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _forcedRandomDelay;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool _flatFly;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool _flatSoar;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	public bool _birdAvoid;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int _birdAvoidHorizontalForce;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool _birdAvoidDown;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool _birdAvoidUp;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int _birdAvoidVerticalForce;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _birdAvoidDistanceMax;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float _birdAvoidDistanceMin;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float _soarMaxTime;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<FlockChild> _roamers;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 _posBuffer;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int _updateDivisor;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float _newDelta;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int _updateCounter;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float _activeChildren;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform _groupTransform;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string _groupName;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool _groupChildToFlock;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 _startPosOffset;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform _thisT;

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x92BCAC", Offset = "0x92BCAC", VA = "0x92BCAC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x92BDA4", Offset = "0x92BDA4", VA = "0x92BDA4")]
	public void AddChild(int amount)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x92C058", Offset = "0x92C058", VA = "0x92C058")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x92C0A8", Offset = "0x92C0A8", VA = "0x92C0A8")]
	public void RemoveChild(int amount)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x92C1B0", Offset = "0x92C1B0", VA = "0x92C1B0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x92BEF8", Offset = "0x92BEF8", VA = "0x92BEF8")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x92C214", Offset = "0x92C214", VA = "0x92C214")]
	public void UpdateChildAmount()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x92C2A4", Offset = "0x92C2A4", VA = "0x92C2A4")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x92A930", Offset = "0x92A930", VA = "0x92A930")]
	public void SetFlockRandomPosition()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x92C48C", Offset = "0x92C48C", VA = "0x92C48C")]
	public void destroyBirds()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x92C598", Offset = "0x92C598", VA = "0x92C598")]
	public FlockController()
	{
	}
}
[Token(Token = "0x200012F")]
public class FlockScare : MonoBehaviour
{
	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController[] landingSpotControllers;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scareInterval;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceToScare;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int checkEveryNthLandingSpot;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int InvokeAmounts;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lsc;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ls;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LandingSpotController currentController;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x92C6FC", Offset = "0x92C6FC", VA = "0x92C6FC")]
	private void CheckProximityToLandingSpots()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x92C7CC", Offset = "0x92C7CC", VA = "0x92C7CC")]
	private void IterateLandingSpots()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x92C880", Offset = "0x92C880", VA = "0x92C880")]
	private bool CheckDistanceToLandingSpot(LandingSpotController lc)
	{
		return default(bool);
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x92C9C4", Offset = "0x92C9C4", VA = "0x92C9C4")]
	private void Invoker()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x92CA4C", Offset = "0x92CA4C", VA = "0x92CA4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x92CAC0", Offset = "0x92CAC0", VA = "0x92CAC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x92CB0C", Offset = "0x92CB0C", VA = "0x92CB0C")]
	public FlockScare()
	{
	}
}
[Token(Token = "0x2000130")]
public class FlockWaypointTrigger : MonoBehaviour
{
	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _timer;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockChild _flockChild;

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x92CB24", Offset = "0x92CB24", VA = "0x92CB24")]
	public void Start()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x92CC1C", Offset = "0x92CC1C", VA = "0x92CC1C")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x92CC38", Offset = "0x92CC38", VA = "0x92CC38")]
	public FlockWaypointTrigger()
	{
	}
}
[Token(Token = "0x2000131")]
public class LandingButtons : MonoBehaviour
{
	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController _landingSpotController;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockController _flockController;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hSliderValue;

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x92CC48", Offset = "0x92CC48", VA = "0x92CC48")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x92D1C0", Offset = "0x92D1C0", VA = "0x92D1C0")]
	public LandingButtons()
	{
	}
}
[Token(Token = "0x2000132")]
public class LandingSpot : MonoBehaviour
{
	[Token(Token = "0x2000133")]
	private sealed class <GetFlockChild>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minDelay;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDelay;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpot <>4__this;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000574")]
			[Address(RVA = "0x92ECDC", Offset = "0x92ECDC", VA = "0x92ECDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000575")]
			[Address(RVA = "0x92ECE4", Offset = "0x92ECE4", VA = "0x92ECE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x92DF94", Offset = "0x92DF94", VA = "0x92DF94")]
		[DebuggerHidden]
		public <GetFlockChild>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x92E5A8", Offset = "0x92E5A8", VA = "0x92E5A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x92E5AC", Offset = "0x92E5AC", VA = "0x92E5AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockChild landingChild;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool landing;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int lerpCounter;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LandingSpotController _controller;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _idle;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _thisT;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _gotcha;

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x92D1D0", Offset = "0x92D1D0", VA = "0x92D1D0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x92D394", Offset = "0x92D394", VA = "0x92D394")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x92D784", Offset = "0x92D784", VA = "0x92D784")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x92DF28", Offset = "0x92DF28", VA = "0x92DF28")]
	public void StraightenBird()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x92DD64", Offset = "0x92DD64", VA = "0x92DD64")]
	public void RotateBird()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x92D30C", Offset = "0x92D30C", VA = "0x92D30C")]
	public IEnumerator GetFlockChild(float minDelay, float maxDelay)
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x92DFBC", Offset = "0x92DFBC", VA = "0x92DFBC")]
	public void InstantLand()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x92E30C", Offset = "0x92E30C", VA = "0x92E30C")]
	public void ReleaseFlockChild()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x92E5A0", Offset = "0x92E5A0", VA = "0x92E5A0")]
	public LandingSpot()
	{
	}
}
[Token(Token = "0x2000134")]
public class LandingSpotController : MonoBehaviour
{
	[Token(Token = "0x2000135")]
	private sealed class <InstantLandOnStart>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000580")]
			[Address(RVA = "0x92F324", Offset = "0x92F324", VA = "0x92F324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000581")]
			[Address(RVA = "0x92F32C", Offset = "0x92F32C", VA = "0x92F32C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x92F100", Offset = "0x92F100", VA = "0x92F100")]
		[DebuggerHidden]
		public <InstantLandOnStart>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x92F1A0", Offset = "0x92F1A0", VA = "0x92F1A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x92F1A4", Offset = "0x92F1A4", VA = "0x92F1A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000136")]
	private sealed class <InstantLand>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000585")]
			[Address(RVA = "0x92F4B8", Offset = "0x92F4B8", VA = "0x92F4B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000586")]
			[Address(RVA = "0x92F4C0", Offset = "0x92F4C0", VA = "0x92F4C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x92F128", Offset = "0x92F128", VA = "0x92F128")]
		[DebuggerHidden]
		public <InstantLand>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x92F334", Offset = "0x92F334", VA = "0x92F334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x92F338", Offset = "0x92F338", VA = "0x92F338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _randomRotate;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 _autoCatchDelay;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 _autoDismountDelay;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _maxBirdDistance;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _minBirdDistance;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _takeClosest;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlockController _flock;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _landOnStart;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool _soarLand;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool _onlyBirdsAbove;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _landingSpeedModifier;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _landingTurnSpeedModifier;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _featherPS;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _thisT;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _activeLandingSpots;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _snapLandDistance;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _landedRotateSpeed;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _gizmoSize;

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x92ECEC", Offset = "0x92ECEC", VA = "0x92ECEC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x92C9B8", Offset = "0x92C9B8", VA = "0x92C9B8")]
	public void ScareAll()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x92EFB8", Offset = "0x92EFB8", VA = "0x92EFB8")]
	public void ScareAll(float minDelay, float maxDelay)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x92D01C", Offset = "0x92D01C", VA = "0x92D01C")]
	public void LandAll()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x92EF34", Offset = "0x92EF34", VA = "0x92EF34")]
	public IEnumerator InstantLandOnStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x92D13C", Offset = "0x92D13C", VA = "0x92D13C")]
	public IEnumerator InstantLand(float delay)
	{
		return null;
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x92F150", Offset = "0x92F150", VA = "0x92F150")]
	public LandingSpotController()
	{
	}
}
[Token(Token = "0x2000137")]
public class DemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentNomber;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject currentInstance;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x92F4C8", Offset = "0x92F4C8", VA = "0x92F4C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x92F63C", Offset = "0x92F63C", VA = "0x92F63C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x92F838", Offset = "0x92F838", VA = "0x92F838")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x92F9EC", Offset = "0x92F9EC", VA = "0x92F9EC")]
	public DemoGUI()
	{
	}
}
[Token(Token = "0x2000138")]
public class DemoReactivator : MonoBehaviour
{
	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelayToReactivate;

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x92FA60", Offset = "0x92FA60", VA = "0x92FA60")]
	private void Start()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x92FAB4", Offset = "0x92FAB4", VA = "0x92FAB4")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x92FB7C", Offset = "0x92FB7C", VA = "0x92FB7C")]
	public DemoReactivator()
	{
	}
}
[Token(Token = "0x2000139")]
internal class UVTextureAnimator : MonoBehaviour
{
	[Token(Token = "0x200013A")]
	private sealed class <UpdateCorutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UVTextureAnimator <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059B")]
			[Address(RVA = "0x9302F0", Offset = "0x9302F0", VA = "0x9302F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059C")]
			[Address(RVA = "0x9302F8", Offset = "0x9302F8", VA = "0x9302F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x930008", Offset = "0x930008", VA = "0x930008")]
		[DebuggerHidden]
		public <UpdateCorutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x9301F4", Offset = "0x9301F4", VA = "0x9301F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x9301F8", Offset = "0x9301F8", VA = "0x9301F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Rows;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Columns;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Fps;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int OffsetMat;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StartDelay;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isInizialised;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int index;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int count;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int allCount;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float deltaFps;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isVisible;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool isCorutineStarted;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer currentRenderer;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material instanceMaterial;

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x92FB8C", Offset = "0x92FB8C", VA = "0x92FB8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x92FC00", Offset = "0x92FC00", VA = "0x92FC00")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x92FE58", Offset = "0x92FE58", VA = "0x92FE58")]
	private void Play()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x92FF5C", Offset = "0x92FF5C", VA = "0x92FF5C")]
	private void PlayDelay()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x92FF7C", Offset = "0x92FF7C", VA = "0x92FF7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x92FFAC", Offset = "0x92FFAC", VA = "0x92FFAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x92FEE8", Offset = "0x92FEE8", VA = "0x92FEE8")]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x930030", Offset = "0x930030", VA = "0x930030")]
	private void UpdateCorutineFrame()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x930134", Offset = "0x930134", VA = "0x930134")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x9301D4", Offset = "0x9301D4", VA = "0x9301D4")]
	public UVTextureAnimator()
	{
	}
}
[Token(Token = "0x200013B")]
public class BloomController : MonoBehaviour
{
	[Token(Token = "0x200013C")]
	public enum RenderingOptions
	{
		[Token(Token = "0x400073F")]
		StandardForward,
		[Token(Token = "0x4000740")]
		DefferedHDRBloom
	}

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RenderingOptions renderingOption;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Camera cameraToChange;

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x930300", Offset = "0x930300", VA = "0x930300")]
	public BloomController()
	{
	}
}
[Token(Token = "0x200013D")]
public class BowControllerContainer : MonoBehaviour
{
	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BowController bowController;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x930308", Offset = "0x930308", VA = "0x930308")]
	public BowControllerContainer()
	{
	}
}
[Token(Token = "0x200013E")]
public class BowModelInfo : MonoBehaviour
{
	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquipmentItemKey equipmentItemKey;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> BowParts;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> BowAdditionalElements;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Bow;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject BowHandle;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer BowMesh;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SkinnedMeshRenderer BowSkinnedMesh;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material BowMaterial;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> BowMenuParts;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GameObject> BowMenuAdditionalElements;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject BowMenu;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject BowMenuHandle;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MeshRenderer BowMenuMesh;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SkinnedMeshRenderer BowMenuSkinnedMesh;

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x930310", Offset = "0x930310", VA = "0x930310")]
	internal void ShowModel()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x93093C", Offset = "0x93093C", VA = "0x93093C")]
	internal void HideModel()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x930D14", Offset = "0x930D14", VA = "0x930D14")]
	public BowModelInfo()
	{
	}
}
[Token(Token = "0x200013F")]
public class ShopItem : MonoBehaviour
{
	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquipmentItemType equipmentItemType;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public EquipmentItemKey equipmentItemKey;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isStandard;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform bowTransform;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform bowTransformInSet;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BowModelInfo bowModelInfo;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HelmetModelInfo helmetModelInfo;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int cost;

	[Token(Token = "0x1700007B")]
	public bool IsBought
	{
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x930E80", Offset = "0x930E80", VA = "0x930E80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007C")]
	public bool IsUsed
	{
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x930F2C", Offset = "0x930F2C", VA = "0x930F2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x930D1C", Offset = "0x930D1C", VA = "0x930D1C")]
	public void ShowItemModel()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x930E20", Offset = "0x930E20", VA = "0x930E20")]
	public void HideItemModel()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x930F8C", Offset = "0x930F8C", VA = "0x930F8C")]
	public ShopItem()
	{
	}
}
[Token(Token = "0x2000140")]
public class CanvasChacheController : MonoBehaviour
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectWithText;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Text> texts;

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x930F94", Offset = "0x930F94", VA = "0x930F94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x931250", Offset = "0x931250", VA = "0x931250")]
	public CanvasChacheController()
	{
	}
}
[Token(Token = "0x2000141")]
public class CatapultEnemyHitController : MonoBehaviourPun
{
	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float damage;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<EnemyGetHitController> hitEnemiesAlready;

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x9312D8", Offset = "0x9312D8", VA = "0x9312D8")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x9314E4", Offset = "0x9314E4", VA = "0x9314E4")]
	public CatapultEnemyHitController()
	{
	}
}
[Token(Token = "0x2000142")]
public class CatapultRockRemover : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x2000143")]
	private sealed class <DestroySelfOvertime>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatapultRockRemover <>4__this;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0x931E28", Offset = "0x931E28", VA = "0x931E28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0x931E30", Offset = "0x931E30", VA = "0x931E30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x931AEC", Offset = "0x931AEC", VA = "0x931AEC")]
		[DebuggerHidden]
		public <DestroySelfOvertime>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x931CFC", Offset = "0x931CFC", VA = "0x931CFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x931D00", Offset = "0x931D00", VA = "0x931D00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400075C")]
	private const float startShrinkValue = 0f;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rockGameObject;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float timeForStartFading;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float timeForFadeStep;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float timeToDestroy;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<ParticleSystem> particleSystems;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<float> emissionValues;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float shrinkStep;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 defaultScale;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool shouldShrinkDown;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float shrinkValue;

	[Token(Token = "0x1700007D")]
	private WaitForSeconds waitForStartFading
	{
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x931574", Offset = "0x931574", VA = "0x931574")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007E")]
	private WaitForSeconds waitForDestroy
	{
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x9315E4", Offset = "0x9315E4", VA = "0x9315E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x931654", Offset = "0x931654", VA = "0x931654")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x9318CC", Offset = "0x9318CC", VA = "0x9318CC")]
	public void DestroyRockDelayed()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x931A78", Offset = "0x931A78", VA = "0x931A78")]
	public IEnumerator DestroySelfOvertime()
	{
		return null;
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x9318F8", Offset = "0x9318F8", VA = "0x9318F8")]
	public void ChangeEmmissionByMultiplier(float emmissionMultiplier)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x931664", Offset = "0x931664", VA = "0x931664")]
	private void ShrinkDown()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x931B14", Offset = "0x931B14", VA = "0x931B14", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x931CD4", Offset = "0x931CD4", VA = "0x931CD4")]
	public CatapultRockRemover()
	{
	}
}
[Token(Token = "0x2000144")]
public class CollisionInfoController : MonoBehaviour
{
	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collision collision;

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x931E38", Offset = "0x931E38", VA = "0x931E38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x931EF0", Offset = "0x931EF0", VA = "0x931EF0")]
	public void StoreCollisionData(Collision collider)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x931EF8", Offset = "0x931EF8", VA = "0x931EF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x931EFC", Offset = "0x931EFC", VA = "0x931EFC")]
	public void ResetCollisionInfoController()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x931FC4", Offset = "0x931FC4", VA = "0x931FC4")]
	public CollisionInfoController()
	{
	}
}
[Token(Token = "0x2000145")]
public class DeathMatchTournamentScoreboadAdjuster : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000146")]
	private sealed class <>c
	{
		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Image> <>9__6_0;

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x932308", Offset = "0x932308", VA = "0x932308")]
		public <>c()
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x932310", Offset = "0x932310", VA = "0x932310")]
		internal void <AdjustScoreboardEntries>b__6_0(Image image)
		{
		}
	}

	[Token(Token = "0x400076B")]
	private const float alphaCoefficient = 0.3f;

	[Token(Token = "0x400076C")]
	private const float darkerColorCoefficient = 0.6f;

	[Token(Token = "0x400076D")]
	private const int defaultWinningPlayersCount = 2;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Image> underlineImages;

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x931FCC", Offset = "0x931FCC", VA = "0x931FCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x931FF4", Offset = "0x931FF4", VA = "0x931FF4")]
	public void AdjustScoreboard()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x932068", Offset = "0x932068", VA = "0x932068")]
	private void AdjustScoreboardEntries(int winningPlayers)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x9321D0", Offset = "0x9321D0", VA = "0x9321D0")]
	[ContextMenu("TestAdjuster")]
	public void TestAdjuster()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x932290", Offset = "0x932290", VA = "0x932290")]
	public DeathMatchTournamentScoreboadAdjuster()
	{
	}
}
[Token(Token = "0x2000147")]
public class DebugIDController : MonoBehaviour
{
	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x93232C", Offset = "0x93232C", VA = "0x93232C")]
	[ContextMenu("Debug")]
	public void DebugID()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x932430", Offset = "0x932430", VA = "0x932430")]
	public DebugIDController()
	{
	}
}
[Token(Token = "0x2000148")]
public class DebugShapeDrawer : MonoBehaviour
{
	[Token(Token = "0x2000149")]
	public enum ShapeToBeDrawn
	{
		[Token(Token = "0x4000775")]
		cube,
		[Token(Token = "0x4000776")]
		sphere,
		[Token(Token = "0x4000777")]
		mesh,
		[Token(Token = "0x4000778")]
		wireCube,
		[Token(Token = "0x4000779")]
		wireSphere,
		[Token(Token = "0x400077A")]
		wireMesh
	}

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Color shapeDebuggerColor;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public ShapeToBeDrawn shapeToBeDrawn;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public float objectToDrawScaleMultiplier;

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x932438", Offset = "0x932438", VA = "0x932438")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x93283C", Offset = "0x93283C", VA = "0x93283C")]
	public DebugShapeDrawer()
	{
	}
}
[Token(Token = "0x200014A")]
public class Destroyer : MonoBehaviour
{
	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x93284C", Offset = "0x93284C", VA = "0x93284C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x9328C8", Offset = "0x9328C8", VA = "0x9328C8")]
	public Destroyer()
	{
	}
}
[Token(Token = "0x200014B")]
public class DevelopmentController : MonoBehaviour
{
	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x9328D0", Offset = "0x9328D0", VA = "0x9328D0")]
	public DevelopmentController()
	{
	}
}
[Token(Token = "0x200014C")]
public class DisplayGameVersionInSettings : MonoBehaviour
{
	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x9328D8", Offset = "0x9328D8", VA = "0x9328D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x9329A0", Offset = "0x9329A0", VA = "0x9329A0")]
	public DisplayGameVersionInSettings()
	{
	}
}
[Token(Token = "0x200014D")]
public class DistortionParticleController : MonoBehaviour
{
	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material material;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystemRenderer particleSystemRenderer;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float duration;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentDuration;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color initialColor;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float initialValue;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x9329A8", Offset = "0x9329A8", VA = "0x9329A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x932A9C", Offset = "0x932A9C", VA = "0x932A9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x932B20", Offset = "0x932B20", VA = "0x932B20")]
	private void SetMaterialProperties()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x932BF8", Offset = "0x932BF8", VA = "0x932BF8")]
	public DistortionParticleController()
	{
	}
}
[Token(Token = "0x200014E")]
public class DragonSpeedChanger : MonoBehaviour
{
	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dragonSpeed;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x932C0C", Offset = "0x932C0C", VA = "0x932C0C")]
	public DragonSpeedChanger()
	{
	}
}
[Token(Token = "0x200014F")]
public class DropdownDebug : MonoBehaviour
{
	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Dropdown dropdown;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isShown;

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x932C1C", Offset = "0x932C1C", VA = "0x932C1C")]
	public void ToggleDropdown()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x932C68", Offset = "0x932C68", VA = "0x932C68")]
	public DropdownDebug()
	{
	}
}
[Token(Token = "0x2000150")]
public class SpawnEffect : MonoBehaviour
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spawnEffectTime;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pause;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve fadeIn;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer _renderer;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int shaderProperty;

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x932C70", Offset = "0x932C70", VA = "0x932C70")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x932D70", Offset = "0x932D70", VA = "0x932D70")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x932E30", Offset = "0x932E30", VA = "0x932E30")]
	public SpawnEffect()
	{
	}
}
[Token(Token = "0x2000151")]
public class BowSoundController : MonoBehaviour
{
	[Token(Token = "0x400078C")]
	private const int volumeMultiplier = 3;

	[Token(Token = "0x400078D")]
	private const float minPitch = 0.5f;

	[Token(Token = "0x400078E")]
	private const float maxPitch = 1f;

	[Token(Token = "0x400078F")]
	private const int stretchSpeedToPitchMultiplier = 3;

	[Token(Token = "0x4000790")]
	private const float minStrechSpeedForSlowStretchSound = 0.05f;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BowController bowController;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource BowStretchAudioSource;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip StretchSoundSlow;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip StretchSoundSlower;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float stretchSpeed;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isStretching;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float bowStretch;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float bowPreviousStretch;

	[Token(Token = "0x14000011")]
	public event Action OnBowStretch
	{
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x932E44", Offset = "0x932E44", VA = "0x932E44")]
		add
		{
		}
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x932EE0", Offset = "0x932EE0", VA = "0x932EE0")]
		remove
		{
		}
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x932F7C", Offset = "0x932F7C", VA = "0x932F7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x933080", Offset = "0x933080", VA = "0x933080")]
	public BowSoundController()
	{
	}
}
[Token(Token = "0x2000152")]
public class EquipmentChanger : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x2000153")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string bowName;

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x933B24", Offset = "0x933B24", VA = "0x933B24")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x933DAC", Offset = "0x933DAC", VA = "0x933DAC")]
		internal bool <GetBowModel>b__0(BowModelInfo item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000154")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string helmetName;

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x933C14", Offset = "0x933C14", VA = "0x933C14")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x933E30", Offset = "0x933E30", VA = "0x933E30")]
		internal bool <GetHelmetModel>b__0(HelmetModelInfo item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400079A")]
	private const EquipmentItemKey defaultBowKey = EquipmentItemKey.Bow_WoodenBow_Default;

	[Token(Token = "0x400079B")]
	private const EquipmentItemKey defaultHelmetKey = EquipmentItemKey.Helmet_Barbuta_default;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BowModelInfo> BowModelsInfo;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<HelmetModelInfo> HelmetModelsInfo;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ItemsWithBonuses itemBonusesList;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private WenklyStudio.ElvenAssassin.PlayerController playerController;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BowModelInfo _currentBowModelInfo;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HelmetModelInfo currentHelmetModelInfo;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string equipedHelmetName;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string equipedBowName;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isHelmetInitialized;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action OnHelmetInitialized;

	[Token(Token = "0x17000081")]
	private string EquipedHelmetName
	{
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x933088", Offset = "0x933088", VA = "0x933088")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x933090", Offset = "0x933090", VA = "0x933090")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	private string EquipedBowName
	{
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x9332B0", Offset = "0x9332B0", VA = "0x9332B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x9332B8", Offset = "0x9332B8", VA = "0x9332B8")]
		set
		{
		}
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x9333CC", Offset = "0x9333CC", VA = "0x9333CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x933424", Offset = "0x933424", VA = "0x933424")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x93347C", Offset = "0x93347C", VA = "0x93347C")]
	public void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x93351C", Offset = "0x93351C", VA = "0x93351C")]
	public void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x9334C4", Offset = "0x9334C4", VA = "0x9334C4")]
	public void InitEquip()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x9335FC", Offset = "0x9335FC", VA = "0x9335FC")]
	private void SetEquipedItemNames()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x93393C", Offset = "0x93393C", VA = "0x93393C")]
	private void SetEquippedItemsBonuses()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x93358C", Offset = "0x93358C", VA = "0x93358C")]
	private bool IsInGameEquipmentChanger()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x933A3C", Offset = "0x933A3C", VA = "0x933A3C")]
	private BowModelInfo GetBowModel(string bowName)
	{
		return null;
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x933B2C", Offset = "0x933B2C", VA = "0x933B2C")]
	private HelmetModelInfo GetHelmetModel(string helmetName)
	{
		return null;
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x933C1C", Offset = "0x933C1C", VA = "0x933C1C")]
	public GameObject GetCurrentHelmet()
	{
		return null;
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x933C38", Offset = "0x933C38", VA = "0x933C38")]
	public EquipmentItemKey GetCurrentBowItemKey()
	{
		return default(EquipmentItemKey);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x933324", Offset = "0x933324", VA = "0x933324")]
	public void ChangeBow(string bowName)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x93311C", Offset = "0x93311C", VA = "0x93311C")]
	public void ChangeHelmet(string helmetName)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x933C54", Offset = "0x933C54", VA = "0x933C54")]
	public bool IsEquipmentInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x933C90", Offset = "0x933C90", VA = "0x933C90", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x933DA4", Offset = "0x933DA4", VA = "0x933DA4")]
	public EquipmentChanger()
	{
	}
}
[Token(Token = "0x2000155")]
public class QuickStart : MonoBehaviour
{
	[Token(Token = "0x2000156")]
	private sealed class <Explode>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuickStart <>4__this;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0x934154", Offset = "0x934154", VA = "0x934154", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FD")]
			[Address(RVA = "0x93415C", Offset = "0x93415C", VA = "0x93415C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x933F90", Offset = "0x933F90", VA = "0x933F90")]
		[DebuggerHidden]
		public <Explode>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x933FC0", Offset = "0x933FC0", VA = "0x933FC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x933FC4", Offset = "0x933FC4", VA = "0x933FC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject g1;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject g2;

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x933EB4", Offset = "0x933EB4", VA = "0x933EB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x933F1C", Offset = "0x933F1C", VA = "0x933F1C")]
	private IEnumerator Explode()
	{
		return null;
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x933FB8", Offset = "0x933FB8", VA = "0x933FB8")]
	public QuickStart()
	{
	}
}
[Token(Token = "0x2000157")]
public class TweenFragment : MonoBehaviour
{
	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TargetPos;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LerpTime;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initPos;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x934164", Offset = "0x934164", VA = "0x934164")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x934198", Offset = "0x934198", VA = "0x934198")]
	private void Update()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x934268", Offset = "0x934268", VA = "0x934268")]
	public TweenFragment()
	{
	}
}
[Token(Token = "0x2000158")]
public class ExplosionForcer : MonoBehaviour
{
	[Token(Token = "0x6000601")]
	[Address(RVA = "0x934270", Offset = "0x934270", VA = "0x934270")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x9342DC", Offset = "0x9342DC", VA = "0x9342DC")]
	public ExplosionForcer()
	{
	}
}
[Token(Token = "0x2000159")]
public class FFRControler : MonoBehaviour
{
	[Token(Token = "0x6000603")]
	[Address(RVA = "0x9342E4", Offset = "0x9342E4", VA = "0x9342E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x934338", Offset = "0x934338", VA = "0x934338")]
	public FFRControler()
	{
	}
}
[Token(Token = "0x200015A")]
public class FireLightScript : MonoBehaviour
{
	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minIntensity;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxIntensity;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light fireLight;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float random;

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x934340", Offset = "0x934340", VA = "0x934340")]
	private void Update()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x934400", Offset = "0x934400", VA = "0x934400")]
	public FireLightScript()
	{
	}
}
[Token(Token = "0x200015B")]
public class FireArrowAttachPoint : MonoBehaviour
{
	[Token(Token = "0x6000607")]
	[Address(RVA = "0x934414", Offset = "0x934414", VA = "0x934414")]
	public FireArrowAttachPoint()
	{
	}
}
[Token(Token = "0x200015C")]
public class FootstepsSoundBasedOnAnimationController : MonoBehaviour
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] audioClips;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minPitch;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxPitch;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x93441C", Offset = "0x93441C", VA = "0x93441C")]
	public void PlayFootstepsSound()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x934430", Offset = "0x934430", VA = "0x934430")]
	public void SetReferences(AudioSource _audioSource)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x934438", Offset = "0x934438", VA = "0x934438")]
	public FootstepsSoundBasedOnAnimationController()
	{
	}
}
[Token(Token = "0x200015D")]
public class ForceDirectionExploderController : MonoBehaviour
{
	[Token(Token = "0x14000012")]
	public event Action OnCollisionAction
	{
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x93444C", Offset = "0x93444C", VA = "0x93444C")]
		add
		{
		}
		[Token(Token = "0x600060C")]
		[Address(RVA = "0x9344E8", Offset = "0x9344E8", VA = "0x9344E8")]
		remove
		{
		}
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x934584", Offset = "0x934584", VA = "0x934584")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x934648", Offset = "0x934648", VA = "0x934648")]
	public ForceDirectionExploderController()
	{
	}
}
[Token(Token = "0x200015E")]
public class FV_BranchRotation : MonoBehaviour
{
	[Token(Token = "0x200015F")]
	private sealed class <WindGen>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FV_BranchRotation <>4__this;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061D")]
			[Address(RVA = "0x935164", Offset = "0x935164", VA = "0x935164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600061E")]
			[Address(RVA = "0x93516C", Offset = "0x93516C", VA = "0x93516C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x934A44", Offset = "0x934A44", VA = "0x934A44")]
		[DebuggerHidden]
		public <WindGen>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x935098", Offset = "0x935098", VA = "0x935098", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x93509C", Offset = "0x93509C", VA = "0x93509C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000160")]
	private sealed class <BlowX>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FV_BranchRotation <>4__this;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000622")]
			[Address(RVA = "0x93525C", Offset = "0x93525C", VA = "0x93525C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000623")]
			[Address(RVA = "0x935264", Offset = "0x935264", VA = "0x935264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x934AE0", Offset = "0x934AE0", VA = "0x934AE0")]
		[DebuggerHidden]
		public <BlowX>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x935174", Offset = "0x935174", VA = "0x935174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x935178", Offset = "0x935178", VA = "0x935178", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000161")]
	private sealed class <BlowY>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FV_BranchRotation <>4__this;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000627")]
			[Address(RVA = "0x935354", Offset = "0x935354", VA = "0x935354", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000628")]
			[Address(RVA = "0x93535C", Offset = "0x93535C", VA = "0x93535C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x934B7C", Offset = "0x934B7C", VA = "0x934B7C")]
		[DebuggerHidden]
		public <BlowY>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x93526C", Offset = "0x93526C", VA = "0x93526C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x935270", Offset = "0x935270", VA = "0x935270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000162")]
	private sealed class <BlowZ>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FV_BranchRotation <>4__this;

		[Token(Token = "0x1700008B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600062C")]
			[Address(RVA = "0x93544C", Offset = "0x93544C", VA = "0x93544C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062D")]
			[Address(RVA = "0x935454", Offset = "0x935454", VA = "0x935454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x934C18", Offset = "0x934C18", VA = "0x934C18")]
		[DebuggerHidden]
		public <BlowZ>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x935364", Offset = "0x935364", VA = "0x935364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x935368", Offset = "0x935368", VA = "0x935368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000163")]
	private sealed class <PeriodicRandomUpdate>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FV_BranchRotation <>4__this;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000631")]
			[Address(RVA = "0x935594", Offset = "0x935594", VA = "0x935594", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000632")]
			[Address(RVA = "0x93559C", Offset = "0x93559C", VA = "0x93559C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x934C40", Offset = "0x934C40", VA = "0x934C40")]
		[DebuggerHidden]
		public <PeriodicRandomUpdate>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x93545C", Offset = "0x93545C", VA = "0x93545C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x935460", Offset = "0x935460", VA = "0x935460", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float stopSwayDistance;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float WindStrength;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float WindDampening;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Offset_Amount;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Random_Range_Amount;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RandomUpdate_Min;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RandomUpdate_Max;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float X_Angle;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float X_Period;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Y_Angle;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Y_Period;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float Z_Angle;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Z_Period;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float levelWindFrequency;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float Angle_Multipler;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float Period_Multipler;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float GlobalWindX;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float GlobalWindY;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float GlobalWindZ;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _Time;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int RandomSeeder;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float RandomRanger;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float rand1;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float rand2;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float WindRandomness;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float Xphase;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float Yphase;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float Zphase;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float xSpeedStart;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float ySpeedStart;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float zSpeedStart;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float originalX;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float originalY;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float originalZ;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 originalBranchRotation;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x934650", Offset = "0x934650", VA = "0x934650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x9349D0", Offset = "0x9349D0", VA = "0x9349D0")]
	private IEnumerator WindGen()
	{
		return null;
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x934A6C", Offset = "0x934A6C", VA = "0x934A6C")]
	private IEnumerator BlowX()
	{
		return null;
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x934B08", Offset = "0x934B08", VA = "0x934B08")]
	private IEnumerator BlowY()
	{
		return null;
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x934BA4", Offset = "0x934BA4", VA = "0x934BA4")]
	private IEnumerator BlowZ()
	{
		return null;
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x9348D8", Offset = "0x9348D8", VA = "0x9348D8")]
	private IEnumerator PeriodicRandomUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x93494C", Offset = "0x93494C", VA = "0x93494C")]
	private void InitialRandomOffset()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x934C68", Offset = "0x934C68", VA = "0x934C68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x934F60", Offset = "0x934F60", VA = "0x934F60")]
	private void PullBranchesBack()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x934EEC", Offset = "0x934EEC", VA = "0x934EEC")]
	private void AnimateBranches()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x93504C", Offset = "0x93504C", VA = "0x93504C")]
	public FV_BranchRotation()
	{
	}
}
[Token(Token = "0x2000164")]
public class FV_Wind : MonoBehaviour
{
	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Wind_Intensity;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Angle_Multipler;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Shake_Distance;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x9355A4", Offset = "0x9355A4", VA = "0x9355A4")]
	public FV_Wind()
	{
	}
}
[Token(Token = "0x2000165")]
public class FortuneReseter : MonoBehaviour
{
	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject oculusFortuneResetBall;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x9355C4", Offset = "0x9355C4", VA = "0x9355C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x9356A0", Offset = "0x9356A0", VA = "0x9356A0")]
	public FortuneReseter()
	{
	}
}
[Token(Token = "0x2000166")]
public class FreezeColliderController : MonoBehaviour
{
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x9356A8", Offset = "0x9356A8", VA = "0x9356A8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x9356DC", Offset = "0x9356DC", VA = "0x9356DC")]
	public FreezeColliderController()
	{
	}
}
[Token(Token = "0x2000167")]
public class GiantTrollRock : MonoBehaviour
{
	[Token(Token = "0x2000168")]
	private sealed class <AnimateRockRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GiantTrollRock <>4__this;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <rockRotationAxis>5__2;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <flyPathPosition>5__3;

		[Token(Token = "0x1700008F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000642")]
			[Address(RVA = "0x935D20", Offset = "0x935D20", VA = "0x935D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000643")]
			[Address(RVA = "0x935D28", Offset = "0x935D28", VA = "0x935D28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x9358A0", Offset = "0x9358A0", VA = "0x9358A0")]
		[DebuggerHidden]
		public <AnimateRockRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x935AA8", Offset = "0x935AA8", VA = "0x935AA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x935AAC", Offset = "0x935AAC", VA = "0x935AAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000169")]
	private sealed class <ExplodeRockRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GiantTrollRock <>4__this;

		[Token(Token = "0x17000091")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000647")]
			[Address(RVA = "0x936080", Offset = "0x936080", VA = "0x936080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000648")]
			[Address(RVA = "0x936088", Offset = "0x936088", VA = "0x936088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x93593C", Offset = "0x93593C", VA = "0x93593C")]
		[DebuggerHidden]
		public <ExplodeRockRoutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x935D30", Offset = "0x935D30", VA = "0x935D30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x935D34", Offset = "0x935D34", VA = "0x935D34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200016A")]
	private sealed class <DisappearFragmentsRoutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GiantTrollRock <>4__this;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IReadOnlyCollection<Rigidbody> fragments;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <fragmentSize>5__2;

		[Token(Token = "0x17000093")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600064C")]
			[Address(RVA = "0x936464", Offset = "0x936464", VA = "0x936464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600064D")]
			[Address(RVA = "0x93646C", Offset = "0x93646C", VA = "0x93646C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x9359F4", Offset = "0x9359F4", VA = "0x9359F4")]
		[DebuggerHidden]
		public <DisappearFragmentsRoutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x936090", Offset = "0x936090", VA = "0x936090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x936094", Offset = "0x936094", VA = "0x936094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float rockSpeed;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rockSpin;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float explosionForce;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float disappearingRate;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float fragmentsDisappearDelay;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TrollRockSoundController trollRockSoundController;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem smokeParticleSystem;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<Rigidbody> rockFragments;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ParticleSystem explosionParticleSystem;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject MobileRock;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 throwPosition;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 arcTopPosition;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 targetPosition;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds rockFragmentsDisappearDelay;

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x9356E4", Offset = "0x9356E4", VA = "0x9356E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x93575C", Offset = "0x93575C", VA = "0x93575C")]
	public void Initialize(Quaternion rotation, Vector3 _throwPosition, Vector3 _targetPosition, Vector3 _arcTopPosition)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x93582C", Offset = "0x93582C", VA = "0x93582C")]
	public IEnumerator AnimateRockRoutine()
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x9358C8", Offset = "0x9358C8", VA = "0x9358C8")]
	public IEnumerator ExplodeRockRoutine()
	{
		return null;
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x935964", Offset = "0x935964", VA = "0x935964")]
	private IEnumerator DisappearFragmentsRoutine(IReadOnlyCollection<Rigidbody> fragments)
	{
		return null;
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x935A1C", Offset = "0x935A1C", VA = "0x935A1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x935A88", Offset = "0x935A88", VA = "0x935A88")]
	public GiantTrollRock()
	{
	}
}
[Token(Token = "0x200016B")]
public class GlassPieceStayer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200016C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<MeshRenderer> <>9__5_0;

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x937648", Offset = "0x937648", VA = "0x937648")]
		public <>c()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x937650", Offset = "0x937650", VA = "0x937650")]
		internal void <KeepFrozenPiecesSet>b__5_0(MeshRenderer piece)
		{
		}
	}

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GlassPiecesToStaySet[] glassPiecesSets;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ExplodeObject explodeObject;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int randomNumber;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool done;

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x937474", Offset = "0x937474", VA = "0x937474")]
	private void Awake()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x937478", Offset = "0x937478", VA = "0x937478")]
	private void KeepFrozenPiecesSet()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x9375D0", Offset = "0x9375D0", VA = "0x9375D0")]
	public GlassPieceStayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200016D")]
public class GlassPiecesToStaySet
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MeshRenderer[] piecesSet;

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x937700", Offset = "0x937700", VA = "0x937700")]
	public GlassPiecesToStaySet()
	{
	}
}
[Token(Token = "0x200016E")]
public class HeadCollider : MonoBehaviourPun
{
	[Token(Token = "0x6000655")]
	[Address(RVA = "0x937708", Offset = "0x937708", VA = "0x937708")]
	public HeadCollider()
	{
	}
}
[Token(Token = "0x200016F")]
public class HelmetModelInfo : MonoBehaviour
{
	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquipmentItemKey equipmentItemKey;

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x937710", Offset = "0x937710", VA = "0x937710")]
	internal void ShowModel()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x937734", Offset = "0x937734", VA = "0x937734")]
	internal void HideModel()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x937758", Offset = "0x937758", VA = "0x937758")]
	public HelmetModelInfo()
	{
	}
}
[Token(Token = "0x2000170")]
public class IceExplosionParticlesController : MonoBehaviour
{
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem orcExplosionParticleSystemFog;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem orcExplosionParticleSystemFragments;

	[Token(Token = "0x4000816")]
	private const float minRandomOffset = -1f;

	[Token(Token = "0x4000817")]
	private const float maxRandomOffset = 1f;

	[Token(Token = "0x4000818")]
	private const float heightFragmentsMultiplier = 2f;

	[Token(Token = "0x4000819")]
	private const float arrowFogDirectionMultiplier = 2f;

	[Token(Token = "0x400081A")]
	private const float fragmentsMultiplier = 5f;

	[Token(Token = "0x400081B")]
	private const int sizeComparisonCoefficient = 4;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x937760", Offset = "0x937760", VA = "0x937760")]
	public void AdjustFogParticles(Vector3 hitDirection)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x937984", Offset = "0x937984", VA = "0x937984")]
	public void AdjustFragmentParticles(Vector3 hitDirection)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x937918", Offset = "0x937918", VA = "0x937918")]
	private static bool DifferenceBetweenAxesIsSmallEnough(Vector3 hitDirection)
	{
		return default(bool);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x937934", Offset = "0x937934", VA = "0x937934")]
	private static void RandomizeOneAxis(Vector3 hitDirection, ref ParticleSystem.MinMaxCurve minMaxCurveX, ref ParticleSystem.MinMaxCurve minMaxCurveZ)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x937BA4", Offset = "0x937BA4", VA = "0x937BA4")]
	public void SetReferences(ParticleSystem _orcExplosionParticleSystemFog, ParticleSystem _orcExplosionParticleSystemFragments)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x937BD4", Offset = "0x937BD4", VA = "0x937BD4")]
	public IceExplosionParticlesController()
	{
	}
}
[Token(Token = "0x2000171")]
public class IceShieldCollision : MonoBehaviour
{
	[Token(Token = "0x600065F")]
	[Address(RVA = "0x937BDC", Offset = "0x937BDC", VA = "0x937BDC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x937CE8", Offset = "0x937CE8", VA = "0x937CE8")]
	public IceShieldCollision()
	{
	}
}
[Token(Token = "0x2000172")]
public class IceShieldShards : MonoBehaviour
{
	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem shards;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform center;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x937CF0", Offset = "0x937CF0", VA = "0x937CF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x937DB4", Offset = "0x937DB4", VA = "0x937DB4")]
	public IceShieldShards()
	{
	}
}
[Token(Token = "0x2000173")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x6000663")]
	[Address(RVA = "0x937DBC", Offset = "0x937DBC", VA = "0x937DBC")]
	public void OnPreRender()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x937E00", Offset = "0x937E00", VA = "0x937E00")]
	public void OnPostRender()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x937E44", Offset = "0x937E44", VA = "0x937E44")]
	public Test()
	{
	}
}
[Token(Token = "0x2000174")]
public class WFXDemoGUI : MonoBehaviour
{
	[Token(Token = "0x2000175")]
	public struct HSBColor
	{
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float h;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float s;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x938FE0", Offset = "0x938FE0", VA = "0x938FE0")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light Sun;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] Weapons;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture HUETexture;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentNomber;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject currentInstance;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float oldIntensity;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color oldAmbientColor;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float dpiScale;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isDay;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float colorHUE;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int currentWeaponNomber;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject currentWeaponInstance;

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x937E4C", Offset = "0x937E4C", VA = "0x937E4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x938338", Offset = "0x938338", VA = "0x938338")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x937FD8", Offset = "0x937FD8", VA = "0x937FD8")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x938DFC", Offset = "0x938DFC", VA = "0x938DFC")]
	private Color Hue(float H)
	{
		return default(Color);
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x938EF0", Offset = "0x938EF0", VA = "0x938EF0")]
	public HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x938FEC", Offset = "0x938FEC", VA = "0x938FEC")]
	public Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x9391A8", Offset = "0x9391A8", VA = "0x9391A8")]
	private Material SetMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x938994", Offset = "0x938994", VA = "0x938994")]
	private void ChangeColor()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x939258", Offset = "0x939258", VA = "0x939258")]
	public WFXDemoGUI()
	{
	}
}
[Token(Token = "0x2000176")]
public class WFX_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x9392CC", Offset = "0x9392CC", VA = "0x9392CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x93934C", Offset = "0x93934C", VA = "0x93934C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x9393C0", Offset = "0x9393C0", VA = "0x9393C0")]
	public WFX_RealtimeReflection()
	{
	}
}
[Token(Token = "0x2000177")]
public class WFX_FPS : MonoBehaviour
{
	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly GUIStyle guiStyleHeader;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeleft;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float fps;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x9393C8", Offset = "0x9393C8", VA = "0x9393C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x939418", Offset = "0x939418", VA = "0x939418")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x939510", Offset = "0x939510", VA = "0x939510")]
	private void Update()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x939564", Offset = "0x939564", VA = "0x939564")]
	public WFX_FPS()
	{
	}
}
[Token(Token = "0x2000178")]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MeshObject;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x9395D8", Offset = "0x9395D8", VA = "0x9395D8")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x938DD4", Offset = "0x938DD4", VA = "0x938DD4")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x9395F8", Offset = "0x9395F8", VA = "0x9395F8")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x9397F8", Offset = "0x9397F8", VA = "0x9397F8")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x9399AC", Offset = "0x9399AC", VA = "0x9399AC")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, WFX_MeshMaterialEffect meshMatEff, bool isFirst)
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x939B58", Offset = "0x939B58", VA = "0x939B58")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x2000179")]
internal class WFXSpriteSheetAnimation : MonoBehaviour
{
	[Token(Token = "0x200017A")]
	private sealed class <UpdateCorutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFXSpriteSheetAnimation <>4__this;

		[Token(Token = "0x17000095")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600068B")]
			[Address(RVA = "0x93A548", Offset = "0x93A548", VA = "0x93A548", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600068C")]
			[Address(RVA = "0x93A550", Offset = "0x93A550", VA = "0x93A550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x939F28", Offset = "0x939F28", VA = "0x939F28")]
		[DebuggerHidden]
		public <UpdateCorutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x93A3F0", Offset = "0x93A3F0", VA = "0x93A3F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x93A3F4", Offset = "0x93A3F4", VA = "0x93A3F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TilesX;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int TilesY;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float AnimationFPS;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int StartFrameOffset;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float StartDelay;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] ShaderProperties;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve FrameOverTime;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInizialised;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int index;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int count;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int allCount;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float animationLifeTime;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isVisible;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isCorutineStarted;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material instanceMaterial;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WFX_MeshMaterialEffect wfxMeshMaterialEffect;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float currentInterpolatedTime;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float animationStartTime;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool animationStoped;

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x939B60", Offset = "0x939B60", VA = "0x939B60")]
	private void Start()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x939BD4", Offset = "0x939BD4", VA = "0x939BD4")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x939D78", Offset = "0x939D78", VA = "0x939D78")]
	private void Play()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x939E7C", Offset = "0x939E7C", VA = "0x939E7C")]
	private void PlayDelay()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x939E9C", Offset = "0x939E9C", VA = "0x939E9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x939ECC", Offset = "0x939ECC", VA = "0x939ECC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x939E08", Offset = "0x939E08", VA = "0x939E08")]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x939F50", Offset = "0x939F50", VA = "0x939F50")]
	private void UpdateFrame()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x93A0A4", Offset = "0x93A0A4", VA = "0x93A0A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x93A238", Offset = "0x93A238", VA = "0x93A238")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x93A2D8", Offset = "0x93A2D8", VA = "0x93A2D8")]
	public WFXSpriteSheetAnimation()
	{
	}
}
[Token(Token = "0x200017B")]
public class WFX_LightCurves : MonoBehaviour
{
	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x93A558", Offset = "0x93A558", VA = "0x93A558")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x93A5DC", Offset = "0x93A5DC", VA = "0x93A5DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x93A628", Offset = "0x93A628", VA = "0x93A628")]
	private void Update()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x93A6B4", Offset = "0x93A6B4", VA = "0x93A6B4")]
	public WFX_LightCurves()
	{
	}
}
[Token(Token = "0x200017C")]
public class WFX_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsFirstMaterial;

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x93A6FC", Offset = "0x93A6FC", VA = "0x93A6FC")]
	public WFX_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x200017D")]
public class WFX_MobileDistortion : MonoBehaviour
{
	[Token(Token = "0x200017E")]
	private sealed class <RepeatCameraMove>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_MobileDistortion <>4__this;

		[Token(Token = "0x17000097")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0x93B2C0", Offset = "0x93B2C0", VA = "0x93B2C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600069F")]
			[Address(RVA = "0x93B2C8", Offset = "0x93B2C8", VA = "0x93B2C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x93AFAC", Offset = "0x93AFAC", VA = "0x93AFAC")]
		[DebuggerHidden]
		public <RepeatCameraMove>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x93B25C", Offset = "0x93B25C", VA = "0x93B25C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x93B260", Offset = "0x93B260", VA = "0x93B260", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200017F")]
	private sealed class <RepeatCameraStatic>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WFX_MobileDistortion <>4__this;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006A3")]
			[Address(RVA = "0x93B334", Offset = "0x93B334", VA = "0x93B334", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006A4")]
			[Address(RVA = "0x93B33C", Offset = "0x93B33C", VA = "0x93B33C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x93AFD4", Offset = "0x93AFD4", VA = "0x93AFD4")]
		[DebuggerHidden]
		public <RepeatCameraStatic>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x93B2D0", Offset = "0x93B2D0", VA = "0x93B2D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x93B2D4", Offset = "0x93B2D4", VA = "0x93B2D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TextureScale;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureFormat RenderTextureFormat;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FilterMode FilterMode;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CullingMask;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderingPath RenderingPath;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int FPSWhenMoveCamera;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int FPSWhenStaticCamera;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool UseRealTime;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture renderTexture;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cameraInstance;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject goCamera;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 oldPosition;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion oldRotation;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform instanceCameraTransform;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool canUpdateCamera;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool isStaticUpdate;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds fpsMove;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WaitForSeconds fpsStatic;

	[Token(Token = "0x400086B")]
	private const int DropedFrames = 50;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int frameCountWhenCameraIsStatic;

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x93A704", Offset = "0x93A704", VA = "0x93A704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x93ADF0", Offset = "0x93ADF0", VA = "0x93ADF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x93AD08", Offset = "0x93AD08", VA = "0x93AD08")]
	private IEnumerator RepeatCameraMove()
	{
		return null;
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x93AD7C", Offset = "0x93AD7C", VA = "0x93AD7C")]
	private IEnumerator RepeatCameraStatic()
	{
		return null;
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x93AFFC", Offset = "0x93AFFC", VA = "0x93AFFC")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x93B084", Offset = "0x93B084", VA = "0x93B084")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x93A828", Offset = "0x93A828", VA = "0x93A828")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x93B10C", Offset = "0x93B10C", VA = "0x93B10C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x93B210", Offset = "0x93B210", VA = "0x93B210")]
	public WFX_MobileDistortion()
	{
	}
}
[Token(Token = "0x2000180")]
[ExecuteInEditMode]
public class WFX_Turbulence : MonoBehaviour
{
	[Token(Token = "0x2000181")]
	public enum MoveMethodEnum
	{
		[Token(Token = "0x400088A")]
		Position,
		[Token(Token = "0x400088B")]
		Velocity,
		[Token(Token = "0x400088C")]
		RelativePositionHalf,
		[Token(Token = "0x400088D")]
		RelativePosition
	}

	[Token(Token = "0x2000182")]
	public enum PerfomanceEnum
	{
		[Token(Token = "0x400088F")]
		UltraRealTime,
		[Token(Token = "0x4000890")]
		High,
		[Token(Token = "0x4000891")]
		Low
	}

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TurbulenceStrenght;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool TurbulenceByTime;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve TurbulenceStrengthByTime;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 Frequency;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 OffsetSpeed;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 Amplitude;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 GlobalForce;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MoveMethodEnum MoveMethod;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public PerfomanceEnum Perfomance;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastStopTime;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 currentOffset;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float deltaTime;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float deltaTimeLastUpdateOffset;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem particleSys;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float time;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int currentSplit;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float fpsTime;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int FPS;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int splitUpdate;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private PerfomanceEnum perfomanceOldSettings;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool skipFrame;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x93B344", Offset = "0x93B344", VA = "0x93B344")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x93B498", Offset = "0x93B498", VA = "0x93B498")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x93B428", Offset = "0x93B428", VA = "0x93B428")]
	private void UpdatePerfomanceSettings()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x93B5E4", Offset = "0x93B5E4", VA = "0x93B5E4")]
	private void UpdateTurbulence()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x93BB90", Offset = "0x93BB90", VA = "0x93BB90")]
	public WFX_Turbulence()
	{
	}
}
[Token(Token = "0x2000183")]
public class LastFramePositionContainer : MonoBehaviour
{
	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 lastPosition;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool hasCreatedOnEnterEffect;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool hasCreaterOnExitEffect;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x93BBF8", Offset = "0x93BBF8", VA = "0x93BBF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x93BC28", Offset = "0x93BC28", VA = "0x93BC28")]
	public LastFramePositionContainer()
	{
	}
}
[Token(Token = "0x2000184")]
public class ScrollingUVs_Layers : MonoBehaviour
{
	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string textureName;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 uvOffset;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x93BC30", Offset = "0x93BC30", VA = "0x93BC30")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x93BCEC", Offset = "0x93BCEC", VA = "0x93BCEC")]
	public ScrollingUVs_Layers()
	{
	}
}
[Token(Token = "0x2000185")]
public class LobbyContentSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject oldLobby;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject newLobby;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ServerListController newServerListController;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ServerListController oldServerListController;

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x93BD88", Offset = "0x93BD88", VA = "0x93BD88")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x93BE58", Offset = "0x93BE58", VA = "0x93BE58")]
	public LobbyContentSwitcher()
	{
	}
}
[Token(Token = "0x2000186")]
public class MainMenuTournamentResultsResetter : MonoBehaviour
{
	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x93BE60", Offset = "0x93BE60", VA = "0x93BE60")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x93BE68", Offset = "0x93BE68", VA = "0x93BE68")]
	public MainMenuTournamentResultsResetter()
	{
	}
}
[Token(Token = "0x2000187")]
public class MaterialsManager : MonoBehaviour
{
	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Material> defaultMaterials;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int numberOfMeshes;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isDefaultMaterialAssigned;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Renderer> meshes;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material atlasMaterial;

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x93BE70", Offset = "0x93BE70", VA = "0x93BE70")]
	public void AssignDefaultMaterials()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x93BFFC", Offset = "0x93BFFC", VA = "0x93BFFC")]
	public void SetDefaultMaterial()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x93C0C0", Offset = "0x93C0C0", VA = "0x93C0C0")]
	public void SetAtlasMaterial()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x93C148", Offset = "0x93C148", VA = "0x93C148")]
	public MaterialsManager()
	{
	}
}
[Token(Token = "0x2000188")]
public class MaterialsManagerController : MonoBehaviour
{
	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MaterialsManager> materialsManagerItems;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x93C150", Offset = "0x93C150", VA = "0x93C150")]
	public void TestDefaultMaterials()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x93C298", Offset = "0x93C298", VA = "0x93C298")]
	public void TestAtlasMaterials()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x93C3E0", Offset = "0x93C3E0", VA = "0x93C3E0")]
	public MaterialsManagerController()
	{
	}
}
[Token(Token = "0x2000189")]
public class ItemAnimator : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isIdle;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isLoading;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool isShot;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool isMoving;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource catapultAudio;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] catapultLoadingClips;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] catapultShotClips;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x93C3E8", Offset = "0x93C3E8", VA = "0x93C3E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x93C450", Offset = "0x93C450", VA = "0x93C450")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x93C454", Offset = "0x93C454", VA = "0x93C454")]
	private void State()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x93C7C8", Offset = "0x93C7C8", VA = "0x93C7C8")]
	public ItemAnimator()
	{
	}
}
[Token(Token = "0x200018A")]
public class MenuCameraEnabler : MonoBehaviour
{
	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera camera;

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x93C7D0", Offset = "0x93C7D0", VA = "0x93C7D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x93C8CC", Offset = "0x93C8CC", VA = "0x93C8CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x93C9C8", Offset = "0x93C9C8", VA = "0x93C9C8")]
	private void EnableCamera()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x93C9E8", Offset = "0x93C9E8", VA = "0x93C9E8")]
	public MenuCameraEnabler()
	{
	}
}
[Token(Token = "0x200018B")]
public class MinimalSDKGameObjectDisabler : MonoBehaviour
{
	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x93C9F0", Offset = "0x93C9F0", VA = "0x93C9F0")]
	public MinimalSDKGameObjectDisabler()
	{
	}
}
[Token(Token = "0x200018C")]
public class MobileSkyboxController : MonoBehaviour
{
	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject skybox;

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x93C9F8", Offset = "0x93C9F8", VA = "0x93C9F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x93CA7C", Offset = "0x93CA7C", VA = "0x93CA7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x93CAFC", Offset = "0x93CAFC", VA = "0x93CAFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x93CB7C", Offset = "0x93CB7C", VA = "0x93CB7C")]
	private void MoveSkybox(Vector3 position)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x93CC38", Offset = "0x93CC38", VA = "0x93CC38")]
	public MobileSkyboxController()
	{
	}
}
[Token(Token = "0x200018D")]
[ExecuteInEditMode]
public class rRotate_V1_Trees : MonoBehaviour
{
	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x93CC40", Offset = "0x93CC40", VA = "0x93CC40")]
	private void _Transform()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x93CCFC", Offset = "0x93CCFC", VA = "0x93CCFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x93CD00", Offset = "0x93CD00", VA = "0x93CD00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x93CD04", Offset = "0x93CD04", VA = "0x93CD04")]
	public rRotate_V1_Trees()
	{
	}
}
[Token(Token = "0x200018E")]
public class DAX_MainCamera_V1Trees : MonoBehaviour
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Bushes;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text OutText;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int curIndex;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject curPrefab;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 c_OrbitVector;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float CameraRotationSpeed;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float cRotationMoment;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x93CD0C", Offset = "0x93CD0C", VA = "0x93CD0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x93CE78", Offset = "0x93CE78", VA = "0x93CE78")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x93CF68", Offset = "0x93CF68", VA = "0x93CF68")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x93D038", Offset = "0x93D038", VA = "0x93D038")]
	public void Next()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x93D06C", Offset = "0x93D06C", VA = "0x93D06C")]
	public void Prev()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x93CD64", Offset = "0x93CD64", VA = "0x93CD64")]
	public void showPrefab(int index)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x93D0A0", Offset = "0x93D0A0", VA = "0x93D0A0")]
	public DAX_MainCamera_V1Trees()
	{
	}
}
[Token(Token = "0x200018F")]
[ExecuteInEditMode]
public class rRotate_V2_Trees : MonoBehaviour
{
	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x93D0B0", Offset = "0x93D0B0", VA = "0x93D0B0")]
	private void _Transform()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x93D16C", Offset = "0x93D16C", VA = "0x93D16C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x93D170", Offset = "0x93D170", VA = "0x93D170")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x93D174", Offset = "0x93D174", VA = "0x93D174")]
	public rRotate_V2_Trees()
	{
	}
}
[Token(Token = "0x2000190")]
public class MovingDirectionArrowController : MonoBehaviour
{
	[Token(Token = "0x2000191")]
	public delegate void ReachedEnd(MovingDirectionArrowController mdac);

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BezierArrowFollower routeFollower;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject arrowModel;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x14000013")]
	public static event ReachedEnd OnEndReached
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x93D17C", Offset = "0x93D17C", VA = "0x93D17C")]
		add
		{
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x93D234", Offset = "0x93D234", VA = "0x93D234")]
		remove
		{
		}
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x93D2EC", Offset = "0x93D2EC", VA = "0x93D2EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x93D378", Offset = "0x93D378", VA = "0x93D378")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x93D404", Offset = "0x93D404", VA = "0x93D404")]
	private void ReportReachedEnd()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x93D484", Offset = "0x93D484", VA = "0x93D484")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x93D488", Offset = "0x93D488", VA = "0x93D488")]
	public void FollowRoute()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x93D4C0", Offset = "0x93D4C0", VA = "0x93D4C0")]
	public void Appear(bool shouldActivate)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x93D55C", Offset = "0x93D55C", VA = "0x93D55C")]
	public void Disappear(bool shouldDeactivate)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x93D618", Offset = "0x93D618", VA = "0x93D618")]
	private void HideSelf()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x93D638", Offset = "0x93D638", VA = "0x93D638")]
	private void DeactivateSelf()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x93D65C", Offset = "0x93D65C", VA = "0x93D65C")]
	public MovingDirectionArrowController()
	{
	}
}
[Token(Token = "0x2000192")]
[ExecuteInEditMode]
public class NM_Wind : MonoBehaviour
{
	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float WindSpeed;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Turbulence;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FlexNoiseWorldSize;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ShiverNoiseWorldSize;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D GustMaskTexture;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float GustWorldSize;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float GustSpeed;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float GustScale;

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x93D7BC", Offset = "0x93D7BC", VA = "0x93D7BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x93D980", Offset = "0x93D980", VA = "0x93D980")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x93D984", Offset = "0x93D984", VA = "0x93D984")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x93D7C0", Offset = "0x93D7C0", VA = "0x93D7C0")]
	private void ApplySettings()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x93D988", Offset = "0x93D988", VA = "0x93D988")]
	private Vector4 GetDirectionAndSpeed()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x93DA8C", Offset = "0x93DA8C", VA = "0x93DA8C")]
	public NM_Wind()
	{
	}
}
[Token(Token = "0x2000193")]
[RequireComponent(typeof(MeshFilter))]
public class LakePolygon : MonoBehaviour
{
	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LakePolygonProfile currentProfile;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LakePolygonProfile oldProfile;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Vector3> points;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> splinePoints;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float distSmooth;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float uvScale;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distSmoothStart;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int currentSplatMap;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maximumTriangleSize;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float traingleDensity;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float height;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool lockHeight;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float yOffset;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float trianglesGenerated;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Mesh currentMesh;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x93DAC0", Offset = "0x93DAC0", VA = "0x93DAC0")]
	public void AddPoint(Vector3 position)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x93DB98", Offset = "0x93DB98", VA = "0x93DB98")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x93DDE4", Offset = "0x93DDE4", VA = "0x93DDE4")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x93DE64", Offset = "0x93DE64", VA = "0x93DE64")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x93DEE0", Offset = "0x93DEE0", VA = "0x93DEE0")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x93DF4C", Offset = "0x93DF4C", VA = "0x93DF4C")]
	private void CenterPivot()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x93E0E8", Offset = "0x93E0E8", VA = "0x93E0E8")]
	public void GeneratePolygon()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x93F2A8", Offset = "0x93F2A8", VA = "0x93F2A8")]
	public static LakePolygon CreatePolygon(Material material, [Optional] List<Vector3> positions)
	{
		return null;
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x93F048", Offset = "0x93F048", VA = "0x93F048")]
	private void DisplayCatmullRomSpline(int pos)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x93F43C", Offset = "0x93F43C", VA = "0x93F43C")]
	public int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x93F4B8", Offset = "0x93F4B8", VA = "0x93F4B8")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x93F5C0", Offset = "0x93F5C0", VA = "0x93F5C0")]
	public LakePolygon()
	{
	}
}
[Token(Token = "0x2000194")]
public class LakePolygonProfile : ScriptableObject
{
	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material lakeMaterial;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distSmooth;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float uvScale;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distSmoothStart;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int currentSplatMap;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maximumTriangleSize;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float traingleDensity;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int biomeType;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x93F894", Offset = "0x93F894", VA = "0x93F894")]
	public LakePolygonProfile()
	{
	}
}
[Token(Token = "0x2000195")]
public class MeshColoringRam : MonoBehaviour
{
	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float height;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float threshold;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoColor;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool newMesh;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 oldPosition;

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x93FAEC", Offset = "0x93FAEC", VA = "0x93FAEC")]
	public MeshColoringRam()
	{
	}
}
[Token(Token = "0x2000196")]
[RequireComponent(typeof(MeshFilter))]
public class RamSpline : MonoBehaviour
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineProfile currentProfile;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile oldProfile;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<RamSpline> beginnigChildSplines;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<RamSpline> endingChildSplines;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RamSpline beginningSpline;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RamSpline endingSpline;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int beginningConnectionID;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int endingConnectionID;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float beginningMinWidth;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float beginningMaxWidth;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float endingMinWidth;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float endingMaxWidth;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int toolbarInt;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool invertUVDirection;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool uvRotation;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshFilter meshfilter;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector4> controlPoints;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Quaternion> controlPointsRotations;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Quaternion> controlPointsOrientation;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vector3> controlPointsUp;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Vector3> controlPointsDown;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<float> controlPointsSnap;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<AnimationCurve> controlPointsMeshCurves;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool normalFromRaycast;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool snapToTerrain;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public LayerMask snapMask;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Vector3> points;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Vector3> pointsUp;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<Vector3> pointsDown;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<Vector3> points2;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Vector3> verticesBeginning;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Vector3> verticesEnding;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Vector3> normalsBeginning;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Vector3> normalsEnding;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<float> widths;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<float> snaps;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<float> lerpValues;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<Quaternion> orientations;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<Vector3> tangents;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<Vector3> normalsList;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Color[] colors;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool generateOnStart;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float minVal;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float maxVal;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float width;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int vertsInShape;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float traingleDensity;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float uvScale;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Material oldMaterial;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool showVertexColors;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	public bool showFlowMap;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	public bool overrideFlowMap;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
	public bool drawOnMesh;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
	public bool uvScaleOverride;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
	public bool debug;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Color drawColor;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool drawOnMultiple;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float flowSpeed;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float flowDirection;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float opacity;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float drawSize;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float length;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float fulllength;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float minMaxWidth;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float uvWidth;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float uvBeginning;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public bool receiveShadows;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public bool generateMeshParts;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public int meshPartsCount;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public List<Transform> meshesPartTransforms;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float simulatedRiverLength;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public int simulatedRiverPoints;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float simulationMinStepSize;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public int detailTerrain;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public int detailTerrainForward;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public float terrainAdditionalWidth;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float distSmooth;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public float distSmoothStart;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public int currentSplatMap;

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x93FB5C", Offset = "0x93FB5C", VA = "0x93FB5C")]
	public void Start()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x9409EC", Offset = "0x9409EC", VA = "0x9409EC")]
	public static RamSpline CreateSpline([Optional] Material splineMaterial, [Optional] List<Vector4> positions)
	{
		return null;
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x940B80", Offset = "0x940B80", VA = "0x940B80")]
	public void AddPoint(Vector4 position)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x940F30", Offset = "0x940F30", VA = "0x940F30")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x941388", Offset = "0x941388", VA = "0x941388")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x941390", Offset = "0x941390", VA = "0x941390")]
	public void ChangePointPosition(int i, Vector4 position)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x941444", Offset = "0x941444", VA = "0x941444")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x941538", Offset = "0x941538", VA = "0x941538")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x9415A4", Offset = "0x9415A4", VA = "0x9415A4")]
	public void GenerateBeginningParentBased()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x941884", Offset = "0x941884", VA = "0x941884")]
	public void GenerateEndingParentBased()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x93FB6C", Offset = "0x93FB6C", VA = "0x93FB6C")]
	public void GenerateSpline([Optional] List<RamSpline> generatedSplines)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x941B68", Offset = "0x941B68", VA = "0x941B68")]
	private void CalculateCatmullRomSideSplines(List<Vector4> controlPoints, int pos)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x9423AC", Offset = "0x9423AC", VA = "0x9423AC")]
	private void CalculateCatmullRomSplineParameters(List<Vector4> controlPoints, int pos, bool initialPoints = false)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x942684", Offset = "0x942684", VA = "0x942684")]
	private void CalculateCatmullRomSpline(List<Vector3> controlPoints, int pos, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x945ADC", Offset = "0x945ADC", VA = "0x945ADC")]
	private void CalculatePointPosition(List<Vector3> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x9450AC", Offset = "0x9450AC", VA = "0x9450AC")]
	private void CalculatePointParameters(List<Vector4> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x944DEC", Offset = "0x944DEC", VA = "0x944DEC")]
	private int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x944E68", Offset = "0x944E68", VA = "0x944E68")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x944F70", Offset = "0x944F70", VA = "0x944F70")]
	private Vector3 GetCatmullRomTangent(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x945060", Offset = "0x945060", VA = "0x945060")]
	private Vector3 CalculateNormal(Vector3 tangent, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x942958", Offset = "0x942958", VA = "0x942958")]
	private void GenerateMesh(ref Mesh mesh)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x945E04", Offset = "0x945E04", VA = "0x945E04")]
	public void GenerateMeshParts(Mesh baseMesh)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x945D8C", Offset = "0x945D8C", VA = "0x945D8C")]
	private float FlowCalculate(float u, float normalY)
	{
		return default(float);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x946E68", Offset = "0x946E68", VA = "0x946E68")]
	public RamSpline()
	{
	}
}
[Token(Token = "0x2000197")]
public class SplineProfile : ScriptableObject
{
	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material splineMaterial;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minVal;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxVal;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int vertsInShape;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float traingleDensity;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float uvScale;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool uvRotation;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float distSmooth;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float distSmoothStart;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool receiveShadows;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int biomeType;

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x947980", Offset = "0x947980", VA = "0x947980")]
	public SplineProfile()
	{
	}
}
[Token(Token = "0x2000198")]
public class OnJoinCanvasDisabler : MonoBehaviour
{
	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject miniCanvasObjectToDisable;

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x947ED4", Offset = "0x947ED4", VA = "0x947ED4")]
	public void DisableCanvas()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x947EF4", Offset = "0x947EF4", VA = "0x947EF4")]
	public OnJoinCanvasDisabler()
	{
	}
}
[Token(Token = "0x2000199")]
public class OrcIceBoltHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SlowingController slowingController;

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x947EFC", Offset = "0x947EFC", VA = "0x947EFC", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x947F28", Offset = "0x947F28", VA = "0x947F28", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x948034", Offset = "0x948034", VA = "0x948034")]
	[PunRPC]
	private void RPCGetHitIceResistantIceCloud()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x948074", Offset = "0x948074", VA = "0x948074")]
	public OrcIceBoltHitController()
	{
	}
}
[Token(Token = "0x200019A")]
public class OrcNamer : MonoBehaviour
{
	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject nameObject;

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x94807C", Offset = "0x94807C", VA = "0x94807C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x9480F4", Offset = "0x9480F4", VA = "0x9480F4")]
	public OrcNamer()
	{
	}
}
[Token(Token = "0x200019B")]
public class OrcOnBoatTracker : MonoBehaviour, IResetable
{
	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OrcsLeftCounter orcCounter;

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x9480FC", Offset = "0x9480FC", VA = "0x9480FC")]
	public void IncreaseCounterOnDied(OrcsLeftCounter _orcCounter)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x9481FC", Offset = "0x9481FC", VA = "0x9481FC")]
	public void UnsubscribeIncreasingCounter()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x9482E4", Offset = "0x9482E4", VA = "0x9482E4")]
	private void IncrementOrcsLeftCounter(HealthStateController _healthStateController)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x948450", Offset = "0x948450", VA = "0x948450", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x94855C", Offset = "0x94855C", VA = "0x94855C")]
	public OrcOnBoatTracker()
	{
	}
}
[Token(Token = "0x200019C")]
public class OrcsLeftCounter : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int howManyOrcsShouldLeave;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int orcCount;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OrcOnBoatTracker> countedOrcs;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action AllOrcsLeft;

	[Token(Token = "0x1700009B")]
	public int OrcCount
	{
		[Token(Token = "0x600071E")]
		[Address(RVA = "0x948564", Offset = "0x948564", VA = "0x948564")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x94856C", Offset = "0x94856C", VA = "0x94856C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x948598", Offset = "0x948598", VA = "0x948598")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x94830C", Offset = "0x94830C", VA = "0x94830C")]
	public void IncrementOrcCount(OrcOnBoatTracker orcOnBoatTracker)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x9484CC", Offset = "0x9484CC", VA = "0x9484CC")]
	public void RemoveOrcOnBoatTracker(OrcOnBoatTracker orcOnBoatTracker)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x948644", Offset = "0x948644", VA = "0x948644")]
	public void SetHowManyOrcsShouldLeave(int howManyOrcsShouldLeave)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x94864C", Offset = "0x94864C", VA = "0x94864C", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x948710", Offset = "0x948710", VA = "0x948710", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x9487FC", Offset = "0x9487FC", VA = "0x9487FC")]
	public OrcsLeftCounter()
	{
	}
}
[Token(Token = "0x200019D")]
[ExecuteInEditMode]
public class StonePortal_AxisRotateByTime : MonoBehaviour
{
	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotateAxis;

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x948884", Offset = "0x948884", VA = "0x948884")]
	private void Update()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x9488E0", Offset = "0x9488E0", VA = "0x9488E0")]
	public StonePortal_AxisRotateByTime()
	{
	}
}
[Token(Token = "0x200019E")]
public class StonePortal_RandomMoves : MonoBehaviour
{
	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeMultipler;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RangeMultipler;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 StartPosition;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 RndArg1;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 RndArg2;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 RndArg3;

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x9488FC", Offset = "0x9488FC", VA = "0x9488FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x9489CC", Offset = "0x9489CC", VA = "0x9489CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x948B00", Offset = "0x948B00", VA = "0x948B00")]
	public StonePortal_RandomMoves()
	{
	}
}
[Token(Token = "0x200019F")]
[ExecuteInEditMode]
public class StonePortal_Turbulence : MonoBehaviour
{
	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TurbulenceStrenght;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 Frequency;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 OffsetSpeed;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 Amplitude;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 GlobalForce;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastStopTime;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 currentOffset;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float deltaTime;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParticleSystem particleSys;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float time;

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x948B18", Offset = "0x948B18", VA = "0x948B18")]
	private void Start()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x948BEC", Offset = "0x948BEC", VA = "0x948BEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x948E60", Offset = "0x948E60", VA = "0x948E60")]
	public StonePortal_Turbulence()
	{
	}
}
[Token(Token = "0x20001A0")]
public class OwnerChanger : MonoBehaviourPun, IInRoomCallbacks
{
	[Token(Token = "0x600072F")]
	[Address(RVA = "0x948E88", Offset = "0x948E88", VA = "0x948E88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x948F4C", Offset = "0x948F4C", VA = "0x948F4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x948FA4", Offset = "0x948FA4", VA = "0x948FA4", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x948FA8", Offset = "0x948FA8", VA = "0x948FA8", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x949050", Offset = "0x949050", VA = "0x949050", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x949054", Offset = "0x949054", VA = "0x949054", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x949058", Offset = "0x949058", VA = "0x949058", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x94905C", Offset = "0x94905C", VA = "0x94905C")]
	public OwnerChanger()
	{
	}
}
[Token(Token = "0x20001A1")]
[RequireComponent(typeof(LineRenderer))]
public class ParabolaDrawer : MonoBehaviour
{
	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform start;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform end;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float height;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int steps;

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x949064", Offset = "0x949064", VA = "0x949064")]
	private void Start()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x949268", Offset = "0x949268", VA = "0x949268")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x9490D8", Offset = "0x9490D8", VA = "0x9490D8")]
	public void DrawParabola(Vector3 start, Vector3 end, float height, int steps)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x9492DC", Offset = "0x9492DC", VA = "0x9492DC")]
	private Vector3 GetPointQuadraticBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x949350", Offset = "0x949350", VA = "0x949350")]
	public ParabolaDrawer()
	{
	}
}
[Token(Token = "0x20001A2")]
public class PayloadOrcSpawnTimeDelayCalculator : EnemySpawnDelayCalculator
{
	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float currentDelayBetweenSpawns;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float spawnDelayStep;

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x949364", Offset = "0x949364", VA = "0x949364", Slot = "4")]
	public override float CalculateSpawnDelayStep()
	{
		return default(float);
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x949374", Offset = "0x949374", VA = "0x949374", Slot = "5")]
	public override void InitializeSpawnDelayStep(int numberOfOrcsInWave, float minDelay, float MaxDelay)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x949388", Offset = "0x949388", VA = "0x949388")]
	public PayloadOrcSpawnTimeDelayCalculator()
	{
	}
}
[Token(Token = "0x20001A3")]
public class PayloadWaveBreakTimeCalculator : WaveBreakTimeCalculator
{
	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToNextWave;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x949390", Offset = "0x949390", VA = "0x949390", Slot = "4")]
	public override float CalculateWaveBreakTime(int waveNumber)
	{
		return default(float);
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x949398", Offset = "0x949398", VA = "0x949398")]
	public PayloadWaveBreakTimeCalculator()
	{
	}
}
[Token(Token = "0x20001A4")]
public class PayloadWavesSpawningConditions : WavesSpawningConditions
{
	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PayloadStageController payloadStageController;

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x9493A8", Offset = "0x9493A8", VA = "0x9493A8", Slot = "5")]
	public override bool CheckIfShouldStillSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x9493B0", Offset = "0x9493B0", VA = "0x9493B0", Slot = "4")]
	public override bool CheckIfWaveSurvived(List<EnemyInfo> activeEnemies, bool isSpawningDone, bool waitingForNextWave, bool isWaveInitialized)
	{
		return default(bool);
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x949488", Offset = "0x949488", VA = "0x949488")]
	public PayloadWavesSpawningConditions()
	{
	}
}
[Token(Token = "0x20001A5")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x6000744")]
	[Address(RVA = "0x949490", Offset = "0x949490", VA = "0x949490")]
	public static ChatAppSettings GetChatSettings(AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x20001A6")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x949570", Offset = "0x949570", VA = "0x949570")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x9495F4", Offset = "0x9495F4", VA = "0x9495F4", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x949910", Offset = "0x949910", VA = "0x949910")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x20001A7")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x949918", Offset = "0x949918", VA = "0x949918")]
	public void Update()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x949A48", Offset = "0x949A48", VA = "0x949A48")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x20001A8")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string <UserName>k__BackingField;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x1700009C")]
	public string UserName
	{
		[Token(Token = "0x600074A")]
		[Address(RVA = "0x949A50", Offset = "0x949A50", VA = "0x949A50")]
		get
		{
			return null;
		}
		[Token(Token = "0x600074B")]
		[Address(RVA = "0x949A58", Offset = "0x949A58", VA = "0x949A58")]
		set
		{
		}
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x949A60", Offset = "0x949A60", VA = "0x949A60")]
	public void Start()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x949D24", Offset = "0x949D24", VA = "0x949D24")]
	public void Connect()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x949EB8", Offset = "0x949EB8", VA = "0x949EB8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x949ED0", Offset = "0x949ED0", VA = "0x949ED0")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x949EE8", Offset = "0x949EE8", VA = "0x949EE8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x949FB8", Offset = "0x949FB8", VA = "0x949FB8")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x94AAB4", Offset = "0x94AAB4", VA = "0x94AAB4")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x94A04C", Offset = "0x94A04C", VA = "0x94A04C")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x94AB64", Offset = "0x94AB64", VA = "0x94AB64")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x94AC08", Offset = "0x94AC08", VA = "0x94AC08", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x94ACB0", Offset = "0x94ACB0", VA = "0x94ACB0", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x94AFEC", Offset = "0x94AFEC", VA = "0x94AFEC", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x94B00C", Offset = "0x94B00C", VA = "0x94B00C", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x94B0A0", Offset = "0x94B0A0", VA = "0x94B0A0", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x94B234", Offset = "0x94B234", VA = "0x94B234")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x94AE94", Offset = "0x94AE94", VA = "0x94AE94")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x94B414", Offset = "0x94B414", VA = "0x94B414", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x94B858", Offset = "0x94B858", VA = "0x94B858", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x94B898", Offset = "0x94B898", VA = "0x94B898", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x94B9AC", Offset = "0x94B9AC", VA = "0x94B9AC", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x94BCEC", Offset = "0x94BCEC", VA = "0x94BCEC", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x94BE08", Offset = "0x94BE08", VA = "0x94BE08", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x94BF24", Offset = "0x94BF24", VA = "0x94BF24")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x94966C", Offset = "0x94966C", VA = "0x94966C")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x94C010", Offset = "0x94C010", VA = "0x94C010")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x94C054", Offset = "0x94C054", VA = "0x94C054")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x20001A9")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x1700009D")]
	public string FriendId
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0x94C1D8", Offset = "0x94C1D8", VA = "0x94C1D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x94B3F0", Offset = "0x94B3F0", VA = "0x94B3F0")]
		set
		{
		}
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x94C1FC", Offset = "0x94C1FC", VA = "0x94C1FC")]
	public void Awake()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x94BB6C", Offset = "0x94BB6C", VA = "0x94BB6C")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x94C260", Offset = "0x94C260", VA = "0x94C260")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x20001AA")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x600076C")]
	[Address(RVA = "0x94C268", Offset = "0x94C268", VA = "0x94C268", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x94C288", Offset = "0x94C288", VA = "0x94C288")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x20001AB")]
[RequireComponent(typeof(ChatGui))]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x400098D")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x94C290", Offset = "0x94C290", VA = "0x94C290")]
	public void Start()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x94C35C", Offset = "0x94C35C", VA = "0x94C35C")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x94C398", Offset = "0x94C398", VA = "0x94C398")]
	public void StartChat()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x94C47C", Offset = "0x94C47C", VA = "0x94C47C")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x20001AC")]
[RequireComponent(typeof(Renderer))]
[RequireComponent(typeof(PhotonView))]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x94C484", Offset = "0x94C484", VA = "0x94C484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x94C5E0", Offset = "0x94C5E0", VA = "0x94C5E0")]
	[PunRPC]
	private void ChangeColour(Vector3 randomColor)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x94C688", Offset = "0x94C688", VA = "0x94C688")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x20001AD")]
[RequireComponent(typeof(PhotonView))]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x6000775")]
	[Address(RVA = "0x94C690", Offset = "0x94C690", VA = "0x94C690")]
	private void Start()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x94C754", Offset = "0x94C754", VA = "0x94C754")]
	public ChangeName()
	{
	}
}
[Token(Token = "0x20001AE")]
[RequireComponent(typeof(PhotonVoiceView))]
public class PointersController : MonoBehaviour
{
	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject pointerDown;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject pointerUp;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x94C75C", Offset = "0x94C75C", VA = "0x94C75C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x94C7B4", Offset = "0x94C7B4", VA = "0x94C7B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x94C80C", Offset = "0x94C80C", VA = "0x94C80C")]
	private void SetActiveSafe(GameObject go, bool active)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x94C8B4", Offset = "0x94C8B4", VA = "0x94C8B4")]
	public PointersController()
	{
	}
}
[Token(Token = "0x20001AF")]
[RequireComponent(typeof(Collider))]
[RequireComponent(typeof(Rigidbody))]
public class ProximityVoiceTrigger : VoiceComponent
{
	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> groupsToAdd;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> groupsToRemove;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] subscribedGroups;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView photonView;

	[Token(Token = "0x1700009E")]
	public byte TargetInterestGroup
	{
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x94C8BC", Offset = "0x94C8BC", VA = "0x94C8BC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x94C940", Offset = "0x94C940", VA = "0x94C940", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x94CA04", Offset = "0x94CA04", VA = "0x94CA04")]
	private void ToggleTransmission()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x94CCE8", Offset = "0x94CCE8", VA = "0x94CCE8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x94CF44", Offset = "0x94CF44", VA = "0x94CF44")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x94D1E0", Offset = "0x94D1E0", VA = "0x94D1E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x94D80C", Offset = "0x94D80C", VA = "0x94D80C")]
	public ProximityVoiceTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B0")]
public class MouseLookHelper
{
	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x94D8C4", Offset = "0x94D8C4", VA = "0x94D8C4")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x94D914", Offset = "0x94D914", VA = "0x94D914")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x94DC54", Offset = "0x94DC54", VA = "0x94DC54")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x94DCB8", Offset = "0x94DCB8", VA = "0x94DCB8")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x20001B1")]
public class SoundsForJoinAndLeave : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip JoinClip;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip LeaveClip;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x94DCE4", Offset = "0x94DCE4", VA = "0x94DCE4", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x94DDE0", Offset = "0x94DDE0", VA = "0x94DDE0", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x94DEDC", Offset = "0x94DEDC", VA = "0x94DEDC")]
	public SoundsForJoinAndLeave()
	{
	}
}
[Token(Token = "0x20001B2")]
public class PlatformModelSelector : MonoBehaviour
{
	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject righthandedPlatform;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lefthandedPlatform;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject htcVivePlatform;

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x94DEE4", Offset = "0x94DEE4", VA = "0x94DEE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x94E038", Offset = "0x94E038", VA = "0x94E038")]
	public PlatformModelSelector()
	{
	}
}
[Token(Token = "0x20001B3")]
public class PlatformRotaterToCart : MonoBehaviour
{
	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BezierPoint closestPoint;

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x94E040", Offset = "0x94E040", VA = "0x94E040")]
	public void SetRotationOfTeleport()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x94E274", Offset = "0x94E274", VA = "0x94E274")]
	public void SetRotationOfTeleport(List<BezierPoint> allBezierPoints)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x94E1B8", Offset = "0x94E1B8", VA = "0x94E1B8")]
	public void SetRotationOfTeleportFinal(Vector3 pointPos)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x94E28C", Offset = "0x94E28C", VA = "0x94E28C")]
	private Vector3 FindClosestCartPoint(List<BezierPoint> allBezierPoints)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x94E058", Offset = "0x94E058", VA = "0x94E058")]
	private Vector3 FindClosestCartPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x94E858", Offset = "0x94E858", VA = "0x94E858")]
	public PlatformRotaterToCart()
	{
	}
}
[Token(Token = "0x20001B4")]
public class PlayerJoiningScreenController : MonoBehaviourPun
{
	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightHand;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject leftHand;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool shouldBeTurned;

	[Token(Token = "0x1700009F")]
	public bool ShouldBeTurned
	{
		[Token(Token = "0x6000791")]
		[Address(RVA = "0x94E860", Offset = "0x94E860", VA = "0x94E860")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000792")]
		[Address(RVA = "0x94E868", Offset = "0x94E868", VA = "0x94E868")]
		set
		{
		}
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x94E8CC", Offset = "0x94E8CC", VA = "0x94E8CC")]
	public void TurnHandsOn()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x94E8D4", Offset = "0x94E8D4", VA = "0x94E8D4")]
	public PlayerJoiningScreenController()
	{
	}
}
[Token(Token = "0x20001B5")]
public class ProjectileDistortionCollision : MonoBehaviour
{
	[Token(Token = "0x40009AC")]
	private const float timeToRemoveDistortionEffect = 5f;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject distortionEffect;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isInnerCollider;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LayerMask OuterColliderLayerMask;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x94E8DC", Offset = "0x94E8DC", VA = "0x94E8DC")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x94E998", Offset = "0x94E998", VA = "0x94E998")]
	private void ReactOnArrowEnterCollider(Collider collision)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x94E9A8", Offset = "0x94E9A8", VA = "0x94E9A8")]
	private void TryToCreateOnEnterEffect(Collider collision)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x94EC18", Offset = "0x94EC18", VA = "0x94EC18")]
	private void CreateDistortionEffect(Collider collision)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x94ED9C", Offset = "0x94ED9C", VA = "0x94ED9C")]
	private void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x94EE50", Offset = "0x94EE50", VA = "0x94EE50")]
	private void ReactOnArrowExitCollider(Collider collision)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x94EEC8", Offset = "0x94EEC8", VA = "0x94EEC8")]
	private void TryToCreateOnExitEffect(Collider collision, LastFramePositionContainer lastFramePositionContainer)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x94EEF4", Offset = "0x94EEF4", VA = "0x94EEF4")]
	public ProjectileDistortionCollision()
	{
	}
}
[Token(Token = "0x20001B6")]
public class ProjectileGiantTrollSoundController : MonoBehaviour
{
	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<AudioClip> hitAudioClips;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip flyAudioClip;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float flyingSoundVolume;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float hitSoundVolume;

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x94EEFC", Offset = "0x94EEFC", VA = "0x94EEFC")]
	public void PlayFlyingSound()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x94EF44", Offset = "0x94EF44", VA = "0x94EF44")]
	public void PlayHitSound()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x94EFFC", Offset = "0x94EFFC", VA = "0x94EFFC")]
	public ProjectileGiantTrollSoundController()
	{
	}
}
[Token(Token = "0x20001B7")]
public class RagdollEnabler : MonoBehaviour
{
	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject wyvernAlive;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject wyvernDead;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x94F010", Offset = "0x94F010", VA = "0x94F010")]
	public void EnableRagdollObjects()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x94F048", Offset = "0x94F048", VA = "0x94F048")]
	public void ResetWyvernObjects()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x94F160", Offset = "0x94F160", VA = "0x94F160")]
	public RagdollEnabler()
	{
	}
}
[Token(Token = "0x20001B8")]
public class RagdollStateController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B9")]
	private sealed class <>c
	{
		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Rigidbody, bool> <>9__8_0;

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x94FC2C", Offset = "0x94FC2C", VA = "0x94FC2C")]
		public <>c()
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x94FC34", Offset = "0x94FC34", VA = "0x94FC34")]
		internal bool <Initialize>b__8_0(Rigidbody x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float inertiaForce;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody inertiaRigidbody;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<RigidbodyInfo> defaultRigidbodiesInfo;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<TransformInfo> defaultTransformsInfo;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Rigidbody> allRigidbodies;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Transform> allTransforms;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x94F168", Offset = "0x94F168", VA = "0x94F168")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x94F7C8", Offset = "0x94F7C8", VA = "0x94F7C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x94F21C", Offset = "0x94F21C", VA = "0x94F21C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x94F45C", Offset = "0x94F45C", VA = "0x94F45C")]
	private void GetDefaultValues()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x94F7CC", Offset = "0x94F7CC", VA = "0x94F7CC")]
	private void SetDefaultValues()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x94FA44", Offset = "0x94FA44", VA = "0x94FA44")]
	public RagdollStateController()
	{
	}
}
[Token(Token = "0x20001BA")]
public class RainController : MonoBehaviour
{
	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x94FCC0", Offset = "0x94FCC0", VA = "0x94FCC0")]
	public void InitializeWithPlayer(bool isLocalPlayer)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x94FD84", Offset = "0x94FD84", VA = "0x94FD84")]
	public RainController()
	{
	}
}
[Token(Token = "0x20001BB")]
public class RandomPlayerName : RandomPlayerNameCore
{
	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string[] adjectives;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] nouns;

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x94FD8C", Offset = "0x94FD8C", VA = "0x94FD8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x94FD98", Offset = "0x94FD98", VA = "0x94FD98", Slot = "4")]
	protected override void SetLocalizedStrings()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x9504C4", Offset = "0x9504C4", VA = "0x9504C4", Slot = "5")]
	public override string GetRandomPlayerNickText()
	{
		return null;
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x950590", Offset = "0x950590", VA = "0x950590")]
	public RandomPlayerName()
	{
	}
}
[Token(Token = "0x20001BC")]
public class RejoinDBController : MonoBehaviour
{
	[Token(Token = "0x40009C1")]
	private const string urlQualifiedPlayersProd = "https://w9zy18j32k.execute-api.eu-central-1.amazonaws.com/prod/qualified?region={0}&id={1}:{0}";

	[Token(Token = "0x40009C2")]
	private const string urlQualifiedPlayersDev = "https://lvhons494m.execute-api.eu-central-1.amazonaws.com/dev/qualified?region={0}&id={1}:{0}";

	[Token(Token = "0x40009C3")]
	private const string urlQualifiedPlayersStage = "https://r2baww0vk9.execute-api.eu-central-1.amazonaws.com/tournament-stage-qualified/qualified?region={0}&id={1}:{0}";

	[Token(Token = "0x40009C4")]
	private const string urlCurrentTournamentProd = "https://w9zy18j32k.execute-api.eu-central-1.amazonaws.com/prod/findtour?region={0}";

	[Token(Token = "0x40009C5")]
	private const string urlCurrentTournamentDev = "https://lvhons494m.execute-api.eu-central-1.amazonaws.com/dev/findtour?region={0}";

	[Token(Token = "0x40009C6")]
	private const string urlCurrentTournamentStage = "https://r2baww0vk9.execute-api.eu-central-1.amazonaws.com/tournament-stage-qualified/findtour?region={0}";

	[Token(Token = "0x40009C7")]
	private const string urlSaveQualifiedPlayersProd = "https://w9zy18j32k.execute-api.eu-central-1.amazonaws.com/prod/addqualified?region={0}&id={1}&rank={2}";

	[Token(Token = "0x40009C8")]
	private const string urlSaveQualifiedPlayersDev = "https://lvhons494m.execute-api.eu-central-1.amazonaws.com/dev/addqualified?region={0}&id={1}&rank={2}";

	[Token(Token = "0x40009C9")]
	private const string urlSaveQualifiedPlayersStage = "https://r2baww0vk9.execute-api.eu-central-1.amazonaws.com/tournament-stage-qualified/addqualified?region={0}&id={1}&rank={2}";

	[Token(Token = "0x40009CA")]
	private const string firstHeaderKey = "Content-Type";

	[Token(Token = "0x40009CB")]
	private const string firstHeaderValue = "application/json";

	[Token(Token = "0x40009CC")]
	private const string xApiHeaderKey = "x-api-key";

	[Token(Token = "0x40009CD")]
	private const string xApiKeyProd = "D79VUQnV672W5A7tKgI8XaQ6UEYS9qqL4rQulyc7";

	[Token(Token = "0x40009CE")]
	private const string xApiKeyStage = "vUUA8YHKEa40EEJcD3iIOf8VbKWx6iA4Q7Idawbg";

	[Token(Token = "0x40009CF")]
	private const string xApiKeyDev = "rbKwn2oqFf9YT5kQmYfOg8BCehMRape36GVP7bbl";

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Http http;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string storedRegion;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string localPlayerID;

	[Token(Token = "0x14000014")]
	public event Action<bool> OnTournamentRejoinInformation
	{
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x950598", Offset = "0x950598", VA = "0x950598")]
		add
		{
		}
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x950648", Offset = "0x950648", VA = "0x950648")]
		remove
		{
		}
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x9506F8", Offset = "0x9506F8", VA = "0x9506F8")]
	private string GetUrlSaveQualifiedPlayers(string region, string dt, string players)
	{
		return null;
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x9508A8", Offset = "0x9508A8", VA = "0x9508A8")]
	private string GetUrlQualifiedPlayers(string region, string dt)
	{
		return null;
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x950A50", Offset = "0x950A50", VA = "0x950A50")]
	private string GetUrlCurrentTournament(string region)
	{
		return null;
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x950BF0", Offset = "0x950BF0", VA = "0x950BF0")]
	private static string GetXApiKey()
	{
		return null;
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x950D74", Offset = "0x950D74", VA = "0x950D74")]
	public void CanRejoin(string region, string playerID)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x950DB4", Offset = "0x950DB4", VA = "0x950DB4")]
	private void RequestCurrentTournament(string region)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x950E60", Offset = "0x950E60", VA = "0x950E60")]
	private void RequestQualifiedPlayers(string region, string dt)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x950F14", Offset = "0x950F14", VA = "0x950F14")]
	public void RequestSaveQualifiedPlayers(string region, string dt, string players)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x9510AC", Offset = "0x9510AC", VA = "0x9510AC")]
	private void OnHttpResponseReceivedSaveQualifiedPlayers(UnityWebRequest httpResponse)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x951174", Offset = "0x951174", VA = "0x951174")]
	private void OnHttpResponseReceivedCurrentTournament(UnityWebRequest httpResponse)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x951310", Offset = "0x951310", VA = "0x951310")]
	private void OnHttpResponseReceivedQualifiedPlayers(UnityWebRequest httpResponse)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x95148C", Offset = "0x95148C", VA = "0x95148C")]
	public RejoinDBController()
	{
	}
}
[Token(Token = "0x20001BD")]
public class OculusLiveStart : MonoBehaviour
{
	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x951494", Offset = "0x951494", VA = "0x951494")]
	public OculusLiveStart()
	{
	}
}
[Token(Token = "0x20001BE")]
public class RotateGameObject : MonoBehaviour
{
	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 rotationVector;

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x95149C", Offset = "0x95149C", VA = "0x95149C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x9514F4", Offset = "0x9514F4", VA = "0x9514F4")]
	public RotateGameObject()
	{
	}
}
[Token(Token = "0x20001BF")]
public class RpgElementsWindowController : FirstWindowController
{
	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x95150C", Offset = "0x95150C", VA = "0x95150C", Slot = "6")]
	public override bool CheckIfWindowShouldBeQueued()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x9515D8", Offset = "0x9515D8", VA = "0x9515D8")]
	public RpgElementsWindowController()
	{
	}
}
[Token(Token = "0x20001C0")]
public class SalvaPlayerMicrophoneController : MonoBehaviourPun
{
	[Token(Token = "0x40009D5")]
	private const float partOfOldVolumeValue = 0.95f;

	[Token(Token = "0x40009D6")]
	private const float partOfNewVolumeValue = 0.05f;

	[Token(Token = "0x40009D7")]
	private const float delayBetweenCalls = 0.5f;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Recorder recorder;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float howManyTimesShouldBeLouder;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float avgVolume;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<SalvaPlayerMicrophoneController> OnAudioLevelHigherThenAvg;

	[Token(Token = "0x170000A0")]
	private WaitForSeconds waitBetweenCalls
	{
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x9515E0", Offset = "0x9515E0", VA = "0x9515E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x951640", Offset = "0x951640", VA = "0x951640")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x9517D8", Offset = "0x9517D8", VA = "0x9517D8")]
	public SalvaPlayerMicrophoneController()
	{
	}
}
[Token(Token = "0x20001C1")]
public class savemesh : MonoBehaviour
{
	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x9517E8", Offset = "0x9517E8", VA = "0x9517E8")]
	public savemesh()
	{
	}
}
[Token(Token = "0x20001C2")]
public class ScalerOverTime : MonoBehaviour
{
	[Token(Token = "0x20001C3")]
	private sealed class <ScaleSphereUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScalerOverTime <>4__this;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0x951B44", Offset = "0x951B44", VA = "0x951B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0x951B4C", Offset = "0x951B4C", VA = "0x951B4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x9519AC", Offset = "0x9519AC", VA = "0x9519AC")]
		[DebuggerHidden]
		public <ScaleSphereUp>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x951A04", Offset = "0x951A04", VA = "0x951A04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x951A08", Offset = "0x951A08", VA = "0x951A08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001C4")]
	private sealed class <ScaleSphereDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScalerOverTime <>4__this;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x951CAC", Offset = "0x951CAC", VA = "0x951CAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0x951CB4", Offset = "0x951CB4", VA = "0x951CB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x9519D4", Offset = "0x9519D4", VA = "0x9519D4")]
		[DebuggerHidden]
		public <ScaleSphereDown>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x951B54", Offset = "0x951B54", VA = "0x951B54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x951B58", Offset = "0x951B58", VA = "0x951B58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40009DC")]
	private const float maxScale = 15f;

	[Token(Token = "0x40009DD")]
	private const float minScale = 0.1f;

	[Token(Token = "0x40009DE")]
	private const float shieldScaleDuration = 20f;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 maxLocalScale;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 minLocalScale;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentDuration;

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x9517F0", Offset = "0x9517F0", VA = "0x9517F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x951884", Offset = "0x951884", VA = "0x951884")]
	public void StartScaleUpRoutine()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x951918", Offset = "0x951918", VA = "0x951918")]
	public void StartScaleDownRoutine()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x9518A4", Offset = "0x9518A4", VA = "0x9518A4")]
	private IEnumerator ScaleSphereUp()
	{
		return null;
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x951938", Offset = "0x951938", VA = "0x951938")]
	public IEnumerator ScaleSphereDown()
	{
		return null;
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x9519FC", Offset = "0x9519FC", VA = "0x9519FC")]
	public ScalerOverTime()
	{
	}
}
[Token(Token = "0x20001C5")]
public class AccelerateBlackHole : MonoBehaviour
{
	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FX_Rotation[] Quads;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 scaleRange;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scaleTime;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float destroyTime;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool bStartScale;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float startScaleTime;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startTime;

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x951CBC", Offset = "0x951CBC", VA = "0x951CBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x951E00", Offset = "0x951E00", VA = "0x951E00")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x951CDC", Offset = "0x951CDC", VA = "0x951CDC")]
	private void ScaleAnim()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x951F4C", Offset = "0x951F4C", VA = "0x951F4C")]
	public AccelerateBlackHole()
	{
	}
}
[Token(Token = "0x20001C6")]
public static class AchivementsPrefs
{
	[Token(Token = "0x170000A5")]
	public static int FiredArrows
	{
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x951F74", Offset = "0x951F74", VA = "0x951F74")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x951FB8", Offset = "0x951FB8", VA = "0x951FB8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public static int OrcKilled
	{
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x952004", Offset = "0x952004", VA = "0x952004")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x952048", Offset = "0x952048", VA = "0x952048")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public static int HeadShots
	{
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x952094", Offset = "0x952094", VA = "0x952094")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x9520D8", Offset = "0x9520D8", VA = "0x9520D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public static int WindowShots
	{
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x952124", Offset = "0x952124", VA = "0x952124")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x952168", Offset = "0x952168", VA = "0x952168")]
		set
		{
		}
	}
}
[Token(Token = "0x20001C7")]
public class ArcadeGameSwitcher : ArcadeGameSwitcherCore
{
	[Serializable]
	[Token(Token = "0x20001C8")]
	private sealed class <>c
	{
		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GameObject> <>9__20_0;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<GameObject> <>9__20_1;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<GameObject> <>9__20_2;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<GameObject> <>9__20_3;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<GameObject> <>9__21_0;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<GameObject> <>9__21_1;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Action<GameObject> <>9__26_0;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Action<GameObject> <>9__27_0;

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x953F50", Offset = "0x953F50", VA = "0x953F50")]
		public <>c()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x953F58", Offset = "0x953F58", VA = "0x953F58")]
		internal void <AdjustMenuBasedOnArcadeModeSetting>b__20_0(GameObject item)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x953FF4", Offset = "0x953FF4", VA = "0x953FF4")]
		internal void <AdjustMenuBasedOnArcadeModeSetting>b__20_1(GameObject item)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x954098", Offset = "0x954098", VA = "0x954098")]
		internal void <AdjustMenuBasedOnArcadeModeSetting>b__20_2(GameObject item)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x95413C", Offset = "0x95413C", VA = "0x95413C")]
		internal void <AdjustMenuBasedOnArcadeModeSetting>b__20_3(GameObject item)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x9541E0", Offset = "0x9541E0", VA = "0x9541E0")]
		internal void <AdjustMenuBasedOnBuildType>b__21_0(GameObject item)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x95424C", Offset = "0x95424C", VA = "0x95424C")]
		internal void <AdjustMenuBasedOnBuildType>b__21_1(GameObject item)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x9542C0", Offset = "0x9542C0", VA = "0x9542C0")]
		internal void <DisableTeleportsOtherThanStarting>b__26_0(GameObject item)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x9542DC", Offset = "0x9542DC", VA = "0x9542DC")]
		internal void <EnableTeleportsOtherThanStarting>b__27_0(GameObject item)
		{
		}
	}

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool wasArcadeItemsChoosenInThisSession;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Toggle arcadeModeToggle;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SettingMenuArcadePinner settingMenuArcadePinner;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GameObject> teleportsOtherThanStarting;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EquipmentChangesManager equipmentChangesManager;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<GameObject> arcadeBuildButtons;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<GameObject> nonArcadeBuildButtons;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<GameObject> arcadeModeButtonContents;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<GameObject> nonArcadeModeButtonContents;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> ObjectsDisabledInArrcade;

	[Token(Token = "0x170000A9")]
	public override Toggle ArcadeModeToggle
	{
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x9521B4", Offset = "0x9521B4", VA = "0x9521B4", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x9521BC", Offset = "0x9521BC", VA = "0x9521BC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event Action OnArcadeModeToggle
	{
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x9521C4", Offset = "0x9521C4", VA = "0x9521C4")]
		add
		{
		}
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x952280", Offset = "0x952280", VA = "0x952280")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event Action OnReloadPlayerProgression
	{
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x95233C", Offset = "0x95233C", VA = "0x95233C")]
		add
		{
		}
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x9523F8", Offset = "0x9523F8", VA = "0x9523F8")]
		remove
		{
		}
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x9524B4", Offset = "0x9524B4", VA = "0x9524B4", Slot = "7")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x952908", Offset = "0x952908", VA = "0x952908")]
	private void AdjustMenuBasedOnArcadeModeSetting()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x9526AC", Offset = "0x9526AC", VA = "0x9526AC")]
	private void AdjustMenuBasedOnBuildType()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x952C68", Offset = "0x952C68", VA = "0x952C68", Slot = "6")]
	public override void ToggleArcadeMode()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x9525D0", Offset = "0x9525D0", VA = "0x9525D0")]
	public void RandomizePlayerProgression()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x9525E8", Offset = "0x9525E8", VA = "0x9525E8")]
	public void ReloadStoredPlayerProgression()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x9535B4", Offset = "0x9535B4", VA = "0x9535B4")]
	private void GivePlayerAppropriateLevel()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x953A4C", Offset = "0x953A4C", VA = "0x953A4C")]
	private void DisableTeleportsOtherThanStarting()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x953B54", Offset = "0x953B54", VA = "0x953B54")]
	private void EnableTeleportsOtherThanStarting()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x952D98", Offset = "0x952D98", VA = "0x952D98")]
	private void EquipPlayerInRandomEquipment()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x9525E0", Offset = "0x9525E0", VA = "0x9525E0")]
	private void RefreshEquipmentOnPlayer()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x95353C", Offset = "0x95353C", VA = "0x95353C")]
	private void InitNonArcadeEquipment()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x953E4C", Offset = "0x953E4C", VA = "0x953E4C")]
	private void ChangeEquipment(EquipmentChangesManager equipmentChangesManager)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x953C5C", Offset = "0x953C5C", VA = "0x953C5C")]
	private void EquipPlayerInRandomHelmet()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x953D54", Offset = "0x953D54", VA = "0x953D54")]
	private void EquipPlayerInRandomBow()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x952FEC", Offset = "0x952FEC", VA = "0x952FEC")]
	private void GivePlayerRandomSpells()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x953ED0", Offset = "0x953ED0", VA = "0x953ED0", Slot = "8")]
	public override void SetReferences(List<GameObject> _ObjectsDisabledInArrcade)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x953ED8", Offset = "0x953ED8", VA = "0x953ED8")]
	public ArcadeGameSwitcher()
	{
	}
}
[Token(Token = "0x20001C9")]
public class ArrowEnemyHitController : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x4000A05")]
	private const float headshotDamage = 125f;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float bossDamageMultiplier;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float orcDamageMultiplier;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hitEnemyAlready;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isMagic;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool hasShotThroughWindow;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float basicArrowDamage;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CollisionEvents arrowCollisionEvents;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AttachProjectileToEnemyController projectileToEnemyAttachControler;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Rigidbody projectileRigidbody;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Collider arrowCollider;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ArrowFlyController arrowFlyController;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 arrowShotPosition;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IAbility ability;

	[Token(Token = "0x170000AA")]
	public IAbility Ability
	{
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x954458", Offset = "0x954458", VA = "0x954458")]
		get
		{
			return null;
		}
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x954460", Offset = "0x954460", VA = "0x954460")]
		set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event Action<HealthStateController, EnemyGetHitController, Collision, ArrowEnemyHitController> OnArrowHitEnemy
	{
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x9542F8", Offset = "0x9542F8", VA = "0x9542F8")]
		add
		{
		}
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x9543A8", Offset = "0x9543A8", VA = "0x9543A8")]
		remove
		{
		}
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x95453C", Offset = "0x95453C", VA = "0x95453C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x954674", Offset = "0x954674", VA = "0x954674")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x9547AC", Offset = "0x9547AC", VA = "0x9547AC")]
	public void OnArrowCollision(Collision collision)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x954DB4", Offset = "0x954DB4", VA = "0x954DB4")]
	private void CacheArrowShotPosition()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x954DE4", Offset = "0x954DE4", VA = "0x954DE4", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x954E10", Offset = "0x954E10", VA = "0x954E10")]
	public ArrowEnemyHitController()
	{
	}
}
[Token(Token = "0x20001CA")]
public class ArrowFlyController : MonoBehaviourPun, IResetable
{
	[Serializable]
	[Token(Token = "0x20001CB")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__52_0;

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x955D4C", Offset = "0x955D4C", VA = "0x955D4C")]
		public <>c()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x955D54", Offset = "0x955D54", VA = "0x955D54")]
		internal void <.ctor>b__52_0()
		{
		}
	}

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Vector3 farFarAway;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 zAxisWhenFired;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnStopFlying;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action OnArrowFired;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Rigidbody arrowRigidbody;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform arrowTransform;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private BoxCollider boxCollider;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private CollisionEvents collisionEvents;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ArrowResetController arrowResetController;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PhotonPrefabPoolElement photonPrefabPoolElement;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private ArrowTeleportController arrowTeleportController;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TrailRendererEnabler trailRendererEnabler;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ArrowAudioController audioController;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform endOFBolthead;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private bool shouldTeleport;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[SerializeField]
	private bool haveTrailRenderer;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<TagType> tagsToStopArrow;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isFired;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 initialPosition;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion initialRotation;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CollisionDetectionMode defaultCollisionDetectionMode;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool <IsFlying>k__BackingField;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Collision <LastCollision>k__BackingField;

	[Token(Token = "0x170000AB")]
	private Transform DefaultParent
	{
		[Token(Token = "0x6000811")]
		[Address(RVA = "0x954E20", Offset = "0x954E20", VA = "0x954E20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AC")]
	public Transform ArrowTransform
	{
		[Token(Token = "0x6000812")]
		[Address(RVA = "0x954E40", Offset = "0x954E40", VA = "0x954E40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AD")]
	public bool IsFlying
	{
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x954E48", Offset = "0x954E48", VA = "0x954E48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x954E50", Offset = "0x954E50", VA = "0x954E50")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public Collision LastCollision
	{
		[Token(Token = "0x6000815")]
		[Address(RVA = "0x954E5C", Offset = "0x954E5C", VA = "0x954E5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x954E64", Offset = "0x954E64", VA = "0x954E64")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public bool IsFired
	{
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x954E6C", Offset = "0x954E6C", VA = "0x954E6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x954E74", Offset = "0x954E74", VA = "0x954E74")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public Vector3 FlyDirection
	{
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x954EC8", Offset = "0x954EC8", VA = "0x954EC8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x954FAC", Offset = "0x954FAC", VA = "0x954FAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x955030", Offset = "0x955030", VA = "0x955030")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x955124", Offset = "0x955124", VA = "0x955124")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x955218", Offset = "0x955218", VA = "0x955218")]
	private void Update()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x955340", Offset = "0x955340", VA = "0x955340")]
	public void StopArrowOnCollision(Collision collision)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x955568", Offset = "0x955568", VA = "0x955568")]
	private void AddArrowToCollisionMainPrefabPoolElement(Collision collision)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x955600", Offset = "0x955600", VA = "0x955600")]
	public void StopArrow(Collision collision)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x9557FC", Offset = "0x9557FC", VA = "0x9557FC")]
	private void StopArrowOnTrigger(Collider collider)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x9558D0", Offset = "0x9558D0", VA = "0x9558D0")]
	public void StopArrow()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x955794", Offset = "0x955794", VA = "0x955794")]
	private void DisableArrowMovement()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x955984", Offset = "0x955984", VA = "0x955984")]
	public void ShootArrow(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x955A68", Offset = "0x955A68", VA = "0x955A68")]
	private void TryToSetAdditionalArrowFunctions()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x955AD0", Offset = "0x955AD0", VA = "0x955AD0")]
	public void RevertToInitialPositionAndRotation()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x955B1C", Offset = "0x955B1C", VA = "0x955B1C", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x955BCC", Offset = "0x955BCC", VA = "0x955BCC")]
	public ArrowFlyController()
	{
	}
}
[Token(Token = "0x20001CC")]
public class ArrowHitBloodController : MonoBehaviour
{
	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ProjectileElementsHolder projectileElementsHolder;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ArrowEnemyHitController arrowEnemyHitController;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject bloodSplashPrefab;

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x955D58", Offset = "0x955D58", VA = "0x955D58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x955E50", Offset = "0x955E50", VA = "0x955E50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x955F48", Offset = "0x955F48", VA = "0x955F48")]
	private void OnArrowHitEnemy(HealthStateController enemyHealthStateController, EnemyGetHitController enemyGetHitController, Collision collision, ArrowEnemyHitController arrowEnemyHitController)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x955FBC", Offset = "0x955FBC", VA = "0x955FBC")]
	private void ShowBloodEffect()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x9560FC", Offset = "0x9560FC", VA = "0x9560FC")]
	public ArrowHitBloodController()
	{
	}
}
[Token(Token = "0x20001CD")]
public class ArrowHitOnLateUpdateAttacher : ArrowHitCustomBehaviour
{
	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool attachOnLateUpdate;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrowFlyController arrowFlyController;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x956104", Offset = "0x956104", VA = "0x956104", Slot = "4")]
	public override void ReactOnArrowHit(ArrowFlyController arrow)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x956114", Offset = "0x956114", VA = "0x956114")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x95621C", Offset = "0x95621C", VA = "0x95621C")]
	public ArrowHitOnLateUpdateAttacher()
	{
	}
}
[Token(Token = "0x20001CE")]
public class ArrowHitOwnHead : ArrowHitCustomBehaviour
{
	[Token(Token = "0x6000834")]
	[Address(RVA = "0x95622C", Offset = "0x95622C", VA = "0x95622C", Slot = "4")]
	public override void ReactOnArrowHit(ArrowFlyController arrow)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x9562C8", Offset = "0x9562C8", VA = "0x9562C8")]
	public ArrowHitOwnHead()
	{
	}
}
[Token(Token = "0x20001CF")]
public class ArrowMeshSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mesh pcMesh;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Mesh mobileMesh;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshFilter meshFilter;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x9562D0", Offset = "0x9562D0", VA = "0x9562D0", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x9563A8", Offset = "0x9563A8", VA = "0x9563A8")]
	public ArrowMeshSetter()
	{
	}
}
[Token(Token = "0x20001D0")]
public class ArrowTeleportController : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CollisionEvents arrowCollisionEvents;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsTeleporting;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x9563B0", Offset = "0x9563B0", VA = "0x9563B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x95643C", Offset = "0x95643C", VA = "0x95643C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x9564C8", Offset = "0x9564C8", VA = "0x9564C8")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x9565DC", Offset = "0x9565DC", VA = "0x9565DC")]
	private void OnArrowCollision(Collision collision)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x9565E4", Offset = "0x9565E4", VA = "0x9565E4", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x9565EC", Offset = "0x9565EC", VA = "0x9565EC")]
	public ArrowTeleportController()
	{
	}
}
[Token(Token = "0x20001D1")]
public class AttachProjectileToEnemyController : MonoBehaviour
{
	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BodyAttacher bodyAttacher;

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x954CB0", Offset = "0x954CB0", VA = "0x954CB0")]
	public void TryAttachArrowToBody(Collision collision)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x9565F4", Offset = "0x9565F4", VA = "0x9565F4")]
	public void DetachProjectileFromParent()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x956618", Offset = "0x956618", VA = "0x956618")]
	public AttachProjectileToEnemyController()
	{
	}
}
[Token(Token = "0x20001D2")]
public class FireArrowReal : MonoBehaviour
{
	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem fire;

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x956620", Offset = "0x956620", VA = "0x956620")]
	public void SetOnFire()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x95663C", Offset = "0x95663C", VA = "0x95663C")]
	public FireArrowReal()
	{
	}
}
[Token(Token = "0x20001D3")]
public class FireCauldronForArrow : MonoBehaviour
{
	[Token(Token = "0x6000843")]
	[Address(RVA = "0x956644", Offset = "0x956644", VA = "0x956644")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x9566F0", Offset = "0x9566F0", VA = "0x9566F0")]
	public FireCauldronForArrow()
	{
	}
}
[Token(Token = "0x20001D4")]
public class OnArrowHitForceApplyer : MonoBehaviour
{
	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float fromArrowForceMultiplyer;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody rigidbodyToApplyForceTo;

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x9566F8", Offset = "0x9566F8", VA = "0x9566F8")]
	private void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x956844", Offset = "0x956844", VA = "0x956844")]
	public OnArrowHitForceApplyer()
	{
	}
}
[Token(Token = "0x20001D5")]
public class ProjectileElementsHolder : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform projectileHeadTransform;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int playerPhotonViewId;

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x95684C", Offset = "0x95684C", VA = "0x95684C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x9568C0", Offset = "0x9568C0", VA = "0x9568C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x956918", Offset = "0x956918", VA = "0x956918", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x9569D4", Offset = "0x9569D4", VA = "0x9569D4")]
	public ProjectileElementsHolder()
	{
	}
}
[Token(Token = "0x20001D6")]
public class TrailInitializer : MonoBehaviour
{
	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrailRendererEnabler _trailRendererEnabler;

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x9569DC", Offset = "0x9569DC", VA = "0x9569DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x9569F8", Offset = "0x9569F8", VA = "0x9569F8")]
	public TrailInitializer()
	{
	}
}
[Token(Token = "0x20001D7")]
public class ArrowHitCustomBehaviour : MonoBehaviour
{
	[Token(Token = "0x600084D")]
	[Address(RVA = "0x956A00", Offset = "0x956A00", VA = "0x956A00", Slot = "4")]
	public virtual void ReactOnArrowHit(ArrowFlyController arrow)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x956224", Offset = "0x956224", VA = "0x956224")]
	public ArrowHitCustomBehaviour()
	{
	}
}
[Token(Token = "0x20001D8")]
public class ArrowAudioController : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public CollisionEvents arrowCollisionEvents;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public ArrowFlyController arrowFlyController;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource shootAudioSource;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SoundStructure[] arrowHitSounds;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SoundStructure arrowShotSound;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool hasAlreadyPlayed;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool hasHitWater;

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x956A04", Offset = "0x956A04", VA = "0x956A04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x956AF8", Offset = "0x956AF8", VA = "0x956AF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x956BEC", Offset = "0x956BEC", VA = "0x956BEC")]
	public void PlayArrowSoundOnCollision(Collision collision)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x956C48", Offset = "0x956C48", VA = "0x956C48")]
	private void PlaySoundByTag(string tag, bool shouldNotPlayMoreSounds)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x956D00", Offset = "0x956D00", VA = "0x956D00")]
	public void PlayArrowSoundOnTrigger(Collider collider)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x955A44", Offset = "0x955A44", VA = "0x955A44")]
	public void PlayArrowShot()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x956D50", Offset = "0x956D50", VA = "0x956D50", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x956D58", Offset = "0x956D58", VA = "0x956D58")]
	public ArrowAudioController()
	{
	}
}
[Token(Token = "0x20001D9")]
public class OnGamePauseSoundPauser : MonoBehaviour
{
	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource pausableSound;

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x956D60", Offset = "0x956D60", VA = "0x956D60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x956F20", Offset = "0x956F20", VA = "0x956F20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x9570B0", Offset = "0x9570B0", VA = "0x9570B0")]
	private void PauseSound()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x9570CC", Offset = "0x9570CC", VA = "0x9570CC")]
	private void UnPauseSound()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x9570E8", Offset = "0x9570E8", VA = "0x9570E8")]
	public OnGamePauseSoundPauser()
	{
	}
}
[Token(Token = "0x20001DA")]
public class SoundVolumeInitializer : MonoBehaviour
{
	[Token(Token = "0x4000A47")]
	private const string MasterVolume = "MasterVolume";

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isInitialize;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixer audioMixer;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float defaultVolume;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float picoVolume;

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x9570F0", Offset = "0x9570F0", VA = "0x9570F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x9571FC", Offset = "0x9571FC", VA = "0x9571FC")]
	public SoundVolumeInitializer()
	{
	}
}
[Token(Token = "0x20001DB")]
public class BellRinger : MonoBehaviour
{
	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource bellSound;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float soundObjectTime;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CollisionEvents bellCollisionEvents;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider colliderThatMakesRing;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeLastSoundPlayed;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float minDelayBetweenBlSoundPlay;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool wasLastArrowMine;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x957204", Offset = "0x957204", VA = "0x957204")]
	private void Awake()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x957290", Offset = "0x957290", VA = "0x957290")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x95731C", Offset = "0x95731C", VA = "0x95731C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x9574C0", Offset = "0x9574C0", VA = "0x9574C0")]
	private void SetWasMyArrowOnLastCollision(Collision collision)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x957598", Offset = "0x957598", VA = "0x957598")]
	public BellRinger()
	{
	}
}
[Token(Token = "0x20001DC")]
public class BezierArrowFollower : MonoBehaviour
{
	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BezierRoutePart actualRoutePart;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform arrowTransform;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float actualT;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceFromCurveStart;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int indexToStartSearching;

	[Token(Token = "0x14000018")]
	public event Action OnRouteFinished
	{
		[Token(Token = "0x6000863")]
		[Address(RVA = "0x9575B0", Offset = "0x9575B0", VA = "0x9575B0")]
		add
		{
		}
		[Token(Token = "0x6000864")]
		[Address(RVA = "0x95764C", Offset = "0x95764C", VA = "0x95764C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x9576E8", Offset = "0x9576E8", VA = "0x9576E8")]
	public void SetPositionAndRotation(float distance)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x9578F8", Offset = "0x9578F8", VA = "0x9578F8")]
	public void MoveToStartingPosition()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x9578FC", Offset = "0x9578FC", VA = "0x9578FC")]
	public void UpdatePositonByDistance(float distance)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x957B24", Offset = "0x957B24", VA = "0x957B24")]
	public BezierArrowFollower()
	{
	}
}
[Token(Token = "0x20001DD")]
public class BezierCubicCurve : MonoBehaviour
{
	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform startPoint;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform midpoint1;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform midpoint2;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform endPoint;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int numberOfPoints;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float directionPrecision;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int numberOfGizmosPoints;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Color constraintsColor;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private Color curveColor;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private Color directionCurve;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float directionCurveLength;

	[Token(Token = "0x170000B1")]
	public int NumberOfPoints
	{
		[Token(Token = "0x6000869")]
		[Address(RVA = "0x957B2C", Offset = "0x957B2C", VA = "0x957B2C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B2")]
	public Color CurveGizmosColor
	{
		[Token(Token = "0x600086A")]
		[Address(RVA = "0x957B34", Offset = "0x957B34", VA = "0x957B34")]
		set
		{
		}
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x957B40", Offset = "0x957B40", VA = "0x957B40")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x957C88", Offset = "0x957C88", VA = "0x957C88")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x957D98", Offset = "0x957D98", VA = "0x957D98")]
	public float GetTFromDistance(float startingT, float distanceToPast, bool isConsideringY)
	{
		return default(float);
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x957EA4", Offset = "0x957EA4", VA = "0x957EA4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x95814C", Offset = "0x95814C", VA = "0x95814C")]
	public BezierCubicCurve()
	{
	}
}
[Token(Token = "0x20001DE")]
public class BezierCurvePoint : MonoBehaviour
{
	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform point;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform constraint;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color gizmoColor;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float constraintWeight;

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x958154", Offset = "0x958154", VA = "0x958154")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x958190", Offset = "0x958190", VA = "0x958190")]
	public BezierCurvePoint()
	{
	}
}
[Token(Token = "0x20001DF")]
public class BezierFollower : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int actualRoutePartIndex;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody cartRigidbody;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float actualT;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float distanceFromActualCurveStart;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float distanceFromStart;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int indexToStartSearching;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int indexInRouteArray;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] selectedRoutePartsPhotonViewIds;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BezierRoutePart[] selectedRoute;

	[Token(Token = "0x170000B3")]
	public BezierRoutePart ActualRoutePart
	{
		[Token(Token = "0x6000874")]
		[Address(RVA = "0x9582DC", Offset = "0x9582DC", VA = "0x9582DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B4")]
	public BezierRoutePart NextRoutePart
	{
		[Token(Token = "0x6000875")]
		[Address(RVA = "0x958310", Offset = "0x958310", VA = "0x958310")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B5")]
	public bool IsNextRoute
	{
		[Token(Token = "0x6000876")]
		[Address(RVA = "0x958348", Offset = "0x958348", VA = "0x958348")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B6")]
	public float DistanceFromStart
	{
		[Token(Token = "0x6000877")]
		[Address(RVA = "0x958374", Offset = "0x958374", VA = "0x958374")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000019")]
	public event Action OnRouteFinished
	{
		[Token(Token = "0x6000872")]
		[Address(RVA = "0x9581A4", Offset = "0x9581A4", VA = "0x9581A4")]
		add
		{
		}
		[Token(Token = "0x6000873")]
		[Address(RVA = "0x958240", Offset = "0x958240", VA = "0x958240")]
		remove
		{
		}
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x95837C", Offset = "0x95837C", VA = "0x95837C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x9583D4", Offset = "0x9583D4", VA = "0x9583D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x95842C", Offset = "0x95842C", VA = "0x95842C")]
	public void SetPositionAndRotation(float distance)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x95882C", Offset = "0x95882C", VA = "0x95882C")]
	public void MoveToStartingPosition()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x958830", Offset = "0x958830", VA = "0x958830")]
	public void UpdatePositonByDistance(float distance)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x9588EC", Offset = "0x9588EC", VA = "0x9588EC")]
	private void GetRouteFromPhotonViewIds()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x958A24", Offset = "0x958A24", VA = "0x958A24", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x958C58", Offset = "0x958C58", VA = "0x958C58")]
	public BezierFollower()
	{
	}
}
[Token(Token = "0x20001E0")]
public class BezierPoint
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distanceFromCurveStart;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 position;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 direction;

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x958C60", Offset = "0x958C60", VA = "0x958C60")]
	public BezierPoint(float distanceFromCurveStart, Vector3 position, Vector3 direction)
	{
	}
}
[Token(Token = "0x20001E1")]
public class BezierRoutePart : MonoBehaviourPun
{
	[Serializable]
	[Token(Token = "0x20001E2")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<BezierRoutePart> <>9__15_0;

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x958DE0", Offset = "0x958DE0", VA = "0x958DE0")]
		public <>c()
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x958DE8", Offset = "0x958DE8", VA = "0x958DE8")]
		internal bool <get_NextRoutePartsActive>b__15_0(BezierRoutePart item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BezierCubicCurve curve;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<BezierRoutePart> nextRouteParts;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isActive;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Color activeRouteColor;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Color nonActiveRouteColor;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	public int numberOfPoints;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BezierPoint[] pointsInCurveArray;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BezierPoint[] pointsInCurveArray2D;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float routeLength;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float routeLength2D;

	[Token(Token = "0x170000B7")]
	public List<BezierRoutePart> NextRoutePartsActive
	{
		[Token(Token = "0x6000885")]
		[Address(RVA = "0x957A1C", Offset = "0x957A1C", VA = "0x957A1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x958CC4", Offset = "0x958CC4", VA = "0x958CC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x94E4EC", Offset = "0x94E4EC", VA = "0x94E4EC")]
	public void SetPointsInArray()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x95774C", Offset = "0x95774C", VA = "0x95774C")]
	public BezierPoint GetPoint(float distanceFromCurveStart, ref int indexToStartSearching)
	{
		return null;
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x958680", Offset = "0x958680", VA = "0x958680")]
	public BezierPoint GetPoint2D(float distanceFromCurveStart, ref int indexToStartSearching)
	{
		return null;
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x958CC8", Offset = "0x958CC8", VA = "0x958CC8")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x958CE0", Offset = "0x958CE0", VA = "0x958CE0")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x958CF8", Offset = "0x958CF8", VA = "0x958CF8")]
	public float GetTFromDistance(float startingT, float distanceToPast, bool isConsideringY)
	{
		return default(float);
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x958D14", Offset = "0x958D14", VA = "0x958D14")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x958D68", Offset = "0x958D68", VA = "0x958D68")]
	public BezierRoutePart()
	{
	}
}
[Token(Token = "0x20001E3")]
public class BezierSmoothConnector : MonoBehaviour
{
	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BezierCurvePoint thisCurvePoint;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BezierCurvePoint curvePointToConectTo;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x958E00", Offset = "0x958E00", VA = "0x958E00")]
	public void ConnectPointsSmoothly()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x958E0C", Offset = "0x958E0C", VA = "0x958E0C")]
	public static void ConnectPointsSmoothly(BezierCurvePoint firstCurvePoint, BezierCurvePoint secondCurvePoint)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x958FBC", Offset = "0x958FBC", VA = "0x958FBC")]
	public BezierSmoothConnector()
	{
	}
}
[Token(Token = "0x20001E4")]
public class BezierSpline : MonoBehaviour
{
	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BezierCubicCurve bezierPrefab;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<BezierCubicCurve> bezierCurves;

	[Token(Token = "0x170000B8")]
	public List<BezierCubicCurve> BezierCurves
	{
		[Token(Token = "0x6000891")]
		[Address(RVA = "0x958FC4", Offset = "0x958FC4", VA = "0x958FC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x958FCC", Offset = "0x958FCC", VA = "0x958FCC")]
	public BezierSpline()
	{
	}
}
[Token(Token = "0x20001E5")]
public class BoatSoundManager : MonoBehaviour
{
	[Token(Token = "0x20001E6")]
	private sealed class <TurnOffSoundSmoothly>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audio;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoatSoundManager <>4__this;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startVolume>5__2;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentTime>5__3;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600089E")]
			[Address(RVA = "0x959288", Offset = "0x959288", VA = "0x959288", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600089F")]
			[Address(RVA = "0x959290", Offset = "0x959290", VA = "0x959290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x95914C", Offset = "0x95914C", VA = "0x95914C")]
		[DebuggerHidden]
		public <TurnOffSoundSmoothly>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x95918C", Offset = "0x95918C", VA = "0x95918C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x959190", Offset = "0x959190", VA = "0x959190", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip sailingSound;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip burningSound;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip extinguishingSound;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip destroySound;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource sailingAudioSource;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource burningAudioSource;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource extinguishingAudioSource;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource destroyAudioSource;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool shouldTurnOffSoundsSmoothly;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float turningOffTime;

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x958FD4", Offset = "0x958FD4", VA = "0x958FD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x959020", Offset = "0x959020", VA = "0x959020")]
	public void ToggleSailingSound(bool shouldPlay)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x95908C", Offset = "0x95908C", VA = "0x95908C")]
	public void ToggleBurningSound(bool shouldPlay)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x95909C", Offset = "0x95909C", VA = "0x95909C")]
	public void ToggleExtinguishingSound(bool shouldPlay)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x9590AC", Offset = "0x9590AC", VA = "0x9590AC")]
	public void ToggleDestroySound(bool shouldPlay)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x959030", Offset = "0x959030", VA = "0x959030")]
	private void ToogleAudioSource(AudioSource audio, bool shouldPlay)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x9590BC", Offset = "0x9590BC", VA = "0x9590BC")]
	private IEnumerator TurnOffSoundSmoothly(AudioSource audio)
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x959174", Offset = "0x959174", VA = "0x959174")]
	public BoatSoundManager()
	{
	}
}
[Token(Token = "0x20001E7")]
public class BowToPlatformAdjuster : MonoBehaviour
{
	[Token(Token = "0x4000A95")]
	private const float bowScaleMobile = 0.04034954f;

	[Token(Token = "0x4000A96")]
	private const float bowScalePC = 0.04747f;

	[Token(Token = "0x4000A97")]
	private const float bowHandScalePC = 2.244f;

	[Token(Token = "0x4000A98")]
	private const float bowHandScaleMobile = 2.58f;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform bowHandModel;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform bowParentTransform;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SkinnedMeshRenderer bowMeshRenderer;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material bowMaterialMobile;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material bowMaterialPC;

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x959298", Offset = "0x959298", VA = "0x959298")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x95933C", Offset = "0x95933C", VA = "0x95933C")]
	private void SetReferences(Material bowMaterial, float bowScale, float bowHandScale)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x95944C", Offset = "0x95944C", VA = "0x95944C")]
	public BowToPlatformAdjuster()
	{
	}
}
[Token(Token = "0x20001E8")]
public class CameraAnimationsController : MonoBehaviour
{
	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] cameras;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] camerasShotView;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int currentCamera;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int numberOfCameras;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator anim;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private KeyCode[] keyCodes;

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x959454", Offset = "0x959454", VA = "0x959454")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x959550", Offset = "0x959550", VA = "0x959550")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x959478", Offset = "0x959478", VA = "0x959478")]
	private void ChangeCamera(int cameraNumber)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x959728", Offset = "0x959728", VA = "0x959728")]
	private void ShowShotView(int cameraNumber)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x959794", Offset = "0x959794", VA = "0x959794")]
	private void SetCameraActive()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x9597D4", Offset = "0x9597D4", VA = "0x9597D4")]
	private void SetShodViewCameraActive()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x959814", Offset = "0x959814", VA = "0x959814")]
	public CameraAnimationsController()
	{
	}
}
[Token(Token = "0x20001E9")]
public class CameraEnabler : MonoBehaviourPun
{
	[Token(Token = "0x20001EA")]
	private sealed class <EnableCameraInDeathMatchCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraEnabler <>4__this;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008B4")]
			[Address(RVA = "0x959F0C", Offset = "0x959F0C", VA = "0x959F0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0x959F14", Offset = "0x959F14", VA = "0x959F14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x959C14", Offset = "0x959C14", VA = "0x959C14")]
		[DebuggerHidden]
		public <EnableCameraInDeathMatchCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x959CB0", Offset = "0x959CB0", VA = "0x959CB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x959CB4", Offset = "0x959CB4", VA = "0x959CB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isDeathMatch;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TeleportPlatformHolder teleportPlatformHolder;

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x9598A4", Offset = "0x9598A4", VA = "0x9598A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x9599CC", Offset = "0x9599CC", VA = "0x9599CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x959AC8", Offset = "0x959AC8", VA = "0x959AC8")]
	private void EnableCamera()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x959B04", Offset = "0x959B04", VA = "0x959B04")]
	private void EnableCameraInDeathMatch()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x959BA0", Offset = "0x959BA0", VA = "0x959BA0")]
	private IEnumerator EnableCameraInDeathMatchCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x959C3C", Offset = "0x959C3C", VA = "0x959C3C")]
	public CameraEnabler()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x959C44", Offset = "0x959C44", VA = "0x959C44")]
	private bool <EnableCameraInDeathMatchCoroutine>b__6_0()
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x20001EB")]
public class CannonReferences
{
	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] GrapeShootParticles;

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x959F1C", Offset = "0x959F1C", VA = "0x959F1C")]
	public CannonReferences()
	{
	}
}
[Token(Token = "0x20001EC")]
public class CannonReferenceSetter : MonoBehaviour
{
	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CannonController cannonController;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CannonReferences cannonReferencesMobile;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CannonReferences CannonReferencesPC;

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x959F24", Offset = "0x959F24", VA = "0x959F24")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x959F28", Offset = "0x959F28", VA = "0x959F28")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x959FB0", Offset = "0x959FB0", VA = "0x959FB0")]
	private void SetReferences(CannonReferences cannonReferences)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x959FD4", Offset = "0x959FD4", VA = "0x959FD4")]
	public CannonReferenceSetter()
	{
	}
}
[Token(Token = "0x20001ED")]
public class CannonShotController : MonoBehaviour
{
	[Token(Token = "0x4000AAD")]
	private const float cannonBaseDamage = 25f;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damageMultiplyer;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lifetimeOfExplosion;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float currentTimeOfExplosion;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x959FDC", Offset = "0x959FDC", VA = "0x959FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x95A03C", Offset = "0x95A03C", VA = "0x95A03C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x95A14C", Offset = "0x95A14C", VA = "0x95A14C")]
	public void Explode(int clientThatShotID)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x95A290", Offset = "0x95A290", VA = "0x95A290")]
	public CannonShotController()
	{
	}
}
[Token(Token = "0x20001EE")]
public class CatapultController : MonoBehaviourPun, IPunObservable, IWithIcon
{
	[Token(Token = "0x20001EF")]
	private sealed class <AttachStartingRock>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatapultController <>4__this;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0x95B5A4", Offset = "0x95B5A4", VA = "0x95B5A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0x95B5AC", Offset = "0x95B5AC", VA = "0x95B5AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x95AAB4", Offset = "0x95AAB4", VA = "0x95AAB4")]
		[DebuggerHidden]
		public <AttachStartingRock>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x95B444", Offset = "0x95B444", VA = "0x95B444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x95B448", Offset = "0x95B448", VA = "0x95B448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001F0")]
	private sealed class <ShootCoroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatapultController <>4__this;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x95B70C", Offset = "0x95B70C", VA = "0x95B70C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x95B714", Offset = "0x95B714", VA = "0x95B714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x95AEF4", Offset = "0x95AEF4", VA = "0x95AEF4")]
		[DebuggerHidden]
		public <ShootCoroutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x95B5B4", Offset = "0x95B5B4", VA = "0x95B5B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x95B5B8", Offset = "0x95B5B8", VA = "0x95B5B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001F1")]
	private sealed class <LoadRockCoroutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CatapultController <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0x95B87C", Offset = "0x95B87C", VA = "0x95B87C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0x95B884", Offset = "0x95B884", VA = "0x95B884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x95B014", Offset = "0x95B014", VA = "0x95B014")]
		[DebuggerHidden]
		public <LoadRockCoroutine>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x95B71C", Offset = "0x95B71C", VA = "0x95B71C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x95B720", Offset = "0x95B720", VA = "0x95B720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject rockInCatapult;

	[Token(Token = "0x4000AB4")]
	private const float timeFromRockStartingToFlyToLoadingNewOne = 1f;

	[Token(Token = "0x4000AB5")]
	private const float timeFromStartingLoadAnimationToAttachingRock = 3f;

	[Token(Token = "0x4000AB6")]
	private const float delayToGetEverythingFromNetwork = 1f;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PickableInteracter pickableInteracter;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform rockAttachPoint;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform shotDirection;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float forceMutliplier;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject rockPrefab;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int rockID;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool isLoadedWithCatapultRock;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioSource catapultShotAudio;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioSource catapultReloadAudio;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip[] catapultLoadingClips;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip[] catapultShotClips;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float timeFromShotAnimationStartToCatapultRockFlyStart;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform rockPositionWhenStartingToFlyFromCatapult;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private bool hasClientRequestedShot;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private Vector3 angularVelocityOfRockWhenStartsToFly;

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x95A2A0", Offset = "0x95A2A0", VA = "0x95A2A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x95A3B4", Offset = "0x95A3B4", VA = "0x95A3B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x95A40C", Offset = "0x95A40C", VA = "0x95A40C")]
	[PunRPC]
	public void RpcRequestShot(int requestingPlayerID)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x95A578", Offset = "0x95A578", VA = "0x95A578")]
	[PunRPC]
	private void RpcShoot()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x95A60C", Offset = "0x95A60C", VA = "0x95A60C")]
	[PunRPC]
	public void InstantiateRockOnNetwork()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x95A804", Offset = "0x95A804", VA = "0x95A804")]
	[PunRPC]
	private void RpcAttachRock(int rockPhotonViewID)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x95A340", Offset = "0x95A340", VA = "0x95A340")]
	private IEnumerator AttachStartingRock()
	{
		return null;
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x95AADC", Offset = "0x95AADC", VA = "0x95AADC")]
	private void ChangeCatapultAnimationStateToLoaded()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x95AB38", Offset = "0x95AB38", VA = "0x95AB38")]
	private void ThrowRock()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x95A598", Offset = "0x95A598", VA = "0x95A598")]
	private IEnumerator ShootCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x95AE5C", Offset = "0x95AE5C", VA = "0x95AE5C")]
	private void ResetRockRigidbody(Rigidbody rbRockInCatapult, Rigidbody rbRockPrefab)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x95AF1C", Offset = "0x95AF1C", VA = "0x95AF1C")]
	private void LoadRock()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x95AFA0", Offset = "0x95AFA0", VA = "0x95AFA0")]
	private IEnumerator LoadRockCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x95B03C", Offset = "0x95B03C", VA = "0x95B03C")]
	private void AttachRock()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x95B300", Offset = "0x95B300", VA = "0x95B300", Slot = "5")]
	public bool ShouldDisplayIcon()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x95B308", Offset = "0x95B308", VA = "0x95B308", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x95B430", Offset = "0x95B430", VA = "0x95B430")]
	public CatapultController()
	{
	}
}
[Token(Token = "0x20001F2")]
public class CatapultRockController : MonoBehaviour, IPunObservable, IResetable
{
	[Token(Token = "0x4000ACF")]
	private const float yOffsetValue = 10000f;

	[Token(Token = "0x4000AD0")]
	private const float velocityWhenHitMultiplier = 1.3f;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CatapultRockSoundController catapultRockSoundController;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CatapultRockRemover catapultRockRemover;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem hitParticle;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Rigidbody rockRigidbody;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LayerMask layersToColide;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasHit;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasBeenThrown;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool firstHasBeenThrownReceived;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CollisionDetectionMode defaultDetectionMode;

	[Token(Token = "0x170000C3")]
	public bool HasBeenThrown
	{
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x95B88C", Offset = "0x95B88C", VA = "0x95B88C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x95AEC8", Offset = "0x95AEC8", VA = "0x95AEC8")]
		set
		{
		}
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x95B8DC", Offset = "0x95B8DC", VA = "0x95B8DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x95B904", Offset = "0x95B904", VA = "0x95B904")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x95B95C", Offset = "0x95B95C", VA = "0x95B95C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x95B9B4", Offset = "0x95B9B4", VA = "0x95B9B4")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x95AA54", Offset = "0x95AA54", VA = "0x95AA54")]
	public void SetKinemetic(bool isKinematic)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x95BB34", Offset = "0x95BB34", VA = "0x95BB34", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x95BCBC", Offset = "0x95BCBC", VA = "0x95BCBC", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x95BD24", Offset = "0x95BD24", VA = "0x95BD24")]
	public CatapultRockController()
	{
	}
}
[Token(Token = "0x20001F3")]
public class CatapultRockSoundController : MonoBehaviour
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float flyingVolume;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float hitVolume;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<AudioClip> hitAudioClips;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip flyAudioClip;

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x95B894", Offset = "0x95B894", VA = "0x95B894")]
	public void PlayFlyingSound()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x95BA7C", Offset = "0x95BA7C", VA = "0x95BA7C")]
	public void PlayHitSound()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x95BD2C", Offset = "0x95BD2C", VA = "0x95BD2C")]
	public CatapultRockSoundController()
	{
	}
}
[Token(Token = "0x20001F4")]
public class ChangeCamera : MonoBehaviour
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera[] cameras;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int index;

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x95BD40", Offset = "0x95BD40", VA = "0x95BD40")]
	public void ChangeCameraOnClick()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x95BDD0", Offset = "0x95BDD0", VA = "0x95BDD0")]
	public ChangeCamera()
	{
	}
}
[Token(Token = "0x20001F5")]
public class ControllerManager : MonoBehaviour
{
	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x95BDD8", Offset = "0x95BDD8", VA = "0x95BDD8")]
	public ControllerManager()
	{
	}
}
[Token(Token = "0x20001F6")]
public class DeathMatchController : MonoBehaviourPun, IPunObservable, IInRoomCallbacks
{
	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DeathMatchController instance;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathMatchGameTimeController gameTimeController;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameStateDM state;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool hasCountingEnded;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnGameStarted;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnGameFinished;

	[Token(Token = "0x170000C4")]
	public static DeathMatchController Instance
	{
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x959DDC", Offset = "0x959DDC", VA = "0x959DDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C5")]
	public GameStateDM State
	{
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x95BDF0", Offset = "0x95BDF0", VA = "0x95BDF0")]
		get
		{
			return default(GameStateDM);
		}
		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x95BDF8", Offset = "0x95BDF8", VA = "0x95BDF8")]
		set
		{
		}
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x95C260", Offset = "0x95C260", VA = "0x95C260")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x95C330", Offset = "0x95C330", VA = "0x95C330")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x95C4F0", Offset = "0x95C4F0", VA = "0x95C4F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x95C6B0", Offset = "0x95C6B0", VA = "0x95C6B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x95C78C", Offset = "0x95C78C", VA = "0x95C78C")]
	public void StartMatchCountdown()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x95C8F0", Offset = "0x95C8F0", VA = "0x95C8F0")]
	private void SetMenuState(Scene scene, LoadSceneMode loadSceneMode)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x95C8F8", Offset = "0x95C8F8", VA = "0x95C8F8")]
	private void SetMenuState()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x95C980", Offset = "0x95C980", VA = "0x95C980")]
	private void SetPlayingState()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x95C990", Offset = "0x95C990", VA = "0x95C990")]
	private void SetOverState()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x95C900", Offset = "0x95C900", VA = "0x95C900")]
	private void SetGameState(GameStateDM _state)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x95BF44", Offset = "0x95BF44", VA = "0x95BF44")]
	private void ManageMenuState()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x95BFDC", Offset = "0x95BFDC", VA = "0x95BFDC")]
	private void InitializeMenuState()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x95C000", Offset = "0x95C000", VA = "0x95C000")]
	private void ManagePlayingState()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x95C06C", Offset = "0x95C06C", VA = "0x95C06C")]
	private void InitializePlayingState()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x95C124", Offset = "0x95C124", VA = "0x95C124")]
	private void ManageOverState()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x95C1BC", Offset = "0x95C1BC", VA = "0x95C1BC")]
	private void InitializeGameOverState()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x95CA78", Offset = "0x95CA78", VA = "0x95CA78", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x95CBA4", Offset = "0x95CBA4", VA = "0x95CBA4", Slot = "9")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x95CC24", Offset = "0x95CC24", VA = "0x95CC24", Slot = "5")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x95CC28", Offset = "0x95CC28", VA = "0x95CC28", Slot = "6")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x95CC2C", Offset = "0x95CC2C", VA = "0x95CC2C", Slot = "7")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x95CC30", Offset = "0x95CC30", VA = "0x95CC30", Slot = "8")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x95BDE0", Offset = "0x95BDE0", VA = "0x95BDE0")]
	public DeathMatchController()
	{
	}
}
[Token(Token = "0x20001F7")]
public class DeathMatchGameTimeController : GameTimeController, IPunObservable, IInRoomCallbacks
{
	[Token(Token = "0x20001F8")]
	private sealed class <SetMatchLengthAfterSynchronization>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeathMatchGameTimeController <>4__this;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x95E8F4", Offset = "0x95E8F4", VA = "0x95E8F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0x95E8FC", Offset = "0x95E8FC", VA = "0x95E8FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x95DF84", Offset = "0x95DF84", VA = "0x95DF84")]
		[DebuggerHidden]
		public <SetMatchLengthAfterSynchronization>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x95E7E0", Offset = "0x95E7E0", VA = "0x95E7E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x95E7E4", Offset = "0x95E7E4", VA = "0x95E7E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000AE9")]
	private const float timeLeftFromResultsFinishToRestartGame = 1f;

	[Token(Token = "0x4000AEA")]
	private const float minPluralValue = 2f;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fullGameTime;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int fullTimeToRestart;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private DeathmatchStartCountdownController deathmatchStartCountdownController;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text scoreboardTimeText;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject CountdownStartGameUI;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text valueOfTimeToStartGameText;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text timeToStartAndRestartTheGameText;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject deathMatchMenuController;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Timer timerFromGameStartButtonClick;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Timer timerInGame;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Timer timerRestartGame;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimerSound timerSound;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timeToStartGame;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeToEndGame;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timeToRestartGame;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isPlaying;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool isOver;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool resultsAfterGameFinished;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	private bool isTimerSynchronized;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnCountdownStart;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action OnOverTimeToStartGame;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action OnGameOver;

	[Token(Token = "0x170000C6")]
	public float TimeToStartGame
	{
		[Token(Token = "0x600090D")]
		[Address(RVA = "0x95CF44", Offset = "0x95CF44", VA = "0x95CF44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600090E")]
		[Address(RVA = "0x95CF4C", Offset = "0x95CF4C", VA = "0x95CF4C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public float TimeToEndGame
	{
		[Token(Token = "0x600090F")]
		[Address(RVA = "0x95CF54", Offset = "0x95CF54", VA = "0x95CF54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000910")]
		[Address(RVA = "0x95CF5C", Offset = "0x95CF5C", VA = "0x95CF5C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public int FullGameTime
	{
		[Token(Token = "0x6000911")]
		[Address(RVA = "0x95D06C", Offset = "0x95D06C", VA = "0x95D06C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000912")]
		[Address(RVA = "0x95D074", Offset = "0x95D074", VA = "0x95D074")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public float TimeToRestartGame
	{
		[Token(Token = "0x6000913")]
		[Address(RVA = "0x95D150", Offset = "0x95D150", VA = "0x95D150")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000914")]
		[Address(RVA = "0x95D158", Offset = "0x95D158", VA = "0x95D158")]
		set
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event Action OnResultsAfterGameFinished
	{
		[Token(Token = "0x6000909")]
		[Address(RVA = "0x95CC34", Offset = "0x95CC34", VA = "0x95CC34")]
		add
		{
		}
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x95CCEC", Offset = "0x95CCEC", VA = "0x95CCEC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event Action<float> OnTimeToEndGameChange
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x95CDA4", Offset = "0x95CDA4", VA = "0x95CDA4")]
		add
		{
		}
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x95CE74", Offset = "0x95CE74", VA = "0x95CE74")]
		remove
		{
		}
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x95D20C", Offset = "0x95D20C", VA = "0x95D20C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x95D24C", Offset = "0x95D24C", VA = "0x95D24C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x95D728", Offset = "0x95D728", VA = "0x95D728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x95D7AC", Offset = "0x95D7AC", VA = "0x95D7AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x95DC88", Offset = "0x95DC88", VA = "0x95DC88")]
	private void Update()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x95C998", Offset = "0x95C998", VA = "0x95C998")]
	public void MatchLengthCountdown()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x95DF10", Offset = "0x95DF10", VA = "0x95DF10")]
	private IEnumerator SetMatchLengthAfterSynchronization()
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x95C9B8", Offset = "0x95C9B8", VA = "0x95C9B8")]
	public void StartGameRestartCountdown()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x95D16C", Offset = "0x95D16C", VA = "0x95D16C")]
	private void UpdateCountdownDescription()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x95DFAC", Offset = "0x95DFAC", VA = "0x95DFAC")]
	private void UpdateCountDownDescriptionWithTime()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x95E0A0", Offset = "0x95E0A0", VA = "0x95E0A0")]
	public void Vanish()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x95E130", Offset = "0x95E130", VA = "0x95E130")]
	public void PlayLoopSound()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x95E168", Offset = "0x95E168", VA = "0x95E168")]
	public void PlayEndSound()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x95E184", Offset = "0x95E184", VA = "0x95E184")]
	public void PlayTeleportSound()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x95C7A4", Offset = "0x95C7A4", VA = "0x95C7A4")]
	public void StartCountingTimeToStart()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x95E1A0", Offset = "0x95E1A0", VA = "0x95E1A0")]
	public void StartCountingTimeGame()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x95E1D4", Offset = "0x95E1D4", VA = "0x95E1D4")]
	public void SynchronizeTimeToGameStart(float time)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x95E1F0", Offset = "0x95E1F0", VA = "0x95E1F0")]
	public float GetPreciseTimeToGameStart()
	{
		return default(float);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x95E20C", Offset = "0x95E20C", VA = "0x95E20C")]
	private void SetStateToMinutesLeft()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x95E288", Offset = "0x95E288", VA = "0x95E288")]
	private void UpdateTimeToStartTheGameText()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x95E344", Offset = "0x95E344", VA = "0x95E344")]
	private void UpdateTimeToStart()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x95DEC4", Offset = "0x95DEC4", VA = "0x95DEC4")]
	private void UpdateTimeToRestart()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x95DDF4", Offset = "0x95DDF4", VA = "0x95DDF4")]
	private void UpdateDeathMatchTime()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x95E370", Offset = "0x95E370", VA = "0x95E370", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x95E658", Offset = "0x95E658", VA = "0x95E658")]
	[PunRPC]
	private void RpcSynchronizeStarGame()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x95E708", Offset = "0x95E708", VA = "0x95E708", Slot = "9")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x95E7A4", Offset = "0x95E7A4", VA = "0x95E7A4", Slot = "5")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x95E7A8", Offset = "0x95E7A8", VA = "0x95E7A8", Slot = "6")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x95E7AC", Offset = "0x95E7AC", VA = "0x95E7AC", Slot = "7")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x95E7B0", Offset = "0x95E7B0", VA = "0x95E7B0", Slot = "8")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x95E7B4", Offset = "0x95E7B4", VA = "0x95E7B4")]
	public DeathMatchGameTimeController()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x95E7D8", Offset = "0x95E7D8", VA = "0x95E7D8")]
	private bool <SetMatchLengthAfterSynchronization>b__48_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001F9")]
public class DeathMatchPauseMenu : MonoBehaviourPun
{
	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject startButton;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject continueButton;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject pauseWindow;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject WaitingForTheHostText;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Timer timer;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject[] windowsInPauseMenu;

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x95E904", Offset = "0x95E904", VA = "0x95E904")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x95EDC4", Offset = "0x95EDC4", VA = "0x95EDC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x95EEEC", Offset = "0x95EEEC", VA = "0x95EEEC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x95EDDC", Offset = "0x95EDDC", VA = "0x95EDDC")]
	public void InitializePauseWindow()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x95EECC", Offset = "0x95EECC", VA = "0x95EECC")]
	private void OpenPauseWindow()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x95F3A0", Offset = "0x95F3A0", VA = "0x95F3A0")]
	private void ClosePauseWindow()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x95F404", Offset = "0x95F404", VA = "0x95F404")]
	private void EnableContinueButton()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x95F424", Offset = "0x95F424", VA = "0x95F424")]
	private void DisableContinueButton()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x95F380", Offset = "0x95F380", VA = "0x95F380")]
	private void DisableHostText()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x95F444", Offset = "0x95F444", VA = "0x95F444")]
	public DeathMatchPauseMenu()
	{
	}
}
[Token(Token = "0x20001FA")]
public class DeathMatchPauseWindowLocalizer : MonoBehaviour
{
	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Hits;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Deaths;

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x95F44C", Offset = "0x95F44C", VA = "0x95F44C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x95F4D4", Offset = "0x95F4D4", VA = "0x95F4D4")]
	public DeathMatchPauseWindowLocalizer()
	{
	}
}
[Token(Token = "0x20001FB")]
public class DeathmatchStartCountdownController : MonoBehaviour
{
	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float countdownTimeForTournament;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float countdownTimeForNormalDeathMatch;

	[Token(Token = "0x170000CC")]
	public float CountdownTime
	{
		[Token(Token = "0x6000946")]
		[Address(RVA = "0x95F4DC", Offset = "0x95F4DC", VA = "0x95F4DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x95F508", Offset = "0x95F508", VA = "0x95F508")]
	public DeathmatchStartCountdownController()
	{
	}
}
[Token(Token = "0x20001FC")]
public enum GameStateDM
{
	[Token(Token = "0x4000B11")]
	Menu,
	[Token(Token = "0x4000B12")]
	Playing,
	[Token(Token = "0x4000B13")]
	Over
}
[Token(Token = "0x20001FD")]
public class MapVotingControllerDeathmatchCaller : MonoBehaviour
{
	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MapVotingController mapVotingController;

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x95F510", Offset = "0x95F510", VA = "0x95F510")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x95F568", Offset = "0x95F568", VA = "0x95F568")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x95F600", Offset = "0x95F600", VA = "0x95F600")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x95F698", Offset = "0x95F698", VA = "0x95F698")]
	public MapVotingControllerDeathmatchCaller()
	{
	}
}
[Token(Token = "0x20001FE")]
public class MasterChangerDeathMatch : MonoBehaviourPun, IInRoomCallbacks
{
	[Serializable]
	[Token(Token = "0x20001FF")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__5_0;

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x95FA20", Offset = "0x95FA20", VA = "0x95FA20")]
		public <>c()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x95FA28", Offset = "0x95FA28", VA = "0x95FA28")]
		internal bool <SetNewMasterDelayed>b__5_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000200")]
	private sealed class <SetNewMasterDelayed>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MasterChangerDeathMatch <>4__this;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x95FBE4", Offset = "0x95FBE4", VA = "0x95FBE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x95FBEC", Offset = "0x95FBEC", VA = "0x95FBEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x95F810", Offset = "0x95F810", VA = "0x95F810")]
		[DebuggerHidden]
		public <SetNewMasterDelayed>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x95FA84", Offset = "0x95FA84", VA = "0x95FA84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x95FA88", Offset = "0x95FA88", VA = "0x95FA88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000B15")]
	private const GameType gameType = GameType.Deathmatch;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnMenuMasterChanged;

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x95F6A0", Offset = "0x95F6A0", VA = "0x95F6A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x95F6F8", Offset = "0x95F6F8", VA = "0x95F6F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x95F750", Offset = "0x95F750", VA = "0x95F750")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x95F79C", Offset = "0x95F79C", VA = "0x95F79C")]
	private IEnumerator SetNewMasterDelayed()
	{
		return null;
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x95F790", Offset = "0x95F790", VA = "0x95F790")]
	private bool GameUnpaused(bool pauseStatus)
	{
		return default(bool);
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x95F838", Offset = "0x95F838", VA = "0x95F838")]
	private void SetNewMaster()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x95F8F8", Offset = "0x95F8F8", VA = "0x95F8F8", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x95F8FC", Offset = "0x95F8FC", VA = "0x95F8FC", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x95F900", Offset = "0x95F900", VA = "0x95F900", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x95F904", Offset = "0x95F904", VA = "0x95F904", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x95F908", Offset = "0x95F908", VA = "0x95F908", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x95F9A8", Offset = "0x95F9A8", VA = "0x95F9A8")]
	public MasterChangerDeathMatch()
	{
	}
}
[Token(Token = "0x2000201")]
public class PlayerDeathControllerDmMobile : PlayerDeathController, IInRoomCallbacks
{
	[Token(Token = "0x2000202")]
	private sealed class <ShowDelayedTextDeathPlayerTimeToRespawn>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerDmMobile <>4__this;

		[Token(Token = "0x170000D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x960630", Offset = "0x960630", VA = "0x960630", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0x960638", Offset = "0x960638", VA = "0x960638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x960460", Offset = "0x960460", VA = "0x960460")]
		[DebuggerHidden]
		public <ShowDelayedTextDeathPlayerTimeToRespawn>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x960488", Offset = "0x960488", VA = "0x960488", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x96048C", Offset = "0x96048C", VA = "0x96048C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000203")]
	private sealed class <DieSoundRoutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerDmMobile <>4__this;

		[Token(Token = "0x170000D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600097D")]
			[Address(RVA = "0x9606F8", Offset = "0x9606F8", VA = "0x9606F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0x960700", Offset = "0x960700", VA = "0x960700", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x960640", Offset = "0x960640", VA = "0x960640")]
		[DebuggerHidden]
		public <DieSoundRoutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x960668", Offset = "0x960668", VA = "0x960668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x96066C", Offset = "0x96066C", VA = "0x96066C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000B1C")]
	private const float timeUntilRespawn = 5f;

	[Token(Token = "0x4000B1D")]
	private const float respawnTimerTextDistanceFromPlayer = 2f;

	[Token(Token = "0x4000B1E")]
	private const float timeUntilCounterToRespawnShouldBeVisible = 2f;

	[Token(Token = "0x4000B1F")]
	private const float animationOffset = 0.5f;

	[Token(Token = "0x4000B20")]
	private const int distanceFromPlayer = 0;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip deathSound;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource deathAudioSource;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PlayerMaterialsColorSetterMobile playerMaterialColorSetter;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isDead;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool deathEffectTimeFinished;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float currentTimeToRespawn;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FloatTextCanvas canvasWithTimeToRespawn;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForSeconds soundDelay;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaitForSeconds textDelay;

	[Token(Token = "0x170000CF")]
	public override bool IsDead
	{
		[Token(Token = "0x6000960")]
		[Address(RVA = "0x95FBF4", Offset = "0x95FBF4", VA = "0x95FBF4", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000961")]
		[Address(RVA = "0x95FBFC", Offset = "0x95FBFC", VA = "0x95FBFC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x95FCB0", Offset = "0x95FCB0", VA = "0x95FCB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x95FD08", Offset = "0x95FD08", VA = "0x95FD08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x95FD60", Offset = "0x95FD60", VA = "0x95FD60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x95FDAC", Offset = "0x95FDAC", VA = "0x95FDAC")]
	private void ProcessDeathEffect()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x960098", Offset = "0x960098", VA = "0x960098", Slot = "8")]
	public override void Die(PlayerKillInfo playerKillInfo)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x96021C", Offset = "0x96021C", VA = "0x96021C")]
	private IEnumerator ShowDelayedTextDeathPlayerTimeToRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x9601F0", Offset = "0x9601F0", VA = "0x9601F0")]
	public void EnableDeathEffects()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x95FC84", Offset = "0x95FC84", VA = "0x95FC84")]
	public void DisableDeathEffects()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x960290", Offset = "0x960290", VA = "0x960290", Slot = "6")]
	public override void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x9602B4", Offset = "0x9602B4", VA = "0x9602B4", Slot = "7")]
	public override void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x96017C", Offset = "0x96017C", VA = "0x96017C")]
	private IEnumerator DieSoundRoutine()
	{
		return null;
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x95FC60", Offset = "0x95FC60", VA = "0x95FC60")]
	private void SetPlayerMaterialsToGhost(bool isGhost)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x9602C0", Offset = "0x9602C0", VA = "0x9602C0", Slot = "13")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x960374", Offset = "0x960374", VA = "0x960374")]
	private bool IsWaitingForRespawn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x9603A8", Offset = "0x9603A8", VA = "0x9603A8", Slot = "9")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x9603AC", Offset = "0x9603AC", VA = "0x9603AC", Slot = "10")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x9603B0", Offset = "0x9603B0", VA = "0x9603B0", Slot = "11")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x9603B4", Offset = "0x9603B4", VA = "0x9603B4", Slot = "12")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x9603B8", Offset = "0x9603B8", VA = "0x9603B8")]
	public PlayerDeathControllerDmMobile()
	{
	}
}
[Token(Token = "0x2000204")]
public class DeathAnimAdjuster : MonoBehaviour
{
	[Token(Token = "0x2000205")]
	private sealed class <RotateAngleByTime>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeathAnimAdjuster <>4__this;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion endRotationAngle;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float time;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion <fromAngle>5__2;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion <toAngle>5__3;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <t>5__4;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0x96113C", Offset = "0x96113C", VA = "0x96113C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0x961144", Offset = "0x961144", VA = "0x961144", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x960E44", Offset = "0x960E44", VA = "0x960E44")]
		[DebuggerHidden]
		public <RotateAngleByTime>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x96103C", Offset = "0x96103C", VA = "0x96103C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x961040", Offset = "0x961040", VA = "0x961040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000B30")]
	private const string deadAnimationStateName = "Dead";

	[Token(Token = "0x4000B31")]
	private const float rotationSpeed = 70f;

	[Token(Token = "0x4000B32")]
	private const float rotateTime = 0.2f;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnDeathAnimationAdjustingFinished;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator orcAnimator;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform transformToRotate;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider groundHitCollider;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float minimumAnimationTimeToStartRotating;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform head;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform pelvis;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool isFallingBack;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimatorStateInfo currentAnimatorStateInfo;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion savedRotation;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 eulerAnglesToRotate;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float currentRotatedAngle;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool stopAdjusting;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool gotSlope;

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x960708", Offset = "0x960708", VA = "0x960708")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x96074C", Offset = "0x96074C", VA = "0x96074C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x960794", Offset = "0x960794", VA = "0x960794")]
	private void Update()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x960980", Offset = "0x960980", VA = "0x960980")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x960D98", Offset = "0x960D98", VA = "0x960D98")]
	private IEnumerator RotateAngleByTime(Quaternion endRotationAngle, float time)
	{
		return null;
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x96087C", Offset = "0x96087C", VA = "0x96087C")]
	private void AdjustBodyToGround()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x960804", Offset = "0x960804", VA = "0x960804")]
	public bool ShouldRotateToGround()
	{
		return default(bool);
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x960B38", Offset = "0x960B38", VA = "0x960B38")]
	private bool IsGroundHit(string colliderTag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x960E6C", Offset = "0x960E6C", VA = "0x960E6C")]
	private static bool IsItStoppingDeathTag(string tag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x960B40", Offset = "0x960B40", VA = "0x960B40")]
	private float GetGroundSlope()
	{
		return default(float);
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x960F00", Offset = "0x960F00", VA = "0x960F00")]
	private RaycastHit GetRaycastAtGround(Transform startingPoint)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x961028", Offset = "0x961028", VA = "0x961028")]
	public DeathAnimAdjuster()
	{
	}
}
[Token(Token = "0x2000206")]
public class DebugOrcTrailController : MonoBehaviour
{
	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrailRenderer trailRenderer;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RouteController routeController;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool colorPicked;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x96114C", Offset = "0x96114C", VA = "0x96114C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x961218", Offset = "0x961218", VA = "0x961218")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x961244", Offset = "0x961244", VA = "0x961244")]
	public DebugOrcTrailController()
	{
	}
}
[Token(Token = "0x2000207")]
public class debugtext : MonoBehaviourPun, IMatchmakingCallbacks
{
	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text1;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text text2;

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x96124C", Offset = "0x96124C", VA = "0x96124C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x9612A4", Offset = "0x9612A4", VA = "0x9612A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x9612FC", Offset = "0x9612FC", VA = "0x9612FC", Slot = "5")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x96139C", Offset = "0x96139C", VA = "0x96139C", Slot = "6")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x9613DC", Offset = "0x9613DC", VA = "0x9613DC", Slot = "4")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x96141C", Offset = "0x96141C", VA = "0x96141C", Slot = "7")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x96145C", Offset = "0x96145C", VA = "0x96145C", Slot = "9")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x96149C", Offset = "0x96149C", VA = "0x96149C", Slot = "8")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x9614DC", Offset = "0x9614DC", VA = "0x9614DC", Slot = "10")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x96151C", Offset = "0x96151C", VA = "0x96151C")]
	public debugtext()
	{
	}
}
[Token(Token = "0x2000208")]
public class DestructibleLanternController : MonoBehaviour
{
	[Token(Token = "0x4000B4F")]
	private const float minPitch = 0.8f;

	[Token(Token = "0x4000B50")]
	private const float maxPitch = 1.4f;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light lightToBreak;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource brokenGlassSound;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource metalHitSound;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool broken;

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x961524", Offset = "0x961524", VA = "0x961524")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x9615B4", Offset = "0x9615B4", VA = "0x9615B4")]
	private void Break()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x9615F4", Offset = "0x9615F4", VA = "0x9615F4")]
	public DestructibleLanternController()
	{
	}
}
[Token(Token = "0x2000209")]
public class DisableObjOnButton : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200020A")]
	public class ObjToButtons
	{
		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject obj;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode key;

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x9619A8", Offset = "0x9619A8", VA = "0x9619A8")]
		public ObjToButtons()
		{
		}
	}

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool DisableOnChange;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private KeyCode ResetAll;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<ObjToButtons> objToDisable;

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x9615FC", Offset = "0x9615FC", VA = "0x9615FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x961998", Offset = "0x961998", VA = "0x961998")]
	public DisableObjOnButton()
	{
	}
}
[Token(Token = "0x200020B")]
public class DragonSpawnPoint : MonoBehaviour
{
	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoutePoint dragonDeathPoint;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int DragonDeathPointIndex;

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x9619B0", Offset = "0x9619B0", VA = "0x9619B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x961A88", Offset = "0x961A88", VA = "0x961A88")]
	public DragonSpawnPoint()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x961A90", Offset = "0x961A90", VA = "0x961A90")]
	private bool <Awake>b__2_0(RoutePoint item)
	{
		return default(bool);
	}
}
[Token(Token = "0x200020C")]
public class DummyArrowInteraction : MonoBehaviour
{
	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody forceReceiver;

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x961AFC", Offset = "0x961AFC", VA = "0x961AFC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x961CD8", Offset = "0x961CD8", VA = "0x961CD8")]
	public DummyArrowInteraction()
	{
	}
}
[Token(Token = "0x200020D")]
public class ArrowWaterSplashController : MonoBehaviour
{
	[Token(Token = "0x4000B5D")]
	private const float rayMaxDistance = 100f;

	[Token(Token = "0x4000B5E")]
	private const float rayOriginOffset = 10f;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider waterCollider;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject waterSplashPrefab;

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x961CE0", Offset = "0x961CE0", VA = "0x961CE0")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x961F54", Offset = "0x961F54", VA = "0x961F54")]
	public ArrowWaterSplashController()
	{
	}
}
[Token(Token = "0x200020E")]
public class BlankWalkingAnimationEventsReceiver : MonoBehaviour
{
	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x961F5C", Offset = "0x961F5C", VA = "0x961F5C")]
	public BlankWalkingAnimationEventsReceiver()
	{
	}
}
[Token(Token = "0x200020F")]
public class FallIntoWaterSplashController : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject waterSplashPrefab;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject smallWaterSplashPrefab;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider collider;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool isDependentOnRigidbodyVelocity;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Rigidbody rigidbody;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float minRigidbodyVelocity;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isSplashAlreadyCreated;

	[Token(Token = "0x170000D6")]
	private bool HasEnoughVelocity
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x961F64", Offset = "0x961F64", VA = "0x961F64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x961FA8", Offset = "0x961FA8", VA = "0x961FA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x962090", Offset = "0x962090", VA = "0x962090")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x962178", Offset = "0x962178", VA = "0x962178")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x9623C4", Offset = "0x9623C4", VA = "0x9623C4")]
	private void EnableCollider(HealthStateController obj)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x9623E4", Offset = "0x9623E4", VA = "0x9623E4", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x96240C", Offset = "0x96240C", VA = "0x96240C")]
	public FallIntoWaterSplashController()
	{
	}
}
[Token(Token = "0x2000210")]
public class IsInWaterDetector : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInWater;

	[Token(Token = "0x170000D7")]
	public bool IsInWater
	{
		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x962414", Offset = "0x962414", VA = "0x962414")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x96241C", Offset = "0x96241C", VA = "0x96241C")]
	private void OnTriggerEnter(Collider trigger)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x962478", Offset = "0x962478", VA = "0x962478")]
	private void OnTriggerExit(Collider trigger)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x9624D0", Offset = "0x9624D0", VA = "0x9624D0", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x9624D8", Offset = "0x9624D8", VA = "0x9624D8")]
	public IsInWaterDetector()
	{
	}
}
[Token(Token = "0x2000211")]
public class OnAnimationWaterSplashController : MonoBehaviour
{
	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private IsInWaterDetector leftFootIsInWaterDetector;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private IsInWaterDetector rightFootIsInWaterDetector;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject waterSplashPrefab;

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x9624E0", Offset = "0x9624E0", VA = "0x9624E0")]
	public void OnAnimationRightFootWaterSplash()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x96262C", Offset = "0x96262C", VA = "0x96262C")]
	public void OnAnimationLeftFootWaterSplash()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x962778", Offset = "0x962778", VA = "0x962778")]
	public OnAnimationWaterSplashController()
	{
	}
}
[Token(Token = "0x2000212")]
public class WaterInfo : MonoBehaviour
{
	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaterSize WaterSize;

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x962780", Offset = "0x962780", VA = "0x962780")]
	public WaterInfo()
	{
	}
}
[Token(Token = "0x2000213")]
public enum WaterSize
{
	[Token(Token = "0x4000B6F")]
	Small,
	[Token(Token = "0x4000B70")]
	Big
}
[Token(Token = "0x2000214")]
public class WyvernFallEffect : MonoBehaviour
{
	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider triggerCollider;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject waterSplashPrefab;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject smallWaterSplashPrefab;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<ParticleSystem> dustParticlesList;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool hasCollided;

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x962788", Offset = "0x962788", VA = "0x962788")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x962870", Offset = "0x962870", VA = "0x962870")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x962970", Offset = "0x962970", VA = "0x962970")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x962C20", Offset = "0x962C20", VA = "0x962C20")]
	private void PlayDustEffect()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x962A58", Offset = "0x962A58", VA = "0x962A58")]
	private void PlaySplashEffect(WaterSize waterSize)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x962CAC", Offset = "0x962CAC", VA = "0x962CAC")]
	private void EnableCollider(HealthStateController obj)
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x962CCC", Offset = "0x962CCC", VA = "0x962CCC")]
	public WyvernFallEffect()
	{
	}
}
[Token(Token = "0x2000215")]
public class AnimEventAttackWraper : MonoBehaviour
{
	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AttackController attackController;

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x962CD4", Offset = "0x962CD4", VA = "0x962CD4")]
	public void DealDamage()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x962CF8", Offset = "0x962CF8", VA = "0x962CF8")]
	private void DealHalfDamage()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x962D1C", Offset = "0x962D1C", VA = "0x962D1C")]
	public AnimEventAttackWraper()
	{
	}
}
[Token(Token = "0x2000216")]
public class ArrowAttachmentPoint : MonoBehaviour
{
	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Transform> attachmentPoints;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x962D24", Offset = "0x962D24", VA = "0x962D24")]
	public Transform CalculateClosestAttachmentPoint(Vector3 arrowPos)
	{
		return null;
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x962E30", Offset = "0x962E30", VA = "0x962E30")]
	public ArrowAttachmentPoint()
	{
	}
}
[Token(Token = "0x2000217")]
public class AttackController : AttackControllerCore, IResetable, IPunObservable
{
	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _damage;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OrcAnimatorController animatorController;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEngine.Object attackPlayerObject;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isDuringAttack;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int targetID;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IAttackTarget target;

	[Token(Token = "0x170000D8")]
	protected override float damage
	{
		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x962E38", Offset = "0x962E38", VA = "0x962E38", Slot = "4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x962E40", Offset = "0x962E40", VA = "0x962E40", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public bool IsDuringAttack
	{
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x962E48", Offset = "0x962E48", VA = "0x962E48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x962E50", Offset = "0x962E50", VA = "0x962E50")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	protected override IAttackTarget Target
	{
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x962F30", Offset = "0x962F30", VA = "0x962F30", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x962F38", Offset = "0x962F38", VA = "0x962F38", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public int TargetID
	{
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x963160", Offset = "0x963160", VA = "0x963160")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x963040", Offset = "0x963040", VA = "0x963040")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	private IAttackPlayer AttackPlayer
	{
		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x963168", Offset = "0x963168", VA = "0x963168")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x9631B0", Offset = "0x9631B0", VA = "0x9631B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x963238", Offset = "0x963238", VA = "0x963238", Slot = "8")]
	public override void Hit(float damageMultiplier = 1f)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x9633C0", Offset = "0x9633C0", VA = "0x9633C0", Slot = "9")]
	public override bool HasTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x962E88", Offset = "0x962E88", VA = "0x962E88")]
	public void PlayAttack()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x9633E0", Offset = "0x9633E0", VA = "0x9633E0", Slot = "10")]
	public override void SetTarget(IAttackTarget newTarget)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x9633EC", Offset = "0x9633EC", VA = "0x9633EC")]
	public void FinishAttack()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x9635B0", Offset = "0x9635B0", VA = "0x9635B0", Slot = "11")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x9635C4", Offset = "0x9635C4", VA = "0x9635C4", Slot = "12")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x963710", Offset = "0x963710", VA = "0x963710")]
	public AttackController()
	{
	}
}
[Token(Token = "0x2000218")]
public class BoatAnimatorController : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int isSinkingId;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int isDockedId;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int isIdleId;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator boatAnimator;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isAnimatorStopped;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isDocked;

	[Token(Token = "0x170000DD")]
	public bool IsAnimatorStopped
	{
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x963720", Offset = "0x963720", VA = "0x963720")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x963728", Offset = "0x963728", VA = "0x963728")]
		set
		{
		}
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x9637A4", Offset = "0x9637A4", VA = "0x9637A4")]
	public void PlayIdle()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x9637C8", Offset = "0x9637C8", VA = "0x9637C8")]
	public void PlayDocked()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x9637EC", Offset = "0x9637EC", VA = "0x9637EC")]
	public void PlaySinking()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x963764", Offset = "0x963764", VA = "0x963764")]
	public void StopAllAnimations()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x963784", Offset = "0x963784", VA = "0x963784", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x963810", Offset = "0x963810", VA = "0x963810", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x9638D8", Offset = "0x9638D8", VA = "0x9638D8")]
	public BoatAnimatorController()
	{
	}
}
[Token(Token = "0x2000219")]
public class BoatBridgeAnimatorController : MonoBehaviour, IPunObservable, IResetable
{
	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnBridgeOpen;

	[Token(Token = "0x4000B87")]
	private const string openingBridgeTriggerName = "OpenBridge";

	[Token(Token = "0x4000B88")]
	private const string closingBridgeTriggerName = "CloseBridge";

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator boatBridgeAnimator;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool shouldBridgeOpened;

	[Token(Token = "0x170000DE")]
	public bool ShouldBridgeBeOpened
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x963980", Offset = "0x963980", VA = "0x963980")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x963988", Offset = "0x963988", VA = "0x963988")]
		set
		{
		}
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x9639B4", Offset = "0x9639B4", VA = "0x9639B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x9639A4", Offset = "0x9639A4", VA = "0x9639A4")]
	private void UpdateBridgeState()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x963A60", Offset = "0x963A60", VA = "0x963A60")]
	public void OnBridgeOpened()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x9639B8", Offset = "0x9639B8", VA = "0x9639B8")]
	public void OpenBoatBridge()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x963A0C", Offset = "0x963A0C", VA = "0x963A0C")]
	public void CloseBoatBridge()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x963A7C", Offset = "0x963A7C", VA = "0x963A7C")]
	public void StopAllAnimations()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x963A9C", Offset = "0x963A9C", VA = "0x963A9C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x963B78", Offset = "0x963B78", VA = "0x963B78", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x963BB8", Offset = "0x963BB8", VA = "0x963BB8")]
	public BoatBridgeAnimatorController()
	{
	}
}
[Token(Token = "0x200021A")]
public class BoatController : MonoBehaviourPun, IResetable, IPunObservable
{
	[Token(Token = "0x200021B")]
	private sealed class <PlaySinkingVisualAndSoundEffects>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoatController <>4__this;

		[Token(Token = "0x170000E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0x965BFC", Offset = "0x965BFC", VA = "0x965BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x965C04", Offset = "0x965C04", VA = "0x965C04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x964CE0", Offset = "0x964CE0", VA = "0x964CE0")]
		[DebuggerHidden]
		public <PlaySinkingVisualAndSoundEffects>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x965AEC", Offset = "0x965AEC", VA = "0x965AEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x965AF0", Offset = "0x965AF0", VA = "0x965AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200021C")]
	private sealed class <FindHarborCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoatController <>4__this;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0x965D5C", Offset = "0x965D5C", VA = "0x965D5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0x965D64", Offset = "0x965D64", VA = "0x965D64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x964D08", Offset = "0x964D08", VA = "0x964D08")]
		[DebuggerHidden]
		public <FindHarborCoroutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x965C0C", Offset = "0x965C0C", VA = "0x965C0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x965C10", Offset = "0x965C10", VA = "0x965C10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BoatType boatType;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float timeOnFireBeforeSink;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float timeToStartExtinguishingFire;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float timeToSpeedUp;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BodyDissapearController bodyDissapearController;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private BoatAnimatorController animatorController;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RouteController routeController;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private EnemyMovementController movementController;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystem particle;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] boatRoutePointsTransform;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private OrcsLeftCounter orcsLeftCounter;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private BoatEnemySpawner boatEnemySpawner;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private BoatBridgeAnimatorController boatBridgeAnimatorController;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private OrcCaptainOnBoatController orcCaptainOnBoatController;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private BoatSoundManager boatSoundManager;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject disappearCollidersGameObject;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform[] boatDefaultRoutePointsParent;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isOnFire;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool isDocked;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool connectedToRoute;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int harborRoutePointIndex;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int numberOfOrcsInBoat;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Harbor <Harbor>k__BackingField;

	[Token(Token = "0x170000DF")]
	public Harbor Harbor
	{
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x963BC0", Offset = "0x963BC0", VA = "0x963BC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x963BC8", Offset = "0x963BC8", VA = "0x963BC8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public BoatType BoatType
	{
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x963BD0", Offset = "0x963BD0", VA = "0x963BD0")]
		get
		{
			return default(BoatType);
		}
	}

	[Token(Token = "0x170000E1")]
	public bool IsOnFire
	{
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x963BD8", Offset = "0x963BD8", VA = "0x963BD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x963BE0", Offset = "0x963BE0", VA = "0x963BE0")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public bool IsDocked
	{
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x963E6C", Offset = "0x963E6C", VA = "0x963E6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x963E74", Offset = "0x963E74", VA = "0x963E74")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	private int HarborRoutePointIndex
	{
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x964078", Offset = "0x964078", VA = "0x964078")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x964080", Offset = "0x964080", VA = "0x964080")]
		set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	private WaitForSeconds timeToWaitOnFireBeforeSink
	{
		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x9643B0", Offset = "0x9643B0", VA = "0x9643B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E5")]
	private WaitForSeconds timeToWaitToStartExtinguishingFire
	{
		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x964420", Offset = "0x964420", VA = "0x964420")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x964490", Offset = "0x964490", VA = "0x964490")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x964820", Offset = "0x964820", VA = "0x964820")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x964518", Offset = "0x964518", VA = "0x964518")]
	private void SubscribeEvents()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x964880", Offset = "0x964880", VA = "0x964880")]
	private void UnsubscribeEvents()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x964C84", Offset = "0x964C84", VA = "0x964C84")]
	private void EnableDisappearColliders(HealthStateController obj)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x964CA4", Offset = "0x964CA4", VA = "0x964CA4")]
	private void OpenBridge()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x964CAC", Offset = "0x964CAC", VA = "0x964CAC")]
	private void SetOpenBridge(bool state)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x963D5C", Offset = "0x963D5C", VA = "0x963D5C")]
	private IEnumerator PlaySinkingVisualAndSoundEffects()
	{
		return null;
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x9647AC", Offset = "0x9647AC", VA = "0x9647AC")]
	private IEnumerator FindHarborCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x964D30", Offset = "0x964D30", VA = "0x964D30")]
	private void FindHarbor()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x964174", Offset = "0x964174", VA = "0x964174")]
	private void ConnectSpawnerToHarbor()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x964FF0", Offset = "0x964FF0", VA = "0x964FF0")]
	private void OnReachedNextRoutePoint()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x9652D0", Offset = "0x9652D0", VA = "0x9652D0")]
	[PunRPC]
	private void RPCRetreat()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x965490", Offset = "0x965490", VA = "0x965490")]
	public void TryRetreat()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x963C5C", Offset = "0x963C5C", VA = "0x963C5C")]
	private void DisposeBoatRoutePoints()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x965300", Offset = "0x965300", VA = "0x965300")]
	private void OccupyBoatsCollisionPoints(bool isOccupying)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x963DF8", Offset = "0x963DF8", VA = "0x963DF8")]
	private void UpdateAudio()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x963EB0", Offset = "0x963EB0", VA = "0x963EB0")]
	private void UpdateSnapToHarbor()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x96403C", Offset = "0x96403C", VA = "0x96403C")]
	private void UpdateAnimation()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x96583C", Offset = "0x96583C", VA = "0x96583C", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x9658D0", Offset = "0x9658D0", VA = "0x9658D0", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x965A70", Offset = "0x965A70", VA = "0x965A70")]
	public BoatController()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x965A80", Offset = "0x965A80", VA = "0x965A80")]
	private bool <FindHarborCoroutine>b__50_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x200021D")]
public class BoatEnemySpawner : MonoBehaviourPun, IResetable, IPunObservable
{
	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OrcsLeftCounter orcsLeftCounter;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEngine.Object _enemySpawner;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BoatBridgeAnimatorController boatBridgeAnimatorController;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private OrcCaptainOnBoatController orcCaptainOnBoatController;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isSpawningEnemies;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action OnStartedSpawningEnemies;

	[Token(Token = "0x170000EA")]
	private IEnemySpawner enemySpawner
	{
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x965D6C", Offset = "0x965D6C", VA = "0x965D6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EB")]
	public bool IsSpawningEnemies
	{
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x965DB4", Offset = "0x965DB4", VA = "0x965DB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x965128", Offset = "0x965128", VA = "0x965128")]
		set
		{
		}
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x965DBC", Offset = "0x965DBC", VA = "0x965DBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x9660B8", Offset = "0x9660B8", VA = "0x9660B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x964F3C", Offset = "0x964F3C", VA = "0x964F3C")]
	public void SetSpawnAreaChooser(ISpawnAreaChooser spawnAreaChooser)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x966308", Offset = "0x966308", VA = "0x966308")]
	private void SetBoatRelatedComponents(GameObject spawnedEnemy)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x9663B0", Offset = "0x9663B0", VA = "0x9663B0")]
	private void StopSpawningEnemies()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x966014", Offset = "0x966014", VA = "0x966014")]
	private void SpawnOrcCaptain()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x96655C", Offset = "0x96655C", VA = "0x96655C")]
	private void ReleaseEnemies()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x966764", Offset = "0x966764", VA = "0x966764", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x96676C", Offset = "0x96676C", VA = "0x96676C", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x966834", Offset = "0x966834", VA = "0x966834")]
	public BoatEnemySpawner()
	{
	}
}
[Token(Token = "0x200021E")]
public class BoatHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BoatInitializer boatInitializer;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float fireDamageMulitlier;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float iceDamageMulitlier;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float normalDamageMulitlier;

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x96683C", Offset = "0x96683C", VA = "0x96683C", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x966AD0", Offset = "0x966AD0", VA = "0x966AD0", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x966AF4", Offset = "0x966AF4", VA = "0x966AF4")]
	[PunRPC]
	private void RPCGetHit(float damage, int hitterActorNumber)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x966A78", Offset = "0x966A78", VA = "0x966A78")]
	private bool IsFireHit(AbilityType abilityType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x966A94", Offset = "0x966A94", VA = "0x966A94")]
	private bool IsIceHit(AbilityType abilityType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x966AC4", Offset = "0x966AC4", VA = "0x966AC4")]
	private bool IsNormalHit(AbilityType abilityType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x966C3C", Offset = "0x966C3C", VA = "0x966C3C")]
	public BoatHitController()
	{
	}
}
[Token(Token = "0x200021F")]
public class BoatHullTriggerController : MonoBehaviour
{
	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BodyDissapearController bodyDissapearController;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticlesFader particlesFader;

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x966C44", Offset = "0x966C44", VA = "0x966C44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x966CCC", Offset = "0x966CCC", VA = "0x966CCC")]
	public BoatHullTriggerController()
	{
	}
}
[Token(Token = "0x2000220")]
public class BoatInitializer : MonoBehaviour
{
	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float baseBoatHealth;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float unitHealth;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float healthScalingFactorPerPlayer;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEngine.Object _enemySpawner;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private OrcsLeftCounter orcsLeftCounter;

	[Token(Token = "0x170000EC")]
	private int OrcCaptainsAmount
	{
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x966CD4", Offset = "0x966CD4", VA = "0x966CD4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000ED")]
	private IEnemySpawner enemiesFromBoatSpawner
	{
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x966D1C", Offset = "0x966D1C", VA = "0x966D1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EE")]
	public float UnitHealth
	{
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x966D64", Offset = "0x966D64", VA = "0x966D64")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EF")]
	private float BoatHealth
	{
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x966D6C", Offset = "0x966D6C", VA = "0x966D6C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x966E8C", Offset = "0x966E8C", VA = "0x966E8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x96700C", Offset = "0x96700C", VA = "0x96700C")]
	public BoatInitializer()
	{
	}
}
[Token(Token = "0x2000221")]
public class BoatKilledController : MonoBehaviourPun, IEnemyGetKilled
{
	[Token(Token = "0x4000BBF")]
	private const float boatStoppingTime = 10f;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BoatController boatController;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BoatEnemySpawner boatEnemySpawner;

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x96701C", Offset = "0x96701C", VA = "0x96701C", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x967024", Offset = "0x967024", VA = "0x967024", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x9670C0", Offset = "0x9670C0", VA = "0x9670C0")]
	public BoatKilledController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000222")]
public class BoatReferences
{
	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnemyRenderers EnemyRenderers;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x9670C8", Offset = "0x9670C8", VA = "0x9670C8")]
	public BoatReferences()
	{
	}
}
[Token(Token = "0x2000223")]
public class BoatReferencesSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BodyDissapearController bodyDissapearController;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BoatReferences boatReferencesMobile;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BoatReferences boatReferencesPC;

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x9670D0", Offset = "0x9670D0", VA = "0x9670D0", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x967194", Offset = "0x967194", VA = "0x967194")]
	private void SetReferences(BoatReferences boatReferences)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x9671BC", Offset = "0x9671BC", VA = "0x9671BC")]
	public BoatReferencesSetter()
	{
	}
}
[Token(Token = "0x2000224")]
public class BoatReturnTimer : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoatController boatController;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float maxTimer;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x9671C4", Offset = "0x9671C4", VA = "0x9671C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x967218", Offset = "0x967218", VA = "0x967218", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x967220", Offset = "0x967220", VA = "0x967220")]
	public BoatReturnTimer()
	{
	}
}
[Token(Token = "0x2000225")]
public class BoatRippleEffectEnabler : MonoBehaviour
{
	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OnJoinPositionSynchronizer onJoinPositionSynchronizer;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem rippleEffect;

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x967230", Offset = "0x967230", VA = "0x967230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x967358", Offset = "0x967358", VA = "0x967358")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x96733C", Offset = "0x96733C", VA = "0x96733C")]
	private void EnableRippleEffect()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x967430", Offset = "0x967430", VA = "0x967430")]
	public BoatRippleEffectEnabler()
	{
	}
}
[Token(Token = "0x2000226")]
public class BoatRouteFinder : MonoBehaviour, IRouteFinder
{
	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoatController boatController;

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x967438", Offset = "0x967438", VA = "0x967438", Slot = "4")]
	public List<RoutePoint> GetNextRoutePoints(RoutePoint currentRoutePoint)
	{
		return null;
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x96761C", Offset = "0x96761C", VA = "0x96761C")]
	public BoatRouteFinder()
	{
	}
}
[Token(Token = "0x2000227")]
public class BoatsCollisionPoint : MonoBehaviour
{
	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isFree;

	[Token(Token = "0x170000F0")]
	public bool IsFree
	{
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x967624", Offset = "0x967624", VA = "0x967624")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x9657A8", Offset = "0x9657A8", VA = "0x9657A8")]
		set
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event Action OnPointReleased
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x964B14", Offset = "0x964B14", VA = "0x964B14")]
		add
		{
		}
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x964BCC", Offset = "0x964BCC", VA = "0x964BCC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x96762C", Offset = "0x96762C", VA = "0x96762C")]
	public BoatsCollisionPoint()
	{
	}
}
[Token(Token = "0x2000228")]
public class BoatsCollisionPointTrigger : MonoBehaviour
{
	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x96763C", Offset = "0x96763C", VA = "0x96763C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x9676E8", Offset = "0x9676E8", VA = "0x9676E8")]
	public BoatsCollisionPointTrigger()
	{
	}
}
[Token(Token = "0x2000229")]
public enum BoatType
{
	[Token(Token = "0x4000BD1")]
	BoatWooden,
	[Token(Token = "0x4000BD2")]
	BoatMetal,
	[Token(Token = "0x4000BD3")]
	BoatBoneSmall,
	[Token(Token = "0x4000BD4")]
	BoatBoneBig
}
[Token(Token = "0x200022A")]
public class Harbor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200022B")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<BoatsCollisionPoint, bool> <>9__12_0;

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x967788", Offset = "0x967788", VA = "0x967788")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x967790", Offset = "0x967790", VA = "0x967790")]
		internal bool <AllCollisionPointsAreFree>b__12_0(BoatsCollisionPoint x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoatType boatType;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RoutePoint firstRetreatRoutePoint;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RoutePoint[] boatRoutePoints;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<BoatsCollisionPoint> boatsCollisionPoints;

	[Token(Token = "0x170000F1")]
	public RoutePoint FirstRetreatRoutePoint
	{
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x9676F0", Offset = "0x9676F0", VA = "0x9676F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F2")]
	public RoutePoint[] BoatRoutePoints
	{
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x9676F8", Offset = "0x9676F8", VA = "0x9676F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F3")]
	public List<BoatsCollisionPoint> BoatsCollisionPoints
	{
		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x967700", Offset = "0x967700", VA = "0x967700")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F4")]
	public BoatType BoatType
	{
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x967708", Offset = "0x967708", VA = "0x967708")]
		get
		{
			return default(BoatType);
		}
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x965678", Offset = "0x965678", VA = "0x965678")]
	public bool AllCollisionPointsAreFree()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x967710", Offset = "0x967710", VA = "0x967710")]
	public Harbor()
	{
	}
}
[Token(Token = "0x200022C")]
public class BezierMovementProcessor : MonoBehaviourPun, IMovementProcessor, ISynchronizable
{
	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float t;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastT;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RoutePoint currentRoutePoint;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 nextPosition;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 lastPosition;

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x9677A8", Offset = "0x9677A8", VA = "0x9677A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x9677D0", Offset = "0x9677D0", VA = "0x9677D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x967868", Offset = "0x967868", VA = "0x967868", Slot = "5")]
	public Vector3 CalculatePosition(Transform currentTransform, Vector3 target, float distanceToMove, float maxDistance, RoutePoint currentStartingRoutePoint, BezierRoutePartInfo bezierRoutePartInfo, Spline spline, ref float currentDistanceOnSpline)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x967AE8", Offset = "0x967AE8", VA = "0x967AE8", Slot = "4")]
	public Quaternion CalculateRotation(Transform currentTransform, Vector3 target, float rotationSpeed, Spline spline, float currentDistanceOnSpline)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x967CEC", Offset = "0x967CEC", VA = "0x967CEC")]
	[PunRPC]
	public void RPCSynchronizeMovement(float _tFactor, int currentRoutePointIndex)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x967D94", Offset = "0x967D94", VA = "0x967D94", Slot = "6")]
	public void Synchronize(Player player)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x967F60", Offset = "0x967F60", VA = "0x967F60")]
	public BezierMovementProcessor()
	{
	}
}
[Token(Token = "0x200022D")]
public class BoatMovement : MonoBehaviourPun, IMovementProcessor, ISynchronizable
{
	[Token(Token = "0x4000BE0")]
	private const float minDistanceToTravel = 0.01f;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float t;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RoutePoint currentRoutePoint;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 nextPosition;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 lastPosition;

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x967F68", Offset = "0x967F68", VA = "0x967F68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x967F90", Offset = "0x967F90", VA = "0x967F90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x968028", Offset = "0x968028", VA = "0x968028", Slot = "5")]
	public Vector3 CalculatePosition(Transform currentTransform, Vector3 target, float distanceToMove, float maxDistance, RoutePoint currentStartingRoutePoint, BezierRoutePartInfo bezierRoutePartInfo, Spline spline, ref float currentDistanceOnSpline)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x9682E0", Offset = "0x9682E0", VA = "0x9682E0", Slot = "4")]
	public Quaternion CalculateRotation(Transform currentTransform, Vector3 target, float rotationSpeed, Spline spline, float currentDistanceOnSpline)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x968484", Offset = "0x968484", VA = "0x968484")]
	[PunRPC]
	public void RPCBoatMovementSynchronize(float _tFactor, int currentRoutePointIndex)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x96852C", Offset = "0x96852C", VA = "0x96852C", Slot = "6")]
	public void Synchronize(Player player)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x9686F8", Offset = "0x9686F8", VA = "0x9686F8")]
	public BoatMovement()
	{
	}
}
[Token(Token = "0x200022E")]
public class OrcCaptainOnBoatController : MonoBehaviourPun, IPunObservable, IResetable
{
	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject orcCaptainPrefab;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform captainPositionOnBoat;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BoatController boatController;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnJoinPositionSynchronizer onJoinPositionSynchronizer;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HealthStateController orcCaptainHealthStateController;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OrcCaptainController orcCaptainController;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject orcCaptain;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isCaptainOnBoat;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int orcCaptainViewId;

	[Token(Token = "0x170000F5")]
	public bool IsCaptainOnBoat
	{
		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x968700", Offset = "0x968700", VA = "0x968700")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x966638", Offset = "0x966638", VA = "0x966638")]
		set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	private int OrcCaptainViewID
	{
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x968764", Offset = "0x968764", VA = "0x968764")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x968744", Offset = "0x968744", VA = "0x968744")]
		set
		{
		}
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x9663B8", Offset = "0x9663B8", VA = "0x9663B8")]
	public GameObject SpawnCaptain()
	{
		return null;
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x963DD0", Offset = "0x963DD0", VA = "0x963DD0")]
	public void KillOrcCaptain()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x96876C", Offset = "0x96876C", VA = "0x96876C")]
	private void SynchronizeCaptain()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x968A00", Offset = "0x968A00", VA = "0x968A00")]
	private GameObject GetOrcCaptain(int photonViewId)
	{
		return null;
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x968A24", Offset = "0x968A24", VA = "0x968A24", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x968AAC", Offset = "0x968AAC", VA = "0x968AAC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x968C00", Offset = "0x968C00", VA = "0x968C00")]
	public OrcCaptainOnBoatController()
	{
	}
}
[Token(Token = "0x200022F")]
public class BodyAttacher : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform bone;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 targetWithArrowPosition;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float attachingSpeed;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float step;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x968C10", Offset = "0x968C10", VA = "0x968C10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x968EBC", Offset = "0x968EBC", VA = "0x968EBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x968C28", Offset = "0x968C28", VA = "0x968C28")]
	private void ProcessAttaching()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x968D2C", Offset = "0x968D2C", VA = "0x968D2C")]
	private void TryToEndAttaching()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x968EC4", Offset = "0x968EC4", VA = "0x968EC4")]
	private void SetInitialState()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x968ECC", Offset = "0x968ECC", VA = "0x968ECC")]
	public void StartAttachingArrowToBone(Transform target)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x968EF0", Offset = "0x968EF0", VA = "0x968EF0", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x968F18", Offset = "0x968F18", VA = "0x968F18")]
	public BodyAttacher()
	{
	}
}
[Token(Token = "0x2000230")]
public class CartAssailant : MonoBehaviour, IPunObservable, IResetable
{
	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RouteController routeController;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AttackController attackController;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private OnRouteFinishedEnemyDestroyer onRouteFinishedEnemyDestroyer;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyTimeoutController timeoutController;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CartAttackTrigger cartAttackTrigger;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isCartAssaliantInTrigger;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isAttacking;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action OnFinishedAssault;

	[Token(Token = "0x170000F7")]
	public bool IsAttacking
	{
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x968F28", Offset = "0x968F28", VA = "0x968F28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x968F30", Offset = "0x968F30", VA = "0x968F30")]
		set
		{
		}
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x96902C", Offset = "0x96902C", VA = "0x96902C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x969220", Offset = "0x969220", VA = "0x969220")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x969318", Offset = "0x969318", VA = "0x969318")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x969504", Offset = "0x969504", VA = "0x969504")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x9695F8", Offset = "0x9695F8", VA = "0x9695F8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x9691D0", Offset = "0x9691D0", VA = "0x9691D0")]
	private void FinishAssault()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x969434", Offset = "0x969434", VA = "0x969434")]
	private void PrepareForAttackingCart()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x9696E4", Offset = "0x9696E4", VA = "0x9696E4")]
	public void AttackCart()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x9697D4", Offset = "0x9697D4", VA = "0x9697D4", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x9697FC", Offset = "0x9697FC", VA = "0x9697FC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x96991C", Offset = "0x96991C", VA = "0x96991C")]
	public CartAssailant()
	{
	}
}
[Token(Token = "0x2000231")]
public class DragonAnimatorController : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool deadAnimPlayed;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x969924", Offset = "0x969924", VA = "0x969924")]
	public void StartDeathAnimation()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x969994", Offset = "0x969994", VA = "0x969994", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x96999C", Offset = "0x96999C", VA = "0x96999C")]
	public DragonAnimatorController()
	{
	}
}
[Token(Token = "0x2000232")]
public class DragonAttackCollider : MonoBehaviour
{
	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float attackDuration;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<DragonAttackTargetInfo> attackTargetsInfo;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds <WaitAfterAttack>k__BackingField;

	[Token(Token = "0x170000F8")]
	public WaitForSeconds WaitAfterAttack
	{
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x9699A4", Offset = "0x9699A4", VA = "0x9699A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x9699AC", Offset = "0x9699AC", VA = "0x9699AC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x9699B4", Offset = "0x9699B4", VA = "0x9699B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x969B2C", Offset = "0x969B2C", VA = "0x969B2C")]
	public DragonAttackCollider()
	{
	}
}
[Serializable]
[Token(Token = "0x2000233")]
public class DragonAttackTargetInfo
{
	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float damageDelay;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TeleportCollider> teleportColliders;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSeconds <waitForDamage>k__BackingField;

	[Token(Token = "0x170000F9")]
	public WaitForSeconds waitForDamage
	{
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x969B3C", Offset = "0x969B3C", VA = "0x969B3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x969B44", Offset = "0x969B44", VA = "0x969B44")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x969AB4", Offset = "0x969AB4", VA = "0x969AB4")]
	public void InitializeWait()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x969B4C", Offset = "0x969B4C", VA = "0x969B4C")]
	public DragonAttackTargetInfo()
	{
	}
}
[Token(Token = "0x2000234")]
public class DragonAudio : MonoBehaviour
{
	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource attackSource;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] attackClips;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource deathSource;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] deathClips;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource fieryBreath;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip[] fieryBreathClips;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource runSource;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip[] runclip;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource roarSource;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip[] roarClips;

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x969B54", Offset = "0x969B54", VA = "0x969B54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x969BF4", Offset = "0x969BF4", VA = "0x969BF4")]
	public void PlayDragonAttackSound()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x969C18", Offset = "0x969C18", VA = "0x969C18")]
	public void PlayDragonDeathSound()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x969B5C", Offset = "0x969B5C", VA = "0x969B5C")]
	public void SetMovementSound(bool value)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x969C24", Offset = "0x969C24", VA = "0x969C24")]
	public void StopAttackSound()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x969C64", Offset = "0x969C64", VA = "0x969C64")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x969D0C", Offset = "0x969D0C", VA = "0x969D0C")]
	public DragonAudio()
	{
	}
}
[Token(Token = "0x2000235")]
public class DragonCastleAttackCollider : MonoBehaviour
{
	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GateController attackedCastleController;

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x969D14", Offset = "0x969D14", VA = "0x969D14")]
	public DragonCastleAttackCollider()
	{
	}
}
[Token(Token = "0x2000236")]
public class DragonHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x969D1C", Offset = "0x969D1C", VA = "0x969D1C", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x969D24", Offset = "0x969D24", VA = "0x969D24", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x969F34", Offset = "0x969F34", VA = "0x969F34")]
	[PunRPC]
	public void RPCGetHitDragon(float damage, int clientID)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x96A0B0", Offset = "0x96A0B0", VA = "0x96A0B0")]
	public DragonHitController()
	{
	}
}
[Token(Token = "0x2000237")]
public class RoarTag : MonoBehaviour
{
	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x96A0B8", Offset = "0x96A0B8", VA = "0x96A0B8")]
	public RoarTag()
	{
	}
}
[Token(Token = "0x2000238")]
public class EnemyProjectileDestroyer : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float timeToDestroy;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float currentLifeTime;

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x96A0C0", Offset = "0x96A0C0", VA = "0x96A0C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x96A180", Offset = "0x96A180", VA = "0x96A180", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x96A188", Offset = "0x96A188", VA = "0x96A188")]
	public EnemyProjectileDestroyer()
	{
	}
}
[Token(Token = "0x2000239")]
public class FlyingEnemyHitGroundSoundController : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource hitGroundAudioSource;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool playedHitGroundSound;

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x96A198", Offset = "0x96A198", VA = "0x96A198")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x96A1D4", Offset = "0x96A1D4", VA = "0x96A1D4")]
	private bool IsTriggeredHitCollider(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x96A270", Offset = "0x96A270", VA = "0x96A270", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x96A278", Offset = "0x96A278", VA = "0x96A278")]
	public FlyingEnemyHitGroundSoundController()
	{
	}
}
[Token(Token = "0x200023A")]
public class FrozenEnemyBreakController : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEngine.Object objectEnemyBreakable;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IFrozenEnemyBreakable frozenEnemyBreakable;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 breakHitDirection;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isBroken;

	[Token(Token = "0x170000FA")]
	public bool IsBroken
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x96A280", Offset = "0x96A280", VA = "0x96A280")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x96A288", Offset = "0x96A288", VA = "0x96A288")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x96A380", Offset = "0x96A380", VA = "0x96A380")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x96A3E8", Offset = "0x96A3E8", VA = "0x96A3E8")]
	public void Break(Vector3 breakHitDirection)
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x96A2BC", Offset = "0x96A2BC", VA = "0x96A2BC")]
	private void Break()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x96A418", Offset = "0x96A418", VA = "0x96A418", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x96A420", Offset = "0x96A420", VA = "0x96A420", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x96A58C", Offset = "0x96A58C", VA = "0x96A58C")]
	public FrozenEnemyBreakController()
	{
	}
}
[Token(Token = "0x200023B")]
public class FrozenEnemyBreakOnCollisionController : MonoBehaviour
{
	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ForceDirectionExploderController frontCollider;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ForceDirectionExploderController backCollider;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x96A594", Offset = "0x96A594", VA = "0x96A594")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x96A674", Offset = "0x96A674", VA = "0x96A674")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x96A754", Offset = "0x96A754", VA = "0x96A754")]
	public void OnFrontCollision()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x96A7BC", Offset = "0x96A7BC", VA = "0x96A7BC")]
	public void OnBackCollision()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x96A818", Offset = "0x96A818", VA = "0x96A818")]
	public void SetReferences(ForceDirectionExploderController _frontCollider, ForceDirectionExploderController _backCollider)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x96A848", Offset = "0x96A848", VA = "0x96A848")]
	public FrozenEnemyBreakOnCollisionController()
	{
	}
}
[Token(Token = "0x200023C")]
public class IceMaterialAnimator : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000C1D")]
	private const string shaderIcePropertyName = "_IceAmount";

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<(Renderer, Material)> iceRendererData;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float creatingIceDuration;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isAnimating;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float creatingIceActualTime;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x96A850", Offset = "0x96A850", VA = "0x96A850")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x96A8B8", Offset = "0x96A8B8", VA = "0x96A8B8")]
	public void AnimateIce(List<(Renderer, Material)> iceRendererData)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x96A984", Offset = "0x96A984", VA = "0x96A984")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x96AAA4", Offset = "0x96AAA4", VA = "0x96AAA4", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x96AAB0", Offset = "0x96AAB0", VA = "0x96AAB0")]
	public IceMaterialAnimator()
	{
	}
}
[Token(Token = "0x200023D")]
public interface IFreezable
{
	[Token(Token = "0x6000AB5")]
	void Freeze();
}
[Token(Token = "0x200023E")]
public interface IFrozenEnemyBreakable
{
	[Token(Token = "0x6000AB6")]
	void Break(Vector3 breakHitDirection);
}
[Token(Token = "0x200023F")]
public class ArrowHitInfo : HitInfoAbstract
{
	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 <HitDirection>k__BackingField;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private KillType <KillType>k__BackingField;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Player <Hitter>k__BackingField;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AbilityType <AbilityType>k__BackingField;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float <Damage>k__BackingField;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool <IsHeadShot>k__BackingField;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool <IsWindowShot>k__BackingField;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool <IsCriticalHit>k__BackingField;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float <Distance>k__BackingField;

	[Token(Token = "0x170000FB")]
	public Vector3 HitDirection
	{
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x96AAC0", Offset = "0x96AAC0", VA = "0x96AAC0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x96AACC", Offset = "0x96AACC", VA = "0x96AACC")]
		set
		{
		}
	}

	[Token(Token = "0x170000FC")]
	public override KillType KillType
	{
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x96AAD8", Offset = "0x96AAD8", VA = "0x96AAD8", Slot = "4")]
		get
		{
			return default(KillType);
		}
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x96AAE0", Offset = "0x96AAE0", VA = "0x96AAE0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170000FD")]
	public override Player Hitter
	{
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x96AAE8", Offset = "0x96AAE8", VA = "0x96AAE8", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x96AAF0", Offset = "0x96AAF0", VA = "0x96AAF0", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x170000FE")]
	public override AbilityType AbilityType
	{
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x96AAF8", Offset = "0x96AAF8", VA = "0x96AAF8", Slot = "8")]
		get
		{
			return default(AbilityType);
		}
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x96AB00", Offset = "0x96AB00", VA = "0x96AB00", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public override float Damage
	{
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x96AB08", Offset = "0x96AB08", VA = "0x96AB08", Slot = "10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x96AB10", Offset = "0x96AB10", VA = "0x96AB10", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public override bool IsHeadShot
	{
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x96AB18", Offset = "0x96AB18", VA = "0x96AB18", Slot = "12")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x96AB20", Offset = "0x96AB20", VA = "0x96AB20", Slot = "13")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public override bool IsWindowShot
	{
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x96AB2C", Offset = "0x96AB2C", VA = "0x96AB2C", Slot = "14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x96AB34", Offset = "0x96AB34", VA = "0x96AB34", Slot = "15")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public override bool IsCriticalHit
	{
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x96AB40", Offset = "0x96AB40", VA = "0x96AB40", Slot = "16")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x96AB48", Offset = "0x96AB48", VA = "0x96AB48", Slot = "17")]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public override float Distance
	{
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x96AB54", Offset = "0x96AB54", VA = "0x96AB54", Slot = "18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x96AB5C", Offset = "0x96AB5C", VA = "0x96AB5C", Slot = "19")]
		set
		{
		}
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x96AB64", Offset = "0x96AB64", VA = "0x96AB64")]
	public ArrowHitInfo()
	{
	}
}
[Token(Token = "0x2000240")]
public class EnemyFreezeOnHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private KillType[] hitNames;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x96AB6C", Offset = "0x96AB6C", VA = "0x96AB6C", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x96ABF4", Offset = "0x96ABF4", VA = "0x96ABF4", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x96AD70", Offset = "0x96AD70", VA = "0x96AD70")]
	[PunRPC]
	private void RPCGetHitFreeze(int hitterActorNumber)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x96AE84", Offset = "0x96AE84", VA = "0x96AE84")]
	public EnemyFreezeOnHitController()
	{
	}
}
[Token(Token = "0x2000241")]
public class EnemyFreezeKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x96AE8C", Offset = "0x96AE8C", VA = "0x96AE8C", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x96AEAC", Offset = "0x96AEAC", VA = "0x96AEAC", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x96AECC", Offset = "0x96AECC", VA = "0x96AECC")]
	public EnemyFreezeKilledController()
	{
	}
}
[Token(Token = "0x2000242")]
public class FreezingArrowKillInfo : KillInfo
{
	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float <Damage>k__BackingField;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 <HitDirection>k__BackingField;

	[Token(Token = "0x17000104")]
	public float Damage
	{
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x96AED4", Offset = "0x96AED4", VA = "0x96AED4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x96AEDC", Offset = "0x96AEDC", VA = "0x96AEDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public Vector3 HitDirection
	{
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x96AEE4", Offset = "0x96AEE4", VA = "0x96AEE4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x96AEF0", Offset = "0x96AEF0", VA = "0x96AEF0")]
		set
		{
		}
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x96AEFC", Offset = "0x96AEFC", VA = "0x96AEFC")]
	public FreezingArrowKillInfo()
	{
	}
}
[Token(Token = "0x2000243")]
public class TrollRockSoundController : MonoBehaviour
{
	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip flyAudioClip;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip explosionAudioClip;

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x96AF04", Offset = "0x96AF04", VA = "0x96AF04")]
	public void PlayFlyingSound()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x96AF38", Offset = "0x96AF38", VA = "0x96AF38")]
	public void PlayExplosionSound()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x96AF6C", Offset = "0x96AF6C", VA = "0x96AF6C")]
	public TrollRockSoundController()
	{
	}
}
[Token(Token = "0x2000244")]
public interface IAttackPlayer
{
	[Token(Token = "0x6000AD9")]
	void PlayAttack();
}
[Token(Token = "0x2000245")]
public class KamikazeAttackPlayer : MonoBehaviour, IAttackPlayer
{
	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ExplosiveBarrelController explosiveBarrelController;

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x96AF74", Offset = "0x96AF74", VA = "0x96AF74", Slot = "4")]
	public void PlayAttack()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x96AFF0", Offset = "0x96AFF0", VA = "0x96AFF0")]
	public void SetReferences(ExplosiveBarrelController explosiveBarrelController)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x96AFF8", Offset = "0x96AFF8", VA = "0x96AFF8")]
	public KamikazeAttackPlayer()
	{
	}
}
[Token(Token = "0x2000246")]
public class AnimationsPicker : MonoBehaviour
{
	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float chanceToPlayProvokeAnim;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OrcAnimatorController animatorController;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AttackController attackController;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OrcCaptainController orcCaptainController;

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x96B000", Offset = "0x96B000", VA = "0x96B000")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x96B058", Offset = "0x96B058", VA = "0x96B058")]
	public void DrawCaptainAnim()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x96B2B4", Offset = "0x96B2B4", VA = "0x96B2B4")]
	public void DrawAttackAnim()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x96B2DC", Offset = "0x96B2DC", VA = "0x96B2DC")]
	public void OnCelebrationFinishedAnimationEvent()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x96B2F4", Offset = "0x96B2F4", VA = "0x96B2F4")]
	public AnimationsPicker()
	{
	}
}
[Token(Token = "0x2000247")]
public class EnemyBowAdjuster : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform handWithArrowReference;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion initialHandWithArrowRotation;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isAdjustingBow;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool areInitialValuesSet;

	[Token(Token = "0x17000106")]
	public bool IsAdjustingBow
	{
		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x96B304", Offset = "0x96B304", VA = "0x96B304")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x96B30C", Offset = "0x96B30C", VA = "0x96B30C")]
		set
		{
		}
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x96B37C", Offset = "0x96B37C", VA = "0x96B37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x96B3B0", Offset = "0x96B3B0", VA = "0x96B3B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x96B344", Offset = "0x96B344", VA = "0x96B344")]
	private void SetInitialRotation()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x96B508", Offset = "0x96B508", VA = "0x96B508", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x96B50C", Offset = "0x96B50C", VA = "0x96B50C", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x96B5E0", Offset = "0x96B5E0", VA = "0x96B5E0")]
	public EnemyBowAdjuster()
	{
	}
}
[Token(Token = "0x2000248")]
public class OrcArcherController : MonoBehaviour, IInRoomCallbacks
{
	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RouteController routeController;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PlayerColliderDetector playerColliderDetector;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OnArrowShootAnimationEventHandler onArrowShootAnimationEventHandler;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnemyArrowShootController enemyArrowShootController;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x96B5E8", Offset = "0x96B5E8", VA = "0x96B5E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x96B8E4", Offset = "0x96B8E4", VA = "0x96B8E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x96BBE0", Offset = "0x96BBE0", VA = "0x96BBE0")]
	private void TryStartShooting(WenklyStudio.ElvenAssassin.PlayerController playerController)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x96BBFC", Offset = "0x96BBFC", VA = "0x96BBFC")]
	private void StartTrackingPathAgain()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x96BCF0", Offset = "0x96BCF0", VA = "0x96BCF0")]
	private void EndShooting(HealthStateController healthStateController)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x96BCF4", Offset = "0x96BCF4", VA = "0x96BCF4")]
	private void EndShooting()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x96BD78", Offset = "0x96BD78", VA = "0x96BD78")]
	private void StartMove()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x96BE5C", Offset = "0x96BE5C", VA = "0x96BE5C")]
	private void TryToEnableOrcMovement()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x96BE9C", Offset = "0x96BE9C", VA = "0x96BE9C")]
	public void SetReferences(EnemyArrowShootController _enemyArrowShootController, OnArrowShootAnimationEventHandler _onArrowShootAnimationEventHandler)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x96BECC", Offset = "0x96BECC", VA = "0x96BECC", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x96BF70", Offset = "0x96BF70", VA = "0x96BF70", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x96BF74", Offset = "0x96BF74", VA = "0x96BF74", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x96BF78", Offset = "0x96BF78", VA = "0x96BF78", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x96BF7C", Offset = "0x96BF7C", VA = "0x96BF7C", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x96BF80", Offset = "0x96BF80", VA = "0x96BF80")]
	public OrcArcherController()
	{
	}
}
[Token(Token = "0x2000249")]
public class WeaponIk : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform aimTransform;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform bone;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OnArrowShootAnimationEventHandler arrowShootAnimationEventHandler;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyArrowShootController enemyArrowShootController;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float animationBlend;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool shouldAimAtTarget;

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x96BF88", Offset = "0x96BF88", VA = "0x96BF88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x96C1A0", Offset = "0x96C1A0", VA = "0x96C1A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x96C3B8", Offset = "0x96C3B8", VA = "0x96C3B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x96C510", Offset = "0x96C510", VA = "0x96C510")]
	private void AitmAtTarget(Transform bone, Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x96C408", Offset = "0x96C408", VA = "0x96C408")]
	private Vector3 GetTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x96C638", Offset = "0x96C638", VA = "0x96C638")]
	private void ApplyAimAtTaget()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x96C644", Offset = "0x96C644", VA = "0x96C644")]
	private void RemoveAimAtTaget(Player player)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x96C6A4", Offset = "0x96C6A4", VA = "0x96C6A4")]
	private void RemoveAimAtTaget()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x96C6AC", Offset = "0x96C6AC", VA = "0x96C6AC", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x96C714", Offset = "0x96C714", VA = "0x96C714")]
	public WeaponIk()
	{
	}
}
[Token(Token = "0x200024A")]
public class BodyFreezeEffect : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<BodyVisualEffectRendererData> renderersData;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fadingDuration;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float maxEffectAmount;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float fadingOutMultiplier;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystem particleSystem;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isFadingInMaterial;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isFadingOutMaterial;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool isRevertingMaterial;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fadingActualTime;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float shaderValueToSet;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string shaderPropertyName;

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x96C71C", Offset = "0x96C71C", VA = "0x96C71C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x96C890", Offset = "0x96C890", VA = "0x96C890")]
	public void EnableVisualEffect()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x96CC50", Offset = "0x96CC50", VA = "0x96CC50")]
	public void DisableVisualEffect()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x96C7A0", Offset = "0x96C7A0", VA = "0x96C7A0")]
	private void IncreaseVisualEffect()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x96C7DC", Offset = "0x96C7DC", VA = "0x96C7DC")]
	private void DecreaseVisualEffect()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x96CDB4", Offset = "0x96CDB4", VA = "0x96CDB4")]
	private void FadeVisualsDown()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x96CC84", Offset = "0x96CC84", VA = "0x96CC84")]
	private void SetShaderValueForAllRenderersData()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x96CDF8", Offset = "0x96CDF8", VA = "0x96CDF8")]
	private void SetShaderValueForAllRenderers(BodyVisualEffectRendererData rendererData)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x96CF30", Offset = "0x96CF30", VA = "0x96CF30")]
	private void SetShaderValueForAllMaterials(Renderer renderer)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x96CA0C", Offset = "0x96CA0C", VA = "0x96CA0C")]
	private void SetMaterialsForAllRenderers(List<Renderer> renderers, List<Material> materials)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x96CFAC", Offset = "0x96CFAC", VA = "0x96CFAC")]
	private void SetMaterials(Renderer renderer, List<Material> materials)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x96D1D8", Offset = "0x96D1D8", VA = "0x96D1D8")]
	private void RevertMaterials()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x96C864", Offset = "0x96C864", VA = "0x96C864")]
	private void SetInitialState()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x96D328", Offset = "0x96D328", VA = "0x96D328", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x96D354", Offset = "0x96D354", VA = "0x96D354")]
	public BodyFreezeEffect()
	{
	}
}
[Token(Token = "0x200024B")]
public class OnArrowShootAnimationEventHandler : MonoBehaviour
{
	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnArrowShoot;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnShootingFinished;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnArrowAttachToString;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnDrawArrow;

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x96D3C4", Offset = "0x96D3C4", VA = "0x96D3C4")]
	public void DrawArrow()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x96D3E0", Offset = "0x96D3E0", VA = "0x96D3E0")]
	public void AimToTarget()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x96D3FC", Offset = "0x96D3FC", VA = "0x96D3FC")]
	public void ShootArrow()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x96D418", Offset = "0x96D418", VA = "0x96D418")]
	public void FinishShooting()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x96D434", Offset = "0x96D434", VA = "0x96D434")]
	public OnArrowShootAnimationEventHandler()
	{
	}
}
[Token(Token = "0x200024C")]
public class OrcAnimatorController : MonoBehaviourPun, IResetable, IPunObservable, IInRoomCallbacks
{
	[Token(Token = "0x200024D")]
	private sealed class <GetHitAnimationRoutine>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OrcAnimatorController <>4__this;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0x96EA5C", Offset = "0x96EA5C", VA = "0x96EA5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x96EA64", Offset = "0x96EA64", VA = "0x96EA64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x96DCEC", Offset = "0x96DCEC", VA = "0x96DCEC")]
		[DebuggerHidden]
		public <GetHitAnimationRoutine>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x96E924", Offset = "0x96E924", VA = "0x96E924", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x96E928", Offset = "0x96E928", VA = "0x96E928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C5E")]
	private const float minCelebratingSpeed = 0.8f;

	[Token(Token = "0x4000C5F")]
	private const float maxCelebratingSpeed = 1.2f;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int hit;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int attack1;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int attack2;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int attack3;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int running;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly int walking;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int throwing;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly int gettingWeapon;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly int dead;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int dieOnBack;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly int notHit;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private readonly int idling;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly int givingOrder;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly int taunt;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly int chestHitting;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private readonly int shootArrow;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly int celebratingSpeedAnimatorHash;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly int[] celebratingAnimatorHashes;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float timeOfReturningFromHitAnimation;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float defaultTimeOfReturningFromHitAnimation;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AttackController attackController;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private OrcThrowingAxeController orcThrowingAxeController;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Animator animator;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private DeathAnimAdjuster deathAnimAdjuster;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject swordInHand;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject swordOnBack;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isShooting;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool defaultIsHit;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool defaultIsRunning;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool defaultIsWalking;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool defaultIsThrowing;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool defaultIsGettingWeapon;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	private bool defaultIsDead;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	private bool defaultShouldDieOnBack;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool defaultIsChangingAnimationLocked;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool deafultDeathAnimAdjusterEnabled;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool isSyncingFromPhoton;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	private bool isAnimatorActiveForParameterSync;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool isChangingAnimationLocked;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Action OnDeathAnimationPlayed;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isHit;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isRunning;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool isWalking;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	private bool isThrowing;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool isGettingWeapon;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	private bool isDead;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
	private bool shouldDieOnBack;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC7")]
	private bool isIdleing;

	[Token(Token = "0x17000107")]
	private int[] provokeAnims
	{
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x96D43C", Offset = "0x96D43C", VA = "0x96D43C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000108")]
	private int[] attackAnims
	{
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x96D4C4", Offset = "0x96D4C4", VA = "0x96D4C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000109")]
	public bool IsHit
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x96D54C", Offset = "0x96D54C", VA = "0x96D54C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x96D554", Offset = "0x96D554", VA = "0x96D554")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public bool IsRunning
	{
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x96D5EC", Offset = "0x96D5EC", VA = "0x96D5EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x96D5F4", Offset = "0x96D5F4", VA = "0x96D5F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public bool IsWalking
	{
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x96D678", Offset = "0x96D678", VA = "0x96D678")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x96D680", Offset = "0x96D680", VA = "0x96D680")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public bool IsThrowing
	{
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x96D704", Offset = "0x96D704", VA = "0x96D704")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x96D70C", Offset = "0x96D70C", VA = "0x96D70C")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public bool IsGettingWeapon
	{
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x96D790", Offset = "0x96D790", VA = "0x96D790")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x96D798", Offset = "0x96D798", VA = "0x96D798")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public bool IsDead
	{
		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x96D81C", Offset = "0x96D81C", VA = "0x96D81C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x96D824", Offset = "0x96D824", VA = "0x96D824")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public bool ShouldDieOnBack
	{
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x96D8DC", Offset = "0x96D8DC", VA = "0x96D8DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x96D8E4", Offset = "0x96D8E4", VA = "0x96D8E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public bool IsIdleing
	{
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x96D968", Offset = "0x96D968", VA = "0x96D968")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x96D970", Offset = "0x96D970", VA = "0x96D970")]
		set
		{
		}
	}

	[Token(Token = "0x17000111")]
	private float CelebratingSpeed
	{
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x96D9F4", Offset = "0x96D9F4", VA = "0x96D9F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x96DA18", Offset = "0x96DA18", VA = "0x96DA18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x96DA94", Offset = "0x96DA94", VA = "0x96DA94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x96DAC0", Offset = "0x96DAC0", VA = "0x96DAC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x96DB18", Offset = "0x96DB18", VA = "0x96DB18")]
	public float GetTimeOfNotHitAnimation()
	{
		return default(float);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x96DB20", Offset = "0x96DB20", VA = "0x96DB20")]
	public void PlayerShootArrowAnimation()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x96DC08", Offset = "0x96DC08", VA = "0x96DC08")]
	[PunRPC]
	private void RPCShootArrow()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x96DC2C", Offset = "0x96DC2C", VA = "0x96DC2C")]
	public void PlayGetHitAnimation()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x96DC78", Offset = "0x96DC78", VA = "0x96DC78")]
	private IEnumerator GetHitAnimationRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x96DD14", Offset = "0x96DD14", VA = "0x96DD14")]
	public void PlayNotHitAnimation()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x96DD4C", Offset = "0x96DD4C", VA = "0x96DD4C")]
	public void PlayThrowingAxeAnimation()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x96DD88", Offset = "0x96DD88", VA = "0x96DD88")]
	public void PlayGettingWeaponAnimation()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x96BDB8", Offset = "0x96BDB8", VA = "0x96BDB8")]
	public void PlayRunAnimation()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x96BE10", Offset = "0x96BE10", VA = "0x96BE10")]
	public void PlayWalkAnimation()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x96DDB8", Offset = "0x96DDB8", VA = "0x96DDB8")]
	public void PlayDeathAnimation()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x96DE30", Offset = "0x96DE30", VA = "0x96DE30")]
	public void PlayIdleOnBoatAnimation()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x96DE94", Offset = "0x96DE94", VA = "0x96DE94")]
	public float GetCurrentAnimationLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x96DEF0", Offset = "0x96DEF0", VA = "0x96DEF0")]
	public void SetDyingOnBackAnimation(bool shouldDieOnBack)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x96B10C", Offset = "0x96B10C", VA = "0x96B10C")]
	public void PickCaptainAnim(float chanceToPlayProvokeAnim)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x96DF04", Offset = "0x96DF04", VA = "0x96DF04")]
	public void DrawAttackAnim()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x96341C", Offset = "0x96341C", VA = "0x96341C")]
	public void PlayRandomCelebrateAnimation()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x96DFA8", Offset = "0x96DFA8", VA = "0x96DFA8")]
	public void ClearDeathAnimationState()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x96DFC4", Offset = "0x96DFC4", VA = "0x96DFC4")]
	public void SetReferences(Animator _animator, DeathAnimAdjuster _deathAnimAdjuster, GameObject swordInHand, GameObject swordOnBack)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x96E024", Offset = "0x96E024", VA = "0x96E024")]
	[PunRPC]
	private void SetTriggerRPC(int id)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x96E040", Offset = "0x96E040", VA = "0x96E040", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x96E0D4", Offset = "0x96E0D4", VA = "0x96E0D4", Slot = "10")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x96E14C", Offset = "0x96E14C", VA = "0x96E14C", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x96E514", Offset = "0x96E514", VA = "0x96E514", Slot = "6")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x96E518", Offset = "0x96E518", VA = "0x96E518", Slot = "7")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x96E51C", Offset = "0x96E51C", VA = "0x96E51C", Slot = "8")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x96E520", Offset = "0x96E520", VA = "0x96E520", Slot = "9")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x96E524", Offset = "0x96E524", VA = "0x96E524")]
	public OrcAnimatorController()
	{
	}
}
[Token(Token = "0x200024E")]
public class OrcArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private OrcSoundController orcSoundController;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x96EA6C", Offset = "0x96EA6C", VA = "0x96EA6C", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x96EA98", Offset = "0x96EA98", VA = "0x96EA98", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x96ED28", Offset = "0x96ED28", VA = "0x96ED28")]
	[PunRPC]
	private void RPCGetHitArrow(float damage, Player hitter, Vector3 hitDirection)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x96EF6C", Offset = "0x96EF6C", VA = "0x96EF6C")]
	public OrcArrowHitController()
	{
	}
}
[Token(Token = "0x200024F")]
public class OrcArrowKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x96EF74", Offset = "0x96EF74", VA = "0x96EF74", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x96EF94", Offset = "0x96EF94", VA = "0x96EF94", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x96F050", Offset = "0x96F050", VA = "0x96F050")]
	public OrcArrowKilledController()
	{
	}
}
[Token(Token = "0x2000250")]
public class OrcAxeAnimationEvents : MonoBehaviour
{
	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OrcThrowingAxeController orcThrowingAxeController;

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x96F058", Offset = "0x96F058", VA = "0x96F058")]
	private void StartAxeFly()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x96F074", Offset = "0x96F074", VA = "0x96F074")]
	private void ActivateSwordFromBackAfterThrowingAxe()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x96F090", Offset = "0x96F090", VA = "0x96F090")]
	public OrcAxeAnimationEvents()
	{
	}
}
[Token(Token = "0x2000251")]
public class OrcAxemanBodyDisappearingChecker : MonoBehaviour
{
	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AxeBeingUsedController axeBeingUsedController;

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x96F098", Offset = "0x96F098", VA = "0x96F098", Slot = "4")]
	public bool IsBodyDisappearingFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x96F10C", Offset = "0x96F10C", VA = "0x96F10C")]
	private bool IsAxeFree()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x96F190", Offset = "0x96F190", VA = "0x96F190")]
	public OrcAxemanBodyDisappearingChecker()
	{
	}
}
[Token(Token = "0x2000252")]
public class OrcBodyPartCollidersDisabler : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000253")]
	private sealed class <>c
	{
		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Collider> <>9__4_0;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Collider> <>9__5_0;

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x96F708", Offset = "0x96F708", VA = "0x96F708")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x96F710", Offset = "0x96F710", VA = "0x96F710")]
		internal void <EnableColliders>b__4_0(Collider item)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x96F72C", Offset = "0x96F72C", VA = "0x96F72C")]
		internal void <DisableColliders>b__5_0(Collider item)
		{
		}
	}

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Collider> bodyPartColliders;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int numberOfArrowsInTrigger;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool collidersEnabled;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ArrowFlyController arrowToGetRidOf;

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x96F198", Offset = "0x96F198", VA = "0x96F198")]
	private void EnableColliders()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x96F2A8", Offset = "0x96F2A8", VA = "0x96F2A8")]
	private void DisableColliders()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x96F3B4", Offset = "0x96F3B4", VA = "0x96F3B4")]
	private void GetRidFromTrigger()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x96F3CC", Offset = "0x96F3CC", VA = "0x96F3CC")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x96F530", Offset = "0x96F530", VA = "0x96F530")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x96F690", Offset = "0x96F690", VA = "0x96F690")]
	public OrcBodyPartCollidersDisabler()
	{
	}
}
[Token(Token = "0x2000254")]
public class OrcBowAnimatorController : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int shoot;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int charge;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isShooting;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isCharging;

	[Token(Token = "0x17000114")]
	private bool IsShooting
	{
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x96F748", Offset = "0x96F748", VA = "0x96F748")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x96F750", Offset = "0x96F750", VA = "0x96F750")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	private bool IsCharging
	{
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x96F790", Offset = "0x96F790", VA = "0x96F790")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x96F798", Offset = "0x96F798", VA = "0x96F798")]
		set
		{
		}
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x96F7D8", Offset = "0x96F7D8", VA = "0x96F7D8")]
	public void PlayChargeAnimation()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x96F7F8", Offset = "0x96F7F8", VA = "0x96F7F8")]
	public void PlayShootAnimation()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x96F818", Offset = "0x96F818", VA = "0x96F818", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x96F838", Offset = "0x96F838", VA = "0x96F838", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x96F95C", Offset = "0x96F95C", VA = "0x96F95C")]
	public OrcBowAnimatorController()
	{
	}
}
[Token(Token = "0x2000255")]
public class OrcCaptainController : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyMovementController movementController;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OrcAnimatorController orcAnimator;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x96F9E0", Offset = "0x96F9E0", VA = "0x96F9E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x968928", Offset = "0x968928", VA = "0x968928")]
	public void KillOrcCaptain()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x968708", Offset = "0x968708", VA = "0x968708")]
	public void LeaveBoat(RoutePoint routePoint)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x96FA64", Offset = "0x96FA64", VA = "0x96FA64", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x96FA70", Offset = "0x96FA70", VA = "0x96FA70")]
	public OrcCaptainController()
	{
	}
}
[Token(Token = "0x2000256")]
public class OrcCatapultRockHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x96FA78", Offset = "0x96FA78", VA = "0x96FA78", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x96FAA4", Offset = "0x96FAA4", VA = "0x96FAA4", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x96FC20", Offset = "0x96FC20", VA = "0x96FC20")]
	[PunRPC]
	private void RPCGetHitCatapult(int hitterActorNumber)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x96FDAC", Offset = "0x96FDAC", VA = "0x96FDAC")]
	public OrcCatapultRockHitController()
	{
	}
}
[Token(Token = "0x2000257")]
public class OrcCatapultRockKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x96FDB4", Offset = "0x96FDB4", VA = "0x96FDB4", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x96FDD4", Offset = "0x96FDD4", VA = "0x96FDD4", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x96FE90", Offset = "0x96FE90", VA = "0x96FE90")]
	public OrcCatapultRockKilledController()
	{
	}
}
[Token(Token = "0x2000258")]
public class OrcCelebrateSoundPlayer : MonoBehaviour
{
	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int CelebrateSoundFrequency;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject orcCelebrateSoundPrefab;

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x96FE98", Offset = "0x96FE98", VA = "0x96FE98")]
	private void OnCelebrateGruntAnimationEvent()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x96FFE4", Offset = "0x96FFE4", VA = "0x96FFE4")]
	public OrcCelebrateSoundPlayer()
	{
	}
}
[Token(Token = "0x2000259")]
public class OrcFreezingArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private OrcArrowHitController arrowHitController;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SlowingController slowingController;

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x96FFF4", Offset = "0x96FFF4", VA = "0x96FFF4", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x970020", Offset = "0x970020", VA = "0x970020", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x970474", Offset = "0x970474", VA = "0x970474")]
	[PunRPC]
	public void RPCGetHitOrcFreezingArrow(float damage, Vector3 hitDirection, int hitterActorNumber)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x9705D8", Offset = "0x9705D8", VA = "0x9705D8")]
	public OrcFreezingArrowHitController()
	{
	}
}
[Token(Token = "0x200025A")]
public class OrcFreezingArrowKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x9705E0", Offset = "0x9705E0", VA = "0x9705E0", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x970600", Offset = "0x970600", VA = "0x970600", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x9706DC", Offset = "0x9706DC", VA = "0x9706DC")]
	public OrcFreezingArrowKilledController()
	{
	}
}
[Token(Token = "0x200025B")]
public class OrcOnBoatGetKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x9706E4", Offset = "0x9706E4", VA = "0x9706E4", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x970780", Offset = "0x970780", VA = "0x970780", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x9707A0", Offset = "0x9707A0", VA = "0x9707A0")]
	public OrcOnBoatGetKilledController()
	{
	}
}
[Token(Token = "0x200025C")]
public class OrcSimpleHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OrcArrowHitController orcArrowHitController;

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x9707A8", Offset = "0x9707A8", VA = "0x9707A8", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x9707D4", Offset = "0x9707D4", VA = "0x9707D4", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x970954", Offset = "0x970954", VA = "0x970954")]
	public OrcSimpleHitController()
	{
	}
}
[Token(Token = "0x200025D")]
public class OrcSoundController : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000CC5")]
	private const float freezeDeathVolume = 0.3f;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numberDeathClip;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int numberFrozenDeathClip;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource hit;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource death;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource frozenDeath;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource freeze;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip[] hitClips;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip[] deathClips;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip[] frozenDeathClips;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip[] freezeClips;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource roar;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip[] roarClips;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioSource RunSound;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource WalkSound;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float minPitch;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float maxPitch;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float maxPitchRoar;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private OrcAnimatorController orcAnimatorController;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float defaultDeathVolume;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool hasDefaultDeathVolumeBeenSaved;

	[Token(Token = "0x17000116")]
	public AudioClip[] DeathAudioClips
	{
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x970B40", Offset = "0x970B40", VA = "0x970B40")]
		set
		{
		}
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x97095C", Offset = "0x97095C", VA = "0x97095C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x970990", Offset = "0x970990", VA = "0x970990")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x970A68", Offset = "0x970A68", VA = "0x970A68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x970960", Offset = "0x970960", VA = "0x970960")]
	private void SaveDefaultDeathVolume()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x970B48", Offset = "0x970B48", VA = "0x970B48")]
	public void SetRunSoundMaxDistance(float maxDistance)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x970B64", Offset = "0x970B64", VA = "0x970B64")]
	public void PlayRoarSound()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x96EEE0", Offset = "0x96EEE0", VA = "0x96EEE0")]
	public void PlayHitSound()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x970BB0", Offset = "0x970BB0", VA = "0x970BB0")]
	public void SetActiveWalkSound(bool shouldBeActive)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x970BD0", Offset = "0x970BD0", VA = "0x970BD0")]
	public void PlayOrcDeathSound()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x970CE8", Offset = "0x970CE8", VA = "0x970CE8")]
	public void PlayOrcFrozenDeathSound()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x970E1C", Offset = "0x970E1C", VA = "0x970E1C")]
	public void PlayOrcFreezeSound()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x970EA8", Offset = "0x970EA8", VA = "0x970EA8", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x970EDC", Offset = "0x970EDC", VA = "0x970EDC")]
	public OrcSoundController()
	{
	}
}
[Token(Token = "0x200025E")]
public class SlowingController : MonoBehaviourPun, IPunObservable, IResetable
{
	[Token(Token = "0x200025F")]
	private sealed class <UnslowCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlowingController <>4__this;

		[Token(Token = "0x17000118")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0x971598", Offset = "0x971598", VA = "0x971598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x9715A0", Offset = "0x9715A0", VA = "0x9715A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x971388", Offset = "0x971388", VA = "0x971388")]
		[DebuggerHidden]
		public <UnslowCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x9714D0", Offset = "0x9714D0", VA = "0x9714D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x9714D4", Offset = "0x9714D4", VA = "0x9714D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BodyFreezeEffect slowingEffect;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float slowFactor;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyAnimatorStateController enemyAnimatorStateController;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isSlowed;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timedSlowDuration;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startingAnimatorSpeed;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float t;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float defaultTimedSlowDuration;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float defaultStartingAnimatorSpeed;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float defaultT;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool defaultIsSlowed;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool timeSlowed;

	[Token(Token = "0x17000117")]
	public bool IsSlowed
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x970EFC", Offset = "0x970EFC", VA = "0x970EFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x970F04", Offset = "0x970F04", VA = "0x970F04")]
		set
		{
		}
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x971010", Offset = "0x971010", VA = "0x971010")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x971084", Offset = "0x971084", VA = "0x971084")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x9710DC", Offset = "0x9710DC", VA = "0x9710DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x970F68", Offset = "0x970F68", VA = "0x970F68")]
	private void Slow()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x970FC0", Offset = "0x970FC0", VA = "0x970FC0")]
	private void Unslow()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x9711A4", Offset = "0x9711A4", VA = "0x9711A4")]
	public void SetSlowed(bool isToBeSlowed)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x9712C0", Offset = "0x9712C0", VA = "0x9712C0")]
	[PunRPC]
	public void RpcSetSlowed(bool valueToSet)
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x97035C", Offset = "0x97035C", VA = "0x97035C")]
	public void SetTimedSlowed(bool isToBeSlowed)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x9712C8", Offset = "0x9712C8", VA = "0x9712C8")]
	[PunRPC]
	public void RpcSetTimedSlowed(bool valueToSet)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x971314", Offset = "0x971314", VA = "0x971314")]
	private IEnumerator UnslowCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x9713B0", Offset = "0x9713B0", VA = "0x9713B0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x971478", Offset = "0x971478", VA = "0x971478", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x9714AC", Offset = "0x9714AC", VA = "0x9714AC")]
	public void SetReferences(BodyFreezeEffect _slowingEffect)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x9714B4", Offset = "0x9714B4", VA = "0x9714B4")]
	public SlowingController()
	{
	}
}
[Token(Token = "0x2000260")]
public class OrcAnimationAttackPlayer : MonoBehaviour, IAttackPlayer
{
	[Token(Token = "0x4000CEA")]
	private const float roarChance = 0.5f;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OrcAnimatorController animatorController;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject orcRoarSoundPrefab;

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x9715A8", Offset = "0x9715A8", VA = "0x9715A8", Slot = "4")]
	public void PlayAttack()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x971700", Offset = "0x971700", VA = "0x971700")]
	public OrcAnimationAttackPlayer()
	{
	}
}
[Token(Token = "0x2000261")]
public class PlayerColliderDetector : MonoBehaviour
{
	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<WenklyStudio.ElvenAssassin.PlayerController> OnPlayerDetection;

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x971708", Offset = "0x971708", VA = "0x971708")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x9717EC", Offset = "0x9717EC", VA = "0x9717EC")]
	public PlayerColliderDetector()
	{
	}
}
[Token(Token = "0x2000262")]
public class ShotThroughWindow : MonoBehaviour
{
	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x9717F4", Offset = "0x9717F4", VA = "0x9717F4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x971894", Offset = "0x971894", VA = "0x971894")]
	public ShotThroughWindow()
	{
	}
}
[Token(Token = "0x2000263")]
public class StandardBodyDisappearingChecker : MonoBehaviour
{
	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x97189C", Offset = "0x97189C", VA = "0x97189C", Slot = "4")]
	public bool IsBodyDisappearingFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x971900", Offset = "0x971900", VA = "0x971900")]
	public StandardBodyDisappearingChecker()
	{
	}
}
[Token(Token = "0x2000264")]
public class TrollAnimatorController : MonoBehaviourPun, IResetable, IPunObservable
{
	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int running;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int shouting;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int attacking;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int dead;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float shoutAnimationDuration;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float attackAnimationDuration;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isChangingAnimationLocked;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool defaultDeathAnimAdjusterEnabled;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private DeathAnimAdjuster deathAnimAdjuster;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isRunning;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isShouting;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool isAttacking;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool isDead;

	[Token(Token = "0x1700011A")]
	public bool IsRunning
	{
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x971908", Offset = "0x971908", VA = "0x971908")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x971910", Offset = "0x971910", VA = "0x971910")]
		set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public bool IsShouting
	{
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x971984", Offset = "0x971984", VA = "0x971984")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x97198C", Offset = "0x97198C", VA = "0x97198C")]
		set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public bool IsAttacking
	{
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x971A00", Offset = "0x971A00", VA = "0x971A00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x971A08", Offset = "0x971A08", VA = "0x971A08")]
		set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public bool IsDead
	{
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x971A7C", Offset = "0x971A7C", VA = "0x971A7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x971A84", Offset = "0x971A84", VA = "0x971A84")]
		set
		{
		}
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x971B24", Offset = "0x971B24", VA = "0x971B24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x971B7C", Offset = "0x971B7C", VA = "0x971B7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x971BD4", Offset = "0x971BD4", VA = "0x971BD4")]
	public void StopAnimations()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x971BF4", Offset = "0x971BF4", VA = "0x971BF4")]
	public void PlayRunAnimation()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x971C30", Offset = "0x971C30", VA = "0x971C30")]
	public void PlayShoutAnimation()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x971C6C", Offset = "0x971C6C", VA = "0x971C6C")]
	public void PlayAttackAnimation()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x971CA8", Offset = "0x971CA8", VA = "0x971CA8")]
	public void PlayDeathAnimation()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x971CFC", Offset = "0x971CFC", VA = "0x971CFC", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x971D68", Offset = "0x971D68", VA = "0x971D68", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x971F44", Offset = "0x971F44", VA = "0x971F44")]
	public TrollAnimatorController()
	{
	}
}
[Token(Token = "0x2000265")]
public class TrollArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x972024", Offset = "0x972024", VA = "0x972024", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x972050", Offset = "0x972050", VA = "0x972050", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x9722A0", Offset = "0x9722A0", VA = "0x9722A0")]
	[PunRPC]
	public void RPCGetHitTroll(float damage, int clientID)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x972420", Offset = "0x972420", VA = "0x972420")]
	public TrollArrowHitController()
	{
	}
}
[Token(Token = "0x2000266")]
public class TrollAttackPlaceInfo : MonoBehaviour
{
	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RoutePoint standingRoutePoint;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform targetPoint;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TeleportCollider targetPlatform;

	[Token(Token = "0x1700011E")]
	public RoutePoint StandingRoutePoint
	{
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x972428", Offset = "0x972428", VA = "0x972428")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public Transform TargetPoint
	{
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x972430", Offset = "0x972430", VA = "0x972430")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000120")]
	public TeleportCollider TargetPlatform
	{
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x972438", Offset = "0x972438", VA = "0x972438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x972440", Offset = "0x972440", VA = "0x972440")]
	public TrollAttackPlaceInfo()
	{
	}
}
[Token(Token = "0x2000267")]
public enum TrollAttackState
{
	[Token(Token = "0x4000D02")]
	FollowingRoute,
	[Token(Token = "0x4000D03")]
	FirstShouting,
	[Token(Token = "0x4000D04")]
	GoingToAttackStandingPoint,
	[Token(Token = "0x4000D05")]
	RotatingToAttackTarget,
	[Token(Token = "0x4000D06")]
	ShoutingBeforeAttack,
	[Token(Token = "0x4000D07")]
	Attacking
}
[Token(Token = "0x2000268")]
public class TrollFreezingArrowHitController : MonoBehaviour, IEnemyGetHit
{
	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SlowingController slowingController;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TrollArrowHitController trollArrowHitController;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x972448", Offset = "0x972448", VA = "0x972448", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x972474", Offset = "0x972474", VA = "0x972474", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x972524", Offset = "0x972524", VA = "0x972524")]
	public TrollFreezingArrowHitController()
	{
	}
}
[Token(Token = "0x2000269")]
public class TrollIceCloudHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SlowingController slowingController;

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x97252C", Offset = "0x97252C", VA = "0x97252C", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x972558", Offset = "0x972558", VA = "0x972558", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x97275C", Offset = "0x97275C", VA = "0x97275C")]
	[PunRPC]
	private void RPCGetHitTrollIceCloud(int hitterActorNumber, float damage)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x972910", Offset = "0x972910", VA = "0x972910")]
	public TrollIceCloudHitController()
	{
	}
}
[Token(Token = "0x200026A")]
public class TrollKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TrollAttackController trollAttackController;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TrollAnimatorController trollAnimatorController;

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x972918", Offset = "0x972918", VA = "0x972918", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x972920", Offset = "0x972920", VA = "0x972920", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x9729C4", Offset = "0x9729C4", VA = "0x9729C4")]
	public TrollKilledController()
	{
	}
}
[Token(Token = "0x200026B")]
public class TrollShoutTriggerer : MonoBehaviour
{
	[Token(Token = "0x4000D12")]
	private const string trollShoutTriggerTag = "TrollShoutTrigger";

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrollAttackController trollAttackController;

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x9729CC", Offset = "0x9729CC", VA = "0x9729CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x972A48", Offset = "0x972A48", VA = "0x972A48")]
	public TrollShoutTriggerer()
	{
	}
}
[Token(Token = "0x200026C")]
public class TrollSimpleHitController : MonoBehaviour, IEnemyGetHit
{
	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrollArrowHitController trollArrowHitController;

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x972A50", Offset = "0x972A50", VA = "0x972A50", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x972A7C", Offset = "0x972A7C", VA = "0x972A7C", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x972BFC", Offset = "0x972BFC", VA = "0x972BFC")]
	public TrollSimpleHitController()
	{
	}
}
[Token(Token = "0x200026D")]
public class TrollSoundController : MonoBehaviourPun
{
	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource pickingUpSound;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource groarSound;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource punchSound;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource deathSound;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float soundDelay;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float firstScreamDelay;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip[] punchClips;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip[] deathClips;

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x972C04", Offset = "0x972C04", VA = "0x972C04")]
	public void AnimationEventPlayOgreScream()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x972C20", Offset = "0x972C20", VA = "0x972C20")]
	public void OnDeath()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x972CB4", Offset = "0x972CB4", VA = "0x972CB4")]
	public void PlayPickUpStoneSound()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x972CF0", Offset = "0x972CF0", VA = "0x972CF0")]
	public void PlayOgrePunchSound()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x972DA4", Offset = "0x972DA4", VA = "0x972DA4")]
	public void StopAllAudio()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x972DD4", Offset = "0x972DD4", VA = "0x972DD4")]
	public TrollSoundController()
	{
	}
}
[Token(Token = "0x200026E")]
public class WalkingEnemyHitGroundSoundController : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource hitGroundAudioSource;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathAnimAdjuster deathAnimAdjuster;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasPlayedHitGroundSound;

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x972DE8", Offset = "0x972DE8", VA = "0x972DE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x972EC0", Offset = "0x972EC0", VA = "0x972EC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x972F98", Offset = "0x972F98", VA = "0x972F98")]
	private void OnDeathAnimAdjustingFinished()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x972FCC", Offset = "0x972FCC", VA = "0x972FCC")]
	public void OnHitGround()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x973010", Offset = "0x973010", VA = "0x973010", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x973018", Offset = "0x973018", VA = "0x973018")]
	public WalkingEnemyHitGroundSoundController()
	{
	}
}
[Token(Token = "0x200026F")]
public class WolfAnimatorController : MonoBehaviour
{
	[Token(Token = "0x2000270")]
	public delegate void OnDeathAnimationPlayed();

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int running;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int dead;

	[Token(Token = "0x4000D22")]
	private const bool defaultIsRunning = true;

	[Token(Token = "0x4000D23")]
	private const bool defaultIsDead = false;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isRunning;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isDead;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool isSyncingFromPhoton;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool isAnimatorActiveForParameterSync;

	[Token(Token = "0x17000121")]
	public bool IsRunning
	{
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x973190", Offset = "0x973190", VA = "0x973190")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x973198", Offset = "0x973198", VA = "0x973198")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public bool IsDead
	{
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x97321C", Offset = "0x97321C", VA = "0x97321C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x973224", Offset = "0x973224", VA = "0x973224")]
		set
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event OnDeathAnimationPlayed onDeathAnimationPlayed
	{
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x973020", Offset = "0x973020", VA = "0x973020")]
		add
		{
		}
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x9730D8", Offset = "0x9730D8", VA = "0x9730D8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x9732F4", Offset = "0x9732F4", VA = "0x9732F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x97334C", Offset = "0x97334C", VA = "0x97334C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x9733A4", Offset = "0x9733A4", VA = "0x9733A4")]
	public void PlayDeathAnimation()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x9733C4", Offset = "0x9733C4", VA = "0x9733C4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x9733F0", Offset = "0x9733F0", VA = "0x9733F0")]
	public void SetReferences(Animator _animator)
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x9733F8", Offset = "0x9733F8", VA = "0x9733F8")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x9735A0", Offset = "0x9735A0", VA = "0x9735A0")]
	public WolfAnimatorController()
	{
	}
}
[Token(Token = "0x2000271")]
public class WolfArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x973704", Offset = "0x973704", VA = "0x973704", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x973730", Offset = "0x973730", VA = "0x973730", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x9739F0", Offset = "0x9739F0", VA = "0x9739F0")]
	[PunRPC]
	private void RPCGetHitArrow(float damage, int hitterActorNumber, Vector3 hitDirection)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x973B7C", Offset = "0x973B7C", VA = "0x973B7C")]
	public WolfArrowHitController()
	{
	}
}
[Token(Token = "0x2000272")]
public class WolfKillController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private WolfAnimatorController wolfAnimator;

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x973B84", Offset = "0x973B84", VA = "0x973B84", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x973BA4", Offset = "0x973BA4", VA = "0x973BA4", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x973C5C", Offset = "0x973C5C", VA = "0x973C5C")]
	public WolfKillController()
	{
	}
}
[Token(Token = "0x2000273")]
public class WolfSoundController : MonoBehaviour
{
	[Token(Token = "0x4000D31")]
	private const float freezeDeathVolume = 0.3f;

	[Token(Token = "0x4000D32")]
	private const float defaultDeathVolume = 0.5f;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] deathClips;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip[] frozenDeathClips;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] freezeClips;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float minPitch;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float maxPitch;

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x973C64", Offset = "0x973C64", VA = "0x973C64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x973CDC", Offset = "0x973CDC", VA = "0x973CDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x973D54", Offset = "0x973D54", VA = "0x973D54")]
	public void PlayWolfFreezeSound()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x973DF0", Offset = "0x973DF0", VA = "0x973DF0")]
	public void PlayWolfDeathSound()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x973E8C", Offset = "0x973E8C", VA = "0x973E8C")]
	public void PlayWolfFrozenDeathSound()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x973F40", Offset = "0x973F40", VA = "0x973F40")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x973F60", Offset = "0x973F60", VA = "0x973F60")]
	public WolfSoundController()
	{
	}
}
[Token(Token = "0x2000274")]
public class WyvernAnimatorController : MonoBehaviourPun
{
	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int isSlowFlying;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int isFastFlying;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int isDead;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x17000123")]
	public bool IsSlowFlying
	{
		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x973F74", Offset = "0x973F74", VA = "0x973F74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x973F98", Offset = "0x973F98", VA = "0x973F98")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public bool IsFastFlying
	{
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x973FC4", Offset = "0x973FC4", VA = "0x973FC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x973FE8", Offset = "0x973FE8", VA = "0x973FE8")]
		set
		{
		}
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x974014", Offset = "0x974014", VA = "0x974014")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x97406C", Offset = "0x97406C", VA = "0x97406C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x9740C4", Offset = "0x9740C4", VA = "0x9740C4")]
	public void PlayWalkAnimation()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x974104", Offset = "0x974104", VA = "0x974104")]
	public void PlayDeadAnimation()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x974128", Offset = "0x974128", VA = "0x974128")]
	public float GetCurrentAnimationLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x974184", Offset = "0x974184", VA = "0x974184")]
	public void SetReferences(Animator _animator)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x97418C", Offset = "0x97418C", VA = "0x97418C")]
	public WyvernAnimatorController()
	{
	}
}
[Token(Token = "0x2000275")]
public class WyvernArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x974234", Offset = "0x974234", VA = "0x974234", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x974260", Offset = "0x974260", VA = "0x974260", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x974520", Offset = "0x974520", VA = "0x974520")]
	[PunRPC]
	public void RPCGetHitWyvernArrow(float damage, int clientID, Vector3 hitDirection)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x9746AC", Offset = "0x9746AC", VA = "0x9746AC")]
	public WyvernArrowHitController()
	{
	}
}
[Token(Token = "0x2000276")]
public class WyvernArrowKilledController : MonoBehaviour, IEnemyGetKilled
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WyvernSoundController wyvernSoundController;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyAnimatorStateController enemyAnimatorStateController;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FallController fallController;

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x9746B4", Offset = "0x9746B4", VA = "0x9746B4", Slot = "4")]
	public bool IsHandling(KillInfo killInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x9746D4", Offset = "0x9746D4", VA = "0x9746D4", Slot = "5")]
	public void GetKilled(KillInfo killInfo)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x974820", Offset = "0x974820", VA = "0x974820")]
	public void SetReferences(FallController fallController)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x974828", Offset = "0x974828", VA = "0x974828")]
	public WyvernArrowKilledController()
	{
	}
}
[Token(Token = "0x2000277")]
public class WyvernAttacher : MonoBehaviour, IResetable
{
	[Token(Token = "0x2000278")]
	private sealed class <StopSnapping>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WyvernAttacher <>4__this;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x974DB0", Offset = "0x974DB0", VA = "0x974DB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0x974DB8", Offset = "0x974DB8", VA = "0x974DB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x974C38", Offset = "0x974C38", VA = "0x974C38")]
		[DebuggerHidden]
		public <StopSnapping>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x974D18", Offset = "0x974D18", VA = "0x974D18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x974D1C", Offset = "0x974D1C", VA = "0x974D1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaitForSeconds stopSnappingDelay;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody nearestBone;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform target;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float attachingSpeed;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float step;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WyvernFallRagdollController <WyvernRagdoll>k__BackingField;

	[Token(Token = "0x17000125")]
	public WyvernFallRagdollController WyvernRagdoll
	{
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x974830", Offset = "0x974830", VA = "0x974830")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x974838", Offset = "0x974838", VA = "0x974838")]
		set
		{
		}
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x974840", Offset = "0x974840", VA = "0x974840")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x9748B8", Offset = "0x9748B8", VA = "0x9748B8")]
	private void SnapOverTimeArrow()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x974A18", Offset = "0x974A18", VA = "0x974A18")]
	private void SelectBoneToSnap()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x974BC4", Offset = "0x974BC4", VA = "0x974BC4")]
	private IEnumerator StopSnapping()
	{
		return null;
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x974C60", Offset = "0x974C60", VA = "0x974C60", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x974C98", Offset = "0x974C98", VA = "0x974C98")]
	public WyvernAttacher()
	{
	}
}
[Token(Token = "0x2000279")]
public class WyvernCrushController : MonoBehaviour, IResetable
{
	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WyvernSoundController wyvernSoundController;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject body;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool crashPlayed;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool <IsActive>k__BackingField;

	[Token(Token = "0x17000128")]
	public bool IsActive
	{
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x974EF8", Offset = "0x974EF8", VA = "0x974EF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x974F00", Offset = "0x974F00", VA = "0x974F00")]
		set
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event Action OnWyvernCrush
	{
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x974DC0", Offset = "0x974DC0", VA = "0x974DC0")]
		add
		{
		}
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x974E5C", Offset = "0x974E5C", VA = "0x974E5C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x974F0C", Offset = "0x974F0C", VA = "0x974F0C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x974FE8", Offset = "0x974FE8", VA = "0x974FE8", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x975014", Offset = "0x975014", VA = "0x975014")]
	public WyvernCrushController()
	{
	}
}
[Token(Token = "0x200027A")]
public class WyvernFallController : FallController, IResetable
{
	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private WyvernAnimatorController wyvernAnimatorController;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private WyvernCrushController wyvernCrushController;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform targetTransform;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float downSpeedCoefficient;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float forwardSpeedCoefficient;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float smoothingTime;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float maxSpeed;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform wyvernParent;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 velocityOnWyvernDead;

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x97501C", Offset = "0x97501C", VA = "0x97501C")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x9750A0", Offset = "0x9750A0", VA = "0x9750A0")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x975124", Offset = "0x975124", VA = "0x975124")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x975128", Offset = "0x975128", VA = "0x975128")]
	private void Fall()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x975218", Offset = "0x975218", VA = "0x975218", Slot = "4")]
	public override void StartFalling()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x975310", Offset = "0x975310", VA = "0x975310", Slot = "5")]
	public override void StopFalling()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x975330", Offset = "0x975330", VA = "0x975330", Slot = "6")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x975340", Offset = "0x975340", VA = "0x975340")]
	public WyvernFallController()
	{
	}
}
[Token(Token = "0x200027B")]
public class WyvernFallRagdollController : FallController, IResetable
{
	[Serializable]
	[Token(Token = "0x200027C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Collider, bool> <>9__43_0;

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x977620", Offset = "0x977620", VA = "0x977620")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x977628", Offset = "0x977628", VA = "0x977628")]
		internal bool <Reset>b__43_0(Collider anim)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200027D")]
	private sealed class <StopRagdollOvertime>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WyvernFallRagdollController <>4__this;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x9778D8", Offset = "0x9778D8", VA = "0x9778D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x9778E0", Offset = "0x9778E0", VA = "0x9778E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x977684", Offset = "0x977684", VA = "0x977684")]
		[DebuggerHidden]
		public <StopRagdollOvertime>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x9776AC", Offset = "0x9776AC", VA = "0x9776AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x9776B0", Offset = "0x9776B0", VA = "0x9776B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000D5E")]
	private const float timeToStopRagdoll = 8f;

	[Token(Token = "0x4000D5F")]
	private const float timeToStopWyvernDeathEffect = 6f;

	[Token(Token = "0x4000D60")]
	private const float forwardForceMultiplier = 24f;

	[Token(Token = "0x4000D61")]
	private const float dragMultiplier = 0.08f;

	[Token(Token = "0x4000D62")]
	private const float maxTime = 3f;

	[Token(Token = "0x4000D63")]
	private const float minTime = 0.2f;

	[Token(Token = "0x4000D64")]
	private const float ragdollStopStep = 0.1f;

	[Token(Token = "0x4000D65")]
	private const float freezingSpeedMultiplier = 0.5f;

	[Token(Token = "0x4000D66")]
	private const float hitForceMultiplier = 150f;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds stopRagdollDelay;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 eulerAngleVelocity;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 eulerAngleVelocityFreezed;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve animationCurve;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject mainObject;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Rigidbody[] boneRigidbodies;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Collider[] animCollider;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Rigidbody[] additionalHitColliders;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Rigidbody[] rotationalBody;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Rigidbody[] Wings;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Animator Animator;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private (float, float)[] boneRigidbodiesDrags;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool hasRagdollStopped;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool isRotatingFreezed;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 eulerAngleVelocityFreezedActual;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timer;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool shouldFallDown;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool shouldRotate;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	private bool areJointsRebuilt;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
	private bool enabledRagdoll;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool <AlreadyHit>k__BackingField;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool <CanForceBeApplied>k__BackingField;

	[Token(Token = "0x17000129")]
	public bool AlreadyHit
	{
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x975348", Offset = "0x975348", VA = "0x975348")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x975350", Offset = "0x975350", VA = "0x975350")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public bool CanForceBeApplied
	{
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x97535C", Offset = "0x97535C", VA = "0x97535C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x975364", Offset = "0x975364", VA = "0x975364")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	public Rigidbody[] BoneRigidbodies
	{
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x975370", Offset = "0x975370", VA = "0x975370")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012C")]
	public Rigidbody[] AdditionalHitColliders
	{
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x975378", Offset = "0x975378", VA = "0x975378")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x975380", Offset = "0x975380", VA = "0x975380")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x975564", Offset = "0x975564", VA = "0x975564")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x9758C4", Offset = "0x9758C4", VA = "0x9758C4")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x975A4C", Offset = "0x975A4C", VA = "0x975A4C")]
	public void OnAnimationLoop(float value)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x97539C", Offset = "0x97539C", VA = "0x97539C")]
	private void RememberBoneDrags()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x975A74", Offset = "0x975A74", VA = "0x975A74")]
	public void SetWyvernFallVelocity()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x975830", Offset = "0x975830", VA = "0x975830")]
	private void FreezeRotationOvertime()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x975710", Offset = "0x975710", VA = "0x975710")]
	private void AdjustWingsRotationOvertime()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x9755BC", Offset = "0x9755BC", VA = "0x9755BC")]
	private void RotateBody()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x975A80", Offset = "0x975A80", VA = "0x975A80")]
	private void ChangeCollidersActiveStatus(bool isActive)
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x975AE8", Offset = "0x975AE8", VA = "0x975AE8")]
	public void EnableRagdollFreezed()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x975D6C", Offset = "0x975D6C", VA = "0x975D6C", Slot = "4")]
	public override void StartFalling()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x975F1C", Offset = "0x975F1C", VA = "0x975F1C")]
	public void ApllyFallingForce()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x97611C", Offset = "0x97611C", VA = "0x97611C", Slot = "5")]
	public override void StopFalling()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x975BC0", Offset = "0x975BC0", VA = "0x975BC0")]
	private void ActivateRigidbodiesPhysic()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x97612C", Offset = "0x97612C", VA = "0x97612C")]
	private void DeactivateRigibodiesPhisics()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x975EA8", Offset = "0x975EA8", VA = "0x975EA8")]
	private IEnumerator StopRagdollOvertime()
	{
		return null;
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x976270", Offset = "0x976270", VA = "0x976270", Slot = "6")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x976348", Offset = "0x976348", VA = "0x976348")]
	private void ResetBoneRigidbodies()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x976404", Offset = "0x976404", VA = "0x976404")]
	private void ResetBoneRigidbody(Rigidbody rigidbody, int index)
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x975A60", Offset = "0x975A60", VA = "0x975A60")]
	private void RebuildJoints()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x9754D8", Offset = "0x9754D8", VA = "0x9754D8")]
	private void EnableJoints(bool enabled)
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x976524", Offset = "0x976524", VA = "0x976524")]
	public WyvernFallRagdollController()
	{
	}
}
[Token(Token = "0x200027E")]
public class WyvernFallVelocityRpcDelegate : MonoBehaviour
{
	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PhotonView photonView;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private WyvernFallRagdollController wyvernFallRagdollController;

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x9778E8", Offset = "0x9778E8", VA = "0x9778E8")]
	[PunRPC]
	public void RpcSetWyvernFallVelocity()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x977904", Offset = "0x977904", VA = "0x977904")]
	public WyvernFallVelocityRpcDelegate()
	{
	}
}
[Token(Token = "0x200027F")]
public class WyvernFlySoundController : MonoBehaviour
{
	[Token(Token = "0x4000D85")]
	private const float MinPitch = 1f;

	[Token(Token = "0x4000D86")]
	private const float MaxPitch = 1.1f;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource wyvernFlyAudioSource;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] wingsWaveAudioClips;

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x97790C", Offset = "0x97790C", VA = "0x97790C")]
	private void WyvernFlyStartAnimationEvent()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x977924", Offset = "0x977924", VA = "0x977924")]
	public WyvernFlySoundController()
	{
	}
}
[Token(Token = "0x2000280")]
public class WyvernFreezeController : MonoBehaviourPun, IResetable, IFreezable, IFrozenEnemyBreakable
{
	[Serializable]
	[Token(Token = "0x2000281")]
	private sealed class <>c
	{
		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GameObject> <>9__16_0;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Renderer> <>9__16_1;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<GameObject> <>9__20_0;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Renderer> <>9__20_1;

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x978370", Offset = "0x978370", VA = "0x978370")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x978378", Offset = "0x978378", VA = "0x978378")]
		internal void <Break>b__16_0(GameObject go)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x978394", Offset = "0x978394", VA = "0x978394")]
		internal void <Break>b__16_1(Renderer renderer)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x9783B0", Offset = "0x9783B0", VA = "0x9783B0")]
		internal void <ResetElement>b__20_0(GameObject obj)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x9783CC", Offset = "0x9783CC", VA = "0x9783CC")]
		internal void <ResetElement>b__20_1(Renderer renderer)
		{
		}
	}

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material iceMaterial;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private WyvernSoundController wyvernSoundController;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyEnableController enemyEnableController;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private FallController fallController;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private IceMaterialAnimator iceMaterialAnimator;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private EnemyAnimatorStateController enemyAnimatorStateController;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Renderer> renderers;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ExplodeObject iceToBeBroken;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Collider[] collidersToEnable;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> objectsToDisable;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material defaultMaterial;

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x97792C", Offset = "0x97792C", VA = "0x97792C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x977984", Offset = "0x977984", VA = "0x977984")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x9779DC", Offset = "0x9779DC", VA = "0x9779DC", Slot = "5")]
	public void Freeze()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x977C80", Offset = "0x977C80", VA = "0x977C80", Slot = "6")]
	public void Break(Vector3 breakDirection)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x977A70", Offset = "0x977A70", VA = "0x977A70")]
	private void StartIceCreatingProcess()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x977C1C", Offset = "0x977C1C", VA = "0x977C1C")]
	private void EnableColliders()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x977FA4", Offset = "0x977FA4", VA = "0x977FA4")]
	public void SetReferences(Material _defaultMaterial, List<Renderer> _renderers, ExplodeObject _iceToBeBroken, Collider[] _collidersToEnable, List<GameObject> _objectsToDisable, FallController _fallcontroller)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x978034", Offset = "0x978034", VA = "0x978034", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x9782D4", Offset = "0x9782D4", VA = "0x9782D4")]
	public WyvernFreezeController()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x9782DC", Offset = "0x9782DC", VA = "0x9782DC")]
	private void <ResetElement>b__20_2(Renderer renderer)
	{
	}
}
[Token(Token = "0x2000282")]
public class WyvernFreezingArrowHitController : MonoBehaviourPun, IEnemyGetHit
{
	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FreezeController freezeController;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FrozenEnemyBreakController frozenEnemyBreakController;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x9783E8", Offset = "0x9783E8", VA = "0x9783E8", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x978414", Offset = "0x978414", VA = "0x978414", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x978648", Offset = "0x978648", VA = "0x978648")]
	[PunRPC]
	public void RPCGetHitWyvernFreezingArrow(int clientID, Vector3 hitDirection)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x978794", Offset = "0x978794", VA = "0x978794")]
	public WyvernFreezingArrowHitController()
	{
	}
}
[Token(Token = "0x2000283")]
public class WyvernShoutController : MonoBehaviour
{
	[Token(Token = "0x4000D9F")]
	private const string wyvernShoutStartTag = "Wyvern Shout Start";

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource shoutAudioSource;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] shoutAudioClips;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float distanceFromPlayerToShout;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool isShoutingOnTrigger;

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x97879C", Offset = "0x97879C", VA = "0x97879C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x9787B4", Offset = "0x9787B4", VA = "0x9787B4")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x978834", Offset = "0x978834", VA = "0x978834")]
	private void Shout()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x9788C8", Offset = "0x9788C8", VA = "0x9788C8")]
	public WyvernShoutController()
	{
	}
}
[Token(Token = "0x2000284")]
public class WyvernSimpleHitController : MonoBehaviour, IEnemyGetHit
{
	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WyvernArrowHitController wyvernArrowHitController;

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x9788D0", Offset = "0x9788D0", VA = "0x9788D0", Slot = "4")]
	public bool IsHandling(HitInfoAbstract hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x9788FC", Offset = "0x9788FC", VA = "0x9788FC", Slot = "5")]
	public void GetHit(HitInfoAbstract hitInfo)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x978A80", Offset = "0x978A80", VA = "0x978A80")]
	public WyvernSimpleHitController()
	{
	}
}
[Token(Token = "0x2000285")]
public class WyvernSoundController : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x4000DA5")]
	private const float iceExplosionVolume = 0.3f;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource roarSoundSource;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource deathSoundSource;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource hitSoundSource;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource freezeSoundSource;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource freezeDeathSoundSource;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource hitGroundSoundSource;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip[] deathClips;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip[] hitClips;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip[] freezeClips;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip[] freezeDeathClips;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float minPitch;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float maxPitch;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform defaultDeathSoundSourceParent;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool defaultIsPlayingRpcSounds;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int randomFreezeDeathSoundNumber;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool <IsPlayingRpcSounds>k__BackingField;

	[Token(Token = "0x1700012F")]
	public bool IsPlayingRpcSounds
	{
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x978A88", Offset = "0x978A88", VA = "0x978A88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x978A90", Offset = "0x978A90", VA = "0x978A90")]
		set
		{
		}
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x978A9C", Offset = "0x978A9C", VA = "0x978A9C")]
	public void StopRoarSound(RpcTarget targets)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x978B70", Offset = "0x978B70", VA = "0x978B70")]
	[PunRPC]
	public void RpcStopRoarSound()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x978B8C", Offset = "0x978B8C", VA = "0x978B8C")]
	public void StopRoarSound()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x978BA8", Offset = "0x978BA8", VA = "0x978BA8")]
	public void PlayWyvernDeathSound(RpcTarget targets)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x978C7C", Offset = "0x978C7C", VA = "0x978C7C")]
	public void PlayWyvernDeathSound()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x978C80", Offset = "0x978C80", VA = "0x978C80")]
	[PunRPC]
	public void RpcPlayWyvernDeathSound()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x978CA4", Offset = "0x978CA4", VA = "0x978CA4")]
	public void PlayHitSound()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x977C04", Offset = "0x977C04", VA = "0x977C04")]
	public void PlayWyvernFreezeSound()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x977EB0", Offset = "0x977EB0", VA = "0x977EB0")]
	public void PlayWyvernFreezeDeathSound()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x978CBC", Offset = "0x978CBC", VA = "0x978CBC")]
	public void PlayHitGroundSound()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x978CD8", Offset = "0x978CD8", VA = "0x978CD8", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x978D3C", Offset = "0x978D3C", VA = "0x978D3C")]
	public WyvernSoundController()
	{
	}
}
[Token(Token = "0x2000286")]
public class PoolNames : MonoBehaviour
{
	[Token(Token = "0x4000DB6")]
	public const string orcPoolName = "Orc";

	[Token(Token = "0x4000DB7")]
	public const string arrowPoolName = "Arrow";

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x978D5C", Offset = "0x978D5C", VA = "0x978D5C")]
	public PoolNames()
	{
	}
}
[Token(Token = "0x2000287")]
public class EquipmentChangesManager : MonoBehaviour
{
	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquipmentChanger rightEquipmentChanger;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EquipmentChanger leftEquipmentChanger;

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x978D64", Offset = "0x978D64", VA = "0x978D64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x978DD8", Offset = "0x978DD8", VA = "0x978DD8")]
	public void ChangeBow(string equipedBowName)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x978E18", Offset = "0x978E18", VA = "0x978E18")]
	public void ChangeHelmet(string equipedHelmetName)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x978E58", Offset = "0x978E58", VA = "0x978E58")]
	public void InitEquip()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x978E88", Offset = "0x978E88", VA = "0x978E88")]
	public EquipmentChangesManager()
	{
	}
}
[Token(Token = "0x2000288")]
public class ExpGiver : MonoBehaviour
{
	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpellsMenuController spellController;

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x978E90", Offset = "0x978E90", VA = "0x978E90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x978F18", Offset = "0x978F18", VA = "0x978F18")]
	public void GiveExp(int exp)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x97900C", Offset = "0x97900C", VA = "0x97900C")]
	public ExpGiver()
	{
	}
}
[Token(Token = "0x2000289")]
public class OnArrowHitExploder : MonoBehaviour
{
	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 additionalforceVector;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool inheritForceFromArrow;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float forceFromArrowInheritanceMultiplier;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ObjectExploder exploder;

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x979014", Offset = "0x979014", VA = "0x979014")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x979160", Offset = "0x979160", VA = "0x979160")]
	public OnArrowHitExploder()
	{
	}
}
[Token(Token = "0x200028A")]
public class BarrelOnArrowHitExploder : MonoBehaviour
{
	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ExplosiveBarrelController barrelExplosionController;

	[Token(Token = "0x17000130")]
	public ExplosiveBarrelController BarrelExplosionController
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x979170", Offset = "0x979170", VA = "0x979170")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x979178", Offset = "0x979178", VA = "0x979178")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x9793C4", Offset = "0x9793C4", VA = "0x9793C4")]
	public BarrelOnArrowHitExploder()
	{
	}
}
[Token(Token = "0x200028B")]
public class BarrelOnFinishedAssaultExtinguisher : MonoBehaviour
{
	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CartAssailant cartAssailant;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ExplosiveBarrelController explosiveBarrelController;

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x9793CC", Offset = "0x9793CC", VA = "0x9793CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x9794A4", Offset = "0x9794A4", VA = "0x9794A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x97957C", Offset = "0x97957C", VA = "0x97957C")]
	private void ExtinguishBarrel()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x9795C4", Offset = "0x9795C4", VA = "0x9795C4")]
	public BarrelOnFinishedAssaultExtinguisher()
	{
	}
}
[Token(Token = "0x200028C")]
public class BarrelOnGateExploder : MonoBehaviour
{
	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RouteController routeController;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ExplosiveBarrelController barrelExplosionController;

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x9795CC", Offset = "0x9795CC", VA = "0x9795CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x9796A0", Offset = "0x9796A0", VA = "0x9796A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x979774", Offset = "0x979774", VA = "0x979774")]
	private void ExplodeBarrel()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x979988", Offset = "0x979988", VA = "0x979988")]
	public BarrelOnGateExploder()
	{
	}
}
[Token(Token = "0x200028D")]
public class BarrelOnHitGroundExploder : MonoBehaviour
{
	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ExplosiveBarrelController barrelExplosionController;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathAnimAdjuster deathAnimAdjuster;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private EnemyGetKilledController enemyGetKilledController;

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x979990", Offset = "0x979990", VA = "0x979990")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x979A68", Offset = "0x979A68", VA = "0x979A68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x979B40", Offset = "0x979B40", VA = "0x979B40")]
	private void ExplodeBarrel()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x979C38", Offset = "0x979C38", VA = "0x979C38")]
	public void OnHitGround()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x979C3C", Offset = "0x979C3C", VA = "0x979C3C")]
	public BarrelOnHitGroundExploder()
	{
	}
}
[Token(Token = "0x200028E")]
public class ExplosiveBarrelController : MonoBehaviourPun, IPunObservable, IResetable
{
	[Token(Token = "0x200028F")]
	private sealed class <HitEnemiesAfterExplosionCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplosiveBarrelController <>4__this;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Player hitter;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x97A760", Offset = "0x97A760", VA = "0x97A760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x97A768", Offset = "0x97A768", VA = "0x97A768", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x979E90", Offset = "0x979E90", VA = "0x979E90")]
		[DebuggerHidden]
		public <HitEnemiesAfterExplosionCoroutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x97A4CC", Offset = "0x97A4CC", VA = "0x97A4CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x97A4D0", Offset = "0x97A4D0", VA = "0x97A4D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000DC7")]
	private const int collidersBufferLength = 200;

	[Token(Token = "0x4000DC8")]
	private const float secondsAfterExplosionToHit = 0.1f;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject explosionEffectPrefab;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float hitRadius;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float damage;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float attackTargetDamage;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject barrelModel;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem sparksParticleSystem;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource fuseBuringAudioSource;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int collidersHitCount;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isActive;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider[] collidersBuffer;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<EnemyGetHitController> hitEnemies;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<IAttackTarget> attackTargets;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds waitForHitAfterExplosion;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AttackInfo attackInfo;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool canExplode;

	[Token(Token = "0x17000131")]
	public bool IsActive
	{
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x979C44", Offset = "0x979C44", VA = "0x979C44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x979C4C", Offset = "0x979C4C", VA = "0x979C4C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public bool CanExplode
	{
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x979C8C", Offset = "0x979C8C", VA = "0x979C8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x979C94", Offset = "0x979C94", VA = "0x979C94")]
		set
		{
		}
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x979CB4", Offset = "0x979CB4", VA = "0x979CB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x979DD0", Offset = "0x979DD0", VA = "0x979DD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x9792B4", Offset = "0x9792B4", VA = "0x9792B4")]
	public void Explode(Player initiator)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x979594", Offset = "0x979594", VA = "0x979594")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x979C18", Offset = "0x979C18", VA = "0x979C18")]
	public void HitEnemiesAfterExplosion(Player hitter)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x97982C", Offset = "0x97982C", VA = "0x97982C")]
	[PunRPC]
	public void RPCShowExplodeVisualEffect()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x979E00", Offset = "0x979E00", VA = "0x979E00")]
	private IEnumerator HitEnemiesAfterExplosionCoroutine(Player hitter)
	{
		return null;
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x979EB8", Offset = "0x979EB8", VA = "0x979EB8")]
	private void HitAttackTarget(AttackTargetTrigger attackTargetTrigger)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x97A0B0", Offset = "0x97A0B0", VA = "0x97A0B0")]
	private static void HitBarrel(BarrelOnArrowHitExploder barrelOnArrowHitExploder, Player hitter)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x97A144", Offset = "0x97A144", VA = "0x97A144")]
	private void HitEnemy(EnemyGetHitController enemyToHit)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x979954", Offset = "0x979954", VA = "0x979954", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x97A2B0", Offset = "0x97A2B0", VA = "0x97A2B0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x97A378", Offset = "0x97A378", VA = "0x97A378")]
	public ExplosiveBarrelController()
	{
	}
}
[Token(Token = "0x2000290")]
public class HeadshotController : MonoBehaviour
{
	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x97A770", Offset = "0x97A770", VA = "0x97A770")]
	public HeadshotController()
	{
	}
}
[Token(Token = "0x2000291")]
public class Fire : MonoBehaviour
{
	[Token(Token = "0x2000292")]
	private sealed class <FireStart>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fire <>4__this;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x97ABF0", Offset = "0x97ABF0", VA = "0x97ABF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0x97ABF8", Offset = "0x97ABF8", VA = "0x97ABF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x97AA5C", Offset = "0x97AA5C", VA = "0x97AA5C")]
		[DebuggerHidden]
		public <FireStart>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x97AB30", Offset = "0x97AB30", VA = "0x97AB30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x97AB34", Offset = "0x97AB34", VA = "0x97AB34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000293")]
	private sealed class <FireStop>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fire <>4__this;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0x97ACC4", Offset = "0x97ACC4", VA = "0x97ACC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x97ACCC", Offset = "0x97ACCC", VA = "0x97ACCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x97AAF8", Offset = "0x97AAF8", VA = "0x97AAF8")]
		[DebuggerHidden]
		public <FireStop>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x97AC00", Offset = "0x97AC00", VA = "0x97AC00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x97AC04", Offset = "0x97AC04", VA = "0x97AC04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem fire;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SwellMultiplier;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxEmissionRate;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gravity;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.EmissionModule emission;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool Swell;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool Down;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x97A778", Offset = "0x97A778", VA = "0x97A778")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x97A7A8", Offset = "0x97A7A8", VA = "0x97A7A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x97A9E8", Offset = "0x97A9E8", VA = "0x97A9E8")]
	public IEnumerator FireStart()
	{
		return null;
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x97AA84", Offset = "0x97AA84", VA = "0x97AA84")]
	public IEnumerator FireStop()
	{
		return null;
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x97AB20", Offset = "0x97AB20", VA = "0x97AB20")]
	public Fire()
	{
	}
}
[Token(Token = "0x2000294")]
public class FireballWooshVolumeDown : MonoBehaviour
{
	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve wooshVolume;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource wooshSound;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isWoosh;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x97ACD4", Offset = "0x97ACD4", VA = "0x97ACD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x97AD88", Offset = "0x97AD88", VA = "0x97AD88")]
	public FireballWooshVolumeDown()
	{
	}
}
[Token(Token = "0x2000295")]
public class FlockEnablingController : MonoBehaviour
{
	[Token(Token = "0x4000DF1")]
	private const int maxFlockWaveIndex = 18;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WavesController wavesController;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject flocks;

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x97AD98", Offset = "0x97AD98", VA = "0x97AD98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x97AEF8", Offset = "0x97AEF8", VA = "0x97AEF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x97AEC8", Offset = "0x97AEC8", VA = "0x97AEC8")]
	private void UpdateFlockEnabled(int waveIndex)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x97B014", Offset = "0x97B014", VA = "0x97B014")]
	public FlockEnablingController()
	{
	}
}
[Token(Token = "0x2000296")]
public class ArcadeModeOnLaunchParameterSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string arcadeCommandParameter;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool arcadeOptionSet;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArcadeGameSwitcherCore arcadeSwitcher;

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x97B01C", Offset = "0x97B01C", VA = "0x97B01C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x97B148", Offset = "0x97B148", VA = "0x97B148")]
	public ArcadeModeOnLaunchParameterSwitcher()
	{
	}
}
[Token(Token = "0x2000297")]
public class ArrowRain : MonoBehaviourPun, IAbility
{
	[Token(Token = "0x2000298")]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ArrowRain <>4__this;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x97BA70", Offset = "0x97BA70", VA = "0x97BA70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x97BA78", Offset = "0x97BA78", VA = "0x97BA78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x97B8D0", Offset = "0x97B8D0", VA = "0x97B8D0")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x97B978", Offset = "0x97B978", VA = "0x97B978", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x97B97C", Offset = "0x97B97C", VA = "0x97B97C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numberOfArrowsToSpawnPerSideOfOriginalArrow;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float angleDifferencePerArrow;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject arrowPrefab;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds delayBetweenArrow;

	[Token(Token = "0x17000139")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x97B1A0", Offset = "0x97B1A0", VA = "0x97B1A0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013A")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x97B1A8", Offset = "0x97B1A8", VA = "0x97B1A8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x97B1B0", Offset = "0x97B1B0", VA = "0x97B1B0", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x97B32C", Offset = "0x97B32C", VA = "0x97B32C", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x97B220", Offset = "0x97B220", VA = "0x97B220")]
	private void SpawnArrowsOnBothSidesRoutine(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x97B330", Offset = "0x97B330", VA = "0x97B330")]
	private void SpawnArrow(float arrowAngleDifferenceFromOriginalArrow, GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x97B62C", Offset = "0x97B62C", VA = "0x97B62C")]
	[PunRPC]
	private void RpcSetAdditionalArrow(int instantiatedArrowPhotonViewId, int centralArrowPhotonViewId, float arrowAngleDifferenceFromOriginalArrow)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x97B2A8", Offset = "0x97B2A8", VA = "0x97B2A8")]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x97B8F8", Offset = "0x97B8F8", VA = "0x97B8F8", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x97B8FC", Offset = "0x97B8FC", VA = "0x97B8FC")]
	public ArrowRain()
	{
	}
}
[Token(Token = "0x2000299")]
public class BowToHandSnapper : MonoBehaviour
{
	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject bowParent;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 BowParentLocalRotation;

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x97BA80", Offset = "0x97BA80", VA = "0x97BA80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x97BB78", Offset = "0x97BB78", VA = "0x97BB78")]
	public BowToHandSnapper()
	{
	}
}
[Token(Token = "0x200029A")]
public class Explosion : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x200029B")]
	private sealed class <DealDamageRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explosion <>4__this;

		[Token(Token = "0x1700013F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x97C438", Offset = "0x97C438", VA = "0x97C438", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x97C440", Offset = "0x97C440", VA = "0x97C440", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x97C05C", Offset = "0x97C05C", VA = "0x97C05C")]
		[DebuggerHidden]
		public <DealDamageRoutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x97C318", Offset = "0x97C318", VA = "0x97C318", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x97C31C", Offset = "0x97C31C", VA = "0x97C31C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200029C")]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Explosion <>4__this;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x97C560", Offset = "0x97C560", VA = "0x97C560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x97C568", Offset = "0x97C568", VA = "0x97C568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x97C260", Offset = "0x97C260", VA = "0x97C260")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x97C448", Offset = "0x97C448", VA = "0x97C448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x97C44C", Offset = "0x97C44C", VA = "0x97C44C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float delayFromCastToDealDamageToEnemiesInSeconds;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float dealingDamageTimeInSeconds;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource audiosource;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<EnemyGetHitController> hitEnemies;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem spellParticleSystem;

	[Token(Token = "0x1700013D")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x97BB90", Offset = "0x97BB90", VA = "0x97BB90", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013E")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x97BB98", Offset = "0x97BB98", VA = "0x97BB98", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x97BBA0", Offset = "0x97BBA0", VA = "0x97BBA0")]
	private void OnTriggerEnter(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x97BD6C", Offset = "0x97BD6C", VA = "0x97BD6C", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x97BD70", Offset = "0x97BD70", VA = "0x97BD70", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x97BF40", Offset = "0x97BF40", VA = "0x97BF40")]
	private void PlayParticleSystem(Collision collision)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x97BFC8", Offset = "0x97BFC8", VA = "0x97BFC8")]
	public void StartDealDamageRoutine()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x97BFE8", Offset = "0x97BFE8", VA = "0x97BFE8")]
	private IEnumerator DealDamageRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x97C084", Offset = "0x97C084", VA = "0x97C084")]
	private void DealDamage()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x97C0E0", Offset = "0x97C0E0", VA = "0x97C0E0")]
	private void StopDealingDamage()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x97C13C", Offset = "0x97C13C", VA = "0x97C13C", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x97C1AC", Offset = "0x97C1AC", VA = "0x97C1AC")]
	[PunRPC]
	public void StartPhotonDestroySpellWithDelayRoutine()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x97C1DC", Offset = "0x97C1DC", VA = "0x97C1DC")]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x97C288", Offset = "0x97C288", VA = "0x97C288", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x97C290", Offset = "0x97C290", VA = "0x97C290")]
	public Explosion()
	{
	}
}
[Token(Token = "0x200029D")]
public class FireArrow : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x200029E")]
	private sealed class <BurningCoroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireArrow <>4__this;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x97D2E8", Offset = "0x97D2E8", VA = "0x97D2E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x97D2F0", Offset = "0x97D2F0", VA = "0x97D2F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x97CD00", Offset = "0x97CD00", VA = "0x97CD00")]
		[DebuggerHidden]
		public <BurningCoroutine>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x97D1A0", Offset = "0x97D1A0", VA = "0x97D1A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x97D1A4", Offset = "0x97D1A4", VA = "0x97D1A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200029F")]
	private sealed class <PeriodicDamageCoroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireArrow <>4__this;

		[Token(Token = "0x17000147")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x97D424", Offset = "0x97D424", VA = "0x97D424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x97D42C", Offset = "0x97D42C", VA = "0x97D42C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x97CEB0", Offset = "0x97CEB0", VA = "0x97CEB0")]
		[DebuggerHidden]
		public <PeriodicDamageCoroutine>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x97D2F8", Offset = "0x97D2F8", VA = "0x97D2F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x97D2FC", Offset = "0x97D2FC", VA = "0x97D2FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A0")]
	private sealed class <StopPutOnFireSoundRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireArrow <>4__this;

		[Token(Token = "0x17000149")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x97D500", Offset = "0x97D500", VA = "0x97D500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x97D508", Offset = "0x97D508", VA = "0x97D508", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x97CF60", Offset = "0x97CF60", VA = "0x97CF60")]
		[DebuggerHidden]
		public <StopPutOnFireSoundRoutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x97D434", Offset = "0x97D434", VA = "0x97D434", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x97D438", Offset = "0x97D438", VA = "0x97D438", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A1")]
	private sealed class <ExtinguishArrowRoutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireArrow <>4__this;

		[Token(Token = "0x1700014B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x97D5EC", Offset = "0x97D5EC", VA = "0x97D5EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x97D5F4", Offset = "0x97D5F4", VA = "0x97D5F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x97CFFC", Offset = "0x97CFFC", VA = "0x97CFFC")]
		[DebuggerHidden]
		public <ExtinguishArrowRoutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x97D510", Offset = "0x97D510", VA = "0x97D510", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x97D514", Offset = "0x97D514", VA = "0x97D514", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A2")]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FireArrow <>4__this;

		[Token(Token = "0x1700014D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x97D714", Offset = "0x97D714", VA = "0x97D714", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x97D71C", Offset = "0x97D71C", VA = "0x97D71C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x97D0E0", Offset = "0x97D0E0", VA = "0x97D0E0")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x97D5FC", Offset = "0x97D5FC", VA = "0x97D5FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x97D600", Offset = "0x97D600", VA = "0x97D600", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E13")]
	private const float ArrowHeadOffset = 1.4f;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float damageMultiplier;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeOfArrowBurningInSeconds;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float putOnFireGrownScale;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float putOnFireShrinkedScale;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float putOnFireShrinkTimeInSeconds;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource fireArrowHitSound;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource fireArrowOnFireSound;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource putOnFireSound;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeOfPutOnFireSound;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float putOnFireSoundMuteSpeed;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int damagePeriods;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PhotonPrefabPoolElement photonPrefabPoolElement;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private ParticleSystem spellParticleSystem;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isGrowingFire;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isShrinkingFire;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool isMutingPutOnFireSound;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float periodicDamage;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EnemyGetHitController enemyGetHitController;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentDamagePeriods;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool hasDealtWholePeriodicDamage;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WaitForSeconds waitForPeriodicTime;

	[Token(Token = "0x17000143")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x97C570", Offset = "0x97C570", VA = "0x97C570", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000144")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x97C578", Offset = "0x97C578", VA = "0x97C578", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x97C580", Offset = "0x97C580", VA = "0x97C580")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x97C844", Offset = "0x97C844", VA = "0x97C844", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x97CB50", Offset = "0x97CB50", VA = "0x97CB50", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x97CBB8", Offset = "0x97CBB8", VA = "0x97CBB8")]
	private void Burn(Collision collision)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x97CC8C", Offset = "0x97CC8C", VA = "0x97CC8C")]
	private IEnumerator BurningCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x97CD28", Offset = "0x97CD28", VA = "0x97CD28")]
	private void SetFireArrowParent()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x97CE3C", Offset = "0x97CE3C", VA = "0x97CE3C")]
	private IEnumerator PeriodicDamageCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x97CED8", Offset = "0x97CED8", VA = "0x97CED8")]
	private void TryToStopGrowingFire()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x97CEEC", Offset = "0x97CEEC", VA = "0x97CEEC")]
	private IEnumerator StopPutOnFireSoundRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x97C7C4", Offset = "0x97C7C4", VA = "0x97C7C4")]
	private void MutePutOnFireSound()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x97CAD8", Offset = "0x97CAD8", VA = "0x97CAD8")]
	private void PutOnFire()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x97CB30", Offset = "0x97CB30", VA = "0x97CB30")]
	private void ExtinguishArrowWithDelay()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x97CF88", Offset = "0x97CF88", VA = "0x97CF88")]
	private IEnumerator ExtinguishArrowRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x97D024", Offset = "0x97D024", VA = "0x97D024", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x97D05C", Offset = "0x97D05C", VA = "0x97D05C")]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x97D108", Offset = "0x97D108", VA = "0x97D108", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x97D110", Offset = "0x97D110", VA = "0x97D110")]
	public FireArrow()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x97D198", Offset = "0x97D198", VA = "0x97D198")]
	private bool <BurningCoroutine>b__33_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20002A3")]
public class FireClaws : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x20002A4")]
	private sealed class <DealDamageDefaultRoutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireClaws <>4__this;

		[Token(Token = "0x17000151")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x97E4C8", Offset = "0x97E4C8", VA = "0x97E4C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x97E4D0", Offset = "0x97E4D0", VA = "0x97E4D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x97E064", Offset = "0x97E064", VA = "0x97E064")]
		[DebuggerHidden]
		public <DealDamageDefaultRoutine>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x97E378", Offset = "0x97E378", VA = "0x97E378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x97E37C", Offset = "0x97E37C", VA = "0x97E37C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A5")]
	private sealed class <DealDamageToFlyingUnitsRoutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireClaws <>4__this;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0x97E5B8", Offset = "0x97E5B8", VA = "0x97E5B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0x97E5C0", Offset = "0x97E5C0", VA = "0x97E5C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x97E08C", Offset = "0x97E08C", VA = "0x97E08C")]
		[DebuggerHidden]
		public <DealDamageToFlyingUnitsRoutine>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x97E4D8", Offset = "0x97E4D8", VA = "0x97E4D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x97E4DC", Offset = "0x97E4DC", VA = "0x97E4DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A6")]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FireClaws <>4__this;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x97E6E0", Offset = "0x97E6E0", VA = "0x97E6E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x97E6E8", Offset = "0x97E6E8", VA = "0x97E6E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x97E2B8", Offset = "0x97E2B8", VA = "0x97E2B8")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x97E5C8", Offset = "0x97E5C8", VA = "0x97E5C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x97E5CC", Offset = "0x97E5CC", VA = "0x97E5CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E3C")]
	private const float timeAfterFireClawsExploding = 3f;

	[Token(Token = "0x4000E3D")]
	private const float timeFromExplosionTillParticleEffectDone = 1f;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LayerMask groundHitLayerMask;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource defaultAudioSource;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource explosionAudioSource;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CapsuleCollider defaultDamageCollider;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float dealingDamageTimeInSeconds;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float defaultDamage;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float damageFromEplxosionToFlyingUnits;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private LayerType enemyLayer;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<EnemyGetHitController> hitEnemies;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EnemyGetHitController explodeImmediatelyEnemyGetHitController;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem spellParticleSystem;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool explodeImmediately;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SimpleHitInfo explodeImmediatelyUnitHitInfo;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SimpleHitInfo groundUnitHitInfo;

	[Token(Token = "0x1700014F")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x97D724", Offset = "0x97D724", VA = "0x97D724", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x97D72C", Offset = "0x97D72C", VA = "0x97D72C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x97D734", Offset = "0x97D734", VA = "0x97D734", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x97D940", Offset = "0x97D940", VA = "0x97D940", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x97DAC4", Offset = "0x97DAC4", VA = "0x97DAC4")]
	private void DeparentSpellGameobject()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x97DC40", Offset = "0x97DC40", VA = "0x97DC40")]
	private void CreateFireClawsVisuals()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x97DAF4", Offset = "0x97DAF4", VA = "0x97DAF4")]
	private void SetSpellAtSpace(Collision collision, EnemyInfo enemyInfo)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x97DCB4", Offset = "0x97DCB4", VA = "0x97DCB4")]
	private void SetSpellAtSpaceWhenHitEnemyUnit(Collision collision, EnemyInfo enemyInfo)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x97DD50", Offset = "0x97DD50", VA = "0x97DD50")]
	private void SetSpellAtSpaceWhenHitFlyingUnit(Collision collision)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x97DDF8", Offset = "0x97DDF8", VA = "0x97DDF8")]
	private void SetSpellAtSpaceWhenHitDefaultUnit(Collision collision)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x97DC7C", Offset = "0x97DC7C", VA = "0x97DC7C")]
	private void DealDamageDependingOnUnit()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x97DF44", Offset = "0x97DF44", VA = "0x97DF44")]
	public void StartDealDamageRoutine()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x97DFF0", Offset = "0x97DFF0", VA = "0x97DFF0")]
	private IEnumerator DealDamageDefaultRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x97DF7C", Offset = "0x97DF7C", VA = "0x97DF7C")]
	private IEnumerator DealDamageToFlyingUnitsRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x97E0B4", Offset = "0x97E0B4", VA = "0x97E0B4")]
	private void ToogleDamageCollider(bool value)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x97DC14", Offset = "0x97DC14", VA = "0x97DC14")]
	private void PlayAudioSource()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x97E0D4", Offset = "0x97E0D4", VA = "0x97E0D4")]
	private void OnTriggerEnter(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x97E234", Offset = "0x97E234", VA = "0x97E234", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x97D8BC", Offset = "0x97D8BC", VA = "0x97D8BC")]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x97E2E0", Offset = "0x97E2E0", VA = "0x97E2E0", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x97E2E8", Offset = "0x97E2E8", VA = "0x97E2E8")]
	public FireClaws()
	{
	}
}
[Token(Token = "0x20002A7")]
public class FreezeController : MonoBehaviour, IResetable, IPunObservable
{
	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEngine.Object objectFreezable;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public bool isFreezeResistant;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IFreezable freezable;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isFrozen;

	[Token(Token = "0x17000157")]
	public bool IsFrozen
	{
		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x97E828", Offset = "0x97E828", VA = "0x97E828")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x97E830", Offset = "0x97E830", VA = "0x97E830")]
		set
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event Action OnFreeze
	{
		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x97E6F0", Offset = "0x97E6F0", VA = "0x97E6F0")]
		add
		{
		}
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x97E78C", Offset = "0x97E78C", VA = "0x97E78C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x97E920", Offset = "0x97E920", VA = "0x97E920")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x97E988", Offset = "0x97E988", VA = "0x97E988", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x97E9CC", Offset = "0x97E9CC", VA = "0x97E9CC", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x97EAA0", Offset = "0x97EAA0", VA = "0x97EAA0")]
	public FreezeController()
	{
	}
}
[Token(Token = "0x20002A8")]
public class FreezeStorm : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x20002A9")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyGetHitController enemyGetHitController;

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x97F37C", Offset = "0x97F37C", VA = "0x97F37C")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x980290", Offset = "0x980290", VA = "0x980290")]
		internal bool <OnTriggerEnter>b__0(FreezeStormHitTarget hitTarget)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AA")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyGetHitController enemyGetHitController;

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x97F670", Offset = "0x97F670", VA = "0x97F670")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x980300", Offset = "0x980300", VA = "0x980300")]
		internal bool <OnTriggerExit>b__0(FreezeStormHitTarget hitTarget)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AB")]
	private sealed class <DealDamageCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FreezeStorm <>4__this;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0x980484", Offset = "0x980484", VA = "0x980484", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x98048C", Offset = "0x98048C", VA = "0x98048C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x97FE18", Offset = "0x97FE18", VA = "0x97FE18")]
		[DebuggerHidden]
		public <DealDamageCoroutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x980370", Offset = "0x980370", VA = "0x980370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x980374", Offset = "0x980374", VA = "0x980374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AC")]
	private sealed class <DecreaseVolume>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FreezeStorm <>4__this;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0x980590", Offset = "0x980590", VA = "0x980590", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0x980598", Offset = "0x980598", VA = "0x980598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x97FE40", Offset = "0x97FE40", VA = "0x97FE40")]
		[DebuggerHidden]
		public <DecreaseVolume>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x980494", Offset = "0x980494", VA = "0x980494", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x980498", Offset = "0x980498", VA = "0x980498", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AD")]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FreezeStorm <>4__this;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0x9806B8", Offset = "0x9806B8", VA = "0x9806B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0x9806C0", Offset = "0x9806C0", VA = "0x9806C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x980128", Offset = "0x980128", VA = "0x980128")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x9805A0", Offset = "0x9805A0", VA = "0x9805A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x9805A4", Offset = "0x9805A4", VA = "0x9805A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E5D")]
	private const float volumeDecreaseRate = 0.35f;

	[Token(Token = "0x4000E5E")]
	private const float baseVolumeValue = 0.7f;

	[Token(Token = "0x4000E5F")]
	private const float volumeDecreaseTimeDivider = 1.35f;

	[Token(Token = "0x4000E60")]
	private const float minimalVolume = 0f;

	[Token(Token = "0x4000E61")]
	private const int notFoundIndex = -1;

	[Token(Token = "0x4000E62")]
	private const float dealingDamageTimeInSeconds = 9f;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CapsuleCollider capsuleCollider;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float heightOfFreezeStorm;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float delayFromCastToDealDamageToEnemiesInSeconds;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float timeBetweenHitsInSeconds;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem spellParticleSystem;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<FreezeStormHitTarget> hitTargets;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<FreezeStormHitTarget> toRemoveHitTargets;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaitForSecondsRealtime decreaseVolumeDelay;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HitInfo hitInfo;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x17000158")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x97EAA8", Offset = "0x97EAA8", VA = "0x97EAA8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000159")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x97EAB0", Offset = "0x97EAB0", VA = "0x97EAB0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x97EAB8", Offset = "0x97EAB8", VA = "0x97EAB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x97EFE8", Offset = "0x97EFE8", VA = "0x97EFE8")]
	private void OnTriggerEnter(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x97F4C4", Offset = "0x97F4C4", VA = "0x97F4C4")]
	private void OnTriggerExit(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x97F678", Offset = "0x97F678", VA = "0x97F678")]
	private bool IsAbleToUnslow(FreezeStormHitTarget freezeStormHitTarget)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x97F740", Offset = "0x97F740", VA = "0x97F740", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x97F818", Offset = "0x97F818", VA = "0x97F818")]
	public void CreateFreezeStorm(Collision collision)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x97FA40", Offset = "0x97FA40", VA = "0x97FA40")]
	public void AdjustColliderHeight(Transform origin)
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x97FBEC", Offset = "0x97FBEC", VA = "0x97FBEC")]
	private IEnumerator DealDamageCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x97EB64", Offset = "0x97EB64", VA = "0x97EB64")]
	private void RemoveKilledEnemiesFromEnemiesToHitList()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x97FC60", Offset = "0x97FC60", VA = "0x97FC60")]
	private IEnumerator DecreaseVolume()
	{
		return null;
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x97FE68", Offset = "0x97FE68", VA = "0x97FE68")]
	private void StartDealingDamage()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x97FE88", Offset = "0x97FE88", VA = "0x97FE88")]
	private void StopDealingDamage()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x97FA24", Offset = "0x97FA24", VA = "0x97FA24")]
	private void PlayStormSound()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x97EE94", Offset = "0x97EE94", VA = "0x97EE94")]
	private void HitSpellTargets()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x97FCD4", Offset = "0x97FCD4", VA = "0x97FCD4")]
	private int CalculateOneLayerMaskToExclude(List<LayerType> layerList)
	{
		return default(int);
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x97FFCC", Offset = "0x97FFCC", VA = "0x97FFCC", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x97FFD0", Offset = "0x97FFD0", VA = "0x97FFD0", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x980074", Offset = "0x980074", VA = "0x980074")]
	[PunRPC]
	public void StartPhotonDestroySpellWithDelayRoutine()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x9800A4", Offset = "0x9800A4", VA = "0x9800A4")]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x980150", Offset = "0x980150", VA = "0x980150", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x980158", Offset = "0x980158", VA = "0x980158")]
	public FreezeStorm()
	{
	}
}
[Token(Token = "0x20002AE")]
public class FreezeStormHitTarget
{
	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnemyGetHitController enemyGetHitController;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SlowingController slowingController;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Collider> colliders;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeFromLastHit;

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x97F384", Offset = "0x97F384", VA = "0x97F384")]
	public FreezeStormHitTarget(EnemyGetHitController enemyGetHitController, SlowingController slowingController, Collider collider)
	{
	}
}
[Token(Token = "0x20002AF")]
public class FreezingArrow : MonoBehaviourPun, IAbility
{
	[Token(Token = "0x20002B0")]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FreezingArrow <>4__this;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0x980B10", Offset = "0x980B10", VA = "0x980B10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x980B18", Offset = "0x980B18", VA = "0x980B18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x9809C4", Offset = "0x9809C4", VA = "0x9809C4")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x9809F8", Offset = "0x9809F8", VA = "0x9809F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x9809FC", Offset = "0x9809FC", VA = "0x9809FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PhotonPrefabPoolElement photonPrefabPoolElement;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ArrowHitInfo simpleHitInfo;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject arrowObject;

	[Token(Token = "0x17000160")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x9806C8", Offset = "0x9806C8", VA = "0x9806C8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000161")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x9806D0", Offset = "0x9806D0", VA = "0x9806D0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x9806D8", Offset = "0x9806D8", VA = "0x9806D8", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x9807CC", Offset = "0x9807CC", VA = "0x9807CC", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x980910", Offset = "0x980910", VA = "0x980910")]
	public void StartPhotonDestroySpellWithDelayRoutine()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x980940", Offset = "0x980940", VA = "0x980940")]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x9809EC", Offset = "0x9809EC", VA = "0x9809EC", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x9809F0", Offset = "0x9809F0", VA = "0x9809F0")]
	public FreezingArrow()
	{
	}
}
[Token(Token = "0x20002B1")]
public class IceBolt : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x20002B2")]
	public delegate void FreezingEnemyWithAOE(int playerID, float damage, bool isMagic);

	[Token(Token = "0x20002B3")]
	private sealed class <DisableFreezingCollider>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IceBolt <>4__this;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0x9815C8", Offset = "0x9815C8", VA = "0x9815C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x9815D0", Offset = "0x9815D0", VA = "0x9815D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x9813A0", Offset = "0x9813A0", VA = "0x9813A0")]
		[DebuggerHidden]
		public <DisableFreezingCollider>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x981508", Offset = "0x981508", VA = "0x981508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x98150C", Offset = "0x98150C", VA = "0x98150C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002B4")]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IceBolt <>4__this;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x9816F0", Offset = "0x9816F0", VA = "0x9816F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x9816F8", Offset = "0x9816F8", VA = "0x9816F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x9813E4", Offset = "0x9813E4", VA = "0x9813E4")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x9815D8", Offset = "0x9815D8", VA = "0x9815D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x9815DC", Offset = "0x9815DC", VA = "0x9815DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E89")]
	private const float FreezingWindowTimeInSeconds = 2f;

	[Token(Token = "0x4000E8A")]
	private const int maxNumberOfFrozenEnemies = 3;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider aOECollider;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem spellParticleSystem;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<EnemyGetHitController> hitEnemies;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject arrowObject;

	[Token(Token = "0x17000164")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x980C90", Offset = "0x980C90", VA = "0x980C90", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000165")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x980C98", Offset = "0x980C98", VA = "0x980C98", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000020")]
	public static event FreezingEnemyWithAOE OnFreezingEnemyWithAOE
	{
		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x980B20", Offset = "0x980B20", VA = "0x980B20")]
		add
		{
		}
		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x980BD8", Offset = "0x980BD8", VA = "0x980BD8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x980CA0", Offset = "0x980CA0", VA = "0x980CA0")]
	public void OnTriggerEnter(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x980E80", Offset = "0x980E80", VA = "0x980E80", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x981068", Offset = "0x981068", VA = "0x981068", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x981264", Offset = "0x981264", VA = "0x981264")]
	private void CreateIceBolt(Vector3 position)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x9812CC", Offset = "0x9812CC", VA = "0x9812CC")]
	private void PlaceSpellInWorldSpace(Vector3 position)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x98132C", Offset = "0x98132C", VA = "0x98132C")]
	private IEnumerator DisableFreezingCollider()
	{
		return null;
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x9813C8", Offset = "0x9813C8", VA = "0x9813C8", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x980FE4", Offset = "0x980FE4", VA = "0x980FE4")]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x98140C", Offset = "0x98140C", VA = "0x98140C", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x981414", Offset = "0x981414", VA = "0x981414")]
	public IceBolt()
	{
	}
}
[Token(Token = "0x20002B5")]
internal class IceShield : MonoBehaviourPun, IAbility
{
	[Token(Token = "0x20002B6")]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IceShield <>4__this;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x981CA0", Offset = "0x981CA0", VA = "0x981CA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x981CA8", Offset = "0x981CA8", VA = "0x981CA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x981A10", Offset = "0x981A10", VA = "0x981A10")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x981AF0", Offset = "0x981AF0", VA = "0x981AF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x981AF4", Offset = "0x981AF4", VA = "0x981AF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002B7")]
	private sealed class <StartBlinking>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IceShield <>4__this;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <blinkTime>5__2;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material <iceShieldMaterial>5__3;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__4;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x981EC4", Offset = "0x981EC4", VA = "0x981EC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x981ECC", Offset = "0x981ECC", VA = "0x981ECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x981ABC", Offset = "0x981ABC", VA = "0x981ABC")]
		[DebuggerHidden]
		public <StartBlinking>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x981CB0", Offset = "0x981CB0", VA = "0x981CB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x981CB4", Offset = "0x981CB4", VA = "0x981CB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LayerMask groundHitLayerMask;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private LayerType enemyLayer;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float blinkingTimeInPercentage;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float blinkingSwitches;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float blinkingRatio;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float fadeRatio;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float startFadeRatio;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject abilityMesh;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ScalerOverTime scalerOverTime;

	[Token(Token = "0x1700016A")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x981700", Offset = "0x981700", VA = "0x981700", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016B")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x981708", Offset = "0x981708", VA = "0x981708", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x981710", Offset = "0x981710", VA = "0x981710", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x981714", Offset = "0x981714", VA = "0x981714", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x981718", Offset = "0x981718", VA = "0x981718")]
	public void CreateIceShield(Collision collision)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x9819E0", Offset = "0x9819E0", VA = "0x9819E0")]
	public void SetReferences(ScalerOverTime _scalerOverTime, GameObject _abilityMesh)
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x981900", Offset = "0x981900", VA = "0x981900")]
	private void CreateIceShield(Vector3 position)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x98188C", Offset = "0x98188C", VA = "0x98188C")]
	private bool IsEnemyCollider(int layerID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x98195C", Offset = "0x98195C", VA = "0x98195C")]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x981A38", Offset = "0x981A38", VA = "0x981A38")]
	private IEnumerator StartBlinking(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x981AE4", Offset = "0x981AE4", VA = "0x981AE4", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x981AE8", Offset = "0x981AE8", VA = "0x981AE8")]
	public IceShield()
	{
	}
}
[Token(Token = "0x20002B8")]
public class MeteorShower : MonoBehaviourPun, IAbility, IResetable
{
	[Token(Token = "0x20002B9")]
	private sealed class <DealDamageRoutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeteorShower <>4__this;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x982AEC", Offset = "0x982AEC", VA = "0x982AEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x982AF4", Offset = "0x982AF4", VA = "0x982AF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x982660", Offset = "0x982660", VA = "0x982660")]
		[DebuggerHidden]
		public <DealDamageRoutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x982A3C", Offset = "0x982A3C", VA = "0x982A3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x982A40", Offset = "0x982A40", VA = "0x982A40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002BA")]
	private sealed class <DecreaseVolumeDelayed>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeteorShower <>4__this;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x982BF8", Offset = "0x982BF8", VA = "0x982BF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x982C00", Offset = "0x982C00", VA = "0x982C00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x982688", Offset = "0x982688", VA = "0x982688")]
		[DebuggerHidden]
		public <DecreaseVolumeDelayed>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x982AFC", Offset = "0x982AFC", VA = "0x982AFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x982B00", Offset = "0x982B00", VA = "0x982B00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002BB")]
	private sealed class <PhotonDestroySpellWithDelayRoutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeteorShower <>4__this;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x982D20", Offset = "0x982D20", VA = "0x982D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x982D28", Offset = "0x982D28", VA = "0x982D28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x982850", Offset = "0x982850", VA = "0x982850")]
		[DebuggerHidden]
		public <PhotonDestroySpellWithDelayRoutine>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x982C08", Offset = "0x982C08", VA = "0x982C08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x982C0C", Offset = "0x982C0C", VA = "0x982C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000EB0")]
	private const float minimalVolume = 0f;

	[Token(Token = "0x4000EB1")]
	private const float volumeDecreaseRate = 0.35f;

	[Token(Token = "0x4000EB2")]
	private const float baseVolumeValue = 0.7f;

	[Token(Token = "0x4000EB3")]
	private const float volumeDecreaseTimeDivider = 1.35f;

	[Token(Token = "0x4000EB4")]
	private const float dealingDamageTimeInSeconds = 6f;

	[Token(Token = "0x4000EB5")]
	private const float delayFromCastToDealDamageToEnemiesInSeconds = 1f;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSecondsRealtime decreaseVolumeDelay;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds dealingDamageDelay;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds dealingDamage;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float heightOfMeteorsSpawnArea;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AbilityData abilityData;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private CapsuleCollider capsuleCollider;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AbilityLevelController abilityLelvelController;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SimpleHitInfo simpleHitInfo;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<EnemyGetHitController> hitEnemies;

	[Token(Token = "0x17000170")]
	public AbilityLevelController AbilityLevelController
	{
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x981ED4", Offset = "0x981ED4", VA = "0x981ED4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000171")]
	public AbilityData AbilityData
	{
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x981EDC", Offset = "0x981EDC", VA = "0x981EDC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x981EE4", Offset = "0x981EE4", VA = "0x981EE4", Slot = "8")]
	public void SetQualityReference(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x981EEC", Offset = "0x981EEC", VA = "0x981EEC", Slot = "6")]
	public void Initialize(GameObject arrowObject)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x981FC4", Offset = "0x981FC4", VA = "0x981FC4", Slot = "7")]
	public void InvokeAbility(Collision collision)
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x981FC8", Offset = "0x981FC8", VA = "0x981FC8")]
	public void CreateMeteorShower(Collision collision)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x9821D4", Offset = "0x9821D4", VA = "0x9821D4")]
	public void AdjustColliderHeight(Transform origin)
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x9825AC", Offset = "0x9825AC", VA = "0x9825AC")]
	[PunRPC]
	public void StartPhotonDestroySpellWithDelayRoutine()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x982380", Offset = "0x982380", VA = "0x982380")]
	private IEnumerator DealDamageRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x9823F4", Offset = "0x9823F4", VA = "0x9823F4")]
	private IEnumerator DecreaseVolumeDelayed()
	{
		return null;
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x9826B0", Offset = "0x9826B0", VA = "0x9826B0")]
	private void StartDealingDamage()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x9826D0", Offset = "0x9826D0", VA = "0x9826D0")]
	private void StopDealingDamage()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x9826F0", Offset = "0x9826F0", VA = "0x9826F0")]
	private void OnTriggerEnter(Collider colliderThatTriggered)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x982468", Offset = "0x982468", VA = "0x982468")]
	private int CalculateOneLayerMaskToExclude(List<LayerType> layerList)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x9825DC", Offset = "0x9825DC", VA = "0x9825DC")]
	private IEnumerator PhotonDestroySpellWithDelayRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x982878", Offset = "0x982878", VA = "0x982878", Slot = "9")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x982904", Offset = "0x982904", VA = "0x982904")]
	public MeteorShower()
	{
	}
}
[Token(Token = "0x20002BC")]
public class SpellInGameSlot : MonoBehaviour
{
	[Token(Token = "0x4000ECB")]
	private const float slotInitialCooldownValue = 0f;

	[Token(Token = "0x4000ECC")]
	private const int fullFillValue = 1;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float slotCooldown;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SlotPostion position;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image spellImage;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image cooldownImage;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IAbility spell;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float cooldownTimeLeft;

	[Token(Token = "0x17000178")]
	public IAbility Spell
	{
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x982D30", Offset = "0x982D30", VA = "0x982D30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x982D38", Offset = "0x982D38", VA = "0x982D38")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public bool IsCooldownFinished
	{
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x982D58", Offset = "0x982D58", VA = "0x982D58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017A")]
	public float ActualCooldownLeftLevel
	{
		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x982D68", Offset = "0x982D68", VA = "0x982D68")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700017B")]
	public bool IsHighlited
	{
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x982D78", Offset = "0x982D78", VA = "0x982D78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x982E64", Offset = "0x982E64", VA = "0x982E64")]
	public void Show()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x982EF4", Offset = "0x982EF4", VA = "0x982EF4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x982F84", Offset = "0x982F84", VA = "0x982F84")]
	public void ProcessUpdate()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x982FEC", Offset = "0x982FEC", VA = "0x982FEC")]
	public void ResetCooldownTime()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x982FF8", Offset = "0x982FF8", VA = "0x982FF8")]
	public SpellInGameSlot()
	{
	}
}
[Token(Token = "0x20002BD")]
public class Spells : MonoBehaviour
{
	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] abilityObject;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<IAbility> abilities;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Spells instance;

	[Token(Token = "0x1700017C")]
	public static Spells Instance
	{
		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x983000", Offset = "0x983000", VA = "0x983000")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x983138", Offset = "0x983138", VA = "0x983138")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x9832A0", Offset = "0x9832A0", VA = "0x9832A0")]
	private void InitAblitiesList()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x983444", Offset = "0x983444", VA = "0x983444")]
	private void InitializePlayerPrefs()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x9836F0", Offset = "0x9836F0", VA = "0x9836F0")]
	public IAbility GetSpellByType(AbilityType spellType)
	{
		return null;
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x983984", Offset = "0x983984", VA = "0x983984")]
	public IAbility GetSpellByTypeName(string spellTypeName)
	{
		return null;
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x983C28", Offset = "0x983C28", VA = "0x983C28")]
	public Spells()
	{
	}
}
[Token(Token = "0x20002BE")]
public class SpellsGUI : MonoBehaviour
{
	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpellInGameSlot[] spellSlots;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image backgroundImage;

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x983CB0", Offset = "0x983CB0", VA = "0x983CB0")]
	public SpellInGameSlot GetSlotByPosition(SlotPostion slotPosition)
	{
		return null;
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x983DDC", Offset = "0x983DDC", VA = "0x983DDC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x983E4C", Offset = "0x983E4C", VA = "0x983E4C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x983EBC", Offset = "0x983EBC", VA = "0x983EBC")]
	public void AttachSpellsToSlots()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x98426C", Offset = "0x98426C", VA = "0x98426C")]
	private void AttachSpellToSlot(SlotPostion slotPosition, IAbility spell)
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x984390", Offset = "0x984390", VA = "0x984390")]
	public void UpdateImage(SlotPostion slotPosition)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x984460", Offset = "0x984460", VA = "0x984460")]
	public void HighlightSlot(SlotPostion slotPosition)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x984584", Offset = "0x984584", VA = "0x984584")]
	public bool IsHighlightened(SlotPostion slotPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x984684", Offset = "0x984684", VA = "0x984684")]
	public void UnhighlightSlot(SlotPostion slotPosition)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x9847D0", Offset = "0x9847D0", VA = "0x9847D0")]
	public void UnhighlightAllSlots()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x984B0C", Offset = "0x984B0C", VA = "0x984B0C")]
	public SpellsGUI()
	{
	}
}
[Token(Token = "0x20002BF")]
public class GateExplosionController : MonoBehaviour, IGateExplosionController
{
	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject particleObject;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject particleObjectMobile;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isCityDestroyedSoundsPlaying;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource ExplosionAudioSource;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource FireAudioSource;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool hasExplosionSoundFinnished;

	[Token(Token = "0x1700017D")]
	public GameObject ParticleObject
	{
		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x984B14", Offset = "0x984B14", VA = "0x984B14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x984B84", Offset = "0x984B84", VA = "0x984B84", Slot = "4")]
	public void DestroyCity()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x984C44", Offset = "0x984C44", VA = "0x984C44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x984D88", Offset = "0x984D88", VA = "0x984D88")]
	public GateExplosionController()
	{
	}
}
[Token(Token = "0x20002C0")]
public class MenuWindowsController : MonoBehaviour
{
	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] menuWindows;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject menuWindowsParent;

	[Token(Token = "0x1700017E")]
	public bool IsMenuVisible
	{
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x984D90", Offset = "0x984D90", VA = "0x984D90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x984DAC", Offset = "0x984DAC", VA = "0x984DAC")]
	public void ShowWindows()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x984DCC", Offset = "0x984DCC", VA = "0x984DCC")]
	public void HideWindows()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x984E30", Offset = "0x984E30", VA = "0x984E30")]
	public MenuWindowsController()
	{
	}
}
[Token(Token = "0x20002C1")]
public class HeadsetQualityVersionSetter : MonoBehaviour
{
	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x984E38", Offset = "0x984E38", VA = "0x984E38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x984E48", Offset = "0x984E48", VA = "0x984E48")]
	private void DetectHeadsetQuality()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x984F38", Offset = "0x984F38", VA = "0x984F38")]
	private void SetQuality()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x984FB0", Offset = "0x984FB0", VA = "0x984FB0")]
	public HeadsetQualityVersionSetter()
	{
	}
}
[Token(Token = "0x20002C2")]
public class ProjectSettings : ProjectSettingsCore
{
	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isReleaseBuild;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool isArcadeBuild;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool isFreeItemsInShop;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	private bool isTournamentBuild;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool isSpellsTestingBuild;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool isBowSpellsBuild;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[SerializeField]
	private bool isOrcCaptainEnabled;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[SerializeField]
	private bool isPauseVotingEnabled;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool isEquipmentBonusEnabled;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool isSkippingWavesAvailable;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int wavesToSkipCount;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isFastShootingLockAvailable;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool isVoiceChatDisabled;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[SerializeField]
	private bool isDiscordLinkDisabled;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[SerializeField]
	private bool isLeaderboardDisabled;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string gameVersion;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string tournamentPhotonID;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AWSEndpointType aWSEndpointType;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextAsset changelog;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Quality gameQuality;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private VRSDK vRSDK;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TargetPlatform currentPlatform;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private CloudRegionCode defaultCloudRegionCode;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Maps maps;

	[Token(Token = "0x1700017F")]
	public override bool IsReleaseBuild
	{
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x984FB8", Offset = "0x984FB8", VA = "0x984FB8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000180")]
	public override bool IsArcadeBuild
	{
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x984FC0", Offset = "0x984FC0", VA = "0x984FC0", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000181")]
	public bool IsFreeItemsInShop
	{
		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x984FC8", Offset = "0x984FC8", VA = "0x984FC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000182")]
	public bool IsTournamentBuild
	{
		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x984FD0", Offset = "0x984FD0", VA = "0x984FD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000183")]
	public bool IsSpellsTestingBuild
	{
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x984FD8", Offset = "0x984FD8", VA = "0x984FD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000184")]
	public bool IsBowSpellsBuild
	{
		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x984FE0", Offset = "0x984FE0", VA = "0x984FE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000185")]
	public bool IsOrcCaptainEnabled
	{
		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x984FE8", Offset = "0x984FE8", VA = "0x984FE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000186")]
	public bool IsPauseVotingEnabled
	{
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x984FF0", Offset = "0x984FF0", VA = "0x984FF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000187")]
	public bool IsEquipmentBonusEnabled
	{
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x984FF8", Offset = "0x984FF8", VA = "0x984FF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000188")]
	public bool IsSkippingWavesAvailable
	{
		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x985000", Offset = "0x985000", VA = "0x985000")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000189")]
	public int WavesToSkipCount
	{
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x985008", Offset = "0x985008", VA = "0x985008")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018A")]
	public bool IsFastShootingLockAvailable
	{
		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x985010", Offset = "0x985010", VA = "0x985010")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018B")]
	public override string GameVersion
	{
		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x985018", Offset = "0x985018", VA = "0x985018", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018C")]
	public string TournamentPhotonID
	{
		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x985020", Offset = "0x985020", VA = "0x985020")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018D")]
	public AWSEndpointType AWSEndpointType
	{
		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x985028", Offset = "0x985028", VA = "0x985028")]
		get
		{
			return default(AWSEndpointType);
		}
	}

	[Token(Token = "0x1700018E")]
	public override TextAsset Changelog
	{
		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x985030", Offset = "0x985030", VA = "0x985030", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018F")]
	public override Maps Maps
	{
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x985038", Offset = "0x985038", VA = "0x985038", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000190")]
	public override Quality GameQuality
	{
		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x985040", Offset = "0x985040", VA = "0x985040", Slot = "9")]
		get
		{
			return default(Quality);
		}
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x985048", Offset = "0x985048", VA = "0x985048", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000191")]
	public override TargetPlatform CurrentPlatform
	{
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x985050", Offset = "0x985050", VA = "0x985050", Slot = "13")]
		get
		{
			return default(TargetPlatform);
		}
		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x985058", Offset = "0x985058", VA = "0x985058", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x17000192")]
	public override VRSDK VRSDK
	{
		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x985060", Offset = "0x985060", VA = "0x985060", Slot = "11")]
		get
		{
			return default(VRSDK);
		}
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x985068", Offset = "0x985068", VA = "0x985068", Slot = "12")]
		set
		{
		}
	}

	[Token(Token = "0x17000193")]
	public override CloudRegionCode DefaultCloudRegionCode
	{
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x985070", Offset = "0x985070", VA = "0x985070", Slot = "15")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x985078", Offset = "0x985078", VA = "0x985078", Slot = "16")]
		set
		{
		}
	}

	[Token(Token = "0x17000194")]
	public override bool IsVoiceChatDisabled
	{
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x985080", Offset = "0x985080", VA = "0x985080", Slot = "17")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x985088", Offset = "0x985088", VA = "0x985088", Slot = "18")]
		set
		{
		}
	}

	[Token(Token = "0x17000195")]
	public override bool IsDiscordLinkDisabled
	{
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x985094", Offset = "0x985094", VA = "0x985094", Slot = "19")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x98509C", Offset = "0x98509C", VA = "0x98509C", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x17000196")]
	public override bool IsLeaderboardDisabled
	{
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x9850A8", Offset = "0x9850A8", VA = "0x9850A8", Slot = "21")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x9850B0", Offset = "0x9850B0", VA = "0x9850B0", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x9850BC", Offset = "0x9850BC", VA = "0x9850BC")]
	public ProjectSettings()
	{
	}
}
[Token(Token = "0x20002C3")]
public struct TouchpadArea
{
	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float minAngle;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float maxAngle;
}
[Token(Token = "0x20002C4")]
public class TouchpadSelectController : MonoBehaviour
{
	[Token(Token = "0x4000EFA")]
	private const int selectionParts = 4;

	[Token(Token = "0x4000EFB")]
	private const float requiredDistanceFromCenter = 0.3f;

	[Token(Token = "0x4000EFC")]
	private const float maximumAngle = 360f;

	[Token(Token = "0x4000EFD")]
	private const int nothingSelectedValue = -1;

	[Token(Token = "0x4000EFE")]
	private const float startingAngle = 45f;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TouchpadArea[] touchpadAreas;

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x9850CC", Offset = "0x9850CC", VA = "0x9850CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x985130", Offset = "0x985130", VA = "0x985130")]
	public int GetSelectedItemIndex(Vector2 touchpadAxis)
	{
		return default(int);
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x985318", Offset = "0x985318", VA = "0x985318")]
	public TouchpadSelectController()
	{
	}
}
[Token(Token = "0x20002C5")]
public class VotedPauseVisualsController : MonoBehaviour
{
	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VotedPauseController votedPauseController;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject GUIObject;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject votingSuccessObject;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text timerText;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int minutesLeft;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int secondsLeft;

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x98537C", Offset = "0x98537C", VA = "0x98537C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x9854E0", Offset = "0x9854E0", VA = "0x9854E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x985644", Offset = "0x985644", VA = "0x985644")]
	private void UpdateActive()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x9856C0", Offset = "0x9856C0", VA = "0x9856C0")]
	private void UpdateTimerText()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x985884", Offset = "0x985884", VA = "0x985884")]
	public VotedPauseVisualsController()
	{
	}
}
[Token(Token = "0x20002C6")]
public class GameInfo : GameInfoCore
{
	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isFreeItemsInShop;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool isTournamentBuild;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool IsSpellsTestingBuild;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool isBowSpellsBuild;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool IsOrcCaptainEnabled;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool IsEquipmentBonusEnabled;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public static bool isTorsoCoopBuild;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AWSEndpointType awsEndpointType;
}
[Token(Token = "0x20002C7")]
public class GoldGiver : MonoBehaviour
{
	[Token(Token = "0x4000F0E")]
	private const int goldToAdd = 100;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShopController shopController;

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x98588C", Offset = "0x98588C", VA = "0x98588C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x985914", Offset = "0x985914", VA = "0x985914")]
	public void GiveGold()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x985988", Offset = "0x985988", VA = "0x985988")]
	public GoldGiver()
	{
	}
}
[Token(Token = "0x20002C8")]
public class ArcheryController : MonoBehaviour
{
	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool handsActive;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject bowHandController;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ArrowHandController arrowHandController;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BowController bowController;

	[Token(Token = "0x17000197")]
	public bool isArrowAttached
	{
		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x985C00", Offset = "0x985C00", VA = "0x985C00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000198")]
	public bool IsActive
	{
		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x985C1C", Offset = "0x985C1C", VA = "0x985C1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x985C24", Offset = "0x985C24", VA = "0x985C24")]
		set
		{
		}
	}

	[Token(Token = "0x17000199")]
	public bool CanAttachArrow
	{
		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x985CF8", Offset = "0x985CF8", VA = "0x985CF8")]
		set
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event Action OnArrowAttach
	{
		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x985990", Offset = "0x985990", VA = "0x985990")]
		add
		{
		}
		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x985A2C", Offset = "0x985A2C", VA = "0x985A2C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event Action OnArrowDetach
	{
		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x985AC8", Offset = "0x985AC8", VA = "0x985AC8")]
		add
		{
		}
		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x985B64", Offset = "0x985B64", VA = "0x985B64")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x985D44", Offset = "0x985D44", VA = "0x985D44")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x985EAC", Offset = "0x985EAC", VA = "0x985EAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x986014", Offset = "0x986014", VA = "0x986014")]
	internal void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x986034", Offset = "0x986034", VA = "0x986034")]
	public ArcheryController()
	{
	}
}
[Token(Token = "0x20002C9")]
public class ArrowHandController : MonoBehaviourPun, IPunObservable, IResetable, ISettable
{
	[Token(Token = "0x4000F16")]
	private const float maxDistanceToAttachArrow = 0.1f;

	[Token(Token = "0x4000F17")]
	private const float inputTriggerMinValue = 0.2f;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform handControlller;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform handParent;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform inHandArrowParent;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BowController bow;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource attachedArrowSound;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject arrow;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private InputActionReference interactionInput;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isAttachArrowAnimationPlaying;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isDetachArrowAnimationPlaying;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion handDefaultRotation;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handDefaultPosition;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lerpValue;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool canAttachArrow;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool isActive;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool isArrowActive;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	private bool isButtonPressed;

	[Token(Token = "0x1700019A")]
	public GameObject Arrow
	{
		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x98603C", Offset = "0x98603C", VA = "0x98603C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x986044", Offset = "0x986044", VA = "0x986044")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019B")]
	public bool CanAttachArrow
	{
		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x98604C", Offset = "0x98604C", VA = "0x98604C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x985D28", Offset = "0x985D28", VA = "0x985D28")]
		set
		{
		}
	}

	[Token(Token = "0x1700019C")]
	public bool IsActive
	{
		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x986074", Offset = "0x986074", VA = "0x986074")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x985C9C", Offset = "0x985C9C", VA = "0x985C9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	public bool IsAttachArrowAnimationPlaying
	{
		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x98607C", Offset = "0x98607C", VA = "0x98607C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x986084", Offset = "0x986084", VA = "0x986084")]
		set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	public bool IsDetachArrowAnimationPlaying
	{
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x9860A0", Offset = "0x9860A0", VA = "0x9860A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x9860A8", Offset = "0x9860A8", VA = "0x9860A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700019F")]
	public bool IsArrowActive
	{
		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x9860C4", Offset = "0x9860C4", VA = "0x9860C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x9860CC", Offset = "0x9860CC", VA = "0x9860CC")]
		set
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event Action OnArrowAttach
	{
		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x985D74", Offset = "0x985D74", VA = "0x985D74")]
		add
		{
		}
		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x985EDC", Offset = "0x985EDC", VA = "0x985EDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event Action OnArrowDetach
	{
		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x985E10", Offset = "0x985E10", VA = "0x985E10")]
		add
		{
		}
		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x985F78", Offset = "0x985F78", VA = "0x985F78")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x98610C", Offset = "0x98610C", VA = "0x98610C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x986164", Offset = "0x986164", VA = "0x986164")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x9861BC", Offset = "0x9861BC", VA = "0x9861BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x986308", Offset = "0x986308", VA = "0x986308")]
	private void SetIsButtonPressed(bool isPressed)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x986900", Offset = "0x986900", VA = "0x986900")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x986AB0", Offset = "0x986AB0", VA = "0x986AB0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x986054", Offset = "0x986054", VA = "0x986054")]
	private void UpdateArrowIsActive()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x9865D8", Offset = "0x9865D8", VA = "0x9865D8")]
	private bool CanDetachArrow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x986BB0", Offset = "0x986BB0", VA = "0x986BB0", Slot = "7")]
	public VRSDK GetPickingHandPlatformType()
	{
		return default(VRSDK);
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x986348", Offset = "0x986348", VA = "0x986348")]
	private void UpdateArrowAttaching()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x986614", Offset = "0x986614", VA = "0x986614")]
	private void UpdateArrowDetaching()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x9868B0", Offset = "0x9868B0", VA = "0x9868B0")]
	private void RotateArrowHandOnBow()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x986C00", Offset = "0x986C00", VA = "0x986C00", Slot = "8")]
	public GameObject GetItemInPickingHand()
	{
		return null;
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x986C08", Offset = "0x986C08", VA = "0x986C08")]
	public void AttachArrowToBow()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x986D1C", Offset = "0x986D1C", VA = "0x986D1C")]
	public void AttachArrowToHand()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x986E2C", Offset = "0x986E2C", VA = "0x986E2C")]
	public void AttachHandToBow()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x986EF8", Offset = "0x986EF8", VA = "0x986EF8")]
	public void DetachHand()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x986F4C", Offset = "0x986F4C", VA = "0x986F4C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x9870E4", Offset = "0x9870E4", VA = "0x9870E4", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x98710C", Offset = "0x98710C", VA = "0x98710C", Slot = "6")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x987150", Offset = "0x987150", VA = "0x987150")]
	public ArrowHandController()
	{
	}
}
[Token(Token = "0x20002CA")]
public class ControllersHandsController : MonoBehaviourPun
{
	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightController;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject leftController;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SteamVR_LaserPointer laserToActivate;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SteamVR_LaserPointer laserToDeactivate;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x170001A0")]
	public bool IsActive
	{
		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x987164", Offset = "0x987164", VA = "0x987164")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x98716C", Offset = "0x98716C", VA = "0x98716C")]
		set
		{
		}
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x987178", Offset = "0x987178", VA = "0x987178")]
	private void SetAppropriateControllersState()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x9871A0", Offset = "0x9871A0", VA = "0x9871A0")]
	private void DisableAllControllers()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x987200", Offset = "0x987200", VA = "0x987200")]
	private void EnableUsedControllers()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x987270", Offset = "0x987270", VA = "0x987270")]
	public ControllersHandsController()
	{
	}
}
[Token(Token = "0x20002CB")]
public class Gesture : MonoBehaviour
{
	[Token(Token = "0x20002CC")]
	public enum GestureType
	{
		[Token(Token = "0x4000F32")]
		None,
		[Token(Token = "0x4000F33")]
		Open,
		[Token(Token = "0x4000F34")]
		Point,
		[Token(Token = "0x4000F35")]
		Ok,
		[Token(Token = "0x4000F36")]
		Scissors
	}

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GestureType type;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gestureObject;

	[Token(Token = "0x170001A1")]
	public GestureType Type
	{
		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x987278", Offset = "0x987278", VA = "0x987278")]
		get
		{
			return default(GestureType);
		}
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x987280", Offset = "0x987280", VA = "0x987280")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x9872A0", Offset = "0x9872A0", VA = "0x9872A0")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x9872C0", Offset = "0x9872C0", VA = "0x9872C0")]
	public Gesture()
	{
	}
}
[Token(Token = "0x20002CD")]
public class GestureHand : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x20002CE")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gesture.GestureType gestureType;

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x9875EC", Offset = "0x9875EC", VA = "0x9875EC")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x9877D0", Offset = "0x9877D0", VA = "0x9877D0")]
		internal bool <GetGestureByType>b__0(Gesture item)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20002CF")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Gesture> <>9__16_0;

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x987864", Offset = "0x987864", VA = "0x987864")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x98786C", Offset = "0x98786C", VA = "0x98786C")]
		internal void <DeactivateAllGestures>b__16_0(Gesture item)
		{
		}
	}

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Gesture.GestureType gestureType;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Gesture actualGesture;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isSynchronizingGestureType;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private HandSide side;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Gesture> gestures;

	[Token(Token = "0x170001A2")]
	public bool IsActive
	{
		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x9872C8", Offset = "0x9872C8", VA = "0x9872C8")]
		set
		{
		}
	}

	[Token(Token = "0x170001A3")]
	public HandSide Side
	{
		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x9872F0", Offset = "0x9872F0", VA = "0x9872F0")]
		get
		{
			return default(HandSide);
		}
	}

	[Token(Token = "0x170001A4")]
	public Gesture.GestureType GestureType
	{
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x9872F8", Offset = "0x9872F8", VA = "0x9872F8")]
		get
		{
			return default(Gesture.GestureType);
		}
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x987300", Offset = "0x987300", VA = "0x987300")]
		set
		{
		}
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x98739C", Offset = "0x98739C", VA = "0x98739C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x987460", Offset = "0x987460", VA = "0x987460")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x9874B8", Offset = "0x9874B8", VA = "0x9874B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x987510", Offset = "0x987510", VA = "0x987510")]
	private Gesture GetGestureByType(Gesture.GestureType gestureType)
	{
		return null;
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x9875F4", Offset = "0x9875F4", VA = "0x9875F4")]
	private void DeactivateAllGestures()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x987354", Offset = "0x987354", VA = "0x987354")]
	private void AdjustHandsToGestureType()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x9876FC", Offset = "0x9876FC", VA = "0x9876FC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x9877C8", Offset = "0x9877C8", VA = "0x9877C8")]
	public GestureHand()
	{
	}
}
[Token(Token = "0x20002D0")]
public class GesturesController : MonoBehaviour
{
	[Token(Token = "0x20002D1")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool value;

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x987A60", Offset = "0x987A60", VA = "0x987A60")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x987FEC", Offset = "0x987FEC", VA = "0x987FEC")]
		internal void <set_IsActive>b__0(GestureHand item)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D2")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GestureHand> <>9__3_1;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<GestureHand> <>9__8_0;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<GestureHand> <>9__8_1;

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x98807C", Offset = "0x98807C", VA = "0x98807C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x988084", Offset = "0x988084", VA = "0x988084")]
		internal void <set_IsActive>b__3_1(GestureHand item)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x98809C", Offset = "0x98809C", VA = "0x98809C")]
		internal void <Initialize>b__8_0(GestureHand item)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x9880B4", Offset = "0x9880B4", VA = "0x9880B4")]
		internal void <Initialize>b__8_1(GestureHand item)
		{
		}
	}

	[Token(Token = "0x20002D3")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HandSide handSide;

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x987FAC", Offset = "0x987FAC", VA = "0x987FAC")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x9880CC", Offset = "0x9880CC", VA = "0x9880CC")]
		internal bool <GetGestureHandBySide>b__0(GestureHand item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002D4")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HandSide handSide;

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x987FB4", Offset = "0x987FB4", VA = "0x987FB4")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x9880F0", Offset = "0x9880F0", VA = "0x9880F0")]
		internal bool <GetOtherGestureHandBySide>b__0(GestureHand item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool active;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GestureHand> gestureHands;

	[Token(Token = "0x170001A5")]
	public bool IsActive
	{
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x987880", Offset = "0x987880", VA = "0x987880")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x987888", Offset = "0x987888", VA = "0x987888")]
		set
		{
		}
	}

	[Token(Token = "0x14000025")]
	public event Action OnGesturesDeactivation
	{
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x987A68", Offset = "0x987A68", VA = "0x987A68")]
		add
		{
		}
		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x987B04", Offset = "0x987B04", VA = "0x987B04")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x987BA0", Offset = "0x987BA0", VA = "0x987BA0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x987D64", Offset = "0x987D64", VA = "0x987D64")]
	public void SetGesture(HandSide SideOfGestureHandToSet, Gesture.GestureType gestureToSet)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x987F84", Offset = "0x987F84", VA = "0x987F84")]
	public void SetNoGestures()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x987EA8", Offset = "0x987EA8", VA = "0x987EA8")]
	private GestureHand GetGestureHandBySide(HandSide handSide)
	{
		return null;
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x987DCC", Offset = "0x987DCC", VA = "0x987DCC")]
	private GestureHand GetOtherGestureHandBySide(HandSide handSide)
	{
		return null;
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x987FBC", Offset = "0x987FBC", VA = "0x987FBC")]
	internal void SetOpenGestures()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x987FE4", Offset = "0x987FE4", VA = "0x987FE4")]
	public GesturesController()
	{
	}
}
[Token(Token = "0x20002D5")]
public class HandsController : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x20002D6")]
	public enum HandsType
	{
		[Token(Token = "0x4000F55")]
		Controllers,
		[Token(Token = "0x4000F56")]
		Archery,
		[Token(Token = "0x4000F57")]
		Gestures
	}

	[Serializable]
	[Token(Token = "0x20002D7")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GesturesInputController> <>9__30_0;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<GesturesInputController> <>9__30_1;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<GesturesInputController> <>9__31_0;

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x989254", Offset = "0x989254", VA = "0x989254")]
		public <>c()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x98925C", Offset = "0x98925C", VA = "0x98925C")]
		internal void <AdjustHandsBasedOnProperties>b__30_0(GesturesInputController controller)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x989274", Offset = "0x989274", VA = "0x989274")]
		internal void <AdjustHandsBasedOnProperties>b__30_1(GesturesInputController controller)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x98928C", Offset = "0x98928C", VA = "0x98928C")]
		internal void <TryToSetReturningGestureToOpen>b__31_0(GesturesInputController controller)
		{
		}
	}

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isInMenu;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GesturesController gesturesController;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GesturesInputController> gestureInputControllers;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ArcheryController archeryController;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ControllersHandsController controllersHandsController;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PickableItemsHandController itemsHandsController;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isGhostly;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private HandsType handsTypeToReturnToAfterGestures;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HandsType currentHandsType;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isActive;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isHoldingItem;

	[Token(Token = "0x170001A6")]
	public HandsType CurrentHandsType
	{
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x988114", Offset = "0x988114", VA = "0x988114")]
		get
		{
			return default(HandsType);
		}
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x98811C", Offset = "0x98811C", VA = "0x98811C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A7")]
	public bool IsActive
	{
		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x988248", Offset = "0x988248", VA = "0x988248")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x988250", Offset = "0x988250", VA = "0x988250")]
		set
		{
		}
	}

	[Token(Token = "0x170001A8")]
	public bool IsHoldingItem
	{
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x9882E0", Offset = "0x9882E0", VA = "0x9882E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x9882E8", Offset = "0x9882E8", VA = "0x9882E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x988340", Offset = "0x988340", VA = "0x988340")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x988398", Offset = "0x988398", VA = "0x988398")]
	public void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x9885EC", Offset = "0x9885EC", VA = "0x9885EC")]
	public void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x9887B8", Offset = "0x9887B8", VA = "0x9887B8")]
	private void OnArrowDetach()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x9887D8", Offset = "0x9887D8", VA = "0x9887D8")]
	private void OnArrowAttach()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x9887F4", Offset = "0x9887F4", VA = "0x9887F4")]
	private void OnTorchRelease()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x98881C", Offset = "0x98881C", VA = "0x98881C")]
	private void OnTorchCatch()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x988848", Offset = "0x988848", VA = "0x988848")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x988130", Offset = "0x988130", VA = "0x988130")]
	private void AdjustHandsToState(HandsType handsState)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x98894C", Offset = "0x98894C", VA = "0x98894C")]
	private void AdjustHandsBasedOnProperties(HandsType handsState)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x988B24", Offset = "0x988B24", VA = "0x988B24")]
	private void TryToSetReturningGestureToOpen()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x988C44", Offset = "0x988C44", VA = "0x988C44")]
	private void OnGesturesDeactivation()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x988C8C", Offset = "0x988C8C", VA = "0x988C8C")]
	private void OnSetGestureInputted(HandSide handSide, Gesture.GestureType gestureType)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x988D24", Offset = "0x988D24", VA = "0x988D24")]
	internal void SetNoGestures()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x988D58", Offset = "0x988D58", VA = "0x988D58")]
	internal void SetOpenGestures()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x988D8C", Offset = "0x988D8C", VA = "0x988D8C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x988E5C", Offset = "0x988E5C", VA = "0x988E5C")]
	private void TryToSynchronizeData(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x989020", Offset = "0x989020", VA = "0x989020")]
	public HandsController()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x989028", Offset = "0x989028", VA = "0x989028")]
	private void <InitializeWithPlayer>b__22_0(GesturesInputController item)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x9890BC", Offset = "0x9890BC", VA = "0x9890BC")]
	private void <InitializeWithoutPlayer>b__23_0(GesturesInputController item)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x989150", Offset = "0x989150", VA = "0x989150")]
	private void <OnDestroy>b__28_0(GesturesInputController item)
	{
	}
}
[Token(Token = "0x20002D8")]
public class HandsDominanceSwitcher : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x20002D9")]
	public enum HandsDominanceType
	{
		[Token(Token = "0x4000F61")]
		Right,
		[Token(Token = "0x4000F62")]
		Left
	}

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isDominanceLoadedFromSettings;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HandsController rightHandedHandsController;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HandsController leftHandedHandsController;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HandsDominanceType handsDominance;

	[Token(Token = "0x170001A9")]
	public HandsDominanceType HandsDominance
	{
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x9892A8", Offset = "0x9892A8", VA = "0x9892A8")]
		get
		{
			return default(HandsDominanceType);
		}
		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x9893B0", Offset = "0x9893B0", VA = "0x9893B0")]
		set
		{
		}
	}

	[Token(Token = "0x170001AA")]
	public HandsController HandsController
	{
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x989414", Offset = "0x989414", VA = "0x989414")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x98943C", Offset = "0x98943C", VA = "0x98943C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x989494", Offset = "0x989494", VA = "0x989494")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x9894EC", Offset = "0x9894EC", VA = "0x9894EC")]
	public void InitializeWithPlayer(bool isLocalPlayer)
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x989724", Offset = "0x989724", VA = "0x989724")]
	public void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x989730", Offset = "0x989730", VA = "0x989730")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x9892EC", Offset = "0x9892EC", VA = "0x9892EC")]
	private void OnHandDominanceSettingChange()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x9893B8", Offset = "0x9893B8", VA = "0x9893B8")]
	private void AdjustHandsToDominance()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x989940", Offset = "0x989940", VA = "0x989940", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x989A14", Offset = "0x989A14", VA = "0x989A14")]
	public HandsDominanceSwitcher()
	{
	}
}
[Token(Token = "0x20002DA")]
public class MenuHand : MonoBehaviour
{
	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject controllerModelObject;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject laserObject;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject hand;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GestureHand gestureHand;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HandPickUpController handPickUpController;

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x989A1C", Offset = "0x989A1C", VA = "0x989A1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x989B80", Offset = "0x989B80", VA = "0x989B80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x989CE4", Offset = "0x989CE4", VA = "0x989CE4")]
	public void ShowController(bool isActive)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x989D28", Offset = "0x989D28", VA = "0x989D28")]
	public void ShowHand(bool isActive)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x989DBC", Offset = "0x989DBC", VA = "0x989DBC")]
	public void ShowGesture(Gesture.GestureType gestureType)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x989E10", Offset = "0x989E10", VA = "0x989E10")]
	public void HideGestures()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x989E48", Offset = "0x989E48", VA = "0x989E48")]
	private void ShowOpenHand()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x989E50", Offset = "0x989E50", VA = "0x989E50")]
	public MenuHand()
	{
	}
}
[Token(Token = "0x20002DB")]
public class MenuHandsController : MonoBehaviour
{
	[Token(Token = "0x4000F68")]
	private const float picoHandsRotationOffset = 15f;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject rightHandedRightHand;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightHandedLeftHand;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SteamVR_MenuLaserPointer rightHandedPointer;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject leftHandedLeftHand;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject leftHandedRightHand;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SteamVR_MenuLaserPointer leftHandedPointer;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform leftHandRotationOffsetter;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform rightHandRotationOffsetter;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 leftHandPicoPositionOffset;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private Vector3 rightHandPicoPositionOffset;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 farAway;

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x989E58", Offset = "0x989E58", VA = "0x989E58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x98A1EC", Offset = "0x98A1EC", VA = "0x98A1EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x98A318", Offset = "0x98A318", VA = "0x98A318")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x98A444", Offset = "0x98A444", VA = "0x98A444")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x98A54C", Offset = "0x98A54C", VA = "0x98A54C")]
	private void OnAreKnucklesConnectedChanged(bool areKnucklesConnected)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x989F68", Offset = "0x989F68", VA = "0x989F68")]
	private void AdjustHandsToDominance()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x98A550", Offset = "0x98A550", VA = "0x98A550")]
	public MenuHandsController()
	{
	}
}
[Token(Token = "0x20002DC")]
public class HelmetActivator : MonoBehaviour
{
	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x98A568", Offset = "0x98A568", VA = "0x98A568")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x98A620", Offset = "0x98A620", VA = "0x98A620")]
	public HelmetActivator()
	{
	}
}
[Token(Token = "0x20002DD")]
public class IceFragmentController : MonoBehaviour
{
	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayFromStartingToVanishInSeconds;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeOfVanishing;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeFromStart;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initialPosition;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion initialRotation;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 initialScale;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody rigidbody;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider collider;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool destroyedPhysicsComponentAlready;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool areInitialParametersSet;

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x98A628", Offset = "0x98A628", VA = "0x98A628")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x98A6F0", Offset = "0x98A6F0", VA = "0x98A6F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x98A850", Offset = "0x98A850", VA = "0x98A850")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x98AAE4", Offset = "0x98AAE4", VA = "0x98AAE4")]
	public IceFragmentController()
	{
	}
}
[Token(Token = "0x20002DE")]
public class InitGameInfo : MonoBehaviour
{
	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ProjectSettings _projectSettingsSetter;

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x98AAEC", Offset = "0x98AAEC", VA = "0x98AAEC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x98B004", Offset = "0x98B004", VA = "0x98B004")]
	private bool WasArcadeBuildSetViaParams()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x98B05C", Offset = "0x98B05C", VA = "0x98B05C")]
	public InitGameInfo()
	{
	}
}
[Token(Token = "0x20002DF")]
public class IntervalFPSData
{
	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly int displayInterval;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float fpsSum;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int framesCount;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string description;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float averageFps;

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x98B064", Offset = "0x98B064", VA = "0x98B064")]
	public void ResetFPSData()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E0")]
public class BonusTranslation
{
	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ItemBonusType itemBonusType;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string bonusNameEn;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string bonusNameKr;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string bonusNameZn;

	[Token(Token = "0x170001AB")]
	public ItemBonusType ItemBonusType
	{
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x98B070", Offset = "0x98B070", VA = "0x98B070")]
		get
		{
			return default(ItemBonusType);
		}
	}

	[Token(Token = "0x170001AC")]
	public string BonusName
	{
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x98B078", Offset = "0x98B078", VA = "0x98B078")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x98B1E8", Offset = "0x98B1E8", VA = "0x98B1E8")]
	public BonusTranslation()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E1")]
public class BonusTypeWithFormatter
{
	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ItemBonusType ItemBonusType;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEngine.Object _bonusFormatter;

	[Token(Token = "0x170001AD")]
	public IBonusStringFormatter BonusFormatter
	{
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x98B1F0", Offset = "0x98B1F0", VA = "0x98B1F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x98B238", Offset = "0x98B238", VA = "0x98B238")]
	public BonusTypeWithFormatter()
	{
	}
}
[Token(Token = "0x20002E2")]
public interface IBonusStringFormatter
{
	[Token(Token = "0x6000EDA")]
	string GetLocalizedBonusName(int chance, AbilityType abilityType, string bonusTranslation);
}
[Serializable]
[Token(Token = "0x20002E3")]
public class ItemBonus
{
	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ItemBonusType ItemBonusType;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int Chance;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Multiplier;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AbilityType abilityType;

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x98B240", Offset = "0x98B240", VA = "0x98B240")]
	public ItemBonus()
	{
	}
}
[Token(Token = "0x20002E4")]
public class ItemsWithBonuses : ScriptableObject
{
	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ItemWithBonuses> ItemsWithBonusesList;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BonusTranslation> BonusTranslations;

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x98B250", Offset = "0x98B250", VA = "0x98B250")]
	public ItemsWithBonuses()
	{
	}
}
[Token(Token = "0x20002E5")]
public class ItemWithBonuses : ScriptableObject
{
	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EquipmentItemKey equipmentItemKey;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<ItemBonus> itemBonuses;

	[Token(Token = "0x170001AE")]
	public EquipmentItemKey EquipmentItemKey
	{
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x98B258", Offset = "0x98B258", VA = "0x98B258")]
		get
		{
			return default(EquipmentItemKey);
		}
	}

	[Token(Token = "0x170001AF")]
	public List<ItemBonus> ItemBonuses
	{
		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x98B260", Offset = "0x98B260", VA = "0x98B260")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x98B268", Offset = "0x98B268", VA = "0x98B268")]
	public ItemWithBonuses()
	{
	}
}
[Token(Token = "0x20002E6")]
public class SpellCastBonusFormatter : MonoBehaviour, IBonusStringFormatter
{
	[Token(Token = "0x20002E7")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string localizedPropertyName;

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x98B540", Offset = "0x98B540", VA = "0x98B540")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x98B550", Offset = "0x98B550", VA = "0x98B550")]
		internal bool <GetLocalizedSpellName>b__0(FieldInfo field)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x98B270", Offset = "0x98B270", VA = "0x98B270", Slot = "4")]
	public string GetLocalizedBonusName(int chance, AbilityType abilityType, string bonusTranslation)
	{
		return null;
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x98B2F8", Offset = "0x98B2F8", VA = "0x98B2F8")]
	private string GetLocalizedSpellName(AbilityType ability)
	{
		return null;
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x98B548", Offset = "0x98B548", VA = "0x98B548")]
	public SpellCastBonusFormatter()
	{
	}
}
[Token(Token = "0x20002E8")]
public class StandardBonusFormatter : MonoBehaviour, IBonusStringFormatter
{
	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x98B584", Offset = "0x98B584", VA = "0x98B584", Slot = "4")]
	public string GetLocalizedBonusName(int chance, AbilityType abilityType, string bonusTranslation)
	{
		return null;
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x98B5F0", Offset = "0x98B5F0", VA = "0x98B5F0")]
	public StandardBonusFormatter()
	{
	}
}
[Token(Token = "0x20002E9")]
public class LeaderboardsWindowWSController : WindowController
{
	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardViewController leaderboardViewController;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocalLeaderboard localLeaderboard;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LocalLeaderboardView localLeaderboardView;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VRParkLeaderboardViewController vRParkLeaderboardViewController;

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x98B5F8", Offset = "0x98B5F8", VA = "0x98B5F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x98B81C", Offset = "0x98B81C", VA = "0x98B81C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x98B9BC", Offset = "0x98B9BC", VA = "0x98B9BC")]
	public void OnBack()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x98B790", Offset = "0x98B790", VA = "0x98B790")]
	private void ShowLeaderboards()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x98BA3C", Offset = "0x98BA3C", VA = "0x98BA3C")]
	private void ShowArcadeLeaderboards()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x98BC54", Offset = "0x98BC54", VA = "0x98BC54")]
	private void ShowLeaderboards(VRParkLeaderboardEntriesResponseDTO entries)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x98BC70", Offset = "0x98BC70", VA = "0x98BC70")]
	public LeaderboardsWindowWSController()
	{
	}
}
[Token(Token = "0x20002EA")]
public class LeaderboardViewController : MonoBehaviour
{
	[Token(Token = "0x20002EB")]
	private sealed class <SaveScore>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardViewController <>4__this;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isForcingScoreUpdate;

		[Token(Token = "0x170001B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x98CCB4", Offset = "0x98CCB4", VA = "0x98CCB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x98CCBC", Offset = "0x98CCBC", VA = "0x98CCBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x98C134", Offset = "0x98C134", VA = "0x98C134")]
		[DebuggerHidden]
		public <SaveScore>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x98CC24", Offset = "0x98CC24", VA = "0x98CC24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x98CC28", Offset = "0x98CC28", VA = "0x98CC28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002EC")]
	private sealed class <SaveScore>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardViewController <>4__this;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int score;

		[Token(Token = "0x170001B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0x98CD34", Offset = "0x98CD34", VA = "0x98CD34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0x98CD3C", Offset = "0x98CD3C", VA = "0x98CD3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x98C15C", Offset = "0x98C15C", VA = "0x98C15C")]
		[DebuggerHidden]
		public <SaveScore>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x98CCC4", Offset = "0x98CCC4", VA = "0x98CCC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x98CCC8", Offset = "0x98CCC8", VA = "0x98CCC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002ED")]
	private sealed class <UpdateLeaderboard>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardViewController <>4__this;

		[Token(Token = "0x170001B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x98CE1C", Offset = "0x98CE1C", VA = "0x98CE1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x98CE24", Offset = "0x98CE24", VA = "0x98CE24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x98C184", Offset = "0x98C184", VA = "0x98C184")]
		[DebuggerHidden]
		public <UpdateLeaderboard>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x98CD44", Offset = "0x98CD44", VA = "0x98CD44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x98CD48", Offset = "0x98CD48", VA = "0x98CD48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20002EE")]
	private sealed class <>c
	{
		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<LeaderboardEntry> <>9__33_0;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<LeaderboardEntry> <>9__33_1;

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x98CE9C", Offset = "0x98CE9C", VA = "0x98CE9C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x98CEA4", Offset = "0x98CEA4", VA = "0x98CEA4")]
		internal bool <UpdateLeaderboardTable>b__33_0(LeaderboardEntry entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x98CEC4", Offset = "0x98CEC4", VA = "0x98CEC4")]
		internal bool <UpdateLeaderboardTable>b__33_1(LeaderboardEntry entry)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002EF")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string playerName;

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x98DEE4", Offset = "0x98DEE4", VA = "0x98DEE4")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x98DEEC", Offset = "0x98DEEC", VA = "0x98DEEC")]
		internal void <GetLeaderboardPlayerName>b__0(Message<User> msg)
		{
		}
	}

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamLeaderboardsController steamLeaderboardsController;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OculusLeaderboardsController oculusLeaderboardsController;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerStatistics playerStatistics;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EntryView[] GlobalTop;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EntryView[] PlayerAround;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isTournamentLeaderbord;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TournamentTopPlayerSpot[] GlobalTopTournament;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TournamentTopPlayerSpot[] PlayerAroundTournament;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject GlobalTopLeaderboard;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject PlayerAroundLeaderboard;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject loadingIndicator;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject noTournamentLeaderboardIndicator;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool IsLeaderboardFound;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int entryCount;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform Top10LeaderboardPosition;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ViveportInGameLeaderboardsController viveportLeaderboardsController;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isLeaderboardLoading;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool shouldDisplayPlayerAroundLeaderboard;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool getRequestingGlobalTop;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool getRequesingPlayerAround;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 globalTopLeaderboardInitialLocalPosition;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string leaderboardPlayerName;

	[Token(Token = "0x170001B0")]
	public bool IsLeaderboardLoading
	{
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x98BC78", Offset = "0x98BC78", VA = "0x98BC78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x98BC80", Offset = "0x98BC80", VA = "0x98BC80")]
		set
		{
		}
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x98BE60", Offset = "0x98BE60", VA = "0x98BE60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x98BFCC", Offset = "0x98BFCC", VA = "0x98BFCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x98BFD8", Offset = "0x98BFD8", VA = "0x98BFD8")]
	public void SetLeaderboardEntry(bool isForcingScoreUpdate)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x98C084", Offset = "0x98C084", VA = "0x98C084")]
	public void SetLeaderboardEntry(int score, bool isForcingScoreUpdate)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x98C12C", Offset = "0x98C12C", VA = "0x98C12C")]
	private void SetLeaderboardPlayerName(string leaderboardPlayerName)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x98BFFC", Offset = "0x98BFFC", VA = "0x98BFFC")]
	private IEnumerator SaveScore(bool isForcingScoreUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x98C0A8", Offset = "0x98C0A8", VA = "0x98C0A8")]
	private IEnumerator SaveScore(int score, bool isForcingScoreUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x98BBE0", Offset = "0x98BBE0", VA = "0x98BBE0")]
	public IEnumerator UpdateLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x98C1AC", Offset = "0x98C1AC", VA = "0x98C1AC")]
	public void UpdateLeaderboardTable(List<LeaderboardEntry> leaderboardEntries, LeaderboardRequestState leaderboardType)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x98CA2C", Offset = "0x98CA2C", VA = "0x98CA2C")]
	private AWSTournamentLeaderboardEntryDTO ConvertToTournamentEntry(LeaderboardEntry entry)
	{
		return null;
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x98CBCC", Offset = "0x98CBCC", VA = "0x98CBCC")]
	private void TryDisplayingLeaderboard()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x98CC0C", Offset = "0x98CC0C", VA = "0x98CC0C")]
	public void NoPlayerEntryInLeaderboard()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x98CBEC", Offset = "0x98CBEC", VA = "0x98CBEC")]
	private bool ShouldDisplayLeaderboard()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x98CA08", Offset = "0x98CA08", VA = "0x98CA08")]
	private bool IsLocalPlayersEntry(LeaderboardEntry entry)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x98BEA8", Offset = "0x98BEA8", VA = "0x98BEA8")]
	private static string GetLeaderboardPlayerName()
	{
		return null;
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x98CC14", Offset = "0x98CC14", VA = "0x98CC14")]
	public LeaderboardViewController()
	{
	}
}
[Token(Token = "0x20002F0")]
public class OculusLeaderboardsController : MonoBehaviour
{
	[Token(Token = "0x4000FBD")]
	private const int userIsNotRankedErrorCode = 12074;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardViewController leaderboardViewController;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LeaderboardNameGetter leaderboardNameGetter;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string leaderboardAPIName;

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x98DF44", Offset = "0x98DF44", VA = "0x98DF44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x98DF88", Offset = "0x98DF88", VA = "0x98DF88")]
	public void GetLeaderboardEntries(LeaderboardType leaderboardType, int scoreCount)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x98E0B8", Offset = "0x98E0B8", VA = "0x98E0B8")]
	public void SetLeaderboardEntry(long score)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x98E0D8", Offset = "0x98E0D8", VA = "0x98E0D8")]
	private void QueryLeaderboardTop10Callback(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x98E780", Offset = "0x98E780", VA = "0x98E780")]
	private void QueryLeaderboardPlayerAroundCallback(Message<LeaderboardEntryList> msg)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x98EBFC", Offset = "0x98EBFC", VA = "0x98EBFC")]
	public OculusLeaderboardsController()
	{
	}
}
[Token(Token = "0x20002F1")]
public class SteamLeaderboardsController : MonoBehaviour
{
	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardViewController leaderboardViewController;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LeaderboardNameGetter leaderboardNameGetter;

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x98EC04", Offset = "0x98EC04", VA = "0x98EC04")]
	public SteamLeaderboardsController()
	{
	}
}
[Token(Token = "0x20002F2")]
public class UpdateLeaderboards : MonoBehaviour
{
	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardViewController leaderboardViewController;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocalLeaderboard localLeaderboard;

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x98EC0C", Offset = "0x98EC0C", VA = "0x98EC0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x98ED04", Offset = "0x98ED04", VA = "0x98ED04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x98EDFC", Offset = "0x98EDFC", VA = "0x98EDFC")]
	private void SaveResult()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x98EEF0", Offset = "0x98EEF0", VA = "0x98EEF0")]
	private void SaveToArcadeLeaderboards()
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x98F05C", Offset = "0x98F05C", VA = "0x98F05C")]
	public UpdateLeaderboards()
	{
	}
}
[Token(Token = "0x20002F3")]
public class LeaderboardsLocalViveportSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SteamLeaderboardsController steamLeaderboardsController;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LeaderboardViewController leaderboardViewController;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ViveportInGameLeaderboardsController vivePortLeaderboardsController;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LocalLeaderboard localLeaderboard;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LocalLeaderboardView localLeaderboardView;

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x98F064", Offset = "0x98F064", VA = "0x98F064")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x98F180", Offset = "0x98F180", VA = "0x98F180")]
	public LeaderboardsLocalViveportSwitcher()
	{
	}
}
[Token(Token = "0x20002F4")]
public class ViveportInGameLeaderboardsController : MonoBehaviour
{
	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardNameGetter leaderboardNameGetter;

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x98F188", Offset = "0x98F188", VA = "0x98F188")]
	public ViveportInGameLeaderboardsController()
	{
	}
}
[Token(Token = "0x20002F5")]
public class VRParkLeaderboardTester : MonoBehaviour
{
	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x98F190", Offset = "0x98F190", VA = "0x98F190")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x98F69C", Offset = "0x98F69C", VA = "0x98F69C")]
	public VRParkLeaderboardTester()
	{
	}
}
[Token(Token = "0x20002F6")]
public class LightAnimation : MonoBehaviour
{
	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve lightIntenseCurve;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_DefaultIntensity;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool disableOnAnimEnd;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool m_LoopAnimation;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lightIntenseAnimTime;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float delay;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_Light;

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x98F6A4", Offset = "0x98F6A4", VA = "0x98F6A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x98F758", Offset = "0x98F758", VA = "0x98F758")]
	private void Activate()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x98F778", Offset = "0x98F778", VA = "0x98F778")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x98F92C", Offset = "0x98F92C", VA = "0x98F92C")]
	public LightAnimation()
	{
	}
}
[Token(Token = "0x20002F7")]
public class LightLerp : MonoBehaviour
{
	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lerpRadius;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lerpSpeed;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float changingLightValue;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float minimumLight;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maximumLight;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startIntensity;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 minimum;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 maximum;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startPositions;

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x98F934", Offset = "0x98F934", VA = "0x98F934")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x98FA60", Offset = "0x98FA60", VA = "0x98FA60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x98F9E0", Offset = "0x98F9E0", VA = "0x98F9E0")]
	private void randomNewPositions()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x98FC2C", Offset = "0x98FC2C", VA = "0x98FC2C")]
	public LightLerp()
	{
	}
}
[Token(Token = "0x20002F8")]
public class LoadedSceneLogger : MonoBehaviour
{
	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasBeenInitialized;

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x98FC4C", Offset = "0x98FC4C", VA = "0x98FC4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x98FDB0", Offset = "0x98FDB0", VA = "0x98FDB0")]
	private void LogLoadedScene(Scene arg0, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x98FE68", Offset = "0x98FE68", VA = "0x98FE68")]
	public LoadedSceneLogger()
	{
	}
}
[Token(Token = "0x20002F9")]
public class LanguageChanger : LanguageChangerCore
{
	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Translation translationEn;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Translation translationKR;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Translation translationZh;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TranslationCore _translationCoreEn;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TranslationCore _translationCoreKR;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TranslationCore _translationCoreZh;

	[Token(Token = "0x170001B7")]
	protected override TranslationCore translationCoreEn
	{
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x98FE70", Offset = "0x98FE70", VA = "0x98FE70", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B8")]
	[SerializeField]
	protected override TranslationCore translationCoreKr
	{
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x98FE78", Offset = "0x98FE78", VA = "0x98FE78", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B9")]
	[SerializeField]
	protected override TranslationCore translationCoreZh
	{
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x98FE80", Offset = "0x98FE80", VA = "0x98FE80", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x98FE88", Offset = "0x98FE88", VA = "0x98FE88", Slot = "7")]
	public override void ChangeLanguage(string lang)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x98FFBC", Offset = "0x98FFBC", VA = "0x98FFBC")]
	protected void Translate(TranslationCore coreTranslation, Translation translation)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x990C4C", Offset = "0x990C4C", VA = "0x990C4C")]
	public LanguageChanger()
	{
	}
}
[Token(Token = "0x20002FA")]
public static class LocalizedStringsEA
{
	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string lbEvaluationWarning;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string adjDark;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string adjElven;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string adjFire;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string adjFrozen;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string adjGolden;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string adjSilver;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string adjBrave;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string adjForest;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string adjGlorious;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string adjHoly;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string adjSwift;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string adjMythical;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string adjFearless;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string nounArrow;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string nounThunder;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string nounKnight;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string nounPaladin;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string nounWarrior;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static string nounWizard;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static string nounArcher;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static string nounAssassin;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static string nounGuardian;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static string nounDefender;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static string nounBow;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static string nounHero;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static string nounChampion;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static string lbDefendElvenTown;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static string lbSupportHumanVillage;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static string lbSupportHumanCastle;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static string lbDefendAncientTemple;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static string lbDefendBay;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static string lbWinterMountains;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static string lbDefendLastStronghold;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static string lbEscortTheDwarves;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public static string lbEscortTheCarriage;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static string lbWinterMountainsDeathmatch;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public static string lbComingSoon;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static string lbBow_WoodenBow_Default;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public static string lbBow_SteelDefender;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public static string lbBow_NaturesCall;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public static string lbBow_BowOfAlliance;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public static string lbHelmet_Barbuta_default;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public static string lbHelmet_ArchersHelmet;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public static string lbHelmet_GiftOfTheSea;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public static string lbHelmet_HelmetOfAncestors;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public static string lbHelmet_GriffinHelmet;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public static string lbSet_ForestGuardian;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public static string lbSet_OrcHunter;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public static string lbSet_HolySet;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public static string lbSet_FrozenTouch;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public static string dspBow_WoodenBow_Default;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public static string dspBow_SteelDefender;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public static string dspBow_NaturesCall;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public static string dspBow_BowOfAlliance;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public static string dspHelmet_Barbuta_default;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public static string dspHelmet_ArchersHelmet;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public static string dspHelmet_GiftOfTheSea;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public static string dspHelmet_HelmetOfAncestors;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public static string dspHelmet_GriffinHelmet;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public static string dspSet_ForestGuardian;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public static string dspSet_OrcHunter;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public static string dspSet_HolySet;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public static string dspSet_FrozenTouch;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public static string lbMenu;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public static string lbSpells;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public static string btFire;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public static string btIce;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public static string lbSpellPoints;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public static string lbCooldown;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public static string lbLevelNeededToUpgrade;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public static string btReset;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public static string lbResetWindowTitle;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public static string btLearn;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public static string lbSpellSelectionTitle;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public static string lbHowToUseSpellsTitle;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public static string lbHowToUseSpellsDescription;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public static string lbYouNeedMoreSpellsPoints;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public static string lbMaxLevel;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public static string txtHigherLevelNeeded;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public static string txtSpellPointNeeded;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public static string txtPreviousSpellsRequired;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public static string txtMaxLevelReached;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public static string txtYouHaveToLearnIt;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public static string lbFireArrow;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public static string lbFireClaws;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public static string lbArrowRain;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public static string lbExplosion;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public static string lbMeteorShower;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public static string lbFreezingArrow;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public static string lbIceShield;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public static string lbIceBolt;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public static string lbIceRevive;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public static string lbIcePiercingArrow;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public static string lbFreezeStorm;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public static string dspFireArrow;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public static string dspFireClaws;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public static string dspArrowRain;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public static string dspExplosion;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public static string dspMeteorShower;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public static string dspFreezingArrow;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public static string dspIceShield;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public static string dspIceBolt;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public static string dspIceRevive;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public static string dspIcePiercingArrow;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public static string dspFreezeStorm;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public static string lbHeadText;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public static string lbBlowText;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public static string lbBlowTextWands;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public static string lbHornWasUsedText;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public static string lbMicrophoneNotConnectedText;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public static string dspGameEndedDisconnectionMessage;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public static string dspRejoinMainMenuCanvas;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public static string dspRejoinSmallMainMenuCanvas;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public static string lbElvenTownHealth;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public static string lbHumanVillageHealth;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public static string lbHumanCastleHealth;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public static string lbTempleHealth;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public static string lbAxeDodgedUsingBonus;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public static string lbYourElvenTownHasFallen;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public static string lbTheHumanVillageHasFallen;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public static string lbTheHumanCastleHasFallen;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public static string lbAncientTempleHasFallen;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public static string lbYouWereKilledByOrcWarrior_WaitForNextWave;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public static string lbYouWereKilledByDragon_WaitForNextWave;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public static string lbYouWereKilledByTroll_WaitForNextWave;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public static string txtRpgElementsTitle;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public static string txtRpgElementsText;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public static string btRpg;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public static string lbWithSpells;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public static string lbWithoutSpells;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public static string lbArrowHandOffset;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public static string btSpells;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public static string lbPlayAreaWarningDescription;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public static string txtTouchTrackingText;
}
[Token(Token = "0x20002FB")]
public class ArcadeOwnerSettingsLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Settings;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text VRParkVersion;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text OldLeaderboards;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Server;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Global;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Local;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text LocalInactive;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Setup;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text SetupOutline;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text Language;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text UseDefaultServer;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text EU;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text EUDisabled;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text Asia;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text AsiaDisabled;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text US;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text USDisabled;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text Back;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text BackOutline;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text OtherSettings;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text EnableBlood;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text AutoJoin;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text AutoJoinShaded;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text AutoJoinMessage;

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x990C54", Offset = "0x990C54", VA = "0x990C54", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x9910FC", Offset = "0x9910FC", VA = "0x9910FC")]
	public ArcadeOwnerSettingsLocalizer()
	{
	}
}
[Token(Token = "0x20002FC")]
public class ArcadeSettingsLocalizer : MonoBehaviour
{
	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x991104", Offset = "0x991104", VA = "0x991104")]
	public ArcadeSettingsLocalizer()
	{
	}
}
[Token(Token = "0x20002FD")]
public class AskForConfirmationLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text AreYouSureYouWantToQuit;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Yes;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text YesOutline;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text No;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text NoOutline;

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x99110C", Offset = "0x99110C", VA = "0x99110C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x991228", Offset = "0x991228", VA = "0x991228")]
	public AskForConfirmationLocalizer()
	{
	}
}
[Token(Token = "0x20002FE")]
public class ChangelogInitilizer : MonoBehaviour
{
	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ChangelogController changelogController;

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x991230", Offset = "0x991230", VA = "0x991230")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x99124C", Offset = "0x99124C", VA = "0x99124C")]
	public ChangelogInitilizer()
	{
	}
}
[Token(Token = "0x20002FF")]
public class ChangelogWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Title;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Close;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text CloseOutline;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Next;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text NextOutline;

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x991254", Offset = "0x991254", VA = "0x991254", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x991348", Offset = "0x991348", VA = "0x991348")]
	public ChangelogWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000300")]
public class ChoosePlayerNameLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text ChooseName;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ToAppearInPublicLeaderboards;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text YourName;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Generate;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text GenerateOutline;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Back;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text BackOutline;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Continue;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text ContinueOutline;

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x991350", Offset = "0x991350", VA = "0x991350", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x991518", Offset = "0x991518", VA = "0x991518")]
	public ChoosePlayerNameLocalizer()
	{
	}
}
[Token(Token = "0x2000301")]
public class ConfirmationQuitWindowTournamentLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text ConfirmationQuitText;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Yes;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text YesOutline;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text No;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text NoOutline;

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x991520", Offset = "0x991520", VA = "0x991520", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x991614", Offset = "0x991614", VA = "0x991614")]
	public ConfirmationQuitWindowTournamentLocalizer()
	{
	}
}
[Token(Token = "0x2000302")]
public class ConnectingLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Connecting;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text NoInternet;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Back;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text BackOutline;

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x99161C", Offset = "0x99161C", VA = "0x99161C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x9916EC", Offset = "0x9916EC", VA = "0x9916EC")]
	public ConnectingLocalizer()
	{
	}
}
[Token(Token = "0x2000303")]
public class ControllerTrackingWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Title;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Text;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Continue;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ContinueOutline;

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x9916F4", Offset = "0x9916F4", VA = "0x9916F4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x9917D8", Offset = "0x9917D8", VA = "0x9917D8")]
	public ControllerTrackingWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000304")]
public class ControlsLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Gestures;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Menu_Pause;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Multiplayer1;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Multiplayer2;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text PullString;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text SpeakOn;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text Gestures2;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Multiplayer3;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Multiplayer4;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text SpeakOn2;

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x9917E0", Offset = "0x9917E0", VA = "0x9917E0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x991A44", Offset = "0x991A44", VA = "0x991A44")]
	public ControlsLocalizer()
	{
	}
}
[Token(Token = "0x2000305")]
public class ControlsWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isFirstTimeWindow;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Controls;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ControlsShadow;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ShootAtToTeleport;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text KoreanShootAtToTeleport;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Button;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text ButtonOutline;

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x991A4C", Offset = "0x991A4C", VA = "0x991A4C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x991CA0", Offset = "0x991CA0", VA = "0x991CA0")]
	public ControlsWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000306")]
public class CreateGameLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text SelectMap;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text CoOp;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text DefendElvenTown;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text SupportHumanVillage;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text SupportHumanCastle;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text DefendRuins;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text defendBay;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text winterMountains;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text defendLastStronghold;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text escortTheDwarves;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text escortTheCarriage;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text PvP;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text Deathmatch;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text winterMountainsDeathmatch;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text comingSoon;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text Back;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text BackOutline;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text Create;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Text CreateOutline;

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x991CA8", Offset = "0x991CA8", VA = "0x991CA8", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x991FA8", Offset = "0x991FA8", VA = "0x991FA8")]
	public CreateGameLocalizer()
	{
	}
}
[Token(Token = "0x2000307")]
public class CreatingWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Back;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text BackOutline;

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x991FB0", Offset = "0x991FB0", VA = "0x991FB0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x992038", Offset = "0x992038", VA = "0x992038")]
	public CreatingWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000308")]
public class DisconnectionWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text ProblemWithConnection;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Continue;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ContinueOutline;

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x992040", Offset = "0x992040", VA = "0x992040", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x9920EC", Offset = "0x9920EC", VA = "0x9920EC")]
	public DisconnectionWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000309")]
public class EarlyAccessWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text EarlyAccessText;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Continue;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ContinueOutline;

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x9920F4", Offset = "0x9920F4", VA = "0x9920F4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x9921A0", Offset = "0x9921A0", VA = "0x9921A0")]
	public EarlyAccessWindowLocalizer()
	{
	}
}
[Token(Token = "0x200030A")]
public class EvaluationVersionWarningLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Error;

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x9921A8", Offset = "0x9921A8", VA = "0x9921A8", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x99220C", Offset = "0x99220C", VA = "0x99220C")]
	public EvaluationVersionWarningLocalizer()
	{
	}
}
[Token(Token = "0x200030B")]
public class GameOverMenuLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text GameOver;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text YourTownHasFallen;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Wave;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Points;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Gold;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Leaderboards;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text LeaderboardsOutline;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Settings;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text SettingsOutline;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text Quit;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text QuitOutline;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text Restart;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text RestartOutline;

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x992214", Offset = "0x992214", VA = "0x992214", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x992560", Offset = "0x992560", VA = "0x992560")]
	public GameOverMenuLocalizer()
	{
	}
}
[Token(Token = "0x200030C")]
public class ItemsDescriptionLocalizer : MonoBehaviour
{
	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x992568", Offset = "0x992568", VA = "0x992568")]
	public static string GetItemDescription(EquipmentItemKey itemKey)
	{
		return null;
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x9925EC", Offset = "0x9925EC", VA = "0x9925EC")]
	public static string GetItemName(EquipmentItemKey itemKey)
	{
		return null;
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x992670", Offset = "0x992670", VA = "0x992670")]
	public ItemsDescriptionLocalizer()
	{
	}
}
[Token(Token = "0x200030D")]
public class LeaderboardsWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Leaderboards;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text Loading;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text BestArchers;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text VRParkBestArchers;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text VRParkBestArchersName;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text VRParkBestArchersWave;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text VRParkBestArchersScore;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text CurrentRivals;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text VRParkCurrentRivals;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text VRParkCurrentRivalsName;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text VRParkCurrentRivalsWave;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text VRParkCurrentRivalsScore;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text BackMenu;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text BackMenuOutline;

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x992678", Offset = "0x992678", VA = "0x992678", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x9928C4", Offset = "0x9928C4", VA = "0x9928C4")]
	public LeaderboardsWindowLocalizer()
	{
	}
}
[Token(Token = "0x200030E")]
public class LobbyColumnHeadersLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text nameHeader;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text mapHeader;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text playersHeader;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text stateHeader;

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x9928CC", Offset = "0x9928CC", VA = "0x9928CC", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x99299C", Offset = "0x99299C", VA = "0x99299C")]
	public LobbyColumnHeadersLocalizer()
	{
	}
}
[Token(Token = "0x200030F")]
public class LobbyWithoutTournamentLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Lobby;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text LobbyShadow;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Refresh;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text RefreshOutline;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Back;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text BackOutline;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text Create;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text CreateOutline;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text RefreshingServers;

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x9929A4", Offset = "0x9929A4", VA = "0x9929A4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x992B28", Offset = "0x992B28", VA = "0x992B28")]
	public LobbyWithoutTournamentLocalizer()
	{
	}
}
[Token(Token = "0x2000310")]
public class LobbyWithTournamentLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Connecting;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ConnectingBack;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ConnectingBackOutline;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text LobbyTitle;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text LobbyTitleShadow;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text LobbyTitleOutline;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text Refresh;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text RefreshOutline;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Refreshing;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text LobbyBack;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text LobbyBackOutline;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text Create;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CreateOutline;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text TournamentTitle;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text TournamentTitleShadow;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text TournamentTitleOutline;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text DisclaimerTitle;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text DisclaimerTitleShadow;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text Disclaimer;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text DisclaimerLinkOutline;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text Agreement;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text MustAgree;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text DisclaimerBack;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text DisclaimerBackOutline;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text Continue;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text ContinueOutline;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text TournamentBack;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text TournamentBackOutline;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text Join;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text JoinOutline;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text EnrollmentBack;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text EnrollmentBackOutline;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text TopPlayersLastTournament;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text BestArchers;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text BestArchersShadow;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text BestArchersLastTournament;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text BestArchersRank;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Text BestArchersName;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Text BestArchersStage;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Text BestArchersKills;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Text BestArchersDeaths;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Text BestArchersStatus;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Text YourRivals;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Text YourRivalsShadow;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Text YourRivalsLastTournament;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Text YourRivalsRank;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Text YourRivalsName;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Text YourRivalsStage;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Text YourRivalsKills;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Text YourRivalsDeaths;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Text YourRivalsStatus;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Text LoadingLeaderboard;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Text NoResultsYet;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Text LoadingError;

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x992B30", Offset = "0x992B30", VA = "0x992B30", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x993604", Offset = "0x993604", VA = "0x993604")]
	public LobbyWithTournamentLocalizer()
	{
	}
}
[Token(Token = "0x2000311")]
public class MainMenuSettingsLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Settings;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text Controls;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text ControlsOutline;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text Back;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text BackOutline;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text SetPlayerName;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text SetPlayerNameOutline;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text ArcadeGameplay;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text ArcadeDominantHand;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text ArcadeAudio;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text ArcadeMusic;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text ArcadeMultiplayer;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text ArcadeVoiceChat;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text ArcadeAlwaysSpeak;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text ArcadePrivacy;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text ArcadeLimitUserTracking;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text ArcadeOpenDataPrivacyPage;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text ArcadeOpenDataPrivacyPageOutline;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Text ArcadeOwnerSettings;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Text ArcadeOwnerSettingsOutline;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Text Gameplay;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Text DominantHand;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Text ArrowHandOffset;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Text controllerVibrations;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Text snapTurn;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Text Audio;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Text Music;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Text Sounds;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Text Multiplayer;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private Text VoiceChat;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Text AlwaysSpeak;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Text Privacy;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Text LimitUserTracking;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Text OpenDataPrivacyPage;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Text OpenDataPrivacyPageOutline;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Text language;

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x99360C", Offset = "0x99360C", VA = "0x99360C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x993BAC", Offset = "0x993BAC", VA = "0x993BAC")]
	public MainMenuSettingsLocalizer()
	{
	}
}
[Token(Token = "0x2000312")]
public class MainWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text menuInactiveTitle;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text SinglePlayerVive;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text SinglePlayerViveOutline;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text Multiplayer;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text MultiplayerOutline;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text Settings;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text SettingsOutline;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text SteamInitError;

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x993BB4", Offset = "0x993BB4", VA = "0x993BB4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x993D28", Offset = "0x993D28", VA = "0x993D28")]
	public MainWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000313")]
public class MapVotingLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text ChooseNextMap;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text CoOp;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text CoOpShadow;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text PvP;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text PvPShadow;

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x993D30", Offset = "0x993D30", VA = "0x993D30", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x993E4C", Offset = "0x993E4C", VA = "0x993E4C")]
	public MapVotingLocalizer()
	{
	}
}
[Token(Token = "0x2000314")]
public class MatchSettingsLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text MatchSettings;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text RoomType;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Private;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Weather;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Rain;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Back;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text BackOutline;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Create;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text CreateOutline;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text HowToUseCodeToEnter;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text Password;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text Warning;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text PrivateCreate;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text PrivateCreateOutline;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text waves;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text skipInitialWaves;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text shooting;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text lockFastShooting;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Text quest1Compatible;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Text smallerWavesDescription;

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x993E54", Offset = "0x993E54", VA = "0x993E54", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x994194", Offset = "0x994194", VA = "0x994194")]
	public MatchSettingsLocalizer()
	{
	}
}
[Token(Token = "0x2000315")]
public class MiniScoreboardLocalizer : MonoBehaviour
{
	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text timeLeftLabel;

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x99419C", Offset = "0x99419C", VA = "0x99419C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x9941A0", Offset = "0x9941A0", VA = "0x9941A0")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x994204", Offset = "0x994204", VA = "0x994204")]
	public MiniScoreboardLocalizer()
	{
	}
}
[Token(Token = "0x2000316")]
public class NoInternetConnectionWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NoInternetConnection;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Continue;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ContinueOutline;

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x99420C", Offset = "0x99420C", VA = "0x99420C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x9942B8", Offset = "0x9942B8", VA = "0x9942B8")]
	public NoInternetConnectionWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000317")]
public class OculusInitErrorMessageLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Message;

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x9942C0", Offset = "0x9942C0", VA = "0x9942C0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x994324", Offset = "0x994324", VA = "0x994324")]
	public OculusInitErrorMessageLocalizer()
	{
	}
}
[Token(Token = "0x2000318")]
public class PauseMenuLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Pause;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Settings;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text SettingsOutline;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Wave;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Points;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Quit;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text QuitOutline;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Continue;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text ContinueOutline;

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x99432C", Offset = "0x99432C", VA = "0x99432C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x994530", Offset = "0x994530", VA = "0x994530")]
	public PauseMenuLocalizer()
	{
	}
}
[Token(Token = "0x2000319")]
public class PauseVotingLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text yesButton;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text yesButtonOutline;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text noButton;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text noButtonOutline;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text breakAsk;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text agreedForBreak;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text disagreedForBreak;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text voting;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text yesCounterLabel;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text noCounterLabel;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text breakWillStartAfterWave;

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x994538", Offset = "0x994538", VA = "0x994538", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x994704", Offset = "0x994704", VA = "0x994704")]
	public PauseVotingLocalizer()
	{
	}
}
[Token(Token = "0x200031A")]
public class PlayAreaWarningLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Title;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Description;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ContinueText;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ContinueOutline;

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x99470C", Offset = "0x99470C", VA = "0x99470C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x9947F0", Offset = "0x9947F0", VA = "0x9947F0")]
	public PlayAreaWarningLocalizer()
	{
	}
}
[Token(Token = "0x200031B")]
public class PlayerTitlesLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Name;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Score;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Level;

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x9947F8", Offset = "0x9947F8", VA = "0x9947F8", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x9948A4", Offset = "0x9948A4", VA = "0x9948A4")]
	public PlayerTitlesLocalizer()
	{
	}
}
[Token(Token = "0x200031C")]
public class PleaseLogintoOculusLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Text;

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x9948AC", Offset = "0x9948AC", VA = "0x9948AC", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x994910", Offset = "0x994910", VA = "0x994910")]
	public PleaseLogintoOculusLocalizer()
	{
	}
}
[Token(Token = "0x200031D")]
public class PolicyOpenedInBrowserLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text OpenedInBrowser;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Continue;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text ContinueOutline;

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x994918", Offset = "0x994918", VA = "0x994918", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x9949C4", Offset = "0x9949C4", VA = "0x9949C4")]
	public PolicyOpenedInBrowserLocalizer()
	{
	}
}
[Token(Token = "0x200031E")]
public class PrivacyLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text PrivacyPolicy;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text OpenPrivacy;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text OpenPrivacyOutline;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Continue;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text ContinueOutline;

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x9949CC", Offset = "0x9949CC", VA = "0x9949CC", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x994AC0", Offset = "0x994AC0", VA = "0x994AC0")]
	public PrivacyLocalizer()
	{
	}
}
[Token(Token = "0x200031F")]
public class ProvideServerCodeLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text HowToUseCodeToEnter;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ServerCode;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text WarningText;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Back;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text BackOutline;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Continue;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text ContinueOutline;

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x994AC8", Offset = "0x994AC8", VA = "0x994AC8", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x994C5C", Offset = "0x994C5C", VA = "0x994C5C")]
	public ProvideServerCodeLocalizer()
	{
	}
}
[Token(Token = "0x2000320")]
public class RegionListLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Regions;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text LoadingRegions;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text NoInternetMessage;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Region;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text USARegion;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text EuropeRegion;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text AsiaRegion;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Players;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Ping;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text ConnectRegion1;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text ConnectRegion1Outline;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text ConnectRegion2;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text ConnectRegion2Outline;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text ConnectRegion3;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text ConnectRegion3Outline;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text Back;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text BackOutline;

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x994C64", Offset = "0x994C64", VA = "0x994C64", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x994F44", Offset = "0x994F44", VA = "0x994F44")]
	public RegionListLocalizer()
	{
	}
}
[Token(Token = "0x2000321")]
public class RpgElementsWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text RpgElementsTitle;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text RpgElementsText;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Continue;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ContinueOutline;

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x994F4C", Offset = "0x994F4C", VA = "0x994F4C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x995030", Offset = "0x995030", VA = "0x995030")]
	public RpgElementsWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000322")]
public class ScoreboardLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Settings;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text SettingsOutline;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text Name;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text Level;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Score;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text WaitingForHost;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text YouAreKilled;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text Quit;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text QuitOutline;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text Start;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text StartOutline;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text Continue;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text ContinueOutline;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text EvaluationVersionWarning;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text pause;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text pauseOutline;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text gamePaused;

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x995038", Offset = "0x995038", VA = "0x995038", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x9953F0", Offset = "0x9953F0", VA = "0x9953F0")]
	public ScoreboardLocalizer()
	{
	}
}
[Token(Token = "0x2000323")]
public class ServerLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Join;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text JoinOutline;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text RoomName;

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x9953F8", Offset = "0x9953F8", VA = "0x9953F8", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x995590", Offset = "0x995590", VA = "0x995590")]
	public ServerLocalizer()
	{
	}
}
[Token(Token = "0x2000324")]
public class SettingsWindowMultiplayerLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Settings;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text SettingsShadow;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text Controls;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text ControlsOutline;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Gameplay;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text ArrowHandOffset;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text controllerVibrations;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text DominantHand;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text GoBackToMainMenu;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text Audio;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text Music;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text Sounds;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text Multiplayer;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text VoiceChat;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text AlwaysSpeak;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text SetPlayerName;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text SetPlayerNameOutline;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text ArcadeGameplay;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Text ArcadeDominantHand;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Text ArcadeGoBackToMainMenu;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Text ArcadeAudio;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Text ArcadeMusic;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Text ArcadeMultiplayer;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Text ArcadeVoiceChat;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Text ArcadeAlwaysSpeak;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Text Back;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Text BackOutline;

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x995598", Offset = "0x995598", VA = "0x995598", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x9959B8", Offset = "0x9959B8", VA = "0x9959B8")]
	public SettingsWindowMultiplayerLocalizer()
	{
	}
}
[Token(Token = "0x2000325")]
public class SettingsWindowSinglePlayerLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Settings;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text Controls;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text ControlsOutline;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text SetPlayerName;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text SetPlayerNameOutline;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text Gameplay;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text ArcadeGameplay;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text DominantHand;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text ArcadeDominantHand;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text GoBackToMainMenu;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text ArcadeGoBackToMainMenu;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text ArrowHandOffset;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text controllerVibrations;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text Audio;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text ArcadeAudio;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Text Music;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Text ArcadeMusic;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Text Sounds;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Text Back;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Text BackOutline;

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x9959C0", Offset = "0x9959C0", VA = "0x9959C0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x995CE4", Offset = "0x995CE4", VA = "0x995CE4")]
	public SettingsWindowSinglePlayerLocalizer()
	{
	}
}
[Token(Token = "0x2000326")]
public class SettingsWindowTournamentLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Settings;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text SettingsShadow;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Controls;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ControlsOutline;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Gameplay;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text ArrowHandOffset;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text DominantHand;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Audio;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Music;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text Sounds;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text Multiplayer;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text VoiceChat;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text AlwaysSpeak;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text VRParkVersion;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text ArcadeGameplay;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text ArcadeDominantHand;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text ArcadeAudio;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text ArcadeMusic;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text ArcadeMultiplayer;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text ArcadeVoiceChat;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text ArcadeAlwaysSpeak;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text Back;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text BackOutline;

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x995CEC", Offset = "0x995CEC", VA = "0x995CEC", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x9960C0", Offset = "0x9960C0", VA = "0x9960C0")]
	public SettingsWindowTournamentLocalizer()
	{
	}
}
[Token(Token = "0x2000327")]
public class SetupOfLocalServerLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Title;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Create;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text CreateOutline;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Join;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text JoinOutline;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Back;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text BackOutline;

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x9960C8", Offset = "0x9960C8", VA = "0x9960C8", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x996240", Offset = "0x996240", VA = "0x996240")]
	public SetupOfLocalServerLocalizer()
	{
	}
}
[Token(Token = "0x2000328")]
public class ShopLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Shop;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Use;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text UseOutline;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Buy;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text BuyOutline;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Bought;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text Ok;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text OkOutline;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text ComingSoon;

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x996248", Offset = "0x996248", VA = "0x996248", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x9963CC", Offset = "0x9963CC", VA = "0x9963CC")]
	public ShopLocalizer()
	{
	}
}
[Token(Token = "0x2000329")]
public class SinglePlayerMapChoiceWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text ChooseLocation;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text DefendElvenTown;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text SupportHumanVillage;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text DefendAncientTempleText;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text supportHumanCastle;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text defendBay;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text winterMountains;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text defendLastStronghold;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text escortTheDwarves;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text escortTheCarriage;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text Back;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text BackOutline;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text Start;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text StartOutline;

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x9963D4", Offset = "0x9963D4", VA = "0x9963D4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x996620", Offset = "0x996620", VA = "0x996620")]
	public SinglePlayerMapChoiceWindowLocalizer()
	{
	}
}
[Token(Token = "0x200032A")]
public class SingleplayerModeMenuLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text ChooseMode;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text ChooseModeShadow;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Rpg;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text RpgShadow;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text RpgDescription;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Arcade;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text ArcadeShadow;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text ArcadeDescription;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Back;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text BackShadow;

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x996628", Offset = "0x996628", VA = "0x996628", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x99683C", Offset = "0x99683C", VA = "0x99683C")]
	public SingleplayerModeMenuLocalizer()
	{
	}
}
[Token(Token = "0x200032B")]
public class SpellsCanvasLocalizer : MonoBehaviour, ILocalizable
{
	[Serializable]
	[Token(Token = "0x200032C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<SpellsWindowLocalizer> <>9__15_0;

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x996BE4", Offset = "0x996BE4", VA = "0x996BE4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x996BEC", Offset = "0x996BEC", VA = "0x996BEC")]
		internal void <Localize>b__15_0(SpellsWindowLocalizer x)
		{
		}
	}

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SpellsWindowLocalizer> spellsWindowLocalizers;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text spells;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text resetWindowTitle;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text yes;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text yesOutline;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text no;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text noOutline;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text youNeedMoreSpellPoints;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text ok;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text okOutline;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text assignSpellsTitle;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text assignWindowBack;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text assignWindowBackOutline;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text howToUseSpellsTitle;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Text howToUseSpellsDescription;

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x996844", Offset = "0x996844", VA = "0x996844", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x996B6C", Offset = "0x996B6C", VA = "0x996B6C")]
	public SpellsCanvasLocalizer()
	{
	}
}
[Token(Token = "0x200032D")]
public class SpellsDescriptionLocalizer : MonoBehaviour
{
	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x996EE4", Offset = "0x996EE4", VA = "0x996EE4")]
	public static string GetSpellDescription(AbilityType spellType)
	{
		return null;
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x996F64", Offset = "0x996F64", VA = "0x996F64")]
	public static string GetSpellName(AbilityType spellType)
	{
		return null;
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x996FE4", Offset = "0x996FE4", VA = "0x996FE4")]
	public SpellsDescriptionLocalizer()
	{
	}
}
[Token(Token = "0x200032E")]
public class SpellsWindowLocalizer : MonoBehaviour
{
	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text fireOutline;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text iceOutline;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text fire;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text ice;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text spellPoints;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text cooldown;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text levelNeededToUpgrade;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text reset;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text resetOutline;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text use;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text useOutline;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text learn;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Text learnOutline;

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x996C00", Offset = "0x996C00", VA = "0x996C00")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x996FEC", Offset = "0x996FEC", VA = "0x996FEC")]
	public SpellsWindowLocalizer()
	{
	}
}
[Token(Token = "0x200032F")]
public class StartMenuLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text btStart;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text btStartOutline;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text SettingsText;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text SettingsOutline;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Leaderboards;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text LeaderboardsOutline;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text quitOculusQuest;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text quitOculusQuestOutline;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text quit;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text quitOutline;

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x996FF4", Offset = "0x996FF4", VA = "0x996FF4", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x99726C", Offset = "0x99726C", VA = "0x99726C")]
	public StartMenuLocalizer()
	{
	}
}
[Token(Token = "0x2000330")]
public class SteamInitErrorMessageLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Message;

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x997274", Offset = "0x997274", VA = "0x997274", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x9972D8", Offset = "0x9972D8", VA = "0x9972D8")]
	public SteamInitErrorMessageLocalizer()
	{
	}
}
[Token(Token = "0x2000331")]
public class TournamentCanvasLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text TournamentTitle;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text TournamentTitleShadow;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Loading;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text TopPlayersHeader;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text BestArchersHeader;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text BestArchersHeaderShadow;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text BestArchersLastTournament;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text BestArchersRank;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text BestArchersName;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text BestArchersStage;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text BestArchersKills;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text BestArchersDeaths;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text BestArchersStatus;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text Join;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text JoinOutline;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text EnrollmentBack;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text EnrollmentBackOutline;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text DisclaimerTitle;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text DisclaimerTitleShadow;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text Disclaimer;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text DisclaimerLinkOutline;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text Agreement;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text MustAgree;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text DisclaimerBack;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text DisclaimerBackOutline;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text Continue;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text ContinueOutline;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text RivalsTitle;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text RivalsTitleShadow;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text RivalsLastTournament;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text RivalsRank;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text RivalsName;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text RivalsStage;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text RivalsKils;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text RivalsDeaths;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text RivalsStatus;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text NoResultsYet;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Text Error;

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x9972E0", Offset = "0x9972E0", VA = "0x9972E0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x997B74", Offset = "0x997B74", VA = "0x997B74")]
	public TournamentCanvasLocalizer()
	{
	}
}
[Token(Token = "0x2000332")]
public class TournamentLeaderboardWindowLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text TournamentLeaderboard;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Rank;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Name;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Round;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Kills;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text Deaths;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text TotalKills;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text TotalDeaths;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text Status;

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x997B7C", Offset = "0x997B7C", VA = "0x997B7C", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x997D00", Offset = "0x997D00", VA = "0x997D00")]
	public TournamentLeaderboardWindowLocalizer()
	{
	}
}
[Token(Token = "0x2000333")]
public class TournamentLobbyLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Settings;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text SettingsOutline;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Quit;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text QuitOutline;

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x997D08", Offset = "0x997D08", VA = "0x997D08", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x997DD8", Offset = "0x997DD8", VA = "0x997DD8")]
	public TournamentLobbyLocalizer()
	{
	}
}
[Token(Token = "0x2000334")]
public class VillageHealthLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text VillageHealth;

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x997DE0", Offset = "0x997DE0", VA = "0x997DE0", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x997E70", Offset = "0x997E70", VA = "0x997E70")]
	public VillageHealthLocalizer()
	{
	}
}
[Token(Token = "0x2000335")]
public class YourServerCodeIsLocalizer : MonoBehaviour, ILocalizable
{
	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text YourServerCodeIs;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text HowToUseCode;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Back;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text BackOutline;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text Continue;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text ContinueOutline;

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x997E78", Offset = "0x997E78", VA = "0x997E78", Slot = "4")]
	public void Localize()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x997FE8", Offset = "0x997FE8", VA = "0x997FE8")]
	public YourServerCodeIsLocalizer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000336")]
public class Translation : ScriptableObject
{
	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string adjDark;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string adjElven;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string adjFire;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string adjFrozen;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string adjGolden;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string adjSilver;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string adjBrave;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string adjForest;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string adjGlorious;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string adjHoly;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string adjSwift;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string adjMythical;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string adjFearless;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string nounArrow;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string nounThunder;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string nounKnight;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string nounPaladin;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string nounWarrior;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string nounWizard;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string nounArcher;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string nounAssassin;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string nounGuardian;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string nounDefender;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string nounBow;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string nounHero;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string nounChampion;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string lbDefendElvenTown;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string lbSupportHumanVillage;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string lbDefendAncientTemple;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string lbSupportHumanCastle;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string lbDefendBay;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string lbWinterMountains;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string lbDefendLastStronghold;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string lbEscortTheDwarves;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public string lbEscortTheCarriage;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public string lbWinterMountainsDeathmatch;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string lbComingSoon;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public string lbBow_WoodenBow_Default;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public string lbBow_SteelDefender;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public string lbBow_NaturesCall;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public string lbBow_BowOfAlliance;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public string lbHelmet_Barbuta_default;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public string lbHelmet_ArchersHelmet;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public string lbHelmet_GiftOfTheSea;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public string lbHelmet_HelmetOfAncestors;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public string lbHelmet_GriffinHelmet;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public string lbSet_ForestGuardian;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public string lbSet_OrcHunter;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public string lbSet_HolySet;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public string lbSet_FrozenTouch;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public string dspBow_WoodenBow_Default;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public string dspBow_SteelDefender;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public string dspBow_NaturesCall;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public string dspBow_BowOfAlliance;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public string dspHelmet_Barbuta_default;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public string dspHelmet_ArchersHelmet;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public string dspHelmet_GiftOfTheSea;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public string dspHelmet_HelmetOfAncestors;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public string dspHelmet_GriffinHelmet;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public string dspSet_ForestGuardian;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public string dspSet_OrcHunter;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public string dspSet_HolySet;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public string dspSet_FrozenTouch;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public string lbMenu;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public string lbSpells;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public string btFire;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public string btIce;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public string lbLevel;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public string lbSpellPoints;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public string lbCooldown;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public string lbLevelNeededToUpgrade;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public string btReset;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public string lbResetWindowTit;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public string btLearn;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public string lbSpellSelectionTitle;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public string lbHowToUseSpellsTitle;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public string lbHowToUseSpellsDescription;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public string lbYouNeedMoreSpellsPoints;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public string lbMaxLevel;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public string txtHigherLevelNeeded;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public string txtSpellPointNeeded;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public string txtPreviousSpellsRequired;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public string txtMaxLevelReached;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public string txtYouHaveToLearnIt;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public string lbFireArrow;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public string lbFireClaws;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public string lbArrowRain;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public string lbExplosion;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public string lbMeteorShower;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public string lbFreezingArrow;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public string lbIceShield;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public string lbIceBolt;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public string lbIceRevive;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public string lbFreezeStorm;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public string dspFireArrow;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public string dspFireClaws;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public string dspArrowRain;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public string dspExplosion;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public string dspMeteorShower;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public string dspFreezingArrow;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public string dspIceShield;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public string dspIceBolt;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public string dspIceRevive;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public string dspFreezeStorm;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public string lbHeadText;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public string lbBlowText;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public string lbBlowTextWands;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public string lbHornWasUsedText;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public string lbMicrophoneNotConnectedText;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public string dspGameEndedDisconnectionMessage;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public string dspRejoinMainMenuCanvas;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public string dspRejoinSmallMainMenuCanvas;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public string txtNoNameSet;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public string txtRpgElementsTitle;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public string txtRpgElementsText;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public string btRpg;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public string lbWithSpells;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public string lbWithoutSpells;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public string lbArrowHandOffset;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public string lbElvenTownHealth;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public string lbHumanVillageHealth;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public string lbHumanCastleHealth;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public string lbTempleHealth;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public string lbAxeDodgedUsingBonus;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public string lbYourElvenTownHasFallen;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public string lbTheHumanVillageHasFallen;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public string lbTheHumanCastleHasFallen;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public string lbAncientTempleHasFallen;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public string lbYouWereKilledByOrcWarrior_WaitForNextWave;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public string lbYouWereKilledByTroll_WaitForNextWave;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public string lbYouWereKilledByDragon_WaitForNextWave;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public string btSpells;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public string lbEvaluationWarning;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public string lbPlayAreaWarningDescription;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public string txtShootToTeleport;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public string txtTouchTrackingText;

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x997FF0", Offset = "0x997FF0", VA = "0x997FF0")]
	public Translation()
	{
	}
}
[Token(Token = "0x2000337")]
public class LocalPositionHolder : MonoBehaviour
{
	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 localPosition;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion localRotation;

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x99931C", Offset = "0x99931C", VA = "0x99931C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x999384", Offset = "0x999384", VA = "0x999384")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x999450", Offset = "0x999450", VA = "0x999450")]
	public LocalPositionHolder()
	{
	}
}
[Token(Token = "0x2000338")]
public class MagicElementController : MonoBehaviour
{
	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image borderImage;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image arrowImage;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text spellLevelText;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite availableImage;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite unavailableImage;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color activeColor;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Color learnedColor;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Color inactiveColor;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text maxSpellLevelText;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Sprite wheelMenuImage;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Image elementImage;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AbilityType spellName;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private bool isElementAvailable;

	[Token(Token = "0x170001BA")]
	public AbilityType SpellName
	{
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x999458", Offset = "0x999458", VA = "0x999458")]
		get
		{
			return default(AbilityType);
		}
	}

	[Token(Token = "0x170001BB")]
	public Sprite WheelMenuImage
	{
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x999460", Offset = "0x999460", VA = "0x999460")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BC")]
	public bool IsElementAvailable
	{
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x999468", Offset = "0x999468", VA = "0x999468")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x999470", Offset = "0x999470", VA = "0x999470")]
		set
		{
		}
	}

	[Token(Token = "0x170001BD")]
	public Color InactiveColor
	{
		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x99947C", Offset = "0x99947C", VA = "0x99947C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x999488", Offset = "0x999488", VA = "0x999488")]
		set
		{
		}
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x999494", Offset = "0x999494", VA = "0x999494")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x999604", Offset = "0x999604", VA = "0x999604")]
	public void Highlight()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x999634", Offset = "0x999634", VA = "0x999634")]
	public void UnHighlight()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x999684", Offset = "0x999684", VA = "0x999684")]
	public void UpdateVisuals()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x999A88", Offset = "0x999A88", VA = "0x999A88")]
	public void SetActiveImage()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x999AB8", Offset = "0x999AB8", VA = "0x999AB8")]
	public void SetNonActiveImage()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x999B04", Offset = "0x999B04", VA = "0x999B04")]
	public bool HasRequiredLevel(IAbility spell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x999B40", Offset = "0x999B40", VA = "0x999B40")]
	public bool IsRequiredSpellUnlocked(IAbility spell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x999918", Offset = "0x999918", VA = "0x999918")]
	private int GetAbilityLevel(IAbility spell)
	{
		return default(int);
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x999D1C", Offset = "0x999D1C", VA = "0x999D1C")]
	public MagicElementController()
	{
	}
}
[Token(Token = "0x2000339")]
public class DisclaimerWindowController : MonoBehaviour
{
	[Token(Token = "0x4001334")]
	private const string urlToPrivacyPolicy = "https://wenklystudio.com/legal/privacypolicy/vrgames/PrivacyPolicy-VR_Games.pdf";

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Toggle toggle;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text errorText;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OnJoinCanvasDisabler tournamentOnJoinCanvasDisabler;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject enrollmentWindow;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BeforeEnrollmentTournamentController enrollmentTournamentController;

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x999D30", Offset = "0x999D30", VA = "0x999D30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x999D6C", Offset = "0x999D6C", VA = "0x999D6C")]
	private void SetStateBeforeDisclaimer()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x999D34", Offset = "0x999D34", VA = "0x999D34")]
	private void SetInitialDisclaimerState()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x999DA8", Offset = "0x999DA8", VA = "0x999DA8")]
	public void OnContinueButtonClick()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x999E00", Offset = "0x999E00", VA = "0x999E00")]
	public void OnRejoinClick()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x999E30", Offset = "0x999E30", VA = "0x999E30")]
	public void OnBackButtonClick()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x999E34", Offset = "0x999E34", VA = "0x999E34")]
	public void OnLinkClick()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x999E78", Offset = "0x999E78", VA = "0x999E78")]
	public void ToggleAgreement()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x999EB8", Offset = "0x999EB8", VA = "0x999EB8")]
	public DisclaimerWindowController()
	{
	}
}
[Token(Token = "0x200033A")]
public class ExternalLinkController : MonoBehaviour
{
	[Token(Token = "0x200033B")]
	private sealed class <OpenApp>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExternalLinkController <>4__this;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x99A118", Offset = "0x99A118", VA = "0x99A118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x99A120", Offset = "0x99A120", VA = "0x99A120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x99A00C", Offset = "0x99A00C", VA = "0x99A00C")]
		[DebuggerHidden]
		public <OpenApp>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x99A03C", Offset = "0x99A03C", VA = "0x99A03C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x99A040", Offset = "0x99A040", VA = "0x99A040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string link;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string appLink;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isPaused;

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x999EC0", Offset = "0x999EC0", VA = "0x999EC0")]
	private void OnApplicationPause()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x999ECC", Offset = "0x999ECC", VA = "0x999ECC")]
	public void OpenLink()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x999F60", Offset = "0x999F60", VA = "0x999F60")]
	public void TryToOpenApp()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x999F98", Offset = "0x999F98", VA = "0x999F98")]
	private IEnumerator OpenApp()
	{
		return null;
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x99A034", Offset = "0x99A034", VA = "0x99A034")]
	public ExternalLinkController()
	{
	}
}
[Token(Token = "0x200033C")]
public class MagicMenuController : MonoBehaviour
{
	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] magicElements;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image leftImage;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image topImage;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image rightImage;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image bottomImage;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color inactiveBorderColor;

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x99A128", Offset = "0x99A128", VA = "0x99A128")]
	public MagicMenuController()
	{
	}
}
[Token(Token = "0x200033D")]
public class MainMenuInitializer : MonoBehaviour
{
	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerProgressionLoader playerProgressionLoader;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ReferenceSetterController referenceSetterController;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Spells spells;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ArcadeGameSwitcher arcadeGameSwitcher;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AutoJoiner autoJoiner;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private MainMenuTeleportsController mainMenuTeleportsController;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private InitGameInfo initGameInfo;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private DRMHandler dRMHandler;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private VRDeviceDetector vRDeviceDetector;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private VoiceChatInitializer voiceChatInitializer;

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x99A130", Offset = "0x99A130", VA = "0x99A130")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x99A1C8", Offset = "0x99A1C8", VA = "0x99A1C8")]
	private void RunInitialization()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x99A284", Offset = "0x99A284", VA = "0x99A284")]
	public MainMenuInitializer()
	{
	}
}
[Token(Token = "0x200033E")]
public class MainMenuLoadingScreenInitializer : MonoBehaviour
{
	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InitGameInfo initGameInfo;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerProgressionLoader playerProgressionLoader;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Spells spells;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Canvas initCanvas;

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x99A28C", Offset = "0x99A28C", VA = "0x99A28C")]
	public void RunInitialization()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x99A358", Offset = "0x99A358", VA = "0x99A358")]
	public void EnableInitCanvas()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x99A378", Offset = "0x99A378", VA = "0x99A378")]
	public MainMenuLoadingScreenInitializer()
	{
	}
}
[Token(Token = "0x200033F")]
public enum SlotPostion
{
	[Token(Token = "0x4001355")]
	Left,
	[Token(Token = "0x4001356")]
	Right,
	[Token(Token = "0x4001357")]
	Top,
	[Token(Token = "0x4001358")]
	Bottom
}
[Token(Token = "0x2000340")]
public class SpellSlot : MonoBehaviour
{
	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SlotPostion slotPosition;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image slotImage;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MagicElementController magicElementController;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpellsMenuController spellsMenuController;

	[Token(Token = "0x400135D")]
	public const string topSlotPlayerPrefsKey = "Top Slot";

	[Token(Token = "0x400135E")]
	public const string bottomSlotPlayerPrefsKey = "Bottom Slot";

	[Token(Token = "0x400135F")]
	public const string leftSlotPlayerPrefsKey = "Left Slot";

	[Token(Token = "0x4001360")]
	public const string rightSlotPlayerPrefsKey = "Right Slot";

	[Token(Token = "0x170001C0")]
	public MagicElementController MagicElementController
	{
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x99A4D0", Offset = "0x99A4D0", VA = "0x99A4D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x99A4D8", Offset = "0x99A4D8", VA = "0x99A4D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x99A380", Offset = "0x99A380", VA = "0x99A380")]
	public static string GetSlotPlayerPrefsKeyBySlotPosition(SlotPostion slotPosition)
	{
		return null;
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x99A588", Offset = "0x99A588", VA = "0x99A588")]
	public void SetSpell()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x99A9B4", Offset = "0x99A9B4", VA = "0x99A9B4")]
	public SpellSlot()
	{
	}
}
[Token(Token = "0x2000341")]
public class SpellsMenuController : MonoBehaviour
{
	[Token(Token = "0x2000342")]
	public delegate void LearnSpellDelegate();

	[Token(Token = "0x2000343")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AbilityType abilityType;

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x99B690", Offset = "0x99B690", VA = "0x99B690")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x99C8BC", Offset = "0x99C8BC", VA = "0x99C8BC")]
		internal bool <SelectSpell>b__0(MagicElementController magicElement)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject iceCard;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fireCard;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject wheelMenu;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color learnedColor;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<MagicElementController> magicElementControllers;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SpellSlot[] spellSlots;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject infoWindow;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text infoWindowText;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SpellsWindowUI spellsWindowUI;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MagicElementController <SelectedSpell>k__BackingField;

	[Token(Token = "0x170001C1")]
	public SpellsWindowUI SpellsWindowUI
	{
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x99AE9C", Offset = "0x99AE9C", VA = "0x99AE9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x99AEA4", Offset = "0x99AEA4", VA = "0x99AEA4")]
		set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	public MagicElementController SelectedSpell
	{
		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x99AEAC", Offset = "0x99AEAC", VA = "0x99AEAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x99AEB4", Offset = "0x99AEB4", VA = "0x99AEB4")]
		set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	public int SelectedSpellIndex
	{
		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x99AEBC", Offset = "0x99AEBC", VA = "0x99AEBC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001C4")]
	public GameObject LearnButton
	{
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x99AF98", Offset = "0x99AF98", VA = "0x99AF98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C5")]
	public GameObject UseButton
	{
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x99AFB4", Offset = "0x99AFB4", VA = "0x99AFB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000026")]
	public event LearnSpellDelegate OnCannotLearn
	{
		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x99A9BC", Offset = "0x99A9BC", VA = "0x99A9BC")]
		add
		{
		}
		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x99AA58", Offset = "0x99AA58", VA = "0x99AA58")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public event LearnSpellDelegate OnLearning
	{
		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x99AAF4", Offset = "0x99AAF4", VA = "0x99AAF4")]
		add
		{
		}
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x99AB90", Offset = "0x99AB90", VA = "0x99AB90")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event LearnSpellDelegate OnCannotUse
	{
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x99AC2C", Offset = "0x99AC2C", VA = "0x99AC2C")]
		add
		{
		}
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x99ACC8", Offset = "0x99ACC8", VA = "0x99ACC8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event LearnSpellDelegate OnUsing
	{
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x99AD64", Offset = "0x99AD64", VA = "0x99AD64")]
		add
		{
		}
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x99AE00", Offset = "0x99AE00", VA = "0x99AE00")]
		remove
		{
		}
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x99AFD0", Offset = "0x99AFD0", VA = "0x99AFD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x99AFE8", Offset = "0x99AFE8", VA = "0x99AFE8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x99B55C", Offset = "0x99B55C", VA = "0x99B55C")]
	public void SelectSpell(AbilityType abilityType)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x99B7E0", Offset = "0x99B7E0", VA = "0x99B7E0")]
	public SpellSlot GetSlotByPosition(SlotPostion slotPosition)
	{
		return null;
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x99B698", Offset = "0x99B698", VA = "0x99B698")]
	public void UnHighlightAllMagicElements()
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x99A84C", Offset = "0x99A84C", VA = "0x99A84C")]
	public void AssignSpell(MagicElementController spellToAssign, SlotPostion slotPosition)
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x99A780", Offset = "0x99A780", VA = "0x99A780")]
	public void RemoveSpellFromSlots(MagicElementController spellToRemove)
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x99A678", Offset = "0x99A678", VA = "0x99A678")]
	public void SwapSpellSlot(SpellSlot spellSlot, MagicElementController spellToSet)
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x99B898", Offset = "0x99B898", VA = "0x99B898")]
	private bool AbilityAssignedToSlot(MagicElementController magicElementController)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x99B95C", Offset = "0x99B95C", VA = "0x99B95C")]
	public void UnlockAllSpellsForTestingPurposes()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x99BD14", Offset = "0x99BD14", VA = "0x99BD14")]
	public void LearnSelectedSpell()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x99BCBC", Offset = "0x99BCBC", VA = "0x99BCBC")]
	private bool PlayerCanLearnSelectedSpell(IAbility currentSpell)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x99C33C", Offset = "0x99C33C", VA = "0x99C33C")]
	private void ShowInfoWindow(string info)
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x99C3C0", Offset = "0x99C3C0", VA = "0x99C3C0")]
	private MagicElementController GetMagicElementControllerBySpellName(string spellName)
	{
		return null;
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x99B000", Offset = "0x99B000", VA = "0x99B000")]
	private void LoadSpells()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x99B18C", Offset = "0x99B18C", VA = "0x99B18C")]
	private void LoadSpellSlots()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x99A870", Offset = "0x99A870", VA = "0x99A870")]
	public void SaveSpellSlots()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x99C600", Offset = "0x99C600", VA = "0x99C600")]
	public void AssignSpell(out bool canAssignSpell)
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x99BC90", Offset = "0x99BC90", VA = "0x99BC90")]
	public void UpdatePlayerExp()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x99C200", Offset = "0x99C200", VA = "0x99C200")]
	private bool PlayerHasRequredLevel(IAbility selectedSpell)
	{
		return default(bool);
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x99C2CC", Offset = "0x99C2CC", VA = "0x99C2CC")]
	private bool PlayerHasEnoughSpellPoints()
	{
		return default(bool);
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x99BBE4", Offset = "0x99BBE4", VA = "0x99BBE4")]
	private bool PlayerHasRequiredSpellUnlocked(IAbility selectedSpell)
	{
		return default(bool);
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x99C070", Offset = "0x99C070", VA = "0x99C070")]
	private bool PlayerHasReachMaxSpellLevel(IAbility selectedSpell)
	{
		return default(bool);
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x99C734", Offset = "0x99C734", VA = "0x99C734")]
	[ContextMenu("GatherMagicElementControllers")]
	private void GatherMagicElementControllers()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x99C7D4", Offset = "0x99C7D4", VA = "0x99C7D4")]
	public SpellsMenuController()
	{
	}
}
[Token(Token = "0x2000344")]
public class SpellsTutorialController : MonoBehaviour
{
	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellsMenuController spellsMenuController;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject arrowOnSpellToLearn;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject arrowOnLearn;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject arrowOnUse;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject arrowOnSpellToLearnIce;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject arrowOnLearnIce;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject arrowOnUseIce;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject arrowOnAttachToSlot;

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x99C8E0", Offset = "0x99C8E0", VA = "0x99C8E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x99CCC8", Offset = "0x99CCC8", VA = "0x99CCC8")]
	private bool CheckIfAttachedAnySpellInMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x99CC28", Offset = "0x99CC28", VA = "0x99CC28")]
	private void ToggleAllArrows(bool value)
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x99D094", Offset = "0x99D094", VA = "0x99D094")]
	public SpellsTutorialController()
	{
	}
}
[Token(Token = "0x2000345")]
public class MeshAttacher : MonoBehaviour
{
	[Token(Token = "0x6001013")]
	[Address(RVA = "0x99D09C", Offset = "0x99D09C", VA = "0x99D09C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x99D134", Offset = "0x99D134", VA = "0x99D134")]
	public MeshAttacher()
	{
	}
}
[Token(Token = "0x2000346")]
public class MicrophoneController : MonoBehaviour
{
	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool micConnected;

	[Token(Token = "0x170001C6")]
	public bool MicConnected
	{
		[Token(Token = "0x6001015")]
		[Address(RVA = "0x99D13C", Offset = "0x99D13C", VA = "0x99D13C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x99D144", Offset = "0x99D144", VA = "0x99D144")]
	private void Start()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x99D148", Offset = "0x99D148", VA = "0x99D148")]
	public void MicrophoneSetup()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x99D1E0", Offset = "0x99D1E0", VA = "0x99D1E0")]
	public MicrophoneController()
	{
	}
}
[Token(Token = "0x2000347")]
public class MicrophoneUIInertia : MonoBehaviour
{
	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform mainCamera;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x99D1E8", Offset = "0x99D1E8", VA = "0x99D1E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x99D39C", Offset = "0x99D39C", VA = "0x99D39C")]
	public MicrophoneUIInertia()
	{
	}
}
[Token(Token = "0x2000348")]
public class PlayersController : MonoBehaviour
{
	[Token(Token = "0x600101B")]
	[Address(RVA = "0x99D3A4", Offset = "0x99D3A4", VA = "0x99D3A4")]
	public PlayersController()
	{
	}
}
[Token(Token = "0x2000349")]
public static class TournamentRoomPropertiesController
{
	[Token(Token = "0x170001C7")]
	public static bool IsInTournamentRoom
	{
		[Token(Token = "0x600101C")]
		[Address(RVA = "0x99D3AC", Offset = "0x99D3AC", VA = "0x99D3AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x99D468", Offset = "0x99D468", VA = "0x99D468")]
	public static RoomOptions GetDefaultTournamentDeathMatchRoomOptions(int maxPlayersCount = 4)
	{
		return null;
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x99D76C", Offset = "0x99D76C", VA = "0x99D76C")]
	public static RoomOptions GetDefaultTournamentRoomOptions()
	{
		return null;
	}
}
[Token(Token = "0x200034A")]
public class CloudRegionByLocalTimeZoneDetector : MonoBehaviour
{
	[Token(Token = "0x400137B")]
	private const int minEuropeTimeZoneOffset = 0;

	[Token(Token = "0x400137C")]
	private const int maxEuropeTimeZoneOffset = 4;

	[Token(Token = "0x400137D")]
	private const int minAsiaTimeZoneOffset = 5;

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x99D934", Offset = "0x99D934", VA = "0x99D934")]
	public static CloudRegionCode GetCloudRegionByLocalTimeZone()
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x99D9C0", Offset = "0x99D9C0", VA = "0x99D9C0")]
	public CloudRegionByLocalTimeZoneDetector()
	{
	}
}
[Token(Token = "0x200034B")]
public class OculusMenuHandController : MonoBehaviour
{
	[Token(Token = "0x200034C")]
	public enum HandSide
	{
		[Token(Token = "0x4001380")]
		LEFT,
		[Token(Token = "0x4001381")]
		RIGHT
	}

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandSide handSide;

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x99D9C8", Offset = "0x99D9C8", VA = "0x99D9C8")]
	public OculusMenuHandController()
	{
	}
}
[Token(Token = "0x200034D")]
public class DestinationController : MonoBehaviour, IConnectionCallbacks, ILobbyCallbacks
{
	[Token(Token = "0x4001382")]
	private const int minEuropeTimeZoneOffset = 0;

	[Token(Token = "0x4001383")]
	private const int maxEuropeTimeZoneOffset = 4;

	[Token(Token = "0x4001384")]
	private const int minAsiaTimeZoneOffset = 5;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Maps maps;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string serverName;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string customServerName;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isCreatingRoom;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isJoiningRoom;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool isGroupLaunch;

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x99D9D0", Offset = "0x99D9D0", VA = "0x99D9D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x99DCE0", Offset = "0x99DCE0", VA = "0x99DCE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x99DFF0", Offset = "0x99DFF0", VA = "0x99DFF0")]
	private void CreateRoom(string mapName)
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x99E184", Offset = "0x99E184", VA = "0x99E184")]
	private void CreateCustomNameRoom(string mapName, string customRoomName)
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x99DFF4", Offset = "0x99DFF4", VA = "0x99DFF4")]
	private void ConnectUsingMap(string _mapName)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x99E1BC", Offset = "0x99E1BC", VA = "0x99E1BC")]
	private string GetRegionBasedOnLocalTimeZone()
	{
		return null;
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x99E408", Offset = "0x99E408", VA = "0x99E408")]
	private void ConnectToRegion(string cloudRegionCode, string _mapName)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x99E554", Offset = "0x99E554", VA = "0x99E554")]
	private void ErrorMessage()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x99E5BC", Offset = "0x99E5BC", VA = "0x99E5BC", Slot = "5")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x99E6A8", Offset = "0x99E6A8", VA = "0x99E6A8", Slot = "10")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x99E6F4", Offset = "0x99E6F4", VA = "0x99E6F4", Slot = "4")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x99E6F8", Offset = "0x99E6F8", VA = "0x99E6F8", Slot = "9")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x99E6FC", Offset = "0x99E6FC", VA = "0x99E6FC", Slot = "8")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x99E700", Offset = "0x99E700", VA = "0x99E700", Slot = "6")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x99E704", Offset = "0x99E704", VA = "0x99E704", Slot = "7")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x99E708", Offset = "0x99E708", VA = "0x99E708", Slot = "11")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x99E70C", Offset = "0x99E70C", VA = "0x99E70C", Slot = "12")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x99E710", Offset = "0x99E710", VA = "0x99E710", Slot = "13")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x99E714", Offset = "0x99E714", VA = "0x99E714")]
	public DestinationController()
	{
	}
}
[Token(Token = "0x200034E")]
public class MainMenuLoaderController : MonoBehaviour
{
	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Map mainMenuMap;

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x99E71C", Offset = "0x99E71C", VA = "0x99E71C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x99E8C8", Offset = "0x99E8C8", VA = "0x99E8C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x99EA74", Offset = "0x99EA74", VA = "0x99EA74")]
	private void LoadMenu()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x99EB38", Offset = "0x99EB38", VA = "0x99EB38")]
	private void LoadMenu(string unrelevantArg)
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x99EB3C", Offset = "0x99EB3C", VA = "0x99EB3C")]
	public MainMenuLoaderController()
	{
	}
}
[Token(Token = "0x200034F")]
public class RichPresenceAndDestination : MonoBehaviour, IMatchmakingCallbacks
{
	[Token(Token = "0x2000350")]
	public enum ConnectionType
	{
		[Token(Token = "0x400139F")]
		None,
		[Token(Token = "0x40013A0")]
		JoinToUser,
		[Token(Token = "0x40013A1")]
		DirectLaunch,
		[Token(Token = "0x40013A2")]
		GroupLaunch
	}

	[Serializable]
	[Token(Token = "0x2000351")]
	private sealed class <>c
	{
		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__42_0;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Message<User>.Callback <>9__44_1;

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x9A0EA8", Offset = "0x9A0EA8", VA = "0x9A0EA8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x9A0EB0", Offset = "0x9A0EB0", VA = "0x9A0EB0")]
		internal bool <WaitForDisconect>b__42_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x9A0F0C", Offset = "0x9A0F0C", VA = "0x9A0F0C")]
		internal void <SetPresence>b__44_1(Message<User> message2)
		{
		}
	}

	[Token(Token = "0x2000352")]
	private sealed class <WaitForDisconect>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x9A1374", Offset = "0x9A1374", VA = "0x9A1374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x9A137C", Offset = "0x9A137C", VA = "0x9A137C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x9A036C", Offset = "0x9A036C", VA = "0x9A036C")]
		[DebuggerHidden]
		public <WaitForDisconect>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x9A11C4", Offset = "0x9A11C4", VA = "0x9A11C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x9A11C8", Offset = "0x9A11C8", VA = "0x9A11C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000353")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Message message;

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x9A0E30", Offset = "0x9A0E30", VA = "0x9A0E30")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x9A1384", Offset = "0x9A1384", VA = "0x9A1384")]
		internal void <ClearPresence>b__1(Message<User> message2)
		{
		}
	}

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuLoadingScreenInitializer mainMenuLoadingScreenInitializer;

	[Token(Token = "0x400138D")]
	private const short regionID = 2;

	[Token(Token = "0x400138E")]
	private const short mapID = 1;

	[Token(Token = "0x400138F")]
	private const int launchID = 0;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<MapNames, string> destinations;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string deeplinkMessageCached;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ConnectionType connectionType;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isVoiceDisabled;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isWarmStart;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool photonVoiceCachedSetting;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ulong LoggedInUserID;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string[] serverInfo;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string groupServerName;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LaunchDetails warmLaunchDetails;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<string> OnCreateGame;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnLoadMenu;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<string, string> OnJoinGame;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<string, string> OnCreateCustomGame;

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x99EB44", Offset = "0x99EB44", VA = "0x99EB44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x99EBB0", Offset = "0x99EBB0", VA = "0x99EBB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x99EEB0", Offset = "0x99EEB0", VA = "0x99EEB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x99F170", Offset = "0x99F170", VA = "0x99F170")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x99F390", Offset = "0x99F390", VA = "0x99F390")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x99F404", Offset = "0x99F404", VA = "0x99F404")]
	private void LoadPresence()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x99F508", Offset = "0x99F508", VA = "0x99F508")]
	private void LoadGameBasedOnDestination(LaunchDetails warmLaunchDetails)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x99F604", Offset = "0x99F604", VA = "0x99F604")]
	private void SetupConnectionDetails(LaunchDetails launchDetails)
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x99FA5C", Offset = "0x99FA5C", VA = "0x99FA5C")]
	private bool IsGroupLaunch(LaunchDetails launchDetails)
	{
		return default(bool);
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x99F858", Offset = "0x99F858", VA = "0x99F858")]
	private void ConnectBasedOnConnectionType()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x99FB1C", Offset = "0x99FB1C", VA = "0x99FB1C")]
	private void TryToGroupLaunch(string map)
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x99FA7C", Offset = "0x99FA7C", VA = "0x99FA7C")]
	private void DisableVoiceChat()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x99F5F8", Offset = "0x99F5F8", VA = "0x99F5F8")]
	private static LaunchDetails SetupLaunchDetails(LaunchDetails warmLaunchDetails)
	{
		return null;
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x99FB9C", Offset = "0x99FB9C", VA = "0x99FB9C")]
	private void TryToSetPresenceOnSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x99F1D4", Offset = "0x99F1D4", VA = "0x99F1D4")]
	private void TryToSetPresence()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x99FC04", Offset = "0x99FC04", VA = "0x99FC04")]
	private bool ShouldClearPresence(RoomInfoDetails roomInfoDetails)
	{
		return default(bool);
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x9A0034", Offset = "0x9A0034", VA = "0x9A0034")]
	private void OnLoggedInUser(Message<User> message)
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x9A00E4", Offset = "0x9A00E4", VA = "0x9A00E4")]
	private Message<string>.Callback OnLaunch()
	{
		return null;
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x9A0160", Offset = "0x9A0160", VA = "0x9A0160")]
	private void TryToCloseRoom()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x9A020C", Offset = "0x9A020C", VA = "0x9A020C")]
	private void TryToProceedWarmStart()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x9A0250", Offset = "0x9A0250", VA = "0x9A0250")]
	private void TryToProceedWarmStart(Scene scene, LoadSceneMode loadSceneMode)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x9A0254", Offset = "0x9A0254", VA = "0x9A0254")]
	private void TryRemoveCachedDeeplinkMessage(Scene scene)
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x9A0304", Offset = "0x9A0304", VA = "0x9A0304")]
	private void TryRemoveCachedDeeplinkMessage(Scene scene, LoadSceneMode loadSceneMode)
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x9A030C", Offset = "0x9A030C", VA = "0x9A030C")]
	private IEnumerator WaitForDisconect()
	{
		return null;
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x99FD40", Offset = "0x99FD40", VA = "0x99FD40")]
	public void SetupRichPresence(RoomInfoDetails roomInfo)
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x9A0394", Offset = "0x9A0394", VA = "0x9A0394")]
	private void SetPresence(RichPresenceOptions richPresenceOptions)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x99FCA8", Offset = "0x99FCA8", VA = "0x99FCA8")]
	public void ClearPresence()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x9A043C", Offset = "0x9A043C", VA = "0x9A043C", Slot = "6")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x9A04B0", Offset = "0x9A04B0", VA = "0x9A04B0", Slot = "4")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x9A04B4", Offset = "0x9A04B4", VA = "0x9A04B4", Slot = "5")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x9A04B8", Offset = "0x9A04B8", VA = "0x9A04B8", Slot = "7")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x9A04BC", Offset = "0x9A04BC", VA = "0x9A04BC", Slot = "8")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x9A04C0", Offset = "0x9A04C0", VA = "0x9A04C0", Slot = "9")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x9A04C4", Offset = "0x9A04C4", VA = "0x9A04C4", Slot = "10")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x9A04C8", Offset = "0x9A04C8", VA = "0x9A04C8")]
	public RichPresenceAndDestination()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x9A0788", Offset = "0x9A0788", VA = "0x9A0788")]
	private void <LoadPresence>b__24_0(Message<PlatformInitialize> message)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x9A097C", Offset = "0x9A097C", VA = "0x9A097C")]
	private void <OnLaunch>b__36_0(Message<string> message)
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x9A0AF0", Offset = "0x9A0AF0", VA = "0x9A0AF0")]
	private void <SetPresence>b__44_0(Message message)
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x9A0CA0", Offset = "0x9A0CA0", VA = "0x9A0CA0")]
	private void <ClearPresence>b__45_0(Message message)
	{
	}
}
[Token(Token = "0x2000354")]
public class RoomInfoDetails : MonoBehaviour
{
	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MapNames map;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Region;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string RoomCode;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isMultiplayer;

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x99FBFC", Offset = "0x99FBFC", VA = "0x99FBFC")]
	public RoomInfoDetails()
	{
	}
}
[Token(Token = "0x2000355")]
public class OffsetSetter : MonoBehaviour
{
	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float NewHorizontalValue;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VerticalOffsetValue;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float HorizontalOffsetValue;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform BowHandTransform;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform ArrowHandTransform;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform CameraTransform;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BowController bowController;

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x9A1468", Offset = "0x9A1468", VA = "0x9A1468")]
	public void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x9A1474", Offset = "0x9A1474", VA = "0x9A1474")]
	public void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x9A1480", Offset = "0x9A1480", VA = "0x9A1480")]
	private void Update()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x9A17C0", Offset = "0x9A17C0", VA = "0x9A17C0")]
	public OffsetSetter()
	{
	}
}
[Token(Token = "0x2000356")]
public class OrcKillerController : MonoBehaviourPun
{
	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource sound;

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x9A17E0", Offset = "0x9A17E0", VA = "0x9A17E0")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x9A18EC", Offset = "0x9A18EC", VA = "0x9A18EC")]
	[PunRPC]
	private void RPCDestroyOrcs()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x9A1A50", Offset = "0x9A1A50", VA = "0x9A1A50")]
	public OrcKillerController()
	{
	}
}
[Token(Token = "0x2000357")]
public class Particle_Controller : MonoBehaviour
{
	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sortingLayerName;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destoryAfterEndPlay;

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x9A1A58", Offset = "0x9A1A58", VA = "0x9A1A58")]
	private void Start()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x9A1B98", Offset = "0x9A1B98", VA = "0x9A1B98")]
	private void Update()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x9A1CA8", Offset = "0x9A1CA8", VA = "0x9A1CA8")]
	private bool ParticlePlaying(Transform p_Transform)
	{
		return default(bool);
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x9A1DBC", Offset = "0x9A1DBC", VA = "0x9A1DBC")]
	public Particle_Controller()
	{
	}
}
[Token(Token = "0x2000358")]
public class CarriageCartBehaviourController : MonoBehaviour, ICartBehaviour
{
	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnemyMovementController carriageMovementController;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemiesSlotsController enemiesSlotsController;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CarriageSoundController carriageSoundController;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RouteController routeController;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SplineFollowerMovementProcessor splineFollowerMovementProcessor;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform horseTransform;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HorseAnimatorController horseAnimatorController;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float distanceToHorseTransform;

	[Token(Token = "0x170001CA")]
	public float ReachedDistance
	{
		[Token(Token = "0x6001078")]
		[Address(RVA = "0x9A1DC4", Offset = "0x9A1DC4", VA = "0x9A1DC4", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x9A1DF8", Offset = "0x9A1DF8", VA = "0x9A1DF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x9A1EC8", Offset = "0x9A1EC8", VA = "0x9A1EC8", Slot = "5")]
	public void Initialize(RoutePoint spawnRoutePoint, List<RoutePoint> additionalSpawnRoutePoints)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x9A1F54", Offset = "0x9A1F54", VA = "0x9A1F54", Slot = "6")]
	public void GroundCart()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x9A1FA0", Offset = "0x9A1FA0", VA = "0x9A1FA0", Slot = "7")]
	public void StartCart()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x9A2018", Offset = "0x9A2018", VA = "0x9A2018", Slot = "8")]
	public void OnFinishedRoute()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x9A201C", Offset = "0x9A201C", VA = "0x9A201C")]
	public void SetReferences(HorseAnimatorController horseAnimatorController, Transform horseTransform)
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x9A204C", Offset = "0x9A204C", VA = "0x9A204C")]
	public CarriageCartBehaviourController()
	{
	}
}
[Token(Token = "0x2000359")]
public class CarriageDifferentialController : MonoBehaviour
{
	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject leftWheel;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightWheel;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float rotationSpeedFactor;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController carriageMovementcontroller;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastLeftWheelPos;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 lastRightWheelPos;

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x9A2054", Offset = "0x9A2054", VA = "0x9A2054")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x9A20B0", Offset = "0x9A20B0", VA = "0x9A20B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x9A23AC", Offset = "0x9A23AC", VA = "0x9A23AC")]
	public CarriageDifferentialController()
	{
	}
}
[Serializable]
[Token(Token = "0x200035A")]
public class CarriageReferences
{
	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HorseAnimatorController horseAnimatorController;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform horseTransform;

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x9A23B4", Offset = "0x9A23B4", VA = "0x9A23B4")]
	public CarriageReferences()
	{
	}
}
[Token(Token = "0x200035B")]
public class CarriageSoundController : MonoBehaviour
{
	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioItem carriageMoveSound;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioItem leftFrontHoofSound;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioItem rightFrontHoofSound;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioItem leftBackHoofSound;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioItem rightBackHoofSound;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioItem carriageHitSound;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isFadingCarriageMoveSound;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float baseCarriageMoveSound;

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x9A23BC", Offset = "0x9A23BC", VA = "0x9A23BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x9A23EC", Offset = "0x9A23EC", VA = "0x9A23EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x9A1FDC", Offset = "0x9A1FDC", VA = "0x9A1FDC")]
	public void PlayMoveSound()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x9A2498", Offset = "0x9A2498", VA = "0x9A2498")]
	public void PlayLeftFrontHoofSound()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x9A24B4", Offset = "0x9A24B4", VA = "0x9A24B4")]
	public void PlayRightFrontHoofSound()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x9A24D0", Offset = "0x9A24D0", VA = "0x9A24D0")]
	public void PlayLeftBackHoofSound()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x9A24EC", Offset = "0x9A24EC", VA = "0x9A24EC")]
	public void PlayRightBackHoofSound()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x9A1F94", Offset = "0x9A1F94", VA = "0x9A1F94")]
	public void StopMoveSound()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x9A2508", Offset = "0x9A2508", VA = "0x9A2508")]
	public void PlayHitSound()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x9A2524", Offset = "0x9A2524", VA = "0x9A2524")]
	public CarriageSoundController()
	{
	}
}
[Token(Token = "0x200035C")]
public class CartAnimController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int getHit1;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int getHit2;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int GetDestroyed;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CartAttackTargetController cartAttackTargetController;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] getHitAnims;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isDestroyed;

	[Token(Token = "0x170001CB")]
	private bool IsDestroyed
	{
		[Token(Token = "0x600108E")]
		[Address(RVA = "0x9A252C", Offset = "0x9A252C", VA = "0x9A252C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600108F")]
		[Address(RVA = "0x9A2534", Offset = "0x9A2534", VA = "0x9A2534")]
		set
		{
		}
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x9A257C", Offset = "0x9A257C", VA = "0x9A257C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x9A2600", Offset = "0x9A2600", VA = "0x9A2600")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x9A278C", Offset = "0x9A278C", VA = "0x9A278C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x9A2918", Offset = "0x9A2918", VA = "0x9A2918")]
	private void PlayeGetHitAnim()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x9A2970", Offset = "0x9A2970", VA = "0x9A2970")]
	private void PlayDestroyCartAnimation(HealthStateController healthStateController)
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x9A2978", Offset = "0x9A2978", VA = "0x9A2978", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x9A2A40", Offset = "0x9A2A40", VA = "0x9A2A40")]
	public CartAnimController()
	{
	}
}
[Token(Token = "0x200035D")]
public class FourSupportPointsVerticalObjectStayOnTerrainController : MonoBehaviour
{
	[Token(Token = "0x40013D8")]
	private const float rayMaxDistance = 10f;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Vector3 raycastOriginOffset;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly Vector3 raycastDirection;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LayerMask terrainLayerMask;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxRotationSpeed;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxTranslationSpeed;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform backOnTerrainLeft;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform backOnTerrainRight;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform frontOnTerrainLeft;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform frontOnTerrainRight;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform backCenter;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform frontCenter;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RaycastHit backLeftRaycastHit;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RaycastHit backRightRaycastHit;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RaycastHit frontLeftRaycastHit;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private RaycastHit frontRightRaycastHit;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 backPosition;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 frontPosition;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 forward;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector3 position;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float backYPosition;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float frontYPosition;

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x9A2AE8", Offset = "0x9A2AE8", VA = "0x9A2AE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x9A2BEC", Offset = "0x9A2BEC", VA = "0x9A2BEC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x9A3258", Offset = "0x9A3258", VA = "0x9A3258")]
	public FourSupportPointsVerticalObjectStayOnTerrainController()
	{
	}
}
[Token(Token = "0x200035E")]
public class HorseAnimatorController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40013EE")]
	private const float movementSpeedToAnimationSpeedFactor = 3f;

	[Token(Token = "0x40013EF")]
	private const float animatorRotationChangeSpeed = 2f;

	[Token(Token = "0x40013F0")]
	private const float maxAngleMultiplier = 2f;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int isWalking;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int walkSpeedMultiplier;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int rotationSpeedAnimatorHash;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyMovementController carriageMovementController;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float animatorRotationSpeed;

	[Token(Token = "0x170001CC")]
	public float WalkSpeedMultiplier
	{
		[Token(Token = "0x600109A")]
		[Address(RVA = "0x7F2AF8", Offset = "0x7F2AF8", VA = "0x7F2AF8")]
		set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	public bool IsWalking
	{
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x7F2B1C", Offset = "0x7F2B1C", VA = "0x7F2B1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600109C")]
		[Address(RVA = "0x7F2B40", Offset = "0x7F2B40", VA = "0x7F2B40")]
		set
		{
		}
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x7F2B6C", Offset = "0x7F2B6C", VA = "0x7F2B6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x7F2C44", Offset = "0x7F2C44", VA = "0x7F2C44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x7F2D1C", Offset = "0x7F2D1C", VA = "0x7F2D1C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x7F2D40", Offset = "0x7F2D40", VA = "0x7F2D40")]
	public void StartHorse()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x7F2D48", Offset = "0x7F2D48", VA = "0x7F2D48")]
	public void StopHorse()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x7F2D50", Offset = "0x7F2D50", VA = "0x7F2D50")]
	private void AdjustAnimatorToCurrentRotationChange(Vector3 lastForward, Vector3 newForward)
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x7F2FE0", Offset = "0x7F2FE0", VA = "0x7F2FE0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x7F30B4", Offset = "0x7F30B4", VA = "0x7F30B4")]
	public HorseAnimatorController()
	{
	}
}
[Token(Token = "0x200035F")]
public class OnHorseAnimationEventHandler : MonoBehaviour
{
	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CarriageSoundController carriageSoundController;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem leftFrontHoofParticle;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem rightFrontHoofParticle;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystem leftBackHoofParticle;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem rightBackHoofParticle;

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x7F315C", Offset = "0x7F315C", VA = "0x7F315C")]
	public void LeftFrontHoofStep()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x7F318C", Offset = "0x7F318C", VA = "0x7F318C")]
	public void RightFrontHoofStep()
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x7F31BC", Offset = "0x7F31BC", VA = "0x7F31BC")]
	public void LeftBackHoofStep()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x7F31EC", Offset = "0x7F31EC", VA = "0x7F31EC")]
	public void RightBackHoofStep()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x7F321C", Offset = "0x7F321C", VA = "0x7F321C")]
	public OnHorseAnimationEventHandler()
	{
	}
}
[Token(Token = "0x2000360")]
public class TwoSupportPointsConnectedObjectStayOnTerrainController : MonoBehaviour
{
	[Token(Token = "0x40013FC")]
	private const float rayMaxDistance = 20f;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Vector3 raycastOriginOffset;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly Vector3 raycastDirection;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LayerMask terrainLayerMask;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxRotationSpeed;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxTranslationSpeed;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform leftSupportPoint;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform rightSupportPoint;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform joint;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RaycastHit leftRaycastHit;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private RaycastHit rightRaycastHit;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 position;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 right;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 forward;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 upwards;

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x7F3224", Offset = "0x7F3224", VA = "0x7F3224")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x7F3314", Offset = "0x7F3314", VA = "0x7F3314")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x7F39A0", Offset = "0x7F39A0", VA = "0x7F39A0")]
	public TwoSupportPointsConnectedObjectStayOnTerrainController()
	{
	}
}
[Token(Token = "0x2000361")]
public class WheelRotator : MonoBehaviour
{
	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform wheelTransform;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform wheelHelper;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform wheelGroundTouchPoint;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 localWheelRotationAxis;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float wheelCircumference;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float wheelGroundTouchPointTranslation;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 lastGroundTouchPointPosition;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canRotate;

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x7F3A44", Offset = "0x7F3A44", VA = "0x7F3A44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x7F3B54", Offset = "0x7F3B54", VA = "0x7F3B54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x7F3C4C", Offset = "0x7F3C4C", VA = "0x7F3C4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x7F3D44", Offset = "0x7F3D44", VA = "0x7F3D44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x7F3B28", Offset = "0x7F3B28", VA = "0x7F3B28")]
	private void UpdateLastGroundTouchPointPosition()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x7F3E70", Offset = "0x7F3E70", VA = "0x7F3E70")]
	private void DisableWheelRotation()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x7F3E78", Offset = "0x7F3E78", VA = "0x7F3E78")]
	public WheelRotator()
	{
	}
}
[Token(Token = "0x2000362")]
public class CartAttackTargetController : MonoBehaviour, IAttackTarget
{
	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PhotonView targetView;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthStateController healthStateController;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CarriageSoundController carriageSoundController;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnGetHit;

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x7F3E80", Offset = "0x7F3E80", VA = "0x7F3E80", Slot = "5")]
	public void GetHit(AttackInfo attackInfo)
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x7F3F40", Offset = "0x7F3F40", VA = "0x7F3F40", Slot = "4")]
	public int GetPhotonID()
	{
		return default(int);
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x7F3F5C", Offset = "0x7F3F5C", VA = "0x7F3F5C")]
	public CartAttackTargetController()
	{
	}
}
[Token(Token = "0x2000363")]
public class DwarfAnimatorController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x2000364")]
	private sealed class <PlayKneelingAnimationCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DwarfAnimatorController <>4__this;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x7F4D48", Offset = "0x7F4D48", VA = "0x7F4D48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x7F4D50", Offset = "0x7F4D50", VA = "0x7F4D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x7F4800", Offset = "0x7F4800", VA = "0x7F4800")]
		[DebuggerHidden]
		public <PlayKneelingAnimationCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x7F4CDC", Offset = "0x7F4CDC", VA = "0x7F4CDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x7F4CE0", Offset = "0x7F4CE0", VA = "0x7F4CE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001417")]
	private const float minKneelingSpeed = 0.8f;

	[Token(Token = "0x4001418")]
	private const float maxKneelingSpeed = 1.2f;

	[Token(Token = "0x4001419")]
	private const float minKneelingTimeOffset = 0f;

	[Token(Token = "0x400141A")]
	private const float maxKneelingTimeOffset = 0.8f;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly int isWalking;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int isRunning;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int isIdling;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int isBlockIdling;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly int isKneeling;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int shout;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int blockImpact;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly int speedMultiplier;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int kneelingSpeedAnimatorShash;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly int shieldRunName;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly int isRunningBack;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int isRotatingLeft;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly int isRotatingRight;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private HealthStateController healthstateController;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private EnemyMovementController enemyMovementController;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaitForSeconds waitForKneeling;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float animationSpeedMultiplierFactor;

	[Token(Token = "0x170001CE")]
	public float SpeedMultiplier
	{
		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x7F3F64", Offset = "0x7F3F64", VA = "0x7F3F64")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x7F3F88", Offset = "0x7F3F88", VA = "0x7F3F88")]
		set
		{
		}
	}

	[Token(Token = "0x170001CF")]
	public bool IsWalking
	{
		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x7F3FAC", Offset = "0x7F3FAC", VA = "0x7F3FAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x7F3FD0", Offset = "0x7F3FD0", VA = "0x7F3FD0")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public bool IsRunning
	{
		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x7F3FFC", Offset = "0x7F3FFC", VA = "0x7F3FFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x7F4020", Offset = "0x7F4020", VA = "0x7F4020")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public bool IsIdling
	{
		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x7F40C8", Offset = "0x7F40C8", VA = "0x7F40C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x7F40EC", Offset = "0x7F40EC", VA = "0x7F40EC")]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	public bool IsShieldIdling
	{
		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x7F4118", Offset = "0x7F4118", VA = "0x7F4118")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x7F413C", Offset = "0x7F413C", VA = "0x7F413C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	public bool IsKneeling
	{
		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x7F4168", Offset = "0x7F4168", VA = "0x7F4168")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x7F418C", Offset = "0x7F418C", VA = "0x7F418C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D4")]
	private bool IsRunningBack
	{
		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x7F41B8", Offset = "0x7F41B8", VA = "0x7F41B8")]
		set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	private bool IsRotatingLeft
	{
		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x7F41E4", Offset = "0x7F41E4", VA = "0x7F41E4")]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	private bool IsRotatingRight
	{
		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x7F4210", Offset = "0x7F4210", VA = "0x7F4210")]
		set
		{
		}
	}

	[Token(Token = "0x170001D7")]
	private float KneelingSpeed
	{
		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x7F423C", Offset = "0x7F423C", VA = "0x7F423C")]
		set
		{
		}
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x7F4260", Offset = "0x7F4260", VA = "0x7F4260")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x7F4294", Offset = "0x7F4294", VA = "0x7F4294")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x7F4468", Offset = "0x7F4468", VA = "0x7F4468")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x7F4264", Offset = "0x7F4264", VA = "0x7F4264")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x7F45A0", Offset = "0x7F45A0", VA = "0x7F45A0")]
	public void SetSpeedMultiplierBasedOnDwarfSpeed(float dwarfSpeed)
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x7F45AC", Offset = "0x7F45AC", VA = "0x7F45AC")]
	public void Shout()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x7F45D0", Offset = "0x7F45D0", VA = "0x7F45D0")]
	public void BlockHit()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x7F45F4", Offset = "0x7F45F4", VA = "0x7F45F4")]
	public void PlayShieldingAnim()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x7F4550", Offset = "0x7F4550", VA = "0x7F4550")]
	public void PlayRunningAnim()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x7F4644", Offset = "0x7F4644", VA = "0x7F4644")]
	public void PlayRunningBackAnim()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x7F4694", Offset = "0x7F4694", VA = "0x7F4694")]
	public void PlayRotatingLeftAnim()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x7F46E4", Offset = "0x7F46E4", VA = "0x7F46E4")]
	public void PlayRotatingRightAnim()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x7F4734", Offset = "0x7F4734", VA = "0x7F4734")]
	public void PlayIdleAnim()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x7F4080", Offset = "0x7F4080", VA = "0x7F4080")]
	public void SetRandomAnimFrame(int name, int layer)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x7F4784", Offset = "0x7F4784", VA = "0x7F4784")]
	public void SetReferences(Animator animator)
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x7F4448", Offset = "0x7F4448", VA = "0x7F4448")]
	private void PlayKneelingAnimation([Optional] HealthStateController healthStateController)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x7F478C", Offset = "0x7F478C", VA = "0x7F478C")]
	private IEnumerator PlayKneelingAnimationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x7F4828", Offset = "0x7F4828", VA = "0x7F4828", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x7F4AB4", Offset = "0x7F4AB4", VA = "0x7F4AB4")]
	public DwarfAnimatorController()
	{
	}
}
[Token(Token = "0x2000365")]
public class DwarfAnimSoundCaller : MonoBehaviour
{
	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DwarfsSoundController dwarfsSoundController;

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x7F4D58", Offset = "0x7F4D58", VA = "0x7F4D58")]
	private void PlayWalkSound()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x7F4D94", Offset = "0x7F4D94", VA = "0x7F4D94")]
	private void PlayShieldImpactSound()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x7F4DD0", Offset = "0x7F4DD0", VA = "0x7F4DD0")]
	private void PlayeArmorWalkSound()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x7F4E0C", Offset = "0x7F4E0C", VA = "0x7F4E0C")]
	public DwarfAnimSoundCaller()
	{
	}
}
[Serializable]
[Token(Token = "0x2000366")]
public class DwarfReferences
{
	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<GameObject> dwarfWeapons;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform modelTransform;

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x7F4E14", Offset = "0x7F4E14", VA = "0x7F4E14")]
	public DwarfReferences()
	{
	}
}
[Token(Token = "0x2000367")]
public class DwarfsSoundController : MonoBehaviour
{
	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSourceController audioSourceController;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] walkSounds;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip[] shieldImpactSounds;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] armorWalkSounds;

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x7F4DE8", Offset = "0x7F4DE8", VA = "0x7F4DE8")]
	public void PlayeArmorWalkSound()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x7F4D70", Offset = "0x7F4D70", VA = "0x7F4D70")]
	public void PlayWalkSound()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x7F4DAC", Offset = "0x7F4DAC", VA = "0x7F4DAC")]
	public void PlayeShieldImpactSound()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x7F4E1C", Offset = "0x7F4E1C", VA = "0x7F4E1C")]
	public DwarfsSoundController()
	{
	}
}
[Token(Token = "0x2000368")]
public class FormationColumnTag : MonoBehaviour
{
	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ColumnTag columnTag;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int orderInCollumn;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform constDistanceTo;

	[Token(Token = "0x170001DA")]
	public ColumnTag ColumnTag
	{
		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x7F4E24", Offset = "0x7F4E24", VA = "0x7F4E24")]
		get
		{
			return default(ColumnTag);
		}
	}

	[Token(Token = "0x170001DB")]
	public int OrderInCollumn
	{
		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x7F4E2C", Offset = "0x7F4E2C", VA = "0x7F4E2C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001DC")]
	public Transform ConstDistanceTo
	{
		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x7F4E34", Offset = "0x7F4E34", VA = "0x7F4E34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x7F4E3C", Offset = "0x7F4E3C", VA = "0x7F4E3C")]
	public FormationColumnTag()
	{
	}
}
[Token(Token = "0x2000369")]
public enum ColumnTag
{
	[Token(Token = "0x400143C")]
	LeftColumn,
	[Token(Token = "0x400143D")]
	MiddleColumn,
	[Token(Token = "0x400143E")]
	RightColumn
}
[Token(Token = "0x200036A")]
public class RandomDwarfWeaponController : MonoBehaviour
{
	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> dwarfWeapons;

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x7F4E44", Offset = "0x7F4E44", VA = "0x7F4E44")]
	public void RandomizeWeapon()
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x7F4FF4", Offset = "0x7F4FF4", VA = "0x7F4FF4")]
	public void SetReferences(List<GameObject> dwarfWeapons)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x7F4FFC", Offset = "0x7F4FFC", VA = "0x7F4FFC")]
	public RandomDwarfWeaponController()
	{
	}
}
[Token(Token = "0x200036B")]
public class CartDirectionIndicator : MonoBehaviour, IResetable, ISettable
{
	[Token(Token = "0x4001440")]
	private const float rayMaxDistance = 10f;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Vector3 raycastOriginOffset;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly Vector3 raycastDirection;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int materialColorID;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MeshRenderer renderer;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float heightAboveTerrain;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float vanishingSpeed;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float appearingSpeed;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color defaultColor;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color currentColor;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Spline spline;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentDistance;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 position;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 forward;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RaycastHit raycastHit;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LayerMask terrainLayerMask;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Quaternion rotation;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private PayloadGate gate;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isVanishing;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float currentAlpha;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float targetAlpha;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool isAppearing;

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x7F5004", Offset = "0x7F5004", VA = "0x7F5004")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x7F50F4", Offset = "0x7F50F4", VA = "0x7F50F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x7F5510", Offset = "0x7F5510", VA = "0x7F5510")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x7F5614", Offset = "0x7F5614", VA = "0x7F5614")]
	public void Initialize(float targetAlpha, Spline spline, float currentDistance)
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x7F5228", Offset = "0x7F5228", VA = "0x7F5228")]
	private void UpdateTransform()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x7F547C", Offset = "0x7F547C", VA = "0x7F547C")]
	private void UpdateAppearing()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x7F5350", Offset = "0x7F5350", VA = "0x7F5350")]
	private void UpdateVanishing()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x7F56D0", Offset = "0x7F56D0", VA = "0x7F56D0", Slot = "5")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x7F5764", Offset = "0x7F5764", VA = "0x7F5764", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x7F57D0", Offset = "0x7F57D0", VA = "0x7F57D0")]
	public CartDirectionIndicator()
	{
	}
}
[Token(Token = "0x200036C")]
public class PayloadProgressDisplayController : MonoBehaviour
{
	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PayloadGameTimeController payloadGameTimeController;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text gameTimeText;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text scoreboardTimeText;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text stageProgressText;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Slider stateProgressSlider;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PayloadStageController payloadStageController;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float stagesCount;

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x7F58B4", Offset = "0x7F58B4", VA = "0x7F58B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x7F5D28", Offset = "0x7F5D28", VA = "0x7F5D28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x7F60F0", Offset = "0x7F60F0", VA = "0x7F60F0")]
	private void UpdateTimeText(float value)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x7F5CEC", Offset = "0x7F5CEC", VA = "0x7F5CEC")]
	private void UpdateProgressInfo()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x7F6148", Offset = "0x7F6148", VA = "0x7F6148")]
	private void UpdateProgressInfo(int currentStageIndex)
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x7F62D0", Offset = "0x7F62D0", VA = "0x7F62D0")]
	private void ShowFinishedProgressInfo()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x7F6420", Offset = "0x7F6420", VA = "0x7F6420")]
	public PayloadProgressDisplayController()
	{
	}
}
[Token(Token = "0x200036D")]
public class PerformanceChecker : MonoBehaviour
{
	[Token(Token = "0x400145F")]
	private const int longDisplayInteval = 1080;

	[Token(Token = "0x4001460")]
	private const int shortDisplayInterval = 360;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isPaused;

	[Token(Token = "0x4001462")]
	private const string shortDescription = "short period ";

	[Token(Token = "0x4001463")]
	private const string longDescription = "long period ";

	[Token(Token = "0x4001464")]
	private const string waveDescription = "wave period ";

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntervalFPSData shortData;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntervalFPSData longData;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntervalFPSData waveData;

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x7F6428", Offset = "0x7F6428", VA = "0x7F6428")]
	private void Update()
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x7F6434", Offset = "0x7F6434", VA = "0x7F6434")]
	private void ProcessShortIntervalFPS(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x7F6450", Offset = "0x7F6450", VA = "0x7F6450")]
	private static void ProcessIntervalFPS(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x7F64D8", Offset = "0x7F64D8", VA = "0x7F64D8")]
	private static float MsToFPS(float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x7F64E8", Offset = "0x7F64E8", VA = "0x7F64E8")]
	private static void TryToDisplayResult(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x7F6518", Offset = "0x7F6518", VA = "0x7F6518")]
	private static void DisplayResult(IntervalFPSData fpsData)
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x7F6650", Offset = "0x7F6650", VA = "0x7F6650")]
	private static float FPSToMs(float fps)
	{
		return default(float);
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x7F64A8", Offset = "0x7F64A8", VA = "0x7F64A8")]
	private static void TryToResetFPSData(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x7F6660", Offset = "0x7F6660", VA = "0x7F6660")]
	private void ProcessLongIntervalFPS(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x7F667C", Offset = "0x7F667C", VA = "0x7F667C")]
	private static void ProcessWaveIntervalFPS(IntervalFPSData fPSData)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x7F66DC", Offset = "0x7F66DC", VA = "0x7F66DC")]
	public static void TryToResetWavesFPSData()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x7F6774", Offset = "0x7F6774", VA = "0x7F6774")]
	public static void PauseProcessingWaveData(int waveNumber)
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x7F6778", Offset = "0x7F6778", VA = "0x7F6778")]
	public static void PauseCountingFPS()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x7F67D4", Offset = "0x7F67D4", VA = "0x7F67D4")]
	public PerformanceChecker()
	{
	}
}
[Token(Token = "0x200036E")]
public static class PhotonCustomTypesForElvenAssassin
{
	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool registered;

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly byte[] memPlayerFeats;

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x7F67DC", Offset = "0x7F67DC", VA = "0x7F67DC")]
	public static void Register()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x7F6980", Offset = "0x7F6980", VA = "0x7F6980")]
	private static short SerializePlayerFeats(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x7F6B58", Offset = "0x7F6B58", VA = "0x7F6B58")]
	private static object DeserializePlayerFeats(StreamBuffer inStream, short length)
	{
		return null;
	}
}
[Token(Token = "0x200036F")]
public class PlatfromDependentActivator : MonoBehaviour
{
	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> itemsToChangeActivity;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRSDK platformToChangeActivityOn;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool activityValueToSet;

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x7F6D98", Offset = "0x7F6D98", VA = "0x7F6D98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x7F6E7C", Offset = "0x7F6E7C", VA = "0x7F6E7C")]
	public PlatfromDependentActivator()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x7F6E84", Offset = "0x7F6E84", VA = "0x7F6E84")]
	private void <Awake>b__3_0(GameObject item)
	{
	}
}
[Token(Token = "0x2000370")]
public class GlovesFader : MonoBehaviourPun, IResetable
{
	[Token(Token = "0x400146D")]
	private const float shaderSwitchTriggerValue = 0.9f;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leftGloveOnBowTransform;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftGloveOnArrowTransform;

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightGloveOnBowTransform;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rightGloveOnArrowTransform;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer[] leftGloveSkinnedMeshRenderers;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer[] rightGloveSkinnedMeshRenderers;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera playerCamera;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float distanceStartingFading;

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float fadeSpeed;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Shader nonTransparentShader;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Shader transparentShader;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PlayerMaterialsColorSetter playerMaterialsColorSetter;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float distanceFromCameraToLeftGlove;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float distanceFromCameraToRightGlove;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Material> leftGloveMaterials;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Material> rightGloveMaterials;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isLeftGloveFadingIn;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool isRightGloveFadingIn;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform leftGloveTransform;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform rightGloveTransform;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool areFadeableGloves;

	[Token(Token = "0x170001DD")]
	public float DistanceFromCameraToLeftGlove
	{
		[Token(Token = "0x6001115")]
		[Address(RVA = "0x7F6EA8", Offset = "0x7F6EA8", VA = "0x7F6EA8")]
		set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public float DistanceFromCameraToRightGlove
	{
		[Token(Token = "0x6001116")]
		[Address(RVA = "0x7F7088", Offset = "0x7F7088", VA = "0x7F7088")]
		set
		{
		}
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x7F71F4", Offset = "0x7F71F4", VA = "0x7F71F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x7F72F0", Offset = "0x7F72F0", VA = "0x7F72F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x7F73EC", Offset = "0x7F73EC", VA = "0x7F73EC")]
	public void SetReferences(PlayerMaterialsColorSetter playerMaterialsColorSetter)
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x7F73F4", Offset = "0x7F73F4", VA = "0x7F73F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x7F76B8", Offset = "0x7F76B8", VA = "0x7F76B8")]
	public void InitializeGlovesFader()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x7F7714", Offset = "0x7F7714", VA = "0x7F7714")]
	private void UpdateHandsMaterials(bool areFadeableGloves)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x7F7014", Offset = "0x7F7014", VA = "0x7F7014")]
	public void TryToChangeRenderingMode(Material gloveMaterial, bool shouldBeFade)
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x7F782C", Offset = "0x7F782C", VA = "0x7F782C")]
	private static void ChangeRenderingMode(Material gloveMaterial, bool shouldBeFade)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x7F7A58", Offset = "0x7F7A58", VA = "0x7F7A58")]
	private void FadeGlove(bool isLeftGlove)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x7F7690", Offset = "0x7F7690", VA = "0x7F7690")]
	public void FadeGloves()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x7F7D74", Offset = "0x7F7D74", VA = "0x7F7D74")]
	private void TryToChangeRenderingMaterial()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x7F7DE8", Offset = "0x7F7DE8", VA = "0x7F7DE8")]
	private void ChangeGlovesShaders()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x7F7FE4", Offset = "0x7F7FE4", VA = "0x7F7FE4")]
	private void SetPropperShader(Material gloveMaterial)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x7F8038", Offset = "0x7F8038", VA = "0x7F8038", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x7F8058", Offset = "0x7F8058", VA = "0x7F8058")]
	public GlovesFader()
	{
	}
}
[Token(Token = "0x2000371")]
public class PlatformWarning : MonoBehaviour
{
	[Token(Token = "0x4001483")]
	private const float warningTime = 2f;

	[Token(Token = "0x4001484")]
	private const float distanceFromPlayer = 2f;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FloatingTextController floatingText;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnLocalPlayerEnter;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnLocalPlayerExit;

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x7F8110", Offset = "0x7F8110", VA = "0x7F8110")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x7F8258", Offset = "0x7F8258", VA = "0x7F8258")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x7F81BC", Offset = "0x7F81BC", VA = "0x7F81BC")]
	private bool IsLocalPlayerCamera(Collider col)
	{
		return default(bool);
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x7F82CC", Offset = "0x7F82CC", VA = "0x7F82CC")]
	public PlatformWarning()
	{
	}
}
[Token(Token = "0x2000372")]
public abstract class PlayerDeathController : PlayerDeathControllerCore
{
	[Token(Token = "0x170001DF")]
	public abstract override bool IsDead
	{
		[Token(Token = "0x600112A")]
		get;
		[Token(Token = "0x600112B")]
		set;
	}

	[Token(Token = "0x600112C")]
	public abstract void InitializeWithoutPlayer();

	[Token(Token = "0x600112D")]
	public abstract void InitializeWithPlayer();

	[Token(Token = "0x600112E")]
	public abstract void Die(PlayerKillInfo playerKillInfo);

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x7F82D4", Offset = "0x7F82D4", VA = "0x7F82D4")]
	protected PlayerDeathController()
	{
	}
}
[Token(Token = "0x2000373")]
public class PlayerDeathControllerMobile : PlayerDeathControllerWave
{
	[Token(Token = "0x2000374")]
	private sealed class <DieSoundRoutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerMobile <>4__this;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x7F9128", Offset = "0x7F9128", VA = "0x7F9128", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x7F9130", Offset = "0x7F9130", VA = "0x7F9130", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x7F87D8", Offset = "0x7F87D8", VA = "0x7F87D8")]
		[DebuggerHidden]
		public <DieSoundRoutine>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x7F9090", Offset = "0x7F9090", VA = "0x7F9090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x7F9094", Offset = "0x7F9094", VA = "0x7F9094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000375")]
	private sealed class <BlackScreenRoutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerMobile <>4__this;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x7F9244", Offset = "0x7F9244", VA = "0x7F9244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x7F924C", Offset = "0x7F924C", VA = "0x7F924C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x7F8874", Offset = "0x7F8874", VA = "0x7F8874")]
		[DebuggerHidden]
		public <BlackScreenRoutine>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x7F9138", Offset = "0x7F9138", VA = "0x7F9138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x7F913C", Offset = "0x7F913C", VA = "0x7F913C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000376")]
	private sealed class <>c
	{
		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<AxeController, bool> <>9__37_0;

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x7F92C4", Offset = "0x7F92C4", VA = "0x7F92C4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x7F92CC", Offset = "0x7F92CC", VA = "0x7F92CC")]
		internal bool <Respawn>b__37_0(AxeController axe)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000377")]
	private sealed class <RespawnWithDelay>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerMobile <>4__this;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <dalayRemain>5__2;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x7F946C", Offset = "0x7F946C", VA = "0x7F946C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x7F9474", Offset = "0x7F9474", VA = "0x7F9474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x7F8CDC", Offset = "0x7F8CDC", VA = "0x7F8CDC")]
		[DebuggerHidden]
		public <RespawnWithDelay>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x7F9328", Offset = "0x7F9328", VA = "0x7F9328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x7F932C", Offset = "0x7F932C", VA = "0x7F932C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001488")]
	private const float shortDeathEffectDuration = 4.8f;

	[Token(Token = "0x4001489")]
	private const float longDeathEffectDuration = 7.8f;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds soundDelay;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds blackScreenDelay;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip deathSound;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isLongTimeEffectWithRespawn;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private DeathIndicatorEffectController deathIndicatorEffectController;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PlayerMaterialsColorSetterMobile playerMaterialsColorSetter;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float payloadRespawnDelay;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float payloadRespawnDelaySingle;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentDeathEffectDuration;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool dieCameraEffect;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool isDead;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string gameOverInfo;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<AxeController> axesInHead;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Action<float> <OnRespawnTimerChanged>k__BackingField;

	[Token(Token = "0x170001E0")]
	public override bool IsDead
	{
		[Token(Token = "0x6001130")]
		[Address(RVA = "0x7F82DC", Offset = "0x7F82DC", VA = "0x7F82DC", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001131")]
		[Address(RVA = "0x7F82E4", Offset = "0x7F82E4", VA = "0x7F82E4", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public override bool IsLongTimeEffectWithRespawn
	{
		[Token(Token = "0x6001132")]
		[Address(RVA = "0x7F8350", Offset = "0x7F8350", VA = "0x7F8350", Slot = "9")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001133")]
		[Address(RVA = "0x7F8358", Offset = "0x7F8358", VA = "0x7F8358", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x170001E2")]
	public override List<AxeController> AxesInHead
	{
		[Token(Token = "0x6001134")]
		[Address(RVA = "0x7F8368", Offset = "0x7F8368", VA = "0x7F8368", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E3")]
	public override Action<float> OnRespawnTimerChanged
	{
		[Token(Token = "0x6001135")]
		[Address(RVA = "0x7F8370", Offset = "0x7F8370", VA = "0x7F8370", Slot = "12")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001136")]
		[Address(RVA = "0x7F8378", Offset = "0x7F8378", VA = "0x7F8378", Slot = "13")]
		set
		{
		}
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x7F8380", Offset = "0x7F8380", VA = "0x7F8380")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x7F84A8", Offset = "0x7F84A8", VA = "0x7F84A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x7F85D0", Offset = "0x7F85D0", VA = "0x7F85D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x7F86B0", Offset = "0x7F86B0", VA = "0x7F86B0", Slot = "6")]
	public override void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x7F8758", Offset = "0x7F8758", VA = "0x7F8758", Slot = "7")]
	public override void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x7F8764", Offset = "0x7F8764", VA = "0x7F8764")]
	private IEnumerator DieSoundRoutine()
	{
		return null;
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x7F8800", Offset = "0x7F8800", VA = "0x7F8800")]
	private IEnumerator BlackScreenRoutine()
	{
		return null;
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x7F889C", Offset = "0x7F889C", VA = "0x7F889C")]
	private void RespawnCallback()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x7F88AC", Offset = "0x7F88AC", VA = "0x7F88AC", Slot = "14")]
	public override void Respawn()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x7F8C68", Offset = "0x7F8C68", VA = "0x7F8C68")]
	private IEnumerator RespawnWithDelay()
	{
		return null;
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x7F8D04", Offset = "0x7F8D04", VA = "0x7F8D04", Slot = "8")]
	public override void Die(PlayerKillInfo playerKillInfo)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x7F85D4", Offset = "0x7F85D4", VA = "0x7F85D4")]
	private void TryApplyDeathEffect()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x7F8BBC", Offset = "0x7F8BBC", VA = "0x7F8BBC")]
	private void RemoveDeathEffect()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x7F832C", Offset = "0x7F832C", VA = "0x7F832C")]
	private void SetPlayerMaterialsToGhost(bool isGhost)
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x7F8F44", Offset = "0x7F8F44", VA = "0x7F8F44")]
	public PlayerDeathControllerMobile()
	{
	}
}
[Token(Token = "0x2000378")]
public class PlayerDeathControllerNetwork : MonoBehaviourPun, IPunObservable, IResetable
{
	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerDeathController playerDeathController;

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x7F947C", Offset = "0x7F947C", VA = "0x7F947C")]
	public void SetReferences(PlayerDeathController _playerDeathController)
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x7F9484", Offset = "0x7F9484", VA = "0x7F9484", Slot = "5")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x7F94A8", Offset = "0x7F94A8", VA = "0x7F94A8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x7F9598", Offset = "0x7F9598", VA = "0x7F9598")]
	public PlayerDeathControllerNetwork()
	{
	}
}
[Token(Token = "0x2000379")]
public class PlayerDeathControllerPC : PlayerDeathControllerWave
{
	[Token(Token = "0x200037A")]
	private sealed class <DieSoundRoutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerPC <>4__this;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001177")]
			[Address(RVA = "0x7FA5F8", Offset = "0x7FA5F8", VA = "0x7FA5F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0x7FA600", Offset = "0x7FA600", VA = "0x7FA600", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x7F9D5C", Offset = "0x7F9D5C", VA = "0x7F9D5C")]
		[DebuggerHidden]
		public <DieSoundRoutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x7FA560", Offset = "0x7FA560", VA = "0x7FA560", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x7FA564", Offset = "0x7FA564", VA = "0x7FA564", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200037B")]
	private sealed class <BlackScreenRoutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerPC <>4__this;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x7FA724", Offset = "0x7FA724", VA = "0x7FA724", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600117D")]
			[Address(RVA = "0x7FA72C", Offset = "0x7FA72C", VA = "0x7FA72C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x7F9DF8", Offset = "0x7F9DF8", VA = "0x7F9DF8")]
		[DebuggerHidden]
		public <BlackScreenRoutine>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x7FA608", Offset = "0x7FA608", VA = "0x7FA608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x7FA60C", Offset = "0x7FA60C", VA = "0x7FA60C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200037C")]
	private sealed class <>c
	{
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<AxeController, bool> <>9__44_0;

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x7FA7A4", Offset = "0x7FA7A4", VA = "0x7FA7A4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x7FA7AC", Offset = "0x7FA7AC", VA = "0x7FA7AC")]
		internal bool <Respawn>b__44_0(AxeController axe)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200037D")]
	private sealed class <RespawnWithDelay>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerDeathControllerPC <>4__this;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <dalayRemain>5__2;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x7FA94C", Offset = "0x7FA94C", VA = "0x7FA94C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0x7FA954", Offset = "0x7FA954", VA = "0x7FA954", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x7FA1B4", Offset = "0x7FA1B4", VA = "0x7FA1B4")]
		[DebuggerHidden]
		public <RespawnWithDelay>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x7FA808", Offset = "0x7FA808", VA = "0x7FA808", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x7FA80C", Offset = "0x7FA80C", VA = "0x7FA80C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40014A8")]
	private const float intensity = 4f;

	[Token(Token = "0x40014A9")]
	private const float intensityMultiplier = 4f;

	[Token(Token = "0x40014AA")]
	private const float shortDeathEffectDuration = 4.8f;

	[Token(Token = "0x40014AB")]
	private const float longDeathEffectDuration = 7.8f;

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds soundDelay;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds blackScreenDelay;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private DeathIndicatorEffectController deathIndicatorEffectController;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip deathSound;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PlayerMaterialsColorSetterPC playerMaterialsColorSetter;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float payloadRespawnDelay;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float payloadRespawnDelaySingle;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool deathCameraEffect;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isDead;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string gameOverInfo;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isLongTimeEffectWithRespawn;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<AxeController> axesInHead;

	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Blur blur;

	[Token(Token = "0x40014BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ScreenOverlay screenOverlay;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Action<float> <OnRespawnTimerChanged>k__BackingField;

	[Token(Token = "0x170001EA")]
	public override bool IsDead
	{
		[Token(Token = "0x600115C")]
		[Address(RVA = "0x7F95A0", Offset = "0x7F95A0", VA = "0x7F95A0", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600115D")]
		[Address(RVA = "0x7F95A8", Offset = "0x7F95A8", VA = "0x7F95A8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170001EB")]
	private Blur Blur
	{
		[Token(Token = "0x600115E")]
		[Address(RVA = "0x7F9614", Offset = "0x7F9614", VA = "0x7F9614")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EC")]
	private ScreenOverlay ScreenOverlay
	{
		[Token(Token = "0x600115F")]
		[Address(RVA = "0x7F96C4", Offset = "0x7F96C4", VA = "0x7F96C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001ED")]
	public override bool IsLongTimeEffectWithRespawn
	{
		[Token(Token = "0x6001160")]
		[Address(RVA = "0x7F9774", Offset = "0x7F9774", VA = "0x7F9774", Slot = "9")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001161")]
		[Address(RVA = "0x7F977C", Offset = "0x7F977C", VA = "0x7F977C", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x170001EE")]
	public override List<AxeController> AxesInHead
	{
		[Token(Token = "0x6001162")]
		[Address(RVA = "0x7F9788", Offset = "0x7F9788", VA = "0x7F9788", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EF")]
	public override Action<float> OnRespawnTimerChanged
	{
		[Token(Token = "0x6001163")]
		[Address(RVA = "0x7F9790", Offset = "0x7F9790", VA = "0x7F9790", Slot = "12")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001164")]
		[Address(RVA = "0x7F9798", Offset = "0x7F9798", VA = "0x7F9798", Slot = "13")]
		set
		{
		}
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x7F97A0", Offset = "0x7F97A0", VA = "0x7F97A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x7F98C8", Offset = "0x7F98C8", VA = "0x7F98C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x7F99F0", Offset = "0x7F99F0", VA = "0x7F99F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x7F9B34", Offset = "0x7F9B34", VA = "0x7F9B34", Slot = "6")]
	public override void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x7F9CDC", Offset = "0x7F9CDC", VA = "0x7F9CDC", Slot = "7")]
	public override void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x7F9CE8", Offset = "0x7F9CE8", VA = "0x7F9CE8")]
	private IEnumerator DieSoundRoutine()
	{
		return null;
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x7F9D84", Offset = "0x7F9D84", VA = "0x7F9D84")]
	private IEnumerator BlackScreenRoutine()
	{
		return null;
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x7F9E20", Offset = "0x7F9E20", VA = "0x7F9E20")]
	private void RespawnCallback()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x7F9E30", Offset = "0x7F9E30", VA = "0x7F9E30", Slot = "14")]
	public override void Respawn()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x7FA140", Offset = "0x7FA140", VA = "0x7FA140")]
	private IEnumerator RespawnWithDelay()
	{
		return null;
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x7FA1DC", Offset = "0x7FA1DC", VA = "0x7FA1DC", Slot = "8")]
	public override void Die(PlayerKillInfo playerKillInfo)
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x7F99F4", Offset = "0x7F99F4", VA = "0x7F99F4")]
	private void TryApplyDeathEffect()
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x7F9C00", Offset = "0x7F9C00", VA = "0x7F9C00")]
	private void RemoveDeathEffect()
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x7F95F0", Offset = "0x7F95F0", VA = "0x7F95F0")]
	private void SetPlayerMaterialsToGhost(bool isGhost)
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x7FA41C", Offset = "0x7FA41C", VA = "0x7FA41C")]
	public PlayerDeathControllerPC()
	{
	}
}
[Token(Token = "0x200037E")]
public abstract class PlayerDeathControllerWave : PlayerDeathController
{
	[Token(Token = "0x170001F6")]
	public abstract bool IsLongTimeEffectWithRespawn
	{
		[Token(Token = "0x6001186")]
		get;
		[Token(Token = "0x6001187")]
		set;
	}

	[Token(Token = "0x170001F7")]
	public abstract List<AxeController> AxesInHead
	{
		[Token(Token = "0x6001188")]
		get;
	}

	[Token(Token = "0x170001F8")]
	public abstract Action<float> OnRespawnTimerChanged
	{
		[Token(Token = "0x6001189")]
		get;
		[Token(Token = "0x600118A")]
		set;
	}

	[Token(Token = "0x600118B")]
	public abstract override void Die(PlayerKillInfo playerKillInfo);

	[Token(Token = "0x600118C")]
	public abstract void Respawn();

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x7F9088", Offset = "0x7F9088", VA = "0x7F9088")]
	protected PlayerDeathControllerWave()
	{
	}
}
[Token(Token = "0x200037F")]
public class PlayerDeathUIWave : MonoBehaviour
{
	[Token(Token = "0x40014CA")]
	private const float respawnTimerMessageDuration = 0.3f;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerDeathControllerWave playerDeathController;

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x7FA95C", Offset = "0x7FA95C", VA = "0x7FA95C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x7FAA48", Offset = "0x7FAA48", VA = "0x7FAA48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x7FAB34", Offset = "0x7FAB34", VA = "0x7FAB34")]
	public void SetReferences(PlayerDeathControllerWave _playerDeathController)
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x7FAB3C", Offset = "0x7FAB3C", VA = "0x7FAB3C")]
	private void ShowRespawnTimer(float timerValue)
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x7FABE8", Offset = "0x7FABE8", VA = "0x7FABE8")]
	public PlayerDeathUIWave()
	{
	}
}
[Token(Token = "0x2000380")]
public class PlayerExperienceGiver : MonoBehaviourPun
{
	[Token(Token = "0x6001193")]
	[Address(RVA = "0x7FABF0", Offset = "0x7FABF0", VA = "0x7FABF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x7FADD0", Offset = "0x7FADD0", VA = "0x7FADD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x7FAFB0", Offset = "0x7FAFB0", VA = "0x7FAFB0")]
	private void SaveEarnedExp(int arg)
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x7FB078", Offset = "0x7FB078", VA = "0x7FB078")]
	[PunRPC]
	private void RpcSaveEarnedExp()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x7FB07C", Offset = "0x7FB07C", VA = "0x7FB07C")]
	private void SaveEarnedExp()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x7FB2FC", Offset = "0x7FB2FC", VA = "0x7FB2FC")]
	public PlayerExperienceGiver()
	{
	}
}
[Token(Token = "0x2000381")]
public class PlayerProgressionLoader : MonoBehaviour
{
	[Token(Token = "0x6001199")]
	[Address(RVA = "0x7FB304", Offset = "0x7FB304", VA = "0x7FB304")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x7FB384", Offset = "0x7FB384", VA = "0x7FB384")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x7FB4D4", Offset = "0x7FB4D4", VA = "0x7FB4D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x7FB388", Offset = "0x7FB388", VA = "0x7FB388")]
	private void LoadPlayerProgression()
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x7FB554", Offset = "0x7FB554", VA = "0x7FB554")]
	private void LoadDefaultState()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x7FBC90", Offset = "0x7FBC90", VA = "0x7FBC90")]
	private void ReloadPlayerProgression()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x7FBC94", Offset = "0x7FBC94", VA = "0x7FBC94")]
	public PlayerProgressionLoader()
	{
	}
}
[Token(Token = "0x2000382")]
public class PlayerSpellSlotsUpdater : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000383")]
	private sealed class <>c
	{
		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<SpellInGameSlot> <>9__1_0;

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x7FBE1C", Offset = "0x7FBE1C", VA = "0x7FBE1C")]
		public <>c()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x7FBE24", Offset = "0x7FBE24", VA = "0x7FBE24")]
		internal void <Update>b__1_0(SpellInGameSlot x)
		{
		}
	}

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SpellInGameSlot> spellInGameSlots;

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x7FBC9C", Offset = "0x7FBC9C", VA = "0x7FBC9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x7FBDA4", Offset = "0x7FBDA4", VA = "0x7FBDA4")]
	public PlayerSpellSlotsUpdater()
	{
	}
}
[Token(Token = "0x2000384")]
public class PlayerTournamentJoiningScreenController : MonoBehaviour
{
	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject overlay;

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x7FBE3C", Offset = "0x7FBE3C", VA = "0x7FBE3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x7FBED0", Offset = "0x7FBED0", VA = "0x7FBED0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x7FBF50", Offset = "0x7FBF50", VA = "0x7FBF50")]
	private void HideOverlay()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x7FBF70", Offset = "0x7FBF70", VA = "0x7FBF70")]
	public PlayerTournamentJoiningScreenController()
	{
	}
}
[Token(Token = "0x2000385")]
public class PlayerEquipment : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000386")]
	private sealed class <>c
	{
		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<ItemWithBonuses> <>9__31_0;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<EquipmentItemKey> <>9__52_0;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<EquipmentItemKey> <>9__53_0;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<EquipmentItemKey> <>9__54_0;

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x7FEAA8", Offset = "0x7FEAA8", VA = "0x7FEAA8")]
		public <>c()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x7FEAB0", Offset = "0x7FEAB0", VA = "0x7FEAB0")]
		internal bool <SetEquippedItemsBonuses>b__31_0(ItemWithBonuses x)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x7FEBC4", Offset = "0x7FEBC4", VA = "0x7FEBC4")]
		internal bool <GetAllSetKeys>b__52_0(EquipmentItemKey item)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x7FEC54", Offset = "0x7FEC54", VA = "0x7FEC54")]
		internal bool <GetAllHelmetKeys>b__53_0(EquipmentItemKey item)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x7FECE4", Offset = "0x7FECE4", VA = "0x7FECE4")]
		internal bool <GetAllBowKeys>b__54_0(EquipmentItemKey item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40014D0")]
	private const string PlayerGoldString = "PlayerGold";

	[Token(Token = "0x40014D1")]
	private const string PlayerBowString = "PlayerBow";

	[Token(Token = "0x40014D2")]
	private const string PlayerHelmetString = "PlayerHelmet";

	[Token(Token = "0x40014D3")]
	private const string PreviousBowString = "PreviousBow";

	[Token(Token = "0x40014D4")]
	private const string PreviousHelmetString = "PreviousHelmet";

	[Token(Token = "0x40014D5")]
	private const string StandardBowAndHelmetString = "StandardBowAndHelmet";

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int cachedWaveGold;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string cachedBowName;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string cachedHelmetName;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int cachedPlayerGold;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static bool exist;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action<int> OnPlayerGoldChange;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<string, bool> <BoughtItems>k__BackingField;

	[Token(Token = "0x170001F9")]
	public static Dictionary<string, bool> BoughtItems
	{
		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x7FBF78", Offset = "0x7FBF78", VA = "0x7FBF78")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x7FBFD0", Offset = "0x7FBFD0", VA = "0x7FBFD0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FA")]
	public static int CachedPlayerGold
	{
		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x7FC534", Offset = "0x7FC534", VA = "0x7FC534")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x7FB750", Offset = "0x7FB750", VA = "0x7FB750")]
		set
		{
		}
	}

	[Token(Token = "0x170001FB")]
	public static int Gold
	{
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x7FC58C", Offset = "0x7FC58C", VA = "0x7FC58C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x7FC6D8", Offset = "0x7FC6D8", VA = "0x7FC6D8")]
		set
		{
		}
	}

	[Token(Token = "0x170001FC")]
	public static string EquipedBowName
	{
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x7FC85C", Offset = "0x7FC85C", VA = "0x7FC85C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x7FC9A8", Offset = "0x7FC9A8", VA = "0x7FC9A8")]
		set
		{
		}
	}

	[Token(Token = "0x170001FD")]
	public static string EquipedHelmetName
	{
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x7FCA54", Offset = "0x7FCA54", VA = "0x7FCA54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x7FCBA4", Offset = "0x7FCBA4", VA = "0x7FCBA4")]
		set
		{
		}
	}

	[Token(Token = "0x170001FE")]
	public static string PreviousEquipedBow
	{
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x7FD7F8", Offset = "0x7FD7F8", VA = "0x7FD7F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x7FD784", Offset = "0x7FD784", VA = "0x7FD784")]
		set
		{
		}
	}

	[Token(Token = "0x170001FF")]
	public static string PreviousEquipedHelmet
	{
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x7FD6D0", Offset = "0x7FD6D0", VA = "0x7FD6D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x7FD8A8", Offset = "0x7FD8A8", VA = "0x7FD8A8")]
		set
		{
		}
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x7FC030", Offset = "0x7FC030", VA = "0x7FC030")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x7FC300", Offset = "0x7FC300", VA = "0x7FC300")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x7FCC50", Offset = "0x7FCC50", VA = "0x7FCC50")]
	public static void SetEquippedItemsBonuses(ItemsWithBonuses itemBonusesList)
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x7FCF40", Offset = "0x7FCF40", VA = "0x7FCF40")]
	private void GiveGoldToPlayer(int amountOfGold, Vector3 arg2)
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x7FCFD0", Offset = "0x7FCFD0", VA = "0x7FCFD0")]
	public static void SetIsItemBought(EquipmentItemKey itemKey, bool isBought)
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x7FD264", Offset = "0x7FD264", VA = "0x7FD264")]
	public static void SetIsItemBoughtCached(EquipmentItemKey itemKey, bool isBought)
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x7FD30C", Offset = "0x7FD30C", VA = "0x7FD30C")]
	public static void SetIsItemBoughtCached(string itemKey, bool isBought)
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x7FD3CC", Offset = "0x7FD3CC", VA = "0x7FD3CC")]
	public static void GiveGoldOnWaveEnd(int waveCount)
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x7FD418", Offset = "0x7FD418", VA = "0x7FD418")]
	public static void SaveGold()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x7FD564", Offset = "0x7FD564", VA = "0x7FD564")]
	public static void SetIsItemUsed(EquipmentItemType equipmentItemType, EquipmentItemKey equipmentItemKey)
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x7FD91C", Offset = "0x7FD91C", VA = "0x7FD91C")]
	public static bool GetIsItemUsed(EquipmentItemType equipmentItemType, EquipmentItemKey equipmentItemKey)
	{
		return default(bool);
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x7FDBB8", Offset = "0x7FDBB8", VA = "0x7FDBB8")]
	public static void InitEquipment()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x7FE070", Offset = "0x7FE070", VA = "0x7FE070")]
	public static bool GetIsItemBoughtOnline(EquipmentItemKey itemKey)
	{
		return default(bool);
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x7FB7E8", Offset = "0x7FB7E8", VA = "0x7FB7E8")]
	public static void InitEquipmentWithDefaults()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x7FDADC", Offset = "0x7FDADC", VA = "0x7FDADC")]
	public static bool GetIsItemBought(string itemName)
	{
		return default(bool);
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x7FE114", Offset = "0x7FE114", VA = "0x7FE114")]
	private static bool IsDefaultItem(string itemName)
	{
		return default(bool);
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x7FE1C4", Offset = "0x7FE1C4", VA = "0x7FE1C4")]
	public static EquipmentItemType GetEquipmentTypeFromEquipmentKey(EquipmentItemKey equipmentKey)
	{
		return default(EquipmentItemType);
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x7FE288", Offset = "0x7FE288", VA = "0x7FE288")]
	public static List<EquipmentItemKey> GetAllSetKeys()
	{
		return null;
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x7FE490", Offset = "0x7FE490", VA = "0x7FE490")]
	public static List<EquipmentItemKey> GetAllHelmetKeys()
	{
		return null;
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x7FE698", Offset = "0x7FE698", VA = "0x7FE698")]
	public static List<EquipmentItemKey> GetAllBowKeys()
	{
		return null;
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x7FE8A0", Offset = "0x7FE8A0", VA = "0x7FE8A0")]
	public static void ClearCachedBowAndHelmet()
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x7FE950", Offset = "0x7FE950", VA = "0x7FE950")]
	public PlayerEquipment()
	{
	}
}
[Token(Token = "0x2000387")]
public class PlayerSpell
{
	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AbilityType spellType;

	[Token(Token = "0x40014E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int level;

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x7FED74", Offset = "0x7FED74", VA = "0x7FED74")]
	public PlayerSpell(AbilityType spellType, int level)
	{
	}
}
[Token(Token = "0x2000388")]
public class PlayerSpells : MonoBehaviour
{
	[Token(Token = "0x2000389")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SlotPostion slotPosition;

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x7FF244", Offset = "0x7FF244", VA = "0x7FF244")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x800BB0", Offset = "0x800BB0", VA = "0x800BB0")]
		internal bool <GetSpellSlotBySlotPosition>b__0(PlayerSpellSlot item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200038A")]
	private sealed class <>c__DisplayClass7_1
	{
		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string spellNameInSlot;

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x7FF24C", Offset = "0x7FF24C", VA = "0x7FF24C")]
		public <>c__DisplayClass7_1()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x800BD4", Offset = "0x800BD4", VA = "0x800BD4")]
		internal bool <GetSpellSlotBySlotPosition>b__1(AbilityType item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200038B")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SlotPostion slotPosition;

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x7FF4C0", Offset = "0x7FF4C0", VA = "0x7FF4C0")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x800C54", Offset = "0x800C54", VA = "0x800C54")]
		internal bool <SetSpellSlot>b__0(PlayerSpellSlot item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200038C")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SlotPostion slotPosition;

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x7FF6B8", Offset = "0x7FF6B8", VA = "0x7FF6B8")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x800C78", Offset = "0x800C78", VA = "0x800C78")]
		internal bool <SetCachedSpellSlot>b__0(PlayerSpellSlot item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200038D")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SlotPostion slotPosition;

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x7FF830", Offset = "0x7FF830", VA = "0x7FF830")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x800C9C", Offset = "0x800C9C", VA = "0x800C9C")]
		internal bool <ClearSpellSlot>b__0(PlayerSpellSlot item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200038E")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SlotPostion slotPosition;

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x7FFC30", Offset = "0x7FFC30", VA = "0x7FFC30")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x800CC0", Offset = "0x800CC0", VA = "0x800CC0")]
		internal bool <HasSpellSlot>b__0(PlayerSpellSlot item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200038F")]
	private sealed class <>c__DisplayClass11_1
	{
		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string spellNameInSlot;

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x7FFC38", Offset = "0x7FFC38", VA = "0x7FFC38")]
		public <>c__DisplayClass11_1()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x800CE4", Offset = "0x800CE4", VA = "0x800CE4")]
		internal bool <HasSpellSlot>b__1(AbilityType item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000390")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AbilityType spellType;

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x7FFE68", Offset = "0x7FFE68", VA = "0x7FFE68")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x800D64", Offset = "0x800D64", VA = "0x800D64")]
		internal bool <GetSpellLevel>b__0(PlayerSpell item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000391")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AbilityType spellType;

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x80009C", Offset = "0x80009C", VA = "0x80009C")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x800D88", Offset = "0x800D88", VA = "0x800D88")]
		internal bool <SetSpellLevel>b__0(PlayerSpell item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000392")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AbilityType spellType;

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x800294", Offset = "0x800294", VA = "0x800294")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x800DAC", Offset = "0x800DAC", VA = "0x800DAC")]
		internal bool <SetCachedSpellLevel>b__0(PlayerSpell item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40014E4")]
	private const float baseCooldownDivider = 0.8f;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<PlayerSpellSlot> cachedPlayerSpellSlots;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<PlayerSpell> cachedPlayerSpells;

	[Token(Token = "0x17000200")]
	public static List<PlayerSpellSlot> CachedPlayerSpellSlots
	{
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x7FEDA0", Offset = "0x7FEDA0", VA = "0x7FEDA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000201")]
	public static List<PlayerSpell> CachedPlayerSpells
	{
		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x7FEDF8", Offset = "0x7FEDF8", VA = "0x7FEDF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x7FEE50", Offset = "0x7FEE50", VA = "0x7FEE50")]
	public static PlayerSpellSlot GetSpellSlotBySlotPosition(SlotPostion slotPosition)
	{
		return null;
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x7FF280", Offset = "0x7FF280", VA = "0x7FF280")]
	public static void SetSpellSlot(SlotPostion slotPosition, AbilityType spell)
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x7FF4C8", Offset = "0x7FF4C8", VA = "0x7FF4C8")]
	public static void SetCachedSpellSlot(SlotPostion slotPosition, AbilityType spell)
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x7FF6C0", Offset = "0x7FF6C0", VA = "0x7FF6C0")]
	public static void ClearSpellSlot(SlotPostion slotPosition)
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x7FF838", Offset = "0x7FF838", VA = "0x7FF838")]
	public static bool HasSpellSlot(SlotPostion slotPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x7FFC40", Offset = "0x7FFC40", VA = "0x7FFC40")]
	public static int GetSpellLevel(AbilityType spellType)
	{
		return default(int);
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x7FFE70", Offset = "0x7FFE70", VA = "0x7FFE70")]
	public static void SetSpellLevel(AbilityType spellType, int level)
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x8000A4", Offset = "0x8000A4", VA = "0x8000A4")]
	public static void SetCachedSpellLevel(AbilityType spellType, int level)
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x80029C", Offset = "0x80029C", VA = "0x80029C")]
	public static void ClearCachedSpellsAndSpellsSlots()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x800374", Offset = "0x800374", VA = "0x800374")]
	public static void ClearSpellsData()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x800A10", Offset = "0x800A10", VA = "0x800A10")]
	public static int GetCooldownValue(AbilityData abilityData)
	{
		return default(int);
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x800ABC", Offset = "0x800ABC", VA = "0x800ABC")]
	public PlayerSpells()
	{
	}
}
[Token(Token = "0x2000393")]
public class PlayerSpellSlot
{
	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SlotPostion slotPosition;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AbilityType spellType;

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x7FF254", Offset = "0x7FF254", VA = "0x7FF254")]
	public PlayerSpellSlot(SlotPostion slotPosition, AbilityType spellType)
	{
	}
}
[Token(Token = "0x2000394")]
public class PrefabMigrator : MonoBehaviour
{
	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x800DD0", Offset = "0x800DD0", VA = "0x800DD0")]
	public PrefabMigrator()
	{
	}
}
[Token(Token = "0x2000395")]
public class RainSwitcher : MonoBehaviour
{
	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject FirstRain;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SecondRain;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool secondRain;

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x800DD8", Offset = "0x800DD8", VA = "0x800DD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x800E34", Offset = "0x800E34", VA = "0x800E34")]
	public RainSwitcher()
	{
	}
}
[Token(Token = "0x2000396")]
public class RandomizeLight : MonoBehaviour
{
	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x800E3C", Offset = "0x800E3C", VA = "0x800E3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x800EAC", Offset = "0x800EAC", VA = "0x800EAC")]
	public RandomizeLight()
	{
	}
}
[Token(Token = "0x2000397")]
public class ArcherReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OrcArcherController orcArcherController;

	[Token(Token = "0x40014F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnemyArrowShootController enemyArrowShootControllerMobile;

	[Token(Token = "0x40014F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OnArrowShootAnimationEventHandler onArrowShootAnimationEventHandlerMobile;

	[Token(Token = "0x40014F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyArrowShootController enemyArrowShootControllerPC;

	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private OnArrowShootAnimationEventHandler onArrowShootAnimationEventHandlerPC;

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x800EB4", Offset = "0x800EB4", VA = "0x800EB4", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x800FF4", Offset = "0x800FF4", VA = "0x800FF4")]
	public ArcherReferenceSetter()
	{
	}
}
[Token(Token = "0x2000398")]
public class ArrowSpellsParticlesSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ShowArrowSpellParticle showArrowSpellParticle;

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem fireParticlesPC;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem fireParticlesMOBILE;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParticleSystem iceParticlesPC;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem iceParticlesMOBILE;

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x800FFC", Offset = "0x800FFC", VA = "0x800FFC", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x801120", Offset = "0x801120", VA = "0x801120")]
	public ArrowSpellsParticlesSetter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000399")]
public class AxeReferences
{
	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Sword;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SwordOnBack;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Axe;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer AxeRenderer;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform AxeParentBone;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material axeMaterial;

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x801128", Offset = "0x801128", VA = "0x801128")]
	public AxeReferences()
	{
	}
}
[Serializable]
[Token(Token = "0x200039A")]
public class DragonReferences
{
	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material bodyMaterial;

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x801130", Offset = "0x801130", VA = "0x801130")]
	public DragonReferences()
	{
	}
}
[Token(Token = "0x200039B")]
public class DragonReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SkinnedMeshRenderer bodySkinnedMeshRenderer;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DragonReferences dragonReferencesMobile;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private DragonReferences dragonReferencesPC;

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x801138", Offset = "0x801138", VA = "0x801138", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x8011FC", Offset = "0x8011FC", VA = "0x8011FC")]
	public void SetRenderers(DragonReferences dragonReferences)
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x801244", Offset = "0x801244", VA = "0x801244")]
	public DragonReferenceSetter()
	{
	}
}
[Token(Token = "0x200039C")]
public class HelmetsSetterInMenu : MonoBehaviour
{
	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<PlayerHelmetsSetter> helmetsSetters;

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x80124C", Offset = "0x80124C", VA = "0x80124C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x80146C", Offset = "0x80146C", VA = "0x80146C")]
	public HelmetsSetterInMenu()
	{
	}
}
[Token(Token = "0x200039D")]
public class IceShieldReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private IceShield iceShield;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ScalerOverTime scalerOverTimeMobile;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject abilityMeshMobile;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ScalerOverTime scalerOverTimePC;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject abilityMeshPC;

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x801474", Offset = "0x801474", VA = "0x801474", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x80154C", Offset = "0x80154C", VA = "0x80154C")]
	public IceShieldReferenceSetter()
	{
	}
}
[Token(Token = "0x200039E")]
public class KamikazeReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private KamikazeAttackPlayer kamikazeAttackPlayer;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ExplosiveBarrelController mobileExplosiveBarrelController;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ExplosiveBarrelController pCExplosiveBarrelController;

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x801554", Offset = "0x801554", VA = "0x801554", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x801694", Offset = "0x801694", VA = "0x801694")]
	public KamikazeReferenceSetter()
	{
	}
}
[Token(Token = "0x200039F")]
public class LobbyReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LobbyWindowsController lobbyWindowsController;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ServerListController serverListControllerStandard;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ServerListController serverListControllerTournament;

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x80169C", Offset = "0x80169C", VA = "0x80169C", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x80170C", Offset = "0x80170C", VA = "0x80170C")]
	public LobbyReferenceSetter()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A0")]
public class OrcReferences
{
	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BodyFreezeEffect SlowingEffect;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DeathAnimAdjuster DeathAnimAdjuster;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Renderer> FreezeRenderers;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExplodeObject IceToBeBroken;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material IceMaterial;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material DefaultMaterial;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material IceAxeMaterial;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ForceDirectionExploderController FrontCollider;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ForceDirectionExploderController BackCollider;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> ObjectsToDisable;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EnemyRenderers EnemyRenderers;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem OrcExplosionParticleSystemFog;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ParticleSystem OrcExplosionParticleSystemFragments;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Animator Animator;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject SwordInHand;

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject SwordOnBack;

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x801714", Offset = "0x801714", VA = "0x801714")]
	public OrcReferences()
	{
	}
}
[Token(Token = "0x20003A1")]
public class PlayerHelmetsSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<MeshRenderer> helmetsRenderers;

	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ScriptableObjectPlayerHelmets helmetsMaterialsScriptableObject;

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x80171C", Offset = "0x80171C", VA = "0x80171C", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x801394", Offset = "0x801394", VA = "0x801394")]
	public void SetMaterialsDependingOnPlatform()
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x801720", Offset = "0x801720", VA = "0x801720")]
	private void SetMaterials(List<Material> helmetsMaterials)
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x8017F4", Offset = "0x8017F4", VA = "0x8017F4")]
	public PlayerHelmetsSetter()
	{
	}
}
[Token(Token = "0x20003A2")]
public class PlayerMenuReferenceSetter : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003A3")]
	private sealed class <>c
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Renderer> <>9__4_0;

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x801B7C", Offset = "0x801B7C", VA = "0x801B7C")]
		public <>c()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x801B84", Offset = "0x801B84", VA = "0x801B84")]
		internal bool <GetRenderers>b__4_0(Renderer x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Renderer> gauntletRenderers;

	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerColorSettings playerColorSetterMobile;

	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayerColorSettings playerColorSetterPC;

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x8017FC", Offset = "0x8017FC", VA = "0x8017FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x801938", Offset = "0x801938", VA = "0x801938")]
	[ContextMenu("Get Renders")]
	private void GetRenderers()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x801AB4", Offset = "0x801AB4", VA = "0x801AB4")]
	public PlayerMenuReferenceSetter()
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x801ABC", Offset = "0x801ABC", VA = "0x801ABC")]
	private void <Awake>b__3_0(Renderer x)
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x801AE4", Offset = "0x801AE4", VA = "0x801AE4")]
	private void <Awake>b__3_1(Renderer x)
	{
	}
}
[Serializable]
[Token(Token = "0x20003A4")]
public class PlayerReferences
{
	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerDeathController PlayerDeathController;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerMaterialsColorSetter PlayerMaterialsColorSetter;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeUntilRespawn;

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x801BF0", Offset = "0x801BF0", VA = "0x801BF0")]
	public PlayerReferences()
	{
	}
}
[Token(Token = "0x20003A5")]
public class SpellReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEngine.Object _ablity;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem particleSystemPC;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem particleSystemMobile;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IAbility ablity;

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x801BF8", Offset = "0x801BF8", VA = "0x801BF8", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x801D0C", Offset = "0x801D0C", VA = "0x801D0C")]
	private void SetSpellParticleSystem(ParticleSystem particleSystemToSet)
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x801DB8", Offset = "0x801DB8", VA = "0x801DB8")]
	public SpellReferenceSetter()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A6")]
public class TrollReferences
{
	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BodyFreezeEffect BodyVisualEffect;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material bodyMaterial;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material addMaterial;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SkinQuality skinQuality;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material helmetMaterial;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x801DC0", Offset = "0x801DC0", VA = "0x801DC0")]
	public TrollReferences()
	{
	}
}
[Token(Token = "0x20003A7")]
public class TrollReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer helmetRenderer;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SlowingController slowingController;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyAnimatorStateController enemyAnimatorStateController;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TrollReferences trollReferencesMobile;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TrollReferences trollReferencesMobilePC;

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x801DC8", Offset = "0x801DC8", VA = "0x801DC8", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x801E8C", Offset = "0x801E8C", VA = "0x801E8C")]
	private void SetRenderers(TrollReferences trollReferences)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x802024", Offset = "0x802024", VA = "0x802024")]
	public TrollReferenceSetter()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A8")]
public class WolfReferences
{
	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BodyFreezeEffect SlowingEffect;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Renderer> FreezeRenderers;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExplodeObject IceToBeBroken;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material IceMaterial;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material DefaultMaterial;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ForceDirectionExploderController FrontCollider;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ForceDirectionExploderController BackCollider;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> ObjectsToDisable;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EnemyRenderers EnemyRenderers;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem WolfExplosionParticleSystemFog;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem WolfExplosionParticleSystemFragments;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator Animator;

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x80202C", Offset = "0x80202C", VA = "0x80202C")]
	public WolfReferences()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A9")]
public class WyvernReferences
{
	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject WyvernBody;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallController FallController;

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator Animator;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyRenderers EnemyRenderers;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ShadowCastingMode ShadowCastingMode;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material DefaultMaterial;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Renderer> Renderers;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ExplodeObject IceToBeBroken;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Collider[] CollidersToEnable;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> ObjectsToDisable;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FallController fallControllerPC;

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x802034", Offset = "0x802034", VA = "0x802034")]
	public WyvernReferences()
	{
	}
}
[Token(Token = "0x20003AA")]
public class WyvernReferenceSetter : MonoBehaviour, ISettable
{
	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WyvernAnimatorController wyvernAnimatorController;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BodyDissapearController bodyDissapearController;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private WyvernFreezeController wyvernFreezeController;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnemyAnimatorStateController enemyAnimatorStateController;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private WyvernArrowKilledController wyvernArrowKilledController;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private WyvernReferences wyvernReferencesMobile;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private WyvernReferences wyvernReferencesPC;

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x80203C", Offset = "0x80203C", VA = "0x80203C", Slot = "4")]
	public void SetReferences()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x802100", Offset = "0x802100", VA = "0x802100")]
	private void SetReferences(WyvernReferences wyvernReferences)
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x802194", Offset = "0x802194", VA = "0x802194")]
	public WyvernReferenceSetter()
	{
	}
}
[Token(Token = "0x20003AB")]
public class ResetFirstTime : MonoBehaviour
{
	[Token(Token = "0x6001229")]
	[Address(RVA = "0x80219C", Offset = "0x80219C", VA = "0x80219C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x802268", Offset = "0x802268", VA = "0x802268")]
	public ResetFirstTime()
	{
	}
}
[Token(Token = "0x20003AC")]
public class rotateObject : MonoBehaviour
{
	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int speed;

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x802270", Offset = "0x802270", VA = "0x802270")]
	private void Update()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x802318", Offset = "0x802318", VA = "0x802318")]
	public rotateObject()
	{
	}
}
[Token(Token = "0x20003AD")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float duration;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x802328", Offset = "0x802328", VA = "0x802328")]
	private void Update()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x8023FC", Offset = "0x8023FC", VA = "0x8023FC")]
	public Rotator()
	{
	}
}
[Token(Token = "0x20003AE")]
public class ScriptableObjectPlayerHelmets : ScriptableObject
{
	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Material> helmetsMaterialsPC;

	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Material> helmetsMaterialsMobile;

	[Token(Token = "0x17000202")]
	public List<Material> HelmetsMaterialsPC
	{
		[Token(Token = "0x600122F")]
		[Address(RVA = "0x802404", Offset = "0x802404", VA = "0x802404")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000203")]
	public List<Material> HelmetsMaterialsMobile
	{
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x80240C", Offset = "0x80240C", VA = "0x80240C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x802414", Offset = "0x802414", VA = "0x802414")]
	public ScriptableObjectPlayerHelmets()
	{
	}
}
[Token(Token = "0x20003AF")]
public class ShowArrowSpellParticle : MonoBehaviour, IResetable
{
	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellSelectController spellSellectController;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem fireParticle;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem iceParticle;

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x80241C", Offset = "0x80241C", VA = "0x80241C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x8025D4", Offset = "0x8025D4", VA = "0x8025D4")]
	private void SetSpellCastEffect(AbilityParticleType type)
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x8026F8", Offset = "0x8026F8", VA = "0x8026F8")]
	private static bool IsPcQuality()
	{
		return default(bool);
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x8010F0", Offset = "0x8010F0", VA = "0x8010F0")]
	public void SetReferences(ParticleSystem fireParticleToSet, ParticleSystem iceParticleToSet)
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x8026B8", Offset = "0x8026B8", VA = "0x8026B8")]
	private bool AreParticleSystemPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x802758", Offset = "0x802758", VA = "0x802758", Slot = "4")]
	public void ResetElement()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x802760", Offset = "0x802760", VA = "0x802760")]
	public ShowArrowSpellParticle()
	{
	}
}
[Token(Token = "0x20003B0")]
public class SkyboxExposureSwitch : MonoBehaviour
{
	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float normalIntensity;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float thunderIntensity;

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x802768", Offset = "0x802768", VA = "0x802768")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x8027C4", Offset = "0x8027C4", VA = "0x8027C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x802820", Offset = "0x802820", VA = "0x802820")]
	public SkyboxExposureSwitch()
	{
	}
}
[Token(Token = "0x20003B1")]
public class SlotSelectScreen : MonoBehaviour
{
	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] itemsToDisable;

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x802828", Offset = "0x802828", VA = "0x802828")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x80288C", Offset = "0x80288C", VA = "0x80288C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x8028F0", Offset = "0x8028F0", VA = "0x8028F0")]
	public SlotSelectScreen()
	{
	}
}
[Token(Token = "0x20003B2")]
public class SoftFlicker : MonoBehaviour
{
	[Token(Token = "0x20003B3")]
	private sealed class <Flicker>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoftFlicker <>4__this;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001245")]
			[Address(RVA = "0x802AA8", Offset = "0x802AA8", VA = "0x802AA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0x802AB0", Offset = "0x802AB0", VA = "0x802AB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x8029A0", Offset = "0x8029A0", VA = "0x8029A0")]
		[DebuggerHidden]
		public <Flicker>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x8029DC", Offset = "0x8029DC", VA = "0x8029DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x8029E0", Offset = "0x8029E0", VA = "0x8029E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minIntensity;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxIntensity;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light flickerLight;

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x8028F8", Offset = "0x8028F8", VA = "0x8028F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x80291C", Offset = "0x80291C", VA = "0x80291C")]
	private IEnumerator Flicker(float delay)
	{
		return null;
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x8029C8", Offset = "0x8029C8", VA = "0x8029C8")]
	public SoftFlicker()
	{
	}
}
[Token(Token = "0x20003B4")]
public class ArrowFire : MonoBehaviour
{
	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isFired;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Fire fire;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] fireArrow;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] burnArrow;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] extinctionArrow;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource[] fireSounds;

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x802AB8", Offset = "0x802AB8", VA = "0x802AB8")]
	public void StopFire()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x802BF8", Offset = "0x802BF8", VA = "0x802BF8")]
	public void StartFire()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x802E48", Offset = "0x802E48", VA = "0x802E48")]
	public void OnCollisionEnter(Collision coll)
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x802ED4", Offset = "0x802ED4", VA = "0x802ED4")]
	public ArrowFire()
	{
	}
}
[Token(Token = "0x20003B5")]
public class BreakingInIndicationTrigger : MonoBehaviour
{
	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpecialSoundEffects SpecialSoundsEffects;

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x802EDC", Offset = "0x802EDC", VA = "0x802EDC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x802FC4", Offset = "0x802FC4", VA = "0x802FC4")]
	public BreakingInIndicationTrigger()
	{
	}
}
[Token(Token = "0x20003B6")]
public class WalkSound : MonoBehaviour
{
	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _tag;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HealthStateController healthStateController;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource walk;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] clips;

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x802FCC", Offset = "0x802FCC", VA = "0x802FCC")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x8030AC", Offset = "0x8030AC", VA = "0x8030AC")]
	public WalkSound()
	{
	}
}
[Token(Token = "0x20003B7")]
public class Spawner : MonoBehaviour
{
	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pref_Obj;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curveInterval;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float tempTime;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x803104", Offset = "0x803104", VA = "0x803104")]
	private void Start()
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x803120", Offset = "0x803120", VA = "0x803120")]
	private void Update()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x8032D4", Offset = "0x8032D4", VA = "0x8032D4")]
	public Spawner()
	{
	}
}
[Token(Token = "0x20003B8")]
public class SpawnParticles : MonoBehaviour
{
	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> particles;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int index;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject currentParticle;

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x8032DC", Offset = "0x8032DC", VA = "0x8032DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x8034A0", Offset = "0x8034A0", VA = "0x8034A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x803744", Offset = "0x803744", VA = "0x803744")]
	public SpawnParticles()
	{
	}
}
[Token(Token = "0x20003B9")]
public class SpawnVoice : MonoBehaviourPun
{
	[Token(Token = "0x6001255")]
	[Address(RVA = "0x80374C", Offset = "0x80374C", VA = "0x80374C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x8037B0", Offset = "0x8037B0", VA = "0x8037B0")]
	public SpawnVoice()
	{
	}
}
[Serializable]
[Token(Token = "0x20003BA")]
public struct StepSound
{
	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioClip soundClip;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] soundPlayMomentsInAnimationInSeconds;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string animationStateName;
}
[Token(Token = "0x20003BB")]
public class StepSoundController : MonoBehaviour
{
	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StepSound[] stepSounds;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource stepAudioSource;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastStepTime;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastAnimationStateHash;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool changedAnimationStateFromLastStepSound;

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x8037B8", Offset = "0x8037B8", VA = "0x8037B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x803AF4", Offset = "0x803AF4", VA = "0x803AF4")]
	public StepSoundController()
	{
	}
}
[Token(Token = "0x20003BC")]
public static class LocalStorageController
{
	[Token(Token = "0x20003BD")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EquipmentItemKey key;

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x804014", Offset = "0x804014", VA = "0x804014")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x8040C4", Offset = "0x8040C4", VA = "0x8040C4")]
		internal bool <LoadShopItems>b__0(string x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DEV_SHOULDSAVELOCALLY;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int staticCounter;

	[Token(Token = "0x17000206")]
	public static bool HasSomethingSaved
	{
		[Token(Token = "0x6001259")]
		[Address(RVA = "0x803B08", Offset = "0x803B08", VA = "0x803B08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000207")]
	public static int Gold
	{
		[Token(Token = "0x600125A")]
		[Address(RVA = "0x7FC690", Offset = "0x7FC690", VA = "0x7FC690")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600125B")]
		[Address(RVA = "0x7FC810", Offset = "0x7FC810", VA = "0x7FC810")]
		set
		{
		}
	}

	[Token(Token = "0x17000208")]
	public static int Experience
	{
		[Token(Token = "0x600125C")]
		[Address(RVA = "0x7FB2B4", Offset = "0x7FB2B4", VA = "0x7FB2B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600125D")]
		[Address(RVA = "0x7FB268", Offset = "0x7FB268", VA = "0x7FB268")]
		set
		{
		}
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x7FD198", Offset = "0x7FD198", VA = "0x7FD198")]
	public static void AddEquipmentItem(EquipmentItemKey equipmentItemKey)
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x7FB664", Offset = "0x7FB664", VA = "0x7FB664")]
	public static void Load()
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x803BA4", Offset = "0x803BA4", VA = "0x803BA4")]
	private static void LoadShopItems()
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x80401C", Offset = "0x80401C", VA = "0x80401C")]
	private static void LoadIsItemBought(EquipmentItemKey key)
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x803F9C", Offset = "0x803F9C", VA = "0x803F9C")]
	private static List<string> GetEquipmentFromPrefs()
	{
		return null;
	}
}
[Token(Token = "0x20003BE")]
public static class OculusCloudStorage2Controller
{
	[Token(Token = "0x20003BF")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string equipmentData;

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x804AE0", Offset = "0x804AE0", VA = "0x804AE0")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x805A68", Offset = "0x805A68", VA = "0x805A68")]
		internal void <SaveNewPlayerProgressToFile>b__2(string item)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003C0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<string, bool>, bool> <>9__15_0;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<string, bool>, string> <>9__15_1;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<EquipmentItemKey> <>9__20_0;

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x805B44", Offset = "0x805B44", VA = "0x805B44")]
		public <>c()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x805B4C", Offset = "0x805B4C", VA = "0x805B4C")]
		internal bool <SaveNewPlayerProgressToFile>b__15_0(KeyValuePair<string, bool> item)
		{
			return default(bool);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x805B8C", Offset = "0x805B8C", VA = "0x805B8C")]
		internal string <SaveNewPlayerProgressToFile>b__15_1(KeyValuePair<string, bool> item)
		{
			return null;
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x805BC8", Offset = "0x805BC8", VA = "0x805BC8")]
		internal void <LoadEquipment>b__20_0(EquipmentItemKey boughtEquipment)
		{
		}
	}

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string saveFileDirectoryPath;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static OculusCloudStorage2SaveData save;

	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Action OnSaveFileDirectoryPathSuccessfullyLoaded;

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Action OnProgressSaved;

	[Token(Token = "0x17000209")]
	private static string SaveFilePath
	{
		[Token(Token = "0x6001266")]
		[Address(RVA = "0x80414C", Offset = "0x80414C", VA = "0x80414C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020A")]
	public static int Gold
	{
		[Token(Token = "0x6001267")]
		[Address(RVA = "0x7FC62C", Offset = "0x7FC62C", VA = "0x7FC62C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001268")]
		[Address(RVA = "0x7FC7A8", Offset = "0x7FC7A8", VA = "0x7FC7A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700020B")]
	public static int Experience
	{
		[Token(Token = "0x6001269")]
		[Address(RVA = "0x7FB19C", Offset = "0x7FB19C", VA = "0x7FB19C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600126A")]
		[Address(RVA = "0x7FB200", Offset = "0x7FB200", VA = "0x7FB200")]
		set
		{
		}
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x7FD0B4", Offset = "0x7FD0B4", VA = "0x7FD0B4")]
	public static void AddEquipmentItem(EquipmentItemKey equipmentToAddKey)
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x7FB5C8", Offset = "0x7FB5C8", VA = "0x7FB5C8")]
	public static void Load()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x804688", Offset = "0x804688", VA = "0x804688")]
	public static void SaveNewPlayerProgressToFile()
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x8041C0", Offset = "0x8041C0", VA = "0x8041C0")]
	private static void SavePlayerProgressToFile()
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x804AF0", Offset = "0x804AF0", VA = "0x804AF0")]
	private static void LoadPlayerProgressFromCachedPath()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x804E0C", Offset = "0x804E0C", VA = "0x804E0C")]
	private static void CreateNewSaveFile()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x8050DC", Offset = "0x8050DC", VA = "0x8050DC")]
	private static void LoadSaveFromFile()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x8053E0", Offset = "0x8053E0", VA = "0x8053E0")]
	private static void LoadEquipment()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x8057B4", Offset = "0x8057B4", VA = "0x8057B4")]
	private static List<string> GetEquipmentFromSave()
	{
		return null;
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x8044B8", Offset = "0x8044B8", VA = "0x8044B8")]
	private static void LoadSaveFileDirectoryPath(Action OnSaveFileDirectoryPathSuccessfullyLoaded)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x805844", Offset = "0x805844", VA = "0x805844")]
	private static void OnSaveFileDirectoryPathLoaded(Message<string> message)
	{
	}
}
[Serializable]
[Token(Token = "0x20003C1")]
public class OculusCloudStorage2SaveData
{
	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Experience;

	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int Gold;

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Equipment;

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x804AE8", Offset = "0x804AE8", VA = "0x804AE8")]
	public OculusCloudStorage2SaveData()
	{
	}
}
[Token(Token = "0x20003C2")]
public class OculusCloudStorageController : MonoBehaviour
{
	[Token(Token = "0x600127F")]
	[Address(RVA = "0x805C20", Offset = "0x805C20", VA = "0x805C20")]
	public OculusCloudStorageController()
	{
	}
}
[Token(Token = "0x20003C3")]
public class TerrainTextureController : MonoBehaviour
{
	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 terrainSize;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 alphamapSize;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 terrainPosition;

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x805C28", Offset = "0x805C28", VA = "0x805C28")]
	private void Start()
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x805D3C", Offset = "0x805D3C", VA = "0x805D3C")]
	public float GetTerrainTextureWeight(Vector3 positionInWorld, int textureIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x805E28", Offset = "0x805E28", VA = "0x805E28")]
	public TerrainTextureController()
	{
	}
}
[Token(Token = "0x20003C4")]
public class TesterButtonDisabler : MonoBehaviourPun, IInRoomCallbacks
{
	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject testerButton;

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x805E30", Offset = "0x805E30", VA = "0x805E30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x805E50", Offset = "0x805E50", VA = "0x805E50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x805F0C", Offset = "0x805F0C", VA = "0x805F0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x805FA4", Offset = "0x805FA4", VA = "0x805FA4", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x806014", Offset = "0x806014", VA = "0x806014", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x806018", Offset = "0x806018", VA = "0x806018", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x80601C", Offset = "0x80601C", VA = "0x80601C", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x806020", Offset = "0x806020", VA = "0x806020", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x806024", Offset = "0x806024", VA = "0x806024")]
	public TesterButtonDisabler()
	{
	}
}
[Token(Token = "0x20003C5")]
public class TesterDeathMatch : MonoBehaviourPun
{
	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathMatchGameTimeController deathMatchGameTimeController;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Timer timerInGame;

	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int defaultFullTimeGame;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int defaultTimeToEndGame;

	[Token(Token = "0x40015A8")]
	private const int finishTime = 5;

	[Token(Token = "0x40015A9")]
	private const int infinityTime = 99;

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x80602C", Offset = "0x80602C", VA = "0x80602C")]
	private void Start()
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x80604C", Offset = "0x80604C", VA = "0x80604C")]
	public void SetTimeDeathMatchToFiveSecond()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x80609C", Offset = "0x80609C", VA = "0x80609C")]
	public void SetDefaultTimeDeathMatch()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x8060FC", Offset = "0x8060FC", VA = "0x8060FC")]
	public void SetInfinityTime()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x806154", Offset = "0x806154", VA = "0x806154")]
	public TesterDeathMatch()
	{
	}
}
[Token(Token = "0x20003C6")]
public class TesterGoldIncrementer : MonoBehaviour
{
	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text goldText;

	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentGold;

	[Token(Token = "0x1700020C")]
	public int GoldToIncrement
	{
		[Token(Token = "0x6001292")]
		[Address(RVA = "0x806194", Offset = "0x806194", VA = "0x806194")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x80615C", Offset = "0x80615C", VA = "0x80615C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x80619C", Offset = "0x80619C", VA = "0x80619C")]
	public void OnIncrement()
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x8061E4", Offset = "0x8061E4", VA = "0x8061E4")]
	public void OnDecrement()
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x8061AC", Offset = "0x8061AC", VA = "0x8061AC")]
	private void SetGoldText()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x8061F4", Offset = "0x8061F4", VA = "0x8061F4")]
	public TesterGoldIncrementer()
	{
	}
}
[Token(Token = "0x20003C7")]
public class TesterMenu : MonoBehaviourPun, IPunObservable
{
	[Serializable]
	[Token(Token = "0x20003C8")]
	private sealed class <>c
	{
		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<SpawnAreaWithProbability> <>9__48_1;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<EnemySpawnData> <>9__48_0;

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x808E94", Offset = "0x808E94", VA = "0x808E94")]
		public <>c()
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x808E9C", Offset = "0x808E9C", VA = "0x808E9C")]
		internal void <SetWavesForTestingRoutes>b__48_0(EnemySpawnData item)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x808FA8", Offset = "0x808FA8", VA = "0x808FA8")]
		internal void <SetWavesForTestingRoutes>b__48_1(SpawnAreaWithProbability x)
		{
		}
	}

	[Token(Token = "0x20003C9")]
	private sealed class <>c__DisplayClass60_0
	{
		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyType enemyType;

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x808ABC", Offset = "0x808ABC", VA = "0x808ABC")]
		public <>c__DisplayClass60_0()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x808FC4", Offset = "0x808FC4", VA = "0x808FC4")]
		internal bool <StartSpawningEnemy>b__0(RandomRouteSpawner x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003CA")]
	private sealed class <>c__DisplayClass61_0
	{
		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnemyType enemyType;

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x808AC4", Offset = "0x808AC4", VA = "0x808AC4")]
		public <>c__DisplayClass61_0()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x809040", Offset = "0x809040", VA = "0x809040")]
		internal bool <StartSpawningEnemy>b__0(RandomRouteSpawner x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40015AC")]
	public const float TimeBoostValue = 3f;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle togglePlayerImmortality;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Toggle toggleBoostGameSpeed;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Toggle toggleTestGold;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Toggle toggleAutoShoot;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject goldIncrementerGO;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GateController castleController;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<RandomRouteSpawner> enemySpawners;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EnemySpawnData> enemySpawnDatas;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<WavesDataContainer> wavesDataContainersCopy;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<EnemySpawnData> enemySpawnDatasCopy;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isTestingGold;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TesterGoldIncrementer goldIncrementer;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timeScale;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isTestingRoutes;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool <IsPlayerImmortal>k__BackingField;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool <IsBoostGameSpeed>k__BackingField;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool <IsAutoShoot>k__BackingField;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float AutoShootFrequency;

	[Token(Token = "0x1700020D")]
	public static bool IsPlayerImmortal
	{
		[Token(Token = "0x6001297")]
		[Address(RVA = "0x8061FC", Offset = "0x8061FC", VA = "0x8061FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001298")]
		[Address(RVA = "0x806254", Offset = "0x806254", VA = "0x806254")]
		private set
		{
		}
	}

	[Token(Token = "0x1700020E")]
	public static bool IsBoostGameSpeed
	{
		[Token(Token = "0x6001299")]
		[Address(RVA = "0x8062B0", Offset = "0x8062B0", VA = "0x8062B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600129A")]
		[Address(RVA = "0x806308", Offset = "0x806308", VA = "0x806308")]
		private set
		{
		}
	}

	[Token(Token = "0x1700020F")]
	public static bool IsAutoShoot
	{
		[Token(Token = "0x600129B")]
		[Address(RVA = "0x806364", Offset = "0x806364", VA = "0x806364")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600129C")]
		[Address(RVA = "0x8063BC", Offset = "0x8063BC", VA = "0x8063BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000210")]
	private float TimeScale
	{
		[Token(Token = "0x600129D")]
		[Address(RVA = "0x806418", Offset = "0x806418", VA = "0x806418")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600129E")]
		[Address(RVA = "0x806420", Offset = "0x806420", VA = "0x806420")]
		set
		{
		}
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x80642C", Offset = "0x80642C", VA = "0x80642C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x806524", Offset = "0x806524", VA = "0x806524")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x807104", Offset = "0x807104", VA = "0x807104")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x807524", Offset = "0x807524", VA = "0x807524")]
	private void BoostGameSpeed()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x8075C4", Offset = "0x8075C4", VA = "0x8075C4")]
	public void GiveMuchosHealthToCastle()
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x80766C", Offset = "0x80766C", VA = "0x80766C")]
	public void GiveFullHealthToCastle()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x80768C", Offset = "0x80768C", VA = "0x80768C")]
	public void GiveOneHelathToCastle()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x807730", Offset = "0x807730", VA = "0x807730")]
	public void SetNormalTrollsOnWaves()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x807A2C", Offset = "0x807A2C", VA = "0x807A2C")]
	public void SetBlackTrollsOnWaves()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x807A3C", Offset = "0x807A3C", VA = "0x807A3C")]
	public void SetRedDragonsOnWaves()
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x807A4C", Offset = "0x807A4C", VA = "0x807A4C")]
	public void SetGreenDragonsOnWaves()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x807A5C", Offset = "0x807A5C", VA = "0x807A5C")]
	public void SetNormalAxeMansOnWaves()
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x807D40", Offset = "0x807D40", VA = "0x807D40")]
	public void SetGizmoOnWaves()
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x807D4C", Offset = "0x807D4C", VA = "0x807D4C")]
	public void SetKanitOnWaves()
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x807D58", Offset = "0x807D58", VA = "0x807D58")]
	public void SetGnurOnWaves()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x807D64", Offset = "0x807D64", VA = "0x807D64")]
	public void SetRedAxeMansOnWaves()
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x807D70", Offset = "0x807D70", VA = "0x807D70")]
	public void SetWyvernsOnWaves()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x807D80", Offset = "0x807D80", VA = "0x807D80")]
	public void SetWavesForTestingRoutes()
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x807264", Offset = "0x807264", VA = "0x807264")]
	public void RevertToNormalWaves()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x807EEC", Offset = "0x807EEC", VA = "0x807EEC")]
	public void SkipToWave(string waveNumberText)
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x807F04", Offset = "0x807F04", VA = "0x807F04")]
	public void SetNextWave(string waveNumberText)
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x8082CC", Offset = "0x8082CC", VA = "0x8082CC")]
	private void SkipToStage(int waveNumber)
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x808020", Offset = "0x808020", VA = "0x808020")]
	public void FinishWave()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x80840C", Offset = "0x80840C", VA = "0x80840C")]
	public void SetImmortality()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x808524", Offset = "0x808524", VA = "0x808524")]
	public void ToggleTestingGold()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x8086D8", Offset = "0x8086D8", VA = "0x8086D8")]
	public void AddGoldToDropController()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x8070A8", Offset = "0x8070A8", VA = "0x8070A8")]
	private List<GoldDropController> GetGoldDropControllers()
	{
		return null;
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x808838", Offset = "0x808838", VA = "0x808838")]
	public void SetGameSpeed()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x8089A4", Offset = "0x8089A4", VA = "0x8089A4")]
	public void SetAutoShoot()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x807740", Offset = "0x807740", VA = "0x807740")]
	private void StartSpawningEnemy(EnemyPoolType enemyPoolType, EnemyType enemyType, int enemiesAmount)
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x807A68", Offset = "0x807A68", VA = "0x807A68")]
	private void StartSpawningEnemy(EnemyPoolType enemyPoolType, EnemyType enemyType)
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x806728", Offset = "0x806728", VA = "0x806728")]
	private void CopyWavesData()
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x806BDC", Offset = "0x806BDC", VA = "0x806BDC")]
	private void CacheSpawnAreaChosers()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x808ACC", Offset = "0x808ACC", VA = "0x808ACC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x808CC0", Offset = "0x808CC0", VA = "0x808CC0")]
	public TesterMenu()
	{
	}
}
[Token(Token = "0x20003CB")]
public class TextureAnim : MonoBehaviour
{
	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 scrollSpeed;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x8090BC", Offset = "0x8090BC", VA = "0x8090BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x809114", Offset = "0x809114", VA = "0x809114")]
	private void Update()
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x80919C", Offset = "0x80919C", VA = "0x80919C")]
	public TextureAnim()
	{
	}
}
[Token(Token = "0x20003CC")]
public class Thunders : MonoBehaviour
{
	[Token(Token = "0x20003CD")]
	private sealed class <ActivateThunder>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Thunders <>4__this;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x80944C", Offset = "0x80944C", VA = "0x80944C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0x809454", Offset = "0x809454", VA = "0x809454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x8092D4", Offset = "0x8092D4", VA = "0x8092D4")]
		[DebuggerHidden]
		public <ActivateThunder>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x809374", Offset = "0x809374", VA = "0x809374", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x809378", Offset = "0x809378", VA = "0x809378", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float minTimeOffset;

	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxTimeOffset;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float thunderDuration;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource thunderSoundSource;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip[] thunderClips;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject lightingBoltParticle;

	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject lightingBoltLight;

	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float thunderBreakDuration;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForSeconds thunderDelay;

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x8091A4", Offset = "0x8091A4", VA = "0x8091A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x8091F4", Offset = "0x8091F4", VA = "0x8091F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x809260", Offset = "0x809260", VA = "0x809260")]
	private IEnumerator ActivateThunder()
	{
		return null;
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x8092FC", Offset = "0x8092FC", VA = "0x8092FC")]
	public Thunders()
	{
	}
}
[Token(Token = "0x20003CE")]
public enum AWSEndpointType
{
	[Token(Token = "0x40015D4")]
	Prod,
	[Token(Token = "0x40015D5")]
	Stage,
	[Token(Token = "0x40015D6")]
	Dev
}
[Token(Token = "0x20003CF")]
public class AWSEndpointTypeSetterForMaster : MonoBehaviour
{
	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AWSEndpointType awsEndpointType;

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x80945C", Offset = "0x80945C", VA = "0x80945C")]
	public AWSEndpointTypeSetterForMaster()
	{
	}
}
[Serializable]
[Token(Token = "0x20003D0")]
public class AWSLastTournamentLeaderboardEntriesDTO
{
	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AWSTournamentLeaderboardEntryDTO> finalists;

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x809464", Offset = "0x809464", VA = "0x809464")]
	public AWSLastTournamentLeaderboardEntriesDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x20003D1")]
public class AWSLastTournamentsLeaderboardEntriesDTO
{
	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<AWSLastTournamentLeaderboardEntriesDTO> tournaments;

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x80946C", Offset = "0x80946C", VA = "0x80946C")]
	public AWSLastTournamentsLeaderboardEntriesDTO()
	{
	}
}
[Token(Token = "0x20003D2")]
public class AWSTournamentLeaderboardController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003D3")]
	private sealed class <>c
	{
		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<AWSLastTournamentLeaderboardEntriesDTO, string> <>9__44_0;

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x80AF3C", Offset = "0x80AF3C", VA = "0x80AF3C")]
		public <>c()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x80AF44", Offset = "0x80AF44", VA = "0x80AF44")]
		internal string <GetPlayersFromJson>b__44_0(AWSLastTournamentLeaderboardEntriesDTO tournament)
		{
			return null;
		}
	}

	[Token(Token = "0x40015DB")]
	private const string instanceGameObjectName = "VRParkLeaderboardsController";

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AWSTournamentLeaderboardController instance;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Guid playerGUID;

	[Token(Token = "0x40015DE")]
	private const string apiUrlSetWithoutTournamentIdProd = "https://api.elven-assassin.com/tournaments/";

	[Token(Token = "0x40015DF")]
	private const string apiUrlSetWithoutTournamentIdStage = "https://stage.api.elven-assassin.com/tournaments/";

	[Token(Token = "0x40015E0")]
	private const string apiUrlSetWithoutTournamentIdDev = "https://dev.api.elven-assassin.com/tournaments/";

	[Token(Token = "0x40015E1")]
	private const string apiUrlGetProd = "https://api.elven-assassin.com/tournaments/region/{0}/player/{1}";

	[Token(Token = "0x40015E2")]
	private const string apiUrlGetStage = "https://stage.api.elven-assassin.com/tournaments/region/{0}/player/{1}";

	[Token(Token = "0x40015E3")]
	private const string apiUrlGetDev = "https://dev.api.elven-assassin.com/tournaments/region/{0}/player/{1}";

	[Token(Token = "0x40015E4")]
	private const string firstHeaderKey = "Content-Type";

	[Token(Token = "0x40015E5")]
	private const string firstHeaderValue = "application/json";

	[Token(Token = "0x40015E6")]
	private const string xApiHeaderKey = "x-api-key";

	[Token(Token = "0x40015E7")]
	private const string xApiKeyProd = "D79VUQnV672W5A7tKgI8XaQ6UEYS9qqL4rQulyc7";

	[Token(Token = "0x40015E8")]
	private const string xApiKeyStage = "vUUA8YHKEa40EEJcD3iIOf8VbKWx6iA4Q7Idawbg";

	[Token(Token = "0x40015E9")]
	private const string xApiKeyDev = "rbKwn2oqFf9YT5kQmYfOg8BCehMRape36GVP7bbl";

	[Token(Token = "0x40015EA")]
	private const string tournamentLeaderboardJsonBackupFileName = "TournamentLeaderboardJsonBackup";

	[Token(Token = "0x40015EB")]
	private const string JSONAdditionalTournamentsField = "{\"tournaments\":";

	[Token(Token = "0x40015EC")]
	private const string JSONClosingObject = "}";

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Guid leaderboardGuid;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal static Action<AWSTournamentLeaderboardEntriesResponseDTO> OnResponseAcquired;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Http http;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string tournamentId;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string tournamentEpochTimestamp;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Action<List<AWSTournamentLeaderboardEntryDTO>> OnGetFromAWSAction;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Action<string> OnGetFromAWSFailedAction;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static bool hasSavedScoresToAWS;

	[Token(Token = "0x17000213")]
	private static AWSTournamentLeaderboardController Instance
	{
		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x809474", Offset = "0x809474", VA = "0x809474")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000214")]
	public static Guid LocalPlayerGUID
	{
		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x809580", Offset = "0x809580", VA = "0x809580")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x17000215")]
	private static string TournamentLeaderboardJsonBackupFilePath
	{
		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x809E34", Offset = "0x809E34", VA = "0x809E34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x8095D8", Offset = "0x8095D8", VA = "0x8095D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x809718", Offset = "0x809718", VA = "0x809718")]
	internal static void SaveToAWS(List<TournamentPlayer> allPlayers)
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x80971C", Offset = "0x80971C", VA = "0x80971C")]
	internal static void SaveToLocalFile(List<TournamentPlayer> allPlayers)
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x809720", Offset = "0x809720", VA = "0x809720")]
	internal static void GetFromAWS(CloudRegionCode cloudRegionCode, string playerId, Action<List<AWSTournamentLeaderboardEntryDTO>> OnGetFromAWS, Action<string> OnGetFromAWSFailed)
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x809AA0", Offset = "0x809AA0", VA = "0x809AA0")]
	internal static void SaveToAWSWithLocalFileBackup(List<TournamentPlayer> allPlayers)
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x809AF4", Offset = "0x809AF4", VA = "0x809AF4")]
	private static string GetApiUrlSet()
	{
		return null;
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x809838", Offset = "0x809838", VA = "0x809838")]
	private static string GetApiUrlGet(CloudRegionCode regionCode, string playerId)
	{
		return null;
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x809CB0", Offset = "0x809CB0", VA = "0x809CB0")]
	private static string GetXApiKey()
	{
		return null;
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x80A1CC", Offset = "0x80A1CC", VA = "0x80A1CC")]
	public static void SetInitialDataOfTournament(TournamentHostingInfo nextTorunamentToHostInfo)
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x80A2A4", Offset = "0x80A2A4", VA = "0x80A2A4")]
	internal static void GenerateLeaderboardGuid()
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x80A30C", Offset = "0x80A30C", VA = "0x80A30C")]
	internal static void GenerateNewPlayerGUID()
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x80A3E8", Offset = "0x80A3E8", VA = "0x80A3E8")]
	private static void OnGetFromAWS(UnityWebRequest unityWebRequest)
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x80A5EC", Offset = "0x80A5EC", VA = "0x80A5EC")]
	private static List<AWSTournamentLeaderboardEntryDTO> GetPlayersFromJson(string json)
	{
		return null;
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x80A7E0", Offset = "0x80A7E0", VA = "0x80A7E0")]
	private static void ConvertTournamentsJSONArrayToJSONObject(ref string json)
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x80A85C", Offset = "0x80A85C", VA = "0x80A85C")]
	private static void OnTournamentLeaderboardSaved(UnityWebRequest response)
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x80A944", Offset = "0x80A944", VA = "0x80A944")]
	private static string GetLeaderboardGetJson(string mapName, string parkCode)
	{
		return null;
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x80AA4C", Offset = "0x80AA4C", VA = "0x80AA4C")]
	public static string GetLeaderboardSetJson(List<TournamentPlayer> allPlayers)
	{
		return null;
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x80ABC0", Offset = "0x80ABC0", VA = "0x80ABC0")]
	private static List<AWSTournamentLeaderboardEntryDTO> TournamentPlayersToEntries(List<TournamentPlayer> allPlayers)
	{
		return null;
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x80AE44", Offset = "0x80AE44", VA = "0x80AE44")]
	public AWSTournamentLeaderboardController()
	{
	}
}
[Serializable]
[Token(Token = "0x20003D4")]
public class AWSTournamentLeaderboardEntriesDTO
{
	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string date;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string region;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AWSTournamentLeaderboardEntryDTO> entries;

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x80ABB8", Offset = "0x80ABB8", VA = "0x80ABB8")]
	public AWSTournamentLeaderboardEntriesDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x20003D5")]
public class AWSTournamentLeaderboardEntriesResponseDTO
{
	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Date;

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Guid;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Region;

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<AWSTournamentLeaderboardEntryDTO> BestScores;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AWSTournamentLeaderboardEntryDTO> ScoreNeighberhood;

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x80AF5C", Offset = "0x80AF5C", VA = "0x80AF5C")]
	public AWSTournamentLeaderboardEntriesResponseDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x20003D6")]
public class AWSTournamentLeaderboardEntryDTO
{
	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string playerId;

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int rank;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string name;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int stage;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int hits;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int deaths;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isFinalist;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool isSemifinalist;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AWSTournamentSemiFinalScoreDTO semifinal;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int lastStageDeaths;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int lastStageHits;

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x80AE34", Offset = "0x80AE34", VA = "0x80AE34")]
	public AWSTournamentLeaderboardEntryDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x20003D7")]
public class AWSTournamentLeaderboardGetDTO
{
	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ParkCode;

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MapName;

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x80AA44", Offset = "0x80AA44", VA = "0x80AA44")]
	public AWSTournamentLeaderboardGetDTO()
	{
	}
}
[Token(Token = "0x20003D8")]
public class AWSTournamentLeaderboardView : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003D9")]
	private sealed class <>c
	{
		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<AWSTournamentLeaderboardEntryDTO> <>9__9_0;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<AWSTournamentLeaderboardEntryDTO> <>9__9_1;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<AWSTournamentLeaderboardEntryDTO> <>9__10_0;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<TournamentTopPlayerSpot> <>9__11_0;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<TournamentTopPlayerSpot> <>9__12_0;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Predicate<AWSTournamentLeaderboardEntryDTO> <>9__12_1;

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x80BE3C", Offset = "0x80BE3C", VA = "0x80BE3C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x80BE44", Offset = "0x80BE44", VA = "0x80BE44")]
		internal bool <IsLocalPlayerInEntries>b__9_0(AWSTournamentLeaderboardEntryDTO entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x80BEB4", Offset = "0x80BEB4", VA = "0x80BEB4")]
		internal bool <IsLocalPlayerInEntries>b__9_1(AWSTournamentLeaderboardEntryDTO entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x80BF24", Offset = "0x80BF24", VA = "0x80BF24")]
		internal bool <IsLocalPlayerInTop10>b__10_0(AWSTournamentLeaderboardEntryDTO entry)
		{
			return default(bool);
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x80BF94", Offset = "0x80BF94", VA = "0x80BF94")]
		internal void <ShowTop10Leaderboard>b__11_0(TournamentTopPlayerSpot entry)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x80BFAC", Offset = "0x80BFAC", VA = "0x80BFAC")]
		internal void <ShowCurrentRivalsLeaderboard>b__12_0(TournamentTopPlayerSpot entry)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x80BFC4", Offset = "0x80BFC4", VA = "0x80BFC4")]
		internal bool <ShowCurrentRivalsLeaderboard>b__12_1(AWSTournamentLeaderboardEntryDTO item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject top10Object;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<TournamentTopPlayerSpot> top10Entries;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rivalsObject;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<TournamentTopPlayerSpot> rivalsEntries;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform Top10LeaderboardPosition;

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x80AF64", Offset = "0x80AF64", VA = "0x80AF64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x80B090", Offset = "0x80B090", VA = "0x80B090")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x80B1BC", Offset = "0x80B1BC", VA = "0x80B1BC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x80B254", Offset = "0x80B254", VA = "0x80B254")]
	public void ShowLeaderboards(AWSTournamentLeaderboardEntriesResponseDTO leaderboardEntries)
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x80B76C", Offset = "0x80B76C", VA = "0x80B76C")]
	private bool IsLocalPlayerInEntries(AWSTournamentLeaderboardEntriesResponseDTO leaderboardEntries)
	{
		return default(bool);
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x80B660", Offset = "0x80B660", VA = "0x80B660")]
	private static bool IsLocalPlayerInTop10(AWSTournamentLeaderboardEntriesResponseDTO leaderboardEntries)
	{
		return default(bool);
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x80B358", Offset = "0x80B358", VA = "0x80B358")]
	private void ShowTop10Leaderboard(List<AWSTournamentLeaderboardEntryDTO> entries)
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x80B934", Offset = "0x80B934", VA = "0x80B934")]
	private void ShowCurrentRivalsLeaderboard(List<AWSTournamentLeaderboardEntryDTO> entries)
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x80BDC4", Offset = "0x80BDC4", VA = "0x80BDC4")]
	public AWSTournamentLeaderboardView()
	{
	}
}
[Serializable]
[Token(Token = "0x20003DA")]
public class AWSTournamentSemiFinalScoreDTO
{
	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string roomId;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int semiFinalRankInRoom;

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x80AE3C", Offset = "0x80AE3C", VA = "0x80AE3C")]
	public AWSTournamentSemiFinalScoreDTO()
	{
	}
}
[Token(Token = "0x20003DB")]
public class AWSTournmentLeaderboardsTester : MonoBehaviour
{
	[Token(Token = "0x20003DC")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string log;

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x80C494", Offset = "0x80C494", VA = "0x80C494")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x80C4A4", Offset = "0x80C4A4", VA = "0x80C4A4")]
		internal void <TestGettingOnReceive>b__0(AWSTournamentLeaderboardEntryDTO entry)
		{
		}
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x80C034", Offset = "0x80C034", VA = "0x80C034")]
	[ContextMenu("Test saving")]
	private void TestSaving()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x80C2A0", Offset = "0x80C2A0", VA = "0x80C2A0")]
	[ContextMenu("Test getting")]
	private void TestGetting()
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x80C368", Offset = "0x80C368", VA = "0x80C368")]
	private void TestGettingOnReceive(List<AWSTournamentLeaderboardEntryDTO> entries)
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x80C49C", Offset = "0x80C49C", VA = "0x80C49C")]
	public AWSTournmentLeaderboardsTester()
	{
	}
}
[Token(Token = "0x20003DD")]
public class GlobalTimeController : MonoBehaviour
{
	[Token(Token = "0x20003DE")]
	private sealed class <GetCurrentGlobalTimeCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<DateTime> OnTimeReceived;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <myHttpWebRequest>5__2;

		[Token(Token = "0x17000216")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001317")]
			[Address(RVA = "0x80C8A4", Offset = "0x80C8A4", VA = "0x80C8A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001318")]
			[Address(RVA = "0x80C8AC", Offset = "0x80C8AC", VA = "0x80C8AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x80C69C", Offset = "0x80C69C", VA = "0x80C69C")]
		[DebuggerHidden]
		public <GetCurrentGlobalTimeCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x80C6CC", Offset = "0x80C6CC", VA = "0x80C6CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x80C6D0", Offset = "0x80C6D0", VA = "0x80C6D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GlobalTimeController instance;

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x80C510", Offset = "0x80C510", VA = "0x80C510")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x80C5C0", Offset = "0x80C5C0", VA = "0x80C5C0")]
	public static void GetCurrentGlobalTimeAsync(Action<DateTime> OnTimeReceived)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x80C628", Offset = "0x80C628", VA = "0x80C628")]
	private IEnumerator GetCurrentGlobalTimeCoroutine(Action<DateTime> OnTimeReceived)
	{
		return null;
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x80C6C4", Offset = "0x80C6C4", VA = "0x80C6C4")]
	public GlobalTimeController()
	{
	}
}
[Token(Token = "0x20003DF")]
public class Http : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20003E0")]
	private struct <PostAsync>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string json;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, string> headers;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<UnityWebRequest> OnResponseReceived;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <unityWebRequest>5__2;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x80CD8C", Offset = "0x80CD8C", VA = "0x80CD8C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x80CFFC", Offset = "0x80CFFC", VA = "0x80CFFC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x20003E1")]
	private sealed class <GetCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<UnityWebRequest> OnResponseReceived;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <unityWebRequest>5__2;

		[Token(Token = "0x17000218")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001326")]
			[Address(RVA = "0x80D0DC", Offset = "0x80D0DC", VA = "0x80D0DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0x80D0E4", Offset = "0x80D0E4", VA = "0x80D0E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x80D008", Offset = "0x80D008", VA = "0x80D008")]
		[DebuggerHidden]
		public <GetCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x80D030", Offset = "0x80D030", VA = "0x80D030", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x80D034", Offset = "0x80D034", VA = "0x80D034", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003E2")]
	private sealed class <SendRequestCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityWebRequest unityWebRequest;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, string> headers;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string json;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<UnityWebRequest> OnResponseReceived;

		[Token(Token = "0x1700021A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600132B")]
			[Address(RVA = "0x80D1A8", Offset = "0x80D1A8", VA = "0x80D1A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0x80D1B0", Offset = "0x80D1B0", VA = "0x80D1B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x80D0EC", Offset = "0x80D0EC", VA = "0x80D0EC")]
		[DebuggerHidden]
		public <SendRequestCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x80D114", Offset = "0x80D114", VA = "0x80D114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x80D118", Offset = "0x80D118", VA = "0x80D118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003E3")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityWebRequest unityWebRequest;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> headers;

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x80D1B8", Offset = "0x80D1B8", VA = "0x80D1B8")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x80D1C0", Offset = "0x80D1C0", VA = "0x80D1C0")]
		internal void <SetRequestData>b__0(string key)
		{
		}
	}

	[Token(Token = "0x4001620")]
	private const int waitingForResponseMilliseconds = 25;

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x809A80", Offset = "0x809A80", VA = "0x809A80")]
	public void Get(string url, Action<UnityWebRequest> OnResponseReceived)
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x80C944", Offset = "0x80C944", VA = "0x80C944")]
	public void Post(string url, Dictionary<string, string> headers, string json, Action<UnityWebRequest> OnResponseReceived)
	{
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x80CA60", Offset = "0x80CA60", VA = "0x80CA60")]
	[AsyncStateMachine(typeof(<PostAsync>d__3))]
	public static void PostAsync(string url, Dictionary<string, string> headers, string json, Action<UnityWebRequest> OnResponseReceived)
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x80CB70", Offset = "0x80CB70", VA = "0x80CB70")]
	public void Put(string url, Dictionary<string, string> headers, string json, Action<UnityWebRequest> OnResponseReceived)
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x80C8B4", Offset = "0x80C8B4", VA = "0x80C8B4")]
	private IEnumerator GetCoroutine(string url, Action<UnityWebRequest> OnResponseReceived)
	{
		return null;
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x80C9A0", Offset = "0x80C9A0", VA = "0x80C9A0")]
	private IEnumerator SendRequestCoroutine(UnityWebRequest unityWebRequest, Dictionary<string, string> headers, string json, Action<UnityWebRequest> OnResponseReceived)
	{
		return null;
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x80CBCC", Offset = "0x80CBCC", VA = "0x80CBCC")]
	private static void SetRequestData(UnityWebRequest unityWebRequest, Dictionary<string, string> headers, string json)
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x80CD84", Offset = "0x80CD84", VA = "0x80CD84")]
	public Http()
	{
	}
}
[Token(Token = "0x20003E4")]
public class JoiningToTournamentConfirmationController : MonoBehaviour
{
	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text confirmationText;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text yesText;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text noText;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private JoiningTournamentDuringMatchController joiningTournamentDuringMatchController;

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x80D234", Offset = "0x80D234", VA = "0x80D234")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x80D2E0", Offset = "0x80D2E0", VA = "0x80D2E0")]
	public void OnYesClick()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x80D398", Offset = "0x80D398", VA = "0x80D398")]
	public void OnNoClick()
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x80D300", Offset = "0x80D300", VA = "0x80D300")]
	private static void CloseConfirmationWindow()
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x80D39C", Offset = "0x80D39C", VA = "0x80D39C")]
	public JoiningToTournamentConfirmationController()
	{
	}
}
[Token(Token = "0x20003E5")]
public class JoiningTournamentDuringMatchController : MonoBehaviour, ILobbyCallbacks, IMatchmakingCallbacks
{
	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isDuringJoining;

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x80D3A4", Offset = "0x80D3A4", VA = "0x80D3A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x80D3FC", Offset = "0x80D3FC", VA = "0x80D3FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x80D320", Offset = "0x80D320", VA = "0x80D320")]
	public void JoinTournament()
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x80D454", Offset = "0x80D454", VA = "0x80D454", Slot = "14")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x80D4E0", Offset = "0x80D4E0", VA = "0x80D4E0", Slot = "4")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x80D4E4", Offset = "0x80D4E4", VA = "0x80D4E4", Slot = "11")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x80D4E8", Offset = "0x80D4E8", VA = "0x80D4E8", Slot = "12")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x80D4EC", Offset = "0x80D4EC", VA = "0x80D4EC", Slot = "13")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x80D4F0", Offset = "0x80D4F0", VA = "0x80D4F0", Slot = "5")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x80D4F4", Offset = "0x80D4F4", VA = "0x80D4F4", Slot = "6")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x80D4F8", Offset = "0x80D4F8", VA = "0x80D4F8", Slot = "7")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x80D4FC", Offset = "0x80D4FC", VA = "0x80D4FC", Slot = "8")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x80D500", Offset = "0x80D500", VA = "0x80D500", Slot = "9")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x80D504", Offset = "0x80D504", VA = "0x80D504", Slot = "10")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x80D508", Offset = "0x80D508", VA = "0x80D508")]
	public JoiningTournamentDuringMatchController()
	{
	}
}
[Token(Token = "0x20003E6")]
public class JoinTournamentPopUpController : MonoBehaviour
{
	[Token(Token = "0x20003E7")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string currentRegion;

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x80E660", Offset = "0x80E660", VA = "0x80E660")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x80E864", Offset = "0x80E864", VA = "0x80E864")]
		internal bool <GetTournamentDatesAvailableForCurrentRegion>b__0(TournamentHostingInfo hostingInfo)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20003E8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<TournamentHostingInfo, DateTime> <>9__38_1;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<DateTime> <>9__39_0;

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x80E96C", Offset = "0x80E96C", VA = "0x80E96C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x80E974", Offset = "0x80E974", VA = "0x80E974")]
		internal DateTime <GetTournamentDatesAvailableForCurrentRegion>b__38_1(TournamentHostingInfo hostingInfo)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x80E98C", Offset = "0x80E98C", VA = "0x80E98C")]
		internal bool <GetNextTournamentDates>b__39_0(DateTime date)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject popUpGameObject;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject particlesGameObject;

	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentHostingDatesGatherer tournamentHostingDatesGatherer;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text popUpText;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CollisionEvents joiningTrigger;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator portalContentsAnimator;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioSource portalOpenAudioSource;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource portalCloseAudioSource;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource portalIdleAudioSource;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioSource portalShotAudioSource;

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject popUpInfoGameObject;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int popUpDuration;

	[Token(Token = "0x4001647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private int popUpTimeBorder;

	[Token(Token = "0x4001648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly int openPortalTriggerId;

	[Token(Token = "0x4001649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private readonly int closePortalTriggerId;

	[Token(Token = "0x400164A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float secondsCount;

	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timerLenght;

	[Token(Token = "0x400164C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string timer;

	[Token(Token = "0x400164D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isPopUpVisible;

	[Token(Token = "0x400164E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool isTournamentFound;

	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool isCounting;

	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int secondsInMinute;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool <IsHidingPopUp>k__BackingField;

	[Token(Token = "0x1700021C")]
	public bool IsHidingPopUp
	{
		[Token(Token = "0x6001343")]
		[Address(RVA = "0x80D510", Offset = "0x80D510", VA = "0x80D510")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001344")]
		[Address(RVA = "0x80D518", Offset = "0x80D518", VA = "0x80D518")]
		private set
		{
		}
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x80D524", Offset = "0x80D524", VA = "0x80D524")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x80D72C", Offset = "0x80D72C", VA = "0x80D72C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x80DADC", Offset = "0x80DADC", VA = "0x80DADC")]
	private float GetTimeFromDbInSeconds()
	{
		return default(float);
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x80DB70", Offset = "0x80DB70", VA = "0x80DB70")]
	private void UpdateTimerUI()
	{
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x80DC34", Offset = "0x80DC34", VA = "0x80DC34")]
	private void HidePopUp()
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x80DA90", Offset = "0x80DA90", VA = "0x80DA90")]
	private void ShowPopUp()
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x80DD9C", Offset = "0x80DD9C", VA = "0x80DD9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x80DF58", Offset = "0x80DF58", VA = "0x80DF58")]
	private void OnJoiningTriggerEnter(Collider triggeredCollider)
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x80E03C", Offset = "0x80E03C", VA = "0x80E03C")]
	private static void OpenConfirmationWindow()
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x80DCA8", Offset = "0x80DCA8", VA = "0x80DCA8")]
	private static void CloseConfirmationWindow()
	{
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x80E0B0", Offset = "0x80E0B0", VA = "0x80E0B0")]
	private void SetNextTournamentDateFromHostingsGatherer()
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x80D9C4", Offset = "0x80D9C4", VA = "0x80D9C4")]
	private bool IsTournamentStartingShortly()
	{
		return default(bool);
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x80E180", Offset = "0x80E180", VA = "0x80E180")]
	private List<DateTime> GetTournamentDatesAvailableForCurrentRegion()
	{
		return null;
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x80E45C", Offset = "0x80E45C", VA = "0x80E45C")]
	private static List<DateTime> GetNextTournamentDates(List<DateTime> tournamentDates)
	{
		return null;
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x80E668", Offset = "0x80E668", VA = "0x80E668")]
	private static string GetTextForTimeLeftForEnrollment()
	{
		return null;
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x80E7A8", Offset = "0x80E7A8", VA = "0x80E7A8")]
	public JoinTournamentPopUpController()
	{
	}
}
[Token(Token = "0x20003E9")]
public class JoinTournamentPortalAnimationEventsController : MonoBehaviour
{
	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource portalIdleAudioSource;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject particlesGameObject;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject mainPopGameObject;

	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private JoinTournamentPopUpController joinTournamentPopUpController;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject popUpInfoGameObject;

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x80EA3C", Offset = "0x80EA3C", VA = "0x80EA3C")]
	private void OnIdleStartAnimationEvent()
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x80EA84", Offset = "0x80EA84", VA = "0x80EA84")]
	private void OnPortalClosedAnimationEvent()
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x80EABC", Offset = "0x80EABC", VA = "0x80EABC")]
	public JoinTournamentPortalAnimationEventsController()
	{
	}
}
[Token(Token = "0x20003EA")]
public class LastTournamentLeaderboardController : MonoBehaviour
{
	[Token(Token = "0x400165B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TournamentTopPlayerSpot> playerSpotList;

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject bestArchersParent;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject noLeaderboardIndicator;

	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject loadingIndicator;

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text errorIndicatorText;

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x80EAC4", Offset = "0x80EAC4", VA = "0x80EAC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x80ECBC", Offset = "0x80ECBC", VA = "0x80ECBC")]
	private void OnGetLeaderboardFromAWS(List<AWSTournamentLeaderboardEntryDTO> entries)
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x80EEFC", Offset = "0x80EEFC", VA = "0x80EEFC")]
	private void OnGetLeaderboardFromAWSFailed(string error)
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x80EF38", Offset = "0x80EF38", VA = "0x80EF38")]
	private void ShowErrorMessage(string error)
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x80ECF8", Offset = "0x80ECF8", VA = "0x80ECF8")]
	private void ShowBestArchersLeaderboard(List<AWSTournamentLeaderboardEntryDTO> entries)
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x80EC50", Offset = "0x80EC50", VA = "0x80EC50")]
	private void HideAllLeaderboardGUI()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x80F3A0", Offset = "0x80F3A0", VA = "0x80F3A0")]
	public LastTournamentLeaderboardController()
	{
	}
}
[Token(Token = "0x20003EB")]
public class TournamentHostingAutoInputController : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks
{
	[Token(Token = "0x20003EC")]
	private enum AutoHostingState
	{
		[Token(Token = "0x400166C")]
		WaitingToHost,
		[Token(Token = "0x400166D")]
		Hosting,
		[Token(Token = "0x400166E")]
		WaitingToShutdownVirtualMachine
	}

	[Token(Token = "0x20003ED")]
	private sealed class <CloseServerRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentHostingAutoInputController <>4__this;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x80FF90", Offset = "0x80FF90", VA = "0x80FF90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x80FF98", Offset = "0x80FF98", VA = "0x80FF98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x80F9AC", Offset = "0x80F9AC", VA = "0x80F9AC")]
		[DebuggerHidden]
		public <CloseServerRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x80FCCC", Offset = "0x80FCCC", VA = "0x80FCCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x80FCD0", Offset = "0x80FCD0", VA = "0x80FCD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003EE")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DateTime nextTournamentDate;

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x80FFA0", Offset = "0x80FFA0", VA = "0x80FFA0")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x80FFA8", Offset = "0x80FFA8", VA = "0x80FFA8")]
		internal bool <PlanNextTournament>b__3(TournamentHostingInfo hostingInfo)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20003EF")]
	private sealed class <>c
	{
		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<TournamentHostingInfo, DateTime> <>9__18_1;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<DateTime> <>9__18_2;

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x810088", Offset = "0x810088", VA = "0x810088")]
		public <>c()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x810090", Offset = "0x810090", VA = "0x810090")]
		internal DateTime <PlanNextTournament>b__18_1(TournamentHostingInfo hostingInfo)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x8100A8", Offset = "0x8100A8", VA = "0x8100A8")]
		internal bool <PlanNextTournament>b__18_2(DateTime date)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003F0")]
	private sealed class <PlanNextTournament>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentHostingAutoInputController <>4__this;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0x810760", Offset = "0x810760", VA = "0x810760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x810768", Offset = "0x810768", VA = "0x810768", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x80FAB8", Offset = "0x80FAB8", VA = "0x80FAB8")]
		[DebuggerHidden]
		public <PlanNextTournament>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x81010C", Offset = "0x81010C", VA = "0x81010C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x810110", Offset = "0x810110", VA = "0x810110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001660")]
	private const int secondsDelayToCloseServerAfterTournamentEnd = 300;

	[Token(Token = "0x4001661")]
	private const int minutesBeforeTournamentDateToStartHosting = 5;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AutoHostingState state;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private CloudRegionCode regionCode;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TournamentHostingInfo nextTorunamentToHostInfo;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentMasterConnectingWindowController TournamentMasterConnectingWindowController;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TournamentInfoWindowController TournamentInfoWindowController;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TournamentHostingController TournamentHostingController;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TournamentHostingDatesGatherer tournamentHostingDatesGatherer;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TournamentGameStateController tournamentGameStateController;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TournamentVirtualMachineShutdownController tournamentVirtualMachineShutdownController;

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x80F3A8", Offset = "0x80F3A8", VA = "0x80F3A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x80F564", Offset = "0x80F564", VA = "0x80F564")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x80F5BC", Offset = "0x80F5BC", VA = "0x80F5BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x80F614", Offset = "0x80F614", VA = "0x80F614")]
	private void Update()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x80F938", Offset = "0x80F938", VA = "0x80F938")]
	private IEnumerator CloseServerRoutine()
	{
		return null;
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x80F72C", Offset = "0x80F72C", VA = "0x80F72C")]
	private void HostNextTournament()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x80F454", Offset = "0x80F454", VA = "0x80F454")]
	private IEnumerator PlanNextTournament()
	{
		return null;
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x80F660", Offset = "0x80F660", VA = "0x80F660")]
	private bool ShouldStartHostingNextTournament()
	{
		return default(bool);
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x80F8D0", Offset = "0x80F8D0", VA = "0x80F8D0")]
	private bool IsHostingTournamentThatFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x80FAE0", Offset = "0x80FAE0", VA = "0x80FAE0", Slot = "4")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x80FAE4", Offset = "0x80FAE4", VA = "0x80FAE4", Slot = "5")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x80FAE8", Offset = "0x80FAE8", VA = "0x80FAE8", Slot = "6")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x80FBB4", Offset = "0x80FBB4", VA = "0x80FBB4", Slot = "7")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x80FBB8", Offset = "0x80FBB8", VA = "0x80FBB8", Slot = "8")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x80FBBC", Offset = "0x80FBBC", VA = "0x80FBBC", Slot = "9")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x80FBC0", Offset = "0x80FBC0", VA = "0x80FBC0", Slot = "10")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x80FBC4", Offset = "0x80FBC4", VA = "0x80FBC4", Slot = "11")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x80FBC8", Offset = "0x80FBC8", VA = "0x80FBC8", Slot = "12")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x80FC54", Offset = "0x80FC54", VA = "0x80FC54", Slot = "13")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x80FC58", Offset = "0x80FC58", VA = "0x80FC58", Slot = "14")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x80FC5C", Offset = "0x80FC5C", VA = "0x80FC5C", Slot = "15")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x80FC60", Offset = "0x80FC60", VA = "0x80FC60", Slot = "16")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x80FC64", Offset = "0x80FC64", VA = "0x80FC64")]
	public TournamentHostingAutoInputController()
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x80FC74", Offset = "0x80FC74", VA = "0x80FC74")]
	private bool <PlanNextTournament>b__18_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003F1")]
public class TournamentHostingDatesGatherer : MonoBehaviour
{
	[Token(Token = "0x20003F2")]
	private sealed class <PlanningRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentHostingDatesGatherer <>4__this;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x81143C", Offset = "0x81143C", VA = "0x81143C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600139C")]
			[Address(RVA = "0x811444", Offset = "0x811444", VA = "0x811444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x810988", Offset = "0x810988", VA = "0x810988")]
		[DebuggerHidden]
		public <PlanningRoutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x811368", Offset = "0x811368", VA = "0x811368", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x81136C", Offset = "0x81136C", VA = "0x81136C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003F3")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TournamentDateDTO date;

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x8112E4", Offset = "0x8112E4", VA = "0x8112E4")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x81144C", Offset = "0x81144C", VA = "0x81144C")]
		internal bool <AddNewTournamentHostingInfoFromDTO>b__0(CloudRegionCode regioCode)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001679")]
	private const float secondsDelayOfRefreshingTouenamentPlan = 3600f;

	[Token(Token = "0x400167A")]
	private const string urlToDatabaseProd = "https://api.elven-assassin.com/tournaments/coming";

	[Token(Token = "0x400167B")]
	private const string urlToDatabaseStage = "https://stage.api.elven-assassin.com/tournaments/coming";

	[Token(Token = "0x400167C")]
	private const string urlToDatabaseDev = "https://dev.api.elven-assassin.com/tournaments/coming";

	[Token(Token = "0x400167D")]
	private const string regionCodeForAllRegions = "all";

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Http http;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TournamentHostingInfo> tournamentHostingInfos;

	[Token(Token = "0x1400002A")]
	public event Action OnTournamentDatesGathered
	{
		[Token(Token = "0x600138D")]
		[Address(RVA = "0x80D690", Offset = "0x80D690", VA = "0x80D690")]
		add
		{
		}
		[Token(Token = "0x600138E")]
		[Address(RVA = "0x80DEBC", Offset = "0x80DEBC", VA = "0x80DEBC")]
		remove
		{
		}
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x810770", Offset = "0x810770", VA = "0x810770")]
	private void Start()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x810804", Offset = "0x810804", VA = "0x810804")]
	private static string GetApiUrl()
	{
		return null;
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x810790", Offset = "0x810790", VA = "0x810790")]
	private IEnumerator PlanningRoutine()
	{
		return null;
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x8109B0", Offset = "0x8109B0", VA = "0x8109B0")]
	private void RequestTournamentDatesByHttp()
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x810A54", Offset = "0x810A54", VA = "0x810A54")]
	private void OnHttpResponseReceived(UnityWebRequest httpResponse)
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x810F68", Offset = "0x810F68", VA = "0x810F68")]
	private void AddNewTournamentHostingInfoFromDTO(TournamentDateDTO date)
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x810EC0", Offset = "0x810EC0", VA = "0x810EC0")]
	private void AddNewTournamentHostingInfosFromDTOs(List<TournamentDateDTO> dates)
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x81135C", Offset = "0x81135C", VA = "0x81135C")]
	public TournamentHostingDatesGatherer()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x811364", Offset = "0x811364", VA = "0x811364")]
	private void <AddNewTournamentHostingInfosFromDTOs>b__16_0(TournamentDateDTO date)
	{
	}
}
[Serializable]
[Token(Token = "0x20003F4")]
public class TournamentHostingInfo
{
	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DateTime date;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomDateTime dateForJson;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CloudRegionCode regionCode;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isAvailableOnAllRegions;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string id;

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x8112EC", Offset = "0x8112EC", VA = "0x8112EC")]
	public TournamentHostingInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x20003F5")]
public class CustomDateTime
{
	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int year;

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int month;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int day;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hour;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int minute;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int second;

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x811354", Offset = "0x811354", VA = "0x811354")]
	public CustomDateTime()
	{
	}
}
[Token(Token = "0x20003F6")]
public class TournamentVirtualMachineShutdownController : MonoBehaviour
{
	[Token(Token = "0x4001690")]
	private const string urlForVirtualMachineShutdownProd = "https://api.elven-assassin.com/tournaments/{0}/finish";

	[Token(Token = "0x4001691")]
	private const string urlForVirtualMachineShutdownStage = "https://stage.api.elven-assassin.com/tournaments/{0}/finish";

	[Token(Token = "0x4001692")]
	private const string urlForVirtualMachineShutdownDev = "https://dev.api.elven-assassin.com/tournaments/{0}/finish";

	[Token(Token = "0x4001693")]
	private const string xApiHeaderKey = "x-api-key";

	[Token(Token = "0x4001694")]
	private const string xApiHeaderValueProd = "D79VUQnV672W5A7tKgI8XaQ6UEYS9qqL4rQulyc7";

	[Token(Token = "0x4001695")]
	private const string xApiHeaderValueStage = "vUUA8YHKEa40EEJcD3iIOf8VbKWx6iA4Q7Idawbg";

	[Token(Token = "0x4001696")]
	private const string xApiHeaderValueDev = "rbKwn2oqFf9YT5kQmYfOg8BCehMRape36GVP7bbl";

	[Token(Token = "0x4001697")]
	private const string shutdownRequestJson = ".";

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Http http;

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x80FDE4", Offset = "0x80FDE4", VA = "0x80FDE4")]
	public void ShutdownVirtualMachine(string tournamentId)
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x81165C", Offset = "0x81165C", VA = "0x81165C")]
	private string GetUrlForShutdown(string tournamentId)
	{
		return null;
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x8114D8", Offset = "0x8114D8", VA = "0x8114D8")]
	private static string GetXApiKey()
	{
		return null;
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x8117FC", Offset = "0x8117FC", VA = "0x8117FC")]
	private void OnResponseReceived(UnityWebRequest response)
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x8118E4", Offset = "0x8118E4", VA = "0x8118E4")]
	public TournamentVirtualMachineShutdownController()
	{
	}
}
[Serializable]
[Token(Token = "0x20003F7")]
public class TournamentDateDTO
{
	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long timestamp;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string region;

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x8118EC", Offset = "0x8118EC", VA = "0x8118EC")]
	public TournamentDateDTO()
	{
	}
}
[Serializable]
[Token(Token = "0x20003F8")]
public class TournamentDatesDTO
{
	[Serializable]
	[Token(Token = "0x20003F9")]
	private sealed class <>c
	{
		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<TournamentDateDTO> <>9__5_0;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x81196C", Offset = "0x81196C", VA = "0x81196C")]
		public <>c()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x811974", Offset = "0x811974", VA = "0x811974")]
		internal bool <get_AllDatesDTOs>b__5_0(TournamentDateDTO date)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TournamentDateDTO eu;

	[Token(Token = "0x400169D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TournamentDateDTO us;

	[Token(Token = "0x400169E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TournamentDateDTO asia;

	[Token(Token = "0x400169F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TournamentDateDTO all;

	[Token(Token = "0x17000223")]
	public List<TournamentDateDTO> AllDatesDTOs
	{
		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x810BF4", Offset = "0x810BF4", VA = "0x810BF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x8118F4", Offset = "0x8118F4", VA = "0x8118F4")]
	public TournamentDatesDTO()
	{
	}
}
[Token(Token = "0x20003FA")]
public class TournamentDeathMatchAutostarter : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x20003FB")]
	private sealed class <TryToStartCountdownCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentDeathMatchAutostarter <>4__this;

		[Token(Token = "0x17000225")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x8120F8", Offset = "0x8120F8", VA = "0x8120F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x812100", Offset = "0x812100", VA = "0x812100", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x811A48", Offset = "0x811A48", VA = "0x811A48")]
		[DebuggerHidden]
		public <TryToStartCountdownCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x811EBC", Offset = "0x811EBC", VA = "0x811EBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x811EC0", Offset = "0x811EC0", VA = "0x811EC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20003FC")]
	private sealed class <SyncTimeCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentDeathMatchAutostarter <>4__this;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Player player;

		[Token(Token = "0x17000227")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x8123C0", Offset = "0x8123C0", VA = "0x8123C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x8123C8", Offset = "0x8123C8", VA = "0x8123C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x811CA4", Offset = "0x811CA4", VA = "0x811CA4")]
		[DebuggerHidden]
		public <SyncTimeCoroutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x812108", Offset = "0x812108", VA = "0x812108", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x81210C", Offset = "0x81210C", VA = "0x81210C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathMatchGameTimeController deathMatchGameTimeController;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject startButton;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Timer timerToStartTheGame;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float retryTime;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasStarted;

	[Token(Token = "0x17000224")]
	public bool HasStarted
	{
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x811994", Offset = "0x811994", VA = "0x811994")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x81199C", Offset = "0x81199C", VA = "0x81199C")]
		set
		{
		}
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x8119B4", Offset = "0x8119B4", VA = "0x8119B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x8119D4", Offset = "0x8119D4", VA = "0x8119D4")]
	private IEnumerator TryToStartCountdownCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x811A70", Offset = "0x811A70", VA = "0x811A70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x811BF4", Offset = "0x811BF4", VA = "0x811BF4")]
	[PunRPC]
	private void RPCRequestTimeToStartGame(Player player)
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x811C14", Offset = "0x811C14", VA = "0x811C14")]
	private IEnumerator SyncTimeCoroutine(Player player)
	{
		return null;
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x811CCC", Offset = "0x811CCC", VA = "0x811CCC")]
	[PunRPC]
	private void RPCSynchronizeCountdownToGameStart(float time)
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x811DC8", Offset = "0x811DC8", VA = "0x811DC8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x811E90", Offset = "0x811E90", VA = "0x811E90")]
	public TournamentDeathMatchAutostarter()
	{
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x811EA0", Offset = "0x811EA0", VA = "0x811EA0")]
	private bool <SyncTimeCoroutine>b__12_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003FD")]
public class TournamentDeathMatchController : MonoBehaviourPun, IMatchmakingCallbacks, ILobbyCallbacks
{
	[Token(Token = "0x20003FE")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TournamentPlayerResult initialResult;

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x812FF4", Offset = "0x812FF4", VA = "0x812FF4")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x813384", Offset = "0x813384", VA = "0x813384")]
		internal bool <TournamentResult>b__1(TournamentPlayerResult finalResult)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20003FF")]
	private sealed class <>c
	{
		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<ScoreboardEntryDeathMatch> <>9__6_0;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<bool> <>9__11_0;

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x81341C", Offset = "0x81341C", VA = "0x81341C")]
		public <>c()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x813424", Offset = "0x813424", VA = "0x813424")]
		internal bool <TournamentResult>b__6_0(ScoreboardEntryDeathMatch entry)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x81343C", Offset = "0x81343C", VA = "0x81343C")]
		internal bool <JoinLobbyAfterReadyCoroutine>b__11_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000400")]
	private sealed class <JoinLobbyAfterReadyCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x813670", Offset = "0x813670", VA = "0x813670", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x813678", Offset = "0x813678", VA = "0x813678", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x813334", Offset = "0x813334", VA = "0x813334")]
		[DebuggerHidden]
		public <JoinLobbyAfterReadyCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x8134B8", Offset = "0x8134B8", VA = "0x8134B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x8134BC", Offset = "0x8134BC", VA = "0x8134BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40016AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DeathMatchScoreboard scoreboard;

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isLeavingTournamentMatch;

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x8123D0", Offset = "0x8123D0", VA = "0x8123D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x812508", Offset = "0x812508", VA = "0x812508")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x812560", Offset = "0x812560", VA = "0x812560")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x8125B8", Offset = "0x8125B8", VA = "0x8125B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x8126F0", Offset = "0x8126F0", VA = "0x8126F0")]
	private void TournamentResult()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x812FFC", Offset = "0x812FFC", VA = "0x812FFC")]
	private void LeaveRoom()
	{
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x813148", Offset = "0x813148", VA = "0x813148", Slot = "7")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x81314C", Offset = "0x81314C", VA = "0x81314C", Slot = "10")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x8131DC", Offset = "0x8131DC", VA = "0x8131DC", Slot = "11")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x81317C", Offset = "0x81317C", VA = "0x81317C")]
	private IEnumerator JoinLobbyAfterReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x81335C", Offset = "0x81335C", VA = "0x81335C", Slot = "5")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x813360", Offset = "0x813360", VA = "0x813360", Slot = "6")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x813364", Offset = "0x813364", VA = "0x813364", Slot = "4")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x813368", Offset = "0x813368", VA = "0x813368", Slot = "9")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x81336C", Offset = "0x81336C", VA = "0x81336C", Slot = "8")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x813370", Offset = "0x813370", VA = "0x813370", Slot = "12")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x813374", Offset = "0x813374", VA = "0x813374", Slot = "13")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x813378", Offset = "0x813378", VA = "0x813378", Slot = "14")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x81337C", Offset = "0x81337C", VA = "0x81337C")]
	public TournamentDeathMatchController()
	{
	}
}
[Token(Token = "0x2000401")]
public class TournamentDebugTimers : MonoBehaviour
{
	[Token(Token = "0x40016B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text timeSincePlaymodeEntered;

	[Token(Token = "0x40016B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text timeControllerState;

	[Token(Token = "0x40016B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text stateControllerState;

	[Token(Token = "0x40016B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text timer;

	[Token(Token = "0x40016BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text milisecondTimer;

	[Token(Token = "0x40016BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool statusSet;

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x813680", Offset = "0x813680", VA = "0x813680")]
	private void Update()
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x813938", Offset = "0x813938", VA = "0x813938")]
	private void CheckStatusAmbiguity()
	{
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x813BAC", Offset = "0x813BAC", VA = "0x813BAC")]
	private void SetTimers(TimeSpan timeSpan)
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x814160", Offset = "0x814160", VA = "0x814160")]
	public TournamentDebugTimers()
	{
	}
}
[Token(Token = "0x2000402")]
public class TournamentGameStateController : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x2000403")]
	public enum TournamentGameStateType
	{
		[Token(Token = "0x40016C4")]
		Enrolling,
		[Token(Token = "0x40016C5")]
		DividingPlayersIntoGroup,
		[Token(Token = "0x40016C6")]
		WaitingForRound,
		[Token(Token = "0x40016C7")]
		Playing,
		[Token(Token = "0x40016C8")]
		End
	}

	[Token(Token = "0x40016BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentGroupDivider groupDivider;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentMatchesCreator matchesCreator;

	[Token(Token = "0x40016BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TournamentProgressController progressController;

	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TournamentLeaderboardController tournamentLeaderboardController;

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool forceCreatingMatches;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TournamentGameStateType tournamentGameState;

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public TournamentGameStateType debugTournamentGameState;

	[Token(Token = "0x1700022B")]
	public static TournamentGameStateType TournamentGameState
	{
		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x814168", Offset = "0x814168", VA = "0x814168")]
		get
		{
			return default(TournamentGameStateType);
		}
		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x8141B0", Offset = "0x8141B0", VA = "0x8141B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700022C")]
	public static bool IsEnrolling
	{
		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x8142A4", Offset = "0x8142A4", VA = "0x8142A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022D")]
	public static bool IsWaitingForRound
	{
		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x8142EC", Offset = "0x8142EC", VA = "0x8142EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022E")]
	public static bool IsTournamentOver
	{
		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x8143C8", Offset = "0x8143C8", VA = "0x8143C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022F")]
	public static bool IsTournamentInProgress
	{
		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x814410", Offset = "0x814410", VA = "0x814410")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x8144A0", Offset = "0x8144A0", VA = "0x8144A0")]
	private void CreateRoomsForAllPlayers()
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x814E90", Offset = "0x814E90", VA = "0x814E90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x814EE8", Offset = "0x814EE8", VA = "0x814EE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x814F40", Offset = "0x814F40", VA = "0x814F40")]
	public void ForceCreatingMatches()
	{
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x814F4C", Offset = "0x814F4C", VA = "0x814F4C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x81503C", Offset = "0x81503C", VA = "0x81503C")]
	public TournamentGameStateController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000404")]
public class TournamentGroup
{
	[Token(Token = "0x2000405")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TournamentPlayer tournamentPlayer;

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x81513C", Offset = "0x81513C", VA = "0x81513C")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x8151CC", Offset = "0x8151CC", VA = "0x8151CC")]
		internal bool <CheckIfPlayerBelongsToGroup>b__0(TournamentPlayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<TournamentPlayer> playerListInGroup;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string roomName;

	[Token(Token = "0x17000230")]
	public string RoomName
	{
		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x815044", Offset = "0x815044", VA = "0x815044")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x81504C", Offset = "0x81504C", VA = "0x81504C")]
		set
		{
		}
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x815054", Offset = "0x815054", VA = "0x815054")]
	public bool CheckIfPlayerBelongsToGroup(TournamentPlayer tournamentPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x815144", Offset = "0x815144", VA = "0x815144")]
	public TournamentGroup()
	{
	}
}
[Token(Token = "0x2000406")]
public class TournamentGroupDivider : MonoBehaviour
{
	[Token(Token = "0x2000407")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Player> photonPlayersList;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TournamentGroupDivider <>4__this;

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x815AE4", Offset = "0x815AE4", VA = "0x815AE4")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x815DE8", Offset = "0x815DE8", VA = "0x815DE8")]
		internal bool <Initialize>b__0(TournamentPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x815EE4", Offset = "0x815EE4", VA = "0x815EE4")]
		internal void <Initialize>b__1(TournamentPlayer player)
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x815F18", Offset = "0x815F18", VA = "0x815F18")]
		internal void <Initialize>b__2(TournamentPlayer item)
		{
		}
	}

	[Token(Token = "0x2000408")]
	private sealed class <>c__DisplayClass16_1
	{
		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TournamentPlayer player;

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x815EDC", Offset = "0x815EDC", VA = "0x815EDC")]
		public <>c__DisplayClass16_1()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x815FD0", Offset = "0x815FD0", VA = "0x815FD0")]
		internal bool <Initialize>b__3(Player photonPlayer)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000409")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string playerNames;

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x815C00", Offset = "0x815C00", VA = "0x815C00")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x816150", Offset = "0x816150", VA = "0x816150")]
		internal void <SelectPlayersToTournamentGroup>b__0(TournamentPlayer player)
		{
		}
	}

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TournamentLeaderboardController tournamentLeaderboardController;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentInfoWindowController tournamentInfoWindowController;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RejoinDBController rejoinDBController;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<TournamentPlayer> playerDividerList;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<TournamentGroup> tournamentGroupList;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int countOfPlayersInDividerList;

	[Token(Token = "0x40016D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int countOfGroups;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int modulo;

	[Token(Token = "0x40016D4")]
	private const int defaultMaxPlayersInGroup = 4;

	[Token(Token = "0x40016D5")]
	private const int threePlayersInGroup = 3;

	[Token(Token = "0x40016D6")]
	private const int fivePlayersInDividerList = 5;

	[Token(Token = "0x40016D7")]
	private const int twoPlayersInGroup = 2;

	[Token(Token = "0x17000231")]
	public int CountGroup
	{
		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x8151DC", Offset = "0x8151DC", VA = "0x8151DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x814530", Offset = "0x814530", VA = "0x814530")]
	public List<TournamentGroup> StartDividingIntoGroups()
	{
		return null;
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x815A18", Offset = "0x815A18", VA = "0x815A18")]
	private void DrawTournamentGroupListOnMasterPanel()
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x8151E4", Offset = "0x8151E4", VA = "0x8151E4")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x815AEC", Offset = "0x815AEC", VA = "0x815AEC")]
	public TournamentGroup GetPlayerEnrolledGroup(TournamentPlayer tournamentPlayer)
	{
		return null;
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x8156BC", Offset = "0x8156BC", VA = "0x8156BC")]
	private void SelectPlayersToTournamentGroup(int maxPlayersInGroup)
	{
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0x815C08", Offset = "0x815C08", VA = "0x815C08")]
	private TournamentPlayer GetRandomTournamentPlayer()
	{
		return null;
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x815D10", Offset = "0x815D10", VA = "0x815D10")]
	public TournamentGroupDivider()
	{
	}
}
[Token(Token = "0x200040A")]
public class TournamentHostingController : MonoBehaviour, IMatchmakingCallbacks
{
	[Token(Token = "0x40016DC")]
	public const string tournamentRoomName = "Tournament";

	[Token(Token = "0x40016DD")]
	private const string tournamentLobbyName = "Tournament";

	[Token(Token = "0x40016DE")]
	public const string tournamentSceneName = "TournamentMenu";

	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TypedLobby tournamentLobby;

	[Token(Token = "0x40016E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TournamentMasterWindowsSwitcher windowsSwitcher;

	[Token(Token = "0x40016E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentRoomCreatingErrorWindowController creatingRoomErrorWindow;

	[Token(Token = "0x40016E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject controllersContainer;

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x8161BC", Offset = "0x8161BC", VA = "0x8161BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0x816214", Offset = "0x816214", VA = "0x816214")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0x81626C", Offset = "0x81626C", VA = "0x81626C")]
	public void CreatePhotonTournamentRoom()
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x8164B4", Offset = "0x8164B4", VA = "0x8164B4")]
	public void ShowCreatingRoomError(string message)
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x816528", Offset = "0x816528", VA = "0x816528", Slot = "5")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x8165A4", Offset = "0x8165A4", VA = "0x8165A4", Slot = "4")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x8165E4", Offset = "0x8165E4", VA = "0x8165E4", Slot = "6")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x816664", Offset = "0x816664", VA = "0x816664", Slot = "7")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x816668", Offset = "0x816668", VA = "0x816668", Slot = "8")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0x81666C", Offset = "0x81666C", VA = "0x81666C", Slot = "9")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0x816670", Offset = "0x816670", VA = "0x816670", Slot = "10")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x816674", Offset = "0x816674", VA = "0x816674")]
	public TournamentHostingController()
	{
	}
}
[Token(Token = "0x200040B")]
public class TournamentHostPlayerMenuSwitcher : MonoBehaviourPun
{
	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject masterSceneContents;

	[Token(Token = "0x40016E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject playerSceneContents;

	[Token(Token = "0x40016E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controllersContainer;

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x81671C", Offset = "0x81671C", VA = "0x81671C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x8167E0", Offset = "0x8167E0", VA = "0x8167E0")]
	public TournamentHostPlayerMenuSwitcher()
	{
	}
}
[Token(Token = "0x200040C")]
public class TournamentIDResetter : MonoBehaviour
{
	[Token(Token = "0x6001414")]
	[Address(RVA = "0x8167E8", Offset = "0x8167E8", VA = "0x8167E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x816838", Offset = "0x816838", VA = "0x816838")]
	public TournamentIDResetter()
	{
	}
}
[Token(Token = "0x200040D")]
public class TournamentInfoWindowController : MonoBehaviour, IInRoomCallbacks, IMatchmakingCallbacks
{
	[Token(Token = "0x40016E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text playerCountText;

	[Token(Token = "0x40016E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentPlayersScrollViewController playersScrollView;

	[Token(Token = "0x40016E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentPlayersScrollViewController playersInDividerGroupsScrollView;

	[Token(Token = "0x40016E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TournamentMasterWindowsSwitcher windowsSwitcher;

	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int numberOfPlayersInTournament;

	[Token(Token = "0x40016EB")]
	private const string groupName = "Tournament Group ";

	[Token(Token = "0x17000232")]
	public int NumberOfPlayersInTournament
	{
		[Token(Token = "0x6001418")]
		[Address(RVA = "0x8168F0", Offset = "0x8168F0", VA = "0x8168F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001419")]
		[Address(RVA = "0x8168F8", Offset = "0x8168F8", VA = "0x8168F8")]
		set
		{
		}
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x816840", Offset = "0x816840", VA = "0x816840")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x816898", Offset = "0x816898", VA = "0x816898")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0x816930", Offset = "0x816930", VA = "0x816930")]
	public void OnBotCreated(string newBot)
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0x816AB8", Offset = "0x816AB8", VA = "0x816AB8")]
	public void OnBotRemoved(string removedBot)
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0x816C14", Offset = "0x816C14", VA = "0x816C14")]
	public void OnCloseServerClick()
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0x815A38", Offset = "0x815A38", VA = "0x815A38")]
	public void DrawTournamentGroupList(List<TournamentGroup> tournamentGroupList)
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0x816E08", Offset = "0x816E08", VA = "0x816E08")]
	private void AddPlayersInfoPanelToTournamentGroupScrollView(TournamentGroup group, int countGroup)
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x8170A0", Offset = "0x8170A0", VA = "0x8170A0")]
	public void ChangePlayerInfoPanelColor(string id, bool qualified)
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x817300", Offset = "0x817300", VA = "0x817300", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x8173FC", Offset = "0x8173FC", VA = "0x8173FC", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x8174F8", Offset = "0x8174F8", VA = "0x8174F8", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x8174FC", Offset = "0x8174FC", VA = "0x8174FC", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x817500", Offset = "0x817500", VA = "0x817500", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x817504", Offset = "0x817504", VA = "0x817504", Slot = "9")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x817508", Offset = "0x817508", VA = "0x817508", Slot = "10")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x81750C", Offset = "0x81750C", VA = "0x81750C", Slot = "11")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x817510", Offset = "0x817510", VA = "0x817510", Slot = "12")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x817514", Offset = "0x817514", VA = "0x817514", Slot = "13")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x817518", Offset = "0x817518", VA = "0x817518", Slot = "14")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0x81751C", Offset = "0x81751C", VA = "0x81751C", Slot = "15")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x817594", Offset = "0x817594", VA = "0x817594")]
	public TournamentInfoWindowController()
	{
	}
}
[Token(Token = "0x200040E")]
public class TournamentLeaderboardGUIController : MonoBehaviourPun
{
	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TournamentTopPlayerSpot> playerSpotList;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<TournamentPlayer> tournamentPlayerList;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int topPlayerIndex;

	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int qualifiedPlayersTopIndex;

	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int unqualifiedPlayersTopIndex;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int maxPlayersInTopList;

	[Token(Token = "0x17000233")]
	private int TopPlayerIndex
	{
		[Token(Token = "0x600142D")]
		[Address(RVA = "0x81759C", Offset = "0x81759C", VA = "0x81759C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600142E")]
		[Address(RVA = "0x8175A4", Offset = "0x8175A4", VA = "0x8175A4")]
		set
		{
		}
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0x817610", Offset = "0x817610", VA = "0x817610")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0x817660", Offset = "0x817660", VA = "0x817660")]
	public void ShowLeaderboard(List<TournamentPlayer> players)
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0x817614", Offset = "0x817614", VA = "0x817614")]
	private void SetMaxPlayersInTopList()
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0x81767C", Offset = "0x81767C", VA = "0x81767C")]
	private void DrawLeaderboard()
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0x8177B8", Offset = "0x8177B8", VA = "0x8177B8")]
	private bool CheckIfTournamentPlayerIndexIsOutOfRange(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0x817C4C", Offset = "0x817C4C", VA = "0x817C4C")]
	public void ReactOnPressNextButton()
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0x817C70", Offset = "0x817C70", VA = "0x817C70")]
	public void ReactOnPressPreviousButton()
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x817C94", Offset = "0x817C94", VA = "0x817C94")]
	public TournamentLeaderboardGUIController()
	{
	}
}
[Token(Token = "0x200040F")]
public class TournamentLobbyMenuController : WindowController, IInRoomCallbacks
{
	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text playersCountText;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text timeToEndEnrollmentText;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text stateInfoText;

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x817D1C", Offset = "0x817D1C", VA = "0x817D1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x817E70", Offset = "0x817E70", VA = "0x817E70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x817EC8", Offset = "0x817EC8", VA = "0x817EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x8183FC", Offset = "0x8183FC", VA = "0x8183FC")]
	public void OnSettings()
	{
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0x81847C", Offset = "0x81847C", VA = "0x81847C")]
	public void OnQuit()
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x8184FC", Offset = "0x8184FC", VA = "0x8184FC")]
	public void TournamentRoomIsNoLongerLive()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x81835C", Offset = "0x81835C", VA = "0x81835C")]
	private void UpdateTournamentInProgressText()
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x8182C0", Offset = "0x8182C0", VA = "0x8182C0")]
	private void UpdateTournamentOverText()
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x818120", Offset = "0x818120", VA = "0x818120")]
	private void UpdateQualifiedText()
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x817F98", Offset = "0x817F98", VA = "0x817F98")]
	private void UpdateEnrollmentText()
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x817D7C", Offset = "0x817D7C", VA = "0x817D7C")]
	private void UpdatePlayerCountText()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x8186A4", Offset = "0x8186A4", VA = "0x8186A4", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x8186A8", Offset = "0x8186A8", VA = "0x8186A8", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x8186AC", Offset = "0x8186AC", VA = "0x8186AC", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x8186B0", Offset = "0x8186B0", VA = "0x8186B0", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x8186B4", Offset = "0x8186B4", VA = "0x8186B4", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0x8186B8", Offset = "0x8186B8", VA = "0x8186B8")]
	public TournamentLobbyMenuController()
	{
	}
}
[Token(Token = "0x2000410")]
public class TournamentLocalMatchResult : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000411")]
	private sealed class <>c
	{
		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<TournamentPlayerResult> <>9__4_0;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<TournamentPlayerResult> <>9__4_1;

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x81898C", Offset = "0x81898C", VA = "0x81898C")]
		public <>c()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x818994", Offset = "0x818994", VA = "0x818994")]
		internal void <get_LocalPlayerResult>b__4_0(TournamentPlayerResult result)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x818E98", Offset = "0x818E98", VA = "0x818E98")]
		internal bool <get_LocalPlayerResult>b__4_1(TournamentPlayerResult player)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int stage;

	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool isItFinalMatch;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static TournamentMatchClassification matchClassification;

	[Token(Token = "0x17000234")]
	public static TournamentPlayerResult LocalPlayerResult
	{
		[Token(Token = "0x6001448")]
		[Address(RVA = "0x8186C0", Offset = "0x8186C0", VA = "0x8186C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x8188B8", Offset = "0x8188B8", VA = "0x8188B8")]
	public static void ResetResult()
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x818914", Offset = "0x818914", VA = "0x818914")]
	public TournamentLocalMatchResult()
	{
	}
}
[Token(Token = "0x2000412")]
public class TournamentMasterConnectingWindowController : MonoBehaviour, IConnectionCallbacks
{
	[Token(Token = "0x40016FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TournamentMasterWindowsSwitcher windowsSwitcher;

	[Token(Token = "0x40016FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text connectingToPhotonErrorText;

	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CloudRegionCode cloudRegionCode;

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject connectingUIelements;

	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject selectRegionUIElements;

	[Token(Token = "0x1400002B")]
	public event Action OnConnectionEstablished
	{
		[Token(Token = "0x600144F")]
		[Address(RVA = "0x80F4C8", Offset = "0x80F4C8", VA = "0x80F4C8")]
		add
		{
		}
		[Token(Token = "0x6001450")]
		[Address(RVA = "0x818EC0", Offset = "0x818EC0", VA = "0x818EC0")]
		remove
		{
		}
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x818F5C", Offset = "0x818F5C", VA = "0x818F5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x818FE8", Offset = "0x818FE8", VA = "0x818FE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x80F9D4", Offset = "0x80F9D4", VA = "0x80F9D4")]
	public void OnConnectButtonClicked()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0x819040", Offset = "0x819040", VA = "0x819040", Slot = "5")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0x819080", Offset = "0x819080", VA = "0x819080")]
	public void SetRegion(CloudRegionCode cloudRegionCode)
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0x819088", Offset = "0x819088", VA = "0x819088", Slot = "4")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0x81908C", Offset = "0x81908C", VA = "0x81908C", Slot = "6")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0x819130", Offset = "0x819130", VA = "0x819130", Slot = "7")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0x819134", Offset = "0x819134", VA = "0x819134", Slot = "8")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0x819138", Offset = "0x819138", VA = "0x819138", Slot = "9")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0x81913C", Offset = "0x81913C", VA = "0x81913C")]
	public TournamentMasterConnectingWindowController()
	{
	}
}
[Token(Token = "0x2000413")]
public class TournamentMasterDisconnectionErrorWindowController : MonoBehaviour, IConnectionCallbacks
{
	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject disconnectionErrorWindow;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text disconnectionErrorMessageText;

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentMasterWindowsSwitcher windowsSwitcher;

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x81914C", Offset = "0x81914C", VA = "0x81914C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x8191A4", Offset = "0x8191A4", VA = "0x8191A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x8191FC", Offset = "0x8191FC", VA = "0x8191FC")]
	public void OnBackButtonClick()
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x819218", Offset = "0x819218", VA = "0x819218", Slot = "4")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x81921C", Offset = "0x81921C", VA = "0x81921C", Slot = "5")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0x819220", Offset = "0x819220", VA = "0x819220", Slot = "6")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0x8192C4", Offset = "0x8192C4", VA = "0x8192C4", Slot = "7")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0x8192C8", Offset = "0x8192C8", VA = "0x8192C8", Slot = "8")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0x8192CC", Offset = "0x8192CC", VA = "0x8192CC", Slot = "9")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0x8192D0", Offset = "0x8192D0", VA = "0x8192D0")]
	public TournamentMasterDisconnectionErrorWindowController()
	{
	}
}
[Token(Token = "0x2000414")]
public class TournamentMasterSettingsWindowController : MonoBehaviour
{
	[Token(Token = "0x2000415")]
	private sealed class <InputFieldInitializationRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentMasterSettingsWindowController <>4__this;

		[Token(Token = "0x17000235")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0x819880", Offset = "0x819880", VA = "0x819880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600146E")]
			[Address(RVA = "0x819888", Offset = "0x819888", VA = "0x819888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x81936C", Offset = "0x81936C", VA = "0x81936C")]
		[DebuggerHidden]
		public <InputFieldInitializationRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x819598", Offset = "0x819598", VA = "0x819598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x81959C", Offset = "0x81959C", VA = "0x81959C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputField tournamentYearInputField;

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InputField tournamentMonthInputField;

	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InputField tournamentDayInputField;

	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InputField tournamentHourInputField;

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InputField tournamentMinuteInputField;

	[Token(Token = "0x4001709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private InputField tournamentSecondInputField;

	[Token(Token = "0x400170A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private InputField tournamentEnrollmentInputField;

	[Token(Token = "0x400170B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private InputField tournamentPreparationInputField;

	[Token(Token = "0x400170C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private InputField tournamentMatchInputField;

	[Token(Token = "0x6001466")]
	[Address(RVA = "0x8192D8", Offset = "0x8192D8", VA = "0x8192D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x8192F8", Offset = "0x8192F8", VA = "0x8192F8")]
	private IEnumerator InputFieldInitializationRoutine()
	{
		return null;
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x819394", Offset = "0x819394", VA = "0x819394")]
	public void OnSetButtonClick()
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x819590", Offset = "0x819590", VA = "0x819590")]
	public TournamentMasterSettingsWindowController()
	{
	}
}
[Token(Token = "0x2000416")]
public class TournamentMasterWindow : MonoBehaviour
{
	[Token(Token = "0x2000417")]
	public enum Type
	{
		[Token(Token = "0x4001712")]
		BeforeConnectedToPhoton,
		[Token(Token = "0x4001713")]
		BeforeHosting,
		[Token(Token = "0x4001714")]
		CreatingRoom,
		[Token(Token = "0x4001715")]
		AfterHosting,
		[Token(Token = "0x4001716")]
		CreatingRoomError,
		[Token(Token = "0x4001717")]
		DisconnectionError,
		[Token(Token = "0x4001718")]
		CouldNotConnectError
	}

	[Token(Token = "0x4001710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Type type;

	[Token(Token = "0x17000237")]
	public Type WindowType
	{
		[Token(Token = "0x600146F")]
		[Address(RVA = "0x819890", Offset = "0x819890", VA = "0x819890")]
		get
		{
			return default(Type);
		}
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0x819898", Offset = "0x819898", VA = "0x819898")]
	public TournamentMasterWindow()
	{
	}
}
[Token(Token = "0x2000418")]
public class TournamentMasterWindowsSwitcher : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000419")]
	private sealed class <>c
	{
		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<TournamentMasterWindow> <>9__1_0;

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x819A28", Offset = "0x819A28", VA = "0x819A28")]
		public <>c()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x819A30", Offset = "0x819A30", VA = "0x819A30")]
		internal void <CloseAllWindows>b__1_0(TournamentMasterWindow w)
		{
		}
	}

	[Token(Token = "0x200041A")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TournamentMasterWindow.Type windowType;

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x8199A8", Offset = "0x8199A8", VA = "0x8199A8")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x819A5C", Offset = "0x819A5C", VA = "0x819A5C")]
		internal bool <OpenWindow>b__0(TournamentMasterWindow w)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TournamentMasterWindow> windows;

	[Token(Token = "0x6001471")]
	[Address(RVA = "0x8198A0", Offset = "0x8198A0", VA = "0x8198A0")]
	public void CloseAllWindows()
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0x8163B8", Offset = "0x8163B8", VA = "0x8163B8")]
	public void OpenWindow(TournamentMasterWindow.Type windowType)
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0x8199B0", Offset = "0x8199B0", VA = "0x8199B0")]
	public TournamentMasterWindowsSwitcher()
	{
	}
}
[Serializable]
[Token(Token = "0x200041B")]
public class TournamentMatchClassification
{
	[Token(Token = "0x400171D")]
	private const int playersQualifingCount = 2;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<TournamentPlayerResult> playersResults;

	[Token(Token = "0x6001479")]
	[Address(RVA = "0x819A80", Offset = "0x819A80", VA = "0x819A80")]
	public TournamentMatchClassification(List<TournamentPlayerResult> playersResults)
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x812F78", Offset = "0x812F78", VA = "0x812F78")]
	public static bool isQualified(int playerRank, int playersCount)
	{
		return default(bool);
	}
}
[Token(Token = "0x200041C")]
public class TournamentMatchesCreator : MonoBehaviourPun, IMatchmakingCallbacks, ILobbyCallbacks
{
	[Serializable]
	[Token(Token = "0x200041D")]
	private sealed class <>c
	{
		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Player> <>9__23_0;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<TournamentPlayer, string> <>9__24_3;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<TournamentPlayer, string> <>9__24_4;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<TournamentPlayer, bool> <>9__24_5;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<bool> <>9__29_0;

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x81ACB0", Offset = "0x81ACB0", VA = "0x81ACB0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x81ACB8", Offset = "0x81ACB8", VA = "0x81ACB8")]
		internal void <CreateMatches>b__23_0(Player player)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x81ADD8", Offset = "0x81ADD8", VA = "0x81ADD8")]
		internal string <SendRPCCreateMatchToMatchCreatingPlayer>b__24_3(TournamentPlayer p)
		{
			return null;
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x81ADF8", Offset = "0x81ADF8", VA = "0x81ADF8")]
		internal string <SendRPCCreateMatchToMatchCreatingPlayer>b__24_4(TournamentPlayer p)
		{
			return null;
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x81AE10", Offset = "0x81AE10", VA = "0x81AE10")]
		internal bool <SendRPCCreateMatchToMatchCreatingPlayer>b__24_5(TournamentPlayer p)
		{
			return default(bool);
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x81AE28", Offset = "0x81AE28", VA = "0x81AE28")]
		internal bool <JoinLobbyAfterReadyCoroutine>b__29_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200041E")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TournamentGroup group;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TournamentMatchesCreator <>4__this;

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x819EB4", Offset = "0x819EB4", VA = "0x819EB4")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x81AEA4", Offset = "0x81AEA4", VA = "0x81AEA4")]
		internal bool <SendRPCCreateMatchToMatchCreatingPlayer>b__0(Player photonPlayer)
		{
			return default(bool);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x81AFC8", Offset = "0x81AFC8", VA = "0x81AFC8")]
		internal void <SendRPCCreateMatchToMatchCreatingPlayer>b__1(Player player)
		{
		}
	}

	[Token(Token = "0x200041F")]
	private sealed class <>c__DisplayClass24_1
	{
		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Player photonPlayer;

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x81AFC0", Offset = "0x81AFC0", VA = "0x81AFC0")]
		public <>c__DisplayClass24_1()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x81B4AC", Offset = "0x81B4AC", VA = "0x81B4AC")]
		internal bool <SendRPCCreateMatchToMatchCreatingPlayer>b__2(TournamentPlayer player)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000420")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TournamentGroup group;

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x81A058", Offset = "0x81A058", VA = "0x81A058")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x81B4E0", Offset = "0x81B4E0", VA = "0x81B4E0")]
		internal bool <GetMatchCreatingPlayerForGroup>b__0(Player player)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000421")]
	private sealed class <>c__DisplayClass25_1
	{
		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Player player;

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x81B5FC", Offset = "0x81B5FC", VA = "0x81B5FC")]
		public <>c__DisplayClass25_1()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x81B604", Offset = "0x81B604", VA = "0x81B604")]
		internal bool <GetMatchCreatingPlayerForGroup>b__1(TournamentPlayer playerInGroup)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000422")]
	private sealed class <JoinLobbyAfterReadyCoroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentMatchesCreator <>4__this;

		[Token(Token = "0x1700023B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0x81B820", Offset = "0x81B820", VA = "0x81B820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0x81B828", Offset = "0x81B828", VA = "0x81B828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x81A6E0", Offset = "0x81A6E0", VA = "0x81A6E0")]
		[DebuggerHidden]
		public <JoinLobbyAfterReadyCoroutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x81B638", Offset = "0x81B638", VA = "0x81B638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x81B63C", Offset = "0x81B63C", VA = "0x81B63C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400171F")]
	private const float secondsBeforeMapChange = 10f;

	[Token(Token = "0x4001720")]
	private const float rPCDelayTime = 2f;

	[Token(Token = "0x4001721")]
	private const int maxRoomId = 10000;

	[Token(Token = "0x4001722")]
	private const int minRoomId = 0;

	[Token(Token = "0x4001723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int roomSize;

	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TournamentGroup> debugTournamentGroupList;

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentLobbyMenuController tournamentEnrollmentPhaseController;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TournamentProgressController tournamentProgressController;

	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TournamentLobbyMenuController tournamentLobbyMenuController;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Map deathmatchMap;

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isRejoing;

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string roomName;

	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TournamentGroup groupInMatch;

	[Token(Token = "0x17000238")]
	private WaitForSeconds waitBetweenRejoinCall
	{
		[Token(Token = "0x600147B")]
		[Address(RVA = "0x819B58", Offset = "0x819B58", VA = "0x819B58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000239")]
	public bool IsRejoing
	{
		[Token(Token = "0x600147C")]
		[Address(RVA = "0x819BB8", Offset = "0x819BB8", VA = "0x819BB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600147D")]
		[Address(RVA = "0x819BC0", Offset = "0x819BC0", VA = "0x819BC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700023A")]
	public string RoomName
	{
		[Token(Token = "0x600147E")]
		[Address(RVA = "0x819BCC", Offset = "0x819BCC", VA = "0x819BCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600147F")]
		[Address(RVA = "0x819BD4", Offset = "0x819BD4", VA = "0x819BD4")]
		set
		{
		}
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x819BDC", Offset = "0x819BDC", VA = "0x819BDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x819C34", Offset = "0x819C34", VA = "0x819C34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x8148F4", Offset = "0x8148F4", VA = "0x8148F4")]
	public void CreateMatches(List<TournamentGroup> tournamentGroups)
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0x819C8C", Offset = "0x819C8C", VA = "0x819C8C")]
	private void SendRPCCreateMatchToMatchCreatingPlayer(TournamentGroup group)
	{
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0x819EBC", Offset = "0x819EBC", VA = "0x819EBC")]
	private static Player GetMatchCreatingPlayerForGroup(TournamentGroup group)
	{
		return null;
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0x81A060", Offset = "0x81A060", VA = "0x81A060")]
	[PunRPC]
	private void RPCCreateOrJoinMatch(string roomName, string[] playersInGroupIDs, string[] playersInGroupNames, bool[] playersInGroupIsBot, bool isFinalRound)
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0x81A2E8", Offset = "0x81A2E8", VA = "0x81A2E8")]
	public void TournamentsLocalMatchResultCreate(string[] playersInGroupIDs)
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0x81A608", Offset = "0x81A608", VA = "0x81A608")]
	public void DisconnectPlayerFroMaster()
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0x81A66C", Offset = "0x81A66C", VA = "0x81A66C")]
	private IEnumerator JoinLobbyAfterReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0x81A708", Offset = "0x81A708", VA = "0x81A708", Slot = "10")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0x81A728", Offset = "0x81A728", VA = "0x81A728", Slot = "11")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0x81A8FC", Offset = "0x81A8FC", VA = "0x81A8FC", Slot = "5")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0x81A900", Offset = "0x81A900", VA = "0x81A900", Slot = "6")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0x81A904", Offset = "0x81A904", VA = "0x81A904", Slot = "7")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0x81A908", Offset = "0x81A908", VA = "0x81A908", Slot = "8")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0x81A90C", Offset = "0x81A90C", VA = "0x81A90C", Slot = "9")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0x81A910", Offset = "0x81A910", VA = "0x81A910", Slot = "4")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0x81A914", Offset = "0x81A914", VA = "0x81A914", Slot = "12")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0x81A918", Offset = "0x81A918", VA = "0x81A918", Slot = "13")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0x81A91C", Offset = "0x81A91C", VA = "0x81A91C", Slot = "14")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0x81A920", Offset = "0x81A920", VA = "0x81A920")]
	public TournamentMatchesCreator()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x81A978", Offset = "0x81A978", VA = "0x81A978")]
	private void <CreateMatches>b__23_1(TournamentGroup group)
	{
	}
}
[Token(Token = "0x2000423")]
public class TournamentMatchResultsScoreboard : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000424")]
	private sealed class <>c
	{
		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<TournamentMatchResultsScoreboardEntry, bool> <>9__2_1;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<TournamentMatchResultsScoreboardEntry> <>9__3_0;

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x81BC30", Offset = "0x81BC30", VA = "0x81BC30")]
		public <>c()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x81BC38", Offset = "0x81BC38", VA = "0x81BC38")]
		internal bool <ShowMatchClassificationEntries>b__2_1(TournamentMatchResultsScoreboardEntry entry)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x81BC88", Offset = "0x81BC88", VA = "0x81BC88")]
		internal void <HideAllResults>b__3_0(TournamentMatchResultsScoreboardEntry entry)
		{
		}
	}

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TournamentMatchResultsScoreboardEntry> entries;

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0x81B830", Offset = "0x81B830", VA = "0x81B830")]
	public void ShowResults(TournamentMatchClassification matchClassification)
	{
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0x81B960", Offset = "0x81B960", VA = "0x81B960")]
	private void ShowMatchClassificationEntries(TournamentMatchClassification matchClassification)
	{
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x81B858", Offset = "0x81B858", VA = "0x81B858")]
	private void HideAllResults()
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x81BA08", Offset = "0x81BA08", VA = "0x81BA08")]
	public TournamentMatchResultsScoreboard()
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0x81BA10", Offset = "0x81BA10", VA = "0x81BA10")]
	private void <ShowMatchClassificationEntries>b__2_0(TournamentPlayerResult result)
	{
	}
}
[Token(Token = "0x2000425")]
public class TournamentMatchResultsScoreboardEntry : MonoBehaviour
{
	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text playerName;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text playerScore;

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0x81BB24", Offset = "0x81BB24", VA = "0x81BB24")]
	public void ShowResult(TournamentPlayerResult playerResult)
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0x81BC9C", Offset = "0x81BC9C", VA = "0x81BC9C")]
	public void HideResult()
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0x81BC48", Offset = "0x81BC48", VA = "0x81BC48")]
	internal bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0x81BCC0", Offset = "0x81BCC0", VA = "0x81BCC0")]
	public TournamentMatchResultsScoreboardEntry()
	{
	}
}
[Token(Token = "0x2000426")]
public class TournamentOnMasterChangeKickerController : MonoBehaviourPun, IInRoomCallbacks
{
	[Token(Token = "0x60014B8")]
	[Address(RVA = "0x81BCC8", Offset = "0x81BCC8", VA = "0x81BCC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0x81BD20", Offset = "0x81BD20", VA = "0x81BD20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0x81BD78", Offset = "0x81BD78", VA = "0x81BD78", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0x81BDE4", Offset = "0x81BDE4", VA = "0x81BDE4", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0x81BDE8", Offset = "0x81BDE8", VA = "0x81BDE8", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0x81BDEC", Offset = "0x81BDEC", VA = "0x81BDEC", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0x81BDF0", Offset = "0x81BDF0", VA = "0x81BDF0", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0x81BDF4", Offset = "0x81BDF4", VA = "0x81BDF4")]
	public TournamentOnMasterChangeKickerController()
	{
	}
}
[Token(Token = "0x2000427")]
public class TournamentOrderOfLastHitSyncer : MonoBehaviourPun, IPunObservable, IInRoomCallbacks
{
	[Token(Token = "0x2000428")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int playerId;

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x81C5F4", Offset = "0x81C5F4", VA = "0x81C5F4")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x81C6D4", Offset = "0x81C6D4", VA = "0x81C6D4")]
		internal bool <RPCApplyOrderOfLastHitFromMaster>b__1(Player player)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000429")]
	private sealed class <>c
	{
		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<PlayerControllerCore, int> <>9__7_0;

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x81C768", Offset = "0x81C768", VA = "0x81C768")]
		public <>c()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x81C770", Offset = "0x81C770", VA = "0x81C770")]
		internal int <RPCApplyOrderOfLastHitFromMaster>b__7_0(PlayerControllerCore player)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TournamentOrderOfLastHitSyncer instance;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int orderOfLastHit;

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0x81BDFC", Offset = "0x81BDFC", VA = "0x81BDFC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0x81BF9C", Offset = "0x81BF9C", VA = "0x81BF9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0x81BFF4", Offset = "0x81BFF4", VA = "0x81BFF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0x81C04C", Offset = "0x81C04C", VA = "0x81C04C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0x81C128", Offset = "0x81C128", VA = "0x81C128")]
	internal static void ApplyOrderOfLastHitFromMaster(int playerId)
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0x81C254", Offset = "0x81C254", VA = "0x81C254")]
	[PunRPC]
	private void RPCApplyOrderOfLastHitFromMaster(int playerId)
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0x81C5FC", Offset = "0x81C5FC", VA = "0x81C5FC")]
	private static int GetSafetyLargerOrderOfLastHitValue(int maxOrderOfLastHit)
	{
		return default(int);
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0x81C658", Offset = "0x81C658", VA = "0x81C658")]
	[PunRPC]
	private void RPCSyncOrderOfLastHit(int orderOfLastHit)
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0x81C694", Offset = "0x81C694", VA = "0x81C694", Slot = "5")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0x81C698", Offset = "0x81C698", VA = "0x81C698", Slot = "6")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0x81C69C", Offset = "0x81C69C", VA = "0x81C69C", Slot = "7")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0x81C6A0", Offset = "0x81C6A0", VA = "0x81C6A0", Slot = "8")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0x81C6A4", Offset = "0x81C6A4", VA = "0x81C6A4", Slot = "9")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0x81C6CC", Offset = "0x81C6CC", VA = "0x81C6CC")]
	public TournamentOrderOfLastHitSyncer()
	{
	}
}
[Serializable]
[Token(Token = "0x200042A")]
public class TournamentPlayer
{
	[Token(Token = "0x4001745")]
	private const string photonPlayerPersistentIDKey = "PersistentID";

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isBot;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string playerName;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TournamentPlayerResult matchResult;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool <isFinal>k__BackingField;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int stageThatGetTo;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isSemiFinal;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string semiFinalRoomId;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int semiFinalRankInRoom;

	[Token(Token = "0x1700023D")]
	public bool IsBot
	{
		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x81C7B0", Offset = "0x81C7B0", VA = "0x81C7B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x81C7B8", Offset = "0x81C7B8", VA = "0x81C7B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700023E")]
	public string PlayerName
	{
		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x81C7C4", Offset = "0x81C7C4", VA = "0x81C7C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x81C7CC", Offset = "0x81C7CC", VA = "0x81C7CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700023F")]
	public static string LocalPlayerPersistentID
	{
		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x81780C", Offset = "0x81780C", VA = "0x81780C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x81C7D4", Offset = "0x81C7D4", VA = "0x81C7D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000240")]
	public string PersistentPlayerID
	{
		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x8156A0", Offset = "0x8156A0", VA = "0x8156A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x81C794", Offset = "0x81C794", VA = "0x81C794")]
		set
		{
		}
	}

	[Token(Token = "0x17000241")]
	public int Hits
	{
		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x81C8B0", Offset = "0x81C8B0", VA = "0x81C8B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x81C8CC", Offset = "0x81C8CC", VA = "0x81C8CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000242")]
	public int Deaths
	{
		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x81C8E8", Offset = "0x81C8E8", VA = "0x81C8E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x81C904", Offset = "0x81C904", VA = "0x81C904")]
		set
		{
		}
	}

	[Token(Token = "0x17000243")]
	public int TotalHits
	{
		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x81C920", Offset = "0x81C920", VA = "0x81C920")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x81C93C", Offset = "0x81C93C", VA = "0x81C93C")]
		set
		{
		}
	}

	[Token(Token = "0x17000244")]
	public int TotalDeaths
	{
		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x81C958", Offset = "0x81C958", VA = "0x81C958")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x81C974", Offset = "0x81C974", VA = "0x81C974")]
		set
		{
		}
	}

	[Token(Token = "0x17000245")]
	public int OrderOfLastHit
	{
		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x81C990", Offset = "0x81C990", VA = "0x81C990")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x81C9AC", Offset = "0x81C9AC", VA = "0x81C9AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000246")]
	public bool IsQualified
	{
		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x81C9C8", Offset = "0x81C9C8", VA = "0x81C9C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x81C9E4", Offset = "0x81C9E4", VA = "0x81C9E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000247")]
	public bool isFinal
	{
		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x81CA04", Offset = "0x81CA04", VA = "0x81CA04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x81CA0C", Offset = "0x81CA0C", VA = "0x81CA0C")]
		internal set
		{
		}
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x81A4C0", Offset = "0x81A4C0", VA = "0x81A4C0")]
	public TournamentPlayer(string name, string id, bool isBot)
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x81C85C", Offset = "0x81C85C", VA = "0x81C85C")]
	public void UpdateTournamentResult(TournamentPlayerResult result)
	{
	}

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0x81CA18", Offset = "0x81CA18", VA = "0x81CA18", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0x81CB00", Offset = "0x81CB00", VA = "0x81CB00", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x816004", Offset = "0x816004", VA = "0x816004")]
	public static string GetPersistentPlayerID(Player photonPlayer)
	{
		return null;
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0x81CB38", Offset = "0x81CB38", VA = "0x81CB38")]
	public static void SetPersistentPlayerID(Player photonPlayer, string id)
	{
	}
}
[Token(Token = "0x200042B")]
public class TournamentPlayerInfoPanel : MonoBehaviour
{
	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string playerName;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text playerNameText;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string persistentPlayerID;

	[Token(Token = "0x17000248")]
	public string PlayerName
	{
		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x81CBE0", Offset = "0x81CBE0", VA = "0x81CBE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x81CBE8", Offset = "0x81CBE8", VA = "0x81CBE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000249")]
	public string PersistentPlayerID
	{
		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x81CC2C", Offset = "0x81CC2C", VA = "0x81CC2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x81CC34", Offset = "0x81CC34", VA = "0x81CC34")]
		set
		{
		}
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0x81CC3C", Offset = "0x81CC3C", VA = "0x81CC3C")]
	public void Destroy()
	{
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0x81CCA8", Offset = "0x81CCA8", VA = "0x81CCA8")]
	public TournamentPlayerInfoPanel()
	{
	}
}
[Serializable]
[Token(Token = "0x200042C")]
public class TournamentPlayerResult
{
	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string persistentPlayerID;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hits;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int totalHits;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int deaths;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int totalDeaths;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int orderOfLastHit;

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isQualified;

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0x812F90", Offset = "0x812F90", VA = "0x812F90")]
	public TournamentPlayerResult(string persistentPlayerID, int hits, int deaths, int orderOfLastHit, bool isQualified)
	{
	}
}
[Token(Token = "0x200042D")]
public class TournamentPlayersScrollViewController : MonoBehaviour
{
	[Token(Token = "0x200042E")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string playerName;

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x81CCB0", Offset = "0x81CCB0", VA = "0x81CCB0")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x81CD48", Offset = "0x81CD48", VA = "0x81CD48")]
		internal bool <RemovePlayer>b__0(TournamentPlayerInfoPanel item)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x200042F")]
	private sealed class <>c
	{
		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<TournamentPlayerInfoPanel> <>9__6_0;

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x81CDDC", Offset = "0x81CDDC", VA = "0x81CDDC")]
		public <>c()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x81CDE4", Offset = "0x81CDE4", VA = "0x81CDE4")]
		internal void <Clear>b__6_0(TournamentPlayerInfoPanel item)
		{
		}
	}

	[Token(Token = "0x2000430")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x81CCB8", Offset = "0x81CCB8", VA = "0x81CCB8")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x81CDF8", Offset = "0x81CDF8", VA = "0x81CDF8")]
		internal bool <ChangePlayerInfoPanelColor>b__0(TournamentPlayerInfoPanel player)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform contentTransform;

	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentPlayerInfoPanel playerInfoPanelPrefab;

	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<TournamentPlayerInfoPanel> playerInfoPanels;

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0x816968", Offset = "0x816968", VA = "0x816968")]
	public void AddPlayer(string playerName)
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0x816F30", Offset = "0x816F30", VA = "0x816F30")]
	public void AddPlayer(string playerName, string id)
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0x816AF0", Offset = "0x816AF0", VA = "0x816AF0")]
	public void RemovePlayer(string playerName)
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0x816CB8", Offset = "0x816CB8", VA = "0x816CB8")]
	public void Clear()
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0x8170BC", Offset = "0x8170BC", VA = "0x8170BC")]
	public void ChangePlayerInfoPanelColor(string id, bool qualified)
	{
	}

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0x81CCC0", Offset = "0x81CCC0", VA = "0x81CCC0")]
	public TournamentPlayersScrollViewController()
	{
	}
}
[Token(Token = "0x2000431")]
public class TournamentProgressController : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x400175F")]
	private const int stageDuration = 540;

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TournamentResultsController resultsController;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentGroupDivider groupDivider;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeFromStageStart;

	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int tournamentStage;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isSemiFinalTournamentRoundStarted;

	[Token(Token = "0x1700024A")]
	public int TournamentStage
	{
		[Token(Token = "0x6001503")]
		[Address(RVA = "0x81CE1C", Offset = "0x81CE1C", VA = "0x81CE1C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0x81CE24", Offset = "0x81CE24", VA = "0x81CE24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0x81CE7C", Offset = "0x81CE7C", VA = "0x81CE7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0x81CED4", Offset = "0x81CED4", VA = "0x81CED4")]
	public void StartNextStage()
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0x81D104", Offset = "0x81D104", VA = "0x81D104")]
	internal int GetPlayerStage(TournamentPlayerResult playerResult)
	{
		return default(int);
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0x81D128", Offset = "0x81D128", VA = "0x81D128")]
	public bool IsStageFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0x81B488", Offset = "0x81B488", VA = "0x81B488")]
	public bool IsLastTournamentRoundStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0x81D158", Offset = "0x81D158", VA = "0x81D158", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0x81D214", Offset = "0x81D214", VA = "0x81D214")]
	internal bool IsSemiFinalTournamentRoundStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0x81D250", Offset = "0x81D250", VA = "0x81D250")]
	public TournamentProgressController()
	{
	}
}
[Token(Token = "0x2000432")]
public class TournamentRegionDropdownController : MonoBehaviour
{
	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TournamentMasterConnectingWindowController tournamentMasterConnectingWindowController;

	[Token(Token = "0x600150D")]
	[Address(RVA = "0x81D260", Offset = "0x81D260", VA = "0x81D260")]
	public void OnRegionSelected(int regionIndex)
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0x81D38C", Offset = "0x81D38C", VA = "0x81D38C")]
	public TournamentRegionDropdownController()
	{
	}
}
[Token(Token = "0x2000433")]
public class TournamentResultsController : MonoBehaviourPun
{
	[Serializable]
	[Token(Token = "0x2000434")]
	private sealed class <>c
	{
		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<TournamentPlayerResult> <>9__3_0;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<TournamentPlayerResult, string> <>9__3_1;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<TournamentPlayerResult, int> <>9__3_2;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<TournamentPlayerResult, int> <>9__3_3;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<TournamentPlayerResult, int> <>9__3_4;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<TournamentPlayerResult, bool> <>9__3_5;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Predicate<TournamentPlayerResult> <>9__4_0;

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x81E188", Offset = "0x81E188", VA = "0x81E188")]
		public <>c()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x81E190", Offset = "0x81E190", VA = "0x81E190")]
		internal void <Awake>b__3_0(TournamentPlayerResult result)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x81E21C", Offset = "0x81E21C", VA = "0x81E21C")]
		internal string <Awake>b__3_1(TournamentPlayerResult item)
		{
			return null;
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x81E234", Offset = "0x81E234", VA = "0x81E234")]
		internal int <Awake>b__3_2(TournamentPlayerResult item)
		{
			return default(int);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x81E24C", Offset = "0x81E24C", VA = "0x81E24C")]
		internal int <Awake>b__3_3(TournamentPlayerResult item)
		{
			return default(int);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x81E264", Offset = "0x81E264", VA = "0x81E264")]
		internal int <Awake>b__3_4(TournamentPlayerResult item)
		{
			return default(int);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x81E27C", Offset = "0x81E27C", VA = "0x81E27C")]
		internal bool <Awake>b__3_5(TournamentPlayerResult item)
		{
			return default(bool);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x81E294", Offset = "0x81E294", VA = "0x81E294")]
		internal bool <IsQualifiedForNextRound>b__4_0(TournamentPlayerResult result)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000435")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] playerPersistentIDs;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Predicate<TournamentPlayerResult> <>9__1;

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x81E088", Offset = "0x81E088", VA = "0x81E088")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x81E2BC", Offset = "0x81E2BC", VA = "0x81E2BC")]
		internal bool <MatchWithPlayersOfGivenIdsAlreadySaved>b__0(TournamentMatchClassification match)
		{
			return default(bool);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x81E388", Offset = "0x81E388", VA = "0x81E388")]
		internal bool <MatchWithPlayersOfGivenIdsAlreadySaved>b__1(TournamentPlayerResult player)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TournamentStageResults> tournamentResults;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentLeaderboardController leaderboardController;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TournamentProgressController progressController;

	[Token(Token = "0x600150F")]
	[Address(RVA = "0x81D394", Offset = "0x81D394", VA = "0x81D394")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0x818560", Offset = "0x818560", VA = "0x818560")]
	public static bool IsQualifiedForNextRound()
	{
		return default(bool);
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0x81DAD0", Offset = "0x81DAD0", VA = "0x81DAD0")]
	[PunRPC]
	private void RPCAddMatchResult(string[] playerPersistentIDs, int[] playersScores, int[] playersDeaths, int[] ordersOfLastHit, bool[] isQualifieds)
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0x81DF64", Offset = "0x81DF64", VA = "0x81DF64")]
	private bool MatchWithPlayersOfGivenIdsAlreadySaved(string[] playerPersistentIDs)
	{
		return default(bool);
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0x81E090", Offset = "0x81E090", VA = "0x81E090")]
	public TournamentResultsController()
	{
	}
}
[Token(Token = "0x2000436")]
public class TournamentRoomCreatingErrorWindowController : MonoBehaviour
{
	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text errorText;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentMasterWindowsSwitcher windowsSwitcher;

	[Token(Token = "0x6001520")]
	[Address(RVA = "0x816504", Offset = "0x816504", VA = "0x816504")]
	public void SetErrorText(string errorMessage)
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0x81E3BC", Offset = "0x81E3BC", VA = "0x81E3BC")]
	public void OnBackButtonClick()
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0x81E3D8", Offset = "0x81E3D8", VA = "0x81E3D8")]
	public TournamentRoomCreatingErrorWindowController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000437")]
public class TournamentStageResults
{
	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<TournamentMatchClassification> matchesResults;

	[Token(Token = "0x6001523")]
	[Address(RVA = "0x81D07C", Offset = "0x81D07C", VA = "0x81D07C")]
	public TournamentStageResults()
	{
	}
}
[Token(Token = "0x2000438")]
public class TournamentTestingBotController : MonoBehaviourPun, IConnectionCallbacks, ILobbyCallbacks, IMatchmakingCallbacks
{
	[PreserveSig]
	[Token(Token = "0x6001524")]
	[Address(RVA = "0x81E3E0", Offset = "0x81E3E0", VA = "0x81E3E0")]
	public static extern bool SetWindowText(IntPtr hwnd, string lpString);

	[PreserveSig]
	[Token(Token = "0x6001525")]
	[Address(RVA = "0x81E484", Offset = "0x81E484", VA = "0x81E484")]
	public static extern IntPtr GetActiveWindow();

	[Token(Token = "0x6001526")]
	[Address(RVA = "0x81E4EC", Offset = "0x81E4EC", VA = "0x81E4EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0x81E544", Offset = "0x81E544", VA = "0x81E544")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0x81E59C", Offset = "0x81E59C", VA = "0x81E59C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001529")]
	[Address(RVA = "0x81E88C", Offset = "0x81E88C", VA = "0x81E88C", Slot = "4")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0x81E890", Offset = "0x81E890", VA = "0x81E890", Slot = "5")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x600152B")]
	[Address(RVA = "0x81E95C", Offset = "0x81E95C", VA = "0x81E95C", Slot = "6")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0x81E960", Offset = "0x81E960", VA = "0x81E960", Slot = "7")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0x81E964", Offset = "0x81E964", VA = "0x81E964", Slot = "8")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0x81E968", Offset = "0x81E968", VA = "0x81E968", Slot = "9")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0x81E96C", Offset = "0x81E96C", VA = "0x81E96C", Slot = "10")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0x81EBDC", Offset = "0x81EBDC", VA = "0x81EBDC", Slot = "11")]
	public void OnLeftLobby()
	{
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0x81EBE0", Offset = "0x81EBE0", VA = "0x81EBE0", Slot = "12")]
	public void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0x81EBE4", Offset = "0x81EBE4", VA = "0x81EBE4", Slot = "13")]
	public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0x81EBE8", Offset = "0x81EBE8", VA = "0x81EBE8", Slot = "14")]
	public void OnFriendListUpdate(List<FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0x81EBEC", Offset = "0x81EBEC", VA = "0x81EBEC", Slot = "15")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0x81EBF0", Offset = "0x81EBF0", VA = "0x81EBF0", Slot = "16")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0x81EBF4", Offset = "0x81EBF4", VA = "0x81EBF4", Slot = "17")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0x81EC5C", Offset = "0x81EC5C", VA = "0x81EC5C", Slot = "18")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001538")]
	[Address(RVA = "0x81EC60", Offset = "0x81EC60", VA = "0x81EC60", Slot = "19")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0x81EC64", Offset = "0x81EC64", VA = "0x81EC64", Slot = "20")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0x81EC68", Offset = "0x81EC68", VA = "0x81EC68")]
	public TournamentTestingBotController()
	{
	}
}
[Token(Token = "0x2000439")]
public class TournamentTimeController : MonoBehaviourPun
{
	[Token(Token = "0x200043A")]
	private sealed class <SynchronizeTimeOnlineCycleCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentTimeController <>4__this;

		[Token(Token = "0x1700024B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x81F7DC", Offset = "0x81F7DC", VA = "0x81F7DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001553")]
			[Address(RVA = "0x81F7E4", Offset = "0x81F7E4", VA = "0x81F7E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x81EEF8", Offset = "0x81EEF8", VA = "0x81EEF8")]
		[DebuggerHidden]
		public <SynchronizeTimeOnlineCycleCoroutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x81F6B8", Offset = "0x81F6B8", VA = "0x81F6B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x81F6BC", Offset = "0x81F6BC", VA = "0x81F6BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200043B")]
	private sealed class <IncreaseCurrentTimeByOneSecond>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TournamentTimeController <>4__this;

		[Token(Token = "0x1700024D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x81F8F8", Offset = "0x81F8F8", VA = "0x81F8F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x81F900", Offset = "0x81F900", VA = "0x81F900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x81F030", Offset = "0x81F030", VA = "0x81F030")]
		[DebuggerHidden]
		public <IncreaseCurrentTimeByOneSecond>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x81F7EC", Offset = "0x81F7EC", VA = "0x81F7EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x81F7F0", Offset = "0x81F7F0", VA = "0x81F7F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001776")]
	private const int secondsInDay = 86400;

	[Token(Token = "0x4001777")]
	private const int secondsInHour = 3600;

	[Token(Token = "0x4001778")]
	private const int hoursInDay = 24;

	[Token(Token = "0x4001779")]
	private const int minutesInHour = 60;

	[Token(Token = "0x400177A")]
	private const int minutesInDay = 1440;

	[Token(Token = "0x400177B")]
	private const float delayOfCycleSynchronizingTimeOnline = 120f;

	[Token(Token = "0x400177C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DateTime nextTournamentDate;

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static DateTime storedDateTime;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static TimeSpan enrollmentDuration;

	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static TimeSpan firstPreparationDuration;

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static TimeSpan preparationDuration;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static TimeSpan gameDuration;

	[Token(Token = "0x600153B")]
	[Address(RVA = "0x81EC70", Offset = "0x81EC70", VA = "0x81EC70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0x81ED08", Offset = "0x81ED08", VA = "0x81ED08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0x81EE10", Offset = "0x81EE10", VA = "0x81EE10")]
	private IEnumerator SynchronizeTimeOnlineCycleCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600153E")]
	[Address(RVA = "0x81EF20", Offset = "0x81EF20", VA = "0x81EF20")]
	private void SetStoredDateTime(DateTime dateTimeToSet)
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0x81EE84", Offset = "0x81EE84", VA = "0x81EE84")]
	private IEnumerator IncreaseCurrentTimeByOneSecond()
	{
		return null;
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0x81F058", Offset = "0x81F058", VA = "0x81F058")]
	[ContextMenu("CheckTimeToNextDate")]
	public static TimeSpan GetTimeToNextTournament()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0x81F120", Offset = "0x81F120", VA = "0x81F120")]
	private static TimeSpan GetTimeToNextTournamentWithNegative()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6001542")]
	[Address(RVA = "0x80DCC8", Offset = "0x80DCC8", VA = "0x80DCC8")]
	public static TimeSpan GetTimeToEnrollmentEnd()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0x81F17C", Offset = "0x81F17C", VA = "0x81F17C")]
	public static void SetEnrollmentFinish()
	{
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0x81F218", Offset = "0x81F218", VA = "0x81F218")]
	public static bool IsWaitingForEnrollment()
	{
		return default(bool);
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0x80E560", Offset = "0x80E560", VA = "0x80E560")]
	public static bool IsDuringEnrollment()
	{
		return default(bool);
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0x813C3C", Offset = "0x813C3C", VA = "0x813C3C")]
	public static bool IsDuringPreparation()
	{
		return default(bool);
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0x813DD0", Offset = "0x813DD0", VA = "0x813DD0")]
	public static TimeSpan GetTimeToPreparationEnd()
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0x814010", Offset = "0x814010", VA = "0x814010")]
	public static bool IsDuringGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0x81F3B0", Offset = "0x81F3B0", VA = "0x81F3B0")]
	private static bool GetIsDuringGame(DateTime gameStartTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0x81F2A8", Offset = "0x81F2A8", VA = "0x81F2A8")]
	public static TimeSpan GetPreparationDuration(bool isFirstPreparation)
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0x81F314", Offset = "0x81F314", VA = "0x81F314")]
	public static TimeSpan GetGameCycleDuration(bool isFirstPreparation)
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0x81F450", Offset = "0x81F450", VA = "0x81F450")]
	public static TimeSpan GetGameCyclesDurationFromEnrollmentEnd(int numberOfCycles)
	{
		return default(TimeSpan);
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0x81F548", Offset = "0x81F548", VA = "0x81F548")]
	public TournamentTimeController()
	{
	}
}
[Serializable]
[Token(Token = "0x200043C")]
public class TournamentTopPlayerSpot : MonoBehaviour
{
	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text rankSpot;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text playerNameSpot;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text playerStageSpot;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text playerKillsSpot;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text playerDeathsSpot;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text playerTotalKillsSpot;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text playerTotalDeathsSpot;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpriteRenderer qualifiedSprite;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpriteRenderer unqualifiedSprite;

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpriteRenderer goldMedal;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SpriteRenderer silverMedal;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SpriteRenderer bronzeMedal;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color remotePlayerColor;

	[Token(Token = "0x4001795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color localPlayerColor;

	[Token(Token = "0x4001796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color remoteNotQualifiedPlayerColor;

	[Token(Token = "0x4001797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color localNotQualifiedPlayerColor;

	[Token(Token = "0x4001798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string brackets;

	[Token(Token = "0x6001559")]
	[Address(RVA = "0x817860", Offset = "0x817860", VA = "0x817860")]
	public void SetTopPlayerSpot(int rank, TournamentPlayer player, bool isLocal)
	{
	}

	[Token(Token = "0x600155A")]
	[Address(RVA = "0x80EFF4", Offset = "0x80EFF4", VA = "0x80EFF4")]
	public void SetTopPlayerSpotInMainMenu(int rank, string playerName, string stage, string kills, string deaths, bool isFinalResult, bool isLocal)
	{
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0x81F97C", Offset = "0x81F97C", VA = "0x81F97C")]
	private void ShowMedal(int rank, bool isMainMenu)
	{
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0x81F908", Offset = "0x81F908", VA = "0x81F908")]
	private void SetStatusSpotBlank()
	{
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0x80F25C", Offset = "0x80F25C", VA = "0x80F25C")]
	public void SetSpotBlank()
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0x81F9F4", Offset = "0x81F9F4", VA = "0x81F9F4")]
	public TournamentTopPlayerSpot()
	{
	}
}
[Token(Token = "0x200043D")]
public static class UnixTimestampConverter
{
	[Token(Token = "0x4001799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DateTime unixEpoch;

	[Token(Token = "0x600155F")]
	[Address(RVA = "0x81FA4C", Offset = "0x81FA4C", VA = "0x81FA4C")]
	public static long ToUnixTimestamp(DateTime target)
	{
		return default(long);
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0x8112F4", Offset = "0x8112F4", VA = "0x8112F4")]
	public static DateTime FromUnixTimestamp(long target)
	{
		return default(DateTime);
	}
}
[Token(Token = "0x200043E")]
public class BonusPanelController : MonoBehaviour
{
	[Token(Token = "0x200043F")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ItemBonus itemBonus;

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x8203B0", Offset = "0x8203B0", VA = "0x8203B0")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x8203C0", Offset = "0x8203C0", VA = "0x8203C0")]
		internal bool <DisplayBonuses>b__0(BonusTypeWithFormatter x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x8203EC", Offset = "0x8203EC", VA = "0x8203EC")]
		internal bool <DisplayBonuses>b__1(BonusTranslation x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400179A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<BonusTypeWithFormatter> typesWithFormatters;

	[Token(Token = "0x400179B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ItemsWithBonuses itemBonusList;

	[Token(Token = "0x400179C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Text> bonusesTexts;

	[Token(Token = "0x400179D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ornamentImage;

	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject spacer;

	[Token(Token = "0x6001562")]
	[Address(RVA = "0x81FBAC", Offset = "0x81FBAC", VA = "0x81FBAC")]
	public void DisplayBonuses(ShopItem shopItem)
	{
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0x820214", Offset = "0x820214", VA = "0x820214")]
	private void DisableAllPanels()
	{
	}

	[Token(Token = "0x6001564")]
	[Address(RVA = "0x8203B8", Offset = "0x8203B8", VA = "0x8203B8")]
	public BonusPanelController()
	{
	}
}
[Token(Token = "0x2000440")]
public class EnemyIndicator : MonoBehaviour
{
	[Token(Token = "0x2000441")]
	private sealed class <RotateToTheTarget>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyIndicator <>4__this;

		[Token(Token = "0x17000250")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0x820AFC", Offset = "0x820AFC", VA = "0x820AFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0x820B04", Offset = "0x820B04", VA = "0x820B04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x820584", Offset = "0x820584", VA = "0x820584")]
		[DebuggerHidden]
		public <RotateToTheTarget>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x820A00", Offset = "0x820A00", VA = "0x820A00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x820A04", Offset = "0x820A04", VA = "0x820A04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000442")]
	private sealed class <DestroyCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyIndicator <>4__this;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x820C44", Offset = "0x820C44", VA = "0x820C44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0x820C4C", Offset = "0x820C4C", VA = "0x820C4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x820940", Offset = "0x820940", VA = "0x820940")]
		[DebuggerHidden]
		public <DestroyCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x820B0C", Offset = "0x820B0C", VA = "0x820B0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x820B10", Offset = "0x820B10", VA = "0x820B10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40017A0")]
	private const float fadeSpeed = 5f;

	[Token(Token = "0x40017A1")]
	private const float minAngleToShowIndicator = 40f;

	[Token(Token = "0x40017A2")]
	private const float indicatorMaxAlpha = 0.8f;

	[Token(Token = "0x40017A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x40017A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform rect;

	[Token(Token = "0x40017A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform <Target>k__BackingField;

	[Token(Token = "0x40017A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform player;

	[Token(Token = "0x40017A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion targetRotation;

	[Token(Token = "0x40017A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 targetPosition;

	[Token(Token = "0x1700024F")]
	public Transform Target
	{
		[Token(Token = "0x6001568")]
		[Address(RVA = "0x820418", Offset = "0x820418", VA = "0x820418")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001569")]
		[Address(RVA = "0x820420", Offset = "0x820420", VA = "0x820420")]
		private set
		{
		}
	}

	[Token(Token = "0x600156A")]
	[Address(RVA = "0x820428", Offset = "0x820428", VA = "0x820428")]
	public void ShowIndicator(Transform target, Transform player)
	{
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0x8204E4", Offset = "0x8204E4", VA = "0x8204E4")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0x820470", Offset = "0x820470", VA = "0x820470")]
	private IEnumerator RotateToTheTarget()
	{
		return null;
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0x8205AC", Offset = "0x8205AC", VA = "0x8205AC")]
	private void RotateIndicator()
	{
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0x8206C4", Offset = "0x8206C4", VA = "0x8206C4")]
	private void FadeIndicator()
	{
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0x820510", Offset = "0x820510", VA = "0x820510")]
	private IEnumerator DestroyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0x820968", Offset = "0x820968", VA = "0x820968")]
	public EnemyIndicator()
	{
	}
}
[Token(Token = "0x2000443")]
public class FastShootingLockIconSwitcher : MonoBehaviour
{
	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image fastShootingLockImage;

	[Token(Token = "0x40017B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite fastShootingLockedSprite;

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite fastShootingUnlockedSprite;

	[Token(Token = "0x600157B")]
	[Address(RVA = "0x820C54", Offset = "0x820C54", VA = "0x820C54")]
	[SerializeField]
	private void Awake()
	{
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0x820CF4", Offset = "0x820CF4", VA = "0x820CF4")]
	public FastShootingLockIconSwitcher()
	{
	}
}
[Token(Token = "0x2000444")]
public class GoldUI : GoldUICore
{
	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text _goldText;

	[Token(Token = "0x40017B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float StartingGold;

	[Token(Token = "0x17000254")]
	protected override Text goldText
	{
		[Token(Token = "0x600157D")]
		[Address(RVA = "0x820CFC", Offset = "0x820CFC", VA = "0x820CFC", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600157E")]
		[Address(RVA = "0x820D04", Offset = "0x820D04", VA = "0x820D04", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0x820D0C", Offset = "0x820D0C", VA = "0x820D0C", Slot = "6")]
	public override void DisplayGoldEarnedDuringGame()
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0x820E20", Offset = "0x820E20", VA = "0x820E20", Slot = "7")]
	public override void InitGoldUI()
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0x820EB4", Offset = "0x820EB4", VA = "0x820EB4")]
	public GoldUI()
	{
	}
}
[Token(Token = "0x2000445")]
public class LobbyFastShootingLockSwitcher : MonoBehaviour
{
	[Token(Token = "0x40017B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject columnHeadersWithLock;

	[Token(Token = "0x40017B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject columnHeadersWithoutLock;

	[Token(Token = "0x40017B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ServerListController serverListController;

	[Token(Token = "0x40017B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject serverListElementPrefabWithLock;

	[Token(Token = "0x40017B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject serverListElementPrefabWithoutLock;

	[Token(Token = "0x6001582")]
	[Address(RVA = "0x820EBC", Offset = "0x820EBC", VA = "0x820EBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001583")]
	[Address(RVA = "0x820F80", Offset = "0x820F80", VA = "0x820F80")]
	public LobbyFastShootingLockSwitcher()
	{
	}
}
[Token(Token = "0x2000446")]
public class SpellsWindowUI : MonoBehaviour
{
	[Token(Token = "0x40017B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellsMenuController spellsMenuController;

	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text spellNameText;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text descriptionText;

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text cooldownText;

	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text levelText;

	[Token(Token = "0x40017BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LevelUI levelIndicator;

	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject levelInfoGO;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject useButton;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject learnButton;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text spellPointsLeftText;

	[Token(Token = "0x17000255")]
	public GameObject LearnButton
	{
		[Token(Token = "0x6001584")]
		[Address(RVA = "0x820F88", Offset = "0x820F88", VA = "0x820F88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000256")]
	public GameObject UseButton
	{
		[Token(Token = "0x6001585")]
		[Address(RVA = "0x820F90", Offset = "0x820F90", VA = "0x820F90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000257")]
	public Text SpellPointsLeftText
	{
		[Token(Token = "0x6001586")]
		[Address(RVA = "0x820F98", Offset = "0x820F98", VA = "0x820F98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0x820FA0", Offset = "0x820FA0", VA = "0x820FA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0x82104C", Offset = "0x82104C", VA = "0x82104C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0x8210D8", Offset = "0x8210D8", VA = "0x8210D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0x821140", Offset = "0x821140", VA = "0x821140")]
	public void UpdateWindowReference()
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0x8211AC", Offset = "0x8211AC", VA = "0x8211AC")]
	public void SetSpellDesription(AbilityType abilityType)
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0x8215F4", Offset = "0x8215F4", VA = "0x8215F4")]
	public void UpdateLevel()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0x82166C", Offset = "0x82166C", VA = "0x82166C")]
	public void UpdateButtonsState(bool state)
	{
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0x8216B0", Offset = "0x8216B0", VA = "0x8216B0")]
	private void EnableUseButton()
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0x821484", Offset = "0x821484", VA = "0x821484")]
	private int GetAbilityLevel(IAbility spell, AbilityType abilityType)
	{
		return default(int);
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0x8216D0", Offset = "0x8216D0", VA = "0x8216D0")]
	public SpellsWindowUI()
	{
	}
}
[Token(Token = "0x2000447")]
public class PauseWindowDController : WindowController
{
	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject startButton;

	[Token(Token = "0x6001591")]
	[Address(RVA = "0x8216D8", Offset = "0x8216D8", VA = "0x8216D8")]
	public void OnStart()
	{
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0x821710", Offset = "0x821710", VA = "0x821710")]
	public void OnContinue()
	{
	}

	[Token(Token = "0x6001593")]
	[Address(RVA = "0x821730", Offset = "0x821730", VA = "0x821730")]
	public void OnSettings()
	{
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0x8217B0", Offset = "0x8217B0", VA = "0x8217B0")]
	public void OnTester()
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0x821830", Offset = "0x821830", VA = "0x821830")]
	public void OnQuit()
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0x8218B0", Offset = "0x8218B0", VA = "0x8218B0")]
	public PauseWindowDController()
	{
	}
}
[Token(Token = "0x2000448")]
public class AssignSpellsWindowController : WindowController
{
	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellSlot leftSpellSlot;

	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SpellSlot rightSpellSlot;

	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SpellSlot topSpellSlot;

	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SpellSlot bottomSpellSlot;

	[Token(Token = "0x6001597")]
	[Address(RVA = "0x8218B8", Offset = "0x8218B8", VA = "0x8218B8")]
	public void OnLeftQuater()
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0x8218D4", Offset = "0x8218D4", VA = "0x8218D4")]
	public void OnRightQuater()
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0x8218F0", Offset = "0x8218F0", VA = "0x8218F0")]
	public void OnTopQuater()
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0x82190C", Offset = "0x82190C", VA = "0x82190C")]
	public void OnBottomQuater()
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0x821928", Offset = "0x821928", VA = "0x821928")]
	public void OnBack()
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0x8219D0", Offset = "0x8219D0", VA = "0x8219D0")]
	public AssignSpellsWindowController()
	{
	}
}
[Token(Token = "0x2000449")]
public class NeedMorePointsWindowController : WindowController
{
	[Token(Token = "0x600159D")]
	[Address(RVA = "0x8219D8", Offset = "0x8219D8", VA = "0x8219D8")]
	public void OnOk()
	{
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0x821A48", Offset = "0x821A48", VA = "0x821A48")]
	public NeedMorePointsWindowController()
	{
	}
}
[Token(Token = "0x200044A")]
public class ResetSpellsWindowController : WindowController
{
	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellsResetController spellsResetController;

	[Token(Token = "0x600159F")]
	[Address(RVA = "0x821A50", Offset = "0x821A50", VA = "0x821A50")]
	public void OnYes()
	{
	}

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0x821AD0", Offset = "0x821AD0", VA = "0x821AD0")]
	public void OnNo()
	{
	}

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0x821B40", Offset = "0x821B40", VA = "0x821B40")]
	public ResetSpellsWindowController()
	{
	}
}
[Token(Token = "0x200044B")]
public class SpellsWindowController : WindowController
{
	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellsMenuController spellsMenuController;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private WindowType spellsWindow;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AbilityType firstAbilityType;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AbilityType secondAbilityType;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private AbilityType thirdAbilityType;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AbilityType fourthAbilityType;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private AbilityType fifthAbilityType;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text infoText;

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0x821B48", Offset = "0x821B48", VA = "0x821B48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0x821BB0", Offset = "0x821BB0", VA = "0x821BB0")]
	public void OnPickFirstSpell()
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0x821BD4", Offset = "0x821BD4", VA = "0x821BD4")]
	public void OnPickSecondSpell()
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0x821BF8", Offset = "0x821BF8", VA = "0x821BF8")]
	public void OnPickThirdSpell()
	{
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0x821C1C", Offset = "0x821C1C", VA = "0x821C1C")]
	public void OnPickFourthSpell()
	{
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0x821C40", Offset = "0x821C40", VA = "0x821C40")]
	public void OnPickFifthSpell()
	{
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0x821C64", Offset = "0x821C64", VA = "0x821C64")]
	public void OnSpellsWindow()
	{
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0x821CD8", Offset = "0x821CD8", VA = "0x821CD8")]
	public void OnLearn()
	{
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0x821CF4", Offset = "0x821CF4", VA = "0x821CF4")]
	public void OnUse()
	{
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0x821DEC", Offset = "0x821DEC", VA = "0x821DEC")]
	public void OnReset()
	{
	}

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0x821E4C", Offset = "0x821E4C", VA = "0x821E4C")]
	public SpellsWindowController()
	{
	}
}
[Token(Token = "0x200044C")]
public class TesterWindowDController : WindowController
{
	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TesterDeathMatch testerDeathMatch;

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0x821E54", Offset = "0x821E54", VA = "0x821E54")]
	public void OnSetShortTime()
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0x821E70", Offset = "0x821E70", VA = "0x821E70")]
	public void OnSetMuchosTime()
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0x821E8C", Offset = "0x821E8C", VA = "0x821E8C")]
	public void OnSetDefaultTime()
	{
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0x821EA8", Offset = "0x821EA8", VA = "0x821EA8")]
	public void OnBack()
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0x821F28", Offset = "0x821F28", VA = "0x821F28")]
	public void SetLowResolution()
	{
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0x821F30", Offset = "0x821F30", VA = "0x821F30")]
	public TesterWindowDController()
	{
	}
}
[Token(Token = "0x200044D")]
public class TesterWindowWController : WindowController
{
	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TesterMenu testerMenu;

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0x821F38", Offset = "0x821F38", VA = "0x821F38")]
	public void OnGiveCastleMuchosHealth()
	{
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0x821F54", Offset = "0x821F54", VA = "0x821F54")]
	public void OnGiveCastleFullHealth()
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0x821F70", Offset = "0x821F70", VA = "0x821F70")]
	public void OnGiveCastleOneHealth()
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0x821F8C", Offset = "0x821F8C", VA = "0x821F8C")]
	public void OnSetNormalTrolls()
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0x821FA8", Offset = "0x821FA8", VA = "0x821FA8")]
	public void OnSetBlackTrolls()
	{
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0x821FC4", Offset = "0x821FC4", VA = "0x821FC4")]
	public void OnSetWyverns()
	{
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0x821FE0", Offset = "0x821FE0", VA = "0x821FE0")]
	public void OnSetRedDragons()
	{
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0x821FFC", Offset = "0x821FFC", VA = "0x821FFC")]
	public void OnSetGreenDragons()
	{
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0x822018", Offset = "0x822018", VA = "0x822018")]
	public void OnSetNormalAxemans()
	{
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0x822034", Offset = "0x822034", VA = "0x822034")]
	public void OnSetRedAxemans()
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0x822050", Offset = "0x822050", VA = "0x822050")]
	public void OnPlayerImmortal()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0x82206C", Offset = "0x82206C", VA = "0x82206C")]
	public void OnBoostGameSpeed()
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0x822088", Offset = "0x822088", VA = "0x822088")]
	public void OnAutoShoot()
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x8220A4", Offset = "0x8220A4", VA = "0x8220A4")]
	public void OnSetGizmo()
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x8220C0", Offset = "0x8220C0", VA = "0x8220C0")]
	public void OnSetKanit()
	{
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0x8220DC", Offset = "0x8220DC", VA = "0x8220DC")]
	public void OnSetGnur()
	{
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0x8220F8", Offset = "0x8220F8", VA = "0x8220F8")]
	public void OnSetTestingRoutes()
	{
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0x822114", Offset = "0x822114", VA = "0x822114")]
	public void OnSkipWave()
	{
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0x822194", Offset = "0x822194", VA = "0x822194")]
	public void OnAddPoints(int points)
	{
	}

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0x8221C0", Offset = "0x8221C0", VA = "0x8221C0")]
	public void OnRevertToNormalWaves()
	{
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0x8221DC", Offset = "0x8221DC", VA = "0x8221DC")]
	public void OnFinishWave()
	{
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0x8221F8", Offset = "0x8221F8", VA = "0x8221F8")]
	public void OnTestGold()
	{
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0x822214", Offset = "0x822214", VA = "0x822214")]
	public void OnBack()
	{
	}

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0x822294", Offset = "0x822294", VA = "0x822294")]
	public void SetLowResolution()
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x82229C", Offset = "0x82229C", VA = "0x82229C")]
	public TesterWindowWController()
	{
	}
}
[Token(Token = "0x200044E")]
public class WaveChooserWindowController : WindowController
{
	[Token(Token = "0x40017D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TesterMenu testerMenu;

	[Token(Token = "0x40017D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text waveNumber;

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x8222A4", Offset = "0x8222A4", VA = "0x8222A4")]
	public void OnBack()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x822318", Offset = "0x822318", VA = "0x822318")]
	public void OnSetWave()
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0x8223BC", Offset = "0x8223BC", VA = "0x8223BC")]
	public void OnSetWaveAndSkipCurrent()
	{
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0x822460", Offset = "0x822460", VA = "0x822460")]
	public WaveChooserWindowController()
	{
	}
}
[Token(Token = "0x200044F")]
public class UIDebug : MonoBehaviour
{
	[Token(Token = "0x40017D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera playerCamera;

	[Token(Token = "0x40017D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RaycastHit _rayHit;

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x822468", Offset = "0x822468", VA = "0x822468")]
	private void Start()
	{
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0x8224D4", Offset = "0x8224D4", VA = "0x8224D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0x822624", Offset = "0x822624", VA = "0x822624")]
	public UIDebug()
	{
	}
}
[Token(Token = "0x2000450")]
public class TransformInfo
{
	[Token(Token = "0x40017D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x40017D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion rotation;

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0x82262C", Offset = "0x82262C", VA = "0x82262C")]
	public TransformInfo(Vector3 _position, Quaternion _rotation)
	{
	}
}
[Token(Token = "0x2000451")]
public interface IVoting
{
	[Token(Token = "0x17000258")]
	Action OnVotingForceFinish
	{
		[Token(Token = "0x60015D4")]
		get;
		[Token(Token = "0x60015D5")]
		set;
	}

	[Token(Token = "0x17000259")]
	Action OnVotingEffectFinish
	{
		[Token(Token = "0x60015D6")]
		get;
		[Token(Token = "0x60015D7")]
		set;
	}

	[Token(Token = "0x1700025A")]
	Action OnVotingPossible
	{
		[Token(Token = "0x60015D8")]
		get;
		[Token(Token = "0x60015D9")]
		set;
	}

	[Token(Token = "0x1700025B")]
	Action OnVotingImpossible
	{
		[Token(Token = "0x60015DA")]
		get;
		[Token(Token = "0x60015DB")]
		set;
	}

	[Token(Token = "0x60015DC")]
	string GetStartVotingMessage(Player requestingPlayer);

	[Token(Token = "0x60015DD")]
	bool GetVotingResult(Vote[] votes);

	[Token(Token = "0x60015DE")]
	string GetVotingSuccessMessage();

	[Token(Token = "0x60015DF")]
	string GetVotingFailedMessage();

	[Token(Token = "0x60015E0")]
	void ApplyEffect(bool isForced);
}
[Token(Token = "0x2000452")]
public class PauseVoting : MonoBehaviour, IVoting
{
	[Token(Token = "0x40017D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VotedPauseController votedPauseController;

	[Token(Token = "0x40017DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action <OnVotingForceFinish>k__BackingField;

	[Token(Token = "0x40017DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action <OnVotingEffectFinish>k__BackingField;

	[Token(Token = "0x40017DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action <OnVotingPossible>k__BackingField;

	[Token(Token = "0x40017DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action <OnVotingImpossible>k__BackingField;

	[Token(Token = "0x1700025C")]
	public Action OnVotingForceFinish
	{
		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x822690", Offset = "0x822690", VA = "0x822690", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x822698", Offset = "0x822698", VA = "0x822698", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700025D")]
	public Action OnVotingEffectFinish
	{
		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x8226A0", Offset = "0x8226A0", VA = "0x8226A0", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x8226A8", Offset = "0x8226A8", VA = "0x8226A8", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700025E")]
	public Action OnVotingPossible
	{
		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x8226B0", Offset = "0x8226B0", VA = "0x8226B0", Slot = "8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x8226B8", Offset = "0x8226B8", VA = "0x8226B8", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x1700025F")]
	public Action OnVotingImpossible
	{
		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x8226C0", Offset = "0x8226C0", VA = "0x8226C0", Slot = "10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x8226C8", Offset = "0x8226C8", VA = "0x8226C8", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0x8226D0", Offset = "0x8226D0", VA = "0x8226D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x822A18", Offset = "0x822A18", VA = "0x822A18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x822D60", Offset = "0x822D60", VA = "0x822D60", Slot = "16")]
	public void ApplyEffect(bool isForced)
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x822D8C", Offset = "0x822D8C", VA = "0x822D8C", Slot = "12")]
	public string GetStartVotingMessage(Player requestingPlayer)
	{
		return null;
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x822E24", Offset = "0x822E24", VA = "0x822E24", Slot = "15")]
	public string GetVotingFailedMessage()
	{
		return null;
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x822E6C", Offset = "0x822E6C", VA = "0x822E6C", Slot = "13")]
	public bool GetVotingResult(Vote[] votes)
	{
		return default(bool);
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0x822F30", Offset = "0x822F30", VA = "0x822F30", Slot = "14")]
	public string GetVotingSuccessMessage()
	{
		return null;
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0x822F78", Offset = "0x822F78", VA = "0x822F78")]
	private void OnWaveEnded(int obj)
	{
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x822F94", Offset = "0x822F94", VA = "0x822F94")]
	private void OnVotedPauseFinish()
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x822FB0", Offset = "0x822FB0", VA = "0x822FB0")]
	private void OnGameFinished()
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x822FCC", Offset = "0x822FCC", VA = "0x822FCC")]
	private void OnGameStarted()
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x822FE8", Offset = "0x822FE8", VA = "0x822FE8")]
	public PauseVoting()
	{
	}
}
[Token(Token = "0x2000453")]
public class Vote
{
	[Token(Token = "0x40017DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Player Voter;

	[Token(Token = "0x40017DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VoteType voteType;

	[Token(Token = "0x17000260")]
	public VoteType VoteType
	{
		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x823128", Offset = "0x823128", VA = "0x823128")]
		get
		{
			return default(VoteType);
		}
		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x823130", Offset = "0x823130", VA = "0x823130")]
		set
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event Action OnVoteChange
	{
		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x822FF0", Offset = "0x822FF0", VA = "0x822FF0")]
		add
		{
		}
		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x82308C", Offset = "0x82308C", VA = "0x82308C")]
		remove
		{
		}
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x82315C", Offset = "0x82315C", VA = "0x82315C")]
	public void SetValuesFrom(Vote vote)
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x8231C8", Offset = "0x8231C8", VA = "0x8231C8")]
	public void Reset()
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x823208", Offset = "0x823208", VA = "0x823208")]
	public Vote()
	{
	}
}
[Token(Token = "0x2000454")]
public class VoteController : MonoBehaviourPun
{
	[Token(Token = "0x40017E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VotingController votingController;

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x823210", Offset = "0x823210", VA = "0x823210")]
	public void VoteYes()
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x823244", Offset = "0x823244", VA = "0x823244")]
	public void VoteNo()
	{
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0x82322C", Offset = "0x82322C", VA = "0x82322C")]
	private void Vote(VoteType voteType)
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0x8233F8", Offset = "0x8233F8", VA = "0x8233F8")]
	public VoteController()
	{
	}
}
[Token(Token = "0x2000455")]
public enum VoteType
{
	[Token(Token = "0x40017E3")]
	NoOpinion,
	[Token(Token = "0x40017E4")]
	Yes,
	[Token(Token = "0x40017E5")]
	No
}
[Token(Token = "0x2000456")]
public class VotingController : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x40017E6")]
	private const float MessageTime = 6f;

	[Token(Token = "0x40017E7")]
	private const float MessageDistance = 2f;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEngine.Object votingObject;

	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IVoting voting;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vote[] votes;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VotingState votingState;

	[Token(Token = "0x40017EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool <HasBeenVoting>k__BackingField;

	[Token(Token = "0x40017F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Player <RequestingPlayer>k__BackingField;

	[Token(Token = "0x17000261")]
	private Action<PlayerControllerCore> OnPlayerRemovedWithPlayer
	{
		[Token(Token = "0x6001600")]
		[Address(RVA = "0x823400", Offset = "0x823400", VA = "0x823400")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000262")]
	public Vote[] Votes
	{
		[Token(Token = "0x6001601")]
		[Address(RVA = "0x82347C", Offset = "0x82347C", VA = "0x82347C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000263")]
	public bool HasBeenVoting
	{
		[Token(Token = "0x6001608")]
		[Address(RVA = "0x82382C", Offset = "0x82382C", VA = "0x82382C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001609")]
		[Address(RVA = "0x823834", Offset = "0x823834", VA = "0x823834")]
		private set
		{
		}
	}

	[Token(Token = "0x17000264")]
	public Player RequestingPlayer
	{
		[Token(Token = "0x600160A")]
		[Address(RVA = "0x823840", Offset = "0x823840", VA = "0x823840")]
		get
		{
			return null;
		}
		[Token(Token = "0x600160B")]
		[Address(RVA = "0x823848", Offset = "0x823848", VA = "0x823848")]
		private set
		{
		}
	}

	[Token(Token = "0x17000265")]
	public IVoting Voting
	{
		[Token(Token = "0x600160C")]
		[Address(RVA = "0x823850", Offset = "0x823850", VA = "0x823850")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000266")]
	public VotingState VotingState
	{
		[Token(Token = "0x600160D")]
		[Address(RVA = "0x823858", Offset = "0x823858", VA = "0x823858")]
		get
		{
			return default(VotingState);
		}
		[Token(Token = "0x600160E")]
		[Address(RVA = "0x823860", Offset = "0x823860", VA = "0x823860")]
		private set
		{
		}
	}

	[Token(Token = "0x17000267")]
	public VoteType LocalVoteType
	{
		[Token(Token = "0x600160F")]
		[Address(RVA = "0x8238AC", Offset = "0x8238AC", VA = "0x8238AC")]
		get
		{
			return default(VoteType);
		}
	}

	[Token(Token = "0x1400002D")]
	public event Action OnStateChanged
	{
		[Token(Token = "0x6001602")]
		[Address(RVA = "0x823484", Offset = "0x823484", VA = "0x823484")]
		add
		{
		}
		[Token(Token = "0x6001603")]
		[Address(RVA = "0x823520", Offset = "0x823520", VA = "0x823520")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event Action OnVotesChange
	{
		[Token(Token = "0x6001604")]
		[Address(RVA = "0x8235BC", Offset = "0x8235BC", VA = "0x8235BC")]
		add
		{
		}
		[Token(Token = "0x6001605")]
		[Address(RVA = "0x823658", Offset = "0x823658", VA = "0x823658")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event Action OnDisableVoting
	{
		[Token(Token = "0x6001606")]
		[Address(RVA = "0x8236F4", Offset = "0x8236F4", VA = "0x8236F4")]
		add
		{
		}
		[Token(Token = "0x6001607")]
		[Address(RVA = "0x823790", Offset = "0x823790", VA = "0x823790")]
		remove
		{
		}
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0x823980", Offset = "0x823980", VA = "0x823980")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0x823B90", Offset = "0x823B90", VA = "0x823B90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x824108", Offset = "0x824108", VA = "0x824108")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x8246B0", Offset = "0x8246B0", VA = "0x8246B0")]
	public void RequestVoting()
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0x823260", Offset = "0x823260", VA = "0x823260")]
	public void Vote(VoteType voteType)
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0x8247C4", Offset = "0x8247C4", VA = "0x8247C4")]
	public int GetVotesCount(VoteType voteType)
	{
		return default(int);
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x824828", Offset = "0x824828", VA = "0x824828")]
	private void EnableRequesting()
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x8248C8", Offset = "0x8248C8", VA = "0x8248C8")]
	private void DisableVoting()
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x824900", Offset = "0x824900", VA = "0x824900")]
	private void FinishVoting(bool isForced)
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0x824BE0", Offset = "0x824BE0", VA = "0x824BE0")]
	[PunRPC]
	private void RPCRequestVoting(Player requestingPlayer)
	{
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0x824EFC", Offset = "0x824EFC", VA = "0x824EFC")]
	[PunRPC]
	private void RPCVote(Player voter, VoteType voteType)
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0x825064", Offset = "0x825064", VA = "0x825064")]
	private void MoveVotesLeft(int startIndex)
	{
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0x824FBC", Offset = "0x824FBC", VA = "0x824FBC")]
	private bool GetAreAllPlayersVoted()
	{
		return default(bool);
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0x8250F0", Offset = "0x8250F0", VA = "0x8250F0")]
	private void CallOnVotesChangeEvent()
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x82510C", Offset = "0x82510C", VA = "0x82510C")]
	private void OnVotingForceFinish()
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0x825188", Offset = "0x825188", VA = "0x825188")]
	private void OnVotingEffectFinish()
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0x825218", Offset = "0x825218", VA = "0x825218")]
	private void OnPlayerAdded(PlayerControllerCore player)
	{
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0x825308", Offset = "0x825308", VA = "0x825308")]
	private void OnPlayerRemoved()
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0x82542C", Offset = "0x82542C", VA = "0x82542C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0x825738", Offset = "0x825738", VA = "0x825738")]
	public VotingController()
	{
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0x825740", Offset = "0x825740", VA = "0x825740")]
	private void <get_OnPlayerRemovedWithPlayer>b__3_0(PlayerControllerCore player)
	{
	}
}
[Token(Token = "0x2000457")]
public class VotingRequestController : MonoBehaviourPun
{
	[Token(Token = "0x40017F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VotingController votingController;

	[Token(Token = "0x6001625")]
	[Address(RVA = "0x825744", Offset = "0x825744", VA = "0x825744")]
	public void RequestVoting()
	{
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0x82575C", Offset = "0x82575C", VA = "0x82575C")]
	public VotingRequestController()
	{
	}
}
[Token(Token = "0x2000458")]
public enum VotingState
{
	[Token(Token = "0x40017F3")]
	NotAvailable,
	[Token(Token = "0x40017F4")]
	Requesting,
	[Token(Token = "0x40017F5")]
	Voting,
	[Token(Token = "0x40017F6")]
	VotingSuccessfull
}
[Token(Token = "0x2000459")]
public class VotingVisualsController : MonoBehaviour
{
	[Token(Token = "0x40017F7")]
	private const float MessageTime = 6f;

	[Token(Token = "0x40017F8")]
	private const float MessageDistance = 2f;

	[Token(Token = "0x40017F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VotingController votingController;

	[Token(Token = "0x40017FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject votingGUI;

	[Token(Token = "0x40017FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject votedYesGUI;

	[Token(Token = "0x40017FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject votedNoGUI;

	[Token(Token = "0x40017FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject votingSuccessGUI;

	[Token(Token = "0x40017FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject votingResultGUI;

	[Token(Token = "0x40017FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text yesCounterText;

	[Token(Token = "0x4001800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text noCounterText;

	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject requestVotingGUI;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Color yesVoteColor;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Color noVoteColor;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Color neutralVoteColor;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private List<Image> voteIndicatorImages;

	[Token(Token = "0x6001627")]
	[Address(RVA = "0x825764", Offset = "0x825764", VA = "0x825764")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0x825884", Offset = "0x825884", VA = "0x825884")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x8259A4", Offset = "0x8259A4", VA = "0x8259A4")]
	private void UpdateGUIToState()
	{
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x825A40", Offset = "0x825A40", VA = "0x825A40")]
	private void ShowProperGUI(VotingState votingState)
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x825F80", Offset = "0x825F80", VA = "0x825F80")]
	private void ShowVotingGUI()
	{
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0x825D50", Offset = "0x825D50", VA = "0x825D50")]
	private void PrepareVotesIndicators()
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0x8259CC", Offset = "0x8259CC", VA = "0x8259CC")]
	private void DisableGUIs()
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0x825FBC", Offset = "0x825FBC", VA = "0x825FBC")]
	private void UpdateGUIToVotes()
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0x825FFC", Offset = "0x825FFC", VA = "0x825FFC")]
	private void SetVotingIndicators()
	{
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0x826144", Offset = "0x826144", VA = "0x826144")]
	private void DisableRequestVotingGUI()
	{
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0x826164", Offset = "0x826164", VA = "0x826164")]
	public VotingVisualsController()
	{
	}
}
[Token(Token = "0x200045A")]
public class VRoteinManager : MonoBehaviour
{
	[Token(Token = "0x6001632")]
	[Address(RVA = "0x82616C", Offset = "0x82616C", VA = "0x82616C")]
	public VRoteinManager()
	{
	}
}
[Token(Token = "0x200045B")]
public class WaterfallSoundDelayer : MonoBehaviour
{
	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource waterfall;

	[Token(Token = "0x6001633")]
	[Address(RVA = "0x826174", Offset = "0x826174", VA = "0x826174")]
	private void Start()
	{
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0x8261C8", Offset = "0x8261C8", VA = "0x8261C8")]
	private void ActivateDelayed()
	{
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0x8261E8", Offset = "0x8261E8", VA = "0x8261E8")]
	public WaterfallSoundDelayer()
	{
	}
}
[Token(Token = "0x200045C")]
public enum EquipmentItemType
{
	[Token(Token = "0x4001808")]
	Bow,
	[Token(Token = "0x4001809")]
	Helmet,
	[Token(Token = "0x400180A")]
	BowAndHelmet
}
[Token(Token = "0x200045D")]
public enum EquipmentItemKey
{
	[Token(Token = "0x400180C")]
	Bow_WoodenBow_Default,
	[Token(Token = "0x400180D")]
	Bow_SteelDefender,
	[Token(Token = "0x400180E")]
	Bow_NaturesCall,
	[Token(Token = "0x400180F")]
	Bow_BowOfAlliance,
	[Token(Token = "0x4001810")]
	Helmet_Barbuta_default,
	[Token(Token = "0x4001811")]
	Helmet_ArchersHelmet,
	[Token(Token = "0x4001812")]
	Helmet_GiftOfTheSea,
	[Token(Token = "0x4001813")]
	Helmet_HelmetOfAncestors,
	[Token(Token = "0x4001814")]
	Helmet_GriffinHelmet,
	[Token(Token = "0x4001815")]
	Set_ForestGuardian,
	[Token(Token = "0x4001816")]
	Set_OrcHunter,
	[Token(Token = "0x4001817")]
	Set_HolySet,
	[Token(Token = "0x4001818")]
	Set_FrozenTouch
}
[Token(Token = "0x200045E")]
public class ShopController : MonoBehaviour
{
	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ShopItemsController shopItemsController;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EquipmentChangesManager equipmentChangesManager;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject useButton;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject buyButton;

	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text boughtText;

	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject currentBowSelection;

	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text playerGold;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject infoWindow;

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text infoWindowText;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject boughtMark;

	[Token(Token = "0x6001636")]
	[Address(RVA = "0x8261F0", Offset = "0x8261F0", VA = "0x8261F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0x8263B4", Offset = "0x8263B4", VA = "0x8263B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0x826324", Offset = "0x826324", VA = "0x826324")]
	public void UpdatePlayerGoldInShopInfoBoard()
	{
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0x8264E0", Offset = "0x8264E0", VA = "0x8264E0")]
	public void UpdatePlayerGoldInShopInfoBoard(int gold)
	{
	}

	[Token(Token = "0x600163A")]
	[Address(RVA = "0x826528", Offset = "0x826528", VA = "0x826528")]
	public void BuyItem()
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0x826650", Offset = "0x826650", VA = "0x826650")]
	public void UseItem()
	{
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x826944", Offset = "0x826944", VA = "0x826944")]
	private void ChangeEquipment(EquipmentChangesManager equipmentChangesManager)
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x8269C8", Offset = "0x8269C8", VA = "0x8269C8")]
	public void GoToPreviousItem()
	{
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x826AB4", Offset = "0x826AB4", VA = "0x826AB4")]
	public void GoToNextItem()
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x826880", Offset = "0x826880", VA = "0x826880")]
	public void RefreshShopButtonsInfo()
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x826834", Offset = "0x826834", VA = "0x826834")]
	public void ShowInfoWindow(string info)
	{
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x826AD0", Offset = "0x826AD0", VA = "0x826AD0")]
	public ShopController()
	{
	}
}
[Token(Token = "0x200045F")]
public class ShopItemsController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000460")]
	private sealed class <>c
	{
		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<ShopItem> <>9__15_0;

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x8270E0", Offset = "0x8270E0", VA = "0x8270E0")]
		public <>c()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x8270E8", Offset = "0x8270E8", VA = "0x8270E8")]
		internal void <SetFreeItemsInShop>b__15_0(ShopItem item)
		{
		}
	}

	[Token(Token = "0x2000461")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string equipmentItemKey;

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x827060", Offset = "0x827060", VA = "0x827060")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x827100", Offset = "0x827100", VA = "0x827100")]
		internal bool <GetIndexOfItem>b__0(ShopItem item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShopController shopController;

	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShopItem currentItem;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ShopItem previousItem;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text descriptionText;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text costText;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text currentBowNumberText;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text numberOfItems;

	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text nameText;

	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<ShopItem> shopItems;

	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BonusPanelController bonusPanelController;

	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentItemNumber;

	[Token(Token = "0x6001642")]
	[Address(RVA = "0x826AD8", Offset = "0x826AD8", VA = "0x826AD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x826FA0", Offset = "0x826FA0", VA = "0x826FA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x826D5C", Offset = "0x826D5C", VA = "0x826D5C")]
	private void ShowItem(ShopItem shopItem)
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x827018", Offset = "0x827018", VA = "0x827018")]
	private bool CheckIfCanSetFreeItemsInShop()
	{
		return default(bool);
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x826E98", Offset = "0x826E98", VA = "0x826E98")]
	private void SetFreeItemsInShop()
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x826A1C", Offset = "0x826A1C", VA = "0x826A1C")]
	public void ChangeItem(int shift)
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0x826C50", Offset = "0x826C50", VA = "0x826C50")]
	public int GetIndexOfItem(string equipmentItemKey)
	{
		return default(int);
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0x827068", Offset = "0x827068", VA = "0x827068")]
	public ShopItemsController()
	{
	}
}
[Token(Token = "0x2000462")]
public class SiegeTowerController : MonoBehaviour
{
	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isMovingTowardsGate;

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool hasReachedDestination;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool hasOpenedDoors;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float positionFromStartingToDestination;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float angleFromStartingToDestination;

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float movementSpeed;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform destinationTransform;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform doorsTransform;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RoutePoint jumpingRoutePoint;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 startingPosition;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startingRotation;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 destinationRotation;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float doorAngleRotation;

	[Token(Token = "0x600164F")]
	[Address(RVA = "0x827184", Offset = "0x827184", VA = "0x827184")]
	private void Start()
	{
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0x827224", Offset = "0x827224", VA = "0x827224")]
	private void MovingTowardsTheGate()
	{
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0x827304", Offset = "0x827304", VA = "0x827304")]
	private void OpeningSiegeDoor()
	{
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0x82739C", Offset = "0x82739C", VA = "0x82739C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0x8273C0", Offset = "0x8273C0", VA = "0x8273C0")]
	public SiegeTowerController()
	{
	}
}
[Token(Token = "0x2000463")]
public class LODSwitcher : MonoBehaviour
{
	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh[] lodMeshes;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] lodGameObjects;

	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] lodScreenSizes;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float deactivateAtDistance;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera customCamera;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter meshFilter;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 centerOffset;

	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float pixelsPerMeter;

	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float objectSize;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int fixedLODLevel;

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int lodLevel;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int frameOffset;

	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int frameInterval;

	[Token(Token = "0x6001654")]
	[Address(RVA = "0x8283E4", Offset = "0x8283E4", VA = "0x8283E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0x828924", Offset = "0x828924", VA = "0x828924")]
	public void ComputeDimensions()
	{
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0x8290C0", Offset = "0x8290C0", VA = "0x8290C0")]
	public void SetCustomCamera(Camera aCamera)
	{
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0x8290DC", Offset = "0x8290DC", VA = "0x8290DC")]
	public void SetFixedLODLevel(int aLevel)
	{
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0x829114", Offset = "0x829114", VA = "0x829114")]
	public void ReleaseFixedLODLevel()
	{
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0x829120", Offset = "0x829120", VA = "0x829120")]
	public int GetLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0x8290FC", Offset = "0x8290FC", VA = "0x8290FC")]
	public int MaxLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x829128", Offset = "0x829128", VA = "0x829128")]
	public Mesh GetMesh(int aLevel)
	{
		return null;
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x829160", Offset = "0x829160", VA = "0x829160")]
	public void SetMesh(Mesh aMesh, int aLevel)
	{
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x829300", Offset = "0x829300", VA = "0x829300")]
	public void SetRelativeScreenSize(float aValue, int aLevel)
	{
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x829450", Offset = "0x829450", VA = "0x829450")]
	private void Update()
	{
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x829488", Offset = "0x829488", VA = "0x829488")]
	public Vector3 NearestCameraPositionForLOD(int aLevel)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x82968C", Offset = "0x82968C", VA = "0x82968C")]
	public float ScreenPortion()
	{
		return default(float);
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x828D20", Offset = "0x828D20", VA = "0x828D20")]
	private void ComputeLODLevel()
	{
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x828FD0", Offset = "0x828FD0", VA = "0x828FD0")]
	private void GetMeshFilter()
	{
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0x8286CC", Offset = "0x8286CC", VA = "0x8286CC")]
	public void SetLODLevel(int newLodLevel)
	{
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0x8298E0", Offset = "0x8298E0", VA = "0x8298E0")]
	public LODSwitcher()
	{
	}
}
[Token(Token = "0x2000464")]
public class SmallTournamentCanvasController : MonoBehaviourPun
{
	[Token(Token = "0x400184C")]
	private const int minEuropeTimeZoneOffset = 0;

	[Token(Token = "0x400184D")]
	private const int maxEuropeTimeZoneOffset = 4;

	[Token(Token = "0x400184E")]
	private const int minAsiaTimeZoneOffset = 5;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text connectingText;

	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject tournamentInfo;

	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BeforeEnrollmentTournamentController beforeEnrollmentTournamentController;

	[Token(Token = "0x6001665")]
	[Address(RVA = "0x8298F8", Offset = "0x8298F8", VA = "0x8298F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0x829928", Offset = "0x829928", VA = "0x829928")]
	private CloudRegionCode GetRegionBasedOnLocalTimeZone()
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0x829B54", Offset = "0x829B54", VA = "0x829B54")]
	private void ShowTournamentInfo()
	{
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0x829B8C", Offset = "0x829B8C", VA = "0x829B8C")]
	public SmallTournamentCanvasController()
	{
	}
}
[Token(Token = "0x2000465")]
public class RandomOrcRoar : MonoBehaviour
{
	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource Breathing;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource _audioSource;

	[Token(Token = "0x6001669")]
	[Address(RVA = "0x829B94", Offset = "0x829B94", VA = "0x829B94")]
	private void Start()
	{
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0x829BEC", Offset = "0x829BEC", VA = "0x829BEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0x829C38", Offset = "0x829C38", VA = "0x829C38")]
	public RandomOrcRoar()
	{
	}
}
[Token(Token = "0x2000466")]
public class SpellsResetController : MonoBehaviour
{
	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpellsMenuController spellsMenuController;

	[Token(Token = "0x600166C")]
	[Address(RVA = "0x829C40", Offset = "0x829C40", VA = "0x829C40")]
	public void OnButtonResetClick()
	{
	}

	[Token(Token = "0x600166D")]
	[Address(RVA = "0x829CB4", Offset = "0x829CB4", VA = "0x829CB4")]
	public SpellsResetController()
	{
	}
}
[Token(Token = "0x2000467")]
public class AnimatedUVs : MonoBehaviour
{
	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedY;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedx;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float offsety;

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float offsetx;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer rend;

	[Token(Token = "0x600166E")]
	[Address(RVA = "0x829CBC", Offset = "0x829CBC", VA = "0x829CBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600166F")]
	[Address(RVA = "0x829D14", Offset = "0x829D14", VA = "0x829D14")]
	private void Update()
	{
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0x829DB8", Offset = "0x829DB8", VA = "0x829DB8")]
	public AnimatedUVs()
	{
	}
}
[Token(Token = "0x2000468")]
public class AnimateTiledTextureOnTrail : MonoBehaviour
{
	[Token(Token = "0x2000469")]
	public delegate void VoidEvent();

	[Token(Token = "0x200046A")]
	private sealed class <updateTiling>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimateTiledTextureOnTrail <>4__this;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <checkAgainst>5__2;

		[Token(Token = "0x17000268")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0x82A89C", Offset = "0x82A89C", VA = "0x82A89C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001683")]
			[Address(RVA = "0x82A8A4", Offset = "0x82A8A4", VA = "0x82A8A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x82A478", Offset = "0x82A478", VA = "0x82A478")]
		[DebuggerHidden]
		public <updateTiling>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x82A724", Offset = "0x82A724", VA = "0x82A724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x82A728", Offset = "0x82A728", VA = "0x82A728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _columns;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int _rows;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 _scale;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 _offset;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 _buffer;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _framesPerSecond;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool _playOnce;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool _disableUponCompletion;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool _enableEvents;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool _playOnEnable;

	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _newMaterialInstance;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _index;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 _textureSize;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _materialInstance;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _hasMaterialInstance;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _isPlaying;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<VoidEvent> _voidEventCallbackList;

	[Token(Token = "0x6001671")]
	[Address(RVA = "0x829DC8", Offset = "0x829DC8", VA = "0x829DC8")]
	public void RegisterCallback(VoidEvent cbFunction)
	{
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0x829ECC", Offset = "0x829ECC", VA = "0x829ECC")]
	public void UnRegisterCallback(VoidEvent cbFunction)
	{
	}

	[Token(Token = "0x6001673")]
	[Address(RVA = "0x829F78", Offset = "0x829F78", VA = "0x829F78")]
	public void Play()
	{
	}

	[Token(Token = "0x6001674")]
	[Address(RVA = "0x82A098", Offset = "0x82A098", VA = "0x82A098")]
	public void ChangeMaterial(Material newMaterial, bool newInstance = false)
	{
	}

	[Token(Token = "0x6001675")]
	[Address(RVA = "0x82A24C", Offset = "0x82A24C", VA = "0x82A24C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0x82A30C", Offset = "0x82A30C", VA = "0x82A30C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x82A3AC", Offset = "0x82A3AC", VA = "0x82A3AC")]
	private void HandleCallbacks(List<VoidEvent> cbList)
	{
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0x82A448", Offset = "0x82A448", VA = "0x82A448")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0x82A228", Offset = "0x82A228", VA = "0x82A228")]
	private void CalcTextureSize()
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x82A024", Offset = "0x82A024", VA = "0x82A024")]
	private IEnumerator updateTiling()
	{
		return null;
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x82A4A0", Offset = "0x82A4A0", VA = "0x82A4A0")]
	private void ApplyOffset()
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0x82A5B8", Offset = "0x82A5B8", VA = "0x82A5B8")]
	public AnimateTiledTextureOnTrail()
	{
	}
}
[Token(Token = "0x200046B")]
public class BillBoard : MonoBehaviour
{
	[Token(Token = "0x6001684")]
	[Address(RVA = "0x82A8AC", Offset = "0x82A8AC", VA = "0x82A8AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0x82A8F4", Offset = "0x82A8F4", VA = "0x82A8F4")]
	public BillBoard()
	{
	}
}
[Token(Token = "0x200046C")]
public class button_target : MonoBehaviour
{
	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MY_target;

	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject temp_target;

	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] ALL_target;

	[Token(Token = "0x6001686")]
	[Address(RVA = "0x82A8FC", Offset = "0x82A8FC", VA = "0x82A8FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0x82AA20", Offset = "0x82AA20", VA = "0x82AA20")]
	public void ShowTarget()
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0x82AAE0", Offset = "0x82AAE0", VA = "0x82AAE0")]
	public button_target()
	{
	}
}
[Token(Token = "0x200046D")]
public class demo : MonoBehaviour
{
	[Token(Token = "0x6001689")]
	[Address(RVA = "0x82AAE8", Offset = "0x82AAE8", VA = "0x82AAE8")]
	public void GoURL_FX()
	{
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0x82AB2C", Offset = "0x82AB2C", VA = "0x82AB2C")]
	public void GoURL_Free()
	{
	}

	[Token(Token = "0x600168B")]
	[Address(RVA = "0x82AB70", Offset = "0x82AB70", VA = "0x82AB70")]
	public demo()
	{
	}
}
[Token(Token = "0x200046E")]
public class tazo_UVScroller : MonoBehaviour
{
	[Token(Token = "0x4001872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int targetMaterialSlot;

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer myrender;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedY;

	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speedX;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeWentX;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeWentY;

	[Token(Token = "0x600168C")]
	[Address(RVA = "0x82AB78", Offset = "0x82AB78", VA = "0x82AB78")]
	private void Start()
	{
	}

	[Token(Token = "0x600168D")]
	[Address(RVA = "0x82ABD0", Offset = "0x82ABD0", VA = "0x82ABD0")]
	private void Update()
	{
	}

	[Token(Token = "0x600168E")]
	[Address(RVA = "0x82AC74", Offset = "0x82AC74", VA = "0x82AC74")]
	public tazo_UVScroller()
	{
	}
}
[Token(Token = "0x200046F")]
public class tazo_UVScroller_r : MonoBehaviour
{
	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int targetMaterialSlot;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer myrender;

	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedY;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speedX;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeWentX;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeWentY;

	[Token(Token = "0x600168F")]
	[Address(RVA = "0x82AC84", Offset = "0x82AC84", VA = "0x82AC84")]
	private void Start()
	{
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0x82ACDC", Offset = "0x82ACDC", VA = "0x82ACDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0x82ADB8", Offset = "0x82ADB8", VA = "0x82ADB8")]
	public tazo_UVScroller_r()
	{
	}
}
[Token(Token = "0x2000470")]
public class TorchSlider : MonoBehaviour
{
	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TorcheObj;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GUISkin SkinSlider;

	[Token(Token = "0x6001692")]
	[Address(RVA = "0x82ADC8", Offset = "0x82ADC8", VA = "0x82ADC8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0x82AF70", Offset = "0x82AF70", VA = "0x82AF70")]
	public TorchSlider()
	{
	}
}
[Token(Token = "0x2000471")]
public class Torchslider2 : MonoBehaviour
{
	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TorcheObj;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera MainCamera;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUISkin SkinSlider;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject Torch;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float Intensity_Light;

	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool CameraRendering;

	[Token(Token = "0x6001694")]
	[Address(RVA = "0x82AF78", Offset = "0x82AF78", VA = "0x82AF78")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001695")]
	[Address(RVA = "0x82B16C", Offset = "0x82B16C", VA = "0x82B16C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0x82B22C", Offset = "0x82B22C", VA = "0x82B22C")]
	public Torchslider2()
	{
	}
}
[Token(Token = "0x2000472")]
public class Torchelight : MonoBehaviour
{
	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TorchLight;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject MainFlame;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject BaseFlame;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Etincelles;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Fumee;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MaxLightIntensity;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float IntensityLight;

	[Token(Token = "0x6001697")]
	[Address(RVA = "0x82B234", Offset = "0x82B234", VA = "0x82B234")]
	public Torchelight()
	{
	}
}
[Token(Token = "0x2000473")]
public class TorsoEnabler : MonoBehaviour
{
	[Token(Token = "0x6001698")]
	[Address(RVA = "0x82B23C", Offset = "0x82B23C", VA = "0x82B23C")]
	public void EnableTorsoOnSuitableGameVersion()
	{
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0x82B2B4", Offset = "0x82B2B4", VA = "0x82B2B4")]
	public TorsoEnabler()
	{
	}
}
[Token(Token = "0x2000474")]
public class TorsoTracker : MonoBehaviour
{
	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxTurnAngleRatio;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 torsoPitch;

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 horizontalNeckOffset;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 directionToHands;

	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float handsDirectiondampingValue;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float headDirectionDampingValue;

	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float dampingSpeed;

	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float distSquared;

	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float dotProduct;

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float cachedYRotation;

	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float maxHeadPitch;

	[Token(Token = "0x4001898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float neckOffset;

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float HipsOffset;

	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float deltaPitch;

	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float pitchPole;

	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float pitchAdjust;

	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform head;

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform rightHand;

	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform leftHand;

	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float maxTurnAngle;

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float minDistanceToTurn;

	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float turnSpeed;

	[Token(Token = "0x600169A")]
	[Address(RVA = "0x82B2BC", Offset = "0x82B2BC", VA = "0x82B2BC")]
	public void InitializeWithoutPlayer()
	{
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0x82B2E8", Offset = "0x82B2E8", VA = "0x82B2E8")]
	public void InitializeWithPlayer()
	{
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0x82B2F4", Offset = "0x82B2F4", VA = "0x82B2F4", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600169D")]
	[Address(RVA = "0x82B838", Offset = "0x82B838", VA = "0x82B838")]
	private float RemapHeadPitchAngle()
	{
		return default(float);
	}

	[Token(Token = "0x600169E")]
	[Address(RVA = "0x82B804", Offset = "0x82B804", VA = "0x82B804")]
	private bool IsHeadPitchedTooMuch()
	{
		return default(bool);
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0x82B884", Offset = "0x82B884", VA = "0x82B884")]
	public TorsoTracker()
	{
	}
}
[Token(Token = "0x2000475")]
public class TournamentBuildLobbySwitcher : MonoBehaviour
{
	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject LobbyWithoutTournament;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject LobbyWithTournament;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject LobbyWithTournament_Lobby;

	[Token(Token = "0x40018A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject LobbyWithTournament_Tournament;

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0x82B904", Offset = "0x82B904", VA = "0x82B904")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0x82B9EC", Offset = "0x82B9EC", VA = "0x82B9EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0x82B98C", Offset = "0x82B98C", VA = "0x82B98C")]
	private void SetAllToInactive()
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0x82B9F0", Offset = "0x82B9F0", VA = "0x82B9F0")]
	public TournamentBuildLobbySwitcher()
	{
	}
}
[Token(Token = "0x2000476")]
public class TournamentDisconnectionWindowDisabler : MonoBehaviour
{
	[Token(Token = "0x40018A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DisconnectionWindowController disconnectionWindowController;

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0x82B9F8", Offset = "0x82B9F8", VA = "0x82B9F8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0x82BA64", Offset = "0x82BA64", VA = "0x82BA64")]
	public TournamentDisconnectionWindowDisabler()
	{
	}
}
[Token(Token = "0x2000477")]
public class TournamentQuitController : WindowController
{
	[Token(Token = "0x60016A6")]
	[Address(RVA = "0x82BA6C", Offset = "0x82BA6C", VA = "0x82BA6C")]
	public void ResetLobby()
	{
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0x82BB20", Offset = "0x82BB20", VA = "0x82BB20")]
	public void OnYes()
	{
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0x82BC8C", Offset = "0x82BC8C", VA = "0x82BC8C")]
	public void OnNo()
	{
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0x82BD0C", Offset = "0x82BD0C", VA = "0x82BD0C")]
	public TournamentQuitController()
	{
	}
}
[Token(Token = "0x2000478")]
public class TournamentRejoin : MonoBehaviourPun
{
	[Serializable]
	[Token(Token = "0x2000479")]
	private sealed class <>c
	{
		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<TournamentPlayer, string> <>9__2_0;

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x82C3F8", Offset = "0x82C3F8", VA = "0x82C3F8")]
		public <>c()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x82C400", Offset = "0x82C400", VA = "0x82C400")]
		internal string <Rejoin>b__2_0(TournamentPlayer p)
		{
			return null;
		}
	}

	[Token(Token = "0x40018A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TournamentLeaderboardController tournamentLeaderboardController;

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TournamentMatchesCreator tournamentMatchesCreator;

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0x82BD14", Offset = "0x82BD14", VA = "0x82BD14")]
	public void Rejoin(Player player, string playerID)
	{
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0x82C298", Offset = "0x82C298", VA = "0x82C298")]
	[PunRPC]
	private void RPCJoinMatch(string roomName, string[] playersInGroupIDs)
	{
	}

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0x82C364", Offset = "0x82C364", VA = "0x82C364")]
	[PunRPC]
	private void RPCKickOutOfLobby()
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0x82C380", Offset = "0x82C380", VA = "0x82C380")]
	public TournamentRejoin()
	{
	}
}
[Token(Token = "0x200047A")]
public class TournamentTimeSynchronizer : MonoBehaviourPun
{
	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeOffset;

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0x82C418", Offset = "0x82C418", VA = "0x82C418")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60016B2")]
	[Address(RVA = "0x82C55C", Offset = "0x82C55C", VA = "0x82C55C")]
	[PunRPC]
	public void RPCRequestTime(int playerID)
	{
	}

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0x82C8EC", Offset = "0x82C8EC", VA = "0x82C8EC")]
	[PunRPC]
	public void RPCSynchronizeTime(int year, int month, int day, int hour, int minute, int second)
	{
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0x82C9C0", Offset = "0x82C9C0", VA = "0x82C9C0")]
	public TournamentTimeSynchronizer()
	{
	}
}
[Token(Token = "0x200047B")]
public class TrailColorSetter : MonoBehaviourPun
{
	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerController _playerController;

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0x82C9D0", Offset = "0x82C9D0", VA = "0x82C9D0")]
	public Gradient GetTrailColor(int playerId)
	{
		return null;
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0x82CAA8", Offset = "0x82CAA8", VA = "0x82CAA8")]
	public TrailColorSetter()
	{
	}
}
[Token(Token = "0x200047C")]
public class EagleController : MonoBehaviour
{
	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation EagleAnimation;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip lookAround;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationClip eatYourWing;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip hop;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip fly;

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0x82CAB0", Offset = "0x82CAB0", VA = "0x82CAB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0x82CB8C", Offset = "0x82CB8C", VA = "0x82CB8C")]
	public void LookAround()
	{
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0x82CC2C", Offset = "0x82CC2C", VA = "0x82CC2C")]
	public void EatYourWind()
	{
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0x82CCA8", Offset = "0x82CCA8", VA = "0x82CCA8")]
	public void Hop()
	{
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0x82CCFC", Offset = "0x82CCFC", VA = "0x82CCFC")]
	public void Fly()
	{
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0x82CD50", Offset = "0x82CD50", VA = "0x82CD50")]
	public EagleController()
	{
	}
}
[Token(Token = "0x200047D")]
public class CamMove : MonoBehaviour
{
	[Token(Token = "0x60016BD")]
	[Address(RVA = "0x82CD58", Offset = "0x82CD58", VA = "0x82CD58")]
	private void Update()
	{
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0x82CEF8", Offset = "0x82CEF8", VA = "0x82CEF8")]
	public CamMove()
	{
	}
}
[Token(Token = "0x200047E")]
public class UnusedAssetDestroyer : MonoBehaviour
{
	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<UnityEngine.Object> unusedObjects;

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0x82CF00", Offset = "0x82CF00", VA = "0x82CF00")]
	public UnusedAssetDestroyer()
	{
	}
}
[Token(Token = "0x200047F")]
public class UpDownMovementController : MonoBehaviour
{
	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float oneDirectionMovementDuration;

	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float movementSpeed;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 movementVector;

	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isMovingUp;

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0x82CF08", Offset = "0x82CF08", VA = "0x82CF08")]
	private void Update()
	{
	}

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0x82CFFC", Offset = "0x82CFFC", VA = "0x82CFFC")]
	public UpDownMovementController()
	{
	}
}
[Token(Token = "0x2000480")]
[ExecuteInEditMode]
public class FixMobileDepth : MonoBehaviour
{
	[Token(Token = "0x60016C2")]
	[Address(RVA = "0x82D01C", Offset = "0x82D01C", VA = "0x82D01C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0x82D058", Offset = "0x82D058", VA = "0x82D058")]
	public FixMobileDepth()
	{
	}
}
[Token(Token = "0x2000481")]
public class VRKey : MonoBehaviour
{
	[Token(Token = "0x2000482")]
	public delegate void KeyClickAction(string key, bool isBackSpace);

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color ActiveColor;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color NormalColor;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isBackSpace;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image _buttonImage;

	[Token(Token = "0x14000030")]
	public event KeyClickAction OnKeyClicked
	{
		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x82D060", Offset = "0x82D060", VA = "0x82D060")]
		add
		{
		}
		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x82D0FC", Offset = "0x82D0FC", VA = "0x82D0FC")]
		remove
		{
		}
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0x82D198", Offset = "0x82D198", VA = "0x82D198")]
	private void Start()
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0x82D20C", Offset = "0x82D20C", VA = "0x82D20C")]
	public void KeyAction()
	{
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0x82D264", Offset = "0x82D264", VA = "0x82D264")]
	public void ActivateKey()
	{
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0x82D294", Offset = "0x82D294", VA = "0x82D294")]
	public void DeactivateKey()
	{
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0x82D2C4", Offset = "0x82D2C4", VA = "0x82D2C4")]
	public VRKey()
	{
	}
}
[Token(Token = "0x2000483")]
public class WaterMillParticlePlayer : MonoBehaviour
{
	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particleSystem;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float waterHeight;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float centerOffset;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasPlayed;

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0x82D3CC", Offset = "0x82D3CC", VA = "0x82D3CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016CE")]
	[Address(RVA = "0x82D3E8", Offset = "0x82D3E8", VA = "0x82D3E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60016CF")]
	[Address(RVA = "0x82D510", Offset = "0x82D510", VA = "0x82D510")]
	public WaterMillParticlePlayer()
	{
	}
}
[Token(Token = "0x2000484")]
public class WaterWheelParticlesController : MonoBehaviour
{
	[Token(Token = "0x2000485")]
	private sealed class <SetParticlesSize>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterWheelParticlesController <>4__this;

		[Token(Token = "0x1700026A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x82D830", Offset = "0x82D830", VA = "0x82D830", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x82D838", Offset = "0x82D838", VA = "0x82D838", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x82D5B8", Offset = "0x82D5B8", VA = "0x82D5B8")]
		[DebuggerHidden]
		public <SetParticlesSize>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x82D5E8", Offset = "0x82D5E8", VA = "0x82D5E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x82D5EC", Offset = "0x82D5EC", VA = "0x82D5EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40018C2")]
	private const float forwardSizeMultiplier = 0.75f;

	[Token(Token = "0x40018C3")]
	private const float foamMultiplier = 20f;

	[Token(Token = "0x40018C4")]
	private const float backwardSizeMultiplier = 0.25f;

	[Token(Token = "0x40018C5")]
	private const float randomSizeCoefficient = 0.2f;

	[Token(Token = "0x40018C6")]
	private const float particleSizeCheckDelay = 1f;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WheelController wheelController;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem foamParticle;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float newSize;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationSpeed;

	[Token(Token = "0x60016D0")]
	[Address(RVA = "0x82D524", Offset = "0x82D524", VA = "0x82D524")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0x82D544", Offset = "0x82D544", VA = "0x82D544")]
	private IEnumerator SetParticlesSize()
	{
		return null;
	}

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0x82D5E0", Offset = "0x82D5E0", VA = "0x82D5E0")]
	public WaterWheelParticlesController()
	{
	}
}
[Token(Token = "0x2000486")]
public class WheelController : MonoBehaviour
{
	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float steadyStateRotationSpeed;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotationGainCoefficient;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationSpeedDifference;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float attenuationConstant;

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0x82D840", Offset = "0x82D840", VA = "0x82D840")]
	private void Update()
	{
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0x82D8F4", Offset = "0x82D8F4", VA = "0x82D8F4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0x82D974", Offset = "0x82D974", VA = "0x82D974")]
	public WheelController()
	{
	}
}
[Token(Token = "0x2000487")]
public class WitchController : MonoBehaviour
{
	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpellsMenuController spellsMenuController;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator witchAnimator;

	[Token(Token = "0x40018D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform WitchTransform;

	[Token(Token = "0x40018D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform PlayerTransform;

	[Token(Token = "0x40018D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 playerVector;

	[Token(Token = "0x40018D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float WitchRotationY;

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0x82D99C", Offset = "0x82D99C", VA = "0x82D99C")]
	private void Start()
	{
	}

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0x82DB14", Offset = "0x82DB14", VA = "0x82DB14")]
	private void Update()
	{
	}

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0x82DE5C", Offset = "0x82DE5C", VA = "0x82DE5C")]
	private void startLearningAnimation()
	{
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0x82DEB4", Offset = "0x82DEB4", VA = "0x82DEB4")]
	private void startRejectLearningAnimation()
	{
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0x82DF0C", Offset = "0x82DF0C", VA = "0x82DF0C")]
	private void startUsingAnimation()
	{
	}

	[Token(Token = "0x60016E0")]
	[Address(RVA = "0x82DF64", Offset = "0x82DF64", VA = "0x82DF64")]
	private void startRejectUsingAnimation()
	{
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0x82DFBC", Offset = "0x82DFBC", VA = "0x82DFBC")]
	public WitchController()
	{
	}
}
[Token(Token = "0x2000488")]
public class WooshSoundController : MonoBehaviourPun
{
	[Token(Token = "0x40018DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource wooshSource;

	[Token(Token = "0x40018DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CollisionEvents collisionEvents;

	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ArrowFlyController arrowFlyController;

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0x82DFC4", Offset = "0x82DFC4", VA = "0x82DFC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0x82E0FC", Offset = "0x82E0FC", VA = "0x82E0FC")]
	public void PlayWooshSound()
	{
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0x82E118", Offset = "0x82E118", VA = "0x82E118")]
	public void PlayArrowWoosh()
	{
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0x82E134", Offset = "0x82E134", VA = "0x82E134")]
	public void StopWooshSound(Collision collision)
	{
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0x82E150", Offset = "0x82E150", VA = "0x82E150")]
	public WooshSoundController()
	{
	}
}
[Token(Token = "0x2000489")]
public class WyvernRagdoll : MonoBehaviour
{
	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject wyvernAlive;

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject wyvernDead;

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0x82E158", Offset = "0x82E158", VA = "0x82E158")]
	public void EnableRagdollObjects()
	{
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0x82E190", Offset = "0x82E190", VA = "0x82E190")]
	public void ResetWyvernObjects()
	{
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0x82E1C8", Offset = "0x82E1C8", VA = "0x82E1C8")]
	public WyvernRagdoll()
	{
	}
}
[Token(Token = "0x200048A")]
public class FreeCamera : MonoBehaviour
{
	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableInputCapture;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool holdRightMouseCapture;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lookSpeed;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sprintSpeed;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_inputCaptured;

	[Token(Token = "0x40018E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_yaw;

	[Token(Token = "0x40018E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_pitch;

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0x82E1D0", Offset = "0x82E1D0", VA = "0x82E1D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0x82E1DC", Offset = "0x82E1DC", VA = "0x82E1DC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0x82E20C", Offset = "0x82E20C", VA = "0x82E20C")]
	private void CaptureInput()
	{
	}

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0x82E280", Offset = "0x82E280", VA = "0x82E280")]
	private void ReleaseInput()
	{
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0x82E2AC", Offset = "0x82E2AC", VA = "0x82E2AC")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0x82E2E4", Offset = "0x82E2E4", VA = "0x82E2E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60016F0")]
	[Address(RVA = "0x82E77C", Offset = "0x82E77C", VA = "0x82E77C")]
	public FreeCamera()
	{
	}
}
[Token(Token = "0x200048B")]
[ExecuteInEditMode]
public class Compass : MonoBehaviour
{
	[Token(Token = "0x40018E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x40018E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 RotationIntensity;

	[Token(Token = "0x40018E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool continuous;

	[Token(Token = "0x60016F1")]
	[Address(RVA = "0x82E79C", Offset = "0x82E79C", VA = "0x82E79C")]
	private void Start()
	{
	}

	[Token(Token = "0x60016F2")]
	[Address(RVA = "0x82E8E0", Offset = "0x82E8E0", VA = "0x82E8E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60016F3")]
	[Address(RVA = "0x82EA24", Offset = "0x82EA24", VA = "0x82EA24")]
	public Compass()
	{
	}
}
[Token(Token = "0x200048C")]
public class LightTilt : MonoBehaviour
{
	[Token(Token = "0x40018EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Tempo;

	[Token(Token = "0x40018EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool EnableIntensity;

	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RandomIntensity;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Fluctuation;

	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float OriginalInt;

	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float TiltInt;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float Tmp;

	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool EnableMovement;

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MovFluct;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float PositionRandom;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float RangeFluct;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 OriginalPos;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float OriginalRan;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float TiltMovx;

	[Token(Token = "0x40018F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float TiltMovy;

	[Token(Token = "0x40018F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float TiltMovz;

	[Token(Token = "0x40018FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool EnableColorChange;

	[Token(Token = "0x40018FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color TiltColor;

	[Token(Token = "0x40018FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color OriginalColor;

	[Token(Token = "0x60016F4")]
	[Address(RVA = "0x82EA44", Offset = "0x82EA44", VA = "0x82EA44")]
	private void Start()
	{
	}

	[Token(Token = "0x60016F5")]
	[Address(RVA = "0x82EB0C", Offset = "0x82EB0C", VA = "0x82EB0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60016F6")]
	[Address(RVA = "0x82ED90", Offset = "0x82ED90", VA = "0x82ED90")]
	public LightTilt()
	{
	}
}
[Token(Token = "0x200048D")]
public class CompassCamera : MonoBehaviour
{
	[Token(Token = "0x40018FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x40018FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 RotationIntensity;

	[Token(Token = "0x40018FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool continuous;

	[Token(Token = "0x60016F7")]
	[Address(RVA = "0x82EDD4", Offset = "0x82EDD4", VA = "0x82EDD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60016F8")]
	[Address(RVA = "0x82EF18", Offset = "0x82EF18", VA = "0x82EF18")]
	private void Update()
	{
	}

	[Token(Token = "0x60016F9")]
	[Address(RVA = "0x82F05C", Offset = "0x82F05C", VA = "0x82F05C")]
	public CompassCamera()
	{
	}
}
[Token(Token = "0x200048E")]
public class TagControl : MonoBehaviour
{
	[Token(Token = "0x4001900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color GlowColor;

	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color WaitColor;

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float WaitIntensity;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float SelectIntensity;

	[Token(Token = "0x4001904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool GlowFadeIn;

	[Token(Token = "0x4001905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool GlowFadeOut;

	[Token(Token = "0x4001906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool TrackCamera;

	[Token(Token = "0x4001907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool SmoothFollow;

	[Token(Token = "0x4001908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool WaitStartAnim;

	[Token(Token = "0x4001909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float TimeDelay;

	[Token(Token = "0x400190A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool CheckOnUpdate;

	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animation TargetAnimation;

	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationClip StartAnim;

	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationClip EndAnim;

	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Renderer GlowMesh1;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Renderer GlowMesh2;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material MaterialGlow1;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material MaterialGlow2;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject EnabledParts;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Collider TargetCollider;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Collider PlayerCollider;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timer;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float timerstart;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material mat1;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material mat2;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool colliding;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool waiting;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool ready;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float glowint;

	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion rotor;

	[Token(Token = "0x60016FA")]
	[Address(RVA = "0x82F07C", Offset = "0x82F07C", VA = "0x82F07C")]
	private void Start()
	{
	}

	[Token(Token = "0x60016FB")]
	[Address(RVA = "0x82F170", Offset = "0x82F170", VA = "0x82F170")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x60016FC")]
	[Address(RVA = "0x82F394", Offset = "0x82F394", VA = "0x82F394")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x60016FD")]
	[Address(RVA = "0x82F414", Offset = "0x82F414", VA = "0x82F414")]
	private void Update()
	{
	}

	[Token(Token = "0x60016FE")]
	[Address(RVA = "0x82FE44", Offset = "0x82FE44", VA = "0x82FE44")]
	public TagControl()
	{
	}
}
[Token(Token = "0x200048F")]
public class TagInfo : MonoBehaviour
{
	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh AssetName;

	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh PrefabName;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh Location;

	[Token(Token = "0x4001921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh LOD0;

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh LOD1;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh LOD2;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh MainMapSize;

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh SecondMapSize;

	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh Number;

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh Comments;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject CompassRotator;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject CompassTargetTag;

	[Token(Token = "0x400192A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject CircleLod0;

	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject CircleLod1;

	[Token(Token = "0x60016FF")]
	[Address(RVA = "0x82FE78", Offset = "0x82FE78", VA = "0x82FE78")]
	public TagInfo()
	{
	}
}
[Token(Token = "0x2000490")]
[ExecuteInEditMode]
public class TagsMain : MonoBehaviour
{
	[Token(Token = "0x2000491")]
	public enum TextureSize
	{
		[Token(Token = "0x4001945")]
		_None,
		[Token(Token = "0x4001946")]
		_32,
		[Token(Token = "0x4001947")]
		_64,
		[Token(Token = "0x4001948")]
		_128,
		[Token(Token = "0x4001949")]
		_256,
		[Token(Token = "0x400194A")]
		_512,
		[Token(Token = "0x400194B")]
		_1024,
		[Token(Token = "0x400194C")]
		_2048,
		[Token(Token = "0x400194D")]
		_4096,
		[Token(Token = "0x400194E")]
		_8K,
		[Token(Token = "0x400194F")]
		_16k
	}

	[Serializable]
	[Token(Token = "0x2000492")]
	public class Prefab
	{
		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string PrefabOrder;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject TagInfo;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ReferenceGO;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject AssetPrefab;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Category;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Lod0Tricount;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Lod1Tricount;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Lod2Tricount;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public TextureSize MainMaps;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextureSize SecondaryMaps;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string AdditionalInfo;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool ShowCirce;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool TargetCompass;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool TagsInPosition;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool TagOrderNum;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string TagNotes;

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x833A04", Offset = "0x833A04", VA = "0x833A04")]
		public Prefab()
		{
		}
	}

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Prefab> PrefabList;

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string AssetPackName;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool CheckOnUpdate;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool SceneGOTags;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool ShowTargetTags;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture PackIcon;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool UseIcon;

	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color MainColor;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color SecondaryColor;

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float EmissionLevel;

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material TagMaterial;

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material GlowMaterial;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material IconMaterial;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color32 _1k;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color32 _3k;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color32 _5k;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color32 _10k;

	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color32 _20k;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color32 _30k;

	[Token(Token = "0x400193F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color32 _50k;

	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Color32 _more;

	[Token(Token = "0x4001941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color32 _tagmat;

	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Color32 _glowmat;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Texture _oldicon;

	[Token(Token = "0x6001700")]
	[Address(RVA = "0x82FE80", Offset = "0x82FE80", VA = "0x82FE80")]
	private void Start()
	{
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0x830410", Offset = "0x830410", VA = "0x830410")]
	private void Update()
	{
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0x8338E4", Offset = "0x8338E4", VA = "0x8338E4")]
	private void Exit()
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0x8339A0", Offset = "0x8339A0", VA = "0x8339A0")]
	public TagsMain()
	{
	}
}
[Token(Token = "0x2000493")]
public class BuildingControl : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000494")]
	public class Target
	{
		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FloorName;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject TargetGo;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int FloorNum;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool AllFloors;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject PropsGroup;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject CeilingShadow;

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x83409C", Offset = "0x83409C", VA = "0x83409C")]
		public Target()
		{
		}
	}

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string BuildingName;

	[Token(Token = "0x4001962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool CheapDecoration;

	[Token(Token = "0x4001963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TownManager TownManagerScript;

	[Token(Token = "0x4001964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int ActualFloor;

	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int PreviousTest;

	[Token(Token = "0x4001966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Target> Floors;

	[Token(Token = "0x6001705")]
	[Address(RVA = "0x833A14", Offset = "0x833A14", VA = "0x833A14")]
	private void Start()
	{
	}

	[Token(Token = "0x6001706")]
	[Address(RVA = "0x833B98", Offset = "0x833B98", VA = "0x833B98")]
	private void Update()
	{
	}

	[Token(Token = "0x6001707")]
	[Address(RVA = "0x834044", Offset = "0x834044", VA = "0x834044")]
	public BuildingControl()
	{
	}
}
[Token(Token = "0x2000495")]
public class BuildingTrigger : MonoBehaviour
{
	[Token(Token = "0x2000496")]
	public enum Direction
	{
		[Token(Token = "0x4001976")]
		RiseUpFloor,
		[Token(Token = "0x4001977")]
		StayOnFloor,
		[Token(Token = "0x4001978")]
		DownFloor
	}

	[Token(Token = "0x400196D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuildingControl Building;

	[Token(Token = "0x400196E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FloorLevel;

	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int TargetFloor;

	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Dynamic;

	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Direction FloorMovement;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool Allvisible;

	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TownManager TownManagerScript;

	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider Activator;

	[Token(Token = "0x6001709")]
	[Address(RVA = "0x8340F4", Offset = "0x8340F4", VA = "0x8340F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600170A")]
	[Address(RVA = "0x834190", Offset = "0x834190", VA = "0x834190")]
	private void OnTriggerEnter(Collider trig)
	{
	}

	[Token(Token = "0x600170B")]
	[Address(RVA = "0x834310", Offset = "0x834310", VA = "0x834310")]
	public BuildingTrigger()
	{
	}
}
[Token(Token = "0x2000497")]
public class PushTrigger : MonoBehaviour
{
	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TownManager ManagerScript;

	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform DoorHinge;

	[Token(Token = "0x400197B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool opened;

	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Percentage;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 XYZDisplacement;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion Rotation;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float Duration;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public KeyCode UnlockKey;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider _activator;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _timer;

	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _iscolliding;

	[Token(Token = "0x4001984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _ismoving;

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _percentage;

	[Token(Token = "0x600170C")]
	[Address(RVA = "0x834318", Offset = "0x834318", VA = "0x834318")]
	private void Start()
	{
	}

	[Token(Token = "0x600170D")]
	[Address(RVA = "0x834380", Offset = "0x834380", VA = "0x834380")]
	private void OnTriggerEnter(Collider trig)
	{
	}

	[Token(Token = "0x600170E")]
	[Address(RVA = "0x8346F0", Offset = "0x8346F0", VA = "0x8346F0")]
	private void OnTriggerExit(Collider trig)
	{
	}

	[Token(Token = "0x600170F")]
	[Address(RVA = "0x83478C", Offset = "0x83478C", VA = "0x83478C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001710")]
	[Address(RVA = "0x834CA0", Offset = "0x834CA0", VA = "0x834CA0")]
	public PushTrigger()
	{
	}
}
[Token(Token = "0x2000498")]
public class SceneControl : MonoBehaviour
{
	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light SunLight;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material SkyBackground;

	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource BackgroundMusic;

	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Fxs;

	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TownManager Town;

	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Collider PlayerCharacter;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject FPSCamera;

	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject TopDownCamera;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public KeyCode CameraSwitchKey;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public KeyCode HelpKey;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public KeyCode DecoCheap;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public KeyCode DoorKey;

	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text LocationGUI;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text CameraGUI;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text HelpText;

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool FPSMode;

	[Token(Token = "0x6001711")]
	[Address(RVA = "0x834CBC", Offset = "0x834CBC", VA = "0x834CBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001712")]
	[Address(RVA = "0x8350C8", Offset = "0x8350C8", VA = "0x8350C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0x835364", Offset = "0x835364", VA = "0x835364")]
	public SceneControl()
	{
	}
}
[Token(Token = "0x2000499")]
[ExecuteInEditMode]
public class TownManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200049A")]
	public class Building
	{
		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingControl BuildingTarget;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool CheapDecoration;

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x835684", Offset = "0x835684", VA = "0x835684")]
		public Building()
		{
		}
	}

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableTownControl;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool CheapDecoration;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool OverrideLocalSett;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Building> Buildings;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string PlayerLocation;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider PlayerCollider;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int ActualFloor;

	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool FPSMode;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public KeyCode DoorKeyCode;

	[Token(Token = "0x6001714")]
	[Address(RVA = "0x835380", Offset = "0x835380", VA = "0x835380")]
	private void Start()
	{
	}

	[Token(Token = "0x6001715")]
	[Address(RVA = "0x8353FC", Offset = "0x8353FC", VA = "0x8353FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001716")]
	[Address(RVA = "0x83566C", Offset = "0x83566C", VA = "0x83566C")]
	public TownManager()
	{
	}
}
[Token(Token = "0x200049B")]
public class TrampActivator : MonoBehaviour
{
	[Token(Token = "0x40019A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider CharCollider;

	[Token(Token = "0x40019A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ActivateGO;

	[Token(Token = "0x40019A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GOEffect;

	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animation AnimatorEffect;

	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip AnimPlay;

	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationClip AnimReset;

	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float TimeToReset;

	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timer;

	[Token(Token = "0x40019AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool collide;

	[Token(Token = "0x6001718")]
	[Address(RVA = "0x83568C", Offset = "0x83568C", VA = "0x83568C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001719")]
	[Address(RVA = "0x8357CC", Offset = "0x8357CC", VA = "0x8357CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600171A")]
	[Address(RVA = "0x83585C", Offset = "0x83585C", VA = "0x83585C")]
	public TrampActivator()
	{
	}
}
namespace OrbCreationExtensions
{
	[Token(Token = "0x200049C")]
	public static class GameObjectExtensions
	{
		[Token(Token = "0x600171B")]
		[Address(RVA = "0x828DC4", Offset = "0x828DC4", VA = "0x828DC4")]
		public static Bounds GetWorldBounds(GameObject go)
		{
			return default(Bounds);
		}
	}
}
namespace MagicalFX
{
	[Token(Token = "0x200049D")]
	public class FX_Rotation : MonoBehaviour
	{
		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Speed;

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x835864", Offset = "0x835864", VA = "0x835864")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x835890", Offset = "0x835890", VA = "0x835890")]
		public FX_Rotation()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x200049E")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x8358F0", Offset = "0x8358F0", VA = "0x8358F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x835B78", Offset = "0x835B78", VA = "0x835B78")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x835CFC", Offset = "0x835CFC", VA = "0x835CFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x835D6C", Offset = "0x835D6C", VA = "0x835D6C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x835E38", Offset = "0x835E38", VA = "0x835E38", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x835E9C", Offset = "0x835E9C", VA = "0x835E9C")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x20004A0")]
		public class VirtualAxis
		{
			[Token(Token = "0x40019B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string <name>k__BackingField;

			[Token(Token = "0x40019B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x40019B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x1700026C")]
			public string name
			{
				[Token(Token = "0x600172D")]
				[Address(RVA = "0x83655C", Offset = "0x83655C", VA = "0x83655C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600172E")]
				[Address(RVA = "0x836564", Offset = "0x836564", VA = "0x836564")]
				private set
				{
				}
			}

			[Token(Token = "0x1700026D")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x600172F")]
				[Address(RVA = "0x83656C", Offset = "0x83656C", VA = "0x83656C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001730")]
				[Address(RVA = "0x836574", Offset = "0x836574", VA = "0x836574")]
				private set
				{
				}
			}

			[Token(Token = "0x1700026E")]
			public float GetValue
			{
				[Token(Token = "0x6001735")]
				[Address(RVA = "0x8365C8", Offset = "0x8365C8", VA = "0x8365C8")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001731")]
			[Address(RVA = "0x835A6C", Offset = "0x835A6C", VA = "0x835A6C")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6001732")]
			[Address(RVA = "0x836580", Offset = "0x836580", VA = "0x836580")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001733")]
			[Address(RVA = "0x835D14", Offset = "0x835D14", VA = "0x835D14")]
			public void Remove()
			{
			}

			[Token(Token = "0x6001734")]
			[Address(RVA = "0x8365C0", Offset = "0x8365C0", VA = "0x8365C0")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x20004A1")]
		public class VirtualButton
		{
		}

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x835F08", Offset = "0x835F08", VA = "0x835F08")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x835A04", Offset = "0x835A04", VA = "0x835A04")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x835AA8", Offset = "0x835AA8", VA = "0x835AA8")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x8361D0", Offset = "0x8361D0", VA = "0x8361D0")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x835B10", Offset = "0x835B10", VA = "0x835B10")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x8363AC", Offset = "0x8363AC", VA = "0x8363AC")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x836484", Offset = "0x836484", VA = "0x836484")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x836404", Offset = "0x836404", VA = "0x836404")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x8364DC", Offset = "0x8364DC", VA = "0x8364DC")]
		public static void SetAxis(string name, float value)
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x8365D0", Offset = "0x8365D0", VA = "0x8365D0")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x836640", Offset = "0x836640", VA = "0x836640")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x20004A4")]
		public enum AxisOption
		{
			[Token(Token = "0x40019C3")]
			Both,
			[Token(Token = "0x40019C4")]
			OnlyHorizontal,
			[Token(Token = "0x40019C5")]
			OnlyVertical
		}

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x836648", Offset = "0x836648", VA = "0x836648")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x8367AC", Offset = "0x8367AC", VA = "0x8367AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x8367DC", Offset = "0x8367DC", VA = "0x8367DC")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x83664C", Offset = "0x83664C", VA = "0x83664C")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x83683C", Offset = "0x83683C", VA = "0x83683C", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x836988", Offset = "0x836988", VA = "0x836988", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x8369C4", Offset = "0x8369C4", VA = "0x8369C4", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x8369C8", Offset = "0x8369C8", VA = "0x8369C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x836A08", Offset = "0x836A08", VA = "0x836A08")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6001741")]
		[Address(RVA = "0x836A94", Offset = "0x836A94", VA = "0x836A94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x836AA4", Offset = "0x836AA4", VA = "0x836AA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x836A9C", Offset = "0x836A9C", VA = "0x836A9C")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x836BAC", Offset = "0x836BAC", VA = "0x836BAC")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x836EA4", Offset = "0x836EA4", VA = "0x836EA4")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	[RequireComponent(typeof(Image))]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x20004A7")]
		public enum AxisOption
		{
			[Token(Token = "0x40019D9")]
			Both,
			[Token(Token = "0x40019DA")]
			OnlyHorizontal,
			[Token(Token = "0x40019DB")]
			OnlyVertical
		}

		[Token(Token = "0x20004A8")]
		public enum ControlStyle
		{
			[Token(Token = "0x40019DD")]
			Absolute,
			[Token(Token = "0x40019DE")]
			Relative,
			[Token(Token = "0x40019DF")]
			Swipe
		}

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x836EAC", Offset = "0x836EAC", VA = "0x836EAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x837010", Offset = "0x837010", VA = "0x837010")]
		private void Start()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x836EB0", Offset = "0x836EB0", VA = "0x836EB0")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x837098", Offset = "0x837098", VA = "0x837098")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x837198", Offset = "0x837198", VA = "0x837198", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x8371D0", Offset = "0x8371D0", VA = "0x8371D0")]
		private void Update()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x8373A8", Offset = "0x8373A8", VA = "0x8373A8", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x837408", Offset = "0x837408", VA = "0x837408")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x8374C8", Offset = "0x8374C8", VA = "0x8374C8")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x835FE0", Offset = "0x835FE0", VA = "0x835FE0")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x836038", Offset = "0x836038", VA = "0x836038")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x836288", Offset = "0x836288", VA = "0x836288")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x836318", Offset = "0x836318", VA = "0x836318")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001753")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x6001754")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x83755C", Offset = "0x83755C", VA = "0x83755C")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x20004AA")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6001756")]
		[Address(RVA = "0x837684", Offset = "0x837684", VA = "0x837684")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x83772C", Offset = "0x83772C", VA = "0x83772C", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x8377C4", Offset = "0x8377C4", VA = "0x8377C4", Slot = "5")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x835FD8", Offset = "0x835FD8", VA = "0x835FD8")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x600175A")]
		[Address(RVA = "0x837868", Offset = "0x837868", VA = "0x837868", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x83787C", Offset = "0x83787C", VA = "0x83787C", Slot = "5")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x835FDC", Offset = "0x835FDC", VA = "0x835FDC")]
		public StandaloneInput()
		{
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x20004AC")]
	[RequireComponent(typeof(PhotonView))]
	[RequireComponent(typeof(Rigidbody))]
	[RequireComponent(typeof(Animator))]
	public abstract class BaseController : MonoBehaviour
	{
		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x8378CC", Offset = "0x8378CC", VA = "0x8378CC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x837AD4", Offset = "0x837AD4", VA = "0x837AD4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x837BF8", Offset = "0x837BF8", VA = "0x837BF8", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x837CA0", Offset = "0x837CA0", VA = "0x837CA0", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x837D34", Offset = "0x837D34", VA = "0x837D34", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x837DC4", Offset = "0x837DC4", VA = "0x837DC4", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x837E70", Offset = "0x837E70", VA = "0x837E70", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x837EE8", Offset = "0x837EE8", VA = "0x837EE8", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x837FA4", Offset = "0x837FA4", VA = "0x837FA4", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x838034", Offset = "0x838034", VA = "0x838034", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001767")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x8380C4", Offset = "0x8380C4", VA = "0x8380C4")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	[RequireComponent(typeof(Toggle))]
	[DisallowMultipleComponent]
	public class BetterToggle : MonoBehaviour
	{
		[Token(Token = "0x20004AE")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x14000031")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0x8380D4", Offset = "0x8380D4", VA = "0x8380D4")]
			add
			{
			}
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x83818C", Offset = "0x83818C", VA = "0x83818C")]
			remove
			{
			}
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x838244", Offset = "0x838244", VA = "0x838244")]
		private void Start()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x838320", Offset = "0x838320", VA = "0x838320")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x83838C", Offset = "0x83838C", VA = "0x83838C")]
		public BetterToggle()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x838394", Offset = "0x838394", VA = "0x838394")]
		private void <Start>b__5_0(bool <p0>)
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class ChangePOV : MonoBehaviour, IMatchmakingCallbacks
	{
		[Token(Token = "0x20004B0")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x14000032")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0x837A1C", Offset = "0x837A1C", VA = "0x837A1C")]
			add
			{
			}
			[Token(Token = "0x6001772")]
			[Address(RVA = "0x837B40", Offset = "0x837B40", VA = "0x837B40")]
			remove
			{
			}
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x8384E8", Offset = "0x8384E8", VA = "0x8384E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x83872C", Offset = "0x83872C", VA = "0x83872C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x83888C", Offset = "0x83888C", VA = "0x83888C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x838AB0", Offset = "0x838AB0", VA = "0x838AB0")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x838BB8", Offset = "0x838BB8", VA = "0x838BB8")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x838D3C", Offset = "0x838D3C", VA = "0x838D3C")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x838D44", Offset = "0x838D44", VA = "0x838D44")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x838BC0", Offset = "0x838BC0", VA = "0x838BC0")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x838D4C", Offset = "0x838D4C", VA = "0x838D4C")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x838DF0", Offset = "0x838DF0", VA = "0x838DF0", Slot = "4")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x838DF4", Offset = "0x838DF4", VA = "0x838DF4", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x838DF8", Offset = "0x838DF8", VA = "0x838DF8", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x838DFC", Offset = "0x838DFC", VA = "0x838DFC", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x838E00", Offset = "0x838E00", VA = "0x838E00", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x838E04", Offset = "0x838E04", VA = "0x838E04", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x838E08", Offset = "0x838E08", VA = "0x838E08", Slot = "10")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x838F1C", Offset = "0x838F1C", VA = "0x838F1C")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class CharacterInstantiation : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x20004B2")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SpawnPosition;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PositionOffset;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] PrefabsToInstantiate;

		[Token(Token = "0x40019FC")]
		private const byte manualInstantiationEventCode = 1;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool manualInstantiation;

		[Token(Token = "0x14000033")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x6001786")]
			[Address(RVA = "0x838674", Offset = "0x838674", VA = "0x838674")]
			add
			{
			}
			[Token(Token = "0x6001787")]
			[Address(RVA = "0x8387D4", Offset = "0x8387D4", VA = "0x8387D4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x838F38", Offset = "0x838F38", VA = "0x838F38", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x8392A8", Offset = "0x8392A8", VA = "0x8392A8")]
		private void ManualInstantiation(int index, Vector3 position)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x8396DC", Offset = "0x8396DC", VA = "0x8396DC", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x839948", Offset = "0x839948", VA = "0x839948")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float oldYRotation;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion velRotation;

		[Token(Token = "0x1700026F")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x83996C", Offset = "0x83996C", VA = "0x83996C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x839988", Offset = "0x839988", VA = "0x839988", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x8399CC", Offset = "0x8399CC", VA = "0x8399CC", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x839A54", Offset = "0x839A54", VA = "0x839A54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x839A58", Offset = "0x839A58", VA = "0x839A58")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x839B80", Offset = "0x839B80", VA = "0x839B80")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	[RequireComponent(typeof(Canvas))]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool showSpeakerLag;

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x839BFC", Offset = "0x839BFC", VA = "0x839BFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x839E4C", Offset = "0x839E4C", VA = "0x839E4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x839FC8", Offset = "0x839FC8", VA = "0x839FC8")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x839FD4", Offset = "0x839FD4", VA = "0x839FD4")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x839FF0", Offset = "0x839FF0", VA = "0x839FF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x83A120", Offset = "0x83A120", VA = "0x83A120")]
		private void Update()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x83A280", Offset = "0x83A280", VA = "0x83A280")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x83A398", Offset = "0x83A398", VA = "0x83A398")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float smoothing;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 offset;

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x83A3A0", Offset = "0x83A3A0", VA = "0x83A3A0", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x83A3C8", Offset = "0x83A3C8", VA = "0x83A3C8", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x83A438", Offset = "0x83A438", VA = "0x83A438", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x83A5CC", Offset = "0x83A5CC", VA = "0x83A5CC")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x83A6A0", Offset = "0x83A6A0", VA = "0x83A6A0")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x83A450", Offset = "0x83A450", VA = "0x83A450", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x83A6BC", Offset = "0x83A6BC", VA = "0x83A6BC")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class VoiceDemoUI : MonoBehaviour
	{
		[Token(Token = "0x20004B8")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceNetwork punVoiceNetwork;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text punSwitchText;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text voiceSwitchText;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text calibrateText;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Recorder recorder;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugGO;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool debugMode;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float volumeBeforeMute;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x17000270")]
		public bool DebugMode
		{
			[Token(Token = "0x60017A3")]
			[Address(RVA = "0x83A6D4", Offset = "0x83A6D4", VA = "0x83A6D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0x83A6DC", Offset = "0x83A6DC", VA = "0x83A6DC")]
			set
			{
			}
		}

		[Token(Token = "0x14000034")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0x839D94", Offset = "0x839D94", VA = "0x839D94")]
			add
			{
			}
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x839F10", Offset = "0x839F10", VA = "0x839F10")]
			remove
			{
			}
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x83A80C", Offset = "0x83A80C", VA = "0x83A80C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x83A870", Offset = "0x83A870", VA = "0x83A870")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x83AA74", Offset = "0x83AA74", VA = "0x83AA74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x83AC78", Offset = "0x83AC78", VA = "0x83AC78")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x83AD38", Offset = "0x83AD38", VA = "0x83AD38")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x83B0B8", Offset = "0x83B0B8", VA = "0x83B0B8")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x83B40C", Offset = "0x83B40C", VA = "0x83B40C")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x83B428", Offset = "0x83B428", VA = "0x83B428")]
		private void Start()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x83BA10", Offset = "0x83BA10", VA = "0x83BA10")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x83BAE0", Offset = "0x83BAE0", VA = "0x83BAE0")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x83BB60", Offset = "0x83BB60", VA = "0x83BB60")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x83BBFC", Offset = "0x83BBFC", VA = "0x83BBFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x83BE0C", Offset = "0x83BE0C", VA = "0x83BE0C")]
		private void PunClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x83C3D4", Offset = "0x83C3D4", VA = "0x83C3D4")]
		private void VoiceClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x83BFA0", Offset = "0x83BFA0", VA = "0x83BFA0")]
		private void UpdateUiBasedOnVoiceState(ClientState voiceClientState)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x83C3DC", Offset = "0x83C3DC", VA = "0x83C3DC")]
		public VoiceDemoUI()
		{
		}
	}
}
namespace Photon.Voice.DemoVoiceUI
{
	[Token(Token = "0x20004B9")]
	[RequireComponent(typeof(VoiceConnection))]
	public class DemoVoiceUI : MonoBehaviour
	{
		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text connectionStatusText;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text serverStatusText;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text roomStatusText;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text inputWarningText;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text packetLossWarningText;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputField localNicknameText;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WebRtcAudioDsp voiceAudioPreprocessor;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle debugEchoToggle;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle reliableTransmissionToggle;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject webRtcDspGameObject;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle aecToggle;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Toggle noiseSuppressionToggle;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle agcToggle;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle vadToggle;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Toggle muteToggle;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle streamAudioClipToggle;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle dspToggle;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Toggle photonVadToggle;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform RemoteVoicesPanel;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VoiceConnection voiceConnection;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject microphoneSetupGameObject;

		[Token(Token = "0x4001A34")]
		protected internal const string MutePropKey = "mute";

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color warningColor;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color okColor;

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x83D404", Offset = "0x83D404", VA = "0x83D404")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x83D858", Offset = "0x83D858", VA = "0x83D858")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x83D99C", Offset = "0x83D99C", VA = "0x83D99C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x83DA28", Offset = "0x83DA28", VA = "0x83DA28")]
		private void OnSpeakerCreated(Speaker speaker)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x83DB24", Offset = "0x83DB24", VA = "0x83DB24")]
		private void OnRemoteVoiceRemove(Speaker speaker)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x83DBC8", Offset = "0x83DBC8", VA = "0x83DBC8")]
		public void ToggleMute()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x83DCFC", Offset = "0x83DCFC", VA = "0x83DCFC")]
		public void ToggleDebugEcho()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x83DD34", Offset = "0x83DD34", VA = "0x83DD34")]
		public void ToggleReliable()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x83DD6C", Offset = "0x83DD6C", VA = "0x83DD6C")]
		public void ToggleAEC()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x83DD94", Offset = "0x83DD94", VA = "0x83DD94")]
		public void ToggleNoiseSuppression()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x83DDBC", Offset = "0x83DDBC", VA = "0x83DDBC")]
		public void ToggleAGC()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x83DDE4", Offset = "0x83DDE4", VA = "0x83DDE4")]
		public void ToggleVAD()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x83DE0C", Offset = "0x83DE0C", VA = "0x83DE0C")]
		public void ToggleDsp()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x83DE5C", Offset = "0x83DE5C", VA = "0x83DE5C")]
		public void ToggleAudioClipStreaming()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x83DF08", Offset = "0x83DF08", VA = "0x83DF08")]
		public void TogglePhotonVAD()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x83DF40", Offset = "0x83DF40", VA = "0x83DF40")]
		public void UpdateSyncedNickname(string nickname)
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x83DFE8", Offset = "0x83DFE8", VA = "0x83DFE8")]
		public void JoinOrCreateRoom(string roomname)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x83E174", Offset = "0x83E174", VA = "0x83E174")]
		protected void Update()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x83D464", Offset = "0x83D464", VA = "0x83D464")]
		private void InitToggles()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x83E7A0", Offset = "0x83E7A0", VA = "0x83E7A0")]
		public DemoVoiceUI()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public struct MicRef
	{
		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder.MicType MicType;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PhotonId;

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x83E7BC", Offset = "0x83E7BC", VA = "0x83E7BC")]
		public MicRef(string name)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x83E7E0", Offset = "0x83E7E0", VA = "0x83E7E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004BB")]
	public class MicrophoneDropdownFiller : MonoBehaviour
	{
		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown micDropdown;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MicRef> micOptions;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[FormerlySerializedAs("RefreshButton")]
		private GameObject refreshButton;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[FormerlySerializedAs("ToggleButton")]
		private GameObject toggleButton;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle photonToggle;

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x83E82C", Offset = "0x83E82C", VA = "0x83E82C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x83E8B4", Offset = "0x83E8B4", VA = "0x83E8B4")]
		private void SetupMicDropdown()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x83EC1C", Offset = "0x83EC1C", VA = "0x83EC1C")]
		private void MicDropdownValueChanged(MicRef mic)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x83ECAC", Offset = "0x83ECAC", VA = "0x83ECAC")]
		private void SetCurrentValue()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x83F00C", Offset = "0x83F00C", VA = "0x83F00C")]
		public void PhotonMicToggled(bool on)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x83E89C", Offset = "0x83E89C", VA = "0x83E89C")]
		public void RefreshMicrophones()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x83F09C", Offset = "0x83F09C", VA = "0x83F09C")]
		private void PhotonVoiceCreated()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x83F0B4", Offset = "0x83F0B4", VA = "0x83F0B4")]
		public MicrophoneDropdownFiller()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x83F0BC", Offset = "0x83F0BC", VA = "0x83F0BC")]
		private void <SetupMicDropdown>b__7_0(int <p0>)
		{
		}
	}
	[Token(Token = "0x20004BC")]
	[RequireComponent(typeof(Speaker))]
	public class RemoteSpeakerUI : MonoBehaviour
	{
		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image remoteIsMuting;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image remoteIsTalking;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Speaker speaker;

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x83F144", Offset = "0x83F144", VA = "0x83F144")]
		private void Start()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x83F294", Offset = "0x83F294", VA = "0x83F294")]
		private void Update()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x83F398", Offset = "0x83F398", VA = "0x83F398")]
		public RemoteSpeakerUI()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x20004BD")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x83F3A0", Offset = "0x83F3A0", VA = "0x83F3A0")]
		public void Start()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x83F540", Offset = "0x83F540", VA = "0x83F540")]
		public void Update()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x83F674", Offset = "0x83F674", VA = "0x83F674", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x83F678", Offset = "0x83F678", VA = "0x83F678", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x83F6FC", Offset = "0x83F6FC", VA = "0x83F6FC", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x83F7E8", Offset = "0x83F7E8", VA = "0x83F7E8", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x83F7EC", Offset = "0x83F7EC", VA = "0x83F7EC", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x83F7F0", Offset = "0x83F7F0", VA = "0x83F7F0", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x83F8CC", Offset = "0x83F8CC", VA = "0x83F8CC", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x83F8D0", Offset = "0x83F8D0", VA = "0x83F8D0", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x83F8D4", Offset = "0x83F8D4", VA = "0x83F8D4", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x83F8D8", Offset = "0x83F8D8", VA = "0x83F8D8", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x83F8DC", Offset = "0x83F8DC", VA = "0x83F8DC", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x83F8E0", Offset = "0x83F8E0", VA = "0x83F8E0", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x83F8E4", Offset = "0x83F8E4", VA = "0x83F8E4", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x83F8E8", Offset = "0x83F8E8", VA = "0x83F8E8", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x83F950", Offset = "0x83F950", VA = "0x83F950", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x83F954", Offset = "0x83F954", VA = "0x83F954", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x83FA08", Offset = "0x83FA08", VA = "0x83FA08", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x83FA0C", Offset = "0x83FA0C", VA = "0x83FA0C")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x83FB30", Offset = "0x83FB30", VA = "0x83FB30")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x20004BE")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x83FBA4", Offset = "0x83FBA4", VA = "0x83FBA4")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x83FCAC", Offset = "0x83FCAC", VA = "0x83FCAC")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x83FCB4", Offset = "0x83FCB4", VA = "0x83FCB4")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x83FD20", Offset = "0x83FD20", VA = "0x83FD20")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	[RequireComponent(typeof(Text))]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x83FD28", Offset = "0x83FD28", VA = "0x83FD28")]
		public void Awake()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x83FD80", Offset = "0x83FD80", VA = "0x83FD80")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x83FDB0", Offset = "0x83FDB0", VA = "0x83FDB0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x83FDE0", Offset = "0x83FDE0", VA = "0x83FDE0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x83FE90", Offset = "0x83FE90", VA = "0x83FE90", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x83FF40", Offset = "0x83FF40", VA = "0x83FF40")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	[RequireComponent(typeof(Text))]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x83FF5C", Offset = "0x83FF5C", VA = "0x83FF5C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x8400B0", Offset = "0x8400B0", VA = "0x8400B0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x84004C", Offset = "0x84004C", VA = "0x84004C")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x840158", Offset = "0x840158", VA = "0x840158", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x8401CC", Offset = "0x8401CC", VA = "0x8401CC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x84023C", Offset = "0x84023C", VA = "0x84023C")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace TriangleNet
{
	[Token(Token = "0x20004C2")]
	internal class Behavior
	{
		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool poly;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool quality;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool varArea;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool convex;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool boundaryMarkers;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool noHoles;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool conformDel;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Func<ITriangle, double, bool> usertest;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int noBisect;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double minAngle;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double maxAngle;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double maxArea;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool fixedArea;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		internal bool useSegments;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		internal bool useRegions;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal double goodAngle;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal double maxGoodAngle;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal double offconstant;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool <NoExact>k__BackingField;

		[Token(Token = "0x17000271")]
		public static bool NoExact
		{
			[Token(Token = "0x6001802")]
			[Address(RVA = "0x840624", Offset = "0x840624", VA = "0x840624")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000272")]
		public bool Quality
		{
			[Token(Token = "0x6001803")]
			[Address(RVA = "0x84066C", Offset = "0x84066C", VA = "0x84066C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001804")]
			[Address(RVA = "0x840674", Offset = "0x840674", VA = "0x840674")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public double MinAngle
		{
			[Token(Token = "0x6001805")]
			[Address(RVA = "0x840688", Offset = "0x840688", VA = "0x840688")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001806")]
			[Address(RVA = "0x840690", Offset = "0x840690", VA = "0x840690")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public double MaxAngle
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0x840698", Offset = "0x840698", VA = "0x840698")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001808")]
			[Address(RVA = "0x8406A0", Offset = "0x8406A0", VA = "0x8406A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public double MaxArea
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x8406A8", Offset = "0x8406A8", VA = "0x8406A8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x8406B0", Offset = "0x8406B0", VA = "0x8406B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public bool VarArea
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0x8406C4", Offset = "0x8406C4", VA = "0x8406C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x8406CC", Offset = "0x8406CC", VA = "0x8406CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public bool Poly
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x8406D8", Offset = "0x8406D8", VA = "0x8406D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600180E")]
			[Address(RVA = "0x8406E0", Offset = "0x8406E0", VA = "0x8406E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0x8406EC", Offset = "0x8406EC", VA = "0x8406EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001810")]
			[Address(RVA = "0x8406F4", Offset = "0x8406F4", VA = "0x8406F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public bool Convex
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0x8406FC", Offset = "0x8406FC", VA = "0x8406FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001812")]
			[Address(RVA = "0x840704", Offset = "0x840704", VA = "0x840704")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x6001813")]
			[Address(RVA = "0x840710", Offset = "0x840710", VA = "0x840710")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001814")]
			[Address(RVA = "0x840718", Offset = "0x840718", VA = "0x840718")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public int NoBisect
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0x840724", Offset = "0x840724", VA = "0x840724")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001816")]
			[Address(RVA = "0x84072C", Offset = "0x84072C", VA = "0x84072C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public bool NoHoles
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0x84073C", Offset = "0x84073C", VA = "0x84073C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x840260", Offset = "0x840260", VA = "0x840260")]
		public Behavior(bool quality = false, double minAngle = 20.0)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x8402C4", Offset = "0x8402C4", VA = "0x8402C4")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class Configuration
	{
		[Serializable]
		[Token(Token = "0x20004C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPredicates> <>9__0_0;

			[Token(Token = "0x4001A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TrianglePool> <>9__0_1;

			[Token(Token = "0x600181F")]
			[Address(RVA = "0x840998", Offset = "0x840998", VA = "0x840998")]
			public <>c()
			{
			}

			[Token(Token = "0x6001820")]
			[Address(RVA = "0x8409A0", Offset = "0x8409A0", VA = "0x8409A0")]
			internal IPredicates <.ctor>b__0_0()
			{
				return null;
			}

			[Token(Token = "0x6001821")]
			[Address(RVA = "0x8409F0", Offset = "0x8409F0", VA = "0x8409F0")]
			internal TrianglePool <.ctor>b__0_1()
			{
				return null;
			}
		}

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Func<IPredicates> <Predicates>k__BackingField;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Func<TrianglePool> <TrianglePool>k__BackingField;

		[Token(Token = "0x1700027D")]
		public Func<IPredicates> Predicates
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0x840908", Offset = "0x840908", VA = "0x840908")]
			get
			{
				return null;
			}
			[Token(Token = "0x600181B")]
			[Address(RVA = "0x840910", Offset = "0x840910", VA = "0x840910")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public Func<TrianglePool> TrianglePool
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0x840918", Offset = "0x840918", VA = "0x840918")]
			get
			{
				return null;
			}
			[Token(Token = "0x600181D")]
			[Address(RVA = "0x840920", Offset = "0x840920", VA = "0x840920")]
			set
			{
			}
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x840744", Offset = "0x840744", VA = "0x840744")]
		public Configuration()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x8408C4", Offset = "0x8408C4", VA = "0x8408C4")]
		public Configuration(Func<IPredicates> predicates, Func<TrianglePool> trianglePool)
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public enum VertexType
	{
		[Token(Token = "0x4001A6C")]
		InputVertex,
		[Token(Token = "0x4001A6D")]
		SegmentVertex,
		[Token(Token = "0x4001A6E")]
		FreeVertex,
		[Token(Token = "0x4001A6F")]
		DeadVertex,
		[Token(Token = "0x4001A70")]
		UndeadVertex
	}
	[Token(Token = "0x20004C6")]
	public enum LocateResult
	{
		[Token(Token = "0x4001A72")]
		InTriangle,
		[Token(Token = "0x4001A73")]
		OnEdge,
		[Token(Token = "0x4001A74")]
		OnVertex,
		[Token(Token = "0x4001A75")]
		Outside
	}
	[Token(Token = "0x20004C7")]
	internal enum InsertVertexResult
	{
		[Token(Token = "0x4001A77")]
		Successful,
		[Token(Token = "0x4001A78")]
		Encroaching,
		[Token(Token = "0x4001A79")]
		Violating,
		[Token(Token = "0x4001A7A")]
		Duplicate
	}
	[Token(Token = "0x20004C8")]
	internal enum FindDirectionResult
	{
		[Token(Token = "0x4001A7C")]
		Within,
		[Token(Token = "0x4001A7D")]
		Leftcollinear,
		[Token(Token = "0x4001A7E")]
		Rightcollinear
	}
	[Token(Token = "0x20004C9")]
	public interface IPredicates
	{
		[Token(Token = "0x6001822")]
		double CounterClockwise(Point a, Point b, Point c);

		[Token(Token = "0x6001823")]
		double InCircle(Point a, Point b, Point c, Point p);

		[Token(Token = "0x6001824")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta);

		[Token(Token = "0x6001825")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant);
	}
	[Token(Token = "0x20004CA")]
	public sealed class Log : ILog<LogItem>
	{
		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool <Verbose>k__BackingField;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LogItem> log;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Log instance;

		[Token(Token = "0x1700027F")]
		public static bool Verbose
		{
			[Token(Token = "0x6001826")]
			[Address(RVA = "0x840A4C", Offset = "0x840A4C", VA = "0x840A4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000280")]
		public static ILog<LogItem> Instance
		{
			[Token(Token = "0x6001829")]
			[Address(RVA = "0x840B90", Offset = "0x840B90", VA = "0x840B90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x840AA4", Offset = "0x840AA4", VA = "0x840AA4")]
		static Log()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x840B08", Offset = "0x840B08", VA = "0x840B08")]
		private Log()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x840BE8", Offset = "0x840BE8", VA = "0x840BE8", Slot = "5")]
		public void Warning(string message, string location)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x840CE0", Offset = "0x840CE0", VA = "0x840CE0", Slot = "4")]
		public void Error(string message, string location)
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class Mesh : IMesh
	{
		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ILog<LogItem> logger;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QualityMesher qualityMesher;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stack<Otri> flipstack;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal TrianglePool triangles;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Dictionary<int, SubSegment> subsegs;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Dictionary<int, Vertex> vertices;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal int hash_vtx;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal int hash_seg;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal List<Point> holes;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal List<RegionPointer> regions;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal Rectangle bounds;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal int invertices;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal int insegments;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal int undeads;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal int mesh_dim;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal int hullsize;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal int steinerleft;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal bool checksegments;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		internal bool checkquality;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal Vertex infvertex1;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal Vertex infvertex2;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal Vertex infvertex3;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal TriangleLocator locator;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal Behavior behavior;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal Triangle dummytri;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal SubSegment dummysub;

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x840DD8", Offset = "0x840DD8", VA = "0x840DD8")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x840FB4", Offset = "0x840FB4", VA = "0x840FB4")]
		public Mesh(Configuration config)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x8412F8", Offset = "0x8412F8", VA = "0x8412F8")]
		internal void SetQualityMesher(QualityMesher qmesher)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x841300", Offset = "0x841300", VA = "0x841300")]
		internal void TransferNodes(IList<Vertex> points)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x841900", Offset = "0x841900", VA = "0x841900")]
		internal void MakeVertexMap()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x841BD8", Offset = "0x841BD8", VA = "0x841BD8")]
		internal void MakeTriangle(ref Otri newotri)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x841CE0", Offset = "0x841CE0", VA = "0x841CE0")]
		internal void MakeSegment(ref Osub newsubseg)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x841E10", Offset = "0x841E10", VA = "0x841E10")]
		internal InsertVertexResult InsertVertex(Vertex newvertex, ref Otri searchtri, ref Osub splitseg, bool segmentflaws, bool triflaws)
		{
			return default(InsertVertexResult);
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x842EEC", Offset = "0x842EEC", VA = "0x842EEC")]
		internal void InsertSubseg(ref Otri tri, int subsegmark)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x843030", Offset = "0x843030", VA = "0x843030")]
		internal void Flip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x843334", Offset = "0x843334", VA = "0x843334")]
		internal void Unflip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x843638", Offset = "0x843638", VA = "0x843638")]
		private void TriangulatePolygon(Otri firstedge, Otri lastedge, int edgecount, bool doflip, bool triflaws)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x8438C0", Offset = "0x8438C0", VA = "0x8438C0")]
		internal void DeleteVertex(ref Otri deltri)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x843BD8", Offset = "0x843BD8", VA = "0x843BD8")]
		internal void UndoVertex()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x843B5C", Offset = "0x843B5C", VA = "0x843B5C")]
		internal void TriangleDealloc(Triangle dyingtriangle)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x843AF8", Offset = "0x843AF8", VA = "0x843AF8")]
		internal void VertexDealloc(Vertex dyingvertex)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x843F2C", Offset = "0x843F2C", VA = "0x843F2C")]
		internal void SubsegDealloc(SubSegment dyingsubseg)
		{
		}
	}
	[Token(Token = "0x20004CC")]
	internal class NewLocation
	{
		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] petalx;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] petaly;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] petalr;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] wedges;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] initialConvexPoly;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] points_p;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] points_q;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] points_r;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] poly1;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] poly2;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[][] polys;

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x843F94", Offset = "0x843F94", VA = "0x843F94")]
		public NewLocation(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x844174", Offset = "0x844174", VA = "0x844174")]
		public Point FindLocation(Vertex org, Vertex dest, Vertex apex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x8441B4", Offset = "0x8441B4", VA = "0x8441B4")]
		private Point FindNewLocationWithoutMaxAngle(Vertex torg, Vertex tdest, Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x8452B4", Offset = "0x8452B4", VA = "0x8452B4")]
		private Point FindNewLocation(Vertex torg, Vertex tdest, Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x847008", Offset = "0x847008", VA = "0x847008")]
		private int LongestShortestEdge(double aodist, double dadist, double dodist)
		{
			return default(int);
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x847094", Offset = "0x847094", VA = "0x847094")]
		private int DoSmoothing(Otri badotri, Vertex torg, Vertex tdest, Vertex tapex, ref double[] newloc)
		{
			return default(int);
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x8482F4", Offset = "0x8482F4", VA = "0x8482F4")]
		private int GetStarPoints(Otri badotri, Vertex p, Vertex q, Vertex r, int whichPoint, ref double[] points)
		{
			return default(int);
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x8474A8", Offset = "0x8474A8", VA = "0x8474A8")]
		private bool GetNeighborsVertex(Otri badotri, double first_x, double first_y, double second_x, double second_y, ref double[] thirdpoint, ref Otri neighotri)
		{
			return default(bool);
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x848754", Offset = "0x848754", VA = "0x848754")]
		private bool GetWedgeIntersectionWithoutMaxAngle(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x849300", Offset = "0x849300", VA = "0x849300")]
		private bool GetWedgeIntersection(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x84859C", Offset = "0x84859C", VA = "0x84859C")]
		private bool ValidPolygonAngles(int numpoints, double[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x84B088", Offset = "0x84B088", VA = "0x84B088")]
		private bool IsBadPolygonAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x847E40", Offset = "0x847E40", VA = "0x847E40")]
		private void LineLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x84AD58", Offset = "0x84AD58", VA = "0x84AD58")]
		private int HalfPlaneIntersection(int numvertices, ref double[] convexPoly, double x1, double y1, double x2, double y2)
		{
			return default(int);
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x84B18C", Offset = "0x84B18C", VA = "0x84B18C")]
		private int SplitConvexPolygon(int numvertices, double[] convexPoly, double x1, double y1, double x2, double y2, double[][] polys)
		{
			return default(int);
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x84BCA8", Offset = "0x84BCA8", VA = "0x84BCA8")]
		private int LinePointLocation(double x1, double y1, double x2, double y2, double x, double y)
		{
			return default(int);
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x84BAD8", Offset = "0x84BAD8", VA = "0x84BAD8")]
		private void LineLineSegmentIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x84AFD8", Offset = "0x84AFD8", VA = "0x84AFD8")]
		private void FindPolyCentroid(int numpoints, double[] points, ref double[] centroid)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x847930", Offset = "0x847930", VA = "0x847930")]
		private void CircleLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double r, ref double[] p)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x847B84", Offset = "0x847B84", VA = "0x847B84")]
		private bool ChooseCorrectPoint(double x1, double y1, double x2, double y2, double x3, double y3, bool isObtuse)
		{
			return default(bool);
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x847BC4", Offset = "0x847BC4", VA = "0x847BC4")]
		private void PointBetweenPoints(double x1, double y1, double x2, double y2, double x, double y, ref double[] p)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x847C88", Offset = "0x847C88", VA = "0x847C88")]
		private bool IsBadTriangleAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x847FFC", Offset = "0x847FFC", VA = "0x847FFC")]
		private double MinDistanceToNeighbor(double newlocX, double newlocY, ref Otri searchtri)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20004CD")]
	public class RobustPredicates : IPredicates
	{
		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object creationLock;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RobustPredicates _default;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static double epsilon;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static double splitter;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static double resulterrbound;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static double ccwerrboundA;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static double ccwerrboundB;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static double ccwerrboundC;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static double iccerrboundA;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static double iccerrboundB;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static double iccerrboundC;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double[] fin1;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double[] fin2;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double[] abdet;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] axbc;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] axxbc;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] aybc;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] ayybc;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] adet;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] bxca;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] bxxca;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] byca;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] byyca;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] bdet;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[] cxab;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private double[] cxxab;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private double[] cyab;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private double[] cyyab;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private double[] cdet;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private double[] temp8;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double[] temp16a;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private double[] temp16b;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private double[] temp16c;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private double[] temp32a;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private double[] temp32b;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private double[] temp48;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private double[] temp64;

		[Token(Token = "0x17000281")]
		public static RobustPredicates Default
		{
			[Token(Token = "0x6001854")]
			[Address(RVA = "0x84BE00", Offset = "0x84BE00", VA = "0x84BE00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x84BFB4", Offset = "0x84BFB4", VA = "0x84BFB4")]
		static RobustPredicates()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x84BF98", Offset = "0x84BF98", VA = "0x84BF98")]
		public RobustPredicates()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x84C444", Offset = "0x84C444", VA = "0x84C444", Slot = "4")]
		public double CounterClockwise(Point pa, Point pb, Point pc)
		{
			return default(double);
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x84CDB0", Offset = "0x84CDB0", VA = "0x84CDB0", Slot = "5")]
		public double InCircle(Point pa, Point pb, Point pc, Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x84FDAC", Offset = "0x84FDAC", VA = "0x84FDAC", Slot = "7")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant)
		{
			return null;
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x8500F8", Offset = "0x8500F8", VA = "0x8500F8", Slot = "6")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta)
		{
			return null;
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x850300", Offset = "0x850300", VA = "0x850300")]
		private int FastExpansionSumZeroElim(int elen, double[] e, int flen, double[] f, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x8505C8", Offset = "0x8505C8", VA = "0x8505C8")]
		private int ScaleExpansionZeroElim(int elen, double[] e, double b, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x8507FC", Offset = "0x8507FC", VA = "0x8507FC")]
		private double Estimate(int elen, double[] e)
		{
			return default(double);
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x84C610", Offset = "0x84C610", VA = "0x84C610")]
		private double CounterClockwiseAdapt(Point pa, Point pb, Point pc, double detsum)
		{
			return default(double);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x84D058", Offset = "0x84D058", VA = "0x84D058")]
		private double InCircleAdapt(Point pa, Point pb, Point pc, Point pd, double permanent)
		{
			return default(double);
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x84C130", Offset = "0x84C130", VA = "0x84C130")]
		private void AllocateWorkspace()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class TriangleLocator
	{
		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TriangleSampler sampler;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPredicates predicates;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri recenttri;

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x850854", Offset = "0x850854", VA = "0x850854")]
		public TriangleLocator(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x850974", Offset = "0x850974", VA = "0x850974")]
		public void Update(ref Otri otri)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x8509E0", Offset = "0x8509E0", VA = "0x8509E0")]
		public LocateResult PreciseLocate(Point searchpoint, ref Otri searchtri, bool stopatsubsegment)
		{
			return default(LocateResult);
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x851164", Offset = "0x851164", VA = "0x851164")]
		public LocateResult Locate(Point searchpoint, ref Otri searchtri)
		{
			return default(LocateResult);
		}
	}
	[Token(Token = "0x20004CF")]
	public class TrianglePool : ICollection<Triangle>, IEnumerable<Triangle>, IEnumerable
	{
		[Token(Token = "0x20004D0")]
		private class Enumerator : IEnumerator<Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int count;

			[Token(Token = "0x4001AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Triangle[][] pool;

			[Token(Token = "0x4001ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Triangle current;

			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int index;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int offset;

			[Token(Token = "0x17000284")]
			public Triangle Current
			{
				[Token(Token = "0x6001874")]
				[Address(RVA = "0x852424", Offset = "0x852424", VA = "0x852424", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000285")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001876")]
				[Address(RVA = "0x852430", Offset = "0x852430", VA = "0x852430", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001873")]
			[Address(RVA = "0x8523D4", Offset = "0x8523D4", VA = "0x8523D4")]
			public Enumerator(TrianglePool pool)
			{
			}

			[Token(Token = "0x6001875")]
			[Address(RVA = "0x85242C", Offset = "0x85242C", VA = "0x85242C", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6001877")]
			[Address(RVA = "0x852438", Offset = "0x852438", VA = "0x852438", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004D1")]
		private sealed class <Sample>d__9 : IEnumerable<Triangle>, IEnumerable, IEnumerator<Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Triangle <>2__current;

			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrianglePool <>4__this;

			[Token(Token = "0x4001AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int k;

			[Token(Token = "0x4001AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__k;

			[Token(Token = "0x4001AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private System.Random random;

			[Token(Token = "0x4001AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public System.Random <>3__random;

			[Token(Token = "0x4001AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <count>5__2;

			[Token(Token = "0x17000286")]
			private Triangle System.Collections.Generic.IEnumerator<TriangleNet.Topology.Triangle>.Current
			{
				[Token(Token = "0x600187B")]
				[Address(RVA = "0x85260C", Offset = "0x85260C", VA = "0x85260C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000287")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600187C")]
				[Address(RVA = "0x852614", Offset = "0x852614", VA = "0x852614", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001878")]
			[Address(RVA = "0x851F48", Offset = "0x851F48", VA = "0x851F48")]
			[DebuggerHidden]
			public <Sample>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001879")]
			[Address(RVA = "0x8524F8", Offset = "0x8524F8", VA = "0x8524F8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600187A")]
			[Address(RVA = "0x8524FC", Offset = "0x8524FC", VA = "0x8524FC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600187D")]
			[Address(RVA = "0x85261C", Offset = "0x85261C", VA = "0x85261C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Triangle> System.Collections.Generic.IEnumerable<TriangleNet.Topology.Triangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600187E")]
			[Address(RVA = "0x8526E0", Offset = "0x8526E0", VA = "0x8526E0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int size;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int count;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Triangle[][] pool;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<Triangle> stack;

		[Token(Token = "0x17000282")]
		public int Count
		{
			[Token(Token = "0x600186E")]
			[Address(RVA = "0x85233C", Offset = "0x85233C", VA = "0x85233C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000283")]
		public bool IsReadOnly
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0x85238C", Offset = "0x85238C", VA = "0x85238C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x8518A4", Offset = "0x8518A4", VA = "0x8518A4")]
		public TrianglePool()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x851A14", Offset = "0x851A14", VA = "0x851A14")]
		public Triangle Get()
		{
			return null;
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x851E34", Offset = "0x851E34", VA = "0x851E34")]
		public void Release(Triangle triangle)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x851EA0", Offset = "0x851EA0", VA = "0x851EA0")]
		internal IEnumerable<Triangle> Sample(int k, System.Random random)
		{
			return null;
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x851CB4", Offset = "0x851CB4", VA = "0x851CB4")]
		private void Cleanup(Triangle triangle)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x851F7C", Offset = "0x851F7C", VA = "0x851F7C", Slot = "6")]
		public void Add(Triangle item)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x851FBC", Offset = "0x851FBC", VA = "0x851FBC", Slot = "7")]
		public void Clear()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x8520D4", Offset = "0x8520D4", VA = "0x8520D4", Slot = "8")]
		public bool Contains(Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x852154", Offset = "0x852154", VA = "0x852154", Slot = "9")]
		public void CopyTo(Triangle[] array, int index)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x852394", Offset = "0x852394", VA = "0x852394", Slot = "10")]
		public bool Remove(Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x8522DC", Offset = "0x8522DC", VA = "0x8522DC", Slot = "11")]
		public IEnumerator<Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x852420", Offset = "0x852420", VA = "0x852420", Slot = "12")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20004D2")]
	internal class TriangleSampler : IEnumerable<Triangle>, IEnumerable
	{
		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random random;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int samples;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int triangleCount;

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x8508F8", Offset = "0x8508F8", VA = "0x8508F8")]
		public TriangleSampler(Mesh mesh)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x8526E4", Offset = "0x8526E4", VA = "0x8526E4")]
		public TriangleSampler(Mesh mesh, System.Random random)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x851728", Offset = "0x851728", VA = "0x851728")]
		public void Update()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x8517A0", Offset = "0x8517A0", VA = "0x8517A0", Slot = "4")]
		public IEnumerator<Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x852730", Offset = "0x852730", VA = "0x852730", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology
{
	[Token(Token = "0x20004D3")]
	public struct Osub
	{
		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal SubSegment seg;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x852734", Offset = "0x852734", VA = "0x852734", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x8527D4", Offset = "0x8527D4", VA = "0x8527D4")]
		public void Sym(ref Osub os)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x852814", Offset = "0x852814", VA = "0x852814")]
		public void Sym()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x852828", Offset = "0x852828", VA = "0x852828")]
		public void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x852874", Offset = "0x852874", VA = "0x852874")]
		internal void Pivot(ref Otri ot)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x8528C0", Offset = "0x8528C0", VA = "0x8528C0")]
		public void Next()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x85290C", Offset = "0x85290C", VA = "0x85290C")]
		public Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x852948", Offset = "0x852948", VA = "0x852948")]
		public Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x85298C", Offset = "0x85298C", VA = "0x85298C")]
		internal void SetOrg(Vertex vertex)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x8529FC", Offset = "0x8529FC", VA = "0x8529FC")]
		internal void SetDest(Vertex vertex)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x852A74", Offset = "0x852A74", VA = "0x852A74")]
		internal Vertex SegOrg()
		{
			return null;
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x852AB4", Offset = "0x852AB4", VA = "0x852AB4")]
		internal Vertex SegDest()
		{
			return null;
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x852AF8", Offset = "0x852AF8", VA = "0x852AF8")]
		internal void SetSegOrg(Vertex vertex)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x852B6C", Offset = "0x852B6C", VA = "0x852B6C")]
		internal void SetSegDest(Vertex vertex)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x852BE4", Offset = "0x852BE4", VA = "0x852BE4")]
		internal void Bond(ref Osub os)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x852C6C", Offset = "0x852C6C", VA = "0x852C6C")]
		internal void Dissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x852CA8", Offset = "0x852CA8", VA = "0x852CA8")]
		internal void TriDissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x852CE4", Offset = "0x852CE4", VA = "0x852CE4")]
		internal static bool IsDead(SubSegment sub)
		{
			return default(bool);
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x852D18", Offset = "0x852D18", VA = "0x852D18")]
		internal static void Kill(SubSegment sub)
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public struct Otri
	{
		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Triangle tri;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x852D6C", Offset = "0x852D6C", VA = "0x852D6C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x851094", Offset = "0x851094", VA = "0x851094")]
		public void Sym(ref Otri ot)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x85185C", Offset = "0x85185C", VA = "0x85185C")]
		public void Sym()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x850FF4", Offset = "0x850FF4", VA = "0x850FF4")]
		public void Lnext(ref Otri ot)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x850ED0", Offset = "0x850ED0", VA = "0x850ED0")]
		public void Lnext()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x850F54", Offset = "0x850F54", VA = "0x850F54")]
		public void Lprev(ref Otri ot)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x850E4C", Offset = "0x850E4C", VA = "0x850E4C")]
		public void Lprev()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x852E0C", Offset = "0x852E0C", VA = "0x852E0C")]
		public void Onext(ref Otri ot)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x852EE0", Offset = "0x852EE0", VA = "0x852EE0")]
		public void Onext()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x852F98", Offset = "0x852F98", VA = "0x852F98")]
		public void Oprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x853080", Offset = "0x853080", VA = "0x853080")]
		public void Oprev()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x853140", Offset = "0x853140", VA = "0x853140")]
		public void Dnext(ref Otri ot)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x853228", Offset = "0x853228", VA = "0x853228")]
		public void Dnext()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x8532E8", Offset = "0x8532E8", VA = "0x8532E8")]
		public void Dprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x850CC8", Offset = "0x850CC8", VA = "0x850CC8")]
		public Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x850D6C", Offset = "0x850D6C", VA = "0x850D6C")]
		public Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x850E10", Offset = "0x850E10", VA = "0x850E10")]
		public Vertex Apex()
		{
			return null;
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x8509A8", Offset = "0x8509A8", VA = "0x8509A8")]
		public void Copy(ref Otri ot)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x8533BC", Offset = "0x8533BC", VA = "0x8533BC")]
		public bool Equals(Otri ot)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x8533E0", Offset = "0x8533E0", VA = "0x8533E0")]
		internal void SetOrg(Vertex v)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x8534B8", Offset = "0x8534B8", VA = "0x8534B8")]
		internal void SetDest(Vertex v)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x853590", Offset = "0x853590", VA = "0x853590")]
		internal void SetApex(Vertex v)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x853600", Offset = "0x853600", VA = "0x853600")]
		internal void Bond(ref Otri ot)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x8536D8", Offset = "0x8536D8", VA = "0x8536D8")]
		internal void Dissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x853744", Offset = "0x853744", VA = "0x853744")]
		internal void Infect()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x853764", Offset = "0x853764", VA = "0x853764")]
		internal void Uninfect()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x853780", Offset = "0x853780", VA = "0x853780")]
		internal bool IsInfected()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x851118", Offset = "0x851118", VA = "0x851118")]
		internal void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x85379C", Offset = "0x85379C", VA = "0x85379C")]
		internal void SegBond(ref Osub os)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x853824", Offset = "0x853824", VA = "0x853824")]
		internal void SegDissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x8516F4", Offset = "0x8516F4", VA = "0x8516F4")]
		internal static bool IsDead(Triangle tria)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x853860", Offset = "0x853860", VA = "0x853860")]
		internal static void Kill(Triangle tri)
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class SubSegment : ISegment, IEdge
	{
		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Osub[] subsegs;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Vertex[] vertices;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri[] triangles;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int boundary;

		[Token(Token = "0x17000288")]
		public int Label
		{
			[Token(Token = "0x60018B9")]
			[Address(RVA = "0x853A68", Offset = "0x853A68", VA = "0x853A68", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x853998", Offset = "0x853998", VA = "0x853998")]
		public SubSegment()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x853A70", Offset = "0x853A70", VA = "0x853A70", Slot = "4")]
		public Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x853AA0", Offset = "0x853AA0", VA = "0x853AA0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x853AA8", Offset = "0x853AA8", VA = "0x853AA8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004D6")]
	public class Triangle : ITriangle
	{
		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int id;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Otri[] neighbors;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Vertex[] vertices;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Osub[] subsegs;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int label;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal double area;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool infected;

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x851D68", Offset = "0x851D68", VA = "0x851D68")]
		public Triangle()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x853B2C", Offset = "0x853B2C", VA = "0x853B2C", Slot = "4")]
		public Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x853B5C", Offset = "0x853B5C", VA = "0x853B5C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x853B64", Offset = "0x853B64", VA = "0x853B64", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Tools
{
	[Token(Token = "0x20004D7")]
	public static class Interpolation
	{
		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x853BE8", Offset = "0x853BE8", VA = "0x853BE8")]
		public static void InterpolateZ(Point p, ITriangle triangle)
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class Statistic
	{
		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static long InCircleCount;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static long InCircleAdaptCount;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static long CounterClockwiseCount;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static long CounterClockwiseAdaptCount;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static long Orient3dCount;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static long HyperbolaCount;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static long CircumcenterCount;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static long CircleTopCount;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static long RelocationCount;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly int[] minus1Mod3;
	}
	[Token(Token = "0x20004D9")]
	public class VertexSorter
	{
		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random rand;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vertex[] points;

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x853EE4", Offset = "0x853EE4", VA = "0x853EE4")]
		private VertexSorter(Vertex[] points, int seed)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x853F7C", Offset = "0x853F7C", VA = "0x853F7C")]
		public static void Sort(Vertex[] array, int seed = 57113)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x854334", Offset = "0x854334", VA = "0x854334")]
		public static void Alternate(Vertex[] array, int length, int seed = 57113)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x853FFC", Offset = "0x853FFC", VA = "0x853FFC")]
		private void QuickSort(int left, int right)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x8543F0", Offset = "0x8543F0", VA = "0x8543F0")]
		private void AlternateAxes(int left, int right, int axis)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x8544A8", Offset = "0x8544A8", VA = "0x8544A8")]
		private void VertexMedianX(int left, int right, int median)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x8547B8", Offset = "0x8547B8", VA = "0x8547B8")]
		private void VertexMedianY(int left, int right, int median)
		{
		}
	}
}
namespace TriangleNet.Meshing
{
	[Token(Token = "0x20004DA")]
	internal class ConstraintMesher
	{
		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TriangleLocator locator;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Triangle> viri;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ILog<LogItem> logger;

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x854AC8", Offset = "0x854AC8", VA = "0x854AC8")]
		public ConstraintMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x854C2C", Offset = "0x854C2C", VA = "0x854C2C")]
		public void Apply(IPolygon input, ConstraintOptions options)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x855778", Offset = "0x855778", VA = "0x855778")]
		private void CarveHoles()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x854F98", Offset = "0x854F98", VA = "0x854F98")]
		private void FormSkeleton(IPolygon input)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x855FB0", Offset = "0x855FB0", VA = "0x855FB0")]
		private void InfectHull()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x8561A8", Offset = "0x8561A8", VA = "0x8561A8")]
		private void Plague()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x856AB0", Offset = "0x856AB0", VA = "0x856AB0")]
		private FindDirectionResult FindDirection(ref Otri searchtri, Vertex searchpoint)
		{
			return default(FindDirectionResult);
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x856EAC", Offset = "0x856EAC", VA = "0x856EAC")]
		private void SegmentIntersection(ref Otri splittri, ref Osub splitsubseg, Vertex endpoint2)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x857298", Offset = "0x857298", VA = "0x857298")]
		private bool ScoutSegment(ref Otri searchtri, Vertex endpoint2, int newmark)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x857450", Offset = "0x857450", VA = "0x857450")]
		private void DelaunayFixup(ref Otri fixuptri, bool leftside)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x85774C", Offset = "0x85774C", VA = "0x85774C")]
		private void ConstrainedEdge(ref Otri starttri, Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x856740", Offset = "0x856740", VA = "0x856740")]
		private void InsertSegment(Vertex endpoint1, Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x8569D4", Offset = "0x8569D4", VA = "0x8569D4")]
		private void MarkHull()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class ConstraintOptions
	{
		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool <ConformingDelaunay>k__BackingField;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool <Convex>k__BackingField;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int <SegmentSplitting>k__BackingField;

		[Token(Token = "0x17000289")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x8589E8", Offset = "0x8589E8", VA = "0x8589E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x8589F0", Offset = "0x8589F0", VA = "0x8589F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public bool Convex
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x8589FC", Offset = "0x8589FC", VA = "0x8589FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028B")]
		public int SegmentSplitting
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x858A04", Offset = "0x858A04", VA = "0x858A04")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x858A0C", Offset = "0x858A0C", VA = "0x858A0C")]
		public ConstraintOptions()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class GenericMesher
	{
		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Configuration config;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ITriangulator triangulator;

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x858A14", Offset = "0x858A14", VA = "0x858A14")]
		public GenericMesher()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x858AC0", Offset = "0x858AC0", VA = "0x858AC0")]
		public GenericMesher(ITriangulator triangulator, Configuration config)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x858B04", Offset = "0x858B04", VA = "0x858B04")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}
	}
	[Token(Token = "0x20004DD")]
	public interface IMesh
	{
	}
	[Token(Token = "0x20004DE")]
	public interface ITriangulator
	{
		[Token(Token = "0x60018DF")]
		IMesh Triangulate(IList<Vertex> points, Configuration config);
	}
	[Token(Token = "0x20004DF")]
	internal class QualityMesher
	{
		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<BadSubseg> badsubsegs;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BadTriQueue queue;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Behavior behavior;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NewLocation newLocation;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ILog<LogItem> logger;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Triangle newvertex_tri;

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x858D44", Offset = "0x858D44", VA = "0x858D44")]
		public QualityMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x858F58", Offset = "0x858F58", VA = "0x858F58")]
		public void Apply(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x8593E0", Offset = "0x8593E0", VA = "0x8593E0")]
		public void AddBadSubseg(BadSubseg badseg)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x859438", Offset = "0x859438", VA = "0x859438")]
		public int CheckSeg4Encroach(ref Osub testsubseg)
		{
			return default(int);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x859740", Offset = "0x859740", VA = "0x859740")]
		public void TestTriangle(ref Otri testtri)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x859D6C", Offset = "0x859D6C", VA = "0x859D6C")]
		private void TallyEncs()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x859EEC", Offset = "0x859EEC", VA = "0x859EEC")]
		private void SplitEncSegs(bool triflaws)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x85A830", Offset = "0x85A830", VA = "0x85A830")]
		private void TallyFaces()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x85AAC0", Offset = "0x85AAC0", VA = "0x85AAC0")]
		private void SplitTriangle(BadTriangle badtri)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x859190", Offset = "0x859190", VA = "0x859190")]
		private void EnforceQuality()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	public class QualityOptions
	{
		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double <MaximumAngle>k__BackingField;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double <MinimumAngle>k__BackingField;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double <MaximumArea>k__BackingField;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Func<ITriangle, double, bool> <UserTest>k__BackingField;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <VariableArea>k__BackingField;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <SteinerPoints>k__BackingField;

		[Token(Token = "0x1700028C")]
		public double MaximumAngle
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x85B430", Offset = "0x85B430", VA = "0x85B430")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700028D")]
		public double MinimumAngle
		{
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x85B438", Offset = "0x85B438", VA = "0x85B438")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x85B440", Offset = "0x85B440", VA = "0x85B440")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public double MaximumArea
		{
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x85B448", Offset = "0x85B448", VA = "0x85B448")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x85B450", Offset = "0x85B450", VA = "0x85B450")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x85B458", Offset = "0x85B458", VA = "0x85B458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		public bool VariableArea
		{
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x85B460", Offset = "0x85B460", VA = "0x85B460")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000291")]
		public int SteinerPoints
		{
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x85B468", Offset = "0x85B468", VA = "0x85B468")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x85B470", Offset = "0x85B470", VA = "0x85B470")]
		public QualityOptions()
		{
		}
	}
}
namespace TriangleNet.Meshing.Iterators
{
	[Token(Token = "0x20004E1")]
	public class RegionIterator
	{
		[Token(Token = "0x20004E2")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Triangle triangle;

			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x85B5E4", Offset = "0x85B5E4", VA = "0x85B5E4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x85BB7C", Offset = "0x85BB7C", VA = "0x85BB7C")]
			internal void <Process>b__0(Triangle tri)
			{
			}
		}

		[Token(Token = "0x20004E3")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int boundary;

			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x85B870", Offset = "0x85B870", VA = "0x85B870")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x85BBA8", Offset = "0x85BBA8", VA = "0x85BBA8")]
			internal bool <Process>b__1(SubSegment seg)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004E4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SubSegment, bool> <>9__3_0;

			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x85BC3C", Offset = "0x85BC3C", VA = "0x85BC3C")]
			public <>c()
			{
			}

			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x85BC44", Offset = "0x85BC44", VA = "0x85BC44")]
			internal bool <Process>b__3_0(SubSegment seg)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Triangle> region;

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x85B478", Offset = "0x85B478", VA = "0x85B478")]
		public RegionIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x85B500", Offset = "0x85B500", VA = "0x85B500")]
		public void Process(Triangle triangle, int boundary = 0)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x85B5EC", Offset = "0x85B5EC", VA = "0x85B5EC")]
		public void Process(Triangle triangle, Action<Triangle> action, int boundary = 0)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x85B878", Offset = "0x85B878", VA = "0x85B878")]
		private void ProcessRegion(Action<Triangle> action, Func<SubSegment, bool> protector)
		{
		}
	}
}
namespace TriangleNet.Meshing.Data
{
	[Token(Token = "0x20004E5")]
	internal class BadSubseg
	{
		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Osub subseg;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vertex org;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vertex dest;

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x85BC64", Offset = "0x85BC64", VA = "0x85BC64", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x85BC80", Offset = "0x85BC80", VA = "0x85BC80", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x859738", Offset = "0x859738", VA = "0x859738")]
		public BadSubseg()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	internal class BadTriangle
	{
		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Otri poortri;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double key;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vertex org;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vertex dest;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vertex apex;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BadTriangle next;

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x85BD08", Offset = "0x85BD08", VA = "0x85BD08", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x85BD90", Offset = "0x85BD90", VA = "0x85BD90")]
		public BadTriangle()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	internal class BadTriQueue
	{
		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BadTriangle[] queuefront;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BadTriangle[] queuetail;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] nextnonemptyq;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int firstnonemptyq;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int count;

		[Token(Token = "0x17000292")]
		public int Count
		{
			[Token(Token = "0x6001903")]
			[Address(RVA = "0x85BD98", Offset = "0x85BD98", VA = "0x85BD98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x8590CC", Offset = "0x8590CC", VA = "0x8590CC")]
		public BadTriQueue()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x85B208", Offset = "0x85B208", VA = "0x85B208")]
		public void Enqueue(BadTriangle badtri)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x859C48", Offset = "0x859C48", VA = "0x859C48")]
		public void Enqueue(ref Otri enqtri, double minedge, Vertex apex, Vertex org, Vertex dest)
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x85B10C", Offset = "0x85B10C", VA = "0x85B10C")]
		public BadTriangle Dequeue()
		{
			return null;
		}
	}
}
namespace TriangleNet.Meshing.Algorithm
{
	[Token(Token = "0x20004E8")]
	public class Dwyer : ITriangulator
	{
		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseDwyer;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vertex[] sortarray;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x85BDA0", Offset = "0x85BDA0", VA = "0x85BDA0", Slot = "4")]
		public IMesh Triangulate(IList<Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x85CF5C", Offset = "0x85CF5C", VA = "0x85CF5C")]
		private void MergeHulls(ref Otri farleft, ref Otri innerleft, ref Otri innerright, ref Otri farright, int axis)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x85C544", Offset = "0x85C544", VA = "0x85C544")]
		private void DivconqRecurse(int left, int right, int axis, ref Otri farleft, ref Otri farright)
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x85CDE8", Offset = "0x85CDE8", VA = "0x85CDE8")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x858AB0", Offset = "0x858AB0", VA = "0x858AB0")]
		public Dwyer()
		{
		}
	}
}
namespace TriangleNet.Logging
{
	[Token(Token = "0x20004E9")]
	public enum LogLevel
	{
		[Token(Token = "0x4001B3B")]
		Info,
		[Token(Token = "0x4001B3C")]
		Warning,
		[Token(Token = "0x4001B3D")]
		Error
	}
	[Token(Token = "0x20004EA")]
	public interface ILog<T> where T : ILogItem
	{
		[Token(Token = "0x600190D")]
		void Error(string message, string info);

		[Token(Token = "0x600190E")]
		void Warning(string message, string info);
	}
	[Token(Token = "0x20004EB")]
	public interface ILogItem
	{
	}
	[Token(Token = "0x20004EC")]
	public class LogItem : ILogItem
	{
		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DateTime time;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel level;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string message;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string info;

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x85DD3C", Offset = "0x85DD3C", VA = "0x85DD3C")]
		public LogItem(LogLevel level, string message, string info)
		{
		}
	}
}
namespace TriangleNet.Geometry
{
	[Token(Token = "0x20004ED")]
	public class Contour
	{
		[Serializable]
		[Token(Token = "0x20004EE")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Vertex, Point> <>9__12_0;

			[Token(Token = "0x600191A")]
			[Address(RVA = "0x85EE24", Offset = "0x85EE24", VA = "0x85EE24")]
			public <>c()
			{
			}

			[Token(Token = "0x600191B")]
			[Address(RVA = "0x85EE2C", Offset = "0x85EE2C", VA = "0x85EE2C")]
			internal Point <FindPointInPolygon>b__12_0(Vertex x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int marker;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool convex;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vertex> <Points>k__BackingField;

		[Token(Token = "0x17000293")]
		public List<Vertex> Points
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0x85DDE0", Offset = "0x85DDE0", VA = "0x85DDE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001911")]
			[Address(RVA = "0x85DDE8", Offset = "0x85DDE8", VA = "0x85DDE8")]
			set
			{
			}
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x85DDF0", Offset = "0x85DDF0", VA = "0x85DDF0")]
		public Contour(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x85DE28", Offset = "0x85DE28", VA = "0x85DE28")]
		public Contour(IEnumerable<Vertex> points, int marker, bool convex)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x85DFBC", Offset = "0x85DFBC", VA = "0x85DFBC")]
		public List<ISegment> GetSegments()
		{
			return null;
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x85E28C", Offset = "0x85E28C", VA = "0x85E28C")]
		public Point FindInteriorPoint(int limit = 5, double eps = 2E-05)
		{
			return null;
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x85DE70", Offset = "0x85DE70", VA = "0x85DE70")]
		private void AddPoints(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x85E414", Offset = "0x85E414", VA = "0x85E414")]
		private static Point FindPointInPolygon(List<Vertex> contour, int limit, double eps)
		{
			return null;
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x85EB84", Offset = "0x85EB84", VA = "0x85EB84")]
		private static bool IsPointInPolygon(Point point, List<Vertex> poly)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004EF")]
	public static class ExtensionMethods
	{
		[Token(Token = "0x600191C")]
		[Address(RVA = "0x85EE34", Offset = "0x85EE34", VA = "0x85EE34")]
		public static IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F0")]
	public interface IEdge
	{
		[Token(Token = "0x17000294")]
		int Label
		{
			[Token(Token = "0x600191D")]
			get;
		}
	}
	[Token(Token = "0x20004F1")]
	public interface IPolygon
	{
		[Token(Token = "0x17000295")]
		List<Vertex> Points
		{
			[Token(Token = "0x600191E")]
			get;
		}

		[Token(Token = "0x17000296")]
		List<ISegment> Segments
		{
			[Token(Token = "0x600191F")]
			get;
		}

		[Token(Token = "0x17000297")]
		List<Point> Holes
		{
			[Token(Token = "0x6001920")]
			get;
		}

		[Token(Token = "0x17000298")]
		List<RegionPointer> Regions
		{
			[Token(Token = "0x6001921")]
			get;
		}
	}
	[Token(Token = "0x20004F2")]
	public interface ISegment : IEdge
	{
		[Token(Token = "0x6001922")]
		Vertex GetVertex(int index);
	}
	[Token(Token = "0x20004F3")]
	public interface ITriangle
	{
		[Token(Token = "0x6001923")]
		Vertex GetVertex(int index);
	}
	[Token(Token = "0x20004F4")]
	public class Point : IComparable<Point>, IEquatable<Point>
	{
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int label;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal double x;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double y;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal double z;

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x85EB0C", Offset = "0x85EB0C", VA = "0x85EB0C")]
		public Point()
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x85E3E4", Offset = "0x85E3E4", VA = "0x85E3E4")]
		public Point(double x, double y)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x85EEAC", Offset = "0x85EEAC", VA = "0x85EEAC")]
		public Point(double x, double y, int label)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x85A7A4", Offset = "0x85A7A4", VA = "0x85A7A4")]
		public static bool operator ==(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x859D20", Offset = "0x859D20", VA = "0x859D20")]
		public static bool operator !=(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x85EF18", Offset = "0x85EF18", VA = "0x85EF18", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x85EEE8", Offset = "0x85EEE8", VA = "0x85EEE8", Slot = "5")]
		public bool Equals(Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x85EFC0", Offset = "0x85EFC0", VA = "0x85EFC0", Slot = "4")]
		public int CompareTo(Point other)
		{
			return default(int);
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x85F024", Offset = "0x85F024", VA = "0x85F024", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x85F10C", Offset = "0x85F10C", VA = "0x85F10C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004F5")]
	public class Polygon : IPolygon
	{
		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vertex> points;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Point> holes;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<RegionPointer> regions;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ISegment> segments;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <HasPointMarkers>k__BackingField;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool <HasSegmentMarkers>k__BackingField;

		[Token(Token = "0x17000299")]
		public List<Vertex> Points
		{
			[Token(Token = "0x600192E")]
			[Address(RVA = "0x85F1B4", Offset = "0x85F1B4", VA = "0x85F1B4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		public List<Point> Holes
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0x85F1BC", Offset = "0x85F1BC", VA = "0x85F1BC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		public List<RegionPointer> Regions
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x85F1C4", Offset = "0x85F1C4", VA = "0x85F1C4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		public List<ISegment> Segments
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x85F1CC", Offset = "0x85F1CC", VA = "0x85F1CC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		public bool HasPointMarkers
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0x85F1D4", Offset = "0x85F1D4", VA = "0x85F1D4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public bool HasSegmentMarkers
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x85F1E0", Offset = "0x85F1E0", VA = "0x85F1E0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x85F1EC", Offset = "0x85F1EC", VA = "0x85F1EC")]
		public Polygon()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x85F1F8", Offset = "0x85F1F8", VA = "0x85F1F8")]
		public Polygon(int capacity, bool markers)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x85F394", Offset = "0x85F394", VA = "0x85F394", Slot = "10")]
		public void Add(Contour contour, bool hole = false)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x85F468", Offset = "0x85F468", VA = "0x85F468", Slot = "11")]
		public void Add(Contour contour, Point hole)
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class Rectangle
	{
		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double xmin;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double ymin;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double xmax;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double ymax;

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x85E808", Offset = "0x85E808", VA = "0x85E808")]
		public Rectangle()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x85F588", Offset = "0x85F588", VA = "0x85F588")]
		public void Expand(Point p)
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x85E834", Offset = "0x85E834", VA = "0x85E834")]
		public void Expand(IEnumerable<Point> points)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x85F644", Offset = "0x85F644", VA = "0x85F644")]
		public bool Contains(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x85EB30", Offset = "0x85EB30", VA = "0x85EB30")]
		public bool Contains(Point pt)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004F7")]
	public class RegionPointer
	{
		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Point point;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int id;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double area;
	}
	[Token(Token = "0x20004F8")]
	public class Segment : ISegment, IEdge
	{
		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vertex v0;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vertex v1;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int label;

		[Token(Token = "0x1700029F")]
		public int Label
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x85F680", Offset = "0x85F680", VA = "0x85F680", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x85E234", Offset = "0x85E234", VA = "0x85E234")]
		public Segment(Vertex v0, Vertex v1, int label)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x85F688", Offset = "0x85F688", VA = "0x85F688", Slot = "4")]
		public Vertex GetVertex(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F9")]
	[DefaultMember("Item")]
	public class Vertex : Point
	{
		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int hash;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal VertexType type;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Otri tri;

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x85F6EC", Offset = "0x85F6EC", VA = "0x85F6EC")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x85A7F0", Offset = "0x85A7F0", VA = "0x85A7F0")]
		public Vertex(double x, double y, int mark)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x85F720", Offset = "0x85F720", VA = "0x85F720", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace FSG.MeshAnimator
{
	[Token(Token = "0x20004FA")]
	public class AnimatorStateMachine : MonoBehaviour
	{
		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool crossFade;

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x85F728", Offset = "0x85F728", VA = "0x85F728")]
		private void Start()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x85F81C", Offset = "0x85F81C", VA = "0x85F81C")]
		private void OnAnimationFinished(string anim)
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x85FA44", Offset = "0x85FA44", VA = "0x85FA44")]
		public AnimatorStateMachine()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class CrowdSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] options;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] optionsDesc;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sizeOfCrowd;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int selectedOption;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxSize;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string fps;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int previousFrame;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x85FA4C", Offset = "0x85FA4C", VA = "0x85FA4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x8600C8", Offset = "0x8600C8", VA = "0x8600C8")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x85FAAC", Offset = "0x85FAAC", VA = "0x85FAAC")]
		private void SpawnCrowd()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x860154", Offset = "0x860154", VA = "0x860154")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x860B34", Offset = "0x860B34", VA = "0x860B34")]
		public CrowdSpawner()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class PerformanceTester : MonoBehaviour
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] animObjects;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] options;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cameraSpeed;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] spawnedMeshes;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> meshes;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string fps;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int previousFrame;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 offset;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool crossFade;

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x860BCC", Offset = "0x860BCC", VA = "0x860BCC")]
		private void Start()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x860C24", Offset = "0x860C24", VA = "0x860C24")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x860CB0", Offset = "0x860CB0", VA = "0x860CB0")]
		private void Update()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x860F94", Offset = "0x860F94", VA = "0x860F94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x86112C", Offset = "0x86112C", VA = "0x86112C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x862008", Offset = "0x862008", VA = "0x862008")]
		public PerformanceTester()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	[ExecuteInEditMode]
	public class AttachObjectToFace : MonoBehaviour
	{
		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int faceIndex;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 offset;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 rotationOffset;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool drawFaceDebugInfo;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color debugColor;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform mTransform;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform mMeshAnimatorTransform;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] triangles;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] vertices;

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x8620E4", Offset = "0x8620E4", VA = "0x8620E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x862220", Offset = "0x862220", VA = "0x862220")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x862BD0", Offset = "0x862BD0", VA = "0x862BD0")]
		public AttachObjectToFace()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class MecanimMeshAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool crossFade;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, string> animHashes;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string cAnim;

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x862BE4", Offset = "0x862BE4", VA = "0x862BE4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x862D90", Offset = "0x862D90", VA = "0x862D90", Slot = "5")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x862F7C", Offset = "0x862F7C", VA = "0x862F7C")]
		public MecanimMeshAnimatorController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FF")]
	public class MeshAnimation : ScriptableObject
	{
		[Token(Token = "0x2000500")]
		public enum RootMotionMode
		{
			[Token(Token = "0x4001B9A")]
			None,
			[Token(Token = "0x4001B9B")]
			Baked,
			[Token(Token = "0x4001B9C")]
			AppliedToTransform
		}

		[Token(Token = "0x2000501")]
		private sealed class VertexEntry
		{
			[Token(Token = "0x4001B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _reserved;

			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] TriangleIndex;

			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] VertexIndex;

			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _count;

			[Token(Token = "0x170002A1")]
			public int Count
			{
				[Token(Token = "0x6001968")]
				[Address(RVA = "0x865D98", Offset = "0x865D98", VA = "0x865D98")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001969")]
			[Address(RVA = "0x8659C0", Offset = "0x8659C0", VA = "0x8659C0")]
			public void Add(int vertIndex, int triIndex)
			{
			}

			[Token(Token = "0x600196A")]
			[Address(RVA = "0x865924", Offset = "0x865924", VA = "0x865924")]
			public void PopulateArrays()
			{
			}

			[Token(Token = "0x600196B")]
			[Address(RVA = "0x865A98", Offset = "0x865A98", VA = "0x865A98")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x2000502")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshAnimation <>4__this;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float angle;

			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] triangles;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3[] vertices;

			[Token(Token = "0x600196C")]
			[Address(RVA = "0x865914", Offset = "0x865914", VA = "0x865914")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600196D")]
			[Address(RVA = "0x865DA0", Offset = "0x865DA0", VA = "0x865DA0")]
			internal void <RecalculateNormals>b__0(object <p0>)
			{
			}
		}

		[Token(Token = "0x2000503")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh mesh;

			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x600196E")]
			[Address(RVA = "0x86591C", Offset = "0x86591C", VA = "0x86591C")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x600196F")]
			[Address(RVA = "0x865DCC", Offset = "0x865DCC", VA = "0x865DCC")]
			internal void <RecalculateNormals>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000504")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6001971")]
			[Address(RVA = "0x865F00", Offset = "0x865F00", VA = "0x865F00")]
			public <>c()
			{
			}

			[Token(Token = "0x6001972")]
			[Address(RVA = "0x865F08", Offset = "0x865F08", VA = "0x865F08")]
			internal bool <.cctor>b__42_0(Vector3 x, Vector3 y)
			{
				return default(bool);
			}

			[Token(Token = "0x6001973")]
			[Address(RVA = "0x865F30", Offset = "0x865F30", VA = "0x865F30")]
			internal int <.cctor>b__42_1(Vector3 x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static Dictionary<Mesh, Dictionary<MeshAnimation, Mesh[]>> generatedFrames;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string animationName;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool preGenerateFrames;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float playbackSpeed;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int smoothNormalsAngle;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool instantNormalCalculation;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool recalculateNormalsOnRotation;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WrapMode wrapMode;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public RootMotionMode rootMotionMode;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DeltaCompressedFrameData compressedFrameData;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] exposedTransforms;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshAnimationEvent[] events;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float length;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int frameSkip;

		[NonSerialized]
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh[] frames;

		[NonSerialized]
		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int totalFrames;

		[NonSerialized]
		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool[] generatedMeshes;

		[NonSerialized]
		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool completelyGenerated;

		[NonSerialized]
		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshFrameData[] decompressedFrameData;

		[NonSerialized]
		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion lastRotation;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Queue<Action> mainThreadActions;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<Mesh, KeyValuePair<int[], Vector3[]>> meshInfoCache;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static IEqualityComparer<Vector3> VectorComparer;

		[Token(Token = "0x170002A0")]
		public MeshFrameData[] frameData
		{
			[Token(Token = "0x6001957")]
			[Address(RVA = "0x863030", Offset = "0x863030", VA = "0x863030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x863530", Offset = "0x863530", VA = "0x863530")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x8635E0", Offset = "0x8635E0", VA = "0x8635E0")]
		public void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x863CC8", Offset = "0x863CC8", VA = "0x863CC8")]
		public void GenerateFrameIfNeeded(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x8628DC", Offset = "0x8628DC", VA = "0x8628DC")]
		public Vector3[] GetFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x864164", Offset = "0x864164", VA = "0x864164")]
		public float GetInterpolatingFrames(int frame, out MeshFrameData previousFrame, out MeshFrameData nextFrame)
		{
			return default(float);
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x86437C", Offset = "0x86437C", VA = "0x86437C")]
		public MeshFrameData GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x8644E0", Offset = "0x8644E0", VA = "0x8644E0")]
		public void DisplayFrame(MeshFilter meshFilter, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x865394", Offset = "0x865394", VA = "0x865394")]
		public void FireEvents(GameObject eventReciever, int frame)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x865514", Offset = "0x865514", VA = "0x865514")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x865644", Offset = "0x865644", VA = "0x865644")]
		public bool IsName(string animationName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x8640F4", Offset = "0x8640F4", VA = "0x8640F4")]
		private void CheckFullGeneration(int newFrame)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x8638AC", Offset = "0x8638AC", VA = "0x8638AC")]
		private Mesh GenerateFrame(Mesh baseMesh, int frame)
		{
			return null;
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x865690", Offset = "0x865690", VA = "0x865690")]
		private void RecalculateNormals(Mesh mesh, float angle)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x8645E8", Offset = "0x8645E8", VA = "0x8645E8")]
		private void RecalculateNormals(Mesh mesh, float angle, int[] triangles, Vector3[] vertices, bool instant = false)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x865B4C", Offset = "0x865B4C", VA = "0x865B4C")]
		public MeshAnimation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000505")]
	public class MeshAnimationEvent
	{
		[Token(Token = "0x2000506")]
		public enum Mode : byte
		{
			[Token(Token = "0x4001BB0")]
			Data,
			[Token(Token = "0x4001BB1")]
			String,
			[Token(Token = "0x4001BB2")]
			Float
		}

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string methodName;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int frame;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Mode eventType;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stringValue;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float floatValue;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object data;

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x865410", Offset = "0x865410", VA = "0x865410")]
		public void FireEvent(GameObject eventReciever)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x865F94", Offset = "0x865F94", VA = "0x865F94")]
		public MeshAnimationEvent()
		{
		}
	}
	[Token(Token = "0x2000507")]
	[RequireComponent(typeof(MeshFilter))]
	public class MeshAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000508")]
		public class MeshAnimatorLODLevel
		{
			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int fps;

			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float distance;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float distanceSquared;

			[Token(Token = "0x6001996")]
			[Address(RVA = "0x86A030", Offset = "0x86A030", VA = "0x86A030")]
			public MeshAnimatorLODLevel()
			{
			}
		}

		[Token(Token = "0x2000509")]
		private struct CurrentCrossFade
		{
			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MeshFrameData fromFrame;

			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MeshFrameData toFrame;

			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int framesNeeded;

			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int currentFrame;

			[Token(Token = "0x4001BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int generatedFrame;

			[Token(Token = "0x4001BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool isFading;

			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float endTime;

			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CrossFadeFrameData frame;

			[Token(Token = "0x6001997")]
			[Address(RVA = "0x866AC4", Offset = "0x866AC4", VA = "0x866AC4")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001998")]
			[Address(RVA = "0x867BE4", Offset = "0x867BE4", VA = "0x867BE4")]
			public void PopulateFrame(int length)
			{
			}

			[Token(Token = "0x6001999")]
			[Address(RVA = "0x869204", Offset = "0x869204", VA = "0x869204")]
			public void ReturnFrame()
			{
			}
		}

		[Token(Token = "0x200050A")]
		private class CrossFadeFrameData
		{
			[Token(Token = "0x4001BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] positions;

			[Token(Token = "0x4001BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bounds bounds;

			[Token(Token = "0x600199A")]
			[Address(RVA = "0x86A038", Offset = "0x86A038", VA = "0x86A038")]
			public CrossFadeFrameData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200050B")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<string> <>9__76_0;

			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__76_1;

			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<bool> <>9__76_2;

			[Token(Token = "0x600199C")]
			[Address(RVA = "0x86A0B0", Offset = "0x86A0B0", VA = "0x86A0B0")]
			public <>c()
			{
			}

			[Token(Token = "0x600199D")]
			[Address(RVA = "0x86A0B8", Offset = "0x86A0B8", VA = "0x86A0B8")]
			internal void <.ctor>b__76_0(string <p0>)
			{
			}

			[Token(Token = "0x600199E")]
			[Address(RVA = "0x86A0BC", Offset = "0x86A0BC", VA = "0x86A0BC")]
			internal void <.ctor>b__76_1()
			{
			}

			[Token(Token = "0x600199F")]
			[Address(RVA = "0x86A0C0", Offset = "0x86A0C0", VA = "0x86A0C0")]
			internal void <.ctor>b__76_2(bool <p0>)
			{
			}
		}

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Mesh, int> s_meshCount;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Thread> s_crossfadeThreads;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool s_shutDownThreads;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Queue<MeshAnimator> s_crossfadeAnimators;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<Stack<Mesh>> s_crossFadePool;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<Mesh, int> s_crossFadeIndex;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh baseMesh;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimation defaultAnimation;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshAnimation[] animations;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool updateWhenOffscreen;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool playAutomatically;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool resetOnEnable;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject eventReciever;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int FPS;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool skipLastLoopFrame;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool recalculateCrossfadeNormals;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<string> OnAnimationFinished;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action OnFrameUpdated;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<bool> OnVisibilityChanged;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int currentFrame;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform LODCamera;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshAnimatorLODLevel[] LODLevels;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float nextTick;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MeshAnimation currentAnimation;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public MeshTriangleData[] meshTriangleData;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int currentAnimIndex;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool isVisible;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastFrameTime;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool pingPong;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		private bool isPaused;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float currentAnimTime;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Mesh crossFadeMesh;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Queue<string> queuedAnims;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CurrentCrossFade currentCrossFade;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int currentLodLevel;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Transform mTransform;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Dictionary<string, Transform> childMap;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool initialized;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int previousEventFrame;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool hasExposedTransforms;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int crossFadePoolIndex;

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x865F9C", Offset = "0x865F9C", VA = "0x865F9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x8666D0", Offset = "0x8666D0", VA = "0x8666D0")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x866700", Offset = "0x866700", VA = "0x866700")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x86672C", Offset = "0x86672C", VA = "0x86672C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x8669AC", Offset = "0x8669AC", VA = "0x8669AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x866B08", Offset = "0x866B08", VA = "0x866B08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x867618", Offset = "0x867618", VA = "0x867618")]
		private void FireAnimationEvents(MeshAnimation cAnim, float totalSpeed, bool finished)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x867784", Offset = "0x867784", VA = "0x867784")]
		private Mesh GetCrossfadeFromPool()
		{
			return null;
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x86724C", Offset = "0x86724C", VA = "0x86724C")]
		private void ReturnCrossfadeToPool()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x867998", Offset = "0x867998", VA = "0x867998")]
		private void GenerateCrossfadeFrame()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x867D20", Offset = "0x867D20", VA = "0x867D20")]
		private static void EnqueueAnimatorForCrossfade(MeshAnimator animator)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x867E60", Offset = "0x867E60", VA = "0x867E60")]
		private static MeshAnimator DequeueAnimatorForCrossfade()
		{
			return null;
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x867FF0", Offset = "0x867FF0", VA = "0x867FF0")]
		private static Matrix4x4 MatrixLerp(Matrix4x4 from, Matrix4x4 to, float time)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x8680A8", Offset = "0x8680A8", VA = "0x8680A8")]
		private static void GenerateThreadedCrossfade()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x86832C", Offset = "0x86832C", VA = "0x86832C")]
		public void UpdateTick(float time)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x85F968", Offset = "0x85F968", VA = "0x85F968")]
		public void Crossfade(int index)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x862EF4", Offset = "0x862EF4", VA = "0x862EF4")]
		public void Crossfade(string animationName)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x8692F8", Offset = "0x8692F8", VA = "0x8692F8")]
		public void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x869484", Offset = "0x869484", VA = "0x869484")]
		public void Crossfade(string animationName, float speed)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x85F814", Offset = "0x85F814", VA = "0x85F814")]
		public void Play()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x862F00", Offset = "0x862F00", VA = "0x862F00")]
		public void Play(string animationName)
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x85F974", Offset = "0x85F974", VA = "0x85F974")]
		public void Play(int index)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x869514", Offset = "0x869514", VA = "0x869514")]
		public void PlayRandom(params string[] animationNames)
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x8695B8", Offset = "0x8695B8", VA = "0x8695B8")]
		public void PlayQueued(string animationName)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x869668", Offset = "0x869668", VA = "0x869668")]
		public void Pause()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x869674", Offset = "0x869674", VA = "0x869674")]
		public void RestartAnim()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x86967C", Offset = "0x86967C", VA = "0x86967C")]
		public void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x869744", Offset = "0x869744", VA = "0x869744")]
		public void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x869810", Offset = "0x869810", VA = "0x869810")]
		public MeshAnimation GetClip(string animationName)
		{
			return null;
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x8698A0", Offset = "0x8698A0", VA = "0x8698A0")]
		public void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x869BB4", Offset = "0x869BB4", VA = "0x869BB4")]
		public MeshAnimator()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class MeshAnimatorManager : MonoBehaviour
	{
		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MeshAnimatorManager mInstance;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<MeshAnimator> mAnimators;

		[Token(Token = "0x170002A2")]
		public static int AnimatorCount
		{
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x866608", Offset = "0x866608", VA = "0x866608")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A3")]
		public static MeshAnimatorManager Instance
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x86A0C4", Offset = "0x86A0C4", VA = "0x86A0C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x866878", Offset = "0x866878", VA = "0x866878")]
		public static void AddAnimator(MeshAnimator animator)
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x866A44", Offset = "0x866A44", VA = "0x866A44")]
		public static void RemoveAnimator(MeshAnimator animator)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x86A28C", Offset = "0x86A28C", VA = "0x86A28C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x86A438", Offset = "0x86A438", VA = "0x86A438")]
		public MeshAnimatorManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050D")]
	public class MeshFrameData
	{
		[NonSerialized]
		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[] decompressed;

		[NonSerialized]
		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4[] exposedTransforms;

		[NonSerialized]
		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 rootMotionPosition;

		[NonSerialized]
		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rootMotionRotation;

		[Token(Token = "0x170002A4")]
		public Vector3[] verts
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x86A4F0", Offset = "0x86A4F0", VA = "0x86A4F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x86A4F8", Offset = "0x86A4F8", VA = "0x86A4F8")]
		public void SetVerts(Vector3[] v)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x86A500", Offset = "0x86A500", VA = "0x86A500", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x86A624", Offset = "0x86A624", VA = "0x86A624", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x86A62C", Offset = "0x86A62C", VA = "0x86A62C")]
		public MeshFrameData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050E")]
	public class MeshTriangleData
	{
		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int submesh;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x86A634", Offset = "0x86A634", VA = "0x86A634")]
		public MeshTriangleData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050F")]
	public class DeltaCompressedFrameData
	{
		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float compressionAccuracy;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float accuracy;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sizeOffset;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int vertLength;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int exposedLength;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public short[] positionsUShort;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] positions;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] frameIndexes;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Matrix4x4[] exposedTransforms;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3[] rootMotionPositions;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quaternion[] rootMotionRotations;

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x8630DC", Offset = "0x8630DC", VA = "0x8630DC")]
		public static implicit operator MeshFrameData[](DeltaCompressedFrameData s)
		{
			return null;
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x86A63C", Offset = "0x86A63C", VA = "0x86A63C")]
		public DeltaCompressedFrameData()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public static class AllocatedArray<T>
	{
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T defaultValue;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<T[]> allocatedArrays;

		[Token(Token = "0x60019B0")]
		private static T[] AllocateArray(int size)
		{
			return null;
		}

		[Token(Token = "0x60019B1")]
		public static T[] Get(int size)
		{
			return null;
		}

		[Token(Token = "0x60019B2")]
		public static void Return(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x2000511")]
	public static class Comparers
	{
		[Serializable]
		[Token(Token = "0x2000512")]
		public class StringComparer : IEqualityComparer<string>
		{
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x86A848", Offset = "0x86A848", VA = "0x86A848", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.String>.Equals(string x, string y)
			{
				return default(bool);
			}

			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x86A858", Offset = "0x86A858", VA = "0x86A858", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(string obj)
			{
				return default(int);
			}

			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x86A820", Offset = "0x86A820", VA = "0x86A820")]
			public StringComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000513")]
		public class FloatComparer : IEqualityComparer<float>
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x86A878", Offset = "0x86A878", VA = "0x86A878", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Single>.Equals(float x, float y)
			{
				return default(bool);
			}

			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x86A884", Offset = "0x86A884", VA = "0x86A884", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Single>.GetHashCode(float obj)
			{
				return default(int);
			}

			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x86A828", Offset = "0x86A828", VA = "0x86A828")]
			public FloatComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000514")]
		public class IntComparer : IEqualityComparer<int>
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x86A8A0", Offset = "0x86A8A0", VA = "0x86A8A0", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Int32>.Equals(int x, int y)
			{
				return default(bool);
			}

			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x86A8AC", Offset = "0x86A8AC", VA = "0x86A8AC", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Int32>.GetHashCode(int obj)
			{
				return default(int);
			}

			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x86A830", Offset = "0x86A830", VA = "0x86A830")]
			public IntComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000515")]
		public class ByteComparer : IEqualityComparer<byte>
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x86A8C8", Offset = "0x86A8C8", VA = "0x86A8C8", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Byte>.Equals(byte x, byte y)
			{
				return default(bool);
			}

			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x86A8D8", Offset = "0x86A8D8", VA = "0x86A8D8", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Byte>.GetHashCode(byte obj)
			{
				return default(int);
			}

			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x86A838", Offset = "0x86A838", VA = "0x86A838")]
			public ByteComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000516")]
		public class BoolComparer : IEqualityComparer<bool>
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x86A8F4", Offset = "0x86A8F4", VA = "0x86A8F4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Boolean>.Equals(bool x, bool y)
			{
				return default(bool);
			}

			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x86A900", Offset = "0x86A900", VA = "0x86A900", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Boolean>.GetHashCode(bool obj)
			{
				return default(int);
			}

			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x86A840", Offset = "0x86A840", VA = "0x86A840")]
			public BoolComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000517")]
		private class FuncEqualityComparer<T> : EqualityComparer<T>
		{
			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, T, bool> equals;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, int> hash;

			[Token(Token = "0x60019C5")]
			public FuncEqualityComparer(Func<T, T, bool> equals, Func<T, int> hash)
			{
			}

			[Token(Token = "0x60019C6")]
			public override bool Equals(T a, T b)
			{
				return default(bool);
			}

			[Token(Token = "0x60019C7")]
			public override int GetHashCode(T obj)
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x2000518")]
		private sealed class <>c__10<T>
		{
			[Token(Token = "0x4001C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__10<T> <>9;

			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, int> <>9__10_0;

			[Token(Token = "0x60019C9")]
			public <>c__10()
			{
			}

			[Token(Token = "0x60019CA")]
			internal int <Create>b__10_0(T t)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringComparer String;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly FloatComparer Float;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IntComparer Int;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ByteComparer Byte;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly BoolComparer Bool;

		[Token(Token = "0x60019B4")]
		public static IEqualityComparer<T> Create<T>(Func<T, T, bool> equals, [Optional] Func<T, int> hash)
		{
			return null;
		}
	}
	[Token(Token = "0x2000519")]
	public static class GenericObjectPool<T>
	{
		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<T> pool;

		[Token(Token = "0x170002A5")]
		public static int Count
		{
			[Token(Token = "0x60019CB")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019CC")]
		public static T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x60019CD")]
		public static void Return(T obj)
		{
		}
	}
	[Token(Token = "0x200051A")]
	public static class MatrixUtils
	{
		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x86A920", Offset = "0x86A920", VA = "0x86A920")]
		public static void FromMatrix4x4(Transform transform, Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x86A9CC", Offset = "0x86A9CC", VA = "0x86A9CC")]
		public static Quaternion GetRotation(Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x86A9C0", Offset = "0x86A9C0", VA = "0x86A9C0")]
		public static Vector3 GetPosition(Matrix4x4 matrix)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x86AAF0", Offset = "0x86AAF0", VA = "0x86AAF0")]
		public static Vector3 GetScale(Matrix4x4 m)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200051B")]
	public class PooledDictionary<T, T2> : Dictionary<T, T2>
	{
		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<PooledDictionary<T, T2>> stack;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint checkedOut;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint returned;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool <recycleable>k__BackingField;

		[Token(Token = "0x170002A6")]
		public bool recycleable
		{
			[Token(Token = "0x60019D3")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019D4")]
			set
			{
			}
		}

		[Token(Token = "0x60019D5")]
		public static PooledDictionary<T, T2> Get(int capacity, [Optional] IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x60019D6")]
		public PooledDictionary(int capacity)
		{
		}

		[Token(Token = "0x60019D7")]
		public PooledDictionary(int capacity, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x60019D8")]
		public void ReturnToPool(bool force = false)
		{
		}
	}
}
namespace LuxWater
{
	[Token(Token = "0x200051C")]
	[RequireComponent(typeof(Camera))]
	[ExecuteInEditMode]
	public class LuxWater_CameraDepthMode : MonoBehaviour
	{
		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool GrabDepthTexture;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera cam;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material CopyDepthMat;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTextureFormat format;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Camera, CommandBuffer> m_cmdBuffer;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool CamCallBackAdded;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool ShowShaderWarning;

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x86AC84", Offset = "0x86AC84", VA = "0x86AC84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x86AE9C", Offset = "0x86AE9C", VA = "0x86AE9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x86B160", Offset = "0x86B160", VA = "0x86B160")]
		private void OnPrecull(Camera camera)
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x86B588", Offset = "0x86B588", VA = "0x86B588")]
		public LuxWater_CameraDepthMode()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class LuxWater_InfiniteOcean : MonoBehaviour
	{
		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera MainCam;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float GridSize;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform trans;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform camTrans;

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x86B618", Offset = "0x86B618", VA = "0x86B618")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x86B670", Offset = "0x86B670", VA = "0x86B670")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x86B988", Offset = "0x86B988", VA = "0x86B988")]
		public LuxWater_InfiniteOcean()
		{
		}
	}
	[Token(Token = "0x200051E")]
	[ExecuteInEditMode]
	public class LuxWater_PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x200051F")]
		public enum ReflectionResolution
		{
			[Token(Token = "0x4001C32")]
			Full = 1,
			[Token(Token = "0x4001C33")]
			Half = 2,
			[Token(Token = "0x4001C34")]
			Quarter = 4,
			[Token(Token = "0x4001C35")]
			Eighth = 8
		}

		[Token(Token = "0x2000520")]
		public enum NumberOfShadowCascades
		{
			[Token(Token = "0x4001C37")]
			One = 1,
			[Token(Token = "0x4001C38")]
			Two = 2,
			[Token(Token = "0x4001C39")]
			Four = 4
		}

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UpdateSceneView;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isMaster;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material[] WaterMaterials;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask reflectionMask;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ReflectionResolution Resolution;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color clearColor;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool reflectSkybox;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool disablePixelLights;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool renderShadows;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float shadowDistance;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NumberOfShadowCascades ShadowCascades;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float WaterSurfaceOffset;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string reflectionSampler;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material m_SharedMaterial;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderTexture m_reflectionMap;

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x86B998", Offset = "0x86B998", VA = "0x86B998")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x86BAAC", Offset = "0x86BAAC", VA = "0x86BAAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x86BB84", Offset = "0x86BB84", VA = "0x86BB84")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x86BEA8", Offset = "0x86BEA8", VA = "0x86BEA8")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x86BF5C", Offset = "0x86BF5C", VA = "0x86BF5C")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x86C08C", Offset = "0x86C08C", VA = "0x86C08C")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x86C874", Offset = "0x86C874", VA = "0x86C874")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x86C8CC", Offset = "0x86C8CC", VA = "0x86C8CC")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x86C9AC", Offset = "0x86C9AC", VA = "0x86C9AC")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x86C280", Offset = "0x86C280", VA = "0x86C280")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x86C9D4", Offset = "0x86C9D4", VA = "0x86C9D4")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x86CC88", Offset = "0x86CC88", VA = "0x86CC88")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x86CA34", Offset = "0x86CA34", VA = "0x86CA34")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x86CDF4", Offset = "0x86CDF4", VA = "0x86CDF4")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x86CAD8", Offset = "0x86CAD8", VA = "0x86CAD8")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x86CE14", Offset = "0x86CE14", VA = "0x86CE14")]
		public LuxWater_PlanarReflection()
		{
		}
	}
	[Token(Token = "0x2000521")]
	[ExecuteInEditMode]
	public class LuxWater_PlanarWaterTile : MonoBehaviour
	{
		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LuxWater_PlanarReflection reflection;

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x86CEAC", Offset = "0x86CEAC", VA = "0x86CEAC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x86CEB0", Offset = "0x86CEB0", VA = "0x86CEB0")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x86CFBC", Offset = "0x86CFBC", VA = "0x86CFBC")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x86D054", Offset = "0x86D054", VA = "0x86D054")]
		public LuxWater_PlanarWaterTile()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public class LuxWater_Projector : MonoBehaviour
	{
		[Token(Token = "0x2000523")]
		public enum ProjectorType
		{
			[Token(Token = "0x4001C43")]
			FoamProjector,
			[Token(Token = "0x4001C44")]
			NormalProjector
		}

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProjectorType Type;

		[NonSerialized]
		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<LuxWater_Projector> FoamProjectors;

		[NonSerialized]
		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<LuxWater_Projector> NormalProjectors;

		[NonSerialized]
		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer m_Rend;

		[NonSerialized]
		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material m_Mat;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool added;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 origPos;

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x86D05C", Offset = "0x86D05C", VA = "0x86D05C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x86D07C", Offset = "0x86D07C", VA = "0x86D07C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x86D258", Offset = "0x86D258", VA = "0x86D258")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x86D314", Offset = "0x86D314", VA = "0x86D314")]
		public LuxWater_Projector()
		{
		}
	}
	[Token(Token = "0x2000524")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(Camera))]
	public class LuxWater_ProjectorRenderer : MonoBehaviour
	{
		[Token(Token = "0x2000525")]
		public enum BufferResolution
		{
			[Token(Token = "0x4001C5A")]
			Full = 1,
			[Token(Token = "0x4001C5B")]
			Half = 2,
			[Token(Token = "0x4001C5C")]
			Quarter = 4,
			[Token(Token = "0x4001C5D")]
			Eighth = 8
		}

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BufferResolution FoamBufferResolution;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BufferResolution NormalBufferResolution;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DebugFoamBuffer;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DebugNormalBuffer;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool DebugStats;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int drawnFoamProjectors;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int drawnNormalProjectors;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CommandBuffer cb_Foam;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CommandBuffer cb_Normals;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera cam;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform camTransform;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture ProjectedFoam;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture ProjectedNormals;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture2D defaultBump;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Bounds tempBounds;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _LuxWater_FoamOverlayPID;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _LuxWater_NormalOverlayPID;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Plane[] frustumPlanes;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material DebugMat;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material DebugNormalMat;

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x86D3E8", Offset = "0x86D3E8", VA = "0x86D3E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x86D54C", Offset = "0x86D54C", VA = "0x86D54C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x86D788", Offset = "0x86D788", VA = "0x86D788")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x86E420", Offset = "0x86E420", VA = "0x86E420")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x86E788", Offset = "0x86E788", VA = "0x86E788")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x86E9F4", Offset = "0x86E9F4", VA = "0x86E9F4")]
		public LuxWater_ProjectorRenderer()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public static class GeomUtil
	{
		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Action<Plane[], Matrix4x4> _calculateFrustumPlanes_Imp;

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x86E10C", Offset = "0x86E10C", VA = "0x86E10C")]
		public static void CalculateFrustumPlanes(Plane[] planes, Matrix4x4 worldToProjectMatrix)
		{
		}
	}
	[Token(Token = "0x2000527")]
	[RequireComponent(typeof(Camera))]
	public class LuxWater_UnderWaterBlur : MonoBehaviour
	{
		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float blurSpread;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int blurDownSample;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int blurIterations;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2[] m_offsets;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material blurMaterial;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material blitMaterial;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool doBlur;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool initBlur;

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x86EA60", Offset = "0x86EA60", VA = "0x86EA60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x86EB78", Offset = "0x86EB78", VA = "0x86EB78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x86EC48", Offset = "0x86EC48", VA = "0x86EC48")]
		private void GetWaterrendermanagerInstance()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x86EC9C", Offset = "0x86EC9C", VA = "0x86EC9C")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x86EF94", Offset = "0x86EF94", VA = "0x86EF94")]
		private void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x86EEC4", Offset = "0x86EEC4", VA = "0x86EEC4")]
		private void DownSample(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x86F068", Offset = "0x86F068", VA = "0x86F068")]
		public LuxWater_UnderWaterBlur()
		{
		}
	}
	[Token(Token = "0x2000528")]
	[RequireComponent(typeof(Camera))]
	public class LuxWater_UnderWaterRendering : MonoBehaviour
	{
		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LuxWater_UnderWaterRendering instance;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Sun;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool FindSunOnEnable;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SunGoName;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string SunTagName;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Light SunLight;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool EnableDeepwaterLighting;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float DefaultWaterSurfacePosition;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float DirectionalLightingFadeRange;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float FogLightingFadeRange;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool EnableAdvancedDeferredFog;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float FogDepthShift;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float FogEdgeBlending;

		[NonSerialized]
		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int activeWaterVolume;

		[NonSerialized]
		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Camera> activeWaterVolumeCameras;

		[NonSerialized]
		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float activeGridSize;

		[NonSerialized]
		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float WaterSurfacePos;

		[NonSerialized]
		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<int> RegisteredWaterVolumesIDs;

		[NonSerialized]
		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<LuxWater_WaterVolume> RegisteredWaterVolumes;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Mesh> WaterMeshes;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Transform> WaterTransforms;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Material> WaterMaterials;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<bool> WaterIsOnScreen;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<bool> WaterUsesSlidingVolume;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture UnderWaterMask;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Material> m_aboveWatersurface;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<Material> m_belowWatersurface;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ShaderVariantCollection PrewarmedShaders;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int ListCapacity;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool enableDebug;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material mat;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material blurMaterial;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Material blitMaterial;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Camera cam;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool UnderwaterIsSetUp;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Transform camTransform;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Matrix4x4 frustumCornersArray;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private SphericalHarmonicsL2 ambientProbe;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Vector3[] directions;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Color[] AmbientLightingSamples;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool DoUnderWaterRendering;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Matrix4x4 camProj;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Vector3[] frustumCorners;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float Projection;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private bool islinear;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Matrix4x4 WatervolumeMatrix;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private int UnderWaterMaskPID;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private int Lux_FrustumCornersWSPID;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private int Lux_CameraWSPID;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private int GerstnerEnabledPID;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private int LuxWaterMask_GerstnerVertexIntensityPID;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private int GerstnerVertexIntensityPID;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private int LuxWaterMask_GAmplitudePID;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private int GAmplitudePID;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private int LuxWaterMask_GFinalFrequencyPID;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private int GFinalFrequencyPID;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private int LuxWaterMask_GSteepnessPID;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private int GSteepnessPID;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private int LuxWaterMask_GFinalSpeedPID;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private int GFinalSpeedPID;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private int LuxWaterMask_GDirectionABPID;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private int GDirectionABPID;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private int LuxWaterMask_GDirectionCDPID;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private int GDirectionCDPID;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int LuxWaterMask_GerstnerSecondaryWaves;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private int GerstnerSecondaryWaves;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private int Lux_UnderWaterAmbientSkyLightPID;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private int Lux_UnderWaterSunColorPID;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private int Lux_UnderWaterSunDirPID;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private int Lux_UnderWaterSunDirViewSpacePID;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private int Lux_EdgeLengthPID;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private int Lux_CausticsEnabledPID;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private int Lux_CausticModePID;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private int Lux_UnderWaterFogColorPID;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private int Lux_UnderWaterFogDensityPID;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private int Lux_UnderWaterFogAbsorptionCancellationPID;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private int Lux_UnderWaterAbsorptionHeightPID;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private int Lux_UnderWaterAbsorptionMaxHeightPID;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private int Lux_MaxDirLightDepthPID;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private int Lux_MaxFogLightDepthPID;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private int Lux_UnderWaterAbsorptionDepthPID;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private int Lux_UnderWaterAbsorptionColorStrengthPID;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private int Lux_UnderWaterAbsorptionStrengthPID;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private int Lux_UnderWaterUnderwaterScatteringPowerPID;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private int Lux_UnderWaterUnderwaterScatteringIntensityPID;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private int Lux_UnderWaterUnderwaterScatteringColorPID;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private int Lux_UnderWaterUnderwaterScatteringOcclusionPID;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private int Lux_UnderWaterCausticsPID;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private int Lux_UnderWaterDeferredFogParams;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private int CausticTexPID;

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x86F0E8", Offset = "0x86F0E8", VA = "0x86F0E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x86FDB8", Offset = "0x86FDB8", VA = "0x86FDB8")]
		private void CleanUp()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x86FF94", Offset = "0x86FF94", VA = "0x86FF94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x86FF98", Offset = "0x86FF98", VA = "0x86FF98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x86FF9C", Offset = "0x86FF9C", VA = "0x86FF9C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x86FD34", Offset = "0x86FD34", VA = "0x86FD34")]
		public void SetDeferredFogParams()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x86FC48", Offset = "0x86FC48", VA = "0x86FC48")]
		public void SetDeepwaterLighting()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x86FFB4", Offset = "0x86FFB4", VA = "0x86FFB4")]
		public void RegisterWaterVolume(LuxWater_WaterVolume item, int ID, bool visible, bool SlidingVolume)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x870694", Offset = "0x870694", VA = "0x870694")]
		public void DeRegisterWaterVolume(LuxWater_WaterVolume item, int ID)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x870808", Offset = "0x870808", VA = "0x870808")]
		public void SetWaterVisible(int ID)
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x870890", Offset = "0x870890", VA = "0x870890")]
		public void SetWaterInvisible(int ID)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x870918", Offset = "0x870918", VA = "0x870918")]
		public void EnteredWaterVolume(LuxWater_WaterVolume item, int ID, Camera triggerCam, float GridSize)
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x870B4C", Offset = "0x870B4C", VA = "0x870B4C")]
		public void LeftWaterVolume(LuxWater_WaterVolume item, int ID, Camera triggerCam)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x870CD4", Offset = "0x870CD4", VA = "0x870CD4")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x871B14", Offset = "0x871B14", VA = "0x871B14")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x8703E0", Offset = "0x8703E0", VA = "0x8703E0")]
		public void SetGerstnerWaves(int index)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x870CF4", Offset = "0x870CF4", VA = "0x870CF4")]
		public void RenderWaterMask(Camera currentCamera, bool SecondaryCameraRendering)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x871B20", Offset = "0x871B20", VA = "0x871B20")]
		public void RenderUnderWater(RenderTexture src, RenderTexture dest, Camera currentCamera, bool SecondaryCameraRendering)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x872588", Offset = "0x872588", VA = "0x872588")]
		public LuxWater_UnderWaterRendering()
		{
		}
	}
	[Token(Token = "0x2000529")]
	[RequireComponent(typeof(Camera))]
	public class LuxWater_UnderwaterRenderingSlave : MonoBehaviour
	{
		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool readyToGo;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera cam;

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x8729B8", Offset = "0x8729B8", VA = "0x8729B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x872A40", Offset = "0x872A40", VA = "0x872A40")]
		private void GetWaterrendermanager()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x872AE4", Offset = "0x872AE4", VA = "0x872AE4")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x872B18", Offset = "0x872B18", VA = "0x872B18")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x872BB8", Offset = "0x872BB8", VA = "0x872BB8")]
		public LuxWater_UnderwaterRenderingSlave()
		{
		}
	}
	[Token(Token = "0x200052A")]
	public class LuxWater_WaterVolume : MonoBehaviour
	{
		[Token(Token = "0x200052B")]
		public delegate void TriggerEnter();

		[Token(Token = "0x200052C")]
		public delegate void TriggerExit();

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh WaterVolumeMesh;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool SlidingVolume;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float GridSize;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LuxWater_UnderWaterRendering waterrendermanager;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool readyToGo;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int ID;

		[Token(Token = "0x14000035")]
		public static event TriggerEnter OnEnterWaterVolume
		{
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0x872BC0", Offset = "0x872BC0", VA = "0x872BC0")]
			add
			{
			}
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x872C78", Offset = "0x872C78", VA = "0x872C78")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public static event TriggerExit OnExitWaterVolume
		{
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x872D30", Offset = "0x872D30", VA = "0x872D30")]
			add
			{
			}
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x872DEC", Offset = "0x872DEC", VA = "0x872DEC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x872EA8", Offset = "0x872EA8", VA = "0x872EA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x87303C", Offset = "0x87303C", VA = "0x87303C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x873104", Offset = "0x873104", VA = "0x873104")]
		private void Register()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x873238", Offset = "0x873238", VA = "0x873238")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x873268", Offset = "0x873268", VA = "0x873268")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x873298", Offset = "0x873298", VA = "0x873298")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x8733C0", Offset = "0x8733C0", VA = "0x8733C0")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x8734B4", Offset = "0x8734B4", VA = "0x8734B4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x8735D8", Offset = "0x8735D8", VA = "0x8735D8")]
		public LuxWater_WaterVolume()
		{
		}
	}
	[Token(Token = "0x200052D")]
	public class LuxWater_WaterVolumeTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool active;

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x8737A8", Offset = "0x8737A8", VA = "0x8737A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x873888", Offset = "0x873888", VA = "0x873888")]
		public LuxWater_WaterVolumeTrigger()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class LuxWater_SetMeshBounds : MonoBehaviour
	{
		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Expand_XZ;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Expand_Y;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer rend;

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x873898", Offset = "0x873898", VA = "0x873898")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x873968", Offset = "0x873968", VA = "0x873968")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x8739CC", Offset = "0x8739CC", VA = "0x8739CC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x873A9C", Offset = "0x873A9C", VA = "0x873A9C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x873BF0", Offset = "0x873BF0", VA = "0x873BF0")]
		public LuxWater_SetMeshBounds()
		{
		}
	}
}
namespace Prototype.NetworkLobby
{
	[Token(Token = "0x200052F")]
	public class DraggablePanel : MonoBehaviour, IDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x873BF8", Offset = "0x873BF8", VA = "0x873BF8", Slot = "4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x873C28", Offset = "0x873C28", VA = "0x873C28")]
		public DraggablePanel()
		{
		}
	}
}
namespace HeurekaGames
{
	[Token(Token = "0x2000530")]
	public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool applicationIsQuitting;

		[Token(Token = "0x170002A7")]
		public static T Instance
		{
			[Token(Token = "0x6001A3A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A3B")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001A3C")]
		public Singleton()
		{
		}
	}
}
namespace Exploder
{
	[Token(Token = "0x2000531")]
	public class Example : MonoBehaviour
	{
		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject Exploder;

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x873C30", Offset = "0x873C30", VA = "0x873C30")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x873CCC", Offset = "0x873CCC", VA = "0x873CCC")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x873CD0", Offset = "0x873CD0", VA = "0x873CD0")]
		private void CrackAndExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x873D6C", Offset = "0x873D6C", VA = "0x873D6C")]
		private void OnCracked(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x873DF8", Offset = "0x873DF8", VA = "0x873DF8")]
		public Example()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class Array<T>
	{
		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] array;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int size;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int index;

		[Token(Token = "0x170002A8")]
		public int Count
		{
			[Token(Token = "0x6001A45")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A9")]
		public T this[int key]
		{
			[Token(Token = "0x6001A46")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001A43")]
		public Array(int size)
		{
		}

		[Token(Token = "0x6001A44")]
		public void Initialize(int newSize)
		{
		}

		[Token(Token = "0x6001A47")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001A48")]
		public void Add(T data)
		{
		}

		[Token(Token = "0x6001A49")]
		public void Reverse()
		{
		}
	}
	[Token(Token = "0x2000533")]
	internal class ArrayDictionary<T>
	{
		[Token(Token = "0x2000534")]
		private struct DicItem
		{
			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool valid;
		}

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Count;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Size;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DicItem[] dictionary;

		[Token(Token = "0x170002AA")]
		public int this[int key]
		{
			[Token(Token = "0x6001A4B")]
			set
			{
			}
		}

		[Token(Token = "0x6001A4A")]
		public ArrayDictionary(int size)
		{
		}

		[Token(Token = "0x6001A4C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001A4D")]
		public void Add(int key, T data)
		{
		}

		[Token(Token = "0x6001A4E")]
		public void Remove(int key)
		{
		}

		[Token(Token = "0x6001A4F")]
		public bool TryGetValue(int key, out T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A50")]
		public T GetFirstValue()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000535")]
	public class Contour
	{
		[Token(Token = "0x2000536")]
		private struct MidPoint
		{
			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int id;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int vertexId;

			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int idNext;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int idPrev;
		}

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Dictionary<int, int>> contour;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ArrayDictionary<MidPoint> midPoints;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LSHash lsHash;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <MidPointsCount>k__BackingField;

		[Token(Token = "0x170002AB")]
		public int MidPointsCount
		{
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x8742B8", Offset = "0x8742B8", VA = "0x8742B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0x8742C0", Offset = "0x8742C0", VA = "0x8742C0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x873E00", Offset = "0x873E00", VA = "0x873E00")]
		public Contour(int trianglesNum)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x873E2C", Offset = "0x873E2C", VA = "0x873E2C")]
		public void AllocateBuffers(int trianglesNum)
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x8742C8", Offset = "0x8742C8", VA = "0x8742C8")]
		public void AddTriangle(int triangleID, int id0, int id1, Vector3 v0, Vector3 v1)
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x874590", Offset = "0x874590", VA = "0x874590")]
		public bool FindContours()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000537")]
	internal class Core : Singleton<Core>
	{
		[NonSerialized]
		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderParams parameters;

		[NonSerialized]
		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderQueue queue;

		[NonSerialized]
		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Stopwatch explosionWatch;

		[NonSerialized]
		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Stopwatch frameWatch;

		[NonSerialized]
		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HashSet<MeshObject> meshSet;

		[NonSerialized]
		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<int, int> targetFragments;

		[NonSerialized]
		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MeshObject> postList;

		[NonSerialized]
		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Fragment> pool;

		[NonSerialized]
		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CrackManager crackManager;

		[NonSerialized]
		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int processingFrames;

		[NonSerialized]
		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int poolIdx;

		[NonSerialized]
		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool splitMeshIslands;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ExploderTask[] tasks;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TaskType currTaskType;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool initialized;

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x87490C", Offset = "0x87490C", VA = "0x87490C")]
		public void Initialize(ExploderObject exploder)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x87533C", Offset = "0x87533C", VA = "0x87533C")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, GameObject obj, bool crack)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x875430", Offset = "0x875430", VA = "0x875430")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x875434", Offset = "0x875434", VA = "0x875434")]
		public void ExplodeCracked(GameObject obj, ExploderObject.OnExplosion callback)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x875840", Offset = "0x875840", VA = "0x875840")]
		public void StartExplosionFromQueue(ExploderParams p)
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x875B18", Offset = "0x875B18", VA = "0x875B18")]
		public void Update()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x875BFC", Offset = "0x875BFC", VA = "0x875BFC", Slot = "4")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x8751EC", Offset = "0x8751EC", VA = "0x8751EC")]
		private void PreAllocateBuffers()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x87598C", Offset = "0x87598C", VA = "0x87598C")]
		private bool RunTask(TaskType taskType, float budget = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x875950", Offset = "0x875950", VA = "0x875950")]
		private void InitTask(TaskType taskType)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x8759C8", Offset = "0x8759C8", VA = "0x8759C8")]
		private TaskType NextTask(TaskType taskType)
		{
			return default(TaskType);
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x875C9C", Offset = "0x875C9C", VA = "0x875C9C")]
		public Core()
		{
		}
	}
	[Token(Token = "0x2000538")]
	internal class CrackedObject
	{
		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Fragment> pool;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Stopwatch watch;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Quaternion initRot;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 initPos;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly GameObject originalObject;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ExploderParams parameters;

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x875CE4", Offset = "0x875CE4", VA = "0x875CE4")]
		public CrackedObject(GameObject originalObject, ExploderParams parameters)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x875DCC", Offset = "0x875DCC", VA = "0x875DCC")]
		public long Explode()
		{
			return default(long);
		}
	}
	[Token(Token = "0x2000539")]
	internal class CrackManager
	{
		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<GameObject, CrackedObject> crackedObjects;

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x8750C0", Offset = "0x8750C0", VA = "0x8750C0")]
		public CrackManager(Core core)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x8762DC", Offset = "0x8762DC", VA = "0x8762DC")]
		public CrackedObject Create(GameObject originalObject, ExploderParams parameters)
		{
			return null;
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x8754F8", Offset = "0x8754F8", VA = "0x8754F8")]
		public long Explode(GameObject gameObject)
		{
			return default(long);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x8756A0", Offset = "0x8756A0", VA = "0x8756A0")]
		public long ExplodeAll()
		{
			return default(long);
		}
	}
	[Token(Token = "0x200053A")]
	internal class CuttingPlane
	{
		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly System.Random random;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Plane plane;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Core core;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] rectAxis;

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x87637C", Offset = "0x87637C", VA = "0x87637C")]
		public CuttingPlane(Core core)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x8764DC", Offset = "0x8764DC", VA = "0x8764DC")]
		private Plane GetRandomPlane(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x876590", Offset = "0x876590", VA = "0x876590")]
		private Plane GetRectangularPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x876744", Offset = "0x876744", VA = "0x876744")]
		public Plane GetPlane(ExploderMesh mesh, int attempt)
		{
			return null;
		}
	}
	[Token(Token = "0x200053B")]
	internal class ExploderParams
	{
		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 ForceVector;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 CubeRadius;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 HitPosition;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 ShotDir;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 AdditionalForceVector;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Force;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float FrameBudget;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float Radius;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float DeactivateTimeout;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float BulletSize;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int id;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int TargetFragments;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int FragmentPoolSize;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public DeactivateOptions DeactivateOptions;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public ExploderObject.ThreadOptions ThreadOptions;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FadeoutOptions FadeoutOptions;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ExploderObject.OnExplosion Callback;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ExploderObject.FragmentOption FragmentOptions;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ExploderObject.SFXOption SFXOptions;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ExploderObject.CuttingStyleOption CuttingStyle;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject Target;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject ExploderGameObject;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject FragmentPrefab;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool UseCubeRadius;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool DontUseTag;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool UseForceVector;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public bool MeshColliders;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool ExplodeSelf;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		public bool HideSelf;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC6")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC7")]
		public bool ExplodeFragments;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool SplitMeshIslands;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool Use2DCollision;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		public bool DisableRadiusScan;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool DisableTriangulation;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		public bool PartialExplosion;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		public bool Crack;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF")]
		public bool processing;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool ShouldUseAdditionalForce;

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x874F28", Offset = "0x874F28", VA = "0x874F28")]
		public ExploderParams(ExploderObject exploder)
		{
		}
	}
	[Token(Token = "0x200053C")]
	internal class ExploderQueue
	{
		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<ExploderParams> queue;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Core core;

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x875148", Offset = "0x875148", VA = "0x875148")]
		public ExploderQueue(Core core)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x875358", Offset = "0x875358", VA = "0x875358")]
		public void Enqueue(ExploderObject exploderObject, ExploderObject.OnExplosion callback, GameObject target, bool crack)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x876838", Offset = "0x876838", VA = "0x876838")]
		private void ProcessQueue()
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x875A8C", Offset = "0x875A8C", VA = "0x875A8C")]
		public void OnExplosionFinished(int id, long ellapsedMS)
		{
		}
	}
	[Token(Token = "0x200053D")]
	public struct ExploderTransform
	{
		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 localScale;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform parent;

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x8768E8", Offset = "0x8768E8", VA = "0x8768E8")]
		public ExploderTransform(Transform unityTransform)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x876960", Offset = "0x876960", VA = "0x876960")]
		public Vector3 TransformPoint(Vector3 pnt)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200053E")]
	public class LSHash
	{
		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Vector3[] buckets;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float bucketSize2;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int count;

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x874180", Offset = "0x874180", VA = "0x874180")]
		public LSHash(float bucketSize, int allocSize)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x874164", Offset = "0x874164", VA = "0x874164")]
		public int Capacity()
		{
			return default(int);
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x87420C", Offset = "0x87420C", VA = "0x87420C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x8769FC", Offset = "0x8769FC", VA = "0x8769FC")]
		public int Hash(Vector3 p)
		{
			return default(int);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x874500", Offset = "0x874500", VA = "0x874500")]
		public void Hash(Vector3 p0, Vector3 p1, out int hash0, out int hash1)
		{
		}
	}
	[Token(Token = "0x200053F")]
	public class ExploderMesh
	{
		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] triangles;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2[] uv;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] tangents;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color32[] colors32;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 centroid;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int minX;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int maxX;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int minY;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int maxY;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int minZ;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int maxZ;

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x876AC4", Offset = "0x876AC4", VA = "0x876AC4")]
		public ExploderMesh()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x876ACC", Offset = "0x876ACC", VA = "0x876ACC")]
		public ExploderMesh(Mesh unityMesh)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x876BA4", Offset = "0x876BA4", VA = "0x876BA4")]
		public void CalculateCentroid()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x876D70", Offset = "0x876D70", VA = "0x876D70")]
		public Mesh ToUnityMesh()
		{
			return null;
		}
	}
	[Token(Token = "0x2000540")]
	public class MeshCutter
	{
		[Token(Token = "0x2000541")]
		private struct Triangle
		{
			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] ids;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] pos;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] normal;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2[] uvs;

			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color32[] colors;
		}

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<int>[] triangles;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3>[] vertices;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector3>[] normals;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2>[] uvs;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector4>[] tangents;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Color32>[] vertexColors;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<int> cutTris;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] triCache;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] centroid;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] triCounter;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Array<int> polygonIndicesArray;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Contour contour;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<long, int>[] cutVertCache;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<int, int>[] cornerVertCache;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int contourBufferSize;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color crossSectionVertexColour;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector4 crossSectionUV;

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x876E30", Offset = "0x876E30", VA = "0x876E30")]
		public void Init(int trianglesNum, int verticesNum)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x876E68", Offset = "0x876E68", VA = "0x876E68")]
		private void AllocateBuffers(int trianglesNum, int verticesNum, bool useMeshTangents, bool useVertexColors)
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x8779AC", Offset = "0x8779AC", VA = "0x8779AC")]
		private void AllocateContours(int cutTrianglesNum)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x877E98", Offset = "0x877E98", VA = "0x877E98")]
		public float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes, Color crossSectionVertexColor, Vector4 crossUV)
		{
			return default(float);
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x877EB4", Offset = "0x877EB4", VA = "0x877EB4")]
		private float Cut(ExploderMesh mesh, ExploderTransform meshTransform, Plane plane, bool triangulateHoles, bool allowOpenMesh, ref List<ExploderMesh> meshes)
		{
			return default(float);
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x87E368", Offset = "0x87E368", VA = "0x87E368")]
		private int AddIntersectionPoint(Vector3 pos, Triangle tri, int edge0, int edge1, Dictionary<long, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors32, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x87E87C", Offset = "0x87E87C", VA = "0x87E87C")]
		private int AddTrianglePoint(Vector3 pos, Vector3 normal, Vector2 uv, Vector4 tangent, Color32 color, int idx, int[] triCache, Dictionary<int, int> cache, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Vector4> tangents, List<Color32> colors, bool useTangents, bool useColors, bool useNormals)
		{
			return default(int);
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x87EC2C", Offset = "0x87EC2C", VA = "0x87EC2C")]
		private void Triangulate(List<Dictionary<int, int>> contours, Plane plane, List<Vector3>[] vertices, List<Vector3>[] normals, List<Vector2>[] uvs, List<Vector4>[] tangents, List<Color32>[] colors, List<int>[] triangles, bool uvCutMesh, bool useTangents, bool useColors, bool useNormals)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x880798", Offset = "0x880798", VA = "0x880798")]
		public MeshCutter()
		{
		}
	}
	[Token(Token = "0x2000542")]
	internal struct MeshObject
	{
		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ExploderMesh mesh;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderTransform transform;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform parent;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 position;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Quaternion rotation;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 localScale;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject original;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ExploderOption option;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject skinnedOriginal;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject bakeObject;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float distanceRatio;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int id;
	}
	[Token(Token = "0x2000543")]
	public static class MeshUtils
	{
		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x8807A0", Offset = "0x8807A0", VA = "0x8807A0")]
		public static Vector3 ComputeBarycentricCoordinates(Vector3 a, Vector3 b, Vector3 c, Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A88")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x880874", Offset = "0x880874", VA = "0x880874")]
		public static List<ExploderMesh> IsolateMeshIslands(ExploderMesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x88208C", Offset = "0x88208C", VA = "0x88208C")]
		public static void GeneratePolygonCollider(PolygonCollider2D collider, Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000544")]
	public class Plane
	{
		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Normal;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 <Pnt>k__BackingField;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Distance;

		[Token(Token = "0x170002AC")]
		public Vector3 Pnt
		{
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0x882438", Offset = "0x882438", VA = "0x882438")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0x882444", Offset = "0x882444", VA = "0x882444")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x882450", Offset = "0x882450", VA = "0x882450")]
		public Plane(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x8824B4", Offset = "0x8824B4", VA = "0x8824B4")]
		public void Set(Vector3 normal, Vector3 p)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x8825C8", Offset = "0x8825C8", VA = "0x8825C8")]
		public bool GetSide(Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x882600", Offset = "0x882600", VA = "0x882600")]
		public bool GetSideFix(ref Vector3 n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x8826CC", Offset = "0x8826CC", VA = "0x8826CC")]
		public bool IntersectSegment(Vector3 a, Vector3 b, out float t, ref Vector3 q)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x8827C8", Offset = "0x8827C8", VA = "0x8827C8")]
		public Matrix4x4 GetPlaneMatrix()
		{
			return default(Matrix4x4);
		}
	}
	[Token(Token = "0x2000545")]
	public class Polygon
	{
		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2[] Points;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float Area;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Min;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 Max;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Polygon> holes;

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x8828B8", Offset = "0x8828B8", VA = "0x8828B8")]
		public Polygon(Vector2[] pnts)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x882968", Offset = "0x882968", VA = "0x882968")]
		public float GetArea()
		{
			return default(float);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x882A50", Offset = "0x882A50", VA = "0x882A50")]
		public bool IsPointInside(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x882B74", Offset = "0x882B74", VA = "0x882B74")]
		public void AddHole(Polygon polygon)
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x882C24", Offset = "0x882C24", VA = "0x882C24")]
		public bool Triangulate(Array<int> indicesArray)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x883928", Offset = "0x883928", VA = "0x883928")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000546")]
	internal class CutterMT : CutterST
	{
		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected readonly int THREAD_MAX;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly CutterWorker[] workers;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int[] splitIDs;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Stopwatch localWatch;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool cutInitialized;

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x883B0C", Offset = "0x883B0C", VA = "0x883B0C")]
		public CutterMT(Core Core)
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x88418C", Offset = "0x88418C", VA = "0x88418C", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x8842D0", Offset = "0x8842D0", VA = "0x8842D0", Slot = "4")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x88435C", Offset = "0x88435C", VA = "0x88435C", Slot = "6")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x8844B8", Offset = "0x8844B8", VA = "0x8844B8", Slot = "7")]
		protected override bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x8851DC", Offset = "0x8851DC", VA = "0x8851DC")]
		private int[] SplitMeshTargetFragments(int id)
		{
			return null;
		}
	}
	[Token(Token = "0x2000547")]
	internal class CutterST : ExploderTask
	{
		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected readonly MeshCutter cutter;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cutAttempt;

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x883DE4", Offset = "0x883DE4", VA = "0x883DE4")]
		public CutterST(Core Core)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x884200", Offset = "0x884200", VA = "0x884200", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x8854A4", Offset = "0x8854A4", VA = "0x8854A4", Slot = "6")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x8854E4", Offset = "0x8854E4", VA = "0x8854E4", Slot = "7")]
		protected virtual bool Cut(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x884FE4", Offset = "0x884FE4", VA = "0x884FE4")]
		protected List<ExploderMesh> CutSingleMesh(MeshObject mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x2000548")]
	internal class CutterWorker
	{
		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly HashSet<MeshObject> newFragments;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly HashSet<MeshObject> meshToRemove;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly HashSet<MeshObject> meshSet;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly MeshCutter cutter;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly CuttingPlane cuttingPlane;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Core core;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool running;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int cutAttempt;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ManualResetEvent mre;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Thread thread;

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x883F38", Offset = "0x883F38", VA = "0x883F38")]
		public CutterWorker(Core core, CuttingPlane cuttingPlane)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x884270", Offset = "0x884270", VA = "0x884270")]
		public void Init()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x885328", Offset = "0x885328", VA = "0x885328")]
		public void AddMesh(MeshObject meshObject)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x8853BC", Offset = "0x8853BC", VA = "0x8853BC")]
		public void Run()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x885DB8", Offset = "0x885DB8", VA = "0x885DB8")]
		private void ThreadRun()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x88449C", Offset = "0x88449C", VA = "0x88449C")]
		public bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x8867AC", Offset = "0x8867AC", VA = "0x8867AC")]
		public HashSet<MeshObject> GetResults()
		{
			return null;
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x88433C", Offset = "0x88433C", VA = "0x88433C")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x885E7C", Offset = "0x885E7C", VA = "0x885E7C")]
		private void Cut()
		{
		}
	}
	[Token(Token = "0x2000549")]
	public enum TaskType
	{
		[Token(Token = "0x4001D81")]
		None,
		[Token(Token = "0x4001D82")]
		Preprocess,
		[Token(Token = "0x4001D83")]
		ProcessCutter,
		[Token(Token = "0x4001D84")]
		PartialSeparator,
		[Token(Token = "0x4001D85")]
		IsolateMeshIslands,
		[Token(Token = "0x4001D86")]
		PostprocessExplode,
		[Token(Token = "0x4001D87")]
		PostprocessCrack,
		[Token(Token = "0x4001D88")]
		TaskMax
	}
	[Token(Token = "0x200054A")]
	internal abstract class ExploderTask
	{
		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Core core;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stopwatch <Watch>k__BackingField;

		[Token(Token = "0x170002AD")]
		public Stopwatch Watch
		{
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x8867B4", Offset = "0x8867B4", VA = "0x8867B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x8867BC", Offset = "0x8867BC", VA = "0x8867BC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x8853E8", Offset = "0x8853E8", VA = "0x8853E8")]
		protected ExploderTask(Core Core)
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x8867C4", Offset = "0x8867C4", VA = "0x8867C4", Slot = "4")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x885474", Offset = "0x885474", VA = "0x885474", Slot = "5")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6001AB2")]
		public abstract bool Run(float frameBudget);
	}
	[Token(Token = "0x200054B")]
	internal class IsolateMeshIslands : ExploderTask
	{
		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<MeshObject> islands;

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x8867C8", Offset = "0x8867C8", VA = "0x8867C8")]
		public IsolateMeshIslands(Core Core)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x88685C", Offset = "0x88685C", VA = "0x88685C", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x88692C", Offset = "0x88692C", VA = "0x88692C", Slot = "6")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200054C")]
	internal class PartialSeparator : ExploderTask
	{
		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly MeshCutter cutter;

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x886FE4", Offset = "0x886FE4", VA = "0x886FE4")]
		public PartialSeparator(Core Core)
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x88707C", Offset = "0x88707C", VA = "0x88707C", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x887080", Offset = "0x887080", VA = "0x887080", Slot = "6")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x8870AC", Offset = "0x8870AC", VA = "0x8870AC")]
		private void Separate()
		{
		}
	}
	[Token(Token = "0x200054D")]
	internal abstract class Postprocess : ExploderTask
	{
		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x8875BC", Offset = "0x8875BC", VA = "0x8875BC")]
		protected Postprocess(Core Core)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x8875C0", Offset = "0x8875C0", VA = "0x8875C0", Slot = "5")]
		public override void Init()
		{
		}
	}
	[Token(Token = "0x200054E")]
	internal class PostprocessCrack : Postprocess
	{
		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CrackedObject crackedObject;

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x8876F0", Offset = "0x8876F0", VA = "0x8876F0")]
		public PostprocessCrack(Core Core)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x8876F4", Offset = "0x8876F4", VA = "0x8876F4", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x887FA0", Offset = "0x887FA0", VA = "0x887FA0", Slot = "6")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200054F")]
	internal class PostprocessExplode : Postprocess
	{
		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x888D74", Offset = "0x888D74", VA = "0x888D74")]
		public PostprocessExplode(Core Core)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x888D78", Offset = "0x888D78", VA = "0x888D78", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x8898C8", Offset = "0x8898C8", VA = "0x8898C8", Slot = "6")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000550")]
	internal class Preprocess : ExploderTask
	{
		[Token(Token = "0x2000551")]
		private struct MeshData
		{
			[Token(Token = "0x4001D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh sharedMesh;

			[Token(Token = "0x4001D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material sharedMaterial;

			[Token(Token = "0x4001D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4001D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject parentObject;

			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject skinnedBakeOriginal;

			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 centroid;
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x88A534", Offset = "0x88A534", VA = "0x88A534")]
		public Preprocess(Core Core)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x88A5D0", Offset = "0x88A5D0", VA = "0x88A5D0", Slot = "5")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x88A630", Offset = "0x88A630", VA = "0x88A630", Slot = "6")]
		public override bool Run(float frameBudget)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x88A978", Offset = "0x88A978", VA = "0x88A978")]
		private List<MeshObject> GetMeshList()
		{
			return null;
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x88BD20", Offset = "0x88BD20", VA = "0x88BD20")]
		private List<MeshData> GetMeshData(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x88C4F0", Offset = "0x88C4F0", VA = "0x88C4F0")]
		private float GetDistanceRatio(float distance, float radius)
		{
			return default(float);
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x88BBD4", Offset = "0x88BBD4", VA = "0x88BBD4")]
		private bool IsInRadius(GameObject o)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000552")]
	public class Explodable : MonoBehaviour
	{
		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x88C6F4", Offset = "0x88C6F4", VA = "0x88C6F4")]
		public Explodable()
		{
		}
	}
	[Token(Token = "0x2000553")]
	public class ExploderObject : MonoBehaviour
	{
		[Token(Token = "0x2000554")]
		public enum ThreadOptions
		{
			[Token(Token = "0x4001DB5")]
			WorkerThread1x,
			[Token(Token = "0x4001DB6")]
			WorkerThread2x,
			[Token(Token = "0x4001DB7")]
			WorkerThread3x,
			[Token(Token = "0x4001DB8")]
			Disabled
		}

		[Token(Token = "0x2000555")]
		public enum CuttingStyleOption
		{
			[Token(Token = "0x4001DBA")]
			Random,
			[Token(Token = "0x4001DBB")]
			Rectangular
		}

		[Serializable]
		[Token(Token = "0x2000556")]
		public class SFXOption
		{
			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioClip ExplosionSoundClip;

			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip FragmentSoundClip;

			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject FragmentEmitter;

			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float HitSoundTimeout;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int EmitersMax;

			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float ParticleTimeout;

			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0x88CE90", Offset = "0x88CE90", VA = "0x88CE90")]
			public SFXOption Clone()
			{
				return null;
			}

			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0x88CE14", Offset = "0x88CE14", VA = "0x88CE14")]
			public SFXOption()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000557")]
		public class FragmentOption
		{
			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool FreezePositionX;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool FreezePositionY;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool FreezePositionZ;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			public bool FreezeRotationX;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool FreezeRotationY;

			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			public bool FreezeRotationZ;

			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Layer;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float MaxVelocity;

			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool InheritParentPhysicsProperty;

			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float Mass;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool UseGravity;

			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
			public bool DisableColliders;

			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float AngularVelocity;

			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float MaxAngularVelocity;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 AngularVelocityVector;

			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool RandomAngularVelocityVector;

			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material FragmentMaterial1;

			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0x88CF30", Offset = "0x88CF30", VA = "0x88CF30")]
			public FragmentOption Clone()
			{
				return null;
			}

			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0x88CE1C", Offset = "0x88CE1C", VA = "0x88CE1C")]
			public FragmentOption()
			{
			}
		}

		[Token(Token = "0x2000558")]
		public delegate void OnExplosion(float timeMS, ExplosionState state);

		[Token(Token = "0x2000559")]
		public enum ExplosionState
		{
			[Token(Token = "0x4001DD4")]
			ExplosionStarted,
			[Token(Token = "0x4001DD5")]
			ExplosionFinished,
			[Token(Token = "0x4001DD6")]
			ObjectCracked
		}

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Tag;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DontUseTag;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Radius;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 CubeRadius;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool UseCubeRadius;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 ForceVector;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 AdditionalForceVector;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ShouldUseAdditionalForceVector;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool UseForceVector;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Force;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float FrameBudget;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int TargetFragments;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ThreadOptions ThreadOption;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public DeactivateOptions DeactivateOptions;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float DeactivateTimeout;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FadeoutOptions FadeoutOptions;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool MeshColliders;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool ExplodeSelf;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool DisableRadiusScan;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool HideSelf;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool DestroyOriginalObject;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool ExplodeFragments;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool UniformFragmentDistribution;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool SplitMeshIslands;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool DisableTriangulation;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int FragmentPoolSize;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject FragmentPrefab;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool Use2DCollision;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public CuttingStyleOption CuttingStyle;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SFXOption SFXOptions;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FragmentOption FragmentOptions;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Core core;

		[Token(Token = "0x170002AE")]
		public int ProcessingFrames
		{
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0x88C908", Offset = "0x88C908", VA = "0x88C908")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x88C6FC", Offset = "0x88C6FC", VA = "0x88C6FC")]
		public void ExplodeRadius()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x88C704", Offset = "0x88C704", VA = "0x88C704")]
		public void ExplodeRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x88C734", Offset = "0x88C734", VA = "0x88C734")]
		public void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x88C73C", Offset = "0x88C73C", VA = "0x88C73C")]
		public void ExplodeObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x88C768", Offset = "0x88C768", VA = "0x88C768")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x88C770", Offset = "0x88C770", VA = "0x88C770")]
		public void ExplodePartial(GameObject obj, Vector3 shotDir, Vector3 hitPosition, float bulletSize, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x88C798", Offset = "0x88C798", VA = "0x88C798")]
		public void CrackRadius()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x88C7A0", Offset = "0x88C7A0", VA = "0x88C7A0")]
		public void CrackRadius(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x88C7D0", Offset = "0x88C7D0", VA = "0x88C7D0")]
		public void CrackObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x88C7D8", Offset = "0x88C7D8", VA = "0x88C7D8")]
		public void CrackObject(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x88C804", Offset = "0x88C804", VA = "0x88C804")]
		public bool CanCrack()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x88C884", Offset = "0x88C884", VA = "0x88C884")]
		public void ExplodeCracked(GameObject obj, OnExplosion callback)
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x88C8A0", Offset = "0x88C8A0", VA = "0x88C8A0")]
		public void ExplodeCracked(GameObject obj)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x88C8C0", Offset = "0x88C8C0", VA = "0x88C8C0")]
		public void ExplodeCracked(OnExplosion callback)
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x88C8E4", Offset = "0x88C8E4", VA = "0x88C8E4")]
		public void ExplodeCracked()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x88C924", Offset = "0x88C924", VA = "0x88C924")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x88C994", Offset = "0x88C994", VA = "0x88C994")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x88CAC0", Offset = "0x88CAC0", VA = "0x88CAC0")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x88CBB0", Offset = "0x88CBB0", VA = "0x88CBB0")]
		public ExploderObject()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class ExploderOption : MonoBehaviour
	{
		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Plane2D;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color CrossSectionVertexColor;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector4 CrossSectionUV;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool SplitMeshIslands;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool UseLocalForce;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Force;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material FragmentMaterial;

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x888810", Offset = "0x888810", VA = "0x888810")]
		public void DuplicateSettings(ExploderOption options)
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x88D110", Offset = "0x88D110", VA = "0x88D110")]
		public ExploderOption()
		{
		}
	}
	[Token(Token = "0x200055B")]
	public enum DeactivateOptions
	{
		[Token(Token = "0x4001DDF")]
		Never,
		[Token(Token = "0x4001DE0")]
		OutsideOfCamera,
		[Token(Token = "0x4001DE1")]
		Timeout
	}
	[Token(Token = "0x200055C")]
	public enum FadeoutOptions
	{
		[Token(Token = "0x4001DE3")]
		None,
		[Token(Token = "0x4001DE4")]
		FadeoutAlpha,
		[Token(Token = "0x4001DE5")]
		ScaleDown
	}
	[Token(Token = "0x200055D")]
	public class Fragment : MonoBehaviour
	{
		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool explodable;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool cracked;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public DeactivateOptions deactivateOptions;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float deactivateTimeout;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FadeoutOptions fadeoutOptions;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxVelocity;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool disableColliders;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float disableCollidersTimeout;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool visible;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool activeObj;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minSizeToExplode;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshCollider meshCollider;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BoxCollider boxCollider;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Collider generalCollider;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource audioSource;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip audioClip;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ParticleSystem[] particleSystems;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject particleChild;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PolygonCollider2D polygonCollider2D;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Rigidbody2D rigid2D;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ExploderOption options;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Rigidbody rigidBody;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 originalScale;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float visibilityCheckTimer;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float deactivateTimer;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float emmitersTimeout;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool stopEmitOnTimeout;

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x88D134", Offset = "0x88D134", VA = "0x88D134")]
		public bool IsSleeping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x88D1C0", Offset = "0x88D1C0", VA = "0x88D1C0")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x88D24C", Offset = "0x88D24C", VA = "0x88D24C")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x88D2D8", Offset = "0x88D2D8", VA = "0x88D2D8")]
		public void SetConstraints(RigidbodyConstraints constraints)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x88D36C", Offset = "0x88D36C", VA = "0x88D36C")]
		public void SetSFX(ExploderObject.SFXOption sfx, bool allowParticle)
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x88D6C8", Offset = "0x88D6C8", VA = "0x88D6C8")]
		private void OnCollisionEnter()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x88D7AC", Offset = "0x88D7AC", VA = "0x88D7AC")]
		public void DisableColliders(bool disable, bool meshColliders, bool physics2d)
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x888864", Offset = "0x888864", VA = "0x888864")]
		public void ApplyExplosion(ExploderTransform meshTransform, Vector3 centroid, Vector3 mainCentroid, ExploderObject.FragmentOption fragmentOption, bool useForceVector, Vector3 ForceVector, float force, GameObject original, int targetFragments, Vector3 additionalForceVector, bool shouldUseAdditionalForce)
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x88D9C4", Offset = "0x88D9C4", VA = "0x88D9C4")]
		private void ApplyExplosion2D(ExploderTransform meshTransform, Vector3 centroid, Vector3 mainCentroid, ExploderObject.FragmentOption fragmentOption, bool useForceVector, Vector2 ForceVector, float force, GameObject original, int targetFragments)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x88DCCC", Offset = "0x88DCCC", VA = "0x88DCCC")]
		public void RefreshComponentsCache()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x88A464", Offset = "0x88A464", VA = "0x88A464")]
		public void Explode()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x88DEC4", Offset = "0x88DEC4", VA = "0x88DEC4")]
		public void Emit(bool centerToBound)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x88E020", Offset = "0x88E020", VA = "0x88E020")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x888740", Offset = "0x888740", VA = "0x888740")]
		public void AssignMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x88E160", Offset = "0x88E160", VA = "0x88E160")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x88E180", Offset = "0x88E180", VA = "0x88E180")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x88E824", Offset = "0x88E824", VA = "0x88E824")]
		public Fragment()
		{
		}
	}
	[Token(Token = "0x200055E")]
	public class FragmentPool : MonoBehaviour
	{
		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FragmentPool instance;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Fragment[] pool;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool meshColliders;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float fragmentSoundTimeout;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float HitSoundTimeout;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int MaxEmitters;

		[Token(Token = "0x170002AF")]
		public static FragmentPool Instance
		{
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0x88790C", Offset = "0x88790C", VA = "0x88790C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		public int PoolSize
		{
			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0x88EA48", Offset = "0x88EA48", VA = "0x88EA48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B1")]
		public Fragment[] Pool
		{
			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0x88EA64", Offset = "0x88EA64", VA = "0x88EA64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x88E844", Offset = "0x88E844", VA = "0x88E844")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x88E8E0", Offset = "0x88E8E0", VA = "0x88E8E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x887AF8", Offset = "0x887AF8", VA = "0x887AF8")]
		public List<Fragment> GetAvailableFragments(int size)
		{
			return null;
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x88C82C", Offset = "0x88C82C", VA = "0x88C82C")]
		public int GetAvailableCrackFragmentsCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x888F78", Offset = "0x888F78", VA = "0x888F78")]
		public void Allocate(int poolSize, bool useMeshColliders, bool use2dCollision, GameObject fragmentPrefab)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x887A1C", Offset = "0x887A1C", VA = "0x887A1C")]
		public void ResetTransform()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x88EA6C", Offset = "0x88EA6C", VA = "0x88EA6C")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x88EAC8", Offset = "0x88EAC8", VA = "0x88EAC8")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x88E940", Offset = "0x88E940", VA = "0x88E940")]
		public void DestroyFragments()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x88EB24", Offset = "0x88EB24", VA = "0x88EB24")]
		public void DeactivateFragments()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x88948C", Offset = "0x88948C", VA = "0x88948C")]
		public void SetDeactivateOptions(DeactivateOptions options, FadeoutOptions fadeoutOptions, float timeout)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x8894E4", Offset = "0x8894E4", VA = "0x8894E4")]
		public void SetExplodableFragments(bool explodable, bool dontUseTag)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x8896B8", Offset = "0x8896B8", VA = "0x8896B8")]
		public void SetFragmentPhysicsOptions(ExploderObject.FragmentOption options, bool physics2d)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x88984C", Offset = "0x88984C", VA = "0x88984C")]
		public void SetSFXOptions(ExploderObject.SFXOption sfx)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x88EBDC", Offset = "0x88EBDC", VA = "0x88EBDC")]
		public List<Fragment> GetActiveFragments()
		{
			return null;
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x88EDB4", Offset = "0x88EDB4", VA = "0x88EDB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x88D7A0", Offset = "0x88D7A0", VA = "0x88D7A0")]
		public void OnFragmentHit()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x88D790", Offset = "0x88D790", VA = "0x88D790")]
		public bool CanPlayHitSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x88EDE0", Offset = "0x88EDE0", VA = "0x88EDE0")]
		public FragmentPool()
		{
		}
	}
	[Token(Token = "0x200055F")]
	public class ExploderSlowMotion : MonoBehaviour
	{
		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slowMotionTime;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float slowMotionSpeed;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool slowmo;

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x88EDF4", Offset = "0x88EDF4", VA = "0x88EDF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x88EE48", Offset = "0x88EE48", VA = "0x88EE48")]
		public void EnableSlowMotion(bool status)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x88EF28", Offset = "0x88EF28", VA = "0x88EF28")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x88EF90", Offset = "0x88EF90", VA = "0x88EF90")]
		public ExploderSlowMotion()
		{
		}
	}
	[Token(Token = "0x2000560")]
	public static class ExploderUtils
	{
		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x88C50C", Offset = "0x88C50C", VA = "0x88C50C")]
		public static Vector3 GetCentroid(GameObject obj)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x88A380", Offset = "0x88A380", VA = "0x88A380")]
		public static void SetVisible(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x88EFA4", Offset = "0x88EFA4", VA = "0x88EFA4")]
		public static void ClearLog()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x88ED34", Offset = "0x88ED34", VA = "0x88ED34")]
		public static bool IsActive(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x88EFA8", Offset = "0x88EFA8", VA = "0x88EFA8")]
		public static void SetActive(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x88864C", Offset = "0x88864C", VA = "0x88864C")]
		public static void SetActiveRecursively(GameObject obj, bool status)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x88A29C", Offset = "0x88A29C", VA = "0x88A29C")]
		public static void EnableCollider(GameObject obj, bool status)
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class HUDFPS : MonoBehaviour
	{
		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateInterval;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float accum;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frames;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeleft;

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x88F038", Offset = "0x88F038", VA = "0x88F038")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x88F130", Offset = "0x88F130", VA = "0x88F130")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x88F2F8", Offset = "0x88F2F8", VA = "0x88F2F8")]
		public HUDFPS()
		{
		}
	}
	[Token(Token = "0x2000562")]
	public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isQuitting;

		[Token(Token = "0x170002B2")]
		public static T Instance
		{
			[Token(Token = "0x6001B1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B1D")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001B1E")]
		public Singleton()
		{
		}
	}
}
namespace Exploder.Utils
{
	[Token(Token = "0x2000563")]
	public static class Compatibility
	{
		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x88F308", Offset = "0x88F308", VA = "0x88F308")]
		public static void SetCursorVisible(bool status)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x88F314", Offset = "0x88F314", VA = "0x88F314")]
		public static void LockCursor(bool status)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x88F328", Offset = "0x88F328", VA = "0x88F328")]
		public static bool IsCursorLocked()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000564")]
	public class ExploderSingleton : MonoBehaviour
	{
		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ExploderObject ExploderInstance;

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x88F344", Offset = "0x88F344", VA = "0x88F344")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x88F3CC", Offset = "0x88F3CC", VA = "0x88F3CC")]
		public ExploderSingleton()
		{
		}
	}
	[Token(Token = "0x2000565")]
	internal class Hull2D
	{
		[Serializable]
		[Token(Token = "0x2000566")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Vector2> <>9__0_0;

			[Token(Token = "0x6001B28")]
			[Address(RVA = "0x88F56C", Offset = "0x88F56C", VA = "0x88F56C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B29")]
			[Address(RVA = "0x88F574", Offset = "0x88F574", VA = "0x88F574")]
			internal int <Sort>b__0_0(Vector2 value0, Vector2 value1)
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x88F3D4", Offset = "0x88F3D4", VA = "0x88F3D4")]
		public static void Sort(Vector2[] array)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x8821CC", Offset = "0x8821CC", VA = "0x8821CC")]
		public static Vector2[] ChainHull2D(Vector2[] Pnts)
		{
			return null;
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x88F4D4", Offset = "0x88F4D4", VA = "0x88F4D4")]
		private static float Hull2DCross(ref Vector2 O, ref Vector2 A, ref Vector2 B)
		{
			return default(float);
		}
	}
}
namespace Exploder.Examples
{
	[Token(Token = "0x2000567")]
	public class ExplodeAllObjects : MonoBehaviour
	{
		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x88F5B8", Offset = "0x88F5B8", VA = "0x88F5B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x88F644", Offset = "0x88F644", VA = "0x88F644")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x88F6C0", Offset = "0x88F6C0", VA = "0x88F6C0")]
		private void ExplodeObject(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x88F738", Offset = "0x88F738", VA = "0x88F738")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x88F7DC", Offset = "0x88F7DC", VA = "0x88F7DC")]
		public ExplodeAllObjects()
		{
		}
	}
}
namespace Exploder.Demo
{
	[Token(Token = "0x2000568")]
	public class CursorLocking : MonoBehaviour
	{
		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LockCursor;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode LockKey;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode UnlockKey;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsLocked;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CursorLocking instance;

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x88F7E4", Offset = "0x88F7E4", VA = "0x88F7E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x88F834", Offset = "0x88F834", VA = "0x88F834")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x88F8F0", Offset = "0x88F8F0", VA = "0x88F8F0")]
		public static void Lock()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x88F960", Offset = "0x88F960", VA = "0x88F960")]
		public static void Unlock()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x88F9CC", Offset = "0x88F9CC", VA = "0x88F9CC")]
		public CursorLocking()
		{
		}
	}
	[Token(Token = "0x2000569")]
	public class ExploderMouseLook : MonoBehaviour
	{
		[Token(Token = "0x200056A")]
		public enum RotationAxes
		{
			[Token(Token = "0x4001E2B")]
			MouseXAndY,
			[Token(Token = "0x4001E2C")]
			MouseX,
			[Token(Token = "0x4001E2D")]
			MouseY
		}

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RotationAxes axes;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivityX;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityY;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minimumX;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maximumX;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minimumY;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maximumY;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float rotationY;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float kickTimeout;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float kickBackRot;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool kickBack;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationTarget;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Camera mainCamera;

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x88F9D4", Offset = "0x88F9D4", VA = "0x88F9D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x88FCF4", Offset = "0x88FCF4", VA = "0x88FCF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x88FDB0", Offset = "0x88FDB0", VA = "0x88FDB0")]
		public void Kick()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x88FE04", Offset = "0x88FE04", VA = "0x88FE04")]
		public ExploderMouseLook()
		{
		}
	}
	[Token(Token = "0x200056B")]
	public class GrenadeController : MonoBehaviour
	{
		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip Throw;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource Source;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrenadeObject Grenade;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera MainCamera;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float explodeTimer;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float throwTimer;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool exploding;

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x88FE24", Offset = "0x88FE24", VA = "0x88FE24")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x88FE38", Offset = "0x88FE38", VA = "0x88FE38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x890184", Offset = "0x890184", VA = "0x890184")]
		public GrenadeController()
		{
		}
	}
	[Token(Token = "0x200056C")]
	public class GrenadeObject : MonoBehaviour
	{
		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Light Flash;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ExplodeFinished;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool Impact;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool throwing;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float explodeTimeoutMax;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool explosionInProgress;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderObject exploder;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int flashing;

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x890054", Offset = "0x890054", VA = "0x890054")]
		public void Throw()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x890074", Offset = "0x890074", VA = "0x890074")]
		public void Explode()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x89018C", Offset = "0x89018C", VA = "0x89018C")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x8902E0", Offset = "0x8902E0", VA = "0x8902E0")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x890300", Offset = "0x890300", VA = "0x890300")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x890398", Offset = "0x890398", VA = "0x890398")]
		public GrenadeObject()
		{
		}
	}
	[Token(Token = "0x200056D")]
	public class PanelChairBomb : UseObject
	{
		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderObject Exploder;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ChairBomb;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource SourceExplosion;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip ExplosionSound;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Light Flash;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x8903A0", Offset = "0x8903A0", VA = "0x8903A0", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x890494", Offset = "0x890494", VA = "0x890494")]
		private void OnExplode(float timeMS, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x8905B8", Offset = "0x8905B8", VA = "0x8905B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x890608", Offset = "0x890608", VA = "0x890608")]
		public PanelChairBomb()
		{
		}
	}
	[Token(Token = "0x200056E")]
	public class PanelResetScene : UseObject
	{
		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> objectList;

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x890610", Offset = "0x890610", VA = "0x890610")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x8906C0", Offset = "0x8906C0", VA = "0x8906C0", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x89080C", Offset = "0x89080C", VA = "0x89080C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x890840", Offset = "0x890840", VA = "0x890840")]
		public PanelResetScene()
		{
		}
	}
	[Token(Token = "0x200056F")]
	public class PanelThrowObject : UseObject
	{
		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject ThrowBox;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] ThrowObjects;

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x890848", Offset = "0x890848", VA = "0x890848", Slot = "4")]
		public override void Use()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x890C78", Offset = "0x890C78", VA = "0x890C78")]
		public PanelThrowObject()
		{
		}
	}
	[Token(Token = "0x2000570")]
	internal class RobotScript : MonoBehaviour
	{
		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocity;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float angle;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 center;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPos;

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x890C80", Offset = "0x890C80", VA = "0x890C80")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x890CBC", Offset = "0x890CBC", VA = "0x890CBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x890D14", Offset = "0x890D14", VA = "0x890D14")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x890E24", Offset = "0x890E24", VA = "0x890E24")]
		public RobotScript()
		{
		}
	}
	[Token(Token = "0x2000571")]
	public class Rocket : MonoBehaviour
	{
		[Token(Token = "0x2000572")]
		public delegate void OnHit(Vector3 pos);

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Explosion;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject RocketStatic;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light RocketLight;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float RocketVelocity;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnHit HitCallback;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Ray direction;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool launch;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float launchTimeout;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform parent;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 shotPos;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float targetDistance;

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x890E38", Offset = "0x890E38", VA = "0x890E38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x890E8C", Offset = "0x890E8C", VA = "0x890E8C")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x890F28", Offset = "0x890F28", VA = "0x890F28")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x890F4C", Offset = "0x890F4C", VA = "0x890F4C")]
		public void Launch(Ray ray)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x8910F4", Offset = "0x8910F4", VA = "0x8910F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x891498", Offset = "0x891498", VA = "0x891498")]
		public Rocket()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class RPGController : MonoBehaviour
	{
		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExploderObject exploder;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rocket Rocket;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float nextShotTimeout;

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x891590", Offset = "0x891590", VA = "0x891590")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x891618", Offset = "0x891618", VA = "0x891618")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x891630", Offset = "0x891630", VA = "0x891630")]
		private void OnRocketHit(Vector3 position)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x8916CC", Offset = "0x8916CC", VA = "0x8916CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x8918F8", Offset = "0x8918F8", VA = "0x8918F8")]
		public RPGController()
		{
		}
	}
	[Token(Token = "0x2000574")]
	public class ShotgunController : MonoBehaviour
	{
		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip GunShot;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip Reload;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource Source;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light Flash;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animation ReloadAnim;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationClip HideAnim;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject MuzzleFlash;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flashing;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float reloadTimeout;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float nextShotTimeout;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private TargetType lastTarget;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ExploderObject exploder;

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x891900", Offset = "0x891900", VA = "0x891900")]
		public void OnActivate()
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x89190C", Offset = "0x89190C", VA = "0x89190C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x891D98", Offset = "0x891D98", VA = "0x891D98")]
		public ShotgunController()
		{
		}
	}
	[Token(Token = "0x2000575")]
	public enum TargetType
	{
		[Token(Token = "0x4001E6C")]
		DestroyableObject,
		[Token(Token = "0x4001E6D")]
		UseObject,
		[Token(Token = "0x4001E6E")]
		Default,
		[Token(Token = "0x4001E6F")]
		None
	}
	[Token(Token = "0x2000576")]
	public class TargetManager : MonoBehaviour
	{
		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TargetManager instance;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject TargetObject;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetType TargetType;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 TargetPosition;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image CrosshairGun;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image CrosshairHand;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExploderMouseLook MouseLookCamera;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text PanelText;

		[Token(Token = "0x170002B3")]
		public static TargetManager Instance
		{
			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0x891DA8", Offset = "0x891DA8", VA = "0x891DA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x891DF0", Offset = "0x891DF0", VA = "0x891DF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x891E48", Offset = "0x891E48", VA = "0x891E48")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x891EA0", Offset = "0x891EA0", VA = "0x891EA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x8924D4", Offset = "0x8924D4", VA = "0x8924D4")]
		private bool IsDestroyableObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x8925C4", Offset = "0x8925C4", VA = "0x8925C4")]
		private bool IsUseObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x8926BC", Offset = "0x8926BC", VA = "0x8926BC")]
		public TargetManager()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x8926C4", Offset = "0x8926C4", VA = "0x8926C4")]
		private int <Update>b__12_0(RaycastHit a, RaycastHit b)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000577")]
	public class ThrowObject : MonoBehaviour
	{
		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float destroyTimer;

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x8927B4", Offset = "0x8927B4", VA = "0x8927B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x8927C0", Offset = "0x8927C0", VA = "0x8927C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x892860", Offset = "0x892860", VA = "0x892860")]
		public ThrowObject()
		{
		}
	}
	[Token(Token = "0x2000578")]
	public abstract class UseObject : MonoBehaviour
	{
		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UseRadius;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string HelperText;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip UseClip;

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x892868", Offset = "0x892868", VA = "0x892868", Slot = "4")]
		public virtual void Use()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x892940", Offset = "0x892940", VA = "0x892940")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x892994", Offset = "0x892994", VA = "0x892994")]
		protected UseObject()
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class WeaponManager : MonoBehaviour
	{
		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Shotgun;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject RPG;

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x8929FC", Offset = "0x8929FC", VA = "0x8929FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x892AF4", Offset = "0x892AF4", VA = "0x892AF4")]
		public WeaponManager()
		{
		}
	}
	[Token(Token = "0x200057A")]
	public class DemoClickExplode : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200057B")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Explodable, bool> <>9__3_0;

			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Explodable, GameObject> <>9__3_1;

			[Token(Token = "0x6001B78")]
			[Address(RVA = "0x893300", Offset = "0x893300", VA = "0x893300")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B79")]
			[Address(RVA = "0x893308", Offset = "0x893308", VA = "0x893308")]
			internal bool <Start>b__3_0(Explodable ex)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0x893360", Offset = "0x893360", VA = "0x893360")]
			internal GameObject <Start>b__3_1(Explodable ex)
			{
				return null;
			}
		}

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera Camera;

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x892AFC", Offset = "0x892AFC", VA = "0x892AFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x892E84", Offset = "0x892E84", VA = "0x892E84")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x892F6C", Offset = "0x892F6C", VA = "0x892F6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x8930B8", Offset = "0x8930B8", VA = "0x8930B8")]
		private void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x893158", Offset = "0x893158", VA = "0x893158")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x893154", Offset = "0x893154", VA = "0x893154")]
		private void ExplodeAfterCrack(GameObject obj)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x89315C", Offset = "0x89315C", VA = "0x89315C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x893288", Offset = "0x893288", VA = "0x893288")]
		public DemoClickExplode()
		{
		}
	}
	[Token(Token = "0x200057C")]
	public class DemoClickPartialExplode : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200057D")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExploderObject.OnExplosion <>9__2_0;

			[Token(Token = "0x6001B80")]
			[Address(RVA = "0x89370C", Offset = "0x89370C", VA = "0x89370C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B81")]
			[Address(RVA = "0x893714", Offset = "0x893714", VA = "0x893714")]
			internal void <Update>b__2_0(float ms, ExploderObject.ExplosionState state)
			{
			}
		}

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExploderObject Exploder;

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x893378", Offset = "0x893378", VA = "0x893378")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x8933D8", Offset = "0x8933D8", VA = "0x8933D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x8935F4", Offset = "0x8935F4", VA = "0x8935F4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x893694", Offset = "0x893694", VA = "0x893694")]
		public DemoClickPartialExplode()
		{
		}
	}
	[Token(Token = "0x200057E")]
	public class DemoSelfExplode : MonoBehaviour
	{
		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera Camera;

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x893794", Offset = "0x893794", VA = "0x893794")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x893824", Offset = "0x893824", VA = "0x893824")]
		private bool IsExplodable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x893890", Offset = "0x893890", VA = "0x893890")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x8939D8", Offset = "0x8939D8", VA = "0x8939D8")]
		private void ExplodeObject(GameObject obj)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x893AF4", Offset = "0x893AF4", VA = "0x893AF4")]
		private void OnExplosion(float time, ExploderObject.ExplosionState state)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x893AF8", Offset = "0x893AF8", VA = "0x893AF8")]
		public DemoSelfExplode()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public class DemoSimple : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000580")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Explodable, bool> <>9__2_0;

			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Explodable, GameObject> <>9__2_1;

			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0x8940E8", Offset = "0x8940E8", VA = "0x8940E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x8940F0", Offset = "0x8940F0", VA = "0x8940F0")]
			internal bool <Start>b__2_0(Explodable ex)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x894148", Offset = "0x894148", VA = "0x894148")]
			internal GameObject <Start>b__2_1(Explodable ex)
			{
				return null;
			}
		}

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExploderObject Exploder;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject[] DestroyableObjects;

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x893B00", Offset = "0x893B00", VA = "0x893B00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x893E7C", Offset = "0x893E7C", VA = "0x893E7C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x894070", Offset = "0x894070", VA = "0x894070")]
		public DemoSimple()
		{
		}
	}
}
namespace Bhaptics.SDK2
{
	[Token(Token = "0x2000581")]
	public class PlayParamSample : MonoBehaviour
	{
		[Token(Token = "0x2000582")]
		private sealed class <OnClickPlayCor>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayParamSample <>4__this;

			[Token(Token = "0x170002B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BAA")]
				[Address(RVA = "0x8959BC", Offset = "0x8959BC", VA = "0x8959BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BAB")]
				[Address(RVA = "0x8959C4", Offset = "0x8959C4", VA = "0x8959C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0x89539C", Offset = "0x89539C", VA = "0x89539C")]
			[DebuggerHidden]
			public <OnClickPlayCor>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0x895750", Offset = "0x895750", VA = "0x895750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0x895754", Offset = "0x895754", VA = "0x895754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string SampleAppID;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string SampleApiKey;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Canvas initCanvas;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Canvas mainCanvas;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Dropdown eventsDropdown;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Slider sliderIntensity;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Slider sliderDuration;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Slider sliderAngleX;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Slider sliderOffsetY;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Text intensityValueText;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text durationValueText;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Text angleXValueText;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Text offsetYValueText;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text playButtonText;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button intensityResetButton;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button durationResetButton;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button angleXResetButton;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Button offsetYResetButton;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private BhapticsSettings sampleSettings;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int requestId;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string eventName;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private MappingMetaData[] events;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine onClickPlayCoroutine;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private BhapticsSettings currentSettings;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float intensity;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float duration;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float angleX;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float offsetY;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int selectedIndex;

		[Token(Token = "0x170002B4")]
		public float Intensity
		{
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0x894160", Offset = "0x894160", VA = "0x894160")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x894168", Offset = "0x894168", VA = "0x894168")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public float Duration
		{
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x8942A8", Offset = "0x8942A8", VA = "0x8942A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0x8942B0", Offset = "0x8942B0", VA = "0x8942B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public float AngleX
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x8943F0", Offset = "0x8943F0", VA = "0x8943F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0x8943F8", Offset = "0x8943F8", VA = "0x8943F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public float OffsetY
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x894538", Offset = "0x894538", VA = "0x894538")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0x894540", Offset = "0x894540", VA = "0x894540")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public int SelectedIndex
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x894680", Offset = "0x894680", VA = "0x894680")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0x894688", Offset = "0x894688", VA = "0x894688")]
			set
			{
			}
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x894690", Offset = "0x894690", VA = "0x894690")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x8947AC", Offset = "0x8947AC", VA = "0x8947AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x8947D0", Offset = "0x8947D0", VA = "0x8947D0")]
		public void OnClickPlay()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x894A58", Offset = "0x894A58", VA = "0x894A58")]
		public void SetOffsetY(string offsetYStr)
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x894A98", Offset = "0x894A98", VA = "0x894A98")]
		public void OpenDeveloperPortal()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x894ADC", Offset = "0x894ADC", VA = "0x894ADC")]
		public void OpenGuideLink()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x894B20", Offset = "0x894B20", VA = "0x894B20")]
		public void UseSampleSettings()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x894F40", Offset = "0x894F40", VA = "0x894F40")]
		private void PlayHaptic(string eventName, float intensity, float duration, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x8948E4", Offset = "0x8948E4", VA = "0x8948E4")]
		private void StopHaptic()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x8952E4", Offset = "0x8952E4", VA = "0x8952E4")]
		private void ResetValues()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x894870", Offset = "0x894870", VA = "0x894870")]
		private IEnumerator OnClickPlayCor()
		{
			return null;
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x8953C4", Offset = "0x8953C4", VA = "0x8953C4")]
		private void SetupApplicationData()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x894704", Offset = "0x894704", VA = "0x894704")]
		private void CheckApplicationSetting()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x89568C", Offset = "0x89568C", VA = "0x89568C")]
		public PlayParamSample()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public class AndroidHaptic
	{
		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] PlayParams;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] IsPlayingParams;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<HapticDevice> deviceList;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected IntPtr InitializePtr;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected IntPtr PlayPtr;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr PlayPosPtr;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr PlayParamPtr;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr PlayPosParamPtr;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr StopIntPtr;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr StopByEventIdPtr;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr StopAllPtr;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr IsPlayingByEventIdPtr;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected IntPtr IsPlayingByRequestIdPtr;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x8959CC", Offset = "0x8959CC", VA = "0x8959CC")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x8966C0", Offset = "0x8966C0", VA = "0x8966C0")]
		public bool CheckBhapticsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x896448", Offset = "0x896448", VA = "0x896448")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x896924", Offset = "0x896924", VA = "0x896924")]
		public void Initialize(string workspaceId, string sdkKey, string json)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x896BA4", Offset = "0x896BA4", VA = "0x896BA4")]
		public bool IsPlayingByRequestId(int requestId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x896D54", Offset = "0x896D54", VA = "0x896D54")]
		public int Play(string eventId)
		{
			return default(int);
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x896EE0", Offset = "0x896EE0", VA = "0x896EE0")]
		public int PlayParam(string eventId, float intensity, float duration, float angleX, float offsetY)
		{
			return default(int);
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x8971D4", Offset = "0x8971D4", VA = "0x8971D4")]
		public bool StopByRequestId(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x8972FC", Offset = "0x8972FC", VA = "0x8972FC")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x8974AC", Offset = "0x8974AC", VA = "0x8974AC")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x8975C4", Offset = "0x8975C4", VA = "0x8975C4")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x897704", Offset = "0x897704", VA = "0x897704")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x896B18", Offset = "0x896B18", VA = "0x896B18")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x896CC4", Offset = "0x896CC4", VA = "0x896CC4")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x896E50", Offset = "0x896E50", VA = "0x896E50")]
		private int CallNativeIntMethod(IntPtr methodPtr, object[] param)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000584")]
	internal class AndroidUtils
	{
		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x8977FC", Offset = "0x8977FC", VA = "0x8977FC")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x897A04", Offset = "0x897A04", VA = "0x897A04")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x897C14", Offset = "0x897C14", VA = "0x897C14")]
		public static int CallNativeIntMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000585")]
	public class BhapticsLibrary
	{
		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object Lock;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<HapticDevice> EmptyDevices;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidHaptic android;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool _initialized;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private static bool isAvailable;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private static bool isAvailableChecked;

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x897EDC", Offset = "0x897EDC", VA = "0x897EDC")]
		public static bool IsBhapticsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x897F70", Offset = "0x897F70", VA = "0x897F70")]
		public static bool IsBhapticsAvailableForce()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x894BB4", Offset = "0x894BB4", VA = "0x894BB4")]
		public static bool Initialize(string appId, string apiKey, string json)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x898474", Offset = "0x898474", VA = "0x898474")]
		public static void Destroy()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x898644", Offset = "0x898644", VA = "0x898644")]
		public static int Play(string eventId)
		{
			return default(int);
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x8950A4", Offset = "0x8950A4", VA = "0x8950A4")]
		public static int PlayParam(string eventId, float intensity, float duration, float angleX, float offsetY)
		{
			return default(int);
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x89520C", Offset = "0x89520C", VA = "0x89520C")]
		public static bool StopInt(int requestId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x898938", Offset = "0x898938", VA = "0x898938")]
		public static bool StopAll()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x8958E4", Offset = "0x8958E4", VA = "0x8958E4")]
		public static bool IsPlayingByRequestId(int requestId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x898AF8", Offset = "0x898AF8", VA = "0x898AF8")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x898D94", Offset = "0x898D94", VA = "0x898D94")]
		public static void Ping(HapticDevice targetDevice)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x898F08", Offset = "0x898F08", VA = "0x898F08")]
		public static void TogglePosition(HapticDevice targetDevice)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x899078", Offset = "0x899078", VA = "0x899078")]
		public static void OnApplicationFocus()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x8990C4", Offset = "0x8990C4", VA = "0x8990C4")]
		public static void OnApplicationPause()
		{
		}
	}
	[Token(Token = "0x2000586")]
	public class bhaptics_library
	{
		[PreserveSig]
		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x898398", Offset = "0x898398", VA = "0x898398")]
		public static extern bool registryAndInit(string sdkAPIKey, string workspaceId, string initData);

		[PreserveSig]
		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x898328", Offset = "0x898328", VA = "0x898328")]
		public static extern bool wsIsConnected();

		[PreserveSig]
		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x8985E0", Offset = "0x8985E0", VA = "0x8985E0")]
		public static extern void wsClose();

		[PreserveSig]
		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x898758", Offset = "0x898758", VA = "0x898758")]
		public static extern int play(string key);

		[PreserveSig]
		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x8987EC", Offset = "0x8987EC", VA = "0x8987EC")]
		public static extern int playPosParam(string key, int position, float intensity, float duration, float angleX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x8988B8", Offset = "0x8988B8", VA = "0x8988B8")]
		public static extern bool stop(int key);

		[PreserveSig]
		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x898A04", Offset = "0x898A04", VA = "0x898A04")]
		public static extern bool stopAll();

		[PreserveSig]
		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x898A74", Offset = "0x898A74", VA = "0x898A74")]
		public static extern bool isPlayingByRequestId(int key);

		[PreserveSig]
		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x898E70", Offset = "0x898E70", VA = "0x898E70")]
		public static extern bool ping(string address);

		[PreserveSig]
		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x898FE0", Offset = "0x898FE0", VA = "0x898FE0")]
		public static extern bool swapPosition(string address);

		[PreserveSig]
		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x899210", Offset = "0x899210", VA = "0x899210")]
		public static extern IntPtr getDeviceInfoJson();

		[PreserveSig]
		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x8981C4", Offset = "0x8981C4", VA = "0x8981C4")]
		public static extern bool isPlayerInstalled();

		[PreserveSig]
		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x898234", Offset = "0x898234", VA = "0x898234")]
		public static extern bool isPlayerRunning();

		[PreserveSig]
		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x8982A4", Offset = "0x8982A4", VA = "0x8982A4")]
		public static extern bool launchPlayer(bool b);

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x898BE8", Offset = "0x898BE8", VA = "0x898BE8")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x899278", Offset = "0x899278", VA = "0x899278")]
		private static string PtrToStringUtf8(IntPtr ptr)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000587")]
	internal class Device
	{
		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool paired;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string deviceName;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int position;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool connected;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string address;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int battery;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool audioJackIn;

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x8994E8", Offset = "0x8994E8", VA = "0x8994E8")]
		public Device()
		{
		}
	}
	[Token(Token = "0x2000588")]
	public enum PositionType
	{
		[Token(Token = "0x4001ED9")]
		Vest,
		[Token(Token = "0x4001EDA")]
		ForearmL,
		[Token(Token = "0x4001EDB")]
		ForearmR,
		[Token(Token = "0x4001EDC")]
		Head,
		[Token(Token = "0x4001EDD")]
		HandL,
		[Token(Token = "0x4001EDE")]
		HandR,
		[Token(Token = "0x4001EDF")]
		FootL,
		[Token(Token = "0x4001EE0")]
		FootR,
		[Token(Token = "0x4001EE1")]
		GloveL,
		[Token(Token = "0x4001EE2")]
		GloveR
	}
	[Serializable]
	[Token(Token = "0x2000589")]
	public class MappingMetaData
	{
		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int durationMillis;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isAudio;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long updateTime;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] positions;

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x8994F0", Offset = "0x8994F0", VA = "0x8994F0")]
		public MappingMetaData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200058A")]
	public class HapticDevice
	{
		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsAudioJack;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x8994F8", Offset = "0x8994F8", VA = "0x8994F8")]
		public HapticDevice()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200058B")]
	internal class DeviceListMessage
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Device[] devices;

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x899500", Offset = "0x899500", VA = "0x899500")]
		public DeviceListMessage()
		{
		}
	}
	[Token(Token = "0x200058C")]
	public class BhapticsHelpers
	{
		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x8967D4", Offset = "0x8967D4", VA = "0x8967D4")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x8993BC", Offset = "0x8993BC", VA = "0x8993BC")]
		internal static List<HapticDevice> Convert(Device[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x899508", Offset = "0x899508", VA = "0x899508")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x8995E8", Offset = "0x8995E8", VA = "0x8995E8")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x8995D8", Offset = "0x8995D8", VA = "0x8995D8")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}
	}
	[Token(Token = "0x200058D")]
	public class BhapticsSDK2 : MonoBehaviour
	{
		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsSDK2 instance;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BhapticsSettings bhapticsSettings;

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x899748", Offset = "0x899748", VA = "0x899748")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x899C18", Offset = "0x899C18", VA = "0x899C18")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x899C7C", Offset = "0x899C7C", VA = "0x899C7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x899D20", Offset = "0x899D20", VA = "0x899D20")]
		public BhapticsSDK2()
		{
		}
	}
	[Token(Token = "0x200058E")]
	public class BhapticsSettings : ScriptableObject
	{
		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsSettings instance;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string appName;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string appId;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string apiKey;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int lastDeployVersion;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MappingMetaData[] eventData;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string defaultDeploy;

		[Token(Token = "0x170002BB")]
		public static BhapticsSettings Instance
		{
			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0x8946B8", Offset = "0x8946B8", VA = "0x8946B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BC")]
		public string AppName
		{
			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0x899F20", Offset = "0x899F20", VA = "0x899F20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0x899F28", Offset = "0x899F28", VA = "0x899F28")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public string AppId
		{
			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0x899F30", Offset = "0x899F30", VA = "0x899F30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0x899F38", Offset = "0x899F38", VA = "0x899F38")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public string ApiKey
		{
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0x899F40", Offset = "0x899F40", VA = "0x899F40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x899F48", Offset = "0x899F48", VA = "0x899F48")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public MappingMetaData[] EventData
		{
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0x899F50", Offset = "0x899F50", VA = "0x899F50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x899F58", Offset = "0x899F58", VA = "0x899F58")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public int LastDeployVersion
		{
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0x899F60", Offset = "0x899F60", VA = "0x899F60")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0x899F68", Offset = "0x899F68", VA = "0x899F68")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public string DefaultDeploy
		{
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0x899F70", Offset = "0x899F70", VA = "0x899F70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0x899F78", Offset = "0x899F78", VA = "0x899F78")]
			set
			{
			}
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x899F80", Offset = "0x899F80", VA = "0x899F80")]
		public static void VerifyScriptableObject()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x899F84", Offset = "0x899F84", VA = "0x899F84")]
		public static void ResetInstance()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x899D28", Offset = "0x899D28", VA = "0x899D28")]
		private static void LoadInstance()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x89A188", Offset = "0x89A188", VA = "0x89A188")]
		public BhapticsSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200058F")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x89A218", Offset = "0x89A218", VA = "0x89A218")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000590")]
	public class IconSetting
	{
		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PositonIconSetting Vest;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PositonIconSetting GloveL;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PositonIconSetting GloveR;

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x89A220", Offset = "0x89A220", VA = "0x89A220")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x2000591")]
	public class BhapticsDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x89A228", Offset = "0x89A228", VA = "0x89A228")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x89A408", Offset = "0x89A408", VA = "0x89A408")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x89A5E4", Offset = "0x89A5E4", VA = "0x89A5E4")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x89A66C", Offset = "0x89A66C", VA = "0x89A66C")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x89A6DC", Offset = "0x89A6DC", VA = "0x89A6DC")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x89A4B8", Offset = "0x89A4B8", VA = "0x89A4B8")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x89AAC0", Offset = "0x89AAC0", VA = "0x89AAC0")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x89AAE4", Offset = "0x89AAE4", VA = "0x89AAE4")]
		private void Ping()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x89AB4C", Offset = "0x89AB4C", VA = "0x89AB4C")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x89AC0C", Offset = "0x89AC0C", VA = "0x89AC0C")]
		private void ToRight()
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x89ACCC", Offset = "0x89ACCC", VA = "0x89ACCC")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x89A98C", Offset = "0x89A98C", VA = "0x89A98C")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x89A944", Offset = "0x89A944", VA = "0x89A944")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x89A968", Offset = "0x89A968", VA = "0x89A968")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x89AD00", Offset = "0x89AD00", VA = "0x89AD00")]
		public BhapticsDeviceUI()
		{
		}
	}
	[Token(Token = "0x2000592")]
	public class BhapticsUI : MonoBehaviour
	{
		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float intervalRefreshTime;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BhapticsDeviceUI devicePrefab;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button bHapticsLinkButton;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject helpDescriptionPC;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject helpDescriptionQuest;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<BhapticsDeviceUI> controllers;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int deviceListSize;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int deviceListPageIndex;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int expandHeight;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int expandDeviceCount;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int pageExpandHeight;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int maxPageIndex;

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x89ADFC", Offset = "0x89ADFC", VA = "0x89ADFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x89B2A8", Offset = "0x89B2A8", VA = "0x89B2A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x89B2F4", Offset = "0x89B2F4", VA = "0x89B2F4")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x89B9D4", Offset = "0x89B9D4", VA = "0x89B9D4")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x89B9DC", Offset = "0x89B9DC", VA = "0x89B9DC")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x89B9E4", Offset = "0x89B9E4", VA = "0x89B9E4")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x89BA28", Offset = "0x89BA28", VA = "0x89BA28")]
		private void NextPage()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x89BA4C", Offset = "0x89BA4C", VA = "0x89BA4C")]
		private void BackPage()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x89B948", Offset = "0x89B948", VA = "0x89B948")]
		private void SetActiveHelpGameObject(bool value)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x89BA70", Offset = "0x89BA70", VA = "0x89BA70")]
		public BhapticsUI()
		{
		}
	}
}
namespace WenklyStudio
{
	[Token(Token = "0x2000593")]
	public class BalistaController : MonoBehaviourPun, IPunObservable, IInRoomCallbacks, IWithIcon
	{
		[Token(Token = "0x2000594")]
		private sealed class <ReloadBalista>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BalistaController <>4__this;

			[Token(Token = "0x170002C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C3B")]
				[Address(RVA = "0x89D0E0", Offset = "0x89D0E0", VA = "0x89D0E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C3C")]
				[Address(RVA = "0x89D0E8", Offset = "0x89D0E8", VA = "0x89D0E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C38")]
			[Address(RVA = "0x89CC78", Offset = "0x89CC78", VA = "0x89CC78")]
			[DebuggerHidden]
			public <ReloadBalista>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6001C39")]
			[Address(RVA = "0x89CFFC", Offset = "0x89CFFC", VA = "0x89CFFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x89D000", Offset = "0x89D000", VA = "0x89D000", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PickableInteracter pickableInteracter;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<OwnershipChanger> OwnershipChangers;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform balistaStand;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform balista;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BalistaShootController shootController;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BalistaAnimatorController balistaAnimatorController;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BalistaSoundController balistaSoundController;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BalistaBoltVisibilityController balistaBoltController;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material balistaMaterial;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BalistaHandsController balistaHands;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int maxDistance;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 rotationOffset;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 standOffSet;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform leftHandTransform;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform rightHandTransform;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BalistaHandsPositionReference handsReferences;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool canShoot;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool isGrabbed;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int balistaUserId;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool shouldResetHands;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool areHandsActive;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private WaitForSecondsRealtime timeToStartReload;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private WaitForSecondsRealtime timeToEndReload;

		[Token(Token = "0x170002C2")]
		public BalistaHandsPositionReference HandsReferences
		{
			[Token(Token = "0x6001C18")]
			[Address(RVA = "0x89BB14", Offset = "0x89BB14", VA = "0x89BB14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C19")]
			[Address(RVA = "0x89BB1C", Offset = "0x89BB1C", VA = "0x89BB1C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public bool AreHandsActive
		{
			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0x89BC74", Offset = "0x89BC74", VA = "0x89BC74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0x89BC30", Offset = "0x89BC30", VA = "0x89BC30")]
			set
			{
			}
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x89BC7C", Offset = "0x89BC7C", VA = "0x89BC7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x89BFF8", Offset = "0x89BFF8", VA = "0x89BFF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x89C36C", Offset = "0x89C36C", VA = "0x89C36C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x89C668", Offset = "0x89C668", VA = "0x89C668")]
		private void GrabBalista(Transform hand)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x89C974", Offset = "0x89C974", VA = "0x89C974")]
		private void ReleaseBalista(Transform hand)
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x89CA30", Offset = "0x89CA30", VA = "0x89CA30")]
		private void Shoot(Transform hand)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x89C3F8", Offset = "0x89C3F8", VA = "0x89C3F8")]
		private void ResetBallista()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x89BB9C", Offset = "0x89BB9C", VA = "0x89BB9C")]
		private bool ShouldResetLastPlayerHands()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x89CAE0", Offset = "0x89CAE0", VA = "0x89CAE0")]
		private void ResetHandsToArcheryState()
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x89CB3C", Offset = "0x89CB3C", VA = "0x89CB3C")]
		private void ResetHandToGameOverState()
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x89CA48", Offset = "0x89CA48", VA = "0x89CA48")]
		private void ShootAndReloadBalista()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x89C538", Offset = "0x89C538", VA = "0x89C538")]
		private bool IsPlayerHoldingBalista()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x89C3B8", Offset = "0x89C3B8", VA = "0x89C3B8")]
		private bool PlayerOwnsBallista()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x89C590", Offset = "0x89C590", VA = "0x89C590")]
		private void SetBalistaOnHoldPosition()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x89CC0C", Offset = "0x89CC0C", VA = "0x89CC0C")]
		private Vector3 CalulateHandsMidPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x89CB98", Offset = "0x89CB98", VA = "0x89CB98")]
		private IEnumerator ReloadBalista()
		{
			return null;
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x89CAB8", Offset = "0x89CAB8", VA = "0x89CAB8")]
		private static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x89C828", Offset = "0x89C828", VA = "0x89C828")]
		private void TransferBalistaOwnership()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x89CCA0", Offset = "0x89CCA0", VA = "0x89CCA0", Slot = "10")]
		public bool ShouldDisplayIcon()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x89CCB0", Offset = "0x89CCB0", VA = "0x89CCB0", Slot = "6")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x89CDB0", Offset = "0x89CDB0", VA = "0x89CDB0", Slot = "9")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x89CCB4", Offset = "0x89CCB4", VA = "0x89CCB4")]
		private void ResetBallistaIfOwnerDoesntExist()
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x89CDB4", Offset = "0x89CDB4", VA = "0x89CDB4", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x89CEE8", Offset = "0x89CEE8", VA = "0x89CEE8", Slot = "8")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x89CEEC", Offset = "0x89CEEC", VA = "0x89CEEC", Slot = "5")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x89CEF0", Offset = "0x89CEF0", VA = "0x89CEF0", Slot = "7")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x89CEF4", Offset = "0x89CEF4", VA = "0x89CEF4")]
		public BalistaController()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x89CFC4", Offset = "0x89CFC4", VA = "0x89CFC4")]
		private bool <ResetBallistaIfOwnerDoesntExist>b__50_0(PlayerControllerCore p)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000595")]
	public class HeadColliderController : MonoBehaviour
	{
		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action OnHornHeadTriggerEnter;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action OnHornHeadTriggerExit;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SalvaHandleController salvaHandleController;

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x89D0F0", Offset = "0x89D0F0", VA = "0x89D0F0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x89D218", Offset = "0x89D218", VA = "0x89D218")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x89D324", Offset = "0x89D324", VA = "0x89D324")]
		public HeadColliderController()
		{
		}
	}
	[Token(Token = "0x2000596")]
	public class DemoScript : MonoBehaviour
	{
		[Token(Token = "0x2000597")]
		private enum RotationAxes
		{
			[Token(Token = "0x4001F5B")]
			MouseXAndY,
			[Token(Token = "0x4001F5C")]
			MouseX,
			[Token(Token = "0x4001F5D")]
			MouseY
		}

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> Mirrors;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject LightBulb;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle RecursionToggle;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationModifier;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float moveModifier;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material lightBulbMaterial;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RotationAxes axes;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float sensitivityX;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float sensitivityY;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float minimumX;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float maximumX;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float minimumY;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float maximumY;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float rotationX;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float rotationY;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion originalRotation;

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x89D32C", Offset = "0x89D32C", VA = "0x89D32C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x89D3F0", Offset = "0x89D3F0", VA = "0x89D3F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x89DD0C", Offset = "0x89DD0C", VA = "0x89DD0C")]
		public void MirrorRecursionToggled()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x89DD10", Offset = "0x89DD10", VA = "0x89DD10")]
		public void ChangeMirrorRecursion()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x89DBC0", Offset = "0x89DBC0", VA = "0x89DBC0")]
		private void UpdateMovement()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x89D418", Offset = "0x89D418", VA = "0x89D418")]
		private void RotateMirror()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x89D598", Offset = "0x89D598", VA = "0x89D598")]
		private void MoveLightBulb()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x89D70C", Offset = "0x89D70C", VA = "0x89D70C")]
		private void UpdateMouseLook()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x89DE9C", Offset = "0x89DE9C", VA = "0x89DE9C")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x89DED8", Offset = "0x89DED8", VA = "0x89DED8")]
		public DemoScript()
		{
		}
	}
	[Token(Token = "0x2000598")]
	public class MirrorCameraScript : MonoBehaviour
	{
		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject MirrorObject;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer mirrorRenderer;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material mirrorMaterial;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MirrorScript mirrorScript;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cameraObject;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture reflectionTexture;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Matrix4x4 reflectionMatrix;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int oldReflectionTextureSize;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool renderingMirror;

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x89DF04", Offset = "0x89DF04", VA = "0x89DF04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x89E070", Offset = "0x89E070", VA = "0x89E070")]
		private void CreateRenderTexture()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x89E2F4", Offset = "0x89E2F4", VA = "0x89E2F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x89E2F8", Offset = "0x89E2F8", VA = "0x89E2F8")]
		private void UpdateCameraProperties(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x89E4F4", Offset = "0x89E4F4", VA = "0x89E4F4")]
		internal void RenderMirror()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x89EF70", Offset = "0x89EF70", VA = "0x89EF70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x89EDF4", Offset = "0x89EDF4", VA = "0x89EDF4")]
		private Vector4 CameraSpacePlane(ref Matrix4x4 worldToCameraMatrix, ref Vector3 pos, ref Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x89ECF8", Offset = "0x89ECF8", VA = "0x89ECF8")]
		private void CalculateReflectionMatrix(ref Vector4 plane)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x89F00C", Offset = "0x89F00C", VA = "0x89F00C")]
		private static void CalculateObliqueMatrix(ref Matrix4x4 projection, ref Vector4 clipPlane)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x89F168", Offset = "0x89F168", VA = "0x89F168")]
		private static float Sign(float a)
		{
			return default(float);
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x89F188", Offset = "0x89F188", VA = "0x89F188")]
		public MirrorCameraScript()
		{
		}
	}
	[Token(Token = "0x2000599")]
	public class MirrorReflectionScript : MonoBehaviour
	{
		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MirrorCameraScript childScript;

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x89F190", Offset = "0x89F190", VA = "0x89F190")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x89F2A8", Offset = "0x89F2A8", VA = "0x89F2A8")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x89F2C0", Offset = "0x89F2C0", VA = "0x89F2C0")]
		public MirrorReflectionScript()
		{
		}
	}
	[Token(Token = "0x200059A")]
	public class MirrorScript : MonoBehaviour
	{
		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MaximumPerPixelLights;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TextureSize;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ClipPlaneOffset;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float FarClipPlane;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask ReflectLayers;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool AddFlareLayer;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool NormalIsForward;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float AspectRatio;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool MirrorRecursion;

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x89F2C8", Offset = "0x89F2C8", VA = "0x89F2C8")]
		public MirrorScript()
		{
		}
	}
	[Token(Token = "0x200059B")]
	public class PlayerWealthCalculator : MonoBehaviour
	{
		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ShopItemsController shopItemsController;

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x89F30C", Offset = "0x89F30C", VA = "0x89F30C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x89F310", Offset = "0x89F310", VA = "0x89F310")]
		public float GetPlayerWealth()
		{
			return default(float);
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x89F318", Offset = "0x89F318", VA = "0x89F318")]
		public PlayerWealthCalculator()
		{
		}
	}
	[Token(Token = "0x200059C")]
	public class PresentGiftController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200059D")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<MenuHand> <>9__11_0;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<ParticleSystem> <>9__14_0;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<ParticleSystem> <>9__14_1;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<Renderer> <>9__14_2;

			[Token(Token = "0x6001C65")]
			[Address(RVA = "0x89FF3C", Offset = "0x89FF3C", VA = "0x89FF3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C66")]
			[Address(RVA = "0x89FF44", Offset = "0x89FF44", VA = "0x89FF44")]
			internal void <OnDisable>b__11_0(MenuHand item)
			{
			}

			[Token(Token = "0x6001C67")]
			[Address(RVA = "0x89FF5C", Offset = "0x89FF5C", VA = "0x89FF5C")]
			internal void <PickupGift>b__14_0(ParticleSystem item)
			{
			}

			[Token(Token = "0x6001C68")]
			[Address(RVA = "0x89FF88", Offset = "0x89FF88", VA = "0x89FF88")]
			internal void <PickupGift>b__14_1(ParticleSystem item)
			{
			}

			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x89FFB4", Offset = "0x89FFB4", VA = "0x89FFB4")]
			internal void <PickupGift>b__14_2(Renderer item)
			{
			}
		}

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int goldAmount;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem[] particleSystemsEnabledOnOpening;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem[] particleSystemsDisabledOnOpening;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer[] presentRenderers;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GoldGiftController goldGiftController;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource explosionSound;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool giftHasBeenPicked;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<MenuHand> menuHandsHolding;

		[Token(Token = "0x14000037")]
		public static event Action OnGiftPicked
		{
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0x89F320", Offset = "0x89F320", VA = "0x89F320")]
			add
			{
			}
			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0x89F3FC", Offset = "0x89F3FC", VA = "0x89F3FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x89F4D8", Offset = "0x89F4D8", VA = "0x89F4D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x89F5E0", Offset = "0x89F5E0", VA = "0x89F5E0")]
		private void OnTriggerStay(Collider col)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x89F73C", Offset = "0x89F73C", VA = "0x89F73C")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x89F810", Offset = "0x89F810", VA = "0x89F810")]
		private void PickupGift()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x89FDF8", Offset = "0x89FDF8", VA = "0x89FDF8")]
		public PresentGiftController()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class PresentGiftEnabler : MonoBehaviour
	{
		[Token(Token = "0x4001F80")]
		private const string rewardWasTakenSteamKey = "WasPresentTaken10";

		[Token(Token = "0x4001F81")]
		private const string wasInitializationSuccessfulKey = "WasInitSuc10";

		[Token(Token = "0x4001F82")]
		private const string rewardWasTakenPPEKey = "PresentRewardTaken";

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject presentObject;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerWealthCalculator playerWealthCalculator;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float wealthPresentCoefficient;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int presentGoldConstantValue;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DateTime lastPresentDay;

		[Token(Token = "0x170002C6")]
		public static bool RewardWasTakenPPE
		{
			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0x89FFD0", Offset = "0x89FFD0", VA = "0x89FFD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x8A003C", Offset = "0x8A003C", VA = "0x8A003C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x8A00B0", Offset = "0x8A00B0", VA = "0x8A00B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x8A030C", Offset = "0x8A030C", VA = "0x8A030C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x8A03AC", Offset = "0x8A03AC", VA = "0x8A03AC")]
		public void SetGiftTaken()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x8A03B4", Offset = "0x8A03B4", VA = "0x8A03B4")]
		[ContextMenu("Reset Present")]
		private void ResetPresent()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x8A0200", Offset = "0x8A0200", VA = "0x8A0200")]
		private void SetPresentGold()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x8A0188", Offset = "0x8A0188", VA = "0x8A0188")]
		private bool PlayerIsEligible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x8A0424", Offset = "0x8A0424", VA = "0x8A0424")]
		public PresentGiftEnabler()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public class CatapultLeverController : MonoBehaviour
	{
		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PickableInteracter pickableInteracter;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CatapultController catapultController;

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x8A047C", Offset = "0x8A047C", VA = "0x8A047C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x8A0564", Offset = "0x8A0564", VA = "0x8A0564")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x8A064C", Offset = "0x8A064C", VA = "0x8A064C")]
		private void ShootCatapult(Transform hand)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x8A07D8", Offset = "0x8A07D8", VA = "0x8A07D8")]
		public CatapultLeverController()
		{
		}
	}
	[Token(Token = "0x20005A0")]
	public class DailyRewardController : MonoBehaviour
	{
		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject reward;

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x8A07E0", Offset = "0x8A07E0", VA = "0x8A07E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x8A07E4", Offset = "0x8A07E4", VA = "0x8A07E4")]
		private void ActivateReward()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x8A0810", Offset = "0x8A0810", VA = "0x8A0810")]
		private bool WasDailyRewardTakenToday()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x8A08F4", Offset = "0x8A08F4", VA = "0x8A08F4")]
		public DailyRewardController()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public class ExplosiveBarrelFreezeController : MonoBehaviour
	{
		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FreezeController freezeController;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FrozenEnemyBreakController frozenEnemyBreakController;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ExplosiveBarrelController explosiveBarrelController;

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x8A08FC", Offset = "0x8A08FC", VA = "0x8A08FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x8A09C0", Offset = "0x8A09C0", VA = "0x8A09C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x8A0A4C", Offset = "0x8A0A4C", VA = "0x8A0A4C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x8A09A0", Offset = "0x8A09A0", VA = "0x8A09A0")]
		private void DisableBarrelExploding()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x8A0B8C", Offset = "0x8A0B8C", VA = "0x8A0B8C")]
		public ExplosiveBarrelFreezeController()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public class BowController : MonoBehaviourPun, IPunObservable, IResetable, ISettable
	{
		[Token(Token = "0x4001F8E")]
		private const float distanceFromStringStartPointToBowAnimationTimeMultiplier = 0.75f;

		[Token(Token = "0x4001F8F")]
		private const float minimalBowTensionToShootPC = 0.3f;

		[Token(Token = "0x4001F90")]
		private const float minimalBowTensionToShootMobile = 0.35f;

		[Token(Token = "0x4001F91")]
		private const float arrowVelocityMultiplierPC = 0.75f;

		[Token(Token = "0x4001F92")]
		private const float arrowVelocityMultiplierMobile = 1.5f;

		[Token(Token = "0x4001F93")]
		private const float bowReleaseAnimationSpeed = 10f;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ArrowHandController arrowHandController;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WenklyStudio.ElvenAssassin.PlayerController playerController;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject arrowPrefab;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform handAttachPoint;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform arrowAttachPoint;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform stringStartPoint;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform bowHandGrip;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform arrowHandGrip;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform arrowHandGripOffseted;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform bowParent;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float arrowVelocityMultiplier;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioSource BowStringShotSound;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SpellSelectController spellSelectController;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Animator bowAnimator;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private InputActionReference interactionInput;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion bowParentDefaultLocalRotation;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int distancePart;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float lerpValue;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float autoShootTimer;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool isArrowAttached;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool isHandAttached;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float bowAnimationNormalizedTime;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool canRelase;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		private bool canAutoShoot;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool <IsReleaseAnimationPlaying>k__BackingField;

		[Token(Token = "0x170002C7")]
		public Transform HandAttachPoint
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x8A0F9C", Offset = "0x8A0F9C", VA = "0x8A0F9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x8A0FA4", Offset = "0x8A0FA4", VA = "0x8A0FA4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public Transform ArrowAttachPoint
		{
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x8A0FAC", Offset = "0x8A0FAC", VA = "0x8A0FAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x8A0FB4", Offset = "0x8A0FB4", VA = "0x8A0FB4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public bool IsReleaseAnimationPlaying
		{
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x8A0FBC", Offset = "0x8A0FBC", VA = "0x8A0FBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0x8A0FC4", Offset = "0x8A0FC4", VA = "0x8A0FC4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public bool IsHandAttached
		{
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x8A0FD0", Offset = "0x8A0FD0", VA = "0x8A0FD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x8A0FD8", Offset = "0x8A0FD8", VA = "0x8A0FD8")]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public bool IsArrowAttached
		{
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x8A101C", Offset = "0x8A101C", VA = "0x8A101C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0x8A1024", Offset = "0x8A1024", VA = "0x8A1024")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public float BowAnimationNormalizedTime
		{
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0x8A108C", Offset = "0x8A108C", VA = "0x8A108C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0x8A1094", Offset = "0x8A1094", VA = "0x8A1094")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		private float MinimalBowTensionToShoot
		{
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0x8A10D4", Offset = "0x8A10D4", VA = "0x8A10D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002CE")]
		private float ArrowVelocityMultiplier
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0x8A1140", Offset = "0x8A1140", VA = "0x8A1140")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002CF")]
		private Transform ArrowHandGrip
		{
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x8A11A8", Offset = "0x8A11A8", VA = "0x8A11A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000038")]
		public static event Action<GameObject> OnArrowFire
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x8A0B94", Offset = "0x8A0B94", VA = "0x8A0B94")]
			add
			{
			}
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x8A0C60", Offset = "0x8A0C60", VA = "0x8A0C60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Action OnShoot
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x8A0D2C", Offset = "0x8A0D2C", VA = "0x8A0D2C")]
			add
			{
			}
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x8A0DC8", Offset = "0x8A0DC8", VA = "0x8A0DC8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event Action OnBowStretch
		{
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x8A0E64", Offset = "0x8A0E64", VA = "0x8A0E64")]
			add
			{
			}
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x8A0F00", Offset = "0x8A0F00", VA = "0x8A0F00")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x8A1214", Offset = "0x8A1214", VA = "0x8A1214")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x8A134C", Offset = "0x8A134C", VA = "0x8A134C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x8A14D4", Offset = "0x8A14D4", VA = "0x8A14D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x8A1EEC", Offset = "0x8A1EEC", VA = "0x8A1EEC")]
		public void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x8A1EF8", Offset = "0x8A1EF8", VA = "0x8A1EF8")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x8A1680", Offset = "0x8A1680", VA = "0x8A1680")]
		private void UpdateLoadedBow()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x8A1784", Offset = "0x8A1784", VA = "0x8A1784")]
		private void UpdateArrowReleasing()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x8A295C", Offset = "0x8A295C", VA = "0x8A295C")]
		private void OnInputPerformed(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x8A2A20", Offset = "0x8A2A20", VA = "0x8A2A20")]
		private void OnINputCanceled(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x8A1754", Offset = "0x8A1754", VA = "0x8A1754")]
		private void StartArrowReleasing()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x8A2AE4", Offset = "0x8A2AE4", VA = "0x8A2AE4")]
		private void DetachHand()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x8A2B14", Offset = "0x8A2B14", VA = "0x8A2B14")]
		private bool IsBowTensionedEnoughToReleaseArrow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x8A2114", Offset = "0x8A2114", VA = "0x8A2114")]
		private bool CanShoot()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x8A1718", Offset = "0x8A1718", VA = "0x8A1718")]
		private bool CanReleaseArrow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x8A1F30", Offset = "0x8A1F30", VA = "0x8A1F30")]
		private void UpdateBowRotation()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x8A1698", Offset = "0x8A1698", VA = "0x8A1698")]
		private void UpdateBowSnappingToController()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x8A2040", Offset = "0x8A2040", VA = "0x8A2040")]
		private void UpdateBowTensionValue()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x8A2868", Offset = "0x8A2868", VA = "0x8A2868")]
		private void TriggerHapticPulseWhenShot()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x8A17E8", Offset = "0x8A17E8", VA = "0x8A17E8")]
		private void RumbleControllerInConstPeriodOfDistance(float distfromStringStartPoint)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x8A2B38", Offset = "0x8A2B38", VA = "0x8A2B38")]
		private void ApplyHaptics()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x8A2910", Offset = "0x8A2910", VA = "0x8A2910")]
		private void PlayReleaseAnimation()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x8A2148", Offset = "0x8A2148", VA = "0x8A2148")]
		public void Shoot()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x8A183C", Offset = "0x8A183C", VA = "0x8A183C")]
		public void AutoShoot()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x8A2D94", Offset = "0x8A2D94", VA = "0x8A2D94")]
		private void InstantiateAblitity(GameObject instance, string abilityType)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x8A30C4", Offset = "0x8A30C4", VA = "0x8A30C4")]
		[PunRPC]
		private void AssignAbility(int arrowId, int abilityId)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x8A3164", Offset = "0x8A3164", VA = "0x8A3164")]
		[PunRPC]
		private void ReleaseArrow(int ArrowPhotonViewID, Vector3 Position, Vector3 Rotation, Vector3 loacalscale, Vector3 arrowVelocity)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x8A2C3C", Offset = "0x8A2C3C", VA = "0x8A2C3C")]
		private Vector3 CountArrowStartingVelocity(Vector3 forward, float distFromStringToHand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x8A3378", Offset = "0x8A3378", VA = "0x8A3378")]
		public static void TriggerOnArrowFireEvent(GameObject currentArrow)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x8A33E4", Offset = "0x8A33E4", VA = "0x8A33E4", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x8A148C", Offset = "0x8A148C", VA = "0x8A148C", Slot = "5")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x8A35DC", Offset = "0x8A35DC", VA = "0x8A35DC", Slot = "6")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x8A3608", Offset = "0x8A3608", VA = "0x8A3608")]
		public BowController()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class FastShootingBlocker : MonoBehaviourPun
	{
		[Token(Token = "0x20005A4")]
		private sealed class <BlockShootingCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FastShootingBlocker <>4__this;

			[Token(Token = "0x170002D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CBD")]
				[Address(RVA = "0x8A3994", Offset = "0x8A3994", VA = "0x8A3994", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CBE")]
				[Address(RVA = "0x8A399C", Offset = "0x8A399C", VA = "0x8A399C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0x8A3860", Offset = "0x8A3860", VA = "0x8A3860")]
			[DebuggerHidden]
			public <BlockShootingCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x8A3890", Offset = "0x8A3890", VA = "0x8A3890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0x8A3894", Offset = "0x8A3894", VA = "0x8A3894", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001FB0")]
		private const float minSecondsBetweenShots = 0.25f;

		[Token(Token = "0x4001FB1")]
		private const float hapticForce = 1f;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BowController bowController;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ArrowHandController arrowHandController;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HandsController handsController;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HapticsController.Controller controllerForHaptic;

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x8A3620", Offset = "0x8A3620", VA = "0x8A3620")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x8A3744", Offset = "0x8A3744", VA = "0x8A3744")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x8A37CC", Offset = "0x8A37CC", VA = "0x8A37CC")]
		private void BlockShooting()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x8A37EC", Offset = "0x8A37EC", VA = "0x8A37EC")]
		private IEnumerator BlockShootingCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x8A3888", Offset = "0x8A3888", VA = "0x8A3888")]
		public FastShootingBlocker()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class SpellSelectController : MonoBehaviourPun
	{
		[Token(Token = "0x4001FB9")]
		private const float minTouchpadDeviation = 0.3f;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int spellIndex;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BowController bowController;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpellsGUI spellsGUI;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TouchpadSelectController touchpadSelectController;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputActionReference interactionInput;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isVisible;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int? activeSpellIndex;

		[Token(Token = "0x170002D2")]
		public int? ActiveSpellIndex
		{
			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0x8A39A4", Offset = "0x8A39A4", VA = "0x8A39A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0x8A39AC", Offset = "0x8A39AC", VA = "0x8A39AC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public SpellInGameSlot ActiveSpellInSlot
		{
			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0x8A39B4", Offset = "0x8A39B4", VA = "0x8A39B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public string GetActiveSpellName
		{
			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0x8A2CD4", Offset = "0x8A2CD4", VA = "0x8A2CD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x8A3A50", Offset = "0x8A3A50", VA = "0x8A3A50")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x8A3AB0", Offset = "0x8A3AB0", VA = "0x8A3AB0")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x8A2CB8", Offset = "0x8A2CB8", VA = "0x8A2CB8")]
		public void SetSpellOnCooldown()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x8A3A88", Offset = "0x8A3A88", VA = "0x8A3A88")]
		private void HandleSpellSelection()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x8A3AF0", Offset = "0x8A3AF0", VA = "0x8A3AF0")]
		private bool SelectSpellAndSpellCanBeSelected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x8A3C50", Offset = "0x8A3C50", VA = "0x8A3C50")]
		private void SelectActiveSpell()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x8A3D24", Offset = "0x8A3D24", VA = "0x8A3D24")]
		private void SelectActiveSpell(int selectedIndex)
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x8A3DE4", Offset = "0x8A3DE4", VA = "0x8A3DE4")]
		private void ShowGUI(int selectedIndex)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x8A3CDC", Offset = "0x8A3CDC", VA = "0x8A3CDC")]
		private void RemoveActiveSpell()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x8A3E24", Offset = "0x8A3E24", VA = "0x8A3E24")]
		private void TryToRefreshSpellGUI(int selectedIndex)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x8A39E0", Offset = "0x8A39E0", VA = "0x8A39E0")]
		private SlotPostion GetSlotPositionByIndex(int? index)
		{
			return default(SlotPostion);
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x8A3ECC", Offset = "0x8A3ECC", VA = "0x8A3ECC")]
		public SpellSelectController()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class GesturesInputController : MonoBehaviour
	{
		[Token(Token = "0x20005A7")]
		public enum TouchpadButton
		{
			[Token(Token = "0x4001FC9")]
			Up,
			[Token(Token = "0x4001FCA")]
			Down,
			[Token(Token = "0x4001FCB")]
			Left,
			[Token(Token = "0x4001FCC")]
			Right
		}

		[Token(Token = "0x20005A8")]
		private sealed class <DisappearGestureWhenValidPressUp>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitTime;

			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GesturesInputController <>4__this;

			[Token(Token = "0x170002D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CE1")]
				[Address(RVA = "0x8A4618", Offset = "0x8A4618", VA = "0x8A4618", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CE2")]
				[Address(RVA = "0x8A4620", Offset = "0x8A4620", VA = "0x8A4620", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x8A4430", Offset = "0x8A4430", VA = "0x8A4430")]
			[DebuggerHidden]
			public <DisappearGestureWhenValidPressUp>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0x8A4530", Offset = "0x8A4530", VA = "0x8A4530", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0x8A4534", Offset = "0x8A4534", VA = "0x8A4534", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HandSide handSide;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputActionReference enableGesturesInput;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputActionReference chooseGestureInput;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gesture.GestureType gestureToReturnTo;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isDown;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Gesture.GestureType currentGesture;

		[Token(Token = "0x1400003B")]
		public event Action<HandSide, Gesture.GestureType> OnSetGestureInputted
		{
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0x8A3ED4", Offset = "0x8A3ED4", VA = "0x8A3ED4")]
			add
			{
			}
			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0x8A3F84", Offset = "0x8A3F84", VA = "0x8A3F84")]
			remove
			{
			}
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x8A4034", Offset = "0x8A4034", VA = "0x8A4034")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x8A413C", Offset = "0x8A413C", VA = "0x8A413C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x8A4244", Offset = "0x8A4244", VA = "0x8A4244")]
		private void EnableGestures(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x8A4250", Offset = "0x8A4250", VA = "0x8A4250")]
		private void DisableGestures(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x8A4300", Offset = "0x8A4300", VA = "0x8A4300")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x8A427C", Offset = "0x8A427C", VA = "0x8A427C")]
		private IEnumerator DisappearGestureWhenValidPressUp(float waitTime)
		{
			return null;
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x8A4458", Offset = "0x8A4458", VA = "0x8A4458")]
		private Vector2 GetAxisFromTouchpad()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x8A43E4", Offset = "0x8A43E4", VA = "0x8A43E4")]
		private Gesture.GestureType GetGestureSelectedWithTouchpad()
		{
			return default(Gesture.GestureType);
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x8A44F0", Offset = "0x8A44F0", VA = "0x8A44F0")]
		private Gesture.GestureType GetGestureTypeByTouchpadButton(TouchpadButton touchpadButton)
		{
			return default(Gesture.GestureType);
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x8A44B4", Offset = "0x8A44B4", VA = "0x8A44B4")]
		private TouchpadButton GetTouchpadButton(Vector2 touchPosition)
		{
			return default(TouchpadButton);
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x8A4510", Offset = "0x8A4510", VA = "0x8A4510")]
		public void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x8A451C", Offset = "0x8A451C", VA = "0x8A451C")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x8A4528", Offset = "0x8A4528", VA = "0x8A4528")]
		public GesturesInputController()
		{
		}
	}
	[Token(Token = "0x20005A9")]
	public class SalvaHandleController : MonoBehaviourPun, IPunObservable, IWithIcon
	{
		[Token(Token = "0x20005AA")]
		private sealed class <WaitToDisplayText>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SalvaHandleController <>4__this;

			[Token(Token = "0x170002DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CFE")]
				[Address(RVA = "0x8A5E28", Offset = "0x8A5E28", VA = "0x8A5E28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CFF")]
				[Address(RVA = "0x8A5E30", Offset = "0x8A5E30", VA = "0x8A5E30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0x8A5748", Offset = "0x8A5748", VA = "0x8A5748")]
			[DebuggerHidden]
			public <WaitToDisplayText>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x8A5D58", Offset = "0x8A5D58", VA = "0x8A5D58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x8A5D5C", Offset = "0x8A5D5C", VA = "0x8A5D5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PickableInteracter pickableInteracter;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PickableItemHandleController pickableItemHandleController;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<CatapultController> catapults;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject aimArea;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpecialSoundEffects soundEffect;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MicrophoneController microphoneController;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float delayTimeAfterPick;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isInCorrectPosition;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool wasUsed;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<SalvaHandleController> OnHornTaken;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<SalvaHandleController> OnHornCloseToHead;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<SalvaHandleController> OnSalvaClose;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<SalvaHandleController> OnHornWasUsed;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<SalvaHandleController> OnMicrophoneNotConnected;

		[Token(Token = "0x170002D7")]
		private WaitForSeconds delayAfterFirstPick
		{
			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0x8A4628", Offset = "0x8A4628", VA = "0x8A4628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		public bool WasUsed
		{
			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0x8A4698", Offset = "0x8A4698", VA = "0x8A4698")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0x8A46A0", Offset = "0x8A46A0", VA = "0x8A46A0")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		private bool IsInCorrectPosition
		{
			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0x8A4830", Offset = "0x8A4830", VA = "0x8A4830")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0x8A4838", Offset = "0x8A4838", VA = "0x8A4838")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public int TakerID
		{
			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0x89D1FC", Offset = "0x89D1FC", VA = "0x89D1FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x8A48C4", Offset = "0x8A48C4", VA = "0x8A48C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x8A4DE8", Offset = "0x8A4DE8", VA = "0x8A4DE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x8A530C", Offset = "0x8A530C", VA = "0x8A530C")]
		private void TryUseSalva(Transform hand)
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x8A545C", Offset = "0x8A545C", VA = "0x8A545C")]
		private void SetHornWasTaken()
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x8A5584", Offset = "0x8A5584", VA = "0x8A5584")]
		private void PutTheHornAway()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x8A565C", Offset = "0x8A565C", VA = "0x8A565C")]
		[PunRPC]
		private void SendWasUsedtoMaster()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x8A56A8", Offset = "0x8A56A8", VA = "0x8A56A8")]
		private void WaveStart()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x8A4764", Offset = "0x8A4764", VA = "0x8A4764")]
		private void SetupSalva(bool shouldWait)
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x8A5510", Offset = "0x8A5510", VA = "0x8A5510")]
		private IEnumerator WaitToDisplayText()
		{
			return null;
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x8A56B0", Offset = "0x8A56B0", VA = "0x8A56B0")]
		private void SalvaSetter()
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x8A5770", Offset = "0x8A5770", VA = "0x8A5770")]
		private void SetHornIsCloseToHead()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x8A584C", Offset = "0x8A584C", VA = "0x8A584C")]
		private void SetHornIsNotCloseToHead()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x8A5928", Offset = "0x8A5928", VA = "0x8A5928")]
		private void StartSalva()
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x8A5C0C", Offset = "0x8A5C0C", VA = "0x8A5C0C")]
		private void TryActivateSalva(SalvaPlayerMicrophoneController salvaPlayerMicrophoneController)
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x8A5310", Offset = "0x8A5310", VA = "0x8A5310")]
		private void TryShoot()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x8A5C4C", Offset = "0x8A5C4C", VA = "0x8A5C4C", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x8A5D14", Offset = "0x8A5D14", VA = "0x8A5D14", Slot = "5")]
		public bool ShouldDisplayIcon()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x8A5D48", Offset = "0x8A5D48", VA = "0x8A5D48")]
		public SalvaHandleController()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class GoldGiftController : MonoBehaviour
	{
		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int goldAmount;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera playerCamera;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject floatingText;

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x89FBB4", Offset = "0x89FBB4", VA = "0x89FBB4")]
		public void ShowAmountOfGold()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x89FB50", Offset = "0x89FB50", VA = "0x89FB50")]
		public void AddGold()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x8A5E38", Offset = "0x8A5E38", VA = "0x8A5E38")]
		public GoldGiftController()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public class PickableObject : MonoBehaviour
	{
		[Token(Token = "0x4001FE5")]
		private const float force = 20f;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PickableInteracter pickableInteracter;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Rigidbody myRigidbody;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform avatarParentTransform;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform holdingHand;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 pointToAddForceAt;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] translationVectors;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int translatonVectorIndex;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isTaken;

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x8A5E48", Offset = "0x8A5E48", VA = "0x8A5E48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x8A5FD0", Offset = "0x8A5FD0", VA = "0x8A5FD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x8A6004", Offset = "0x8A6004", VA = "0x8A6004")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x8A618C", Offset = "0x8A618C", VA = "0x8A618C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x8A624C", Offset = "0x8A624C", VA = "0x8A624C")]
		public void PickUp(Transform hand)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x8A62C8", Offset = "0x8A62C8", VA = "0x8A62C8")]
		public void DropDown(Transform hand)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x8A6190", Offset = "0x8A6190", VA = "0x8A6190")]
		private void AddVectorToTranslationArray()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x8A63B0", Offset = "0x8A63B0", VA = "0x8A63B0")]
		private Vector3 AverageThrowingForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x8A6464", Offset = "0x8A6464", VA = "0x8A6464")]
		[ContextMenu("GetPickableInteracter")]
		private void GetPickableInteracter()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x8A64BC", Offset = "0x8A64BC", VA = "0x8A64BC")]
		public PickableObject()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public class SoundPickableController : MonoBehaviour
	{
		[Token(Token = "0x20005AE")]
		public enum ObjectType
		{
			[Token(Token = "0x4001FFB")]
			metalDish,
			[Token(Token = "0x4001FFC")]
			wood,
			[Token(Token = "0x4001FFD")]
			papyrus,
			[Token(Token = "0x4001FFE")]
			book,
			[Token(Token = "0x4001FFF")]
			marble,
			[Token(Token = "0x4002000")]
			wall,
			[Token(Token = "0x4002001")]
			metalHelmet,
			[Token(Token = "0x4002002")]
			candle
		}

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource hitSound;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] hitClipsMetalDish;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] hitClipsWood;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] hitClipsPapyrus;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip[] hitClipsBook;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip[] hitClipsMarble;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] hitClipsWall;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip[] hitClipsMetalHelmet;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip[] hitClipsCandle;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ObjectType type;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int numberRandom;

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x8A6520", Offset = "0x8A6520", VA = "0x8A6520")]
		private void SoundCreateDelete(AudioClip clip, float iVolume)
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x8A6620", Offset = "0x8A6620", VA = "0x8A6620")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x8A6A20", Offset = "0x8A6A20", VA = "0x8A6A20")]
		public SoundPickableController()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	public class SackWithDailyReward : MonoBehaviour
	{
		[Token(Token = "0x4002003")]
		private const string lastDayRewardWasTakenKey = "DailyRewardTime";

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PickableInteracter pickableInteracter;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GoldGiftController goldGiftController;

		[Token(Token = "0x170002DD")]
		public static int LastDayRewardWasTaken
		{
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x8A0888", Offset = "0x8A0888", VA = "0x8A0888")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x8A6A28", Offset = "0x8A6A28", VA = "0x8A6A28")]
			set
			{
			}
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x8A6A9C", Offset = "0x8A6A9C", VA = "0x8A6A9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x8A6B84", Offset = "0x8A6B84", VA = "0x8A6B84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x8A6C6C", Offset = "0x8A6C6C", VA = "0x8A6C6C")]
		public void PickUp(Transform hand)
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x8A6D1C", Offset = "0x8A6D1C", VA = "0x8A6D1C")]
		public SackWithDailyReward()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	public class ViewPointPerformanceTests : MonoBehaviour
	{
		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isShootingEnabled;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int viewPointId;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int firstViewPointId;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int lastViewPointId;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float xAngleOffset;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 handBasePosition;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 baseRotation;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion handBaseRotation;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion parentToFreezeBaseRotation;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform rightControllerPfBaseParent;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform bowParentBaseParent;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform cameraVRTransform;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform trackingSpace;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform viewPointSetter;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform bowPositionSetter;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform bowParent;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform rightControllerPf;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform arrowHandGrip;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private List<CapsuleCollider> bodyColliders;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private BoxCollider headCollider;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ArrowHandController arrowHandController;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private BowController bowController;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private List<Transform> elvenTownViewPoints;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Vector3 bowCustomRotation;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private Vector3 secondHandPositionOffset;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Vector3 arrowHandGripBaseScale;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private float timeBetweenShootingArrow;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private InputActionReference nextViewPointInput;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private InputActionReference previousViewPointInput;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private InputActionReference turnOffViewPointInput;

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x8A6D24", Offset = "0x8A6D24", VA = "0x8A6D24")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x8A6DB4", Offset = "0x8A6DB4", VA = "0x8A6DB4")]
		public void TurnOnViewPointsTests(bool isShooting)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x8A7154", Offset = "0x8A7154", VA = "0x8A7154")]
		public void TurnOffViewPointsTests()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x8A73C0", Offset = "0x8A73C0", VA = "0x8A73C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x8A7528", Offset = "0x8A7528", VA = "0x8A7528")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x8A7690", Offset = "0x8A7690", VA = "0x8A7690")]
		private void PreviousViewPoint(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x8A76C8", Offset = "0x8A76C8", VA = "0x8A76C8")]
		private void NextViewPoint(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x8A76D8", Offset = "0x8A76D8", VA = "0x8A76D8")]
		private void TurnOffViewPoints(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x8A76A0", Offset = "0x8A76A0", VA = "0x8A76A0")]
		private void ChooseNewViewPoint()
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x8A6D28", Offset = "0x8A6D28", VA = "0x8A6D28")]
		private void FreezeCamera()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x8A70AC", Offset = "0x8A70AC", VA = "0x8A70AC")]
		private void SetViewPoint()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x8A6DEC", Offset = "0x8A6DEC", VA = "0x8A6DEC")]
		private void PrepareGameObjectsForViewPointTests(bool isShooting)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x8A7174", Offset = "0x8A7174", VA = "0x8A7174")]
		private void ResetGameObjects()
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x8A76F8", Offset = "0x8A76F8", VA = "0x8A76F8")]
		private void SetActiveColliders(bool isActive)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x8A7868", Offset = "0x8A7868", VA = "0x8A7868")]
		public ViewPointPerformanceTests()
		{
		}
	}
}
namespace WenklyStudio.Physics
{
	[Token(Token = "0x20005B1")]
	public class StayOnTerrainController : MonoBehaviour
	{
		[Token(Token = "0x4002024")]
		private const float rayMaxDistance = 10f;

		[Token(Token = "0x4002025")]
		private const float timeScaleToUpdatePos = 1f;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 raycastOriginOffset;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly Vector3 raycastDirection;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float heightAboveTerrain;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float speedOfAdjustingHeight;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LayerMask terrainLayerMask;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit raycastHit;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float targetHeight;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool hasBeenHeightInitialized;

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x8A7884", Offset = "0x8A7884", VA = "0x8A7884")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x8A7974", Offset = "0x8A7974", VA = "0x8A7974")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x8A7AC8", Offset = "0x8A7AC8", VA = "0x8A7AC8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x8A7B88", Offset = "0x8A7B88", VA = "0x8A7B88")]
		public StayOnTerrainController()
		{
		}
	}
}
namespace WenklyStudio.ElvenAssassin
{
	[Token(Token = "0x20005B2")]
	public class IceRevive : MonoBehaviourPun, IAbility, IResetable
	{
		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AbilityData abilityData;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AbilityLevelController abilityLelvelController;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem spellParticleSystem;

		[Token(Token = "0x170002DE")]
		public AbilityLevelController AbilityLevelController
		{
			[Token(Token = "0x6001D29")]
			[Address(RVA = "0x8A7C2C", Offset = "0x8A7C2C", VA = "0x8A7C2C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DF")]
		public AbilityData AbilityData
		{
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0x8A7C34", Offset = "0x8A7C34", VA = "0x8A7C34", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x8A7C3C", Offset = "0x8A7C3C", VA = "0x8A7C3C", Slot = "6")]
		public void Initialize(GameObject arrowObject)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x8A7C40", Offset = "0x8A7C40", VA = "0x8A7C40")]
		public void RevivePlayer(Collision collision)
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x8A7E60", Offset = "0x8A7E60", VA = "0x8A7E60")]
		[PunRPC]
		private void RpcTryRevivePlayer()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x8A7F5C", Offset = "0x8A7F5C", VA = "0x8A7F5C", Slot = "9")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x8A7F78", Offset = "0x8A7F78", VA = "0x8A7F78", Slot = "7")]
		public void InvokeAbility(Collision collision)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x8A7F7C", Offset = "0x8A7F7C", VA = "0x8A7F7C", Slot = "8")]
		public void SetQualityReference(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x8A7F84", Offset = "0x8A7F84", VA = "0x8A7F84")]
		public IceRevive()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public class SalvaTextController : MonoBehaviourPun
	{
		[Token(Token = "0x4002031")]
		private const float lifeTime = 0f;

		[Token(Token = "0x4002032")]
		private const float distance = 1.3f;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatingTextController floatingTextController;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject floatingText;

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x8A7F8C", Offset = "0x8A7F8C", VA = "0x8A7F8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x8A8384", Offset = "0x8A8384", VA = "0x8A8384")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x8A877C", Offset = "0x8A877C", VA = "0x8A877C")]
		private void SetHornWasUsedTextActive(SalvaHandleController salvaHandsController)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x8A88E0", Offset = "0x8A88E0", VA = "0x8A88E0")]
		private void SetHeadTextActive(SalvaHandleController salvaHandsController)
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x8A89BC", Offset = "0x8A89BC", VA = "0x8A89BC")]
		private void SetBlowTextActive(SalvaHandleController salvaHandsController)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x8A8B18", Offset = "0x8A8B18", VA = "0x8A8B18")]
		private void SetMicrophoneNotConnectedTextActvation(SalvaHandleController salvaHandsController)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x8A8BF4", Offset = "0x8A8BF4", VA = "0x8A8BF4")]
		private void SetAllDeactivated(SalvaHandleController salvaHandsController)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x8A8858", Offset = "0x8A8858", VA = "0x8A8858")]
		private void CloseOld()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x8A8BF8", Offset = "0x8A8BF8", VA = "0x8A8BF8")]
		public SalvaTextController()
		{
		}
	}
	[Token(Token = "0x20005B4")]
	public class ArrowPlayerHitController : MonoBehaviourPun
	{
		[Token(Token = "0x20005B5")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<PlayerController> list;

			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x8A959C", Offset = "0x8A959C", VA = "0x8A959C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001D44")]
			[Address(RVA = "0x8A95A4", Offset = "0x8A95A4", VA = "0x8A95A4")]
			internal void <TryToKillPlayer>b__0(PlayerControllerCore x)
			{
			}
		}

		[Token(Token = "0x4002035")]
		private const float hidingOffset = 1000f;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CollisionEvents arrowCollisionEvents;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool shouldKillPlayer;

		[Token(Token = "0x1400003C")]
		public static event Action<PlayerController, PlayerController> OnArrowHitPlayer
		{
			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0x8A8C00", Offset = "0x8A8C00", VA = "0x8A8C00")]
			add
			{
			}
			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0x8A8CCC", Offset = "0x8A8CCC", VA = "0x8A8CCC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x8A8D98", Offset = "0x8A8D98", VA = "0x8A8D98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x8A8E50", Offset = "0x8A8E50", VA = "0x8A8E50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x8A8F08", Offset = "0x8A8F08", VA = "0x8A8F08")]
		private void TryToKillPlayer(Collision collision)
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x8A938C", Offset = "0x8A938C", VA = "0x8A938C")]
		private void HideArrow()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x8A9444", Offset = "0x8A9444", VA = "0x8A9444")]
		private void TryToAttachArrowToPlayer(Collision collision)
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x8A9594", Offset = "0x8A9594", VA = "0x8A9594")]
		public ArrowPlayerHitController()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public class EnemyArrowPlayerHitController : MonoBehaviourPun, IResetable, IPunObservable
	{
		[Token(Token = "0x400203A")]
		private const string KillMessage = "You were killed by Orc Archer";

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CollisionEvents collisionEvents;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject arrow;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody arrowRigidbody;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerKillInfo playerKillInfo;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <EnemyPosition>k__BackingField;

		[Token(Token = "0x170002E0")]
		public Vector3 EnemyPosition
		{
			[Token(Token = "0x6001D45")]
			[Address(RVA = "0x8A96A0", Offset = "0x8A96A0", VA = "0x8A96A0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0x8A96AC", Offset = "0x8A96AC", VA = "0x8A96AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x8A96B8", Offset = "0x8A96B8", VA = "0x8A96B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x8A9744", Offset = "0x8A9744", VA = "0x8A9744")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x8A97D0", Offset = "0x8A97D0", VA = "0x8A97D0")]
		private void TryKillPlayer(Collider collider)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x8A9A38", Offset = "0x8A9A38", VA = "0x8A9A38", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x8A9A58", Offset = "0x8A9A58", VA = "0x8A9A58", Slot = "5")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x8A9B24", Offset = "0x8A9B24", VA = "0x8A9B24")]
		public EnemyArrowPlayerHitController()
		{
		}
	}
	[Token(Token = "0x20005B7")]
	public class CannonController : MonoBehaviourPun, IWithIcon
	{
		[Token(Token = "0x20005B8")]
		private sealed class <ShotHitTargetCoroutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CannonController <>4__this;

			[Token(Token = "0x170002E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D5D")]
				[Address(RVA = "0x8AA77C", Offset = "0x8AA77C", VA = "0x8AA77C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D5E")]
				[Address(RVA = "0x8AA784", Offset = "0x8AA784", VA = "0x8AA784", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x8AA2B4", Offset = "0x8AA2B4", VA = "0x8AA2B4")]
			[DebuggerHidden]
			public <ShotHitTargetCoroutine>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x8AA548", Offset = "0x8AA548", VA = "0x8AA548", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0x8AA54C", Offset = "0x8AA54C", VA = "0x8AA54C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002040")]
		private const string fireTag = "Fire";

		[Token(Token = "0x4002041")]
		private const string cannonFireAnimatioName = "CannonFireAnim";

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PickableItemHandleController torchHandle;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject CannonObject;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationClip CannonFireAnim;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem CannonMuzzleFlash;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Light MuzzleFlashLight;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ParticleSystem SparkParticles;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem SmokeParticles;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject FuseObject;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject FuseCentre;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ParticleSystem FuseSmokeParticles;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject FuseSmokeParticlesNode;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Light FuseLight;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioSource CannonFireAudio;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioSource BurningFuseAudio;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CannonShotController cannonShot;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject[] grapeShots;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float timeFromShotToHit;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float offset;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float fuselightintensity;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float explodeset;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float explodehalt;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float cannonfired;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float fadeStart;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float fadeEnd;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float fadeTime;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float t;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool shot;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float fuseLit;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool isFusing;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool finishedFusing;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int shooterID;

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x8A9BC0", Offset = "0x8A9BC0", VA = "0x8A9BC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x8A9BE0", Offset = "0x8A9BE0", VA = "0x8A9BE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x8A9F80", Offset = "0x8A9F80", VA = "0x8A9F80")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x8A9D84", Offset = "0x8A9D84", VA = "0x8A9D84")]
		public void Fuse()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x8AA240", Offset = "0x8AA240", VA = "0x8AA240")]
		public IEnumerator ShotHitTargetCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x8AA2DC", Offset = "0x8AA2DC", VA = "0x8AA2DC")]
		public void FadeLight()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x8AA3B0", Offset = "0x8AA3B0", VA = "0x8AA3B0")]
		public void EndCannonShot()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x8A9E70", Offset = "0x8A9E70", VA = "0x8A9E70")]
		private void FireCannon()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x8AA0D4", Offset = "0x8AA0D4", VA = "0x8AA0D4")]
		private bool AreShootConditionMet(Collider other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x8AA4D0", Offset = "0x8AA4D0", VA = "0x8AA4D0")]
		[PunRPC]
		private void RpcSetFire(int shooterID)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x8AA4EC", Offset = "0x8AA4EC", VA = "0x8AA4EC")]
		public void SetReferences(GameObject[] _grapeShots)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x8AA4F4", Offset = "0x8AA4F4", VA = "0x8AA4F4", Slot = "4")]
		public bool ShouldDisplayIcon()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x8AA518", Offset = "0x8AA518", VA = "0x8AA518")]
		public CannonController()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public class DeathMatchFloatingTextManager : MonoBehaviourPun
	{
		[Token(Token = "0x20005BA")]
		private sealed class <AddColorToText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400206C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathMatchFloatingTextManager <>4__this;

			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string playerNick;

			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int playerColorIndex;

			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string infoText;

			[Token(Token = "0x170002E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D6B")]
				[Address(RVA = "0x8AB1CC", Offset = "0x8AB1CC", VA = "0x8AB1CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D6C")]
				[Address(RVA = "0x8AB1D4", Offset = "0x8AB1D4", VA = "0x8AB1D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D68")]
			[Address(RVA = "0x8AA9D0", Offset = "0x8AA9D0", VA = "0x8AA9D0")]
			[DebuggerHidden]
			public <AddColorToText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001D69")]
			[Address(RVA = "0x8AB054", Offset = "0x8AB054", VA = "0x8AB054", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0x8AB058", Offset = "0x8AB058", VA = "0x8AB058", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005BB")]
		private sealed class <AddColorToText>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathMatchFloatingTextManager <>4__this;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string firstplayerNick;

			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int firstPlayerColorIndex;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string secondPlayerNick;

			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int secondPlayerColorIndex;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string infoText;

			[Token(Token = "0x170002E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D70")]
				[Address(RVA = "0x8AB374", Offset = "0x8AB374", VA = "0x8AB374", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D71")]
				[Address(RVA = "0x8AB37C", Offset = "0x8AB37C", VA = "0x8AB37C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0x8AAAD0", Offset = "0x8AAAD0", VA = "0x8AAAD0")]
			[DebuggerHidden]
			public <AddColorToText>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0x8AB1DC", Offset = "0x8AB1DC", VA = "0x8AB1DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0x8AB1E0", Offset = "0x8AB1E0", VA = "0x8AB1E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005BC")]
		private sealed class <ShowKillStreakMessage>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400207A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathMatchFloatingTextManager <>4__this;

			[Token(Token = "0x400207B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string killer;

			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isOver;

			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int killCount;

			[Token(Token = "0x170002E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D75")]
				[Address(RVA = "0x8AB590", Offset = "0x8AB590", VA = "0x8AB590", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D76")]
				[Address(RVA = "0x8AB598", Offset = "0x8AB598", VA = "0x8AB598", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0x8AB01C", Offset = "0x8AB01C", VA = "0x8AB01C")]
			[DebuggerHidden]
			public <ShowKillStreakMessage>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0x8AB384", Offset = "0x8AB384", VA = "0x8AB384", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D74")]
			[Address(RVA = "0x8AB388", Offset = "0x8AB388", VA = "0x8AB388", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002064")]
		private const float killMessageTime = 2f;

		[Token(Token = "0x4002065")]
		private const float distanceFromPlayer = 2f;

		[Token(Token = "0x4002066")]
		private const float textDelay = 1.7f;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatingTextController floatingTextController;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int queuedTextsCount;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timeLastText;

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x8AA78C", Offset = "0x8AA78C", VA = "0x8AA78C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x8AA85C", Offset = "0x8AA85C", VA = "0x8AA85C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x8AA91C", Offset = "0x8AA91C", VA = "0x8AA91C")]
		public IEnumerator AddColorToText(string infoText, int playerColorIndex, string playerNick)
		{
			return null;
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x8AA9F8", Offset = "0x8AA9F8", VA = "0x8AA9F8")]
		public IEnumerator AddColorToText(string infoText, int firstPlayerColorIndex, int secondPlayerColorIndex, string firstplayerNick, string secondPlayerNick)
		{
			return null;
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x8AAAF8", Offset = "0x8AAAF8", VA = "0x8AAAF8")]
		private void KillStreakAnnounce(PlayerControllerCore killer, int killcount)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x8AAD20", Offset = "0x8AAD20", VA = "0x8AAD20")]
		private void KillStreakOverAnnounce(PlayerControllerCore killer, int killcount)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x8AAF4C", Offset = "0x8AAF4C", VA = "0x8AAF4C")]
		[PunRPC]
		private void RPCKillStreakAnnounce(string killer, int killerColorID, int killCount, bool isOver)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x8AAF70", Offset = "0x8AAF70", VA = "0x8AAF70")]
		private IEnumerator ShowKillStreakMessage(string killer, int killerColorID, int killCount, bool isOver)
		{
			return null;
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x8AB044", Offset = "0x8AB044", VA = "0x8AB044")]
		public DeathMatchFloatingTextManager()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public class DeathMatchKillsController : MonoBehaviourPun
	{
		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DeathMatchFloatingTextManager deathMatchFloatingTextManager;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerKillInfo playerKillInfo;

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x8AB5A0", Offset = "0x8AB5A0", VA = "0x8AB5A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x8AB620", Offset = "0x8AB620", VA = "0x8AB620")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x8AB6A0", Offset = "0x8AB6A0", VA = "0x8AB6A0")]
		private void KillPlayer(PlayerControllerCore victim, PlayerControllerCore killer)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x8ABA08", Offset = "0x8ABA08", VA = "0x8ABA08")]
		[PunRPC]
		private void RpcPlayerKill(string victimName, int victimColorIndex)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x8AB8FC", Offset = "0x8AB8FC", VA = "0x8AB8FC")]
		[PunRPC]
		private void RpcPlayerDie(string killerName, int killerColorIndex)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x8ABB10", Offset = "0x8ABB10", VA = "0x8ABB10")]
		public DeathMatchKillsController()
		{
		}
	}
	[Token(Token = "0x20005BE")]
	public class DeathMatchMiniScoreboard : MonoBehaviour
	{
		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionReference leftHandInteractionInput;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputActionReference rightHandInteractionInput;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DeathMatchScoreboard miniScoreboard;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DeathMatchScoreboard miniScoreboardLeftHandedOculus;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text timeLeftText;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text leftHandedTimeLeftText;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool validScore;

		[Token(Token = "0x170002E9")]
		private InputActionReference InteractionInput
		{
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0x8ABB8C", Offset = "0x8ABB8C", VA = "0x8ABB8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		private DeathMatchScoreboard MiniScoreboard
		{
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0x8ABC2C", Offset = "0x8ABC2C", VA = "0x8ABC2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x8ABCCC", Offset = "0x8ABCCC", VA = "0x8ABCCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x8ABD4C", Offset = "0x8ABD4C", VA = "0x8ABD4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x8ABDCC", Offset = "0x8ABDCC", VA = "0x8ABDCC")]
		private void UpdateTimeLeftText(float time)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x8ABEAC", Offset = "0x8ABEAC", VA = "0x8ABEAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x8AC054", Offset = "0x8AC054", VA = "0x8AC054")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x8AC1B8", Offset = "0x8AC1B8", VA = "0x8AC1B8")]
		private void EnableScoreboardState(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x8AC264", Offset = "0x8AC264", VA = "0x8AC264")]
		private void DisableScoreboardState(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x8AC1C0", Offset = "0x8AC1C0", VA = "0x8AC1C0")]
		private void UpdateScoreboardState(bool active)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x8AC26C", Offset = "0x8AC26C", VA = "0x8AC26C")]
		private void InvalidateScores()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x8AC274", Offset = "0x8AC274", VA = "0x8AC274")]
		public void ScoresValid(bool areThey)
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x8AC280", Offset = "0x8AC280", VA = "0x8AC280")]
		public DeathMatchMiniScoreboard()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public class DeathMatchPlayerSpawnController : MonoBehaviourPun
	{
		[Token(Token = "0x20005C0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DeathMatchPlayerSpawnController <>4__this;

			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<TeleportCollider> platformsWithPlayers;

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x8ACA00", Offset = "0x8ACA00", VA = "0x8ACA00")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001D96")]
			[Address(RVA = "0x8ACB88", Offset = "0x8ACB88", VA = "0x8ACB88")]
			internal int <GetAppropriateTeleportColliderForPlayer>b__0(TeleportCollider x, TeleportCollider y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002087")]
		private const int numberOfPlatformsForRandomization = 3;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool shouldRespawn;

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x8AC288", Offset = "0x8AC288", VA = "0x8AC288")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x8AC3C0", Offset = "0x8AC3C0", VA = "0x8AC3C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x8AC4F8", Offset = "0x8AC4F8", VA = "0x8AC4F8")]
		private void OnGameStarted()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x8AC658", Offset = "0x8AC658", VA = "0x8AC658")]
		private void OnDeathEnd()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x8AC528", Offset = "0x8AC528", VA = "0x8AC528")]
		private void SpawnPlayerOnNetwork(PlayerControllerCore playerController)
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x8AC79C", Offset = "0x8AC79C", VA = "0x8AC79C")]
		private void DisableRespawn()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x8AC7A4", Offset = "0x8AC7A4", VA = "0x8AC7A4")]
		[PunRPC]
		private void RpcRespawnPlayerOnMaster(int playerActorNumber)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x8AC7E4", Offset = "0x8AC7E4", VA = "0x8AC7E4")]
		[PunRPC]
		private void RpcSpawnPlayer(int playerActorNumber)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x8AC848", Offset = "0x8AC848", VA = "0x8AC848")]
		private TeleportCollider GetAppropriateTeleportColliderForPlayer(PlayerControllerCore playerController)
		{
			return null;
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x8ACA08", Offset = "0x8ACA08", VA = "0x8ACA08")]
		private float CalculateSumOfDistancesFromPlatformsWithPlayers(TeleportCollider sourcePlatform, List<TeleportCollider> platformsWithPlayers)
		{
			return default(float);
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x8ACB78", Offset = "0x8ACB78", VA = "0x8ACB78")]
		public DeathMatchPlayerSpawnController()
		{
		}
	}
	[Token(Token = "0x20005C1")]
	public class DeathMatchScoreboard : Scoreboard
	{
		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScoreboardEntryDeathMatch[] scoreboardEntries;

		[Token(Token = "0x170002EB")]
		private Action<PlayerControllerCore> RefreshScoreboardOnChangedPlayersList
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x8ACBE8", Offset = "0x8ACBE8", VA = "0x8ACBE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x8ACC64", Offset = "0x8ACC64", VA = "0x8ACC64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x8ACEC8", Offset = "0x8ACEC8", VA = "0x8ACEC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x8AD11C", Offset = "0x8AD11C", VA = "0x8AD11C", Slot = "4")]
		public override void RefreshScoreboard()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x8AD144", Offset = "0x8AD144", VA = "0x8AD144")]
		public void RefreshPlayers(List<PlayerControllerCore> players)
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x8AD588", Offset = "0x8AD588", VA = "0x8AD588")]
		public DeathMatchScoreboard()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x8AD590", Offset = "0x8AD590", VA = "0x8AD590")]
		private void <get_RefreshScoreboardOnChangedPlayersList>b__1_0(PlayerControllerCore player)
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class GeometryClippingPenalizer : MonoBehaviour
	{
		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody headRigidbody;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CollisionEvents[] headTorsoColliders;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerController vivePlayerPhotonObserver;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject leftHand;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject rightHand;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MessageDistance;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float timeToDie;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FloatingTextController floatingTextController;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool bodyInGeometry;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool wasInvoked;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float lastTextTime;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float messageTimeout;

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x8AD59C", Offset = "0x8AD59C", VA = "0x8AD59C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x8AD628", Offset = "0x8AD628", VA = "0x8AD628")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x8AD870", Offset = "0x8AD870", VA = "0x8AD870")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x8ADA18", Offset = "0x8ADA18", VA = "0x8ADA18")]
		private void TryToPenalizeForClipping(Collision collision)
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x8ADC0C", Offset = "0x8ADC0C", VA = "0x8ADC0C")]
		private void TryToDisablePenalizingForClipping(Collision collision)
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x8ADD34", Offset = "0x8ADD34", VA = "0x8ADD34")]
		private void EnableInterior(Collision col, bool state)
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x8ADDF0", Offset = "0x8ADDF0", VA = "0x8ADDF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x8ADB74", Offset = "0x8ADB74", VA = "0x8ADB74")]
		private void ShowMessage()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x8ADE38", Offset = "0x8ADE38", VA = "0x8ADE38")]
		public GeometryClippingPenalizer()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public class PlayerDeathControllerDmPC : PlayerDeathController, IInRoomCallbacks
	{
		[Token(Token = "0x20005C4")]
		private sealed class <ShowDelayedTextDeathPlayerTimeToRespawn>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDeathControllerDmPC <>4__this;

			[Token(Token = "0x170002EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC0")]
				[Address(RVA = "0x8AE988", Offset = "0x8AE988", VA = "0x8AE988", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC1")]
				[Address(RVA = "0x8AE990", Offset = "0x8AE990", VA = "0x8AE990", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x8AE6E4", Offset = "0x8AE6E4", VA = "0x8AE6E4")]
			[DebuggerHidden]
			public <ShowDelayedTextDeathPlayerTimeToRespawn>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x8AE7EC", Offset = "0x8AE7EC", VA = "0x8AE7EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x8AE7F0", Offset = "0x8AE7F0", VA = "0x8AE7F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005C5")]
		private sealed class <DieSoundRoutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDeathControllerDmPC <>4__this;

			[Token(Token = "0x170002F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC5")]
				[Address(RVA = "0x8AEA28", Offset = "0x8AEA28", VA = "0x8AEA28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC6")]
				[Address(RVA = "0x8AEA30", Offset = "0x8AEA30", VA = "0x8AEA30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x8AE70C", Offset = "0x8AE70C", VA = "0x8AE70C")]
			[DebuggerHidden]
			public <DieSoundRoutine>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x8AE998", Offset = "0x8AE998", VA = "0x8AE998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x8AE99C", Offset = "0x8AE99C", VA = "0x8AE99C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002098")]
		private const float timeUntilRespawn = 5f;

		[Token(Token = "0x4002099")]
		private const float respawnTimerTextDistanceFromPlayer = 2f;

		[Token(Token = "0x400209A")]
		private const float timeUntilCounterToRespawnShouldBeVisible = 2f;

		[Token(Token = "0x400209B")]
		private const float animationOffset = 0.5f;

		[Token(Token = "0x400209C")]
		private const int distanceFromPlayer = 0;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip deathSound;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource deathAudioSource;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerMaterialsColorSetterPC playerMaterialsColorSetter;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSeconds soundDelay;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaitForSeconds textDelay;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isDead;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float currentTimeToRespawn;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FloatTextCanvas canvasWithTimeToRespawn;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FloatingTextController floatingTextController;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool deathEffectTimeFinished;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Grayscale grayscaleImageEffect;

		[Token(Token = "0x170002EC")]
		public override bool IsDead
		{
			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x8ADE54", Offset = "0x8ADE54", VA = "0x8ADE54", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x8ADE5C", Offset = "0x8ADE5C", VA = "0x8ADE5C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		private Grayscale GrayscaleImageEffect
		{
			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0x8ADF1C", Offset = "0x8ADF1C", VA = "0x8ADF1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x8ADFCC", Offset = "0x8ADFCC", VA = "0x8ADFCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x8AE044", Offset = "0x8AE044", VA = "0x8AE044")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x8AE09C", Offset = "0x8AE09C", VA = "0x8AE09C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x8AE0F4", Offset = "0x8AE0F4", VA = "0x8AE0F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x8AE3E4", Offset = "0x8AE3E4", VA = "0x8AE3E4", Slot = "8")]
		public override void Die(PlayerKillInfo playerKillInfo)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x8ADEF8", Offset = "0x8ADEF8", VA = "0x8ADEF8")]
		public void EnableDeathEffects(bool isEnabled)
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x8AE5BC", Offset = "0x8AE5BC", VA = "0x8AE5BC", Slot = "6")]
		public override void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x8AE5F0", Offset = "0x8AE5F0", VA = "0x8AE5F0", Slot = "7")]
		public override void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x8AE5FC", Offset = "0x8AE5FC", VA = "0x8AE5FC", Slot = "13")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x8AE0F8", Offset = "0x8AE0F8", VA = "0x8AE0F8")]
		private void ProcessDeathEffect()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x8AE548", Offset = "0x8AE548", VA = "0x8AE548")]
		private IEnumerator ShowDelayedTextDeathPlayerTimeToRespawn()
		{
			return null;
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x8AE4D4", Offset = "0x8AE4D4", VA = "0x8AE4D4")]
		private IEnumerator DieSoundRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x8ADED4", Offset = "0x8ADED4", VA = "0x8ADED4")]
		private void SetPlayerMaterialsToGhost(bool isGhost)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x8AE6B0", Offset = "0x8AE6B0", VA = "0x8AE6B0")]
		private bool IsWaitingForRespawn()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x8AE734", Offset = "0x8AE734", VA = "0x8AE734", Slot = "9")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x8AE738", Offset = "0x8AE738", VA = "0x8AE738", Slot = "10")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x8AE73C", Offset = "0x8AE73C", VA = "0x8AE73C", Slot = "11")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x8AE740", Offset = "0x8AE740", VA = "0x8AE740", Slot = "12")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x8AE744", Offset = "0x8AE744", VA = "0x8AE744")]
		public PlayerDeathControllerDmPC()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class ScoreboardEntryDeathMatch : MonoBehaviour
	{
		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VoiceChatMuteButtonController voiceChatMuteButtonController;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool isMiniScorboard;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text playerName;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text hits;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text deaths;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TournamentPlayerResult tournamentPlayerResult;

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x8AD2B0", Offset = "0x8AD2B0", VA = "0x8AD2B0")]
		internal void UpdateEntry(PlayerControllerCore player)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x8AEA38", Offset = "0x8AEA38", VA = "0x8AEA38")]
		private void SetEntryColor(Color playerColor)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x8AD560", Offset = "0x8AD560", VA = "0x8AD560")]
		public void SetActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x8AEB4C", Offset = "0x8AEB4C", VA = "0x8AEB4C")]
		public bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x8AEB6C", Offset = "0x8AEB6C", VA = "0x8AEB6C")]
		public ScoreboardEntryDeathMatch()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class AxeController : MonoBehaviourPun, IResetable
	{
		[Token(Token = "0x20005C8")]
		public delegate void PlayerHitState(int playerID);

		[Token(Token = "0x40020B4")]
		public const float AxeDodgedTextDuration = 2f;

		[Token(Token = "0x40020B5")]
		public const float AxeDodgedTextDistance = 1f;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 throwDirection;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float throwSpeed;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float StartingRotationSpeed;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationSpeed;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool hitAlready;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool isPaused;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float targetScaleMultiplier;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource axeWhoosh;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource playerFlesh;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource woodHit;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource stoneHit;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshRenderer axeMeshRenderer;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material ghostMaterial;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject playerFleshSoundPrefab;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool defaultHitAlready;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool defaultIsPaused;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private bool defaultAxeWhooshMute;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		[SerializeField]
		private bool defaultAxeWhooshLoop;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform defaultPlayerFleshParent;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool defaultAxeMeshRendererEnabled;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Material defaultAxeMeshRendererMaterial;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform defaultAxeParent;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Vector3 defaultAxeLocalPosition;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private Quaternion defaultAxeLocalRotation;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private Vector3 defaultAxeLocalScale;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private AxeBeingUsedController axeBeingUsedController;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private bool hasRecenltyEnabledAxe;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private PhotonPrefabPoolElement photonPrefabPoolElement;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float defaultPreviousDistance;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float defaultLifeTime;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool defaultDestroyedAlready;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float distanceWhenThrown;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject player;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float lifeTime;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool destroyedAlready;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 axeScale;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 startingScale;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 startingPos;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float previousDistance;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool displayedDodgeMessage;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool isAxeDodgedBySpecialAbility;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		private bool isDodgeBonusSet;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxeHandle <AxeHandle>k__BackingField;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool <HadHitPlayer>k__BackingField;

		[Token(Token = "0x170002F2")]
		public AxeHandle AxeHandle
		{
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x8AEE5C", Offset = "0x8AEE5C", VA = "0x8AEE5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0x8AEE64", Offset = "0x8AEE64", VA = "0x8AEE64")]
			set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		public bool HadHitPlayer
		{
			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0x8AEE74", Offset = "0x8AEE74", VA = "0x8AEE74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0x8AEE7C", Offset = "0x8AEE7C", VA = "0x8AEE7C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		private bool IsAxeDodgedBySpecialAbility
		{
			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0x8AEE88", Offset = "0x8AEE88", VA = "0x8AEE88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x8AEE90", Offset = "0x8AEE90", VA = "0x8AEE90")]
			set
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public static event PlayerHitState OnPlayerGotHit
		{
			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0x8AEB74", Offset = "0x8AEB74", VA = "0x8AEB74")]
			add
			{
			}
			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0x8AEC2C", Offset = "0x8AEC2C", VA = "0x8AEC2C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public static event Action OnPlayerHitByAxe
		{
			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0x8AECE4", Offset = "0x8AECE4", VA = "0x8AECE4")]
			add
			{
			}
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x8AEDA0", Offset = "0x8AEDA0", VA = "0x8AEDA0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x8AEEB0", Offset = "0x8AEEB0", VA = "0x8AEEB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x8AF1F8", Offset = "0x8AF1F8", VA = "0x8AF1F8")]
		private void TryToSetAxeBeingUsed()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x8AF330", Offset = "0x8AF330", VA = "0x8AF330")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x8AFA0C", Offset = "0x8AFA0C", VA = "0x8AFA0C")]
		private void TryToSetAxeIsNotBeingUsed()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x8AFA78", Offset = "0x8AFA78", VA = "0x8AFA78")]
		public void OnTriggerEnter(Collider coll)
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x8B0464", Offset = "0x8B0464", VA = "0x8B0464")]
		private bool IsLocalPlayerCollider(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x8AF268", Offset = "0x8AF268", VA = "0x8AF268")]
		public void DisableVisualsOnNetwork()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x8AF9DC", Offset = "0x8AF9DC", VA = "0x8AF9DC")]
		public void DisableVisualsLocally()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x8B05C4", Offset = "0x8B05C4", VA = "0x8B05C4")]
		[PunRPC]
		public void RpcSetAxeParentToHead(int headPhotonViewID, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x8B0878", Offset = "0x8B0878", VA = "0x8B0878")]
		private void SetAxeMaterialToGhost()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x8B089C", Offset = "0x8B089C", VA = "0x8B089C")]
		[PunRPC]
		public void RpcDisableVisuals()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x8B0924", Offset = "0x8B0924", VA = "0x8B0924")]
		[PunRPC]
		public void RpcPlayPlayerFleshSound()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x8B03A4", Offset = "0x8B03A4", VA = "0x8B03A4")]
		private void PlayHitOtherSound()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x8B02E4", Offset = "0x8B02E4", VA = "0x8B02E4")]
		public void RpcPlayHitWoodSound()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x8B0BD4", Offset = "0x8B0BD4", VA = "0x8B0BD4")]
		public void MarkAxeAsItHitSomething()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x8B0C24", Offset = "0x8B0C24", VA = "0x8B0C24", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x8B0C28", Offset = "0x8B0C28", VA = "0x8B0C28")]
		private void SetInitialState()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x8B0E54", Offset = "0x8B0E54", VA = "0x8B0E54")]
		[ContextMenu("Collect Data")]
		public void CollectData()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x8B0EC4", Offset = "0x8B0EC4", VA = "0x8B0EC4")]
		public AxeController()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public class DragonAttackControler : MonoBehaviourPun, IResetable, IPunObservable
	{
		[Token(Token = "0x20005CA")]
		private sealed class <AttackPlatformsFromAttackColliderCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DragonAttackControler <>4__this;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DragonAttackCollider attackCollider;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlayerController <localPlayer>5__2;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x170002F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E01")]
				[Address(RVA = "0x8B1B1C", Offset = "0x8B1B1C", VA = "0x8B1B1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E02")]
				[Address(RVA = "0x8B1B24", Offset = "0x8B1B24", VA = "0x8B1B24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x8B146C", Offset = "0x8B146C", VA = "0x8B146C")]
			[DebuggerHidden]
			public <AttackPlatformsFromAttackColliderCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0x8B1920", Offset = "0x8B1920", VA = "0x8B1920", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E00")]
			[Address(RVA = "0x8B1924", Offset = "0x8B1924", VA = "0x8B1924", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005CB")]
		private sealed class <AttackCastle>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DragonAttackControler <>4__this;

			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GateController attackedCastleController;

			[Token(Token = "0x170002F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E06")]
				[Address(RVA = "0x8B1C78", Offset = "0x8B1C78", VA = "0x8B1C78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E07")]
				[Address(RVA = "0x8B1C80", Offset = "0x8B1C80", VA = "0x8B1C80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E03")]
			[Address(RVA = "0x8B1744", Offset = "0x8B1744", VA = "0x8B1744")]
			[DebuggerHidden]
			public <AttackCastle>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001E04")]
			[Address(RVA = "0x8B1B2C", Offset = "0x8B1B2C", VA = "0x8B1B2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x8B1B30", Offset = "0x8B1B30", VA = "0x8B1B30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DragonAudio audio;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem[] fireParticles;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool canAttack;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool defaultCanAttack;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool attackedCastleLocally;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		private bool defaultAttackedCastle;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerKillInfo playerKillInfo;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <AttackedCastleSynchronized>k__BackingField;

		[Token(Token = "0x170002F5")]
		public bool AttackedCastleSynchronized
		{
			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0x8B0FD8", Offset = "0x8B0FD8", VA = "0x8B0FD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0x8B0FE0", Offset = "0x8B0FE0", VA = "0x8B0FE0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x8B0FEC", Offset = "0x8B0FEC", VA = "0x8B0FEC")]
		private void OnTriggerEnter(Collider triggeredCollider)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x8B1014", Offset = "0x8B1014", VA = "0x8B1014")]
		private void TryAttackCastle(Collider triggeredCollider)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x8B1124", Offset = "0x8B1124", VA = "0x8B1124")]
		private void TryStartAttackingPlayers(Collider triggeredCollider)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x8B1268", Offset = "0x8B1268", VA = "0x8B1268")]
		private void StartAttackingPlayers(DragonAttackCollider dragonAttackCollider)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x8B13DC", Offset = "0x8B13DC", VA = "0x8B13DC")]
		private IEnumerator AttackPlatformsFromAttackColliderCoroutine(DragonAttackCollider attackCollider)
		{
			return null;
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x8B1494", Offset = "0x8B1494", VA = "0x8B1494")]
		private void KillPlayer(PlayerController playerToBeKilled)
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x8B12C0", Offset = "0x8B12C0", VA = "0x8B12C0")]
		private bool CheckIfAnyPlayerOnAttackCollider(DragonAttackCollider attackCollider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x8B14C4", Offset = "0x8B14C4", VA = "0x8B14C4")]
		private bool CheckIfPlayerOnAnyAttackColliderTargets(DragonAttackCollider attackCollider, PlayerController playerController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x8B1578", Offset = "0x8B1578", VA = "0x8B1578")]
		private bool CheckIfPlayerOnAnyAttackTargetPlatforms(DragonAttackTargetInfo dragonAttackTargetInfo, PlayerController playerController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x8B1624", Offset = "0x8B1624", VA = "0x8B1624")]
		private bool CheckIfPlayerOnPlatform(TeleportCollider teleportCollider, PlayerController playerController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x8B1660", Offset = "0x8B1660", VA = "0x8B1660")]
		public void PlayAttackAudioAndVisuals()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x8B16E4", Offset = "0x8B16E4", VA = "0x8B16E4")]
		private void StopAttackVisuals()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x8B11D8", Offset = "0x8B11D8", VA = "0x8B11D8")]
		private IEnumerator AttackCastle(GateController attackedCastleController)
		{
			return null;
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x8B176C", Offset = "0x8B176C", VA = "0x8B176C")]
		public void StopAttacking()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x8B179C", Offset = "0x8B179C", VA = "0x8B179C", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x8B17B4", Offset = "0x8B17B4", VA = "0x8B17B4", Slot = "5")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x8B1870", Offset = "0x8B1870", VA = "0x8B1870")]
		public DragonAttackControler()
		{
		}
	}
	[Token(Token = "0x20005CC")]
	public class DragonKilledController : MonoBehaviourPun, IEnemyGetKilled
	{
		[Serializable]
		[Token(Token = "0x20005CD")]
		private sealed class <>c
		{
			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<RoutePoint> <>9__6_0;

			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0x8B206C", Offset = "0x8B206C", VA = "0x8B206C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0x8B2074", Offset = "0x8B2074", VA = "0x8B2074")]
			internal bool <Awake>b__6_0(RoutePoint x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40020F6")]
		private const float slowDownSpedUpTime = 1f;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DragonAttackControler dragonAttackControler;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DragonAnimatorController dragonAnimatorController;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoutePoint deathPoint;

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x8B1C88", Offset = "0x8B1C88", VA = "0x8B1C88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x8B1DD8", Offset = "0x8B1DD8", VA = "0x8B1DD8", Slot = "4")]
		public bool IsHandling(KillInfo killInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x8B1DE0", Offset = "0x8B1DE0", VA = "0x8B1DE0", Slot = "5")]
		public void GetKilled(KillInfo killInfo)
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x8B1EEC", Offset = "0x8B1EEC", VA = "0x8B1EEC")]
		[PunRPC]
		private void RpcAnimateDragonDeath()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x8B1FF4", Offset = "0x8B1FF4", VA = "0x8B1FF4")]
		public DragonKilledController()
		{
		}
	}
	[Token(Token = "0x20005CE")]
	public class GiantTrollAnimatorController : MonoBehaviourPun, IResetable, IPunObservable
	{
		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int walkingHash;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly int throwingHash;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int dyingHash;

		[Token(Token = "0x4002101")]
		private const bool DefaultDeathAnimAdjusterEnabled = false;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DeathAnimAdjuster deathAnimAdjuster;

		[Token(Token = "0x170002FA")]
		private bool IsWalking
		{
			[Token(Token = "0x6001E10")]
			[Address(RVA = "0x8B2094", Offset = "0x8B2094", VA = "0x8B2094")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E11")]
			[Address(RVA = "0x8B20B8", Offset = "0x8B20B8", VA = "0x8B20B8")]
			set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		private bool IsThrowing
		{
			[Token(Token = "0x6001E12")]
			[Address(RVA = "0x8B20E4", Offset = "0x8B20E4", VA = "0x8B20E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E13")]
			[Address(RVA = "0x8B2108", Offset = "0x8B2108", VA = "0x8B2108")]
			set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		private bool IsDying
		{
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x8B2134", Offset = "0x8B2134", VA = "0x8B2134")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E15")]
			[Address(RVA = "0x8B2158", Offset = "0x8B2158", VA = "0x8B2158")]
			set
			{
			}
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x8B2184", Offset = "0x8B2184", VA = "0x8B2184")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x8B21DC", Offset = "0x8B21DC", VA = "0x8B21DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x8B2234", Offset = "0x8B2234", VA = "0x8B2234")]
		public void StopAnimations()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x8B2254", Offset = "0x8B2254", VA = "0x8B2254")]
		public void StartWalkAnimation()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x8B22B4", Offset = "0x8B22B4", VA = "0x8B22B4")]
		public void StartThrowAnimation()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x8B22E8", Offset = "0x8B22E8", VA = "0x8B22E8")]
		public void StartDeathAnimation()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x8B231C", Offset = "0x8B231C", VA = "0x8B231C", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x8B2368", Offset = "0x8B2368", VA = "0x8B2368", Slot = "5")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x8B2288", Offset = "0x8B2288", VA = "0x8B2288")]
		private void DisableAllStates()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x8B250C", Offset = "0x8B250C", VA = "0x8B250C")]
		public GiantTrollAnimatorController()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	public class GiantTrollKillController : MonoBehaviour, IEnemyGetKilled
	{
		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnemyEnableController enemyEnableController;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GiantTrollStateController giantTrollStateController;

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x8B25B4", Offset = "0x8B25B4", VA = "0x8B25B4", Slot = "4")]
		public bool IsHandling(KillInfo killInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x8B25BC", Offset = "0x8B25BC", VA = "0x8B25BC", Slot = "5")]
		public void GetKilled(KillInfo killInfo)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x8B270C", Offset = "0x8B270C", VA = "0x8B270C")]
		public GiantTrollKillController()
		{
		}
	}
	[Token(Token = "0x20005D0")]
	public enum GiantTrollState
	{
		[Token(Token = "0x4002109")]
		FollowingRoute,
		[Token(Token = "0x400210A")]
		ThrowingRock,
		[Token(Token = "0x400210B")]
		Dying
	}
	[Token(Token = "0x20005D1")]
	public class GiantTrollStateController : MonoBehaviourPun, IPunObservable, IResetable, IInRoomCallbacks
	{
		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GiantTrollAnimatorController giantTrollAnimatorController;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TrollSoundController trollSoundController;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GiantTrollState giantTrollState;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool stateIsLocked;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool isThrowTriggered;

		[Token(Token = "0x170002FD")]
		private GiantTrollState GiantTrollState
		{
			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x8B2714", Offset = "0x8B2714", VA = "0x8B2714")]
			get
			{
				return default(GiantTrollState);
			}
			[Token(Token = "0x6001E24")]
			[Address(RVA = "0x8B271C", Offset = "0x8B271C", VA = "0x8B271C")]
			set
			{
			}
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x8B2720", Offset = "0x8B2720", VA = "0x8B2720")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x8B2778", Offset = "0x8B2778", VA = "0x8B2778")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x8B27D0", Offset = "0x8B27D0", VA = "0x8B27D0", Slot = "5")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x8B27DC", Offset = "0x8B27DC", VA = "0x8B27DC")]
		public void OnThrowTrigger()
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x8B2850", Offset = "0x8B2850", VA = "0x8B2850")]
		public void AnimationEventEndThrow()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x8B2658", Offset = "0x8B2658", VA = "0x8B2658")]
		public void SetTrollState(GiantTrollState state)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x8B2858", Offset = "0x8B2858", VA = "0x8B2858", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x8B29E4", Offset = "0x8B29E4", VA = "0x8B29E4", Slot = "10")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x8B29F4", Offset = "0x8B29F4", VA = "0x8B29F4", Slot = "6")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x8B29F8", Offset = "0x8B29F8", VA = "0x8B29F8", Slot = "7")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x8B29FC", Offset = "0x8B29FC", VA = "0x8B29FC", Slot = "8")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x8B2A00", Offset = "0x8B2A00", VA = "0x8B2A00", Slot = "9")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x8B2A04", Offset = "0x8B2A04", VA = "0x8B2A04")]
		public GiantTrollStateController()
		{
		}
	}
	[Token(Token = "0x20005D2")]
	public class GiantTrollThrowController : MonoBehaviourPun, IPunObservable, IInRoomCallbacks
	{
		[Serializable]
		[Token(Token = "0x20005D3")]
		private sealed class <>c
		{
			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PlayerController, bool> <>9__21_0;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<PlayerController, int> <>9__21_1;

			[Token(Token = "0x6001E47")]
			[Address(RVA = "0x8B35F0", Offset = "0x8B35F0", VA = "0x8B35F0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E48")]
			[Address(RVA = "0x8B35F8", Offset = "0x8B35F8", VA = "0x8B35F8")]
			internal bool <RequestThrowRock>b__21_0(PlayerController playerController)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E49")]
			[Address(RVA = "0x8B3628", Offset = "0x8B3628", VA = "0x8B3628")]
			internal int <RequestThrowRock>b__21_1(PlayerController playerController)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20005D4")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int playerID;

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x8B3648", Offset = "0x8B3648", VA = "0x8B3648")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x8B3650", Offset = "0x8B3650", VA = "0x8B3650")]
			internal bool <ThrowRock>b__0(PlayerControllerCore pc)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005D5")]
		private sealed class <ThrowRock>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int playerID;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GiantTrollThrowController <>4__this;

			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TeleportCollider <targetTeleportCollider>5__2;

			[Token(Token = "0x17000300")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E4F")]
				[Address(RVA = "0x8B38C4", Offset = "0x8B38C4", VA = "0x8B38C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000301")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E50")]
				[Address(RVA = "0x8B38CC", Offset = "0x8B38CC", VA = "0x8B38CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x8B2FA8", Offset = "0x8B2FA8", VA = "0x8B2FA8")]
			[DebuggerHidden]
			public <ThrowRock>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x8B3688", Offset = "0x8B3688", VA = "0x8B3688", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0x8B368C", Offset = "0x8B368C", VA = "0x8B368C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float throwArcHeight;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform throwOrigin;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject rock;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject rockFracturedPrefab;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TrollSoundController trollSoundController;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform throwTarget;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GiantTrollRock rockFractured;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool hasRock;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private System.Random platformRand;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int randomPlatformSeed;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool isRandomSeedSet;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerKillInfo playerKillInfo;

		[Token(Token = "0x170002FE")]
		private bool HasRock
		{
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0x8B2A0C", Offset = "0x8B2A0C", VA = "0x8B2A0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E33")]
			[Address(RVA = "0x8B2A14", Offset = "0x8B2A14", VA = "0x8B2A14")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		private int RandomPlatformSeed
		{
			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x8B2A3C", Offset = "0x8B2A3C", VA = "0x8B2A3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x8B2A44", Offset = "0x8B2A44", VA = "0x8B2A44")]
			set
			{
			}
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x8B2AC0", Offset = "0x8B2AC0", VA = "0x8B2AC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x8B2BA4", Offset = "0x8B2BA4", VA = "0x8B2BA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x8B2C08", Offset = "0x8B2C08", VA = "0x8B2C08")]
		public void InitializeRock()
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x8B2C30", Offset = "0x8B2C30", VA = "0x8B2C30")]
		public void RequestThrowRock()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x8B2F24", Offset = "0x8B2F24", VA = "0x8B2F24")]
		private IEnumerator ThrowRock(int playerID)
		{
			return null;
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x8B2FD0", Offset = "0x8B2FD0", VA = "0x8B2FD0")]
		private void InitializeThrow(Vector3 target)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x8B31C0", Offset = "0x8B31C0", VA = "0x8B31C0")]
		private void KillPlayersOnPlatform(TeleportCollider teleportCollider)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x8B32AC", Offset = "0x8B32AC", VA = "0x8B32AC", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x8B2B20", Offset = "0x8B2B20", VA = "0x8B2B20")]
		private void SetRandomSeed()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x8B343C", Offset = "0x8B343C", VA = "0x8B343C", Slot = "9")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x8B344C", Offset = "0x8B344C", VA = "0x8B344C", Slot = "5")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x8B3450", Offset = "0x8B3450", VA = "0x8B3450", Slot = "6")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x8B3454", Offset = "0x8B3454", VA = "0x8B3454", Slot = "7")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x8B3458", Offset = "0x8B3458", VA = "0x8B3458", Slot = "8")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x8B345C", Offset = "0x8B345C", VA = "0x8B345C")]
		public static Vector3 GetPointQuadraticBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x8B34D0", Offset = "0x8B34D0", VA = "0x8B34D0")]
		public GiantTrollThrowController()
		{
		}
	}
	[Token(Token = "0x20005D6")]
	public class ShowLegDust : MonoBehaviour
	{
		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> feet;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<ParticleSystem> particles;

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x8B38D4", Offset = "0x8B38D4", VA = "0x8B38D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x8B3AC8", Offset = "0x8B3AC8", VA = "0x8B3AC8")]
		public void PlayFootstepsSound(int legNumber)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x8B3ACC", Offset = "0x8B3ACC", VA = "0x8B3ACC")]
		private void OnLegDown(int legNumber)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x8B3B30", Offset = "0x8B3B30", VA = "0x8B3B30")]
		public ShowLegDust()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public class ThrowRockTrigger : MonoBehaviour
	{
		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x8B3BB8", Offset = "0x8B3BB8", VA = "0x8B3BB8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x8B3C1C", Offset = "0x8B3C1C", VA = "0x8B3C1C")]
		public ThrowRockTrigger()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public class EnemyArrowShootController : MonoBehaviourPun, IResetable, IPunObservable, IInRoomCallbacks
	{
		[Token(Token = "0x4002129")]
		private const int raycastLenght = 1000;

		[Token(Token = "0x400212A")]
		private const int maxShootActionAmount = 3;

		[Token(Token = "0x400212B")]
		private const float arrowVelocity = 60f;

		[Token(Token = "0x400212C")]
		private const float arrowPrecisionScaler = 0.4f;

		[Token(Token = "0x400212D")]
		private const float detectionAngle = 60f;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OrcAnimatorController orcAnimatorController;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform archerAimPoint;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject arrowPrefab;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private OnArrowShootAnimationEventHandler onArrowShootAnimationEventHandler;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private OrcBowAnimatorController orcBowAnimatorController;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private EnemyBowAdjuster enemyBowAdjuster;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform pivotPoint;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform arrowReference;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LayerMask layersToHit;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int targetId;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int shootActionCounter;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlayerController playerController;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<PlayerController, Transform> OnStartingShootAction;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PlayerController, Transform> OnEndingShootAction;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool <IsShooting>k__BackingField;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 <PositionToShootAt>k__BackingField;

		[Token(Token = "0x17000302")]
		public bool IsShooting
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x8B3C24", Offset = "0x8B3C24", VA = "0x8B3C24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0x8B3C2C", Offset = "0x8B3C2C", VA = "0x8B3C2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public Vector3 PositionToShootAt
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x8B3C38", Offset = "0x8B3C38", VA = "0x8B3C38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0x8B3C44", Offset = "0x8B3C44", VA = "0x8B3C44")]
			private set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public int TargetId
		{
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0x8B3C50", Offset = "0x8B3C50", VA = "0x8B3C50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0x8B3C58", Offset = "0x8B3C58", VA = "0x8B3C58")]
			set
			{
			}
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x8B3D5C", Offset = "0x8B3D5C", VA = "0x8B3D5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x8B40BC", Offset = "0x8B40BC", VA = "0x8B40BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x8B441C", Offset = "0x8B441C", VA = "0x8B441C")]
		private void DrawArrow()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x8B4448", Offset = "0x8B4448", VA = "0x8B4448")]
		public void TakeShootAction(PlayerController playerController)
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x8B4A04", Offset = "0x8B4A04", VA = "0x8B4A04")]
		private void SetNewTargetPosition()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x8B497C", Offset = "0x8B497C", VA = "0x8B497C")]
		private Vector3 GetTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x8B4CF4", Offset = "0x8B4CF4", VA = "0x8B4CF4")]
		private void AttachArrowToString()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x8B4E48", Offset = "0x8B4E48", VA = "0x8B4E48")]
		private void ShootArrow()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x8B4ECC", Offset = "0x8B4ECC", VA = "0x8B4ECC")]
		private void Shoot()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x8B517C", Offset = "0x8B517C", VA = "0x8B517C")]
		[PunRPC]
		private void ReleaseEnemyArrow(int arrowPhotonViewID)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x8B54E8", Offset = "0x8B54E8", VA = "0x8B54E8")]
		private void EndShooting(HealthStateController arg)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x8B54EC", Offset = "0x8B54EC", VA = "0x8B54EC")]
		private void EndShooting()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x8B55B8", Offset = "0x8B55B8", VA = "0x8B55B8", Slot = "7")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x8B55E8", Offset = "0x8B55E8", VA = "0x8B55E8", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x8B57E8", Offset = "0x8B57E8", VA = "0x8B57E8", Slot = "5")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x8B59A4", Offset = "0x8B59A4", VA = "0x8B59A4", Slot = "10")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x8B59A8", Offset = "0x8B59A8", VA = "0x8B59A8", Slot = "6")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x8B59AC", Offset = "0x8B59AC", VA = "0x8B59AC", Slot = "8")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x8B59B0", Offset = "0x8B59B0", VA = "0x8B59B0", Slot = "9")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x8B59B4", Offset = "0x8B59B4", VA = "0x8B59B4")]
		public EnemyArrowShootController()
		{
		}
	}
	[Token(Token = "0x20005D9")]
	public class OrcFreezeController : MonoBehaviourPun, IResetable, IFreezable, IFrozenEnemyBreakable
	{
		[Serializable]
		[Token(Token = "0x20005DA")]
		private sealed class <>c
		{
			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__21_0;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Renderer> <>9__21_1;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<GameObject> <>9__28_0;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<Renderer> <>9__28_1;

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x8B6588", Offset = "0x8B6588", VA = "0x8B6588")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x8B6590", Offset = "0x8B6590", VA = "0x8B6590")]
			internal void <Break>b__21_0(GameObject go)
			{
			}

			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x8B65AC", Offset = "0x8B65AC", VA = "0x8B65AC")]
			internal void <Break>b__21_1(Renderer renderer)
			{
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x8B65C8", Offset = "0x8B65C8", VA = "0x8B65C8")]
			internal void <ResetElement>b__28_0(GameObject obj)
			{
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x8B65E4", Offset = "0x8B65E4", VA = "0x8B65E4")]
			internal void <ResetElement>b__28_1(Renderer renderer)
			{
			}
		}

		[Token(Token = "0x20005DB")]
		private sealed class <FreeOrcOnPool>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrcFreezeController <>4__this;

			[Token(Token = "0x17000305")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E87")]
				[Address(RVA = "0x8B670C", Offset = "0x8B670C", VA = "0x8B670C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000306")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E88")]
				[Address(RVA = "0x8B6714", Offset = "0x8B6714", VA = "0x8B6714", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x8B6140", Offset = "0x8B6140", VA = "0x8B6140")]
			[DebuggerHidden]
			public <FreeOrcOnPool>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x8B6600", Offset = "0x8B6600", VA = "0x8B6600", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x8B6604", Offset = "0x8B6604", VA = "0x8B6604", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005DC")]
		private sealed class <BreakIntoIcePartsAfterTime>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrcFreezeController <>4__this;

			[Token(Token = "0x17000307")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E8C")]
				[Address(RVA = "0x8B6828", Offset = "0x8B6828", VA = "0x8B6828", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000308")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E8D")]
				[Address(RVA = "0x8B6830", Offset = "0x8B6830", VA = "0x8B6830", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x8B6168", Offset = "0x8B6168", VA = "0x8B6168")]
			[DebuggerHidden]
			public <BreakIntoIcePartsAfterTime>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0x8B671C", Offset = "0x8B671C", VA = "0x8B671C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0x8B6720", Offset = "0x8B6720", VA = "0x8B6720", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002140")]
		private const float timeToFree = 15f;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OrcSoundController orcSoundController;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OrcAnimatorController orcAnimatorController;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private OrcThrowingAxeController throwingAxeController;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SlowingController slowingController;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private IceExplosionParticlesController iceExplosionParticlesController;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EnemyEnableController enemyEnableController;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IceMaterialAnimator iceMaterialAnimator;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material defaultMaterial;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material iceAxeMaterial;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material iceMaterial;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Renderer axeRenderer;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Renderer> renderers;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<GameObject> objectsToDisable;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ExplodeObject iceToBeBroken;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isLocallyExploded;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Action OnOrcFrozen;

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x8B59BC", Offset = "0x8B59BC", VA = "0x8B59BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x8B5A14", Offset = "0x8B5A14", VA = "0x8B5A14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x8B5A6C", Offset = "0x8B5A6C", VA = "0x8B5A6C", Slot = "5")]
		public void Freeze()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x8B5DD4", Offset = "0x8B5DD4", VA = "0x8B5DD4", Slot = "6")]
		public void Break(Vector3 breakDirection)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x8B5AE4", Offset = "0x8B5AE4", VA = "0x8B5AE4")]
		private void StartIceCreatingProcess()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x8B60C4", Offset = "0x8B60C4", VA = "0x8B60C4")]
		[ContextMenu("Collect Renderers")]
		public void CollectRenderers()
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x8B6050", Offset = "0x8B6050", VA = "0x8B6050")]
		private IEnumerator FreeOrcOnPool()
		{
			return null;
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x8B5D60", Offset = "0x8B5D60", VA = "0x8B5D60")]
		private IEnumerator BreakIntoIcePartsAfterTime()
		{
			return null;
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x8B6190", Offset = "0x8B6190", VA = "0x8B6190")]
		public void SetReferences(List<Renderer> _renderers, ExplodeObject _iceToBeBroken, Material _iceMaterial, Material _defaultMaterial, Material _iceAxeMaterial, List<GameObject> _objectsToDisable)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x8B6220", Offset = "0x8B6220", VA = "0x8B6220")]
		public void SetAxeReference(Renderer _axeRenderer)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x8B6228", Offset = "0x8B6228", VA = "0x8B6228", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x8B64EC", Offset = "0x8B64EC", VA = "0x8B64EC")]
		public OrcFreezeController()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x8B64F4", Offset = "0x8B64F4", VA = "0x8B64F4")]
		private void <ResetElement>b__28_2(Renderer renderer)
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public class OrcThrowingAxeController : MonoBehaviourPun, IPunObservable, IResetable, IInRoomCallbacks
	{
		[Token(Token = "0x20005DE")]
		private sealed class <ThrowAxeRoutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrcThrowingAxeController <>4__this;

			[Token(Token = "0x1700030B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB2")]
				[Address(RVA = "0x8B82FC", Offset = "0x8B82FC", VA = "0x8B82FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB3")]
				[Address(RVA = "0x8B8304", Offset = "0x8B8304", VA = "0x8B8304", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0x8B77F4", Offset = "0x8B77F4", VA = "0x8B77F4")]
			[DebuggerHidden]
			public <ThrowAxeRoutine>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x8B7FB4", Offset = "0x8B7FB4", VA = "0x8B7FB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0x8B7FB8", Offset = "0x8B7FB8", VA = "0x8B7FB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005DF")]
		private sealed class <ThrowingAxeRoutine>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrcThrowingAxeController <>4__this;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int clientID;

			[Token(Token = "0x1700030D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB7")]
				[Address(RVA = "0x8B8408", Offset = "0x8B8408", VA = "0x8B8408", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB8")]
				[Address(RVA = "0x8B8410", Offset = "0x8B8410", VA = "0x8B8410", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x8B7D20", Offset = "0x8B7D20", VA = "0x8B7D20")]
			[DebuggerHidden]
			public <ThrowingAxeRoutine>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x8B830C", Offset = "0x8B830C", VA = "0x8B830C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x8B8310", Offset = "0x8B8310", VA = "0x8B8310", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OrcAnimatorController orcAnimatorController;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EnemyAnimatorStateController enemyAnimatorStateController;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OrcFreezeController orcFreezeController;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FreezeController freezeController;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private EnemyGetHitController enemyGetHitController;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AttackController attackController;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float maxThrowingDistance;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float timeFromThrowingAnimationToGettingWeapon;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float timeFromGettingWeaponToReturningToRoute;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float timeFromOrcGotHitToThrowingAxe;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float timeToEnableDisablingAxe;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject sword;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject swordOnBack;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject axe;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform axeParentBone;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool canThrow;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool defaultCanThrow;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool defaultIsThrowing;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		private bool defaultHasThrown;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 positionToThrowAt;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 defaultPositionToThrowAt;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject spawnedAxe;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool <IsThrowing>k__BackingField;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool <HasThrown>k__BackingField;

		[Token(Token = "0x17000309")]
		public bool IsThrowing
		{
			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x8B69D0", Offset = "0x8B69D0", VA = "0x8B69D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E91")]
			[Address(RVA = "0x8B69D8", Offset = "0x8B69D8", VA = "0x8B69D8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public bool HasThrown
		{
			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x8B69E4", Offset = "0x8B69E4", VA = "0x8B69E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E93")]
			[Address(RVA = "0x8B69EC", Offset = "0x8B69EC", VA = "0x8B69EC")]
			private set
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public static event Action<int> AxeThrownAtPlayerEvent
		{
			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x8B6838", Offset = "0x8B6838", VA = "0x8B6838")]
			add
			{
			}
			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x8B6904", Offset = "0x8B6904", VA = "0x8B6904")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x8B69F8", Offset = "0x8B69F8", VA = "0x8B69F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x8B6C80", Offset = "0x8B6C80", VA = "0x8B6C80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x8B6F08", Offset = "0x8B6F08", VA = "0x8B6F08", Slot = "10")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x8B70BC", Offset = "0x8B70BC", VA = "0x8B70BC")]
		public void SetReferences(Transform _axeParentBone, GameObject _sword, GameObject _swordOnBack, GameObject _axe)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x8B711C", Offset = "0x8B711C", VA = "0x8B711C")]
		public bool CheckIfCanThrowAtPlayer(int playerId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x8B72E4", Offset = "0x8B72E4", VA = "0x8B72E4")]
		public void ActivateSwordFromBackAfterThrowingAxe()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x8B731C", Offset = "0x8B731C", VA = "0x8B731C")]
		public void StartAxeFly()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x8B7580", Offset = "0x8B7580", VA = "0x8B7580", Slot = "5")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x8B761C", Offset = "0x8B761C", VA = "0x8B761C")]
		private void OnOrcGotHit(float maxHealthPoints, Player hitter)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x8B7760", Offset = "0x8B7760", VA = "0x8B7760")]
		private void OnOrcDied(HealthStateController healthStateController)
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x8B7780", Offset = "0x8B7780", VA = "0x8B7780")]
		private IEnumerator ThrowAxeRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x8B781C", Offset = "0x8B781C", VA = "0x8B781C")]
		private void TryToEnableOrcMovement()
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x8B7858", Offset = "0x8B7858", VA = "0x8B7858")]
		[PunRPC]
		private void StartAxePlyRPC(int id)
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x8B7A14", Offset = "0x8B7A14", VA = "0x8B7A14")]
		private void SetAxeThrowDirection()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x8B7B80", Offset = "0x8B7B80", VA = "0x8B7B80")]
		private void ThrowAxe(int clientID)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x8B6FA4", Offset = "0x8B6FA4", VA = "0x8B6FA4")]
		private void StartMove()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x8B7C14", Offset = "0x8B7C14", VA = "0x8B7C14")]
		private void FinishAssault()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x8B7C1C", Offset = "0x8B7C1C", VA = "0x8B7C1C")]
		[PunRPC]
		private void RPCPlayAttackAnimation()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x8B7218", Offset = "0x8B7218", VA = "0x8B7218")]
		private Vector3 GetPositionToThrowAtPlayer(int playerId)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x8B7C38", Offset = "0x8B7C38", VA = "0x8B7C38")]
		[PunRPC]
		private void RpcStartThrowingAxeRoutineAfterOrcGotHit(int clientID)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x8B7C9C", Offset = "0x8B7C9C", VA = "0x8B7C9C")]
		private IEnumerator ThrowingAxeRoutine(int clientID)
		{
			return null;
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x8B7D48", Offset = "0x8B7D48", VA = "0x8B7D48", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x8B7F88", Offset = "0x8B7F88", VA = "0x8B7F88", Slot = "6")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x8B7F8C", Offset = "0x8B7F8C", VA = "0x8B7F8C", Slot = "7")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x8B7F90", Offset = "0x8B7F90", VA = "0x8B7F90", Slot = "8")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x8B7F94", Offset = "0x8B7F94", VA = "0x8B7F94", Slot = "9")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x8B7F98", Offset = "0x8B7F98", VA = "0x8B7F98")]
		public OrcThrowingAxeController()
		{
		}
	}
	[Token(Token = "0x20005E0")]
	public class SimpleCatapultRockHitController : MonoBehaviourPun, IEnemyGetHit
	{
		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnemyGetKilledController enemyGetKilledController;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FreezeController freezeController;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FrozenEnemyBreakController frozenEnemyBreakController;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isfreezable;

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x8B8418", Offset = "0x8B8418", VA = "0x8B8418")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x8B84F0", Offset = "0x8B84F0", VA = "0x8B84F0", Slot = "4")]
		public bool IsHandling(HitInfoAbstract hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x8B851C", Offset = "0x8B851C", VA = "0x8B851C", Slot = "5")]
		public void GetHit(HitInfoAbstract hitInfo)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x8B872C", Offset = "0x8B872C", VA = "0x8B872C")]
		[PunRPC]
		private void RPCGetHitCatapult(float damage, int hitterActorNumber)
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x8B88E8", Offset = "0x8B88E8", VA = "0x8B88E8")]
		public SimpleCatapultRockHitController()
		{
		}
	}
	[Token(Token = "0x20005E1")]
	public class TrollAttackController : MonoBehaviourPun, IPunObservable, IResetable, ISettable
	{
		[Token(Token = "0x20005E2")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<PlayerController> players;

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0x8B9570", Offset = "0x8B9570", VA = "0x8B9570")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x8B98BC", Offset = "0x8B98BC", VA = "0x8B98BC")]
			internal void <GetPlayersOnAttackPlatform>b__0(PlayerControllerCore x)
			{
			}
		}

		[Token(Token = "0x4002185")]
		private const float facingTargetAngleDifferenceToStartPunch = 5f;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TrollAnimatorController trollAnimatorController;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TrollSoundController trollSoundController;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EnemyMovementController enemyMovementController;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float distanceToCheckShouldGoToAttackSquared;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float distanceToAttackFromSquared;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool wasCheckingForGoingToAttackPlace;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool wasOnAttackStandingPoint;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool wasFacingAttackTarget;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TrollAttackPlaceInfo trollAttackPlaceInfo;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TrollAttackState trollAttackState;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool defaultWasCheckingForGoingToAttackPlace;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool defaultWasOnAttackStandingPoint;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		private bool defaultWasFacingAttackTarget;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TrollAttackState defaultTrollAttackState;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool <CanAttack>k__BackingField;

		[Token(Token = "0x1700030F")]
		public bool CanAttack
		{
			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x8B88F0", Offset = "0x8B88F0", VA = "0x8B88F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x8B88F8", Offset = "0x8B88F8", VA = "0x8B88F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public TrollAttackState TrollAttackState
		{
			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x8B8904", Offset = "0x8B8904", VA = "0x8B8904")]
			get
			{
				return default(TrollAttackState);
			}
			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0x8B890C", Offset = "0x8B890C", VA = "0x8B890C")]
			set
			{
			}
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x8B8C4C", Offset = "0x8B8C4C", VA = "0x8B8C4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x8B8CA4", Offset = "0x8B8CA4", VA = "0x8B8CA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x8B92F8", Offset = "0x8B92F8", VA = "0x8B92F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x8B9350", Offset = "0x8B9350", VA = "0x8B9350")]
		public void AnimationEventEndShout()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x8B93FC", Offset = "0x8B93FC", VA = "0x8B93FC")]
		public void AnimationEventKillPlayer()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x8B9568", Offset = "0x8B9568", VA = "0x8B9568")]
		public void AnimationEventEndAttack()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x8B8C18", Offset = "0x8B8C18", VA = "0x8B8C18")]
		private void Shout()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x8B9104", Offset = "0x8B9104", VA = "0x8B9104")]
		private bool IsOnAttackStandingPoint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x8B8DF0", Offset = "0x8B8DF0", VA = "0x8B8DF0")]
		private bool IsCloseEnoughToCheckForGoingToAttackPlace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x8B9188", Offset = "0x8B9188", VA = "0x8B9188")]
		private bool IsFacingAttackTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x8B8E74", Offset = "0x8B8E74", VA = "0x8B8E74")]
		private List<PlayerController> GetPlayersOnAttackPlatform()
		{
			return null;
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x8B9578", Offset = "0x8B9578", VA = "0x8B9578", Slot = "5")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x8B95FC", Offset = "0x8B95FC", VA = "0x8B95FC", Slot = "6")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x8B9674", Offset = "0x8B9674", VA = "0x8B9674", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x8B98AC", Offset = "0x8B98AC", VA = "0x8B98AC")]
		public TrollAttackController()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	public class WolfBreakController : MonoBehaviourPun, IResetable, IFreezable, IFrozenEnemyBreakable
	{
		[Serializable]
		[Token(Token = "0x20005E4")]
		private sealed class <>c
		{
			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__17_0;

			[Token(Token = "0x40021A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Renderer> <>9__17_1;

			[Token(Token = "0x40021A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<GameObject> <>9__23_0;

			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<Renderer> <>9__23_1;

			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0x8BA40C", Offset = "0x8BA40C", VA = "0x8BA40C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x8BA414", Offset = "0x8BA414", VA = "0x8BA414")]
			internal void <Break>b__17_0(GameObject go)
			{
			}

			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x8BA430", Offset = "0x8BA430", VA = "0x8BA430")]
			internal void <Break>b__17_1(Renderer renderer)
			{
			}

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x8BA44C", Offset = "0x8BA44C", VA = "0x8BA44C")]
			internal void <ResetElement>b__23_0(GameObject obj)
			{
			}

			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x8BA468", Offset = "0x8BA468", VA = "0x8BA468")]
			internal void <ResetElement>b__23_1(Renderer renderer)
			{
			}
		}

		[Token(Token = "0x20005E5")]
		private sealed class <ReturnToPool>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WolfBreakController <>4__this;

			[Token(Token = "0x17000311")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EE8")]
				[Address(RVA = "0x8BA590", Offset = "0x8BA590", VA = "0x8BA590", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000312")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EE9")]
				[Address(RVA = "0x8BA598", Offset = "0x8BA598", VA = "0x8BA598", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x8BA03C", Offset = "0x8BA03C", VA = "0x8BA03C")]
			[DebuggerHidden]
			public <ReturnToPool>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0x8BA484", Offset = "0x8BA484", VA = "0x8BA484", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0x8BA488", Offset = "0x8BA488", VA = "0x8BA488", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005E6")]
		private sealed class <BreakIntoIcePartsDelayed>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WolfBreakController <>4__this;

			[Token(Token = "0x17000313")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EED")]
				[Address(RVA = "0x8BA6AC", Offset = "0x8BA6AC", VA = "0x8BA6AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000314")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EEE")]
				[Address(RVA = "0x8BA6B4", Offset = "0x8BA6B4", VA = "0x8BA6B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0x8BA064", Offset = "0x8BA064", VA = "0x8BA064")]
			[DebuggerHidden]
			public <BreakIntoIcePartsDelayed>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0x8BA5A0", Offset = "0x8BA5A0", VA = "0x8BA5A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0x8BA5A4", Offset = "0x8BA5A4", VA = "0x8BA5A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002197")]
		private const float TimeToReleaseInPool = 15f;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Renderer> renderers;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SlowingController slowingController;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ExplodeObject iceToBeBroken;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private IceExplosionParticlesController iceExplosionParticlesController;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<GameObject> objectsToDisable;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EnemyEnableController enemyEnableController;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IceMaterialAnimator iceMaterialAnimator;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WolfSoundController wolfSoundController;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WolfAnimatorController wolfAnimatorController;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isLocallyExploded;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material iceMaterial;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material defaultMaterial;

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x8B99B8", Offset = "0x8B99B8", VA = "0x8B99B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x8B9A10", Offset = "0x8B9A10", VA = "0x8B9A10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x8B9A68", Offset = "0x8B9A68", VA = "0x8B9A68", Slot = "5")]
		public void Freeze()
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x8B9CD0", Offset = "0x8B9CD0", VA = "0x8B9CD0", Slot = "6")]
		public void Break(Vector3 breakDirection)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x8B9AC8", Offset = "0x8B9AC8", VA = "0x8B9AC8")]
		private void StartIceCreatingProcess()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x8B9FC0", Offset = "0x8B9FC0", VA = "0x8B9FC0")]
		[ContextMenu("Collect Renderers")]
		public void CollectRenderers()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x8B9F4C", Offset = "0x8B9F4C", VA = "0x8B9F4C")]
		private IEnumerator ReturnToPool()
		{
			return null;
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x8B9C5C", Offset = "0x8B9C5C", VA = "0x8B9C5C")]
		private IEnumerator BreakIntoIcePartsDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x8BA08C", Offset = "0x8BA08C", VA = "0x8BA08C")]
		public void SetReferences(List<Renderer> _renderers, ExplodeObject _iceToBeBroken, Material _iceMaterial, Material _defaultMaterial, List<GameObject> _objectsToDisable, WolfAnimatorController _wolfAnimatorController, WolfSoundController _wolfSoundController)
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x8BA130", Offset = "0x8BA130", VA = "0x8BA130", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x8BA370", Offset = "0x8BA370", VA = "0x8BA370")]
		public WolfBreakController()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x8BA378", Offset = "0x8BA378", VA = "0x8BA378")]
		private void <ResetElement>b__23_2(Renderer renderer)
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public class ArrowsRemover : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005E8")]
		private sealed class <>c
		{
			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<ArrowResetController> <>9__8_0;

			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0x8BAE2C", Offset = "0x8BAE2C", VA = "0x8BAE2C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0x8BAE34", Offset = "0x8BAE34", VA = "0x8BAE34")]
			internal bool <RemoveExcessiveArrows>b__8_0(ArrowResetController arrow)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ArrowsRemover instance;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int maxNumberOfArrows;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ArrowResetController> arrowsRemovers;

		[Token(Token = "0x17000315")]
		public static ArrowsRemover Instance
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x8BA6BC", Offset = "0x8BA6BC", VA = "0x8BA6BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x8BA77C", Offset = "0x8BA77C", VA = "0x8BA77C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x8BA890", Offset = "0x8BA890", VA = "0x8BA890")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x8BA910", Offset = "0x8BA910", VA = "0x8BA910")]
		private void SetNewArrow(GameObject arrow)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x8BAB34", Offset = "0x8BAB34", VA = "0x8BAB34")]
		public void RemoveExcessiveArrows()
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x8BAA00", Offset = "0x8BAA00", VA = "0x8BAA00")]
		public void AddNewArrow(GameObject arrow)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x8BACA4", Offset = "0x8BACA4", VA = "0x8BACA4")]
		public void RemoveArrow(ArrowResetController arrowResetController)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x8BAD34", Offset = "0x8BAD34", VA = "0x8BAD34")]
		public ArrowsRemover()
		{
		}
	}
	[Token(Token = "0x20005E9")]
	public class ArrowColorSetter : MonoBehaviour, IResetable
	{
		[Token(Token = "0x20005EA")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerControllerCore playerControllerCore;

			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ArrowColorSetter <>4__this;

			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0x8BB008", Offset = "0x8BB008", VA = "0x8BB008")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0x8BB010", Offset = "0x8BB010", VA = "0x8BB010")]
			internal bool <SetArrowColorCoroutine>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005EB")]
		private sealed class <SetArrowColorCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArrowColorSetter <>4__this;

			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass4_0 <>8__1;

			[Token(Token = "0x17000316")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F03")]
				[Address(RVA = "0x8BB2A8", Offset = "0x8BB2A8", VA = "0x8BB2A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000317")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F04")]
				[Address(RVA = "0x8BB2B0", Offset = "0x8BB2B0", VA = "0x8BB2B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F00")]
			[Address(RVA = "0x8BAFD0", Offset = "0x8BAFD0", VA = "0x8BAFD0")]
			[DebuggerHidden]
			public <SetArrowColorCoroutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001F01")]
			[Address(RVA = "0x8BB0F0", Offset = "0x8BB0F0", VA = "0x8BB0F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F02")]
			[Address(RVA = "0x8BB0F4", Offset = "0x8BB0F4", VA = "0x8BB0F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer arrowMeshRenderer;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PhotonView photonView;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isColorSet;

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x8BAE90", Offset = "0x8BAE90", VA = "0x8BAE90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x8BAF5C", Offset = "0x8BAF5C", VA = "0x8BAF5C")]
		private IEnumerator SetArrowColorCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x8BAFF8", Offset = "0x8BAFF8", VA = "0x8BAFF8", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x8BB000", Offset = "0x8BB000", VA = "0x8BB000")]
		public ArrowColorSetter()
		{
		}
	}
	[Token(Token = "0x20005EC")]
	public class GameOverStats : GameOverStatsCore
	{
		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotonView helmet;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int localPlayerOwnerID;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string localPlayerDisplayName;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int attacksDodgedCount;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int sniperShotCount;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int arrowsFiredCount;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int arrowsHitCount;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int closeCallKillCount;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float totalMagicDmgDealt;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float totalDmgDealt;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float totalBossDmgDealt;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int airUnitsHitCount;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool castleDied;

		[Token(Token = "0x17000318")]
		public override int LocalPlayerGameObjectID
		{
			[Token(Token = "0x6001F05")]
			[Address(RVA = "0x8BB2B8", Offset = "0x8BB2B8", VA = "0x8BB2B8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000319")]
		public override string LocalPlayerDisplayName
		{
			[Token(Token = "0x6001F06")]
			[Address(RVA = "0x8BB2C0", Offset = "0x8BB2C0", VA = "0x8BB2C0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		public override int AttacksDodgedCount
		{
			[Token(Token = "0x6001F07")]
			[Address(RVA = "0x8BB2C8", Offset = "0x8BB2C8", VA = "0x8BB2C8", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031B")]
		public override int SniperShotCount
		{
			[Token(Token = "0x6001F08")]
			[Address(RVA = "0x8BB2D0", Offset = "0x8BB2D0", VA = "0x8BB2D0", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031C")]
		public override int ArrowsFiredCount
		{
			[Token(Token = "0x6001F09")]
			[Address(RVA = "0x8BB2D8", Offset = "0x8BB2D8", VA = "0x8BB2D8", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031D")]
		public override int ArrowsHitCount
		{
			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0x8BB2E0", Offset = "0x8BB2E0", VA = "0x8BB2E0", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031E")]
		public override int CloseCallKillCount
		{
			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0x8BB2E8", Offset = "0x8BB2E8", VA = "0x8BB2E8", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031F")]
		public override float TotalMagicDmgDealt
		{
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x8BB2F0", Offset = "0x8BB2F0", VA = "0x8BB2F0", Slot = "11")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000320")]
		public override float TotalDmgDealt
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x8BB2F8", Offset = "0x8BB2F8", VA = "0x8BB2F8", Slot = "12")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000321")]
		public override float TotalBossDmgDealt
		{
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x8BB300", Offset = "0x8BB300", VA = "0x8BB300", Slot = "13")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000322")]
		public override int AirUnitsHitCount
		{
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x8BB308", Offset = "0x8BB308", VA = "0x8BB308", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x8BB310", Offset = "0x8BB310", VA = "0x8BB310")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x8BB688", Offset = "0x8BB688", VA = "0x8BB688")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x8BBA6C", Offset = "0x8BBA6C", VA = "0x8BBA6C")]
		public void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x8BBA78", Offset = "0x8BBA78", VA = "0x8BBA78")]
		private void OnEnemyHit(float maxHealth, EnemyInfo enemyInfo, HitInfoAbstract hitinfo, float damageDone)
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x8BBB64", Offset = "0x8BBB64", VA = "0x8BBB64")]
		private void CountAttacksIn(int playerID)
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x8BBD00", Offset = "0x8BBD00", VA = "0x8BBD00")]
		[PunRPC]
		public void RPCCountAttacksIn(int playerID)
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x8BBD84", Offset = "0x8BBD84", VA = "0x8BBD84")]
		private void PlayerGotHit(int playerID)
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x8BBE08", Offset = "0x8BBE08", VA = "0x8BBE08")]
		private void CountSniperShot(int playerID)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x8BBFA4", Offset = "0x8BBFA4", VA = "0x8BBFA4")]
		[PunRPC]
		public void RPCCountSniperShot(int playerID)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x8BBB24", Offset = "0x8BBB24", VA = "0x8BBB24")]
		private void CountAirUnitHits()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x8BC028", Offset = "0x8BC028", VA = "0x8BC028")]
		private void CountCloseCallKills(int playerID)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x8BC1C4", Offset = "0x8BC1C4", VA = "0x8BC1C4")]
		[PunRPC]
		public void RPCCountCloseCallKill(int playerID)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x8BBB44", Offset = "0x8BBB44", VA = "0x8BBB44")]
		private void CountMagicDamage(float damage)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x8BBB34", Offset = "0x8BBB34", VA = "0x8BBB34")]
		private void CountBossDamage(float damage)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x8BC248", Offset = "0x8BC248", VA = "0x8BC248")]
		private void CountArrowFired(GameObject arrow)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x8BBB54", Offset = "0x8BBB54", VA = "0x8BBB54")]
		private void CountArrowHit()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x8BC338", Offset = "0x8BC338", VA = "0x8BC338", Slot = "15")]
		public override string GetNumbers()
		{
			return null;
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x8BC984", Offset = "0x8BC984", VA = "0x8BC984")]
		public void SendStatsToMaster()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x8BCE98", Offset = "0x8BCE98", VA = "0x8BCE98")]
		[PunRPC]
		public void RPCSendStatsRequestFromMaster()
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x8BCA64", Offset = "0x8BCA64", VA = "0x8BCA64")]
		public void PassDataToMaster()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x8BCE9C", Offset = "0x8BCE9C", VA = "0x8BCE9C")]
		[PunRPC]
		public void RPCPassDataToMaster(int localPlayerOwnerID, string localPlayerDisplayName, int attacksDodgedCount, int sniperShotCount, int arrowsFiredCount, int arrowsHitCount, int closeCallKillCount, float totalMagicDmgDealt, float totalDmgDealt, float totalBossDmgDealt, int airUnitsHitCount)
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x8BCF2C", Offset = "0x8BCF2C", VA = "0x8BCF2C")]
		public GameOverStats()
		{
		}
	}
	[Token(Token = "0x20005ED")]
	public class MenuController : MonoBehaviourPun
	{
		[Serializable]
		[Token(Token = "0x20005EE")]
		private sealed class <>c
		{
			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<GameObject> <>9__26_0;

			[Token(Token = "0x6001F38")]
			[Address(RVA = "0x8BD97C", Offset = "0x8BD97C", VA = "0x8BD97C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F39")]
			[Address(RVA = "0x8BD984", Offset = "0x8BD984", VA = "0x8BD984")]
			internal void <ShowMenu>b__26_0(GameObject item)
			{
			}
		}

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool inputEnabled;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject menuGameObject;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject startButton;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject continueButton;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject waitingForHostToStartTheGameText;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text infoText;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<GameObject> windows;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject mainWindow;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LevelUI levelUI;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected InputActionReference leftInteractionInput;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected InputActionReference rightInteractionInput;

		[Token(Token = "0x40021D6")]
		private const string cartDeliveredText = "Cart successfully delivered!";

		[Token(Token = "0x40021D7")]
		private const string cartDestroyedText = "Cart destroyed!";

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MenuController instance;

		[Token(Token = "0x17000323")]
		public static MenuController Instance
		{
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x8BCF84", Offset = "0x8BCF84", VA = "0x8BCF84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		public bool IsMenuOpened
		{
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x8BD044", Offset = "0x8BD044", VA = "0x8BD044")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x8BD060", Offset = "0x8BD060", VA = "0x8BD060")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x8BD11C", Offset = "0x8BD11C", VA = "0x8BD11C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x8BD210", Offset = "0x8BD210", VA = "0x8BD210")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x8BD304", Offset = "0x8BD304", VA = "0x8BD304")]
		private void TryToggleMenu(InputAction.CallbackContext callbackContext)
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x8BD314", Offset = "0x8BD314", VA = "0x8BD314")]
		private void ToggleMenu()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x8BD57C", Offset = "0x8BD57C", VA = "0x8BD57C")]
		public void SetMasterStartMenu()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x8BD5B4", Offset = "0x8BD5B4", VA = "0x8BD5B4")]
		public void SetNonMasterStartMenu()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x8BD5EC", Offset = "0x8BD5EC", VA = "0x8BD5EC")]
		public void SwitchToDuringGameMenu()
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x8BD3EC", Offset = "0x8BD3EC", VA = "0x8BD3EC")]
		public void ShowMenu()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x8BD34C", Offset = "0x8BD34C", VA = "0x8BD34C")]
		public void HideMenu()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x8BD75C", Offset = "0x8BD75C", VA = "0x8BD75C")]
		public void ShowDeathMenu(string deathInfo)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x8BD7B8", Offset = "0x8BD7B8", VA = "0x8BD7B8")]
		public void ShowCartDeliveredMenu()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x8BD850", Offset = "0x8BD850", VA = "0x8BD850")]
		public void ShowCartDestroyedMenu()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x8BD8E8", Offset = "0x8BD8E8", VA = "0x8BD8E8")]
		public void SetLevelUI()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x8BD904", Offset = "0x8BD904", VA = "0x8BD904")]
		public MenuController()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	public class PlayerController : PlayerControllerCore, IPunObservable
	{
		[Serializable]
		[Token(Token = "0x20005F0")]
		private sealed class <>c
		{
			[Token(Token = "0x40021F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__99_0;

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x8BF9DC", Offset = "0x8BF9DC", VA = "0x8BF9DC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x8BF9E4", Offset = "0x8BF9E4", VA = "0x8BF9E4")]
			internal bool <DelayedPlayerObjectDisposal>b__99_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005F1")]
		private sealed class <DelayedPlayerObjectDisposal>d__99 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerController <>4__this;

			[Token(Token = "0x17000338")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F7B")]
				[Address(RVA = "0x8BFB64", Offset = "0x8BFB64", VA = "0x8BFB64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000339")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F7C")]
				[Address(RVA = "0x8BFB6C", Offset = "0x8BFB6C", VA = "0x8BFB6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x8BF324", Offset = "0x8BF324", VA = "0x8BF324")]
			[DebuggerHidden]
			public <DelayedPlayerObjectDisposal>d__99(int <>1__state)
			{
			}

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x8BFA04", Offset = "0x8BFA04", VA = "0x8BFA04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x8BFA08", Offset = "0x8BFA08", VA = "0x8BFA08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FloatTextCanvas playerNameText;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TeleportPlatformHolder teleportPlatformHolder;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform playerRig;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VoiceChatPlayerController voiceChatPlayerController;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform headTransform;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PlayerColorSetter playerColorSetter;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MeshRenderer helmetMeshRenderer;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SpellSelectController spellSelectController;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SpellSelectController leftHandedSpellSelectController;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private HandsDominanceSwitcher handsDominanceSwitcher;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private PlayerModelFadingController playerModelFadingController;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int playerId;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string tournamentPersistentID;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string playerName;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool haveDisabledCameraForBot;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float score;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int deaths;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int kills;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int orderOfLastHit;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera cachedCamera;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool isGameOver;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool <Disposed>k__BackingField;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float <Level>k__BackingField;

		[Token(Token = "0x17000325")]
		public override bool Disposed
		{
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0x8BDDA8", Offset = "0x8BDDA8", VA = "0x8BDDA8", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0x8BDDB0", Offset = "0x8BDDB0", VA = "0x8BDDB0", Slot = "19")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public string TournamentPersistentID
		{
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0x8BDDBC", Offset = "0x8BDDBC", VA = "0x8BDDBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		public override PlayerColorSetter PlayerColorSetter
		{
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x8BDDC4", Offset = "0x8BDDC4", VA = "0x8BDDC4", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F44")]
			[Address(RVA = "0x8BDDCC", Offset = "0x8BDDCC", VA = "0x8BDDCC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public override float Level
		{
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x8BDDD4", Offset = "0x8BDDD4", VA = "0x8BDDD4", Slot = "16")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x8BDDDC", Offset = "0x8BDDDC", VA = "0x8BDDDC", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public override Transform HeadTransform
		{
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x8BDDE4", Offset = "0x8BDDE4", VA = "0x8BDDE4", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		public PlayerDeathController PlayerDeathController
		{
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0x8A99C0", Offset = "0x8A99C0", VA = "0x8A99C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x8BDDEC", Offset = "0x8BDDEC", VA = "0x8BDDEC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public override int PlayerId
		{
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x8BDDF4", Offset = "0x8BDDF4", VA = "0x8BDDF4", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0x8BDDFC", Offset = "0x8BDDFC", VA = "0x8BDDFC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public override float Score
		{
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0x8BDEA8", Offset = "0x8BDEA8", VA = "0x8BDEA8", Slot = "10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x8BDEB0", Offset = "0x8BDEB0", VA = "0x8BDEB0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		public override int Deaths
		{
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x8BDECC", Offset = "0x8BDECC", VA = "0x8BDECC", Slot = "14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x8BDED4", Offset = "0x8BDED4", VA = "0x8BDED4", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		public override int Hits
		{
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x8BDF38", Offset = "0x8BDF38", VA = "0x8BDF38", Slot = "12")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x8BDF40", Offset = "0x8BDF40", VA = "0x8BDF40", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x1700032F")]
		public override int OrderOfLastHit
		{
			[Token(Token = "0x6001F52")]
			[Address(RVA = "0x8BE048", Offset = "0x8BE048", VA = "0x8BE048", Slot = "20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0x8BE050", Offset = "0x8BE050", VA = "0x8BE050", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		public bool CanCastSpells
		{
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x8BE05C", Offset = "0x8BE05C", VA = "0x8BE05C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x8BE0E0", Offset = "0x8BE0E0", VA = "0x8BE0E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000331")]
		public TeleportCollider ActualTeleportPlatform
		{
			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x8B38A8", Offset = "0x8B38A8", VA = "0x8B38A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		public override bool IsPlayerDead
		{
			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x8BE124", Offset = "0x8BE124", VA = "0x8BE124", Slot = "22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000333")]
		public override string Name
		{
			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x8BE144", Offset = "0x8BE144", VA = "0x8BE144", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x8BE14C", Offset = "0x8BE14C", VA = "0x8BE14C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public override VoiceChatPlayerController VoiceChatPlayerController
		{
			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x8BE1A8", Offset = "0x8BE1A8", VA = "0x8BE1A8", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		public override TeleportPlatformHolder TeleportPlatformHolder
		{
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0x8BE1B0", Offset = "0x8BE1B0", VA = "0x8BE1B0", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		public override Transform PlayerRig
		{
			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x8BE1B8", Offset = "0x8BE1B8", VA = "0x8BE1B8", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		public override PlayerModelFadingController PlayerModelFadingController
		{
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0x8BE1C0", Offset = "0x8BE1C0", VA = "0x8BE1C0", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000040")]
		public override event Action OnLocalPlayerKillsNumberChange
		{
			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0x8BD9A0", Offset = "0x8BD9A0", VA = "0x8BD9A0", Slot = "28")]
			add
			{
			}
			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0x8BDA3C", Offset = "0x8BDA3C", VA = "0x8BDA3C", Slot = "29")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public override event Action OnLocalPlayerDeathsNumberChange
		{
			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0x8BDAD8", Offset = "0x8BDAD8", VA = "0x8BDAD8", Slot = "30")]
			add
			{
			}
			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0x8BDB74", Offset = "0x8BDB74", VA = "0x8BDB74", Slot = "31")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public static event Action<PlayerControllerCore> OnPlayerIdSet
		{
			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0x8BDC10", Offset = "0x8BDC10", VA = "0x8BDC10")]
			add
			{
			}
			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0x8BDCDC", Offset = "0x8BDCDC", VA = "0x8BDCDC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x8BE1C8", Offset = "0x8BE1C8", VA = "0x8BE1C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x8BE32C", Offset = "0x8BE32C", VA = "0x8BE32C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x8BE424", Offset = "0x8BE424", VA = "0x8BE424")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x8BE874", Offset = "0x8BE874", VA = "0x8BE874")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x8BEC7C", Offset = "0x8BEC7C", VA = "0x8BEC7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x8BAB14", Offset = "0x8BAB14", VA = "0x8BAB14")]
		public int GetPlayerToThrowAtObjectID()
		{
			return default(int);
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x8BED44", Offset = "0x8BED44", VA = "0x8BED44")]
		public void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x8BEDA4", Offset = "0x8BEDA4", VA = "0x8BEDA4")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x8BD638", Offset = "0x8BD638", VA = "0x8BD638")]
		public void ActivateControllers()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x8BD6C0", Offset = "0x8BD6C0", VA = "0x8BD6C0")]
		public void ActivateBow()
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x8BF0E4", Offset = "0x8BF0E4", VA = "0x8BF0E4")]
		private void ActivateGestures()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x8BED74", Offset = "0x8BED74", VA = "0x8BED74")]
		private void SetPlayerNameTextVisibility(bool shouldBeVisible)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x8BF1B4", Offset = "0x8BF1B4", VA = "0x8BF1B4")]
		private void RespawnPlayer()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x8BF1F0", Offset = "0x8BF1F0", VA = "0x8BF1F0")]
		private void SetPlayableHandsOnDeathEnd()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x8BF234", Offset = "0x8BF234", VA = "0x8BF234")]
		private void SetPlayableHandsOnPauseClosed()
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x8BE174", Offset = "0x8BE174", VA = "0x8BE174")]
		private void UpdatePlayerNameFloatingText()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x8BF268", Offset = "0x8BF268", VA = "0x8BF268")]
		private void SetGameOver()
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x8BF274", Offset = "0x8BF274", VA = "0x8BF274")]
		private void RestartGame()
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x8BF2B0", Offset = "0x8BF2B0", VA = "0x8BF2B0")]
		private IEnumerator DelayedPlayerObjectDisposal()
		{
			return null;
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x8BF34C", Offset = "0x8BF34C", VA = "0x8BF34C")]
		private void DisposeOffPlayer()
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x8BF3C0", Offset = "0x8BF3C0", VA = "0x8BF3C0")]
		public void SetReferences(PlayerDeathController _playerDeathController)
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x8BF3C8", Offset = "0x8BF3C8", VA = "0x8BF3C8", Slot = "32")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x8BF95C", Offset = "0x8BF95C", VA = "0x8BF95C")]
		public PlayerController()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	public class PlayerInitializer : MonoBehaviourPun, IResetable
	{
		[Token(Token = "0x20005F3")]
		private sealed class <InitializeRemotePlayer>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerInitializer <>4__this;

			[Token(Token = "0x1700033A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F8E")]
				[Address(RVA = "0x8D37E8", Offset = "0x8D37E8", VA = "0x8D37E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F8F")]
				[Address(RVA = "0x8D37F0", Offset = "0x8D37F0", VA = "0x8D37F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x8D36B4", Offset = "0x8D36B4", VA = "0x8D36B4")]
			[DebuggerHidden]
			public <InitializeRemotePlayer>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x8D36DC", Offset = "0x8D36DC", VA = "0x8D36DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x8D36E0", Offset = "0x8D36E0", VA = "0x8D36E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005F4")]
		private sealed class <ResetRecentlyConnectedStatus>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400222A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400222B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerInitializer <>4__this;

			[Token(Token = "0x1700033C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F93")]
				[Address(RVA = "0x8D38E4", Offset = "0x8D38E4", VA = "0x8D38E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F94")]
				[Address(RVA = "0x8D38EC", Offset = "0x8D38EC", VA = "0x8D38EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x8D37F8", Offset = "0x8D37F8", VA = "0x8D37F8")]
			[DebuggerHidden]
			public <ResetRecentlyConnectedStatus>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x8D3820", Offset = "0x8D3820", VA = "0x8D3820", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x8D3824", Offset = "0x8D3824", VA = "0x8D3824", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005F5")]
		private sealed class <InitializeOculusRig>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400222E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400222F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerInitializer <>4__this;

			[Token(Token = "0x1700033E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F98")]
				[Address(RVA = "0x8D3A90", Offset = "0x8D3A90", VA = "0x8D3A90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F99")]
				[Address(RVA = "0x8D3A98", Offset = "0x8D3A98", VA = "0x8D3A98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x8D38F4", Offset = "0x8D38F4", VA = "0x8D38F4")]
			[DebuggerHidden]
			public <InitializeOculusRig>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x8D391C", Offset = "0x8D391C", VA = "0x8D391C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x8D3920", Offset = "0x8D3920", VA = "0x8D3920", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<PlayerInitializer, bool> OnIsUsedChange;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject OVRCameraRig;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerManager controllerManager;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioListener audioListener;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PlayerController observer;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject helm;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isRecentlyConnected;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float delayBeforeConnected;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VRSDK platformType;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RoomScaleHolder roomScaleHolder;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool hasBeenInitializedWithoutPlayerBefore;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject CamerasParent;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool isDeathMatch;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private PlayerController playerController;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TeleportPlatformHolder teleportPlatformHolder;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameOverStats gameOverStats;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private PlayerNameTextEnabler playerNameTextEnabler;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private PlatformTypeContainer platformTypeContainer;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private HandsDominanceSwitcher handsDominanceSwitcher;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private HandsController rightHandedHandsController;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private HandsController leftHandedHandsController;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private SpellSelectController rightHandSpellSelectController;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private SpellSelectController leftHandSpellSelectController;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private BowController rightHandBowController;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private BowController leftHandBowController;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TorsoEnabler torsoEnabler;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private EquipmentChanger equipmentChangerRightHanded;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private EquipmentChanger equipmentChangerLeftHanded;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TorsoTracker torsoTracker;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private OffsetSetter offsetSetterRightHand;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private OffsetSetter offsetSetterLeftHand;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GesturesInputController gesturesInputControllerRightHand;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GesturesInputController gesturesInputControllerLeftHand;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private SteamVR_LaserPointer steamVR_LaserPointerRightHand;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private SteamVR_LaserPointer steamVR_LaserPointerLeftHand;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private HandPickUpController leftHandPickUpController;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private HandPickUpController rightHandPickUpController;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private CameraEnabler cameraEnabler;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private VoiceChatPlayerController voiceChatController;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private PlayerJoiningScreenController loadingController;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private RainController rainController;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private PlayerModelFadingController playerModelFadingController;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private PlayerDeathController playerDeathController;

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x8BFB74", Offset = "0x8BFB74", VA = "0x8BFB74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x8BFE90", Offset = "0x8BFE90", VA = "0x8BFE90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x8BFEE8", Offset = "0x8BFEE8", VA = "0x8BFEE8")]
		public void InitializeWithoutPlayer()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x8BFBD4", Offset = "0x8BFBD4", VA = "0x8BFBD4")]
		public void InitializeWithPlayer()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x8C0254", Offset = "0x8C0254", VA = "0x8C0254")]
		private void InitializeComponentsWithPlayer(bool isLocalPlayer)
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x8C0410", Offset = "0x8C0410", VA = "0x8C0410")]
		private void InitializePlayerModelFadingController()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x8C04FC", Offset = "0x8C04FC", VA = "0x8C04FC")]
		public void ShowWaitForMaster()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x8C01E0", Offset = "0x8C01E0", VA = "0x8C01E0")]
		private IEnumerator InitializeRemotePlayer()
		{
			return null;
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x8C00D8", Offset = "0x8C00D8", VA = "0x8C00D8")]
		private IEnumerator ResetRecentlyConnectedStatus(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x8C015C", Offset = "0x8C015C", VA = "0x8C015C")]
		private IEnumerator InitializeOculusRig(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x8C051C", Offset = "0x8C051C", VA = "0x8C051C")]
		public void SetReferences(PlayerDeathController _playerDeathController)
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x8C052C", Offset = "0x8C052C", VA = "0x8C052C", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x8C0530", Offset = "0x8C0530", VA = "0x8C0530")]
		public PlayerInitializer()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x8C0540", Offset = "0x8C0540", VA = "0x8C0540")]
		private bool <InitializeRemotePlayer>b__50_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005F6")]
	public class CarriageReferencesSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CarriageCartBehaviourController carriageCartBehaviourController;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PhotonView rootPhotonView;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CarriageReferences carriageReferencesMobile;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CarriageReferences carriageReferencesPC;

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x8D3AA0", Offset = "0x8D3AA0", VA = "0x8D3AA0", Slot = "4")]
		[ContextMenu("Set references")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x8D3B64", Offset = "0x8D3B64", VA = "0x8D3B64")]
		private void SetReferences(CarriageReferences carriageReferences)
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x8D3BE0", Offset = "0x8D3BE0", VA = "0x8D3BE0")]
		public CarriageReferencesSetter()
		{
		}
	}
	[Token(Token = "0x20005F7")]
	public class DwarfsAttackTargetController : MonoBehaviour, IAttackTarget
	{
		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PhotonView targetView;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfController[] dwarfControllers;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DwarfsSoundController dwarfsSoundController;

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x8D3BE8", Offset = "0x8D3BE8", VA = "0x8D3BE8", Slot = "5")]
		public void GetHit(AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x8D3D58", Offset = "0x8D3D58", VA = "0x8D3D58", Slot = "4")]
		public int GetPhotonID()
		{
			return default(int);
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x8D3C7C", Offset = "0x8D3C7C", VA = "0x8D3C7C")]
		private void PlayDwarfBlockAnimation(AttackInfo attackInfo)
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x8D3D74", Offset = "0x8D3D74", VA = "0x8D3D74")]
		public DwarfsAttackTargetController()
		{
		}
	}
	[Token(Token = "0x20005F8")]
	public class PayloadTeleportController : PayloadTeleportControllerCore, IInRoomCallbacks
	{
		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PayloadStageController payloadStageController;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int numberOfPlatforms;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<TeleportCollider> currentTeleportColliders;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isWaitingForMove;

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x8D3D7C", Offset = "0x8D3D7C", VA = "0x8D3D7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x8D3E2C", Offset = "0x8D3E2C", VA = "0x8D3E2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x8D3EDC", Offset = "0x8D3EDC", VA = "0x8D3EDC", Slot = "4")]
		public override void MovePlayers(List<TeleportCollider> teleports)
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x8D4198", Offset = "0x8D4198", VA = "0x8D4198")]
		private TeleportCollider MovePlayerOnNetwork(PlayerControllerCore playerControllerCore, List<TeleportCollider> teleportColliders)
		{
			return null;
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x8D4528", Offset = "0x8D4528", VA = "0x8D4528")]
		[PunRPC]
		private void RPCMovePlayer(int teleportIndex)
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x8D431C", Offset = "0x8D431C", VA = "0x8D431C")]
		private TeleportCollider GetAppropriatePlatformForPlayer(Transform playerTransform, List<TeleportCollider> teleportColliders)
		{
			return null;
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x8D459C", Offset = "0x8D459C", VA = "0x8D459C")]
		private void HandleNewPlayerWhenJoin(PlayerControllerCore playerController)
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x8D45DC", Offset = "0x8D45DC", VA = "0x8D45DC")]
		private static bool IsInPropperState(PlayerControllerCore playerController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x8D4684", Offset = "0x8D4684", VA = "0x8D4684", Slot = "9")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x8D46E8", Offset = "0x8D46E8", VA = "0x8D46E8", Slot = "5")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x8D46EC", Offset = "0x8D46EC", VA = "0x8D46EC", Slot = "6")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x8D46F0", Offset = "0x8D46F0", VA = "0x8D46F0", Slot = "7")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x8D46F4", Offset = "0x8D46F4", VA = "0x8D46F4", Slot = "8")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x8D46F8", Offset = "0x8D46F8", VA = "0x8D46F8")]
		public PayloadTeleportController()
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public class StageTeleporter : MonoBehaviour
	{
		[Token(Token = "0x20005FA")]
		public delegate void PlayerTeleported();

		[Token(Token = "0x20005FB")]
		private sealed class <TeleportAfterDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public StageTeleporter <>4__this;

			[Token(Token = "0x17000340")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FBC")]
				[Address(RVA = "0x8D5008", Offset = "0x8D5008", VA = "0x8D5008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000341")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FBD")]
				[Address(RVA = "0x8D5010", Offset = "0x8D5010", VA = "0x8D5010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x8D4A90", Offset = "0x8D4A90", VA = "0x8D4A90")]
			[DebuggerHidden]
			public <TeleportAfterDelay>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x8D4DA8", Offset = "0x8D4DA8", VA = "0x8D4DA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x8D4DAC", Offset = "0x8D4DAC", VA = "0x8D4DAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005FC")]
		private sealed class <TextAnimation>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int timeToTeleport;

			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FloatTextCanvas text;

			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public StageTeleporter <>4__this;

			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <time>5__2;

			[Token(Token = "0x17000342")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FC1")]
				[Address(RVA = "0x8D524C", Offset = "0x8D524C", VA = "0x8D524C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000343")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FC2")]
				[Address(RVA = "0x8D5254", Offset = "0x8D5254", VA = "0x8D5254", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x8D4B50", Offset = "0x8D4B50", VA = "0x8D4B50")]
			[DebuggerHidden]
			public <TextAnimation>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x8D5018", Offset = "0x8D5018", VA = "0x8D5018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x8D501C", Offset = "0x8D501C", VA = "0x8D501C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400223C")]
		private const float distanceFromPlayer = 2f;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<TeleportCollider> teleports;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatTextCanvas timeToTeleportText;

		[Token(Token = "0x14000043")]
		public static event PlayerTeleported OnPlayerTeleported
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x8D4708", Offset = "0x8D4708", VA = "0x8D4708")]
			add
			{
			}
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x8D47C0", Offset = "0x8D47C0", VA = "0x8D47C0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x8D4878", Offset = "0x8D4878", VA = "0x8D4878")]
		public void TeleportAfterDelay(float delay, List<TeleportCollider> teleports)
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x8D4A0C", Offset = "0x8D4A0C", VA = "0x8D4A0C")]
		private IEnumerator TeleportAfterDelay(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x8D48CC", Offset = "0x8D48CC", VA = "0x8D48CC")]
		private void ShowMessage(float timeToDestroyText)
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x8D4AB8", Offset = "0x8D4AB8", VA = "0x8D4AB8")]
		private IEnumerator TextAnimation(FloatTextCanvas text, int timeToTeleport)
		{
			return null;
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x8D4B78", Offset = "0x8D4B78", VA = "0x8D4B78")]
		private bool IsPlayerOnWrongPlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x8D4C40", Offset = "0x8D4C40", VA = "0x8D4C40")]
		public StageTeleporter()
		{
		}
	}
	[Token(Token = "0x20005FD")]
	public class PlayerMaterialsColorSetterMobile : PlayerMaterialsColorSetter, IResetable
	{
		[Token(Token = "0x20005FE")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool shouldBeGhost;

			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayerMaterialsColorSetterMobile <>4__this;

			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0x8D5864", Offset = "0x8D5864", VA = "0x8D5864")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0x8D586C", Offset = "0x8D586C", VA = "0x8D586C")]
			internal void <SetIsUsingGhostMaterialsAsync>b__0(Renderer item)
			{
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x8D58AC", Offset = "0x8D58AC", VA = "0x8D58AC")]
			internal void <SetIsUsingGhostMaterialsAsync>b__1(Renderer item)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005FF")]
		private struct <SetIsUsingGhostMaterialsAsync>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400225D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool shouldBeGhost;

			[Token(Token = "0x400225E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayerMaterialsColorSetterMobile <>4__this;

			[Token(Token = "0x400225F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass19_0 <>8__1;

			[Token(Token = "0x4002260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x8D58EC", Offset = "0x8D58EC", VA = "0x8D58EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0x8D5CFC", Offset = "0x8D5CFC", VA = "0x8D5CFC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000600")]
		private sealed class <Initialize>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerMaterialsColorSetterMobile <>4__this;

			[Token(Token = "0x17000344")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FD8")]
				[Address(RVA = "0x8D60F4", Offset = "0x8D60F4", VA = "0x8D60F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000345")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD9")]
				[Address(RVA = "0x8D60FC", Offset = "0x8D60FC", VA = "0x8D60FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x8D564C", Offset = "0x8D564C", VA = "0x8D564C")]
			[DebuggerHidden]
			public <Initialize>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x8D5D08", Offset = "0x8D5D08", VA = "0x8D5D08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x8D5D0C", Offset = "0x8D5D0C", VA = "0x8D5D0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000601")]
		private sealed class <>c
		{
			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Renderer> <>9__23_0;

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0x8D6174", Offset = "0x8D6174", VA = "0x8D6174")]
			public <>c()
			{
			}

			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0x8D617C", Offset = "0x8D617C", VA = "0x8D617C")]
			internal bool <GetRenderers>b__23_0(Renderer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400224A")]
		private const int helmetInitializationDelay = 10;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerController _playerController;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Renderer> gauntletRenderers;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Renderer> gauntletViveKnucklesWMRRenderers;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer torso;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material torsoInitialMaterial;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private EquipmentChanger equipmentChanger;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material deathMaterial;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshRenderer helmet;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material helmetInitialMaterial;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material handInitialMaterial;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material handInitialViveOrKnucklesMaterial;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool wasHelmetInitialized;

		[Token(Token = "0x14000044")]
		public override event Action<bool> OnMaterialsChanged
		{
			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0x8D525C", Offset = "0x8D525C", VA = "0x8D525C", Slot = "4")]
			add
			{
			}
			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0x8D530C", Offset = "0x8D530C", VA = "0x8D530C", Slot = "5")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public override event Action OnMaterialsInitialized
		{
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x8D53BC", Offset = "0x8D53BC", VA = "0x8D53BC", Slot = "6")]
			add
			{
			}
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x8D5458", Offset = "0x8D5458", VA = "0x8D5458", Slot = "7")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x8D54F4", Offset = "0x8D54F4", VA = "0x8D54F4", Slot = "8")]
		[AsyncStateMachine(typeof(<SetIsUsingGhostMaterialsAsync>d__19))]
		public override void SetIsUsingGhostMaterialsAsync(bool shouldBeGhost)
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x8D55B8", Offset = "0x8D55B8", VA = "0x8D55B8", Slot = "9")]
		public override void InitializeMaterials()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x8D55D8", Offset = "0x8D55D8", VA = "0x8D55D8")]
		public IEnumerator Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x8D5674", Offset = "0x8D5674", VA = "0x8D5674", Slot = "10")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x8D567C", Offset = "0x8D567C", VA = "0x8D567C")]
		[ContextMenu("Get Renders")]
		private void GetRenderers()
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x8D57F8", Offset = "0x8D57F8", VA = "0x8D57F8")]
		public PlayerMaterialsColorSetterMobile()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x8D5800", Offset = "0x8D5800", VA = "0x8D5800")]
		private bool <Initialize>b__21_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x8D581C", Offset = "0x8D581C", VA = "0x8D581C")]
		private void <Initialize>b__21_1(Renderer item)
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x8D5840", Offset = "0x8D5840", VA = "0x8D5840")]
		private void <Initialize>b__21_2(Renderer item)
		{
		}
	}
	[Token(Token = "0x2000602")]
	public class PlayerMaterialsColorSetterPC : PlayerMaterialsColorSetter, IResetable
	{
		[Token(Token = "0x2000603")]
		private sealed class <Initialize>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400227A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400227B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerMaterialsColorSetterPC <>4__this;

			[Token(Token = "0x17000346")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FF0")]
				[Address(RVA = "0x8D6D70", Offset = "0x8D6D70", VA = "0x8D6D70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000347")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FF1")]
				[Address(RVA = "0x8D6D78", Offset = "0x8D6D78", VA = "0x8D6D78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x8D6564", Offset = "0x8D6564", VA = "0x8D6564")]
			[DebuggerHidden]
			public <Initialize>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x8D6950", Offset = "0x8D6950", VA = "0x8D6950", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x8D6954", Offset = "0x8D6954", VA = "0x8D6954", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000604")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x400227C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerMaterialsColorSetterPC <>4__this;

			[Token(Token = "0x400227D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool shouldBeGhost;

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x8D6D80", Offset = "0x8D6D80", VA = "0x8D6D80")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0x8D6D88", Offset = "0x8D6D88", VA = "0x8D6D88")]
			internal void <SetIsUsingGhostMaterialsAsync>b__0(Renderer item)
			{
			}

			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0x8D6DC8", Offset = "0x8D6DC8", VA = "0x8D6DC8")]
			internal void <SetIsUsingGhostMaterialsAsync>b__1(Renderer item)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000605")]
		private struct <SetIsUsingGhostMaterialsAsync>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x400227E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400227F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerMaterialsColorSetterPC <>4__this;

			[Token(Token = "0x4002281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool shouldBeGhost;

			[Token(Token = "0x4002282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass25_0 <>8__1;

			[Token(Token = "0x4002283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x8D6E08", Offset = "0x8D6E08", VA = "0x8D6E08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0x8D7228", Offset = "0x8D7228", VA = "0x8D7228", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000606")]
		private sealed class <>c
		{
			[Token(Token = "0x4002284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Renderer> <>9__30_0;

			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0x8D72A4", Offset = "0x8D72A4", VA = "0x8D72A4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0x8D72AC", Offset = "0x8D72AC", VA = "0x8D72AC")]
			internal bool <GetRenderers>b__30_0(Renderer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002266")]
		private const int helmetInitializationDelay = 10;

		[Token(Token = "0x4002267")]
		private const string nomalMapKey = "_BumpMap";

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerController playerController;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Renderer> gauntletRenderers;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Renderer> gauntletViveKnucklesWMRRenderers;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer torso;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material torsoInitialMaterial;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material torsoDeathMaterial;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material helmetDeathMaterial;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private EquipmentChanger equipmentChanger;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material gauntletGhostMaterial;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material[] gauntletGhostMaterials;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshRenderer helmet;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material helmetInitMaterial;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material gauntletInitMaterial;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material[] gauntletViveWMRInitMaterial;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool areMaterialsInitialized;

		[Token(Token = "0x14000046")]
		public override event Action<bool> OnMaterialsChanged
		{
			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0x8D6238", Offset = "0x8D6238", VA = "0x8D6238", Slot = "4")]
			add
			{
			}
			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0x8D62E8", Offset = "0x8D62E8", VA = "0x8D62E8", Slot = "5")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public override event Action OnMaterialsInitialized
		{
			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0x8D6398", Offset = "0x8D6398", VA = "0x8D6398", Slot = "6")]
			add
			{
			}
			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0x8D6434", Offset = "0x8D6434", VA = "0x8D6434", Slot = "7")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x8D64D0", Offset = "0x8D64D0", VA = "0x8D64D0", Slot = "9")]
		public override void InitializeMaterials()
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x8D64F0", Offset = "0x8D64F0", VA = "0x8D64F0")]
		public IEnumerator Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x8D658C", Offset = "0x8D658C", VA = "0x8D658C", Slot = "8")]
		[AsyncStateMachine(typeof(<SetIsUsingGhostMaterialsAsync>d__25))]
		public override void SetIsUsingGhostMaterialsAsync(bool shouldBeGhost)
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x8D664C", Offset = "0x8D664C", VA = "0x8D664C")]
		private void SetGhostMaterialNormals()
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x8D6728", Offset = "0x8D6728", VA = "0x8D6728")]
		private void SetGauntletGhostMaterial(Renderer renderer, Material material)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x8D6744", Offset = "0x8D6744", VA = "0x8D6744")]
		private void SetMultipleGauntletMaterials(Renderer render, Material[] materials)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x8D6760", Offset = "0x8D6760", VA = "0x8D6760", Slot = "10")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x8D6768", Offset = "0x8D6768", VA = "0x8D6768")]
		[ContextMenu("Get Renders")]
		private void GetRenderers()
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x8D68E4", Offset = "0x8D68E4", VA = "0x8D68E4")]
		public PlayerMaterialsColorSetterPC()
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x8D68EC", Offset = "0x8D68EC", VA = "0x8D68EC")]
		private bool <Initialize>b__24_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x8D6908", Offset = "0x8D6908", VA = "0x8D6908")]
		private void <Initialize>b__24_1(Renderer item)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x8D692C", Offset = "0x8D692C", VA = "0x8D692C")]
		private void <Initialize>b__24_2(Renderer item)
		{
		}
	}
	[Token(Token = "0x2000607")]
	public class PlayerTargetAlertController : MonoBehaviour
	{
		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioItem enemyAlertSound;

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x8D7368", Offset = "0x8D7368", VA = "0x8D7368")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x8D7484", Offset = "0x8D7484", VA = "0x8D7484")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x8D75A0", Offset = "0x8D75A0", VA = "0x8D75A0")]
		public void PlayAlert(PlayerController playerController, Transform transform)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x8D75E8", Offset = "0x8D75E8", VA = "0x8D75E8")]
		public PlayerTargetAlertController()
		{
		}
	}
	[Token(Token = "0x2000608")]
	public class AxeReferenceSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OrcThrowingAxeController orcThrowingAxeController;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OrcFreezeController orcFreezeController;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AxeReferences axeReferencesMOBILE;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AxeReferences axeReferencesPC;

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x8D75F0", Offset = "0x8D75F0", VA = "0x8D75F0", Slot = "4")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x8D7714", Offset = "0x8D7714", VA = "0x8D7714")]
		public AxeReferenceSetter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000609")]
	public class GiantTrollReferences
	{
		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BodyFreezeEffect SlowingEffect;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material BodyMaterial;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinQuality SkinQuality;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyRenderers EnemyRenderers;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShadowCastingMode ShadowCastingMode;

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x8D771C", Offset = "0x8D771C", VA = "0x8D771C")]
		public GiantTrollReferences()
		{
		}
	}
	[Token(Token = "0x200060A")]
	public class GiantTrollReferenceSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SkinnedMeshRenderer skinnedMeshRenderer;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SlowingController slowingController;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnemyAnimatorStateController enemyAnimatorStateController;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BodyDissapearController bodyDissapearController;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GiantTrollReferences trollReferencesMobile;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GiantTrollReferences trollReferencesMobilePC;

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x8D7724", Offset = "0x8D7724", VA = "0x8D7724", Slot = "4")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x8D77E8", Offset = "0x8D77E8", VA = "0x8D77E8")]
		private void SetReferences(GiantTrollReferences references)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x8D78C0", Offset = "0x8D78C0", VA = "0x8D78C0")]
		public GiantTrollReferenceSetter()
		{
		}
	}
	[Token(Token = "0x200060B")]
	public class OrcReferenceSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SlowingController slowingController;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OrcFreezeController orcFreezeController;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BodyDissapearController bodyDissapearController;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IceExplosionParticlesController iceExplosionParticlesController;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OrcAnimatorController orcAnimatorController;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FrozenEnemyBreakOnCollisionController frozenEnemyBreakOnCollisionController;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EnemyAnimatorStateController enemyAnimatorStateController;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private OrcReferences orcReferencesMobile;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private OrcReferences orcReferencesPC;

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x8D78C8", Offset = "0x8D78C8", VA = "0x8D78C8", Slot = "4")]
		[ContextMenu("Set references")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x8D798C", Offset = "0x8D798C", VA = "0x8D798C")]
		private void SetReferences(OrcReferences orcReferences)
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x8D7A50", Offset = "0x8D7A50", VA = "0x8D7A50")]
		public OrcReferenceSetter()
		{
		}
	}
	[Token(Token = "0x200060C")]
	public class PlayerReferenceSetter : MonoBehaviour, ISettable
	{
		[Serializable]
		[Token(Token = "0x200060D")]
		private sealed class <>c
		{
			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<BowToPlatformAdjuster> <>9__12_0;

			[Token(Token = "0x600200B")]
			[Address(RVA = "0x8D7E44", Offset = "0x8D7E44", VA = "0x8D7E44")]
			public <>c()
			{
			}

			[Token(Token = "0x600200C")]
			[Address(RVA = "0x8D7E4C", Offset = "0x8D7E4C", VA = "0x8D7E4C")]
			internal void <SetReferences>b__12_0(BowToPlatformAdjuster x)
			{
			}
		}

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerDeathControllerNetwork playerDeathControllerNetwork;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DeathIndicatorEffectController deathIndicatorEffectController;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerInitializer playerInitializer;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PlayerController playerController;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerColorSetter playerCollorSetter;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<BowToPlatformAdjuster> bowAdjusters;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GlovesFader glovesFader;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PlayerModelFadingController playerModelFadingController;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PlayerDeathUIWave playerDeathUIWave;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private PlayerReferences playerReferencesMobile;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private PlayerReferences playerReferencesPC;

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x8D7A58", Offset = "0x8D7A58", VA = "0x8D7A58", Slot = "4")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x8D7B1C", Offset = "0x8D7B1C", VA = "0x8D7B1C")]
		private void SetReferences(PlayerReferences playerReferences)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x8D7DCC", Offset = "0x8D7DCC", VA = "0x8D7DCC")]
		public PlayerReferenceSetter()
		{
		}
	}
	[Token(Token = "0x200060E")]
	public class WolfReferenceSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SlowingController slowingController;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WolfBreakController wolfBreakController;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WolfAnimatorController wolfAnimatorController;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WolfSoundController wolfSoundController;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BodyDissapearController bodyDissapearController;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private IceExplosionParticlesController iceExplosionParticlesController;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FrozenEnemyBreakOnCollisionController frozenEnemyBreakOnCollisionController;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WolfReferences wolfMobileReferences;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private WolfReferences wolfPCReferences;

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x8D7E64", Offset = "0x8D7E64", VA = "0x8D7E64", Slot = "4")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x8D7F28", Offset = "0x8D7F28", VA = "0x8D7F28")]
		private void SetReferences(WolfReferences wolfReferences)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x8D7FD8", Offset = "0x8D7FD8", VA = "0x8D7FD8")]
		public WolfReferenceSetter()
		{
		}
	}
	[Token(Token = "0x200060F")]
	public class ShowDust : MonoBehaviour
	{
		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool canBePlayed;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider fallTrigger;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HealthStateController healthStateController;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IsInWaterDetector isInWaterDetector;

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x8D7FE0", Offset = "0x8D7FE0", VA = "0x8D7FE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x8D80C8", Offset = "0x8D80C8", VA = "0x8D80C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x8D81B8", Offset = "0x8D81B8", VA = "0x8D81B8")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x8D8288", Offset = "0x8D8288", VA = "0x8D8288")]
		private static bool HasCollidedWithDustyObject(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x8D82E4", Offset = "0x8D82E4", VA = "0x8D82E4")]
		public void SetActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x8D8304", Offset = "0x8D8304", VA = "0x8D8304")]
		private void OnHealthPointsChanged(float healthPoints)
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x8D8328", Offset = "0x8D8328", VA = "0x8D8328")]
		public ShowDust()
		{
		}
	}
	[Token(Token = "0x2000610")]
	public class KillNotificationSoundController : MonoBehaviourPun
	{
		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource killNotifiactionSource;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource beingKilledNotificationSource;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float currentSoundPitch;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float initialSoundPitch;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float maxSoundPitch;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int killingStreakCount;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float pitchKillingStreakGain;

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x8D8338", Offset = "0x8D8338", VA = "0x8D8338")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x8D83B8", Offset = "0x8D83B8", VA = "0x8D83B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x8D8438", Offset = "0x8D8438", VA = "0x8D8438")]
		public void SetKillNotificationSound(PlayerControllerCore victim, PlayerControllerCore killer)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x8D85E0", Offset = "0x8D85E0", VA = "0x8D85E0")]
		[PunRPC]
		public void RpcResetKillNotificationSound()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x8D8604", Offset = "0x8D8604", VA = "0x8D8604")]
		[PunRPC]
		public void RpcPlayKillNotifiactionSound()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x8D8668", Offset = "0x8D8668", VA = "0x8D8668")]
		public KillNotificationSoundController()
		{
		}
	}
	[Token(Token = "0x2000611")]
	public class TournamentLeaderboardController : MonoBehaviourPun, IInRoomCallbacks
	{
		[Token(Token = "0x2000612")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string playerID;

			[Token(Token = "0x6002038")]
			[Address(RVA = "0x8D937C", Offset = "0x8D937C", VA = "0x8D937C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002039")]
			[Address(RVA = "0x8DB900", Offset = "0x8DB900", VA = "0x8DB900")]
			internal bool <RPCAddNewPlayer>b__0(TournamentPlayer player)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000613")]
		private sealed class <>c
		{
			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TournamentPlayer, string> <>9__24_0;

			[Token(Token = "0x40022CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TournamentPlayer, int> <>9__24_1;

			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<TournamentPlayer, int> <>9__24_2;

			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<TournamentPlayer, int> <>9__24_3;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<TournamentPlayer, int> <>9__24_4;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<TournamentPlayer, bool> <>9__24_5;

			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<TournamentPlayer, bool> <>9__24_6;

			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<TournamentPlayer, string> <>9__24_7;

			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<TournamentPlayer, int> <>9__24_8;

			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<TournamentPlayer, int> <>9__24_9;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Predicate<TournamentPlayer> <>9__29_0;

			[Token(Token = "0x40022D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Predicate<TournamentPlayer> <>9__29_1;

			[Token(Token = "0x600203B")]
			[Address(RVA = "0x8DB99C", Offset = "0x8DB99C", VA = "0x8DB99C")]
			public <>c()
			{
			}

			[Token(Token = "0x600203C")]
			[Address(RVA = "0x8DB9A4", Offset = "0x8DB9A4", VA = "0x8DB9A4")]
			internal string <SynchronizeLeaderboardsWithOtherPlayers>b__24_0(TournamentPlayer qP)
			{
				return null;
			}

			[Token(Token = "0x600203D")]
			[Address(RVA = "0x8DB9BC", Offset = "0x8DB9BC", VA = "0x8DB9BC")]
			internal int <SynchronizeLeaderboardsWithOtherPlayers>b__24_1(TournamentPlayer qP)
			{
				return default(int);
			}

			[Token(Token = "0x600203E")]
			[Address(RVA = "0x8DB9D4", Offset = "0x8DB9D4", VA = "0x8DB9D4")]
			internal int <SynchronizeLeaderboardsWithOtherPlayers>b__24_2(TournamentPlayer qP)
			{
				return default(int);
			}

			[Token(Token = "0x600203F")]
			[Address(RVA = "0x8DB9EC", Offset = "0x8DB9EC", VA = "0x8DB9EC")]
			internal int <SynchronizeLeaderboardsWithOtherPlayers>b__24_3(TournamentPlayer qP)
			{
				return default(int);
			}

			[Token(Token = "0x6002040")]
			[Address(RVA = "0x8DBA04", Offset = "0x8DBA04", VA = "0x8DBA04")]
			internal int <SynchronizeLeaderboardsWithOtherPlayers>b__24_4(TournamentPlayer qP)
			{
				return default(int);
			}

			[Token(Token = "0x6002041")]
			[Address(RVA = "0x8DBA1C", Offset = "0x8DBA1C", VA = "0x8DBA1C")]
			internal bool <SynchronizeLeaderboardsWithOtherPlayers>b__24_5(TournamentPlayer qP)
			{
				return default(bool);
			}

			[Token(Token = "0x6002042")]
			[Address(RVA = "0x8DBA34", Offset = "0x8DBA34", VA = "0x8DBA34")]
			internal bool <SynchronizeLeaderboardsWithOtherPlayers>b__24_6(TournamentPlayer qP)
			{
				return default(bool);
			}

			[Token(Token = "0x6002043")]
			[Address(RVA = "0x8DBA4C", Offset = "0x8DBA4C", VA = "0x8DBA4C")]
			internal string <SynchronizeLeaderboardsWithOtherPlayers>b__24_7(TournamentPlayer qp)
			{
				return null;
			}

			[Token(Token = "0x6002044")]
			[Address(RVA = "0x8DBA64", Offset = "0x8DBA64", VA = "0x8DBA64")]
			internal int <SynchronizeLeaderboardsWithOtherPlayers>b__24_8(TournamentPlayer qP)
			{
				return default(int);
			}

			[Token(Token = "0x6002045")]
			[Address(RVA = "0x8DBA7C", Offset = "0x8DBA7C", VA = "0x8DBA7C")]
			internal int <SynchronizeLeaderboardsWithOtherPlayers>b__24_9(TournamentPlayer qP)
			{
				return default(int);
			}

			[Token(Token = "0x6002046")]
			[Address(RVA = "0x8DBA94", Offset = "0x8DBA94", VA = "0x8DBA94")]
			internal bool <RpcShowLeaderboard>b__29_0(TournamentPlayer p)
			{
				return default(bool);
			}

			[Token(Token = "0x6002047")]
			[Address(RVA = "0x8DBAAC", Offset = "0x8DBAAC", VA = "0x8DBAAC")]
			internal bool <RpcShowLeaderboard>b__29_1(TournamentPlayer p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000614")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x40022DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TournamentPlayer player;

			[Token(Token = "0x6002048")]
			[Address(RVA = "0x8DA3F8", Offset = "0x8DA3F8", VA = "0x8DA3F8")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6002049")]
			[Address(RVA = "0x8DBAD4", Offset = "0x8DBAD4", VA = "0x8DBAD4")]
			internal bool <AddQualifiedPlayer>b__0(TournamentPlayer p)
			{
				return default(bool);
			}

			[Token(Token = "0x600204A")]
			[Address(RVA = "0x8DBB1C", Offset = "0x8DBB1C", VA = "0x8DBB1C")]
			internal bool <AddQualifiedPlayer>b__1(TournamentPlayer p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000615")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TournamentPlayer player;

			[Token(Token = "0x600204B")]
			[Address(RVA = "0x8DA680", Offset = "0x8DA680", VA = "0x8DA680")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x600204C")]
			[Address(RVA = "0x8DBB64", Offset = "0x8DBB64", VA = "0x8DBB64")]
			internal bool <AddUnqualifiedPlayer>b__0(TournamentPlayer p)
			{
				return default(bool);
			}

			[Token(Token = "0x600204D")]
			[Address(RVA = "0x8DBBAC", Offset = "0x8DBBAC", VA = "0x8DBBAC")]
			internal bool <AddUnqualifiedPlayer>b__1(TournamentPlayer p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000616")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<TournamentPlayerResult> playerResultsFromMatch;

			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int i;

			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<TournamentPlayer> <>9__0;

			[Token(Token = "0x600204E")]
			[Address(RVA = "0x8DABB4", Offset = "0x8DABB4", VA = "0x8DABB4")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600204F")]
			[Address(RVA = "0x8DBBF4", Offset = "0x8DBBF4", VA = "0x8DBBF4")]
			internal bool <AddMatchResult>b__0(TournamentPlayer player)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000617")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string leftPlayerID;

			[Token(Token = "0x6002050")]
			[Address(RVA = "0x8DB730", Offset = "0x8DB730", VA = "0x8DB730")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002051")]
			[Address(RVA = "0x8DBC78", Offset = "0x8DBC78", VA = "0x8DBC78")]
			internal bool <OnPlayerLeftRoom>b__0(TournamentPlayer p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40022C0")]
		private const int asciiIndexOfALetter = 65;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string id;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int nextId;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<TournamentPlayer> allEnrolledPlayers;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<TournamentPlayer> qualifiedPlayers;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<TournamentPlayer> unqualifiedPlayers;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TournamentLeaderboardGUIController finalLeaderboardGUI;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TournamentProgressController progressController;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TournamentInfoWindowController tournamentInfoWindowController;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TournamentRejoin tournamentRejoin;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int playerCountThatQualifiesForNextRound;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int semiFinalId;

		[Token(Token = "0x17000348")]
		public string Id
		{
			[Token(Token = "0x600201D")]
			[Address(RVA = "0x8D8694", Offset = "0x8D8694", VA = "0x8D8694")]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public List<TournamentPlayer> AllPlayersSorted
		{
			[Token(Token = "0x600201E")]
			[Address(RVA = "0x8D88AC", Offset = "0x8D88AC", VA = "0x8D88AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x8D8A44", Offset = "0x8D8A44", VA = "0x8D8A44")]
		private static int GetNewId()
		{
			return default(int);
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x8D8AA4", Offset = "0x8D8AA4", VA = "0x8D8AA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x8D8E90", Offset = "0x8D8E90", VA = "0x8D8E90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x8D8EE8", Offset = "0x8D8EE8", VA = "0x8D8EE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x8D8F40", Offset = "0x8D8F40", VA = "0x8D8F40")]
		public static void ResetID()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x8D8FBC", Offset = "0x8D8FBC", VA = "0x8D8FBC")]
		[PunRPC]
		public void RPCAddNewPlayer(Player newPlayer, string playerID)
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x8DA2D8", Offset = "0x8DA2D8", VA = "0x8DA2D8")]
		internal void UnqualifyPlayersNotReturnedfromLastRound()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x8D8BF0", Offset = "0x8D8BF0", VA = "0x8D8BF0")]
		public static string GetPlayerID()
		{
			return null;
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x8D985C", Offset = "0x8D985C", VA = "0x8D985C")]
		private void SynchronizeLeaderboardsWithOtherPlayers()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x8D9384", Offset = "0x8D9384", VA = "0x8D9384")]
		public void AddQualifiedPlayer(TournamentPlayer player)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x8DA420", Offset = "0x8DA420", VA = "0x8DA420")]
		public void AddUnqualifiedPlayer(TournamentPlayer player)
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x8DA400", Offset = "0x8DA400", VA = "0x8DA400")]
		private void ChangePlayerInfoPanelColor(string id, bool qualified)
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x8DA688", Offset = "0x8DA688", VA = "0x8DA688")]
		public void AddMatchResult(List<TournamentPlayerResult> playerResultsFromMatch)
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x8DABBC", Offset = "0x8DABBC", VA = "0x8DABBC")]
		[PunRPC]
		private void RpcShowLeaderboard(string[] playersNames, int[] playersHits, int[] playersDeaths, int[] playersOrdersOfHits, int[] stagesThatPlayersGotTo, bool[] playersIsQualifieds, bool[] playersIsFinals, string[] playersIds, int[] playersTotalHits, int[] playersTotalDeaths)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x8D895C", Offset = "0x8D895C", VA = "0x8D895C")]
		private void SortTournamentPlayerLists()
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x8DB1C0", Offset = "0x8DB1C0", VA = "0x8DB1C0")]
		private int CompareTournamentPlayers(TournamentPlayer playerOne, TournamentPlayer playerTwo)
		{
			return default(int);
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x8DB2A4", Offset = "0x8DB2A4", VA = "0x8DB2A4", Slot = "4")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x8DB310", Offset = "0x8DB310", VA = "0x8DB310", Slot = "5")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x8DB738", Offset = "0x8DB738", VA = "0x8DB738", Slot = "6")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x8DB73C", Offset = "0x8DB73C", VA = "0x8DB73C", Slot = "7")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x8DB740", Offset = "0x8DB740", VA = "0x8DB740", Slot = "8")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x8DB744", Offset = "0x8DB744", VA = "0x8DB744")]
		public TournamentLeaderboardController()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x8DB8A8", Offset = "0x8DB8A8", VA = "0x8DB8A8")]
		private bool <UnqualifyPlayersNotReturnedfromLastRound>b__22_0(TournamentPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x8DB8FC", Offset = "0x8DB8FC", VA = "0x8DB8FC")]
		private void <UnqualifyPlayersNotReturnedfromLastRound>b__22_1(TournamentPlayer player)
		{
		}
	}
	[Token(Token = "0x2000618")]
	public class EnemyIndicatorsController : MonoBehaviour
	{
		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EnemyIndicator enemyIndicatorPrefab;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform holder;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform player;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Transform, EnemyIndicator> indicators;

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x8DBCA4", Offset = "0x8DBCA4", VA = "0x8DBCA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x8DBF58", Offset = "0x8DBF58", VA = "0x8DBF58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x8DC20C", Offset = "0x8DC20C", VA = "0x8DC20C")]
		public void Create(PlayerController playerControler, Transform target)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x8DC334", Offset = "0x8DC334", VA = "0x8DC334")]
		public void Destroy(PlayerController playerControler, Transform target)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x8DC428", Offset = "0x8DC428", VA = "0x8DC428")]
		private void RemoveAllIndicators(int arg)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x8DC5B0", Offset = "0x8DC5B0", VA = "0x8DC5B0")]
		public EnemyIndicatorsController()
		{
		}
	}
	[Token(Token = "0x2000619")]
	public class InteractableItemIcon : MonoBehaviour
	{
		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float distanceModifier;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float positionOffset;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float animTime;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float animSizeMultiplier;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.Object _connectedObject;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform myRectTransform;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image image;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float distanceFromCamera;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 defaultScale;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float timer;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool IsRising;

		[Token(Token = "0x1700034A")]
		private IWithIcon connectedObject
		{
			[Token(Token = "0x6002058")]
			[Address(RVA = "0x8DC638", Offset = "0x8DC638", VA = "0x8DC638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x8DC680", Offset = "0x8DC680", VA = "0x8DC680")]
		private void Awake()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x8DC72C", Offset = "0x8DC72C", VA = "0x8DC72C")]
		private void Update()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x8DC77C", Offset = "0x8DC77C", VA = "0x8DC77C")]
		private void HandleActivation()
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x8DC8F0", Offset = "0x8DC8F0", VA = "0x8DC8F0")]
		private void SetTimer()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x8DC970", Offset = "0x8DC970", VA = "0x8DC970")]
		private void SetSize()
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x8DCACC", Offset = "0x8DCACC", VA = "0x8DCACC")]
		private void SetPosition()
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x8DCB3C", Offset = "0x8DCB3C", VA = "0x8DCB3C")]
		private void SetRotation()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x8DCBC4", Offset = "0x8DCBC4", VA = "0x8DCBC4")]
		public InteractableItemIcon()
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class SpellsGiver : MonoBehaviour
	{
		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpellsMenuController spellController;

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x8DCBD8", Offset = "0x8DCBD8", VA = "0x8DCBD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x8DCC60", Offset = "0x8DCC60", VA = "0x8DCC60")]
		public void UnlockAllSpells()
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x8DCC7C", Offset = "0x8DCC7C", VA = "0x8DCC7C")]
		public SpellsGiver()
		{
		}
	}
	[Token(Token = "0x200061B")]
	public class TournamentMasterQuitController : MonoBehaviourPun, IInRoomCallbacks
	{
		[Serializable]
		[Token(Token = "0x200061C")]
		private sealed class <>c
		{
			[Token(Token = "0x40022F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<PlayerControllerCore> <>9__6_0;

			[Token(Token = "0x600206F")]
			[Address(RVA = "0x8DD210", Offset = "0x8DD210", VA = "0x8DD210")]
			public <>c()
			{
			}

			[Token(Token = "0x6002070")]
			[Address(RVA = "0x8DD218", Offset = "0x8DD218", VA = "0x8DD218")]
			internal void <TryToClearBrokenMasterExitCoroutine>b__6_0(PlayerControllerCore player)
			{
			}
		}

		[Token(Token = "0x200061D")]
		private sealed class <TryToClearBrokenMasterExitCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TournamentMasterQuitController <>4__this;

			[Token(Token = "0x1700034B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002074")]
				[Address(RVA = "0x8DD6C8", Offset = "0x8DD6C8", VA = "0x8DD6C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002075")]
				[Address(RVA = "0x8DD6D0", Offset = "0x8DD6D0", VA = "0x8DD6D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002071")]
			[Address(RVA = "0x8DCDA8", Offset = "0x8DCDA8", VA = "0x8DCDA8")]
			[DebuggerHidden]
			public <TryToClearBrokenMasterExitCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002072")]
			[Address(RVA = "0x8DD310", Offset = "0x8DD310", VA = "0x8DD310", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002073")]
			[Address(RVA = "0x8DD314", Offset = "0x8DD314", VA = "0x8DD314", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200061E")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40022F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<PlayerController> playerControllers;

			[Token(Token = "0x40022FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TournamentMasterQuitController <>4__this;

			[Token(Token = "0x6002076")]
			[Address(RVA = "0x8DD02C", Offset = "0x8DD02C", VA = "0x8DD02C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002077")]
			[Address(RVA = "0x8DD6D8", Offset = "0x8DD6D8", VA = "0x8DD6D8")]
			internal void <TryToGetRepeatedPlayerWithNegativeIndex>b__0(PlayerControllerCore x)
			{
			}

			[Token(Token = "0x6002078")]
			[Address(RVA = "0x8DD7D4", Offset = "0x8DD7D4", VA = "0x8DD7D4")]
			internal bool <TryToGetRepeatedPlayerWithNegativeIndex>b__1(PlayerController player)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200061F")]
		private sealed class <>c__DisplayClass7_1
		{
			[Token(Token = "0x40022FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerController player;

			[Token(Token = "0x6002079")]
			[Address(RVA = "0x8DD918", Offset = "0x8DD918", VA = "0x8DD918")]
			public <>c__DisplayClass7_1()
			{
			}

			[Token(Token = "0x600207A")]
			[Address(RVA = "0x8DD920", Offset = "0x8DD920", VA = "0x8DD920")]
			internal bool <TryToGetRepeatedPlayerWithNegativeIndex>b__2(PlayerControllerCore player2)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40022F0")]
		private const int wrongPlayersCount = 2;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayersManager playersManager;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float retryTime;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool hasTriedMoreThanOnce;

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x8DCC84", Offset = "0x8DCC84", VA = "0x8DCC84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x8DCCDC", Offset = "0x8DCCDC", VA = "0x8DCCDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x8DCD34", Offset = "0x8DCD34", VA = "0x8DCD34")]
		private IEnumerator TryToClearBrokenMasterExitCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x8DCDD0", Offset = "0x8DCDD0", VA = "0x8DCDD0")]
		private PlayerController TryToGetRepeatedPlayerWithNegativeIndex()
		{
			return null;
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x8DD034", Offset = "0x8DD034", VA = "0x8DD034", Slot = "8")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x8DD0DC", Offset = "0x8DD0DC", VA = "0x8DD0DC", Slot = "4")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x8DD0E0", Offset = "0x8DD0E0", VA = "0x8DD0E0", Slot = "5")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x8DD188", Offset = "0x8DD188", VA = "0x8DD188", Slot = "6")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x8DD18C", Offset = "0x8DD18C", VA = "0x8DD18C", Slot = "7")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x8DD190", Offset = "0x8DD190", VA = "0x8DD190")]
		public TournamentMasterQuitController()
		{
		}
	}
	[Token(Token = "0x2000620")]
	public class TrailRendererEnabler : MonoBehaviourPun, IResetable
	{
		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TrailColorSetter trailColorSetter;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ArrowFlyController _arrowFlyController;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TrailRenderer trailOnArrow;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool shouldBeDisabledOnCollision;

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x8DD974", Offset = "0x8DD974", VA = "0x8DD974")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x8DDA4C", Offset = "0x8DDA4C", VA = "0x8DDA4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x8DDB78", Offset = "0x8DDB78", VA = "0x8DDB78")]
		public void InitializeTrail()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x8DDCB8", Offset = "0x8DDCB8", VA = "0x8DDCB8")]
		public void TurnOffTrailRenderer()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x8DDCCC", Offset = "0x8DDCCC", VA = "0x8DDCCC")]
		public void EnableTrailRenderer(bool isEnabled)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x8DDD20", Offset = "0x8DDD20", VA = "0x8DDD20")]
		private void SetTrailColorForPlayer(PlayerControllerCore playerController)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x8DDDC8", Offset = "0x8DDDC8", VA = "0x8DDDC8", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x8DDE50", Offset = "0x8DDE50", VA = "0x8DDE50")]
		public TrailRendererEnabler()
		{
		}
	}
}
namespace WenklyStudio.Payload
{
	[Token(Token = "0x2000621")]
	public class DwarfOffsetSetter : MonoBehaviour
	{
		[Token(Token = "0x4002300")]
		private const float offsetMin = -0.8f;

		[Token(Token = "0x4002301")]
		private const float offsetMax = 0.8f;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform offsetTransform;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfsFormationController dwarfsFormationController;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool reachedPosition;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 offset;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DwarfFormationState lastState;

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x8DDE60", Offset = "0x8DDE60", VA = "0x8DDE60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x8DDEC0", Offset = "0x8DDEC0", VA = "0x8DDEC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x8DDFD0", Offset = "0x8DDFD0", VA = "0x8DDFD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x8DE0B8", Offset = "0x8DE0B8", VA = "0x8DE0B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x8DDE90", Offset = "0x8DDE90", VA = "0x8DDE90")]
		private void SetNewOffset()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x8DDFB8", Offset = "0x8DDFB8", VA = "0x8DDFB8")]
		private void ResetTimer(DwarfFormationState lastState)
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x8DE1E0", Offset = "0x8DE1E0", VA = "0x8DE1E0")]
		public DwarfOffsetSetter()
		{
		}
	}
	[Token(Token = "0x2000622")]
	public class AttackTargetTrigger : MonoBehaviour
	{
		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEngine.Object attackTargetObject;

		[Token(Token = "0x1700034D")]
		public IAttackTarget AttackTarget
		{
			[Token(Token = "0x600208A")]
			[Address(RVA = "0x8DE240", Offset = "0x8DE240", VA = "0x8DE240")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x8DE288", Offset = "0x8DE288", VA = "0x8DE288")]
		public AttackTargetTrigger()
		{
		}
	}
	[Token(Token = "0x2000623")]
	public class CartWithDwarfsBehaviourController : MonoBehaviour, ICartBehaviour
	{
		[Token(Token = "0x2000624")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FormationColumnTag dwarfFormationColumn;

			[Token(Token = "0x6002094")]
			[Address(RVA = "0x8DE68C", Offset = "0x8DE68C", VA = "0x8DE68C")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002095")]
			[Address(RVA = "0x8DE8EC", Offset = "0x8DE8EC", VA = "0x8DE8EC")]
			internal bool <GetMachedRoutepoint>b__0(RoutePoint routepoint)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> dwarfsGameObjects;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnemiesSlotsController enemiesSlotsController;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfsColumnSpeedChanger dwarfsColumnSpeedChanger;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DwarfsFormationController dwarfsFormationController;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CartController cartController;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DwarfsSoundController dwarfsSoundController;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RouteController frontDwarfRouteController;

		[Token(Token = "0x1700034E")]
		public float ReachedDistance
		{
			[Token(Token = "0x600208C")]
			[Address(RVA = "0x8DE290", Offset = "0x8DE290", VA = "0x8DE290", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x8DE2AC", Offset = "0x8DE2AC", VA = "0x8DE2AC", Slot = "5")]
		public void Initialize(RoutePoint spawnRoutePoint, List<RoutePoint> additionalSpawnRoutePoints)
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x8DE400", Offset = "0x8DE400", VA = "0x8DE400")]
		private RoutePoint GetMachedRoutepoint(DwarfController dwarf, List<RoutePoint> routePoints)
		{
			return null;
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x8DE694", Offset = "0x8DE694", VA = "0x8DE694", Slot = "7")]
		public void StartCart()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x8DE810", Offset = "0x8DE810", VA = "0x8DE810", Slot = "6")]
		public void GroundCart()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x8DE82C", Offset = "0x8DE82C", VA = "0x8DE82C", Slot = "8")]
		public void OnFinishedRoute()
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x8DE508", Offset = "0x8DE508", VA = "0x8DE508")]
		private void EnableDwarf(DwarfController dwarfController, RoutePoint dwarfSpawnPoint, float distanceInColumn)
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x8DE8E4", Offset = "0x8DE8E4", VA = "0x8DE8E4")]
		public CartWithDwarfsBehaviourController()
		{
		}
	}
	[Token(Token = "0x2000625")]
	public class DwarfController : MonoBehaviour
	{
		[Token(Token = "0x4002312")]
		private const float modelOffsetMin = -0.5f;

		[Token(Token = "0x4002313")]
		private const float modelOffsetMax = 0.5f;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 FormationOffset;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnemyMovementController dwarfMovementController;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RandomDwarfWeaponController randomDwarfWeaponController;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FormationColumnTag formationColumnTag;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform dwarfTransformInDefenseFormation;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private DwarfReferencesSetter referenceSetter;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEngine.Object movementProcessor;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private DwarfsFormationController dwarfsFormationController;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool isSettingOffset;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform modelTransform;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float randomMin;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float randomMax;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool <CanChangeSpeed>k__BackingField;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float <SpeedFactorOvertime>k__BackingField;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 <ModelOffset>k__BackingField;

		[Token(Token = "0x1700034F")]
		public IMovementProcessor MovementProcessor
		{
			[Token(Token = "0x6002096")]
			[Address(RVA = "0x8DE960", Offset = "0x8DE960", VA = "0x8DE960")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		public ColumnTag _ColumnTag
		{
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x8DE9A8", Offset = "0x8DE9A8", VA = "0x8DE9A8")]
			get
			{
				return default(ColumnTag);
			}
		}

		[Token(Token = "0x17000351")]
		public RouteController RouteController
		{
			[Token(Token = "0x6002098")]
			[Address(RVA = "0x8DE9C4", Offset = "0x8DE9C4", VA = "0x8DE9C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		public DwarfAnimatorController DwarfAnimatorController
		{
			[Token(Token = "0x6002099")]
			[Address(RVA = "0x8DE9CC", Offset = "0x8DE9CC", VA = "0x8DE9CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		public Transform ModelTransform
		{
			[Token(Token = "0x600209A")]
			[Address(RVA = "0x8DE9D4", Offset = "0x8DE9D4", VA = "0x8DE9D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		public bool CanChangeSpeed
		{
			[Token(Token = "0x600209B")]
			[Address(RVA = "0x8DE9DC", Offset = "0x8DE9DC", VA = "0x8DE9DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600209C")]
			[Address(RVA = "0x8DE9E4", Offset = "0x8DE9E4", VA = "0x8DE9E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public float SpeedFactorOvertime
		{
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x8DE9F0", Offset = "0x8DE9F0", VA = "0x8DE9F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600209E")]
			[Address(RVA = "0x8DE9F8", Offset = "0x8DE9F8", VA = "0x8DE9F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public Vector3 ModelOffset
		{
			[Token(Token = "0x600209F")]
			[Address(RVA = "0x8DEA00", Offset = "0x8DEA00", VA = "0x8DEA00")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x8DEA0C", Offset = "0x8DEA0C", VA = "0x8DEA0C")]
			private set
			{
			}
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x8DEA18", Offset = "0x8DEA18", VA = "0x8DEA18")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x8DEA8C", Offset = "0x8DEA8C", VA = "0x8DEA8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x8DE830", Offset = "0x8DE830", VA = "0x8DE830")]
		public void Initialize(RoutePoint routePoint)
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x8DEBE4", Offset = "0x8DEBE4", VA = "0x8DEBE4")]
		public void EnableMovement()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x8DEC00", Offset = "0x8DEC00", VA = "0x8DEC00")]
		public void DisableMovement()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x8DEC1C", Offset = "0x8DEC1C", VA = "0x8DEC1C")]
		public void RunRuningAnim()
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x8DEC38", Offset = "0x8DEC38", VA = "0x8DEC38")]
		public void RunShieldAnim()
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x8DEC54", Offset = "0x8DEC54", VA = "0x8DEC54")]
		public void ResetSpeed()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x8DEAE8", Offset = "0x8DEAE8", VA = "0x8DEAE8")]
		private void SetDwarfSpeed(float speed)
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x8DEC70", Offset = "0x8DEC70", VA = "0x8DEC70")]
		public void ChangeDwarfSpeedOverTime(float speedFactorOvertime)
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x8DEC80", Offset = "0x8DEC80", VA = "0x8DEC80")]
		public void SetReferences(Transform modelTransform)
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x8DEC88", Offset = "0x8DEC88", VA = "0x8DEC88")]
		public DwarfController()
		{
		}
	}
	[Token(Token = "0x2000626")]
	public class DwarfFormationController : MonoBehaviour, IResetable
	{
		[Token(Token = "0x2000627")]
		private sealed class <GoToFormationCoroutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400232F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DwarfFormationController <>4__this;

			[Token(Token = "0x4002333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IDwarfFormationTransitionState targetState;

			[Token(Token = "0x1700035D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020C6")]
				[Address(RVA = "0x8DF508", Offset = "0x8DF508", VA = "0x8DF508", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020C7")]
				[Address(RVA = "0x8DF510", Offset = "0x8DF510", VA = "0x8DF510", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020C3")]
			[Address(RVA = "0x8DF3B4", Offset = "0x8DF3B4", VA = "0x8DF3B4")]
			[DebuggerHidden]
			public <GoToFormationCoroutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60020C4")]
			[Address(RVA = "0x8DF43C", Offset = "0x8DF43C", VA = "0x8DF43C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x8DF440", Offset = "0x8DF440", VA = "0x8DF440", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000628")]
		private sealed class <RunCoroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DwarfFormationController <>4__this;

			[Token(Token = "0x1700035F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020CB")]
				[Address(RVA = "0x8DF5D4", Offset = "0x8DF5D4", VA = "0x8DF5D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000360")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020CC")]
				[Address(RVA = "0x8DF5DC", Offset = "0x8DF5DC", VA = "0x8DF5DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x8DF3DC", Offset = "0x8DF3DC", VA = "0x8DF3DC")]
			[DebuggerHidden]
			public <RunCoroutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x8DF518", Offset = "0x8DF518", VA = "0x8DF518", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x8DF51C", Offset = "0x8DF51C", VA = "0x8DF51C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float rotationSpeed;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float movementSpeed;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnemyMovementController dwarfMovementController;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEngine.Object defensiveDwarfFormationState;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEngine.Object runningDwarfFormationState;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DwarfFormationState formationState;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDwarfFormationTransitionState formationTransitionState;

		[Token(Token = "0x17000357")]
		public float RotationSpeed
		{
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x8DEF14", Offset = "0x8DEF14", VA = "0x8DEF14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000358")]
		public float MovementSpeed
		{
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x8DEF1C", Offset = "0x8DEF1C", VA = "0x8DEF1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000359")]
		private IDwarfFormationTransitionState DefensiveDwarfFormationState
		{
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x8DEF24", Offset = "0x8DEF24", VA = "0x8DEF24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		private IDwarfFormationTransitionState RunningDwarfFormationState
		{
			[Token(Token = "0x60020B4")]
			[Address(RVA = "0x8DEF6C", Offset = "0x8DEF6C", VA = "0x8DEF6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public DwarfFormationState FormationState
		{
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x8DEFB4", Offset = "0x8DEFB4", VA = "0x8DEFB4")]
			get
			{
				return default(DwarfFormationState);
			}
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0x8DEFBC", Offset = "0x8DEFBC", VA = "0x8DEFBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public IDwarfFormationTransitionState FormationTransitionState
		{
			[Token(Token = "0x60020B7")]
			[Address(RVA = "0x8DF000", Offset = "0x8DF000", VA = "0x8DF000")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0x8DF008", Offset = "0x8DF008", VA = "0x8DF008")]
			set
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event Action OnGotToRunningFormation
		{
			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x8DECA4", Offset = "0x8DECA4", VA = "0x8DECA4")]
			add
			{
			}
			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x8DED40", Offset = "0x8DED40", VA = "0x8DED40")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event Action OnGotToDefensiveFormation
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x8DEDDC", Offset = "0x8DEDDC", VA = "0x8DEDDC")]
			add
			{
			}
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x8DEE78", Offset = "0x8DEE78", VA = "0x8DEE78")]
			remove
			{
			}
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x8DF0D4", Offset = "0x8DF0D4", VA = "0x8DF0D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x8DF18C", Offset = "0x8DF18C", VA = "0x8DF18C")]
		public void GoToRunningFormation(float delay)
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x8DF204", Offset = "0x8DF204", VA = "0x8DF204")]
		public void GoToDefensiveFormation(float delay)
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x8DF230", Offset = "0x8DF230", VA = "0x8DF230")]
		public void Run(float delay)
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x8DF2D4", Offset = "0x8DF2D4", VA = "0x8DF2D4")]
		public void TryEnableRun()
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x8DF1B8", Offset = "0x8DF1B8", VA = "0x8DF1B8")]
		private void GoToFormation(IDwarfFormationTransitionState transitionState, float delay)
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x8DF314", Offset = "0x8DF314", VA = "0x8DF314")]
		private IEnumerator GoToFormationCoroutine(IDwarfFormationTransitionState targetState, float delay)
		{
			return null;
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x8DF250", Offset = "0x8DF250", VA = "0x8DF250")]
		private IEnumerator RunCoroutine(float delay)
		{
			return null;
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x8DF404", Offset = "0x8DF404", VA = "0x8DF404", Slot = "4")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x8DF434", Offset = "0x8DF434", VA = "0x8DF434")]
		public DwarfFormationController()
		{
		}
	}
	[Token(Token = "0x2000629")]
	public enum DwarfFormationState
	{
		[Token(Token = "0x4002339")]
		DuringTransition,
		[Token(Token = "0x400233A")]
		Running,
		[Token(Token = "0x400233B")]
		Defensive
	}
	[Token(Token = "0x200062A")]
	public class DwarfReferencesSetter : MonoBehaviour, ISettable
	{
		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RandomDwarfWeaponController randomDwarfWeaponController;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfController dwarfController;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DwarfReferences dwarfReferencesMobile;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DwarfReferences dwarfReferencesPC;

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x8DEB20", Offset = "0x8DEB20", VA = "0x8DEB20", Slot = "4")]
		[ContextMenu("Set references")]
		public void SetReferences()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x8DF5E4", Offset = "0x8DF5E4", VA = "0x8DF5E4")]
		private void SetReferences(DwarfReferences dwarfReferences)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x8DF640", Offset = "0x8DF640", VA = "0x8DF640")]
		public DwarfReferencesSetter()
		{
		}
	}
	[Token(Token = "0x200062B")]
	public class DwarfsColumnSpeedChanger : MonoBehaviour
	{
		[Token(Token = "0x200062C")]
		private struct dwarf
		{
			[Token(Token = "0x4002348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Transform <Transform>k__BackingField;

			[Token(Token = "0x4002349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private readonly EnemyMovementController <EnemyMovementController>k__BackingField;

			[Token(Token = "0x400234A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly FormationColumnTag <formationColumnTag>k__BackingField;

			[Token(Token = "0x400234B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly DwarfController <DwarfController>k__BackingField;

			[Token(Token = "0x400234C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly Vector3 <DefaultVectorToTarget>k__BackingField;

			[Token(Token = "0x17000361")]
			public Transform Transform
			{
				[Token(Token = "0x60020D6")]
				[Address(RVA = "0x8DFA70", Offset = "0x8DFA70", VA = "0x8DFA70")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000362")]
			public EnemyMovementController EnemyMovementController
			{
				[Token(Token = "0x60020D7")]
				[Address(RVA = "0x8DFA78", Offset = "0x8DFA78", VA = "0x8DFA78")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000363")]
			public FormationColumnTag formationColumnTag
			{
				[Token(Token = "0x60020D8")]
				[Address(RVA = "0x8DFA80", Offset = "0x8DFA80", VA = "0x8DFA80")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000364")]
			public DwarfController DwarfController
			{
				[Token(Token = "0x60020D9")]
				[Address(RVA = "0x8DFA88", Offset = "0x8DFA88", VA = "0x8DFA88")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000365")]
			public Vector3 DefaultVectorToTarget
			{
				[Token(Token = "0x60020DA")]
				[Address(RVA = "0x8DFA90", Offset = "0x8DFA90", VA = "0x8DFA90")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x60020DB")]
			[Address(RVA = "0x8DF894", Offset = "0x8DF894", VA = "0x8DF894")]
			public dwarf(DwarfController newDwarf)
			{
			}
		}

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CartWithDwarfsBehaviourController cartWithDwarfsBehaviourController;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float speedFactorOvertime;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float maxDistanceFormCeneterOffset;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfController[] _dwarfs;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private dwarf[] dwarfs;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 localVectorFromDwarfToTarget;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float directionSign;

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x8DF648", Offset = "0x8DF648", VA = "0x8DF648")]
		private void Update()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x8DF814", Offset = "0x8DF814", VA = "0x8DF814")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x8DE570", Offset = "0x8DE570", VA = "0x8DE570")]
		public void InitDwarfes()
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x8DF64C", Offset = "0x8DF64C", VA = "0x8DF64C")]
		private void AdjustDwarfesSpeed()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x8DFA00", Offset = "0x8DFA00", VA = "0x8DFA00")]
		private bool ShouldResetSpeed(dwarf dwarf)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x8DFA68", Offset = "0x8DFA68", VA = "0x8DFA68")]
		public DwarfsColumnSpeedChanger()
		{
		}
	}
	[Token(Token = "0x200062D")]
	public class DwarfsFormationController : MonoBehaviourPun, IPunObservable, IResetable, IInRoomCallbacks
	{
		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int dwarfsInColumnCount;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float distanceInColumn;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfFormationController middleDwarfInFormation;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DwarfFormationController[] sideDwarfsInFormation;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DwarfsColumnSpeedChanger dwarfsColumnSpeedChanger;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float maxGoingToFormationDelay;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private DwarfFormationState formationState;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DwarfFormationState targetFormationState;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<DwarfFormationState> OnFormationStateChange;

		[Token(Token = "0x17000366")]
		public int DwarfsInColumnCount
		{
			[Token(Token = "0x60020DC")]
			[Address(RVA = "0x8DFA9C", Offset = "0x8DFA9C", VA = "0x8DFA9C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000367")]
		public float DistanceInColumn
		{
			[Token(Token = "0x60020DD")]
			[Address(RVA = "0x8DFAA4", Offset = "0x8DFAA4", VA = "0x8DFAA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000368")]
		public DwarfFormationState FormationState
		{
			[Token(Token = "0x60020DE")]
			[Address(RVA = "0x8DFAAC", Offset = "0x8DFAAC", VA = "0x8DFAAC")]
			get
			{
				return default(DwarfFormationState);
			}
			[Token(Token = "0x60020DF")]
			[Address(RVA = "0x8DFAB4", Offset = "0x8DFAB4", VA = "0x8DFAB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000369")]
		public DwarfFormationState TargetFormationState
		{
			[Token(Token = "0x60020E0")]
			[Address(RVA = "0x8DFBE4", Offset = "0x8DFBE4", VA = "0x8DFBE4")]
			get
			{
				return default(DwarfFormationState);
			}
			[Token(Token = "0x60020E1")]
			[Address(RVA = "0x8DE6B0", Offset = "0x8DE6B0", VA = "0x8DE6B0")]
			set
			{
			}
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x8DFBEC", Offset = "0x8DFBEC", VA = "0x8DFBEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x8DFC44", Offset = "0x8DFC44", VA = "0x8DFC44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x8DFC9C", Offset = "0x8DFC9C", VA = "0x8DFC9C")]
		private void Update()
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x8DFCA0", Offset = "0x8DFCA0", VA = "0x8DFCA0")]
		private void SetCorrectState()
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x8DFD04", Offset = "0x8DFD04", VA = "0x8DFD04", Slot = "5")]
		public void ResetElement()
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x8DFD10", Offset = "0x8DFD10", VA = "0x8DFD10", Slot = "10")]
		public void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x8DFDC8", Offset = "0x8DFDC8", VA = "0x8DFDC8", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x8DFE90", Offset = "0x8DFE90", VA = "0x8DFE90", Slot = "6")]
		public void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x8DFE94", Offset = "0x8DFE94", VA = "0x8DFE94", Slot = "7")]
		public void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x8DFE98", Offset = "0x8DFE98", VA = "0x8DFE98", Slot = "8")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x8DFE9C", Offset = "0x8DFE9C", VA = "0x8DFE9C", Slot = "9")]
		public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x8DFEA0", Offset = "0x8DFEA0", VA = "0x8DFEA0")]
		public DwarfsFormationController()
		{
		}
	}
	[Token(Token = "0x200062E")]
	public interface IDwarfFormationTransitionState
	{
		[Token(Token = "0x60020EE")]
		void Initialize();

		[Token(Token = "0x60020EF")]
		void HandleUpdate();
	}
	[Token(Token = "0x200062F")]
	public class MiddleDwarfDefensiveFormationTransitionState : MonoBehaviour, IDwarfFormationTransitionState
	{
		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DwarfController dwarfController;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DwarfFormationController dwarfInFormationController;

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x8DFEA8", Offset = "0x8DFEA8", VA = "0x8DFEA8", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x8DFF1C", Offset = "0x8DFF1C", VA = "0x8DFF1C", Slot = "5")]
		public void HandleUpdate()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x8DFF20", Offset = "0x8DFF20", VA = "0x8DFF20")]
		public MiddleDwarfDefensiveFormationTransitionState()
		{
		}
	}
	[Token(Token = "0x2000630")]
	public class MiddleDwarfRunningFormationTransitionState : MonoBehaviour, IDwarfFormationTransitionState
	{
		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfFormationController dwarfInFormationController;

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x8DFF28", Offset = "0x8DFF28", VA = "0x8DFF28", Slot = "5")]
		public void HandleUpdate()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x8DFF2C", Offset = "0x8DFF2C", VA = "0x8DFF2C", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x8DFF88", Offset = "0x8DFF88", VA = "0x8DFF88")]
		public MiddleDwarfRunningFormationTransitionState()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public class SideDwarfDefensiveFormationTransitionState : MonoBehaviour, IDwarfFormationTransitionState
	{
		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DwarfController dwarfController;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform defensiveSpot;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DwarfFormationController dwarfInFormationController;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float formationChangeMovingProgress;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float formationChangeRotatingProgress;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 startingPosition;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion startingRotation;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion targetRotation;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float distanceToMove;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float angleToRotate;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isRotatingRight;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float scaleMultiplier;

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x8DFF90", Offset = "0x8DFF90", VA = "0x8DFF90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x8DFFE4", Offset = "0x8DFFE4", VA = "0x8DFFE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x8E0064", Offset = "0x8E0064", VA = "0x8E0064")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x8E00E4", Offset = "0x8E00E4", VA = "0x8E00E4", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x8E04F8", Offset = "0x8E04F8", VA = "0x8E04F8", Slot = "5")]
		public void HandleUpdate()
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x8E0470", Offset = "0x8E0470", VA = "0x8E0470")]
		private Vector3 GetTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x8E0718", Offset = "0x8E0718", VA = "0x8E0718")]
		private void UpdateStartingOrientation()
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x8E0774", Offset = "0x8E0774", VA = "0x8E0774")]
		public SideDwarfDefensiveFormationTransitionState()
		{
		}
	}
	[Token(Token = "0x2000632")]
	public class SideDwarfRunningFormationTransitionState : MonoBehaviour, IDwarfFormationTransitionState
	{
		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DwarfAnimatorController dwarfAnimatorController;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DwarfFormationController dwarfInFormationController;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RouteController routeController;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float formationChangeMovingProgress;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float formationChangeRotatingProgress;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 startingPosition;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 targetPosition;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion startingRotation;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion targetRotation;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float distanceToMove;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float angleToRotate;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isRotatingRight;

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x8E077C", Offset = "0x8E077C", VA = "0x8E077C", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x8E0AF4", Offset = "0x8E0AF4", VA = "0x8E0AF4", Slot = "5")]
		public void HandleUpdate()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x8E0CEC", Offset = "0x8E0CEC", VA = "0x8E0CEC")]
		public SideDwarfRunningFormationTransitionState()
		{
		}
	}
	[Token(Token = "0x2000633")]
	public class CartDirectionIndicatorsSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float spawningFrequencyHz;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SplineCreator splineCreator;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float alphaGrowth;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float maxAlpha;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float distanceBetweenIndicators;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject indicatorPrefab;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ICartBehaviour cartBehaviour;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float currentDistance;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float currentAlpha;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CartDirectionIndicator cartDirectionIndicator;

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x8E0CF4", Offset = "0x8E0CF4", VA = "0x8E0CF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x8E0E84", Offset = "0x8E0E84", VA = "0x8E0E84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x8E1014", Offset = "0x8E1014", VA = "0x8E1014")]
		private void StartSpawning()
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x8E10C4", Offset = "0x8E10C4", VA = "0x8E10C4")]
		private void StopSpawning()
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x8E1110", Offset = "0x8E1110", VA = "0x8E1110")]
		private void SpawnVizualizer()
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x8E1220", Offset = "0x8E1220", VA = "0x8E1220")]
		private void SpawnIndicator()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x8E1314", Offset = "0x8E1314", VA = "0x8E1314")]
		public CartDirectionIndicatorsSpawner()
		{
		}
	}
}
namespace AmazingAssets.TerrainToMesh.Example
{
	[Token(Token = "0x2000634")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportDetailMesh : MonoBehaviour
	{
		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x8E131C", Offset = "0x8E131C", VA = "0x8E131C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x8E1670", Offset = "0x8E1670", VA = "0x8E1670")]
		public ExportDetailMesh()
		{
		}
	}
	[Token(Token = "0x2000635")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportGrass : MonoBehaviour
	{
		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x8E1680", Offset = "0x8E1680", VA = "0x8E1680")]
		private void Start()
		{
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x8E1BBC", Offset = "0x8E1BBC", VA = "0x8E1BBC")]
		public ExportGrass()
		{
		}
	}
	[Token(Token = "0x2000636")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportMesh : MonoBehaviour
	{
		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x8E1BCC", Offset = "0x8E1BCC", VA = "0x8E1BCC")]
		private void Start()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x8E1D40", Offset = "0x8E1D40", VA = "0x8E1D40")]
		public ExportMesh()
		{
		}
	}
	[Token(Token = "0x2000637")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportMeshAndBasemap : MonoBehaviour
	{
		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int mapsResolution;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool exportHoles;

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x8E1D50", Offset = "0x8E1D50", VA = "0x8E1D50")]
		private void Start()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x8E2080", Offset = "0x8E2080", VA = "0x8E2080")]
		private void InitializeMaterial(Material material)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x8E23C8", Offset = "0x8E23C8", VA = "0x8E23C8")]
		private void SetupAlphaTest(Material material)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x8E2550", Offset = "0x8E2550", VA = "0x8E2550")]
		public ExportMeshAndBasemap()
		{
		}
	}
	[Token(Token = "0x2000638")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportMeshAndBasemapByPositionIndex : MonoBehaviour
	{
		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int mapsResolution;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool exportHoles;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int chunkCountHorizontal;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int chunkCountVertical;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int positionX;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int positionY;

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x8E2568", Offset = "0x8E2568", VA = "0x8E2568")]
		private void Start()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x8E28C8", Offset = "0x8E28C8", VA = "0x8E28C8")]
		private void InitializeMaterial(Material material)
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x8E2C10", Offset = "0x8E2C10", VA = "0x8E2C10")]
		private void SetupAlphaTest(Material material)
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x8E2D98", Offset = "0x8E2D98", VA = "0x8E2D98")]
		public ExportMeshAndBasemapByPositionIndex()
		{
		}
	}
	[Token(Token = "0x2000639")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportMeshAndSplatmap : MonoBehaviour
	{
		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool terrainHasHoles;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool createFallbackTextures;

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x8E2DB8", Offset = "0x8E2DB8", VA = "0x8E2DB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x8E2F90", Offset = "0x8E2F90", VA = "0x8E2F90")]
		public ExportMeshAndSplatmap()
		{
		}
	}
	[Token(Token = "0x200063A")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportMeshWithEdgeFall : MonoBehaviour
	{
		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EdgeFall edgeFall;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D edgeFallTexture;

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x8E2FA0", Offset = "0x8E2FA0", VA = "0x8E2FA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x8E3218", Offset = "0x8E3218", VA = "0x8E3218")]
		public ExportMeshWithEdgeFall()
		{
		}
	}
	[Token(Token = "0x200063B")]
	[RequireComponent(typeof(MeshFilter), typeof(MeshRenderer))]
	public class ExportTrees : MonoBehaviour
	{
		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData terrainData;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int vertexCountHorizontal;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertexCountVertical;

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x8E329C", Offset = "0x8E329C", VA = "0x8E329C")]
		private void Start()
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x8E35D4", Offset = "0x8E35D4", VA = "0x8E35D4")]
		public ExportTrees()
		{
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x200063C")]
	public class CameraFly : MonoBehaviour
	{
		[Token(Token = "0x200063D")]
		private class CameraState
		{
			[Token(Token = "0x40023A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x40023AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x40023AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x40023AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x40023AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x40023AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x6002120")]
			[Address(RVA = "0x8E3638", Offset = "0x8E3638", VA = "0x8E3638")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6002121")]
			[Address(RVA = "0x8E3B90", Offset = "0x8E3B90", VA = "0x8E3B90")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x6002122")]
			[Address(RVA = "0x8E3C10", Offset = "0x8E3C10", VA = "0x8E3C10")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6002123")]
			[Address(RVA = "0x8E3C98", Offset = "0x8E3C98", VA = "0x8E3C98")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6002124")]
			[Address(RVA = "0x8E3EBC", Offset = "0x8E3EBC", VA = "0x8E3EBC")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float boost;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float positionLerpTime;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rotationLerpTime;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool invertY;

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x8E35E4", Offset = "0x8E35E4", VA = "0x8E35E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x8E36BC", Offset = "0x8E36BC", VA = "0x8E36BC")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x8E38EC", Offset = "0x8E38EC", VA = "0x8E38EC")]
		private void Update()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x8E3CE0", Offset = "0x8E3CE0", VA = "0x8E3CE0")]
		public CameraFly()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200063E")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700036A")]
		public bool Highlight
		{
			[Token(Token = "0x6002125")]
			[Address(RVA = "0x8E3EC4", Offset = "0x8E3EC4", VA = "0x8E3EC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002126")]
			[Address(RVA = "0x8E3ECC", Offset = "0x8E3ECC", VA = "0x8E3ECC")]
			set
			{
			}
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x8E3ED8", Offset = "0x8E3ED8", VA = "0x8E3ED8")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x8E4078", Offset = "0x8E4078", VA = "0x8E4078", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x8E4094", Offset = "0x8E4094", VA = "0x8E4094", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x8E40B0", Offset = "0x8E40B0", VA = "0x8E40B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x8E3F84", Offset = "0x8E3F84", VA = "0x8E3F84")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x8E4364", Offset = "0x8E4364", VA = "0x8E4364")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200063F")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700036B")]
		public bool InRange
		{
			[Token(Token = "0x600212E")]
			[Address(RVA = "0x8E43DC", Offset = "0x8E43DC", VA = "0x8E43DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600212F")]
			[Address(RVA = "0x8E43E4", Offset = "0x8E43E4", VA = "0x8E43E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public bool Targeted
		{
			[Token(Token = "0x6002130")]
			[Address(RVA = "0x8E4550", Offset = "0x8E4550", VA = "0x8E4550")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002131")]
			[Address(RVA = "0x8E4558", Offset = "0x8E4558", VA = "0x8E4558")]
			set
			{
			}
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x8E4564", Offset = "0x8E4564", VA = "0x8E4564", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x8E43F0", Offset = "0x8E43F0", VA = "0x8E43F0")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x8E4754", Offset = "0x8E4754", VA = "0x8E4754")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000640")]
	[RequireComponent(typeof(Rigidbody))]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700036D")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6002135")]
			[Address(RVA = "0x8E475C", Offset = "0x8E475C", VA = "0x8E475C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002136")]
			[Address(RVA = "0x8E4764", Offset = "0x8E4764", VA = "0x8E4764")]
			set
			{
			}
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x8E4780", Offset = "0x8E4780", VA = "0x8E4780", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x8E498C", Offset = "0x8E498C", VA = "0x8E498C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x8E5278", Offset = "0x8E5278", VA = "0x8E5278", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x8E57E0", Offset = "0x8E57E0", VA = "0x8E57E0", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x8E5BF0", Offset = "0x8E5BF0", VA = "0x8E5BF0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x8E4BB4", Offset = "0x8E4BB4", VA = "0x8E4BB4")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x8E5CDC", Offset = "0x8E5CDC", VA = "0x8E5CDC")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x8E60DC", Offset = "0x8E60DC", VA = "0x8E60DC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x8E60F4", Offset = "0x8E60F4", VA = "0x8E60F4", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x8E60FC", Offset = "0x8E60FC", VA = "0x8E60FC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000641")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000642")]
		public enum CrosshairState
		{
			[Token(Token = "0x40023CD")]
			Disabled,
			[Token(Token = "0x40023CE")]
			Enabled,
			[Token(Token = "0x40023CF")]
			Targeted
		}

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x8E611C", Offset = "0x8E611C", VA = "0x8E611C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x8E46C8", Offset = "0x8E46C8", VA = "0x8E46C8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x8E6184", Offset = "0x8E6184", VA = "0x8E6184")]
		private void Update()
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x8E61BC", Offset = "0x8E61BC", VA = "0x8E61BC")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000643")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x8E61C4", Offset = "0x8E61C4", VA = "0x8E61C4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x8E6270", Offset = "0x8E6270", VA = "0x8E6270")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x8E6318", Offset = "0x8E6318", VA = "0x8E6318")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000644")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6002148")]
		[Address(RVA = "0x8E6320", Offset = "0x8E6320", VA = "0x8E6320")]
		private void Start()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x8E640C", Offset = "0x8E640C", VA = "0x8E640C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x8E6418", Offset = "0x8E6418", VA = "0x8E6418")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x8E6424", Offset = "0x8E6424", VA = "0x8E6424")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000645")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x8E642C", Offset = "0x8E642C", VA = "0x8E642C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x8E647C", Offset = "0x8E647C", VA = "0x8E647C")]
		private void Update()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x8E6854", Offset = "0x8E6854", VA = "0x8E6854")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x8E6940", Offset = "0x8E6940", VA = "0x8E6940")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x8E6480", Offset = "0x8E6480", VA = "0x8E6480")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x8E6A2C", Offset = "0x8E6A2C", VA = "0x8E6A2C")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000647")]
		public enum ContactTest
		{
			[Token(Token = "0x40023E5")]
			PerpenTest,
			[Token(Token = "0x40023E6")]
			BackwardsPress
		}

		[Token(Token = "0x40023D7")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40023D8")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700036E")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6002152")]
			[Address(RVA = "0x8E6B04", Offset = "0x8E6B04", VA = "0x8E6B04", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036F")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6002153")]
			[Address(RVA = "0x8E6B0C", Offset = "0x8E6B0C", VA = "0x8E6B0C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x8E6B18", Offset = "0x8E6B18", VA = "0x8E6B18", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x8E6C18", Offset = "0x8E6C18", VA = "0x8E6C18")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x8E6E20", Offset = "0x8E6E20", VA = "0x8E6E20", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x8E73D4", Offset = "0x8E73D4", VA = "0x8E73D4")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x8E72F8", Offset = "0x8E72F8", VA = "0x8E72F8")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x8E7484", Offset = "0x8E7484", VA = "0x8E7484")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x8E7590", Offset = "0x8E7590", VA = "0x8E7590")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x8E7610", Offset = "0x8E7610", VA = "0x8E7610")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000648")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000370")]
		public Collider Collider
		{
			[Token(Token = "0x600215C")]
			[Address(RVA = "0x8E772C", Offset = "0x8E772C", VA = "0x8E772C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600215D")]
			[Address(RVA = "0x8E7734", Offset = "0x8E7734", VA = "0x8E7734")]
			private set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600215E")]
			[Address(RVA = "0x8E773C", Offset = "0x8E773C", VA = "0x8E773C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600215F")]
			[Address(RVA = "0x8E7744", Offset = "0x8E7744", VA = "0x8E7744")]
			private set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6002160")]
			[Address(RVA = "0x8E774C", Offset = "0x8E774C", VA = "0x8E774C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x8E779C", Offset = "0x8E779C", VA = "0x8E779C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x8E7830", Offset = "0x8E7830", VA = "0x8E7830")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000649")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000373")]
		Collider Collider
		{
			[Token(Token = "0x6002163")]
			get;
		}

		[Token(Token = "0x17000374")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6002164")]
			get;
		}

		[Token(Token = "0x17000375")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6002165")]
			get;
		}
	}
	[Token(Token = "0x200064A")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x8E6D74", Offset = "0x8E6D74", VA = "0x8E6D74")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200064B")]
	public enum InteractionType
	{
		[Token(Token = "0x40023EF")]
		Enter,
		[Token(Token = "0x40023F0")]
		Stay,
		[Token(Token = "0x40023F1")]
		Exit
	}
	[Token(Token = "0x200064C")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200064D")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4002403")]
			Mesh,
			[Token(Token = "0x4002404")]
			Skeleton,
			[Token(Token = "0x4002405")]
			Both
		}

		[Token(Token = "0x200064E")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000381")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002188")]
				[Address(RVA = "0x8E9C9C", Offset = "0x8E9C9C", VA = "0x8E9C9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002189")]
				[Address(RVA = "0x8E9CA4", Offset = "0x8E9CA4", VA = "0x8E9CA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002185")]
			[Address(RVA = "0x8E9A48", Offset = "0x8E9A48", VA = "0x8E9A48")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002186")]
			[Address(RVA = "0x8E9A70", Offset = "0x8E9A70", VA = "0x8E9A70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002187")]
			[Address(RVA = "0x8E9A74", Offset = "0x8E9A74", VA = "0x8E9A74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40023F2")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000376")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6002167")]
			[Address(RVA = "0x8E7838", Offset = "0x8E7838", VA = "0x8E7838")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002168")]
			[Address(RVA = "0x8E7864", Offset = "0x8E7864", VA = "0x8E7864")]
			private set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6002169")]
			[Address(RVA = "0x8E78C8", Offset = "0x8E78C8", VA = "0x8E78C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600216A")]
			[Address(RVA = "0x8E78F4", Offset = "0x8E78F4", VA = "0x8E78F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600216B")]
			[Address(RVA = "0x8E7958", Offset = "0x8E7958", VA = "0x8E7958")]
			get
			{
				return null;
			}
			[Token(Token = "0x600216C")]
			[Address(RVA = "0x8E7984", Offset = "0x8E7984", VA = "0x8E7984")]
			private set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600216D")]
			[Address(RVA = "0x8E79E8", Offset = "0x8E79E8", VA = "0x8E79E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600216E")]
			[Address(RVA = "0x8E7A14", Offset = "0x8E7A14", VA = "0x8E7A14")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x600216F")]
			[Address(RVA = "0x8E7A78", Offset = "0x8E7A78", VA = "0x8E7A78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002170")]
			[Address(RVA = "0x8E7AA4", Offset = "0x8E7AA4", VA = "0x8E7AA4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6002171")]
			[Address(RVA = "0x8E7B08", Offset = "0x8E7B08", VA = "0x8E7B08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002172")]
			[Address(RVA = "0x8E7B30", Offset = "0x8E7B30", VA = "0x8E7B30")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6002173")]
			[Address(RVA = "0x8E7B90", Offset = "0x8E7B90", VA = "0x8E7B90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002174")]
			[Address(RVA = "0x8E7BB8", Offset = "0x8E7BB8", VA = "0x8E7BB8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6002175")]
			[Address(RVA = "0x8E7C18", Offset = "0x8E7C18", VA = "0x8E7C18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002176")]
			[Address(RVA = "0x8E7C40", Offset = "0x8E7C40", VA = "0x8E7C40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037E")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6002177")]
			[Address(RVA = "0x8E7CA0", Offset = "0x8E7CA0", VA = "0x8E7CA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002178")]
			[Address(RVA = "0x8E7CC8", Offset = "0x8E7CC8", VA = "0x8E7CC8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6002179")]
			[Address(RVA = "0x8E7D28", Offset = "0x8E7D28", VA = "0x8E7D28")]
			get
			{
				return null;
			}
			[Token(Token = "0x600217A")]
			[Address(RVA = "0x8E7D50", Offset = "0x8E7D50", VA = "0x8E7D50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000380")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600217B")]
			[Address(RVA = "0x8E7DB0", Offset = "0x8E7DB0", VA = "0x8E7DB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600217C")]
			[Address(RVA = "0x8E7DF8", Offset = "0x8E7DF8", VA = "0x8E7DF8")]
			private set
			{
			}
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x8E7E50", Offset = "0x8E7E50", VA = "0x8E7E50")]
		private void Awake()
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x8E820C", Offset = "0x8E820C", VA = "0x8E820C")]
		private void Update()
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0x8E8198", Offset = "0x8E8198", VA = "0x8E8198")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x8E8288", Offset = "0x8E8288", VA = "0x8E8288")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x8E834C", Offset = "0x8E834C", VA = "0x8E834C")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x8E851C", Offset = "0x8E851C", VA = "0x8E851C")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x8E8780", Offset = "0x8E8780", VA = "0x8E8780")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x8E88E0", Offset = "0x8E88E0", VA = "0x8E88E0")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200064F")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000650")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600219B")]
			[Address(RVA = "0x8EA350", Offset = "0x8EA350", VA = "0x8EA350")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000383")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600218A")]
			[Address(RVA = "0x8E9CAC", Offset = "0x8E9CAC", VA = "0x8E9CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600218B")]
			[Address(RVA = "0x8E9CB4", Offset = "0x8E9CB4", VA = "0x8E9CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600218C")]
			[Address(RVA = "0x8E9CBC", Offset = "0x8E9CBC", VA = "0x8E9CBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600218D")]
			[Address(RVA = "0x8E9CC4", Offset = "0x8E9CC4", VA = "0x8E9CC4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x600218E")]
			[Address(RVA = "0x8E9CCC", Offset = "0x8E9CCC", VA = "0x8E9CCC")]
			add
			{
			}
			[Token(Token = "0x600218F")]
			[Address(RVA = "0x8E9D7C", Offset = "0x8E9D7C", VA = "0x8E9D7C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6002191")]
			[Address(RVA = "0x8E9E48", Offset = "0x8E9E48", VA = "0x8E9E48")]
			add
			{
			}
			[Token(Token = "0x6002192")]
			[Address(RVA = "0x8E9EF8", Offset = "0x8E9EF8", VA = "0x8E9EF8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6002194")]
			[Address(RVA = "0x8E9FC4", Offset = "0x8E9FC4", VA = "0x8E9FC4")]
			add
			{
			}
			[Token(Token = "0x6002195")]
			[Address(RVA = "0x8EA074", Offset = "0x8EA074", VA = "0x8EA074")]
			remove
			{
			}
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x8E9E2C", Offset = "0x8E9E2C", VA = "0x8E9E2C", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x8E9FA8", Offset = "0x8E9FA8", VA = "0x8E9FA8", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x8EA124", Offset = "0x8EA124", VA = "0x8EA124", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6002197")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x8EA140", Offset = "0x8EA140", VA = "0x8EA140", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x8EA244", Offset = "0x8EA244", VA = "0x8EA244", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x8EA348", Offset = "0x8EA348", VA = "0x8EA348")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000651")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4002411")]
		None,
		[Token(Token = "0x4002412")]
		Proximity,
		[Token(Token = "0x4002413")]
		Contact,
		[Token(Token = "0x4002414")]
		Action
	}
	[Token(Token = "0x2000652")]
	public enum InteractableState
	{
		[Token(Token = "0x4002416")]
		Default,
		[Token(Token = "0x4002417")]
		ProximityState,
		[Token(Token = "0x4002418")]
		ContactState,
		[Token(Token = "0x4002419")]
		ActionState
	}
	[Token(Token = "0x2000653")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x8EA398", Offset = "0x8EA398", VA = "0x8EA398")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000654")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000387")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600219D")]
			[Address(RVA = "0x8EA450", Offset = "0x8EA450", VA = "0x8EA450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x8EA194", Offset = "0x8EA194", VA = "0x8EA194")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x8EA298", Offset = "0x8EA298", VA = "0x8EA298")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x8EA4A8", Offset = "0x8EA4A8", VA = "0x8EA4A8")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000655")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000656")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4002429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x400242A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000388")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021AA")]
				[Address(RVA = "0x8EAC74", Offset = "0x8EAC74", VA = "0x8EAC74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000389")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021AB")]
				[Address(RVA = "0x8EAC7C", Offset = "0x8EAC7C", VA = "0x8EAC7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021A6")]
			[Address(RVA = "0x8EA650", Offset = "0x8EA650", VA = "0x8EA650")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60021A7")]
			[Address(RVA = "0x8EA78C", Offset = "0x8EA78C", VA = "0x8EA78C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021A8")]
			[Address(RVA = "0x8EA7A8", Offset = "0x8EA7A8", VA = "0x8EA7A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021A9")]
			[Address(RVA = "0x8EAC24", Offset = "0x8EAC24", VA = "0x8EAC24")]
			private void <>m__Finally1()
			{
			}
		}

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x8EA548", Offset = "0x8EA548", VA = "0x8EA548")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x8EA5B4", Offset = "0x8EA5B4", VA = "0x8EA5B4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x8EA678", Offset = "0x8EA678", VA = "0x8EA678")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x8EA784", Offset = "0x8EA784", VA = "0x8EA784")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000657")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700038A")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x8EAC84", Offset = "0x8EAC84", VA = "0x8EAC84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x8EADE0", Offset = "0x8EADE0", VA = "0x8EADE0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x8EAE7C", Offset = "0x8EAE7C", VA = "0x8EAE7C")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x8EAF18", Offset = "0x8EAF18", VA = "0x8EAF18")]
		private void Update()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x8EB1D0", Offset = "0x8EB1D0", VA = "0x8EB1D0")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x8EB20C", Offset = "0x8EB20C", VA = "0x8EB20C")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x8EB4E4", Offset = "0x8EB4E4", VA = "0x8EB4E4")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x8EB6EC", Offset = "0x8EB6EC", VA = "0x8EB6EC")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000658")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000659")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400243D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400243E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400243F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700038F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021C5")]
				[Address(RVA = "0x8EC8D4", Offset = "0x8EC8D4", VA = "0x8EC8D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000390")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021C6")]
				[Address(RVA = "0x8EC8DC", Offset = "0x8EC8DC", VA = "0x8EC8DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021C2")]
			[Address(RVA = "0x8EB988", Offset = "0x8EB988", VA = "0x8EB988")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60021C3")]
			[Address(RVA = "0x8EC438", Offset = "0x8EC438", VA = "0x8EC438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021C4")]
			[Address(RVA = "0x8EC43C", Offset = "0x8EC43C", VA = "0x8EC43C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002432")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700038B")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x8EB7F4", Offset = "0x8EB7F4", VA = "0x8EB7F4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700038C")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x8EB7FC", Offset = "0x8EB7FC", VA = "0x8EB7FC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700038D")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60021B6")]
			[Address(RVA = "0x8EB804", Offset = "0x8EB804", VA = "0x8EB804", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038E")]
		public override bool EnableState
		{
			[Token(Token = "0x60021B7")]
			[Address(RVA = "0x8EB80C", Offset = "0x8EB80C", VA = "0x8EB80C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021B8")]
			[Address(RVA = "0x8EB834", Offset = "0x8EB834", VA = "0x8EB834", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x8EB864", Offset = "0x8EB864", VA = "0x8EB864", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x8EB914", Offset = "0x8EB914", VA = "0x8EB914")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x8EB9B0", Offset = "0x8EB9B0", VA = "0x8EB9B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x8EBC38", Offset = "0x8EBC38", VA = "0x8EBC38")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x8EBDF4", Offset = "0x8EBDF4", VA = "0x8EBDF4")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x8EBEE0", Offset = "0x8EBEE0", VA = "0x8EBEE0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x8EC274", Offset = "0x8EC274", VA = "0x8EC274", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x8EC278", Offset = "0x8EC278", VA = "0x8EC278", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x8EC27C", Offset = "0x8EC27C", VA = "0x8EC27C")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200065A")]
	public class FingerTipPokeToolView : MonoBehaviour
	{
		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000391")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x8EC8E4", Offset = "0x8EC8E4", VA = "0x8EC8E4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x8EC8EC", Offset = "0x8EC8EC", VA = "0x8EC8EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000392")]
		public bool EnableState
		{
			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x8EC8F4", Offset = "0x8EC8F4", VA = "0x8EC8F4", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x8EC910", Offset = "0x8EC910", VA = "0x8EC910", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000393")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60021CB")]
			[Address(RVA = "0x8EC930", Offset = "0x8EC930", VA = "0x8EC930", Slot = "7")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021CC")]
			[Address(RVA = "0x8EC938", Offset = "0x8EC938", VA = "0x8EC938", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public float SphereRadius
		{
			[Token(Token = "0x60021CD")]
			[Address(RVA = "0x8EC944", Offset = "0x8EC944", VA = "0x8EC944")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x8EC94C", Offset = "0x8EC94C", VA = "0x8EC94C")]
			private set
			{
			}
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x8EC954", Offset = "0x8EC954", VA = "0x8EC954")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x8EC990", Offset = "0x8EC990", VA = "0x8EC990")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200065B")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4002445")]
		None = 0,
		[Token(Token = "0x4002446")]
		Ray = 1,
		[Token(Token = "0x4002447")]
		Poke = 4,
		[Token(Token = "0x4002448")]
		All = -1
	}
	[Token(Token = "0x200065C")]
	public enum ToolInputState
	{
		[Token(Token = "0x400244A")]
		Inactive,
		[Token(Token = "0x400244B")]
		PrimaryInputDown,
		[Token(Token = "0x400244C")]
		PrimaryInputDownStay,
		[Token(Token = "0x400244D")]
		PrimaryInputUp
	}
	[Token(Token = "0x200065D")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x8EC220", Offset = "0x8EC220", VA = "0x8EC220")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200065E")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000395")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x8EC998", Offset = "0x8EC998", VA = "0x8EC998")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x8EC9A0", Offset = "0x8EC9A0", VA = "0x8EC9A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x8EC9A8", Offset = "0x8EC9A8", VA = "0x8EC9A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60021D5")]
			get;
		}

		[Token(Token = "0x17000398")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60021D6")]
			get;
		}

		[Token(Token = "0x17000399")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60021D7")]
			get;
		}

		[Token(Token = "0x1700039A")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60021D8")]
			[Address(RVA = "0x8EC9B4", Offset = "0x8EC9B4", VA = "0x8EC9B4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60021D9")]
			[Address(RVA = "0x8EC9C0", Offset = "0x8EC9C0", VA = "0x8EC9C0")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60021DA")]
			[Address(RVA = "0x8EC9CC", Offset = "0x8EC9CC", VA = "0x8EC9CC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60021DB")]
			[Address(RVA = "0x8EC9D8", Offset = "0x8EC9D8", VA = "0x8EC9D8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60021E0")]
			get;
			[Token(Token = "0x60021E1")]
			set;
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x8EC9E4", Offset = "0x8EC9E4", VA = "0x8EC9E4")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60021DD")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60021DE")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60021DF")]
		public abstract void DeFocus();

		[Token(Token = "0x60021E2")]
		public abstract void Initialize();

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x8EB654", Offset = "0x8EB654", VA = "0x8EB654")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x8EB69C", Offset = "0x8EB69C", VA = "0x8EB69C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x8EC9EC", Offset = "0x8EC9EC", VA = "0x8EC9EC", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x8ECCB4", Offset = "0x8ECCB4", VA = "0x8ECCB4", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x8EC290", Offset = "0x8EC290", VA = "0x8EC290")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200065F")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000660")]
		private enum PinchState
		{
			[Token(Token = "0x400245E")]
			None,
			[Token(Token = "0x400245F")]
			PinchDown,
			[Token(Token = "0x4002460")]
			PinchStay,
			[Token(Token = "0x4002461")]
			PinchUp
		}

		[Token(Token = "0x400245A")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700039D")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60021E8")]
			[Address(RVA = "0x8ED550", Offset = "0x8ED550", VA = "0x8ED550")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039E")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60021E9")]
			[Address(RVA = "0x8ED5CC", Offset = "0x8ED5CC", VA = "0x8ED5CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039F")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60021EA")]
			[Address(RVA = "0x8ED648", Offset = "0x8ED648", VA = "0x8ED648")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x8ED6C4", Offset = "0x8ED6C4", VA = "0x8ED6C4")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x8ED6EC", Offset = "0x8ED6EC", VA = "0x8ED6EC")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000661")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4002462")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4002463")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4002464")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4002465")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4002466")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170003A0")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60021ED")]
			[Address(RVA = "0x8ED864", Offset = "0x8ED864", VA = "0x8ED864", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170003A1")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60021EE")]
			[Address(RVA = "0x8ED86C", Offset = "0x8ED86C", VA = "0x8ED86C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170003A2")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60021EF")]
			[Address(RVA = "0x8ED8C8", Offset = "0x8ED8C8", VA = "0x8ED8C8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A3")]
		public override bool EnableState
		{
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x8ED8D0", Offset = "0x8ED8D0", VA = "0x8ED8D0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021F1")]
			[Address(RVA = "0x8ED910", Offset = "0x8ED910", VA = "0x8ED910", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x8ED980", Offset = "0x8ED980", VA = "0x8ED980", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x8ED9D4", Offset = "0x8ED9D4", VA = "0x8ED9D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x8EDA60", Offset = "0x8EDA60", VA = "0x8EDA60")]
		private void Update()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x8EDD0C", Offset = "0x8EDD0C", VA = "0x8EDD0C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x8EDD88", Offset = "0x8EDD88", VA = "0x8EDD88", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x8EE17C", Offset = "0x8EE17C", VA = "0x8EE17C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x8EE318", Offset = "0x8EE318", VA = "0x8EE318")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x8EE430", Offset = "0x8EE430", VA = "0x8EE430")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x8EE754", Offset = "0x8EE754", VA = "0x8EE754")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x8EEAD0", Offset = "0x8EEAD0", VA = "0x8EEAD0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x8EEBA8", Offset = "0x8EEBA8", VA = "0x8EEBA8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x8EEBD8", Offset = "0x8EEBD8", VA = "0x8EEBD8")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000662")]
	public class RayToolView : MonoBehaviour
	{
		[Token(Token = "0x4002472")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4002473")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170003A4")]
		public bool EnableState
		{
			[Token(Token = "0x60021FE")]
			[Address(RVA = "0x8ED8F4", Offset = "0x8ED8F4", VA = "0x8ED8F4", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x8ED92C", Offset = "0x8ED92C", VA = "0x8ED92C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6002200")]
			[Address(RVA = "0x8EECEC", Offset = "0x8EECEC", VA = "0x8EECEC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002201")]
			[Address(RVA = "0x8EDCD0", Offset = "0x8EDCD0", VA = "0x8EDCD0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6002203")]
			[Address(RVA = "0x8EEF14", Offset = "0x8EEF14", VA = "0x8EEF14", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002204")]
			[Address(RVA = "0x8EEF1C", Offset = "0x8EEF1C", VA = "0x8EEF1C")]
			set
			{
			}
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x8EECF4", Offset = "0x8EECF4", VA = "0x8EECF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x8EEB08", Offset = "0x8EEB08", VA = "0x8EEB08", Slot = "9")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x8EEF24", Offset = "0x8EEF24", VA = "0x8EEF24")]
		private void Update()
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x8EF1D0", Offset = "0x8EF1D0", VA = "0x8EF1D0")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x8EF278", Offset = "0x8EF278", VA = "0x8EF278")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000663")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170003A7")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6002209")]
			[Address(RVA = "0x8EF2DC", Offset = "0x8EF2DC", VA = "0x8EF2DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600220A")]
			[Address(RVA = "0x8EF2E4", Offset = "0x8EF2E4", VA = "0x8EF2E4")]
			set
			{
			}
		}

		[Token(Token = "0x170003A8")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600220B")]
			[Address(RVA = "0x8EF350", Offset = "0x8EF350", VA = "0x8EF350")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600220C")]
			[Address(RVA = "0x8EF358", Offset = "0x8EF358", VA = "0x8EF358")]
			set
			{
			}
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x8EF3B4", Offset = "0x8EF3B4", VA = "0x8EF3B4")]
		private void Start()
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x8EF654", Offset = "0x8EF654", VA = "0x8EF654")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x8EF664", Offset = "0x8EF664", VA = "0x8EF664")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x8EF674", Offset = "0x8EF674", VA = "0x8EF674")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000664")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x8EF67C", Offset = "0x8EF67C", VA = "0x8EF67C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x8EF708", Offset = "0x8EF708", VA = "0x8EF708")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x8EF798", Offset = "0x8EF798", VA = "0x8EF798")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x8EF828", Offset = "0x8EF828", VA = "0x8EF828")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x8EF8D4", Offset = "0x8EF8D4", VA = "0x8EF8D4")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x8EF9B0", Offset = "0x8EF9B0", VA = "0x8EF9B0")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x8EF9F4", Offset = "0x8EF9F4", VA = "0x8EF9F4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x8EFA58", Offset = "0x8EFA58", VA = "0x8EFA58")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x8EFAB8", Offset = "0x8EFAB8", VA = "0x8EFAB8")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000665")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x8EFAC0", Offset = "0x8EFAC0", VA = "0x8EFAC0")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x8EFA88", Offset = "0x8EFA88", VA = "0x8EFA88")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x8EFAF4", Offset = "0x8EFAF4", VA = "0x8EFAF4")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000666")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000667")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400248D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400248E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400248F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4002490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4002491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4002492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170003A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002225")]
				[Address(RVA = "0x8F0174", Offset = "0x8F0174", VA = "0x8F0174", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002226")]
				[Address(RVA = "0x8F017C", Offset = "0x8F017C", VA = "0x8F017C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002222")]
			[Address(RVA = "0x8EFEEC", Offset = "0x8EFEEC", VA = "0x8EFEEC")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002223")]
			[Address(RVA = "0x8EFFB4", Offset = "0x8EFFB4", VA = "0x8EFFB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002224")]
			[Address(RVA = "0x8EFFB8", Offset = "0x8EFFB8", VA = "0x8EFFB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002483")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4002484")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x8EFAFC", Offset = "0x8EFAFC", VA = "0x8EFAFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x8EFB9C", Offset = "0x8EFB9C", VA = "0x8EFB9C")]
		private void Update()
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x8EFEAC", Offset = "0x8EFEAC", VA = "0x8EFEAC")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x8EFE38", Offset = "0x8EFE38", VA = "0x8EFE38")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x8EFF14", Offset = "0x8EFF14", VA = "0x8EFF14")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000668")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000669")]
		public enum SelectionState
		{
			[Token(Token = "0x400249A")]
			Off,
			[Token(Token = "0x400249B")]
			Selected,
			[Token(Token = "0x400249C")]
			Highlighted
		}

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170003AB")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6002227")]
			[Address(RVA = "0x8F0184", Offset = "0x8F0184", VA = "0x8F0184")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6002228")]
			[Address(RVA = "0x8F018C", Offset = "0x8F018C", VA = "0x8F018C")]
			set
			{
			}
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x8F02E0", Offset = "0x8F02E0", VA = "0x8F02E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x8F04A4", Offset = "0x8F04A4", VA = "0x8F04A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x8F0200", Offset = "0x8F0200", VA = "0x8F0200")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x8F056C", Offset = "0x8F056C", VA = "0x8F056C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200066A")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200066B")]
		public enum SegmentType
		{
			[Token(Token = "0x40024AB")]
			Straight,
			[Token(Token = "0x40024AC")]
			LeftTurn,
			[Token(Token = "0x40024AD")]
			RightTurn,
			[Token(Token = "0x40024AE")]
			Switch
		}

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x40024A3")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x40024A4")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170003AC")]
		public float StartDistance
		{
			[Token(Token = "0x600222E")]
			[Address(RVA = "0x8F05DC", Offset = "0x8F05DC", VA = "0x8F05DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600222F")]
			[Address(RVA = "0x8F05E4", Offset = "0x8F05E4", VA = "0x8F05E4")]
			set
			{
			}
		}

		[Token(Token = "0x170003AD")]
		public float GridSize
		{
			[Token(Token = "0x6002230")]
			[Address(RVA = "0x8F05EC", Offset = "0x8F05EC", VA = "0x8F05EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002231")]
			[Address(RVA = "0x8F05F4", Offset = "0x8F05F4", VA = "0x8F05F4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003AE")]
		public int SubDivCount
		{
			[Token(Token = "0x6002232")]
			[Address(RVA = "0x8F05FC", Offset = "0x8F05FC", VA = "0x8F05FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002233")]
			[Address(RVA = "0x8F0604", Offset = "0x8F0604", VA = "0x8F0604")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public SegmentType Type
		{
			[Token(Token = "0x6002234")]
			[Address(RVA = "0x8F060C", Offset = "0x8F060C", VA = "0x8F060C")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170003B0")]
		public Pose EndPose
		{
			[Token(Token = "0x6002235")]
			[Address(RVA = "0x8F0614", Offset = "0x8F0614", VA = "0x8F0614")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		public float Radius
		{
			[Token(Token = "0x6002236")]
			[Address(RVA = "0x8F09E8", Offset = "0x8F09E8", VA = "0x8F09E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B2")]
		public float SegmentLength
		{
			[Token(Token = "0x6002238")]
			[Address(RVA = "0x8F0670", Offset = "0x8F0670", VA = "0x8F0670")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x8F09F8", Offset = "0x8F09F8", VA = "0x8F09F8")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x8F06B0", Offset = "0x8F06B0", VA = "0x8F06B0")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x8F0A10", Offset = "0x8F0A10", VA = "0x8F0A10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x8F0A6C", Offset = "0x8F0A6C", VA = "0x8F0A6C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x8F13A0", Offset = "0x8F13A0", VA = "0x8F13A0")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x8F1624", Offset = "0x8F1624", VA = "0x8F1624")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200066C")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200066D")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40024C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40024C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170003B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600224C")]
				[Address(RVA = "0x8F2148", Offset = "0x8F2148", VA = "0x8F2148", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600224D")]
				[Address(RVA = "0x8F2150", Offset = "0x8F2150", VA = "0x8F2150", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002249")]
			[Address(RVA = "0x8F1F7C", Offset = "0x8F1F7C", VA = "0x8F1F7C")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600224A")]
			[Address(RVA = "0x8F1FCC", Offset = "0x8F1FCC", VA = "0x8F1FCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600224B")]
			[Address(RVA = "0x8F1FD0", Offset = "0x8F1FD0", VA = "0x8F1FD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40024AF")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40024B0")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x8F1784", Offset = "0x8F1784", VA = "0x8F1784")]
		private void Awake()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x8F183C", Offset = "0x8F183C", VA = "0x8F183C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x8F18CC", Offset = "0x8F18CC", VA = "0x8F18CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x8F1A14", Offset = "0x8F1A14", VA = "0x8F1A14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x8F1BA0", Offset = "0x8F1BA0", VA = "0x8F1BA0")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x8F1CB0", Offset = "0x8F1CB0", VA = "0x8F1CB0")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x8F1EB4", Offset = "0x8F1EB4", VA = "0x8F1EB4")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x8F1DC0", Offset = "0x8F1DC0", VA = "0x8F1DC0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x8F1DD4", Offset = "0x8F1DD4", VA = "0x8F1DD4")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x8F1F08", Offset = "0x8F1F08", VA = "0x8F1F08")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x8F1FA4", Offset = "0x8F1FA4", VA = "0x8F1FA4")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200066E")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170003B5")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600224E")]
			[Address(RVA = "0x8F2158", Offset = "0x8F2158", VA = "0x8F2158")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x8F2168", Offset = "0x8F2168", VA = "0x8F2168", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x8F2170", Offset = "0x8F2170", VA = "0x8F2170", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x8F24A0", Offset = "0x8F24A0", VA = "0x8F24A0")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x200066F")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40024C8")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40024C9")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170003B6")]
		public float Distance
		{
			[Token(Token = "0x6002252")]
			[Address(RVA = "0x8F259C", Offset = "0x8F259C", VA = "0x8F259C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002253")]
			[Address(RVA = "0x8F25A4", Offset = "0x8F25A4", VA = "0x8F25A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003B7")]
		public float Scale
		{
			[Token(Token = "0x6002254")]
			[Address(RVA = "0x8F25AC", Offset = "0x8F25AC", VA = "0x8F25AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002255")]
			[Address(RVA = "0x8F25B4", Offset = "0x8F25B4", VA = "0x8F25B4")]
			set
			{
			}
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x8F216C", Offset = "0x8F216C", VA = "0x8F216C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x8F25BC", Offset = "0x8F25BC", VA = "0x8F25BC")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x8F21AC", Offset = "0x8F21AC", VA = "0x8F21AC")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x8F23BC", Offset = "0x8F23BC", VA = "0x8F23BC")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600225A")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x8F2500", Offset = "0x8F2500", VA = "0x8F2500")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000670")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000671")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40024DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40024E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40024E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40024E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40024E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40024E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40024E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40024E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40024E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170003B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002269")]
				[Address(RVA = "0x8F2E8C", Offset = "0x8F2E8C", VA = "0x8F2E8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600226A")]
				[Address(RVA = "0x8F2E94", Offset = "0x8F2E94", VA = "0x8F2E94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002266")]
			[Address(RVA = "0x8F2B00", Offset = "0x8F2B00", VA = "0x8F2B00")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002267")]
			[Address(RVA = "0x8F2C74", Offset = "0x8F2C74", VA = "0x8F2C74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002268")]
			[Address(RVA = "0x8F2C78", Offset = "0x8F2C78", VA = "0x8F2C78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x8F272C", Offset = "0x8F272C", VA = "0x8F272C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x8F2788", Offset = "0x8F2788", VA = "0x8F2788")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x8F2860", Offset = "0x8F2860", VA = "0x8F2860")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x8F29B4", Offset = "0x8F29B4", VA = "0x8F29B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x8F28BC", Offset = "0x8F28BC", VA = "0x8F28BC")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x8F2A7C", Offset = "0x8F2A7C", VA = "0x8F2A7C")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x8F2B28", Offset = "0x8F2B28", VA = "0x8F2B28")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x8F2BC0", Offset = "0x8F2BC0", VA = "0x8F2BC0")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x8F2C1C", Offset = "0x8F2C1C", VA = "0x8F2C1C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000672")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000673")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002506")]
			Start,
			[Token(Token = "0x4002507")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4002508")]
			Stop
		}

		[Token(Token = "0x2000674")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400250C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400250D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400250E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400250F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4002511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170003BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600227D")]
				[Address(RVA = "0x8F372C", Offset = "0x8F372C", VA = "0x8F372C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600227E")]
				[Address(RVA = "0x8F3734", Offset = "0x8F3734", VA = "0x8F3734", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600227A")]
			[Address(RVA = "0x8F313C", Offset = "0x8F313C", VA = "0x8F313C")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600227B")]
			[Address(RVA = "0x8F3504", Offset = "0x8F3504", VA = "0x8F3504", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600227C")]
			[Address(RVA = "0x8F3508", Offset = "0x8F3508", VA = "0x8F3508", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40024E8")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40024E9")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40024EA")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40024EB")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x8F2E9C", Offset = "0x8F2E9C", VA = "0x8F2E9C")]
		private void Start()
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x8F2FF8", Offset = "0x8F2FF8", VA = "0x8F2FF8")]
		private void Update()
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x8F3004", Offset = "0x8F3004", VA = "0x8F3004", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x8EF6AC", Offset = "0x8EF6AC", VA = "0x8EF6AC")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x8F2F70", Offset = "0x8F2F70", VA = "0x8F2F70")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x8F3164", Offset = "0x8F3164", VA = "0x8F3164")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x8F30DC", Offset = "0x8F30DC", VA = "0x8F30DC")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x8EF738", Offset = "0x8EF738", VA = "0x8EF738")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x8EF7C8", Offset = "0x8EF7C8", VA = "0x8EF7C8")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x8F3378", Offset = "0x8F3378", VA = "0x8F3378")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x8F346C", Offset = "0x8F346C", VA = "0x8F346C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x8EF858", Offset = "0x8EF858", VA = "0x8EF858")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x8EF904", Offset = "0x8EF904", VA = "0x8EF904")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x8EF9E4", Offset = "0x8EF9E4", VA = "0x8EF9E4")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x8F34A8", Offset = "0x8F34A8", VA = "0x8F34A8")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000675")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170003BC")]
		public float TrackLength
		{
			[Token(Token = "0x600227F")]
			[Address(RVA = "0x8F373C", Offset = "0x8F373C", VA = "0x8F373C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002280")]
			[Address(RVA = "0x8F3744", Offset = "0x8F3744", VA = "0x8F3744")]
			private set
			{
			}
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x8F374C", Offset = "0x8F374C", VA = "0x8F374C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x8F2624", Offset = "0x8F2624", VA = "0x8F2624")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x8F3750", Offset = "0x8F3750", VA = "0x8F3750")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x8F3948", Offset = "0x8F3948", VA = "0x8F3948")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x8F3A28", Offset = "0x8F3A28", VA = "0x8F3A28")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000676")]
	public class Pose
	{
		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x8F16EC", Offset = "0x8F16EC", VA = "0x8F16EC")]
		public Pose()
		{
		}
	}
	[Token(Token = "0x2000677")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000678")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x400252A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x400252B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170003BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002293")]
				[Address(RVA = "0x8F3FD4", Offset = "0x8F3FD4", VA = "0x8F3FD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002294")]
				[Address(RVA = "0x8F3FDC", Offset = "0x8F3FDC", VA = "0x8F3FDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002290")]
			[Address(RVA = "0x8F3CBC", Offset = "0x8F3CBC", VA = "0x8F3CBC")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0x8F3E30", Offset = "0x8F3E30", VA = "0x8F3E30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002292")]
			[Address(RVA = "0x8F3E34", Offset = "0x8F3E34", VA = "0x8F3E34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000679")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400252C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400252D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400252E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400252F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4002530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4002531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170003C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002298")]
				[Address(RVA = "0x8F40B8", Offset = "0x8F40B8", VA = "0x8F40B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002299")]
				[Address(RVA = "0x8F40C0", Offset = "0x8F40C0", VA = "0x8F40C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002295")]
			[Address(RVA = "0x8F3D98", Offset = "0x8F3D98", VA = "0x8F3D98")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002296")]
			[Address(RVA = "0x8F3FE4", Offset = "0x8F3FE4", VA = "0x8F3FE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002297")]
			[Address(RVA = "0x8F3FE8", Offset = "0x8F3FE8", VA = "0x8F3FE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400251B")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170003BD")]
		public bool IsMoving
		{
			[Token(Token = "0x6002287")]
			[Address(RVA = "0x8F3A44", Offset = "0x8F3A44", VA = "0x8F3A44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002288")]
			[Address(RVA = "0x8F3A4C", Offset = "0x8F3A4C", VA = "0x8F3A4C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x8F3A58", Offset = "0x8F3A58", VA = "0x8F3A58")]
		private void Start()
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x8F3A88", Offset = "0x8F3A88", VA = "0x8F3A88")]
		private void Update()
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x8F3BC8", Offset = "0x8F3BC8", VA = "0x8F3BC8")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x8F3C38", Offset = "0x8F3C38", VA = "0x8F3C38")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x8F3CE4", Offset = "0x8F3CE4", VA = "0x8F3CE4")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x8F3DC0", Offset = "0x8F3DC0", VA = "0x8F3DC0")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x8F3E28", Offset = "0x8F3E28", VA = "0x8F3E28")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200067A")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x8F40C8", Offset = "0x8F40C8", VA = "0x8F40C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x8F413C", Offset = "0x8F413C", VA = "0x8F413C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x8F4204", Offset = "0x8F4204", VA = "0x8F4204")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x8F4314", Offset = "0x8F4314", VA = "0x8F4314")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x8F4390", Offset = "0x8F4390", VA = "0x8F4390")]
		private void Update()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x8F4458", Offset = "0x8F4458", VA = "0x8F4458")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200067B")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200067C")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400254F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170003C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022B3")]
				[Address(RVA = "0x8F5AD8", Offset = "0x8F5AD8", VA = "0x8F5AD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022B4")]
				[Address(RVA = "0x8F5AE0", Offset = "0x8F5AE0", VA = "0x8F5AE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022B0")]
			[Address(RVA = "0x8F5168", Offset = "0x8F5168", VA = "0x8F5168")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60022B1")]
			[Address(RVA = "0x8F58DC", Offset = "0x8F58DC", VA = "0x8F58DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022B2")]
			[Address(RVA = "0x8F58E0", Offset = "0x8F58E0", VA = "0x8F58E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4002538")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4002539")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400253A")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject mainCamera;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x8F4468", Offset = "0x8F4468", VA = "0x8F4468")]
		private void Start()
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x8F4C98", Offset = "0x8F4C98", VA = "0x8F4C98")]
		private void Update()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x8F4DC0", Offset = "0x8F4DC0", VA = "0x8F4DC0")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x8F4EF0", Offset = "0x8F4EF0", VA = "0x8F4EF0")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x8F5020", Offset = "0x8F5020", VA = "0x8F5020")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x8F4DA0", Offset = "0x8F4DA0", VA = "0x8F4DA0")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x8F50F4", Offset = "0x8F50F4", VA = "0x8F50F4")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x8F5190", Offset = "0x8F5190", VA = "0x8F5190")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x8F48C8", Offset = "0x8F48C8", VA = "0x8F48C8")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x8F52D8", Offset = "0x8F52D8", VA = "0x8F52D8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x8F51B8", Offset = "0x8F51B8", VA = "0x8F51B8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x8F5660", Offset = "0x8F5660", VA = "0x8F5660")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x8F574C", Offset = "0x8F574C", VA = "0x8F574C")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x8F57E0", Offset = "0x8F57E0", VA = "0x8F57E0")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x8F5834", Offset = "0x8F5834", VA = "0x8F5834")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x8F5888", Offset = "0x8F5888", VA = "0x8F5888")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200067D")]
	[RequireComponent(typeof(OVRGrabber))]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200067E")]
		private sealed class <>c
		{
			[Token(Token = "0x400256E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400256F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60022C2")]
			[Address(RVA = "0x8F68F0", Offset = "0x8F68F0", VA = "0x8F68F0")]
			public <>c()
			{
			}

			[Token(Token = "0x60022C3")]
			[Address(RVA = "0x8F68F8", Offset = "0x8F68F8", VA = "0x8F68F8")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002552")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4002553")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4002554")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4002555")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4002556")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4002557")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4002558")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4002559")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400255A")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400255B")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400255C")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x8F5AE8", Offset = "0x8F5AE8", VA = "0x8F5AE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x8F5B40", Offset = "0x8F5B40", VA = "0x8F5B40")]
		private void Start()
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x8F5F90", Offset = "0x8F5F90", VA = "0x8F5F90")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x8F607C", Offset = "0x8F607C", VA = "0x8F607C")]
		private void Update()
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x8F61E0", Offset = "0x8F61E0", VA = "0x8F61E0")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x8F64B0", Offset = "0x8F64B0", VA = "0x8F64B0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x8F6594", Offset = "0x8F6594", VA = "0x8F6594")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x8F6744", Offset = "0x8F6744", VA = "0x8F6744")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x8F626C", Offset = "0x8F626C", VA = "0x8F626C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x8F62C0", Offset = "0x8F62C0", VA = "0x8F62C0")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x8F5E50", Offset = "0x8F5E50", VA = "0x8F5E50")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x8F6868", Offset = "0x8F6868", VA = "0x8F6868")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200067F")]
	public enum HandPoseId
	{
		[Token(Token = "0x4002571")]
		Default,
		[Token(Token = "0x4002572")]
		Generic,
		[Token(Token = "0x4002573")]
		PingPongBall,
		[Token(Token = "0x4002574")]
		Controller
	}
	[Token(Token = "0x2000680")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170003C4")]
		public bool AllowPointing
		{
			[Token(Token = "0x60022C4")]
			[Address(RVA = "0x8F6920", Offset = "0x8F6920", VA = "0x8F6920")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C5")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x8F6928", Offset = "0x8F6928", VA = "0x8F6928")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C6")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60022C6")]
			[Address(RVA = "0x8F6930", Offset = "0x8F6930", VA = "0x8F6930")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x8F6938", Offset = "0x8F6938", VA = "0x8F6938")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000681")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x8F6940", Offset = "0x8F6940", VA = "0x8F6940")]
		private void Update()
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x8F6C0C", Offset = "0x8F6C0C", VA = "0x8F6C0C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x8F6C5C", Offset = "0x8F6C5C", VA = "0x8F6C5C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x8F6C94", Offset = "0x8F6C94", VA = "0x8F6C94")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000682")]
	public enum FaceType : uint
	{
		[Token(Token = "0x400257C")]
		TRIANGLES,
		[Token(Token = "0x400257D")]
		QUADS
	}
	[Token(Token = "0x2000683")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x400257F")]
		ABSORPTION,
		[Token(Token = "0x4002580")]
		TRANSMISSION,
		[Token(Token = "0x4002581")]
		SCATTERING
	}
	[Token(Token = "0x2000684")]
	public struct MeshGroup
	{
		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000685")]
	public class CAPI
	{
		[Token(Token = "0x2000686")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[PreserveSig]
		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x8F6CF4", Offset = "0x8F6CF4", VA = "0x8F6CF4")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x8F6D80", Offset = "0x8F6D80", VA = "0x8F6D80")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x8F6F9C", Offset = "0x8F6F9C", VA = "0x8F6F9C")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x8F7074", Offset = "0x8F7074", VA = "0x8F7074")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x8F70D8", Offset = "0x8F70D8", VA = "0x8F70D8")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x8F7140", Offset = "0x8F7140", VA = "0x8F7140")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x8F71BC", Offset = "0x8F71BC", VA = "0x8F71BC")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x8F72EC", Offset = "0x8F72EC", VA = "0x8F72EC")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x8F7368", Offset = "0x8F7368", VA = "0x8F7368")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x8F7498", Offset = "0x8F7498", VA = "0x8F7498")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x8F7514", Offset = "0x8F7514", VA = "0x8F7514")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x8F7590", Offset = "0x8F7590", VA = "0x8F7590")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x8F760C", Offset = "0x8F760C", VA = "0x8F760C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x8F7688", Offset = "0x8F7688", VA = "0x8F7688")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x8F770C", Offset = "0x8F770C", VA = "0x8F770C")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x8F7790", Offset = "0x8F7790", VA = "0x8F7790")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x8F7814", Offset = "0x8F7814", VA = "0x8F7814")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x8F7890", Offset = "0x8F7890", VA = "0x8F7890")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x8F7914", Offset = "0x8F7914", VA = "0x8F7914")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x8F7998", Offset = "0x8F7998", VA = "0x8F7998")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x8F7A1C", Offset = "0x8F7A1C", VA = "0x8F7A1C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x8F7A98", Offset = "0x8F7A98", VA = "0x8F7A98")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x8F7B2C", Offset = "0x8F7B2C", VA = "0x8F7B2C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x8F7B94", Offset = "0x8F7B94", VA = "0x8F7B94")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x8F7C30", Offset = "0x8F7C30", VA = "0x8F7C30")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x8F7CF4", Offset = "0x8F7CF4", VA = "0x8F7CF4")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x8F7D80", Offset = "0x8F7D80", VA = "0x8F7D80")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x8F7E04", Offset = "0x8F7E04", VA = "0x8F7E04")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x8F7E88", Offset = "0x8F7E88", VA = "0x8F7E88")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x8F8074", Offset = "0x8F8074", VA = "0x8F8074")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x8F81D8", Offset = "0x8F81D8", VA = "0x8F81D8")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x60022EB")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x8F8254", Offset = "0x8F8254", VA = "0x8F8254")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x8F84E8", Offset = "0x8F84E8", VA = "0x8F84E8")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x8F8564", Offset = "0x8F8564", VA = "0x8F8564")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x8F86C8", Offset = "0x8F86C8", VA = "0x8F86C8")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x8F8744", Offset = "0x8F8744", VA = "0x8F8744")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x8F88A8", Offset = "0x8F88A8", VA = "0x8F88A8")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x8F8924", Offset = "0x8F8924", VA = "0x8F8924")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x8F8A88", Offset = "0x8F8A88", VA = "0x8F8A88")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x8F8B04", Offset = "0x8F8B04", VA = "0x8F8B04")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x8F8C68", Offset = "0x8F8C68", VA = "0x8F8C68")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x8F8CE4", Offset = "0x8F8CE4", VA = "0x8F8CE4")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x8F8D70", Offset = "0x8F8D70", VA = "0x8F8D70")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x8F8DEC", Offset = "0x8F8DEC", VA = "0x8F8DEC")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x8F8FA4", Offset = "0x8F8FA4", VA = "0x8F8FA4")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x8F90E0", Offset = "0x8F90E0", VA = "0x8F90E0")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x8F8F28", Offset = "0x8F8F28", VA = "0x8F8F28")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x8F915C", Offset = "0x8F915C", VA = "0x8F915C")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x8F91D8", Offset = "0x8F91D8", VA = "0x8F91D8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x8F925C", Offset = "0x8F925C", VA = "0x8F925C")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x8F92D8", Offset = "0x8F92D8", VA = "0x8F92D8")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6002300")]
		[Address(RVA = "0x8F935C", Offset = "0x8F935C", VA = "0x8F935C")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002301")]
		[Address(RVA = "0x8F93D8", Offset = "0x8F93D8", VA = "0x8F93D8")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x8F9454", Offset = "0x8F9454", VA = "0x8F9454")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002303")]
		[Address(RVA = "0x8F969C", Offset = "0x8F969C", VA = "0x8F969C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x8F9720", Offset = "0x8F9720", VA = "0x8F9720")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002305")]
		[Address(RVA = "0x8F9934", Offset = "0x8F9934", VA = "0x8F9934")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x8F99C8", Offset = "0x8F99C8", VA = "0x8F99C8")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6002307")]
		[Address(RVA = "0x8F9AFC", Offset = "0x8F9AFC", VA = "0x8F9AFC")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002308")]
		[Address(RVA = "0x8F9B78", Offset = "0x8F9B78", VA = "0x8F9B78")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x8F9BF4", Offset = "0x8F9BF4", VA = "0x8F9BF4")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x600230A")]
		[Address(RVA = "0x8F9D2C", Offset = "0x8F9D2C", VA = "0x8F9D2C")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x8F9DA8", Offset = "0x8F9DA8", VA = "0x8F9DA8")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x600230C")]
		[Address(RVA = "0x8F9EE0", Offset = "0x8F9EE0", VA = "0x8F9EE0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600230D")]
		[Address(RVA = "0x8F9F5C", Offset = "0x8F9F5C", VA = "0x8F9F5C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600230E")]
		[Address(RVA = "0x8F9FE0", Offset = "0x8F9FE0", VA = "0x8F9FE0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600230F")]
		[Address(RVA = "0x8FA064", Offset = "0x8FA064", VA = "0x8FA064")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002310")]
		[Address(RVA = "0x8FA0E8", Offset = "0x8FA0E8", VA = "0x8FA0E8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002311")]
		[Address(RVA = "0x8FA164", Offset = "0x8FA164", VA = "0x8FA164")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002312")]
		[Address(RVA = "0x8FA1E8", Offset = "0x8FA1E8", VA = "0x8FA1E8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002313")]
		[Address(RVA = "0x8FA264", Offset = "0x8FA264", VA = "0x8FA264")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002314")]
		[Address(RVA = "0x8FA2E0", Offset = "0x8FA2E0", VA = "0x8FA2E0")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002315")]
		[Address(RVA = "0x8FA390", Offset = "0x8FA390", VA = "0x8FA390")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002316")]
		[Address(RVA = "0x8FA414", Offset = "0x8FA414", VA = "0x8FA414")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002317")]
		[Address(RVA = "0x8FA498", Offset = "0x8FA498", VA = "0x8FA498")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002318")]
		[Address(RVA = "0x8FA514", Offset = "0x8FA514", VA = "0x8FA514")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002319")]
		[Address(RVA = "0x8FA590", Offset = "0x8FA590", VA = "0x8FA590")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600231A")]
		[Address(RVA = "0x8FA60C", Offset = "0x8FA60C", VA = "0x8FA60C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600231B")]
		[Address(RVA = "0x8FA6A0", Offset = "0x8FA6A0", VA = "0x8FA6A0")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x600231C")]
		[Address(RVA = "0x8FA72C", Offset = "0x8FA72C", VA = "0x8FA72C")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x600231D")]
		[Address(RVA = "0x8FA7B8", Offset = "0x8FA7B8", VA = "0x8FA7B8")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x600231E")]
		[Address(RVA = "0x8FA844", Offset = "0x8FA844", VA = "0x8FA844")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600231F")]
		[Address(RVA = "0x8FA8D8", Offset = "0x8FA8D8", VA = "0x8FA8D8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6002320")]
		[Address(RVA = "0x8FA96C", Offset = "0x8FA96C", VA = "0x8FA96C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002321")]
		[Address(RVA = "0x8FA9E8", Offset = "0x8FA9E8", VA = "0x8FA9E8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x8FAA64", Offset = "0x8FAA64", VA = "0x8FAA64")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6002323")]
		[Address(RVA = "0x8FAB9C", Offset = "0x8FAB9C", VA = "0x8FAB9C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x8FAC18", Offset = "0x8FAC18", VA = "0x8FAC18")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6002325")]
		[Address(RVA = "0x8FAD50", Offset = "0x8FAD50", VA = "0x8FAD50")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x8FADCC", Offset = "0x8FADCC", VA = "0x8FADCC")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002327")]
		[Address(RVA = "0x8FAEEC", Offset = "0x8FAEEC", VA = "0x8FAEEC")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x8FAF68", Offset = "0x8FAF68", VA = "0x8FAF68")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002329")]
		[Address(RVA = "0x8FB210", Offset = "0x8FB210", VA = "0x8FB210")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600232A")]
		[Address(RVA = "0x8FB294", Offset = "0x8FB294", VA = "0x8FB294")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600232B")]
		[Address(RVA = "0x8FB310", Offset = "0x8FB310", VA = "0x8FB310")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x600232C")]
		[Address(RVA = "0x8FB394", Offset = "0x8FB394", VA = "0x8FB394")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600232D")]
		[Address(RVA = "0x8FB418", Offset = "0x8FB418", VA = "0x8FB418")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600232E")]
		[Address(RVA = "0x8FB49C", Offset = "0x8FB49C", VA = "0x8FB49C")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600232F")]
		[Address(RVA = "0x8FB538", Offset = "0x8FB538", VA = "0x8FB538")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6002330")]
		[Address(RVA = "0x8FB5D4", Offset = "0x8FB5D4", VA = "0x8FB5D4")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6002331")]
		[Address(RVA = "0x8FB668", Offset = "0x8FB668", VA = "0x8FB668")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002332")]
		[Address(RVA = "0x8FB6E4", Offset = "0x8FB6E4", VA = "0x8FB6E4")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002333")]
		[Address(RVA = "0x8FB760", Offset = "0x8FB760", VA = "0x8FB760")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6002334")]
		[Address(RVA = "0x8FB7DC", Offset = "0x8FB7DC", VA = "0x8FB7DC")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6002335")]
		[Address(RVA = "0x8FB858", Offset = "0x8FB858", VA = "0x8FB858")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6002336")]
		[Address(RVA = "0x8FB8D4", Offset = "0x8FB8D4", VA = "0x8FB8D4")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6002337")]
		[Address(RVA = "0x8FB9F8", Offset = "0x8FB9F8", VA = "0x8FB9F8")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6002338")]
		[Address(RVA = "0x8FBA84", Offset = "0x8FBA84", VA = "0x8FBA84")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x8FBB00", Offset = "0x8FBB00", VA = "0x8FBB00")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x8FBB54", Offset = "0x8FBB54", VA = "0x8FBB54")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600233B")]
		[Address(RVA = "0x8FBC88", Offset = "0x8FBC88", VA = "0x8FBC88")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x600233C")]
		[Address(RVA = "0x8FBD0C", Offset = "0x8FBD0C", VA = "0x8FBD0C")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x8FBDA0", Offset = "0x8FBDA0", VA = "0x8FBDA0")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600233E")]
		[Address(RVA = "0x8FC0D8", Offset = "0x8FC0D8", VA = "0x8FC0D8")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x600233F")]
		[Address(RVA = "0x8FC154", Offset = "0x8FC154", VA = "0x8FC154")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x8FC1E0", Offset = "0x8FC1E0", VA = "0x8FC1E0")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002341")]
		[Address(RVA = "0x8FC934", Offset = "0x8FC934", VA = "0x8FC934")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x8F6C9C", Offset = "0x8F6C9C", VA = "0x8F6C9C")]
		[MonoPInvokeCallback(typeof(LoggingDelegate))]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002343")]
		[Address(RVA = "0x8FC9B0", Offset = "0x8FC9B0", VA = "0x8FC9B0")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6002344")]
		[Address(RVA = "0x8FCA30", Offset = "0x8FCA30", VA = "0x8FCA30")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);
	}
}
namespace OVR
{
	[Token(Token = "0x2000687")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef testSound1;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x8FCC64", Offset = "0x8FCC64", VA = "0x8FCC64")]
		private void Update()
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x8FCD08", Offset = "0x8FCD08", VA = "0x8FCD08")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000688")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool autoRetrigger;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] playPositions;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x8FCD10", Offset = "0x8FCD10", VA = "0x8FCD10")]
		private void Awake()
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x8FCED0", Offset = "0x8FCED0", VA = "0x8FCED0")]
		private void Update()
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x8FD084", Offset = "0x8FD084", VA = "0x8FD084")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x8FCF24", Offset = "0x8FCF24", VA = "0x8FCF24")]
		public void Play()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x8FD130", Offset = "0x8FD130", VA = "0x8FD130")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x8FD280", Offset = "0x8FD280", VA = "0x8FD280")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000689")]
	public enum PreloadSounds
	{
		[Token(Token = "0x400259A")]
		Default,
		[Token(Token = "0x400259B")]
		Preload,
		[Token(Token = "0x400259C")]
		ManualPreload
	}
	[Token(Token = "0x200068A")]
	public enum Fade
	{
		[Token(Token = "0x400259E")]
		In,
		[Token(Token = "0x400259F")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200068B")]
	public class SoundGroup
	{
		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxPlayingSounds;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int playingSoundCount;

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x8FD344", Offset = "0x8FD344", VA = "0x8FD344")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x8FD404", Offset = "0x8FD404", VA = "0x8FD404")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x8FD428", Offset = "0x8FD428", VA = "0x8FD428")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x8FD44C", Offset = "0x8FD44C", VA = "0x8FD44C")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200068C")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x200068D")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x40025C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6002389")]
			[Address(RVA = "0x903EBC", Offset = "0x903EBC", VA = "0x903EBC")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x600238A")]
			[Address(RVA = "0x903EC4", Offset = "0x903EC4", VA = "0x903EC4")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200068E")]
		private sealed class <>c
		{
			[Token(Token = "0x40025C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40025C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x600238C")]
			[Address(RVA = "0x903FC4", Offset = "0x903FC4", VA = "0x903FC4")]
			public <>c()
			{
			}

			[Token(Token = "0x600238D")]
			[Address(RVA = "0x903FCC", Offset = "0x903FCC", VA = "0x903FCC")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool makePersistent;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool verboseLogging;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int maxSoundEmitters;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float volumeSoundFX;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float soundFxFadeSecs;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170003C7")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6002354")]
			[Address(RVA = "0x8FD46C", Offset = "0x8FD46C", VA = "0x8FD46C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C8")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6002355")]
			[Address(RVA = "0x8FD538", Offset = "0x8FD538", VA = "0x8FD538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C9")]
		public static float NearFallOff
		{
			[Token(Token = "0x6002356")]
			[Address(RVA = "0x8FD590", Offset = "0x8FD590", VA = "0x8FD590")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CA")]
		public static float FarFallOff
		{
			[Token(Token = "0x6002357")]
			[Address(RVA = "0x8FD5F4", Offset = "0x8FD5F4", VA = "0x8FD5F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CB")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6002358")]
			[Address(RVA = "0x8FD658", Offset = "0x8FD658", VA = "0x8FD658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CC")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6002359")]
			[Address(RVA = "0x8FD6BC", Offset = "0x8FD6BC", VA = "0x8FD6BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CD")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x600235A")]
			[Address(RVA = "0x8FD720", Offset = "0x8FD720", VA = "0x8FD720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CE")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6002365")]
			[Address(RVA = "0x8FF490", Offset = "0x8FF490", VA = "0x8FF490")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x8FD784", Offset = "0x8FD784", VA = "0x8FD784")]
		private void Awake()
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x8FD998", Offset = "0x8FD998", VA = "0x8FD998")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x8FD788", Offset = "0x8FD788", VA = "0x8FD788")]
		private void Init()
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x8FE60C", Offset = "0x8FE60C", VA = "0x8FE60C")]
		private void Update()
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x8FDAC4", Offset = "0x8FDAC4", VA = "0x8FDAC4")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x8FEC90", Offset = "0x8FEC90", VA = "0x8FEC90")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x8FEDD4", Offset = "0x8FEDD4", VA = "0x8FEDD4")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x8FEF74", Offset = "0x8FEF74", VA = "0x8FEF74")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x8FF058", Offset = "0x8FF058", VA = "0x8FF058")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x8FF0E0", Offset = "0x8FF0E0", VA = "0x8FF0E0")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x8FF4E8", Offset = "0x8FF4E8", VA = "0x8FF4E8")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x8FF550", Offset = "0x8FF550", VA = "0x8FF550")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x8FDFEC", Offset = "0x8FDFEC", VA = "0x8FDFEC")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x8FE610", Offset = "0x8FE610", VA = "0x8FE610")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x8FF678", Offset = "0x8FF678", VA = "0x8FF678")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x8FF79C", Offset = "0x8FF79C", VA = "0x8FF79C")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x8FF8C4", Offset = "0x8FF8C4", VA = "0x8FF8C4")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x8FF5B8", Offset = "0x8FF5B8", VA = "0x8FF5B8")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x8FF9F0", Offset = "0x8FF9F0", VA = "0x8FF9F0")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x8FFA94", Offset = "0x8FFA94", VA = "0x8FFA94")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x8FFB60", Offset = "0x8FFB60", VA = "0x8FFB60")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x8FD094", Offset = "0x8FD094", VA = "0x8FD094")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x8FD1E4", Offset = "0x8FD1E4", VA = "0x8FD1E4")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x8FFC04", Offset = "0x8FFC04", VA = "0x8FFC04")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x8FFCB8", Offset = "0x8FFCB8", VA = "0x8FFCB8")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x8FFD38", Offset = "0x8FFD38", VA = "0x8FFD38")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x8FFDF0", Offset = "0x8FFDF0", VA = "0x8FFDF0")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x8FFE7C", Offset = "0x8FFE7C", VA = "0x8FFE7C")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x8FFF20", Offset = "0x8FFF20", VA = "0x8FFF20")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x900A30", Offset = "0x900A30", VA = "0x900A30")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x901034", Offset = "0x901034", VA = "0x901034")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x9011F4", Offset = "0x9011F4", VA = "0x9011F4")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x901D2C", Offset = "0x901D2C", VA = "0x901D2C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x9000FC", Offset = "0x9000FC", VA = "0x9000FC")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x901E34", Offset = "0x901E34", VA = "0x901E34")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x901EFC", Offset = "0x901EFC", VA = "0x901EFC")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x901FCC", Offset = "0x901FCC", VA = "0x901FCC")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x9021C8", Offset = "0x9021C8", VA = "0x9021C8")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x9022F8", Offset = "0x9022F8", VA = "0x9022F8")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x902400", Offset = "0x902400", VA = "0x902400")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x902508", Offset = "0x902508", VA = "0x902508")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x9025CC", Offset = "0x9025CC", VA = "0x9025CC")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x9026F8", Offset = "0x9026F8", VA = "0x9026F8")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x902ACC", Offset = "0x902ACC", VA = "0x902ACC")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x200068F")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40025CA")]
		None = -1,
		[Token(Token = "0x40025CB")]
		Reserved,
		[Token(Token = "0x40025CC")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000690")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x90404C", Offset = "0x90404C", VA = "0x90404C")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000691")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000692")]
		public enum FadeState
		{
			[Token(Token = "0x40025DF")]
			Null,
			[Token(Token = "0x40025E0")]
			FadingIn,
			[Token(Token = "0x40025E1")]
			FadingOut,
			[Token(Token = "0x40025E2")]
			Ducking
		}

		[Token(Token = "0x2000693")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40025E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x40025E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x40025E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170003D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023BB")]
				[Address(RVA = "0x904FA8", Offset = "0x904FA8", VA = "0x904FA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023BC")]
				[Address(RVA = "0x904FB0", Offset = "0x904FB0", VA = "0x904FB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023B8")]
			[Address(RVA = "0x904AA0", Offset = "0x904AA0", VA = "0x904AA0")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60023B9")]
			[Address(RVA = "0x904EB8", Offset = "0x904EB8", VA = "0x904EB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023BA")]
			[Address(RVA = "0x904EBC", Offset = "0x904EBC", VA = "0x904EBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000694")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40025EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x40025ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40025EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x40025EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x40025F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40025F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170003DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023C0")]
				[Address(RVA = "0x905100", Offset = "0x905100", VA = "0x905100", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023C1")]
				[Address(RVA = "0x905108", Offset = "0x905108", VA = "0x905108", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x904E50", Offset = "0x904E50", VA = "0x904E50")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60023BE")]
			[Address(RVA = "0x904FB8", Offset = "0x904FB8", VA = "0x904FB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023BF")]
			[Address(RVA = "0x904FBC", Offset = "0x904FBC", VA = "0x904FBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000695")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x40025F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x40025F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x40025F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40025F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x40025F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40025FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40025FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40025FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40025FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170003DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023C5")]
				[Address(RVA = "0x905380", Offset = "0x905380", VA = "0x905380", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023C6")]
				[Address(RVA = "0x905388", Offset = "0x905388", VA = "0x905388", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023C2")]
			[Address(RVA = "0x904E78", Offset = "0x904E78", VA = "0x904E78")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0x905110", Offset = "0x905110", VA = "0x905110", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023C4")]
			[Address(RVA = "0x905114", Offset = "0x905114", VA = "0x905114", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float endPlayTime;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170003CF")]
		public float volume
		{
			[Token(Token = "0x600238F")]
			[Address(RVA = "0x90405C", Offset = "0x90405C", VA = "0x90405C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002390")]
			[Address(RVA = "0x904078", Offset = "0x904078", VA = "0x904078")]
			set
			{
			}
		}

		[Token(Token = "0x170003D0")]
		public float pitch
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0x904094", Offset = "0x904094", VA = "0x904094")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002392")]
			[Address(RVA = "0x9040B0", Offset = "0x9040B0", VA = "0x9040B0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D1")]
		public AudioClip clip
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0x9040CC", Offset = "0x9040CC", VA = "0x9040CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002394")]
			[Address(RVA = "0x9040E8", Offset = "0x9040E8", VA = "0x9040E8")]
			set
			{
			}
		}

		[Token(Token = "0x170003D2")]
		public float time
		{
			[Token(Token = "0x6002395")]
			[Address(RVA = "0x904104", Offset = "0x904104", VA = "0x904104")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002396")]
			[Address(RVA = "0x904120", Offset = "0x904120", VA = "0x904120")]
			set
			{
			}
		}

		[Token(Token = "0x170003D3")]
		public float length
		{
			[Token(Token = "0x6002397")]
			[Address(RVA = "0x90413C", Offset = "0x90413C", VA = "0x90413C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003D4")]
		public bool loop
		{
			[Token(Token = "0x6002398")]
			[Address(RVA = "0x9041E4", Offset = "0x9041E4", VA = "0x9041E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002399")]
			[Address(RVA = "0x904200", Offset = "0x904200", VA = "0x904200")]
			set
			{
			}
		}

		[Token(Token = "0x170003D5")]
		public bool mute
		{
			[Token(Token = "0x600239A")]
			[Address(RVA = "0x904220", Offset = "0x904220", VA = "0x904220")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600239B")]
			[Address(RVA = "0x90423C", Offset = "0x90423C", VA = "0x90423C")]
			set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x600239C")]
			[Address(RVA = "0x90425C", Offset = "0x90425C", VA = "0x90425C")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x600239D")]
			[Address(RVA = "0x904278", Offset = "0x904278", VA = "0x904278")]
			set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		public bool isPlaying
		{
			[Token(Token = "0x600239E")]
			[Address(RVA = "0x904294", Offset = "0x904294", VA = "0x904294")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x9042B0", Offset = "0x9042B0", VA = "0x9042B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x904484", Offset = "0x904484", VA = "0x904484")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x9044B0", Offset = "0x9044B0", VA = "0x9044B0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x9044B8", Offset = "0x9044B8", VA = "0x9044B8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x9044E8", Offset = "0x9044E8", VA = "0x9044E8")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x9044F0", Offset = "0x9044F0", VA = "0x9044F0")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x9044F8", Offset = "0x9044F8", VA = "0x9044F8")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x904590", Offset = "0x904590", VA = "0x904590")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x9045F0", Offset = "0x9045F0", VA = "0x9045F0")]
		public void Play()
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x904644", Offset = "0x904644", VA = "0x904644")]
		public void Pause()
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x904670", Offset = "0x904670", VA = "0x904670")]
		public void Stop()
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x904780", Offset = "0x904780", VA = "0x904780")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x9047CC", Offset = "0x9047CC", VA = "0x9047CC")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x9048D8", Offset = "0x9048D8", VA = "0x9048D8")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x904998", Offset = "0x904998", VA = "0x904998")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x9049DC", Offset = "0x9049DC", VA = "0x9049DC")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x9049FC", Offset = "0x9049FC", VA = "0x9049FC")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x904AC8", Offset = "0x904AC8", VA = "0x904AC8")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x904BB4", Offset = "0x904BB4", VA = "0x904BB4")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x904CD0", Offset = "0x904CD0", VA = "0x904CD0")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x904D3C", Offset = "0x904D3C", VA = "0x904D3C")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x904DC4", Offset = "0x904DC4", VA = "0x904DC4")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x904B2C", Offset = "0x904B2C", VA = "0x904B2C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x904C24", Offset = "0x904C24", VA = "0x904C24")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x904EA0", Offset = "0x904EA0", VA = "0x904EA0")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000696")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40025FF")]
		Random,
		[Token(Token = "0x4002600")]
		Sequential
	}
	[Token(Token = "0x2000697")]
	public enum SoundPriority
	{
		[Token(Token = "0x4002602")]
		VeryLow = -2,
		[Token(Token = "0x4002603")]
		Low,
		[Token(Token = "0x4002604")]
		Default,
		[Token(Token = "0x4002605")]
		High,
		[Token(Token = "0x4002606")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000698")]
	public class OSPProps
	{
		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enableSpatialization;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool useFastOverride;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float gain;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableInvSquare;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float volumetric;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x905390", Offset = "0x905390", VA = "0x905390")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000699")]
	public class SoundFX
	{
		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXNext playback;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float volume;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float spread;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float pctChanceToPlay;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundPriority priority;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector2 delay;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool looping;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip[] soundClips;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170003DE")]
		public bool IsValid
		{
			[Token(Token = "0x60023C9")]
			[Address(RVA = "0x9059F4", Offset = "0x9059F4", VA = "0x9059F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DF")]
		public SoundGroup Group
		{
			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x905A80", Offset = "0x905A80", VA = "0x905A80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023CB")]
			[Address(RVA = "0x905A88", Offset = "0x905A88", VA = "0x905A88")]
			set
			{
			}
		}

		[Token(Token = "0x170003E0")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x60023CC")]
			[Address(RVA = "0x905A90", Offset = "0x905A90", VA = "0x905A90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E1")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x905A9C", Offset = "0x905A9C", VA = "0x905A9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x9053D0", Offset = "0x9053D0", VA = "0x9053D0")]
		public SoundFX()
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x905AB4", Offset = "0x905AB4", VA = "0x905AB4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x905B64", Offset = "0x905B64", VA = "0x905B64")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x905BEC", Offset = "0x905BEC", VA = "0x905BEC")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x905C18", Offset = "0x905C18", VA = "0x905C18")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x905C24", Offset = "0x905C24", VA = "0x905C24")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x200069A")]
	public class SoundFXRef
	{
		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170003E2")]
		public SoundFX soundFX
		{
			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x905D2C", Offset = "0x905D2C", VA = "0x905D2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x905D50", Offset = "0x905D50", VA = "0x905D50")]
		private void Init()
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x905E28", Offset = "0x905E28", VA = "0x905E28")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x905E9C", Offset = "0x905E9C", VA = "0x905E9C")]
		public SoundFXRef()
		{
		}
	}
}
