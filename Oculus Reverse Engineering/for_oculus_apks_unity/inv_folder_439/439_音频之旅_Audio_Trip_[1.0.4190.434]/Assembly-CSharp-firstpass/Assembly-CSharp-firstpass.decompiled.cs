using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Xml;
using AudioTrip;
using BlueprintReality.Text;
using CielaSpike;
using DebuggingEssentials;
using Huenity;
using Il2CppDummyDll;
using NAudio.Wave;
using NGTools.NGGameConsole;
using Prism.Utils;
using RootMotion.FinalIK;
using SonicBloom.Koreo;
using TMPro;
using Unity.Burst;
using Unity.Jobs;
using UnityChan;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.ParticleSystemJobs;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.SocialPlatforms;
using UnityEngine.UI;
using UnityEngine.XR;
using Viveport;
using Viveport.Internal;
using YUR.Fit.Core.Models;
using YUR.Fit.Core.Watch;
using YUR.Fit.Unity;
using YUR.Fit.Unity.Utilities;
using YUR.SDK.Core.Configuration;
using YUR.SDK.Core.Enums;
using YUR.SDK.Core.Interfaces;
using YUR.SDK.Core.Utils;
using YUR.SDK.Core.Watch;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class SO_WindowManager : ScriptableObject
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatInputField guiScale;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useDontDestroyOnLoadScene;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x2AC26F0", Offset = "0x2AC26F0", VA = "0x2AC26F0")]
	public SO_WindowManager()
	{
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E5638", Offset = "0x16E5638")]
public class SelectionBaseFixedAttribute : Attribute
{
	[Token(Token = "0x6000002")]
	[Address(RVA = "0x2AC2A74", Offset = "0x2AC2A74", VA = "0x2AC2A74")]
	public SelectionBaseFixedAttribute()
	{
	}
}
[Token(Token = "0x2000004")]
public static class MaterialModifier
{
	[Token(Token = "0x20003C9")]
	public interface Interface
	{
		[Token(Token = "0x6001CAF")]
		void SetMaterialProp(int nameID, float value);

		[Token(Token = "0x6001CB0")]
		void SetMaterialProp(int nameID, Vector4 value);

		[Token(Token = "0x6001CB1")]
		void SetMaterialProp(int nameID, Color value);

		[Token(Token = "0x6001CB2")]
		void SetMaterialProp(int nameID, Matrix4x4 value);

		[Token(Token = "0x6001CB3")]
		void SetMaterialProp(int nameID, Texture value);
	}

	[Token(Token = "0x20003CA")]
	public delegate void Callback(Interface owner);
}
[Token(Token = "0x2000005")]
public static class SRPHelper
{
	[Token(Token = "0x20003CB")]
	public enum RenderPipeline
	{
		[Token(Token = "0x400192D")]
		BuiltIn,
		[Token(Token = "0x400192E")]
		URP,
		[Token(Token = "0x400192F")]
		LWRP,
		[Token(Token = "0x4001930")]
		HDRP
	}

	[Token(Token = "0x17000001")]
	public static RenderPipeline renderPipelineType
	{
		[Token(Token = "0x6000003")]
		[Address(RVA = "0x2AC2768", Offset = "0x2AC2768", VA = "0x2AC2768")]
		get
		{
			return default(RenderPipeline);
		}
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x2AC287C", Offset = "0x2AC287C", VA = "0x2AC287C")]
	public static bool IsUsingCustomRenderPipeline()
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x2AC2970", Offset = "0x2AC2970", VA = "0x2AC2970")]
	public static void RegisterOnBeginCameraRendering(Action<ScriptableRenderContext, Camera> cb)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x2AC29F8", Offset = "0x2AC29F8", VA = "0x2AC29F8")]
	public static void UnregisterOnBeginCameraRendering(Action<ScriptableRenderContext, Camera> cb)
	{
	}
}
[Token(Token = "0x2000006")]
public class GUIView : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float progress;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool muted;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int score;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string playername;

	[Token(Token = "0x4000007")]
	private const string PROGRESS_KEY = "Progress";

	[Token(Token = "0x4000008")]
	private const string MUTED_KEY = "IsSoundMuted";

	[Token(Token = "0x4000009")]
	private const string SCORE_KEY = "Highscore";

	[Token(Token = "0x400000A")]
	private const string PLAYERNAME_KEY = "PlayerName";

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x2F79CAC", Offset = "0x2F79CAC", VA = "0x2F79CAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x2F79EA4", Offset = "0x2F79EA4", VA = "0x2F79EA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x2F79EDC", Offset = "0x2F79EDC", VA = "0x2F79EDC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x2F79DC8", Offset = "0x2F79DC8", VA = "0x2F79DC8")]
	public void RefreshData()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x2F79D10", Offset = "0x2F79D10", VA = "0x2F79D10")]
	public void SaveData()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x2F7A63C", Offset = "0x2F7A63C", VA = "0x2F7A63C")]
	public GUIView()
	{
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E564C", Offset = "0x16E564C")]
public class Andromeda2DSystem : MonoBehaviour
{
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E91CC", Offset = "0x16E91CC")]
	private sealed class <floatingup>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Andromeda2DSystem <>4__this;

		[Token(Token = "0x170003B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x25CAED4", Offset = "0x25CAED4", VA = "0x25CAED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0x25CAF3C", Offset = "0x25CAF3C", VA = "0x25CAF3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x25CA840", Offset = "0x25CA840", VA = "0x25CA840")]
		[DebuggerHidden]
		public <floatingup>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x25CAD38", Offset = "0x25CAD38", VA = "0x25CAD38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x25CAD3C", Offset = "0x25CAD3C", VA = "0x25CAD3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x25CAEDC", Offset = "0x25CAEDC", VA = "0x25CAEDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E91DC", Offset = "0x16E91DC")]
	private sealed class <floatingdown>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Andromeda2DSystem <>4__this;

		[Token(Token = "0x170003B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0x25CACC8", Offset = "0x25CACC8", VA = "0x25CACC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0x25CAD30", Offset = "0x25CAD30", VA = "0x25CAD30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x25CA8E8", Offset = "0x25CA8E8", VA = "0x25CA8E8")]
		[DebuggerHidden]
		public <floatingdown>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x25CAB28", Offset = "0x25CAB28", VA = "0x25CAB28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x25CAB2C", Offset = "0x25CAB2C", VA = "0x25CAB2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x25CACD0", Offset = "0x25CACD0", VA = "0x25CACD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E91EC", Offset = "0x16E91EC")]
	private sealed class <Delay>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Andromeda2DSystem <>4__this;

		[Token(Token = "0x170003B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x25CAAB8", Offset = "0x25CAAB8", VA = "0x25CAAB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x25CAB20", Offset = "0x25CAB20", VA = "0x25CAB20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x25CA990", Offset = "0x25CA990", VA = "0x25CA990")]
		[DebuggerHidden]
		public <Delay>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x25CA9F0", Offset = "0x25CA9F0", VA = "0x25CA9F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x25CA9F4", Offset = "0x25CA9F4", VA = "0x25CA9F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x25CAAC0", Offset = "0x25CAAC0", VA = "0x25CAAC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float floatUpSpeed;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float floatDownSpeed;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shakeIntensity;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hologramPlane1;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer hologramPlane1Renderer;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject hologramPlane2;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer hologramPlane2Renderer;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool doesRotate;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool floatup;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float rotateSpeed;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float flickerSpeed;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minFlicker;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxFlicker;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float offsetX;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float offsetY;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float xSpeed;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float ySpeed;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Light hologramLight;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip hologramSound;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool useLight;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool useSound;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource AS;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float YShake;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x25CA398", Offset = "0x25CA398", VA = "0x25CA398")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x25CA478", Offset = "0x25CA478", VA = "0x25CA478")]
	private void Start()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x25CA5C0", Offset = "0x25CA5C0", VA = "0x25CA5C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x25CA7C4", Offset = "0x25CA7C4", VA = "0x25CA7C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FED38", Offset = "0x16FED38")]
	private IEnumerator floatingup()
	{
		return null;
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x25CA86C", Offset = "0x25CA86C", VA = "0x25CA86C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FED9C", Offset = "0x16FED9C")]
	private IEnumerator floatingdown()
	{
		return null;
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x25CA914", Offset = "0x25CA914", VA = "0x25CA914")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FEE00", Offset = "0x16FEE00")]
	private IEnumerator Delay()
	{
		return null;
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x25CA9BC", Offset = "0x25CA9BC", VA = "0x25CA9BC")]
	public Andromeda2DSystem()
	{
	}
}
[Token(Token = "0x2000008")]
public class AndromedaModelSystem : MonoBehaviour
{
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E91FC", Offset = "0x16E91FC")]
	private sealed class <floatingup>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AndromedaModelSystem <>4__this;

		[Token(Token = "0x170003B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0x25CBB5C", Offset = "0x25CBB5C", VA = "0x25CBB5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0x25CBBC4", Offset = "0x25CBBC4", VA = "0x25CBBC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x25CB4C8", Offset = "0x25CB4C8", VA = "0x25CB4C8")]
		[DebuggerHidden]
		public <floatingup>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x25CB9C0", Offset = "0x25CB9C0", VA = "0x25CB9C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x25CB9C4", Offset = "0x25CB9C4", VA = "0x25CB9C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x25CBB64", Offset = "0x25CBB64", VA = "0x25CBB64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E920C", Offset = "0x16E920C")]
	private sealed class <floatingdown>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AndromedaModelSystem <>4__this;

		[Token(Token = "0x170003B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0x25CB950", Offset = "0x25CB950", VA = "0x25CB950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0x25CB9B8", Offset = "0x25CB9B8", VA = "0x25CB9B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x25CB570", Offset = "0x25CB570", VA = "0x25CB570")]
		[DebuggerHidden]
		public <floatingdown>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x25CB7B0", Offset = "0x25CB7B0", VA = "0x25CB7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x25CB7B4", Offset = "0x25CB7B4", VA = "0x25CB7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x25CB958", Offset = "0x25CB958", VA = "0x25CB958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E921C", Offset = "0x16E921C")]
	private sealed class <Delay>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AndromedaModelSystem <>4__this;

		[Token(Token = "0x170003BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x25CB740", Offset = "0x25CB740", VA = "0x25CB740", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x25CB7A8", Offset = "0x25CB7A8", VA = "0x25CB7A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x25CB618", Offset = "0x25CB618", VA = "0x25CB618")]
		[DebuggerHidden]
		public <Delay>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x25CB678", Offset = "0x25CB678", VA = "0x25CB678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x25CB67C", Offset = "0x25CB67C", VA = "0x25CB67C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x25CB748", Offset = "0x25CB748", VA = "0x25CB748", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float floatUpSpeed;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float floatDownSpeed;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shakeIntensity;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hologramModel;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer hologramModelRenderer;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float rotateSpeed;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool floatup;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float flickerSpeed;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minFlicker;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxFlicker;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float offsetX;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float offsetY;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float xSpeed;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float ySpeed;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Light hologramLight;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip hologramSound;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool useLight;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool useSound;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource AS;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float YShake;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x25CAF44", Offset = "0x25CAF44", VA = "0x25CAF44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x25CAFF8", Offset = "0x25CAFF8", VA = "0x25CAFF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x25CB0D0", Offset = "0x25CB0D0", VA = "0x25CB0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x25CB44C", Offset = "0x25CB44C", VA = "0x25CB44C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FEE64", Offset = "0x16FEE64")]
	private IEnumerator floatingup()
	{
		return null;
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x25CB4F4", Offset = "0x25CB4F4", VA = "0x25CB4F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FEEC8", Offset = "0x16FEEC8")]
	private IEnumerator floatingdown()
	{
		return null;
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x25CB59C", Offset = "0x25CB59C", VA = "0x25CB59C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FEF2C", Offset = "0x16FEF2C")]
	private IEnumerator Delay()
	{
		return null;
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x25CB644", Offset = "0x25CB644", VA = "0x25CB644")]
	public AndromedaModelSystem()
	{
	}
}
[Token(Token = "0x2000009")]
public class AndromedaMonitorSystem : MonoBehaviour
{
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E922C", Offset = "0x16E922C")]
	private sealed class <floatingup>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AndromedaMonitorSystem <>4__this;

		[Token(Token = "0x170003BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0x25CC764", Offset = "0x25CC764", VA = "0x25CC764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0x25CC7CC", Offset = "0x25CC7CC", VA = "0x25CC7CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x25CC0D0", Offset = "0x25CC0D0", VA = "0x25CC0D0")]
		[DebuggerHidden]
		public <floatingup>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x25CC5C8", Offset = "0x25CC5C8", VA = "0x25CC5C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x25CC5CC", Offset = "0x25CC5CC", VA = "0x25CC5CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x25CC76C", Offset = "0x25CC76C", VA = "0x25CC76C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E923C", Offset = "0x16E923C")]
	private sealed class <floatingdown>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AndromedaMonitorSystem <>4__this;

		[Token(Token = "0x170003BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0x25CC558", Offset = "0x25CC558", VA = "0x25CC558", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0x25CC5C0", Offset = "0x25CC5C0", VA = "0x25CC5C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x25CC178", Offset = "0x25CC178", VA = "0x25CC178")]
		[DebuggerHidden]
		public <floatingdown>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x25CC3B8", Offset = "0x25CC3B8", VA = "0x25CC3B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x25CC3BC", Offset = "0x25CC3BC", VA = "0x25CC3BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x25CC560", Offset = "0x25CC560", VA = "0x25CC560", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E924C", Offset = "0x16E924C")]
	private sealed class <Delay>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AndromedaMonitorSystem <>4__this;

		[Token(Token = "0x170003C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x25CC348", Offset = "0x25CC348", VA = "0x25CC348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0x25CC3B0", Offset = "0x25CC3B0", VA = "0x25CC3B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x25CC220", Offset = "0x25CC220", VA = "0x25CC220")]
		[DebuggerHidden]
		public <Delay>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x25CC280", Offset = "0x25CC280", VA = "0x25CC280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x25CC284", Offset = "0x25CC284", VA = "0x25CC284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x25CC350", Offset = "0x25CC350", VA = "0x25CC350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float floatUpSpeed;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float floatDownSpeed;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shakeIntensity;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hologramModel1;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer hologramModel1Renderer;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject hologramModel2;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer hologramModel2Renderer;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool doesRotate;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float rotateSpeed;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool floatup;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float flickerSpeed;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minFlicker;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxFlicker;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float offsetX;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float offsetY;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float xSpeed;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ySpeed;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Light hologramLight;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip hologramSound;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool useLight;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool useSound;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource AS;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float YShake;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x25CBBCC", Offset = "0x25CBBCC", VA = "0x25CBBCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x25CBCAC", Offset = "0x25CBCAC", VA = "0x25CBCAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x25CBDF4", Offset = "0x25CBDF4", VA = "0x25CBDF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x25CC054", Offset = "0x25CC054", VA = "0x25CC054")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FEF90", Offset = "0x16FEF90")]
	private IEnumerator floatingup()
	{
		return null;
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x25CC0FC", Offset = "0x25CC0FC", VA = "0x25CC0FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FEFF4", Offset = "0x16FEFF4")]
	private IEnumerator floatingdown()
	{
		return null;
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x25CC1A4", Offset = "0x25CC1A4", VA = "0x25CC1A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF058", Offset = "0x16FF058")]
	private IEnumerator Delay()
	{
		return null;
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x25CC24C", Offset = "0x25CC24C", VA = "0x25CC24C")]
	public AndromedaMonitorSystem()
	{
	}
}
[Token(Token = "0x200000A")]
public class Billboard : MonoBehaviour
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera m_Camera;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool amActive;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool autoInit;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject myContainer;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x25D7FA4", Offset = "0x25D7FA4", VA = "0x25D7FA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x25D8114", Offset = "0x25D8114", VA = "0x25D8114")]
	private void Update()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x25D8334", Offset = "0x25D8334", VA = "0x25D8334")]
	public Billboard()
	{
	}
}
[Token(Token = "0x200000B")]
public class DustAnimator : MonoBehaviour
{
	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xSpeed;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ySpeed;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer ObjectRenderer;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x2F702DC", Offset = "0x2F702DC", VA = "0x2F702DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x2F7033C", Offset = "0x2F7033C", VA = "0x2F7033C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x2F703D8", Offset = "0x2F703D8", VA = "0x2F703D8")]
	public DustAnimator()
	{
	}
}
[Token(Token = "0x200000C")]
public class ImporterExample : MonoBehaviour
{
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E925C", Offset = "0x16E925C")]
	private sealed class <Import>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImporterExample <>4__this;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x170003C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0x24BB2E4", Offset = "0x24BB2E4", VA = "0x24BB2E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0x24BB34C", Offset = "0x24BB34C", VA = "0x24BB34C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x24BB1D4", Offset = "0x24BB1D4", VA = "0x24BB1D4")]
		[DebuggerHidden]
		public <Import>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x24BB208", Offset = "0x24BB208", VA = "0x24BB208", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x24BB20C", Offset = "0x24BB20C", VA = "0x24BB20C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x24BB2EC", Offset = "0x24BB2EC", VA = "0x24BB2EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Browser browser;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioImporter importer;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x24BAFE4", Offset = "0x24BAFE4", VA = "0x24BAFE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x24BB078", Offset = "0x24BB078", VA = "0x24BB078")]
	private void OnFileSelected(string path)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x24BB13C", Offset = "0x24BB13C", VA = "0x24BB13C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF0BC", Offset = "0x16FF0BC")]
	private IEnumerator Import(string path)
	{
		return null;
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x24BB200", Offset = "0x24BB200", VA = "0x24BB200")]
	public ImporterExample()
	{
	}
}
[Token(Token = "0x200000D")]
public abstract class AudioImporter : MonoBehaviour
{
	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA13C", Offset = "0x16EA13C")]
	private Uri <uri>k__BackingField;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA14C", Offset = "0x16EA14C")]
	private AudioClip <audioClip>k__BackingField;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA15C", Offset = "0x16EA15C")]
	private float <progress>k__BackingField;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA16C", Offset = "0x16EA16C")]
	private bool <isDone>k__BackingField;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA17C", Offset = "0x16EA17C")]
	private bool <isError>k__BackingField;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA18C", Offset = "0x16EA18C")]
	private string <error>k__BackingField;

	[Token(Token = "0x17000002")]
	public Uri uri
	{
		[Token(Token = "0x600002E")]
		[Address(RVA = "0x25CFCC4", Offset = "0x25CFCC4", VA = "0x25CFCC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF140", Offset = "0x16FF140")]
		get
		{
			return null;
		}
		[Token(Token = "0x600002F")]
		[Address(RVA = "0x25CFCCC", Offset = "0x25CFCCC", VA = "0x25CFCCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF150", Offset = "0x16FF150")]
		private set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public virtual AudioClip audioClip
	{
		[Token(Token = "0x6000030")]
		[Address(RVA = "0x25CFCD4", Offset = "0x25CFCD4", VA = "0x25CFCD4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF160", Offset = "0x16FF160")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000031")]
		[Address(RVA = "0x25CFCDC", Offset = "0x25CFCDC", VA = "0x25CFCDC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF170", Offset = "0x16FF170")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public virtual float progress
	{
		[Token(Token = "0x6000032")]
		[Address(RVA = "0x25CFCE4", Offset = "0x25CFCE4", VA = "0x25CFCE4", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF180", Offset = "0x16FF180")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000033")]
		[Address(RVA = "0x25CFCEC", Offset = "0x25CFCEC", VA = "0x25CFCEC", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF190", Offset = "0x16FF190")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public virtual bool isDone
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x25CFCF4", Offset = "0x25CFCF4", VA = "0x25CFCF4", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF1A0", Offset = "0x16FF1A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x25CFCFC", Offset = "0x25CFCFC", VA = "0x25CFCFC", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF1B0", Offset = "0x16FF1B0")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public virtual bool isError
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0x25CFD08", Offset = "0x25CFD08", VA = "0x25CFD08", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF1C0", Offset = "0x16FF1C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x25CFD10", Offset = "0x25CFD10", VA = "0x25CFD10", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF1D0", Offset = "0x16FF1D0")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public virtual string error
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x25CFD1C", Offset = "0x25CFD1C", VA = "0x25CFD1C", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF1E0", Offset = "0x16FF1E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000039")]
		[Address(RVA = "0x25CFD24", Offset = "0x25CFD24", VA = "0x25CFD24", Slot = "13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF1F0", Offset = "0x16FF1F0")]
		protected set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<AudioClip> Loaded
	{
		[Token(Token = "0x600002C")]
		[Address(RVA = "0x25CFB7C", Offset = "0x25CFB7C", VA = "0x25CFB7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF120", Offset = "0x16FF120")]
		add
		{
		}
		[Token(Token = "0x600002D")]
		[Address(RVA = "0x25CFC20", Offset = "0x25CFC20", VA = "0x25CFC20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF130", Offset = "0x16FF130")]
		remove
		{
		}
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x25CFD2C", Offset = "0x25CFD2C", VA = "0x25CFD2C")]
	public void Import(string uri)
	{
	}

	[Token(Token = "0x600003B")]
	public abstract void Abort();

	[Token(Token = "0x600003C")]
	protected abstract void Import();

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x25CFDD0", Offset = "0x25CFDD0", VA = "0x25CFDD0")]
	protected void OnLoaded()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x25CFE48", Offset = "0x25CFE48", VA = "0x25CFE48")]
	protected AudioImporter()
	{
	}
}
[Token(Token = "0x200000E")]
public class Browser : MonoBehaviour
{
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E926C", Offset = "0x16E926C")]
	private sealed class <refreshFiles>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Browser <>4__this;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170003C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x25E0EC4", Offset = "0x25E0EC4", VA = "0x25E0EC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0x25E0F2C", Offset = "0x25E0F2C", VA = "0x25E0F2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x25E04B0", Offset = "0x25E04B0", VA = "0x25E04B0")]
		[DebuggerHidden]
		public <refreshFiles>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x25E0E00", Offset = "0x25E0E00", VA = "0x25E0E00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x25E0E04", Offset = "0x25E0E04", VA = "0x25E0E04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x25E0ECC", Offset = "0x25E0ECC", VA = "0x25E0ECC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E927C", Offset = "0x16E927C")]
	private sealed class <refreshDirectories>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Browser <>4__this;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170003C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x25E0D90", Offset = "0x25E0D90", VA = "0x25E0D90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x25E0DF8", Offset = "0x25E0DF8", VA = "0x25E0DF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x25E04DC", Offset = "0x25E04DC", VA = "0x25E04DC")]
		[DebuggerHidden]
		public <refreshDirectories>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x25E0CCC", Offset = "0x25E0CCC", VA = "0x25E0CCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x25E0CD0", Offset = "0x25E0CD0", VA = "0x25E0CD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x25E0D98", Offset = "0x25E0D98", VA = "0x25E0D98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E928C", Offset = "0x16E928C")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Browser <>4__this;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x25E06F4", Offset = "0x25E06F4", VA = "0x25E06F4")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x25E0C8C", Offset = "0x25E0C8C", VA = "0x25E0C8C")]
		internal void <AddFileItem>b__0()
		{
		}
	}

	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E929C", Offset = "0x16E929C")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Browser <>4__this;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x25E0904", Offset = "0x25E0904", VA = "0x25E0904")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x25E0CAC", Offset = "0x25E0CAC", VA = "0x25E0CAC")]
		internal void <AddDirectoryItem>b__0()
		{
		}
	}

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> extensions;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject listItemPrefab;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject upButton;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ScrollRect scrollRect;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject folderPanel;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject filePanel;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string currentDirectory;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string[] drives;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> directories;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<string> files;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool selectDrive;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool scrolling;

	[Token(Token = "0x14000002")]
	public event Action<string> FileSelected
	{
		[Token(Token = "0x600003F")]
		[Address(RVA = "0x25DFA60", Offset = "0x25DFA60", VA = "0x25DFA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF200", Offset = "0x16FF200")]
		add
		{
		}
		[Token(Token = "0x6000040")]
		[Address(RVA = "0x25DFB04", Offset = "0x25DFB04", VA = "0x25DFB04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF210", Offset = "0x16FF210")]
		remove
		{
		}
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x25DFBA8", Offset = "0x25DFBA8", VA = "0x25DFBA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x25DFFEC", Offset = "0x25DFFEC", VA = "0x25DFFEC")]
	public void Up()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x25DFCD4", Offset = "0x25DFCD4", VA = "0x25DFCD4")]
	private void BuildContent()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x25E00C4", Offset = "0x25E00C4", VA = "0x25E00C4")]
	private void ClearContent()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x25E0334", Offset = "0x25E0334", VA = "0x25E0334")]
	private void OnFileSelected(int index)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x25E03D8", Offset = "0x25E03D8", VA = "0x25E03D8")]
	private void OnDirectorySelected(int index)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x25E02B8", Offset = "0x25E02B8", VA = "0x25E02B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF220", Offset = "0x16FF220")]
	private IEnumerator refreshFiles()
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x25E023C", Offset = "0x25E023C", VA = "0x25E023C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF284", Offset = "0x16FF284")]
	private IEnumerator refreshDirectories()
	{
		return null;
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x25E0508", Offset = "0x25E0508", VA = "0x25E0508")]
	private void AddFileItem(int index)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x25E06FC", Offset = "0x25E06FC", VA = "0x25E06FC")]
	private void AddDirectoryItem(int index)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x25E090C", Offset = "0x25E090C", VA = "0x25E090C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x25E0C84", Offset = "0x25E0C84", VA = "0x25E0C84")]
	public Browser()
	{
	}
}
[Token(Token = "0x200000F")]
public abstract class DecoderImporter : AudioImporter
{
	[Token(Token = "0x20003DA")]
	protected class AudioInfo
	{
		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8258", Offset = "0x16F8258")]
		private int <lengthSamples>k__BackingField;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8268", Offset = "0x16F8268")]
		private int <sampleRate>k__BackingField;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8278", Offset = "0x16F8278")]
		private int <channels>k__BackingField;

		[Token(Token = "0x170003C9")]
		public int lengthSamples
		{
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0x232F530", Offset = "0x232F530", VA = "0x232F530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170594C", Offset = "0x170594C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D05")]
			[Address(RVA = "0x232F538", Offset = "0x232F538", VA = "0x232F538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170595C", Offset = "0x170595C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		public int sampleRate
		{
			[Token(Token = "0x6001D06")]
			[Address(RVA = "0x232F540", Offset = "0x232F540", VA = "0x232F540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170596C", Offset = "0x170596C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0x232F548", Offset = "0x232F548", VA = "0x232F548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170597C", Offset = "0x170597C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		public int channels
		{
			[Token(Token = "0x6001D08")]
			[Address(RVA = "0x232F550", Offset = "0x232F550", VA = "0x232F550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170598C", Offset = "0x170598C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0x232F558", Offset = "0x232F558", VA = "0x232F558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170599C", Offset = "0x170599C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x232F560", Offset = "0x232F560", VA = "0x232F560")]
		public AudioInfo(int lengthSamples, int sampleRate, int channels)
		{
		}
	}

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioInfo info;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int bufferSize;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] buffer;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AutoResetEvent waitForMainThread;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Thread import;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int index;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool abort;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Queue<Action> executionQueue;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private object _lock;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x232EAC8", Offset = "0x232EAC8", VA = "0x232EAC8", Slot = "14")]
	public override void Abort()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x232EC34", Offset = "0x232EC34", VA = "0x232EC34", Slot = "15")]
	protected override void Import()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x232ED74", Offset = "0x232ED74", VA = "0x232ED74")]
	private void DoImport()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x232EF58", Offset = "0x232EF58", VA = "0x232EF58")]
	private void Decode()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x232F0C8", Offset = "0x232F0C8", VA = "0x232F0C8")]
	private void CreateClip()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x232F190", Offset = "0x232F190", VA = "0x232F190")]
	private void SetData()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x232F2E8", Offset = "0x232F2E8", VA = "0x232F2E8")]
	protected void OnError(string error)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x232EE74", Offset = "0x232EE74", VA = "0x232EE74")]
	private void Dispatch(Action action)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x232F39C", Offset = "0x232F39C", VA = "0x232F39C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000056")]
	protected abstract void Initialize();

	[Token(Token = "0x6000057")]
	protected abstract void Cleanup();

	[Token(Token = "0x6000058")]
	protected abstract int GetSamples(float[] buffer, int offset, int count);

	[Token(Token = "0x6000059")]
	protected abstract AudioInfo GetInfo();

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x232F488", Offset = "0x232F488", VA = "0x232F488")]
	protected DecoderImporter()
	{
	}
}
[Token(Token = "0x2000010")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E56B0", Offset = "0x16E56B0")]
public class MobileImporter : AudioImporter
{
	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E92AC", Offset = "0x16E92AC")]
	private sealed class <WaitForWebRequest>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MobileImporter <>4__this;

		[Token(Token = "0x170003CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x1A8C780", Offset = "0x1A8C780", VA = "0x1A8C780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x1A8C7E8", Offset = "0x1A8C7E8", VA = "0x1A8C7E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x1A8C68C", Offset = "0x1A8C68C", VA = "0x1A8C68C")]
		[DebuggerHidden]
		public <WaitForWebRequest>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x1A8C6C0", Offset = "0x1A8C6C0", VA = "0x1A8C6C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x1A8C6C4", Offset = "0x1A8C6C4", VA = "0x1A8C6C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x1A8C788", Offset = "0x1A8C788", VA = "0x1A8C788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityWebRequest webRequest;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AsyncOperation operation;

	[Token(Token = "0x17000008")]
	public override float progress
	{
		[Token(Token = "0x600005B")]
		[Address(RVA = "0x1A8C278", Offset = "0x1A8C278", VA = "0x1A8C278", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000009")]
	public override bool isDone
	{
		[Token(Token = "0x600005C")]
		[Address(RVA = "0x1A8C290", Offset = "0x1A8C290", VA = "0x1A8C290", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000A")]
	public override bool isError
	{
		[Token(Token = "0x600005D")]
		[Address(RVA = "0x1A8C2A4", Offset = "0x1A8C2A4", VA = "0x1A8C2A4", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000B")]
	public override string error
	{
		[Token(Token = "0x600005E")]
		[Address(RVA = "0x1A8C2F4", Offset = "0x1A8C2F4", VA = "0x1A8C2F4", Slot = "12")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1A8C360", Offset = "0x1A8C360", VA = "0x1A8C360", Slot = "14")]
	public override void Abort()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1A8C3C8", Offset = "0x1A8C3C8", VA = "0x1A8C3C8", Slot = "15")]
	protected override void Import()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1A8C610", Offset = "0x1A8C610", VA = "0x1A8C610")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF2E8", Offset = "0x16FF2E8")]
	private IEnumerator WaitForWebRequest()
	{
		return null;
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1A8C6B8", Offset = "0x1A8C6B8", VA = "0x1A8C6B8")]
	public MobileImporter()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E56E8", Offset = "0x16E56E8")]
public class NAudioImporter : DecoderImporter
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaveStream reader;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ISampleProvider sampleProvider;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1A8C7F0", Offset = "0x1A8C7F0", VA = "0x1A8C7F0", Slot = "16")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x1A8CB30", Offset = "0x1A8CB30", VA = "0x1A8CB30", Slot = "17")]
	protected override void Cleanup()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1A8CB7C", Offset = "0x1A8CB7C", VA = "0x1A8CB7C", Slot = "19")]
	protected override AudioInfo GetInfo()
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1A8CC50", Offset = "0x1A8CC50", VA = "0x1A8CC50", Slot = "18")]
	protected override int GetSamples(float[] buffer, int offset, int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1A8CD28", Offset = "0x1A8CD28", VA = "0x1A8CD28")]
	public NAudioImporter()
	{
	}
}
[Token(Token = "0x2000012")]
public static class BSplineComputer
{
	[Token(Token = "0x6000068")]
	[Address(RVA = "0x25D7730", Offset = "0x25D7730", VA = "0x25D7730")]
	public static UnityEngine.Vector3[] ComputeCurvePoints(UnityEngine.Vector3[] controlPoints, int totalOutputPoints)
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x25D79EC", Offset = "0x25D79EC", VA = "0x25D79EC")]
	private static UnityEngine.Vector3 Evaluate(float t, int count, UnityEngine.Vector3[] positions, float[] times)
	{
		return default(UnityEngine.Vector3);
	}
}
[Token(Token = "0x2000013")]
public class UniformBSpline : MonoBehaviour
{
	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UniformBSplineControlPoint[] m_controlPoints;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float startTime;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float endTime;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int count;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.Vector3[] positions;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] times;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x326A318", Offset = "0x326A318", VA = "0x326A318")]
	private void Start()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x326A31C", Offset = "0x326A31C", VA = "0x326A31C")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x326A5D4", Offset = "0x326A5D4", VA = "0x326A5D4")]
	public void Clean()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x326A610", Offset = "0x326A610", VA = "0x326A610")]
	public UnityEngine.Vector3 Evaluate(float t)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x326AC04", Offset = "0x326AC04", VA = "0x326AC04")]
	public UnityEngine.Vector3 Velocity(float t)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x326AC64", Offset = "0x326AC64", VA = "0x326AC64")]
	public UnityEngine.Vector3 Aceleration(float t)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x326ACC4", Offset = "0x326ACC4", VA = "0x326ACC4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x326ADE4", Offset = "0x326ADE4", VA = "0x326ADE4")]
	public UniformBSpline()
	{
	}
}
[Token(Token = "0x2000014")]
public class UniformBSplineControlPoint : MonoBehaviour
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public UnityEngine.Vector3 cachedPosition;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x326ADF4", Offset = "0x326ADF4", VA = "0x326ADF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x326AE30", Offset = "0x326AE30", VA = "0x326AE30")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x326AE90", Offset = "0x326AE90", VA = "0x326AE90")]
	public UniformBSplineControlPoint()
	{
	}
}
[Token(Token = "0x2000015")]
public class UniformBSplineMover : MonoBehaviour
{
	[Token(Token = "0x6000075")]
	[Address(RVA = "0x326AE98", Offset = "0x326AE98", VA = "0x326AE98")]
	public UniformBSplineMover()
	{
	}
}
[Token(Token = "0x2000016")]
public class OpenWebsiteControls : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string url;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1A8EDDC", Offset = "0x1A8EDDC", VA = "0x1A8EDDC")]
	public void Open()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1A8EDE8", Offset = "0x1A8EDE8", VA = "0x1A8EDE8")]
	public OpenWebsiteControls()
	{
	}
}
[Token(Token = "0x2000017")]
public class ExampleScript : MonoBehaviour
{
	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E92BC", Offset = "0x16E92BC")]
	private sealed class <StartExamples>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExampleScript <>4__this;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CielaSpike.Task <task>5__2;

		[Token(Token = "0x170003CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x2F77714", Offset = "0x2F77714", VA = "0x2F77714", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x2F7777C", Offset = "0x2F7777C", VA = "0x2F7777C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x2F76C04", Offset = "0x2F76C04", VA = "0x2F76C04")]
		[DebuggerHidden]
		public <StartExamples>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x2F77524", Offset = "0x2F77524", VA = "0x2F77524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x2F77528", Offset = "0x2F77528", VA = "0x2F77528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x2F7771C", Offset = "0x2F7771C", VA = "0x2F7771C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E92CC", Offset = "0x16E92CC")]
	private sealed class <Blocking>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExampleScript <>4__this;

		[Token(Token = "0x170003D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0x2F772A0", Offset = "0x2F772A0", VA = "0x2F772A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x2F77308", Offset = "0x2F77308", VA = "0x2F77308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x2F76CAC", Offset = "0x2F76CAC", VA = "0x2F76CAC")]
		[DebuggerHidden]
		public <Blocking>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x2F77090", Offset = "0x2F77090", VA = "0x2F77090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x2F77094", Offset = "0x2F77094", VA = "0x2F77094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x2F772A8", Offset = "0x2F772A8", VA = "0x2F772A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E92DC", Offset = "0x16E92DC")]
	private sealed class <Cancellation>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExampleScript <>4__this;

		[Token(Token = "0x170003D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D20")]
			[Address(RVA = "0x2F77384", Offset = "0x2F77384", VA = "0x2F77384", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D22")]
			[Address(RVA = "0x2F773EC", Offset = "0x2F773EC", VA = "0x2F773EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x2F76D54", Offset = "0x2F76D54", VA = "0x2F76D54")]
		[DebuggerHidden]
		public <Cancellation>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x2F77310", Offset = "0x2F77310", VA = "0x2F77310", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x2F77314", Offset = "0x2F77314", VA = "0x2F77314", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x2F7738C", Offset = "0x2F7738C", VA = "0x2F7738C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E92EC", Offset = "0x16E92EC")]
	private sealed class <ErrorHandling>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExampleScript <>4__this;

		[Token(Token = "0x170003D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D26")]
			[Address(RVA = "0x2F774B4", Offset = "0x2F774B4", VA = "0x2F774B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D28")]
			[Address(RVA = "0x2F7751C", Offset = "0x2F7751C", VA = "0x2F7751C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x2F76DFC", Offset = "0x2F76DFC", VA = "0x2F76DFC")]
		[DebuggerHidden]
		public <ErrorHandling>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x2F773F4", Offset = "0x2F773F4", VA = "0x2F773F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x2F773F8", Offset = "0x2F773F8", VA = "0x2F773F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x2F774BC", Offset = "0x2F774BC", VA = "0x2F774BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x2F76A94", Offset = "0x2F76A94", VA = "0x2F76A94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x2F76B3C", Offset = "0x2F76B3C", VA = "0x2F76B3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x2F76AC0", Offset = "0x2F76AC0", VA = "0x2F76AC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF34C", Offset = "0x16FF34C")]
	private IEnumerator StartExamples()
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x2F76C30", Offset = "0x2F76C30", VA = "0x2F76C30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF3B0", Offset = "0x16FF3B0")]
	private IEnumerator Blocking()
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x2F76CD8", Offset = "0x2F76CD8", VA = "0x2F76CD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF414", Offset = "0x16FF414")]
	private IEnumerator Cancellation()
	{
		return null;
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x2F76D80", Offset = "0x2F76D80", VA = "0x2F76D80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF478", Offset = "0x16FF478")]
	private IEnumerator ErrorHandling()
	{
		return null;
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x2F76E28", Offset = "0x2F76E28", VA = "0x2F76E28")]
	private void LogAsync(string msg)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x2F76EB0", Offset = "0x2F76EB0", VA = "0x2F76EB0")]
	private void LogState(CielaSpike.Task task)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x2F76F78", Offset = "0x2F76F78", VA = "0x2F76F78")]
	private void LogSync(string msg)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x2F77000", Offset = "0x2F77000", VA = "0x2F77000")]
	private void LogExample(string msg)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x2F77088", Offset = "0x2F77088", VA = "0x2F77088")]
	public ExampleScript()
	{
	}
}
[Token(Token = "0x2000018")]
public class camera_follow_dance_pack_05 : MonoBehaviour
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float cameraHeight;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float cameraDistance;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x337F0F0", Offset = "0x337F0F0", VA = "0x337F0F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x337F1E4", Offset = "0x337F1E4", VA = "0x337F1E4")]
	public camera_follow_dance_pack_05()
	{
	}
}
[Token(Token = "0x2000019")]
public class follow_player : MonoBehaviour
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float cameraHeight;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float cameraDistance;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x337F1F8", Offset = "0x337F1F8", VA = "0x337F1F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x337F2EC", Offset = "0x337F2EC", VA = "0x337F2EC")]
	public follow_player()
	{
	}
}
[Token(Token = "0x200001A")]
public class DynamicBoneDemo1 : MonoBehaviour
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_Player;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_weight;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x2F7619C", Offset = "0x2F7619C", VA = "0x2F7619C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x2F76344", Offset = "0x2F76344", VA = "0x2F76344")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x2F766CC", Offset = "0x2F766CC", VA = "0x2F766CC")]
	public DynamicBoneDemo1()
	{
	}
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E5720", Offset = "0x16E5720")]
public class DynamicBone : MonoBehaviour
{
	[Token(Token = "0x20003E0")]
	public enum UpdateMode
	{
		[Token(Token = "0x4001970")]
		Normal,
		[Token(Token = "0x4001971")]
		AnimatePhysics,
		[Token(Token = "0x4001972")]
		UnscaledTime,
		[Token(Token = "0x4001973")]
		Default
	}

	[Token(Token = "0x20003E1")]
	public enum FreezeAxis
	{
		[Token(Token = "0x4001975")]
		None,
		[Token(Token = "0x4001976")]
		X,
		[Token(Token = "0x4001977")]
		Y,
		[Token(Token = "0x4001978")]
		Z
	}

	[Token(Token = "0x20003E2")]
	private class Particle
	{
		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ParentIndex;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_ChildCount;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Damping;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Elasticity;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Stiffness;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_Inert;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_Friction;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_Radius;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_BoneLength;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_isCollide;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool m_TransformNotNull;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.Vector3 m_Position;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public UnityEngine.Vector3 m_PrevPosition;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEngine.Vector3 m_EndOffset;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public UnityEngine.Vector3 m_InitLocalPosition;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEngine.Vector3 m_TransformPosition;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public UnityEngine.Vector3 m_TransformLocalPosition;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Matrix4x4 m_TransformLocalToWorldMatrix;

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x2F7286C", Offset = "0x2F7286C", VA = "0x2F7286C")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x20003E3")]
	private class ParticleTree
	{
		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Root;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector3 m_LocalGravity;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Matrix4x4 m_RootWorldToLocalMatrix;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_BoneTotalLength;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Particle> m_Particles;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEngine.Vector3 m_RestGravity;

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x2F727F0", Offset = "0x2F727F0", VA = "0x2F727F0")]
		public ParticleTree()
		{
		}
	}

	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E92FC", Offset = "0x16E92FC")]
	private sealed class <>c__DisplayClass69_0
	{
		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x2F72104", Offset = "0x2F72104", VA = "0x2F72104")]
		public <>c__DisplayClass69_0()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x2F745D8", Offset = "0x2F745D8", VA = "0x2F745D8")]
		internal bool <SetupParticles>b__0(ParticleTree x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA1DC", Offset = "0x16EA1DC")]
	public Transform m_Root;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> m_Roots;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA214", Offset = "0x16EA214")]
	public float m_UpdateRate;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public UpdateMode m_UpdateMode;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA24C", Offset = "0x16EA24C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EA24C", Offset = "0x16EA24C")]
	public float m_Damping;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA2A0", Offset = "0x16EA2A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EA2A0", Offset = "0x16EA2A0")]
	public float m_Elasticity;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA2F4", Offset = "0x16EA2F4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EA2F4", Offset = "0x16EA2F4")]
	public float m_Stiffness;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA348", Offset = "0x16EA348")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EA348", Offset = "0x16EA348")]
	public float m_Inert;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA39C", Offset = "0x16EA39C")]
	public float m_Friction;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve m_FrictionDistrib;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA3D4", Offset = "0x16EA3D4")]
	public float m_Radius;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA40C", Offset = "0x16EA40C")]
	public float m_EndLength;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA444", Offset = "0x16EA444")]
	public UnityEngine.Vector3 m_EndOffset;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA47C", Offset = "0x16EA47C")]
	public UnityEngine.Vector3 m_Gravity;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA4B4", Offset = "0x16EA4B4")]
	public UnityEngine.Vector3 m_Force;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA4EC", Offset = "0x16EA4EC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EA4EC", Offset = "0x16EA4EC")]
	public float m_BlendWeight;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA540", Offset = "0x16EA540")]
	public List<DynamicBoneColliderBase> m_Colliders;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA578", Offset = "0x16EA578")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA5B0", Offset = "0x16EA5B0")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA5E8", Offset = "0x16EA5E8")]
	public bool m_DistantDisable;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float m_DistanceToObject;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[HideInInspector]
	public bool m_Multithread;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private UnityEngine.Vector3 m_ObjectMove;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private UnityEngine.Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float m_ObjectScale;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float m_Time;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float m_Weight;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool m_DistantDisabled;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int m_PreUpdateCount;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<ParticleTree> m_ParticleTrees;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float m_DeltaTime;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<DynamicBoneColliderBase> m_EffectiveColliders;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool m_WorkAdded;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<DynamicBone> s_PendingWorks;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<DynamicBone> s_EffectiveWorks;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AutoResetEvent s_AllWorksDoneEvent;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int s_RemainWorkCount;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Semaphore s_WorkQueueSemaphore;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int s_WorkQueueIndex;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int s_UpdateCount;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int s_PrepareFrame;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x2F703E0", Offset = "0x2F703E0", VA = "0x2F703E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x2F706B0", Offset = "0x2F706B0", VA = "0x2F706B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x2F70710", Offset = "0x2F70710", VA = "0x2F70710")]
	private void Update()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x2F70860", Offset = "0x2F70860", VA = "0x2F70860")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x2F70FE4", Offset = "0x2F70FE4", VA = "0x2F70FE4")]
	private void Prepare()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x2F70FB0", Offset = "0x2F70FB0", VA = "0x2F70FB0")]
	private bool IsNeedUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x2F706C4", Offset = "0x2F706C4", VA = "0x2F706C4")]
	private void PreUpdate()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x2F70DA4", Offset = "0x2F70DA4", VA = "0x2F70DA4")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x2F71750", Offset = "0x2F71750", VA = "0x2F71750")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x2F71754", Offset = "0x2F71754", VA = "0x2F71754")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x2F71758", Offset = "0x2F71758", VA = "0x2F71758")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x2F718A8", Offset = "0x2F718A8", VA = "0x2F718A8")]
	private bool IsRootChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x2F71C04", Offset = "0x2F71C04", VA = "0x2F71C04")]
	private void OnDidApplyAnimationProperties()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x2F71C08", Offset = "0x2F71C08", VA = "0x2F71C08")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x2F71CFC", Offset = "0x2F71CFC", VA = "0x2F71CFC")]
	private void DrawGizmos(ParticleTree pt)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x2F7098C", Offset = "0x2F7098C", VA = "0x2F7098C")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x2F71E0C", Offset = "0x2F71E0C", VA = "0x2F71E0C")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x2F71408", Offset = "0x2F71408", VA = "0x2F71408")]
	private void UpdateParticles()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x2F703E4", Offset = "0x2F703E4", VA = "0x2F703E4")]
	public void SetupParticles()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x2F72004", Offset = "0x2F72004", VA = "0x2F72004")]
	private void AppendParticleTree(Transform root)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x2F7210C", Offset = "0x2F7210C", VA = "0x2F7210C")]
	private void AppendParticles(ParticleTree pt, Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x2F71B60", Offset = "0x2F71B60", VA = "0x2F71B60")]
	public void UpdateParameters()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x2F72874", Offset = "0x2F72874", VA = "0x2F72874")]
	private void UpdateParameters(ParticleTree pt)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x2F71608", Offset = "0x2F71608", VA = "0x2F71608")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x2F72C04", Offset = "0x2F72C04", VA = "0x2F72C04")]
	private void InitTransforms(ParticleTree pt)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x2F7169C", Offset = "0x2F7169C", VA = "0x2F7169C")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x2F72CD0", Offset = "0x2F72CD0", VA = "0x2F72CD0")]
	private void ResetParticlesPosition(ParticleTree pt)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x2F71E14", Offset = "0x2F71E14", VA = "0x2F71E14")]
	private void UpdateParticles1(float timeVar, int loopIndex)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x2F72DE0", Offset = "0x2F72DE0", VA = "0x2F72DE0")]
	private void UpdateParticles1(ParticleTree pt, float timeVar, int loopIndex)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x2F71EC4", Offset = "0x2F71EC4", VA = "0x2F71EC4")]
	private void UpdateParticles2(float timeVar)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x2F7315C", Offset = "0x2F7315C", VA = "0x2F7315C")]
	private void UpdateParticles2(ParticleTree pt, float timeVar)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x2F71F6C", Offset = "0x2F71F6C", VA = "0x2F71F6C")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x2F7386C", Offset = "0x2F7386C", VA = "0x2F7386C")]
	private void SkipUpdateParticles(ParticleTree pt)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x2F73D94", Offset = "0x2F73D94", VA = "0x2F73D94")]
	private static UnityEngine.Vector3 MirrorVector(UnityEngine.Vector3 v, UnityEngine.Vector3 axis)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x2F71528", Offset = "0x2F71528", VA = "0x2F71528")]
	private void ApplyParticlesToTransforms()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x2F73E74", Offset = "0x2F73E74", VA = "0x2F73E74")]
	private void ApplyParticlesToTransforms(ParticleTree pt, UnityEngine.Vector3 ax, UnityEngine.Vector3 ay, UnityEngine.Vector3 az, bool nx, bool ny, bool nz)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x2F707DC", Offset = "0x2F707DC", VA = "0x2F707DC")]
	private static void AddPendingWork(DynamicBone db)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x2F740CC", Offset = "0x2F740CC", VA = "0x2F740CC")]
	private static void AddWorkToQueue(DynamicBone db)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x2F74140", Offset = "0x2F74140", VA = "0x2F74140")]
	private static DynamicBone GetWorkFromQueue()
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x2F741E8", Offset = "0x2F741E8", VA = "0x2F741E8")]
	private static void ThreadProc()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x2F742B4", Offset = "0x2F742B4", VA = "0x2F742B4")]
	private static void InitThreadPool()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x2F709EC", Offset = "0x2F709EC", VA = "0x2F709EC")]
	private static void ExecuteWorks()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x2F74428", Offset = "0x2F74428", VA = "0x2F74428")]
	public DynamicBone()
	{
	}
}
[Token(Token = "0x200001C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E5758", Offset = "0x16E5758")]
public class DynamicBoneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA630", Offset = "0x16EA630")]
	public float m_Radius;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA668", Offset = "0x16EA668")]
	public float m_Height;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA6A0", Offset = "0x16EA6A0")]
	public float m_Radius2;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_ScaledRadius;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_ScaledRadius2;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private UnityEngine.Vector3 m_C0;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Vector3 m_C1;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_C01Distance;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int m_CollideType;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x2F74660", Offset = "0x2F74660", VA = "0x2F74660")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x2F74710", Offset = "0x2F74710", VA = "0x2F74710", Slot = "5")]
	public override void Prepare()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x2F74B34", Offset = "0x2F74B34", VA = "0x2F74B34", Slot = "6")]
	public override bool Collide(ref UnityEngine.Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x2F74C44", Offset = "0x2F74C44", VA = "0x2F74C44")]
	private static bool OutsideSphere(ref UnityEngine.Vector3 particlePosition, float particleRadius, UnityEngine.Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x2F74DE0", Offset = "0x2F74DE0", VA = "0x2F74DE0")]
	private static bool InsideSphere(ref UnityEngine.Vector3 particlePosition, float particleRadius, UnityEngine.Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x2F74F90", Offset = "0x2F74F90", VA = "0x2F74F90")]
	private static bool OutsideCapsule(ref UnityEngine.Vector3 particlePosition, float particleRadius, UnityEngine.Vector3 capsuleP0, UnityEngine.Vector3 capsuleP1, float capsuleRadius, float dirlen)
	{
		return default(bool);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x2F7533C", Offset = "0x2F7533C", VA = "0x2F7533C")]
	private static bool InsideCapsule(ref UnityEngine.Vector3 particlePosition, float particleRadius, UnityEngine.Vector3 capsuleP0, UnityEngine.Vector3 capsuleP1, float capsuleRadius, float dirlen)
	{
		return default(bool);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x2F756F4", Offset = "0x2F756F4", VA = "0x2F756F4")]
	private static bool OutsideCapsule2(ref UnityEngine.Vector3 particlePosition, float particleRadius, UnityEngine.Vector3 capsuleP0, UnityEngine.Vector3 capsuleP1, float capsuleRadius0, float capsuleRadius1, float dirlen)
	{
		return default(bool);
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x2F75B50", Offset = "0x2F75B50", VA = "0x2F75B50")]
	private static bool InsideCapsule2(ref UnityEngine.Vector3 particlePosition, float particleRadius, UnityEngine.Vector3 capsuleP0, UnityEngine.Vector3 capsuleP1, float capsuleRadius0, float capsuleRadius1, float dirlen)
	{
		return default(bool);
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x2F75F9C", Offset = "0x2F75F9C", VA = "0x2F75F9C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x2F7606C", Offset = "0x2F7606C", VA = "0x2F7606C")]
	private static void DrawCapsule(UnityEngine.Vector3 c0, UnityEngine.Vector3 c1, float radius0, float radius1)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x2F760F0", Offset = "0x2F760F0", VA = "0x2F760F0")]
	public DynamicBoneCollider()
	{
	}
}
[Token(Token = "0x200001D")]
public class DynamicBoneColliderBase : MonoBehaviour
{
	[Token(Token = "0x20003E5")]
	public enum Direction
	{
		[Token(Token = "0x4001995")]
		X,
		[Token(Token = "0x4001996")]
		Y,
		[Token(Token = "0x4001997")]
		Z
	}

	[Token(Token = "0x20003E6")]
	public enum Bound
	{
		[Token(Token = "0x4001999")]
		Outside,
		[Token(Token = "0x400199A")]
		Inside
	}

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA6D8", Offset = "0x16EA6D8")]
	public Direction m_Direction;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA710", Offset = "0x16EA710")]
	public UnityEngine.Vector3 m_Center;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA748", Offset = "0x16EA748")]
	public Bound m_Bound;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA780", Offset = "0x16EA780")]
	private int <PrepareFrame>k__BackingField;

	[Token(Token = "0x1700000C")]
	public int PrepareFrame
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x2F76184", Offset = "0x2F76184", VA = "0x2F76184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF4EC", Offset = "0x16FF4EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x2F7617C", Offset = "0x2F7617C", VA = "0x2F7617C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF4DC", Offset = "0x16FF4DC")]
		set
		{
		}
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x2F7618C", Offset = "0x2F7618C", VA = "0x2F7618C", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x2F76190", Offset = "0x2F76190", VA = "0x2F76190", Slot = "5")]
	public virtual void Prepare()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x2F76194", Offset = "0x2F76194", VA = "0x2F76194", Slot = "6")]
	public virtual bool Collide(ref UnityEngine.Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x2F760FC", Offset = "0x2F760FC", VA = "0x2F760FC")]
	public DynamicBoneColliderBase()
	{
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E5790", Offset = "0x16E5790")]
public class DynamicBonePlaneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Plane m_Plane;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x2F766DC", Offset = "0x2F766DC", VA = "0x2F766DC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x2F766E0", Offset = "0x2F766E0", VA = "0x2F766E0", Slot = "5")]
	public override void Prepare()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x2F76810", Offset = "0x2F76810", VA = "0x2F76810", Slot = "6")]
	public override bool Collide(ref UnityEngine.Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x2F76938", Offset = "0x2F76938", VA = "0x2F76938")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x2F76A90", Offset = "0x2F76A90", VA = "0x2F76A90")]
	public DynamicBonePlaneCollider()
	{
	}
}
[Token(Token = "0x200001F")]
public class HueManager : MonoBehaviour
{
	[Token(Token = "0x40000C5")]
	private const string ConnectionStringPref = "HueConnectionString";

	[Token(Token = "0x40000C6")]
	private const string LightsListPref = "HueIncludedLights";

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HuenityController _hueController;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] _lightsList;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x2F7A69C", Offset = "0x2F7A69C", VA = "0x2F7A69C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x2F7A82C", Offset = "0x2F7A82C", VA = "0x2F7A82C")]
	public void SaveConnectionString(string connectionString)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x2F7A750", Offset = "0x2F7A750", VA = "0x2F7A750")]
	public string GetConnectionString()
	{
		return null;
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x2F7A8A4", Offset = "0x2F7A8A4", VA = "0x2F7A8A4")]
	public void SaveIncludedLightsList(List<string> chosenLights)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x2F7A79C", Offset = "0x2F7A79C", VA = "0x2F7A79C")]
	public string[] GetIncludedLightsList()
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x2F7A928", Offset = "0x2F7A928", VA = "0x2F7A928")]
	public void ResetPlayerPrefs()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x2F7A988", Offset = "0x2F7A988", VA = "0x2F7A988")]
	public void SetLights(HueLightState lightState)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x2F7AAFC", Offset = "0x2F7AAFC", VA = "0x2F7AAFC")]
	public void SetRandomLight(HueLightState lightState)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x2F7AB90", Offset = "0x2F7AB90", VA = "0x2F7AB90")]
	public HueManager()
	{
	}
}
[Token(Token = "0x2000020")]
public static class JsonHelper
{
	[Serializable]
	[Token(Token = "0x20003E7")]
	private class Wrapper<T>
	{
		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] Items;

		[Token(Token = "0x6001D2D")]
		public Wrapper()
		{
		}
	}

	[Token(Token = "0x60000D6")]
	public static T[] FromJson<T>(string json)
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	public static string ToJson<T>(T[] array)
	{
		return null;
	}

	[Token(Token = "0x60000D8")]
	public static string ToJson<T>(T[] array, bool prettyPrint)
	{
		return null;
	}
}
[Token(Token = "0x2000021")]
public class HueTestPanel : MonoBehaviour
{
	[Token(Token = "0x20003E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E930C", Offset = "0x16E930C")]
	private sealed class <PoliceLightsAsync>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HueTestPanel <>4__this;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int flashCount;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <red>5__2;

		[Token(Token = "0x170003D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x2F7DAC0", Offset = "0x2F7DAC0", VA = "0x2F7DAC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x2F7DB28", Offset = "0x2F7DB28", VA = "0x2F7DB28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x2F7B9FC", Offset = "0x2F7B9FC", VA = "0x2F7B9FC")]
		[DebuggerHidden]
		public <PoliceLightsAsync>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x2F7D91C", Offset = "0x2F7D91C", VA = "0x2F7D91C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x2F7D920", Offset = "0x2F7D920", VA = "0x2F7D920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x2F7DAC8", Offset = "0x2F7DAC8", VA = "0x2F7DAC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E931C", Offset = "0x16E931C")]
	private sealed class <FlickerAsync>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HueTestPanel <>4__this;

		[Token(Token = "0x170003D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x2F7D53C", Offset = "0x2F7D53C", VA = "0x2F7D53C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0x2F7D5A4", Offset = "0x2F7D5A4", VA = "0x2F7D5A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x2F7BAD0", Offset = "0x2F7BAD0", VA = "0x2F7BAD0")]
		[DebuggerHidden]
		public <FlickerAsync>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x2F7CEDC", Offset = "0x2F7CEDC", VA = "0x2F7CEDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x2F7CEE0", Offset = "0x2F7CEE0", VA = "0x2F7CEE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x2F7D544", Offset = "0x2F7D544", VA = "0x2F7D544", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E932C", Offset = "0x16E932C")]
	private sealed class <FlashAsync>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HueTestPanel <>4__this;

		[Token(Token = "0x170003DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0x2F7CE6C", Offset = "0x2F7CE6C", VA = "0x2F7CE6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0x2F7CED4", Offset = "0x2F7CED4", VA = "0x2F7CED4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x2F7BBA4", Offset = "0x2F7BBA4", VA = "0x2F7BBA4")]
		[DebuggerHidden]
		public <FlashAsync>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x2F7CC94", Offset = "0x2F7CC94", VA = "0x2F7CC94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x2F7CC98", Offset = "0x2F7CC98", VA = "0x2F7CC98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x2F7CE74", Offset = "0x2F7CE74", VA = "0x2F7CE74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E933C", Offset = "0x16E933C")]
	private sealed class <LightningAsync>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HueTestPanel <>4__this;

		[Token(Token = "0x170003DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x2F7D8AC", Offset = "0x2F7D8AC", VA = "0x2F7D8AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D45")]
			[Address(RVA = "0x2F7D914", Offset = "0x2F7D914", VA = "0x2F7D914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x2F7BC78", Offset = "0x2F7BC78", VA = "0x2F7BC78")]
		[DebuggerHidden]
		public <LightningAsync>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x2F7D5AC", Offset = "0x2F7D5AC", VA = "0x2F7D5AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x2F7D5B0", Offset = "0x2F7D5B0", VA = "0x2F7D5B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x2F7D8B4", Offset = "0x2F7D8B4", VA = "0x2F7D8B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E934C", Offset = "0x16E934C")]
	private sealed class <PulseAsync>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HueTestPanel <>4__this;

		[Token(Token = "0x170003DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x2F7DE80", Offset = "0x2F7DE80", VA = "0x2F7DE80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x2F7DEE8", Offset = "0x2F7DEE8", VA = "0x2F7DEE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x2F7BD4C", Offset = "0x2F7BD4C", VA = "0x2F7BD4C")]
		[DebuggerHidden]
		public <PulseAsync>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x2F7DB30", Offset = "0x2F7DB30", VA = "0x2F7DB30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x2F7DB34", Offset = "0x2F7DB34", VA = "0x2F7DB34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x2F7DE88", Offset = "0x2F7DE88", VA = "0x2F7DE88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E935C", Offset = "0x16E935C")]
	private sealed class <ExplosionAsync>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HueTestPanel <>4__this;

		[Token(Token = "0x170003E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x2F7C7E4", Offset = "0x2F7C7E4", VA = "0x2F7C7E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D51")]
			[Address(RVA = "0x2F7C84C", Offset = "0x2F7C84C", VA = "0x2F7C84C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x2F7BE20", Offset = "0x2F7BE20", VA = "0x2F7BE20")]
		[DebuggerHidden]
		public <ExplosionAsync>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x2F7C3E0", Offset = "0x2F7C3E0", VA = "0x2F7C3E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x2F7C3E4", Offset = "0x2F7C3E4", VA = "0x2F7C3E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x2F7C7EC", Offset = "0x2F7C7EC", VA = "0x2F7C7EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E936C", Offset = "0x16E936C")]
	private sealed class <FireAsync>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HueTestPanel <>4__this;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cycles;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] <fireColors>5__2;

		[Token(Token = "0x170003E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0x2F7CC24", Offset = "0x2F7CC24", VA = "0x2F7CC24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0x2F7CC8C", Offset = "0x2F7CC8C", VA = "0x2F7CC8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x2F7BF08", Offset = "0x2F7BF08", VA = "0x2F7BF08")]
		[DebuggerHidden]
		public <FireAsync>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x2F7C854", Offset = "0x2F7C854", VA = "0x2F7C854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x2F7C858", Offset = "0x2F7C858", VA = "0x2F7C858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x2F7CC2C", Offset = "0x2F7CC2C", VA = "0x2F7CC2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E937C", Offset = "0x16E937C")]
	private sealed class <DiscoAsync>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HueTestPanel <>4__this;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cycles;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] <discoColors>5__2;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <oldColor>5__3;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color <newColor>5__4;

		[Token(Token = "0x170003E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x2F7C370", Offset = "0x2F7C370", VA = "0x2F7C370", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0x2F7C3D8", Offset = "0x2F7C3D8", VA = "0x2F7C3D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x2F7BFF0", Offset = "0x2F7BFF0", VA = "0x2F7BFF0")]
		[DebuggerHidden]
		public <DiscoAsync>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x2F7C09C", Offset = "0x2F7C09C", VA = "0x2F7C09C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x2F7C0A0", Offset = "0x2F7C0A0", VA = "0x2F7C0A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x2F7C378", Offset = "0x2F7C378", VA = "0x2F7C378", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TestPanel;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text NoBridgeMessage;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider RedSlider;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider GreenSlider;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider BlueSlider;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider BrightnessSlider;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InputField TransitionSpeed;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RawImage ColorSample;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HueManager _hueManager;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x2F7AFC8", Offset = "0x2F7AFC8", VA = "0x2F7AFC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x2F7B1A0", Offset = "0x2F7B1A0", VA = "0x2F7B1A0")]
	public void RefreshLights()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x2F7B544", Offset = "0x2F7B544", VA = "0x2F7B544")]
	private void UpdateColorSwatch()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x2F7B60C", Offset = "0x2F7B60C", VA = "0x2F7B60C")]
	public void TurnLightsOn()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x2F7B6B0", Offset = "0x2F7B6B0", VA = "0x2F7B6B0")]
	public void TurnLightsOff()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x2F7B754", Offset = "0x2F7B754", VA = "0x2F7B754")]
	public void Alert()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x2F7B7F8", Offset = "0x2F7B7F8", VA = "0x2F7B7F8")]
	public void Alerts()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x2F7B89C", Offset = "0x2F7B89C", VA = "0x2F7B89C")]
	public void ColorLoop()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x2F7B940", Offset = "0x2F7B940", VA = "0x2F7B940")]
	public void PoliceLights()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x2F7B970", Offset = "0x2F7B970", VA = "0x2F7B970")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF4FC", Offset = "0x16FF4FC")]
	private IEnumerator PoliceLightsAsync(int flashCount)
	{
		return null;
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x2F7BA28", Offset = "0x2F7BA28", VA = "0x2F7BA28")]
	public void Flicker()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x2F7BA54", Offset = "0x2F7BA54", VA = "0x2F7BA54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF560", Offset = "0x16FF560")]
	private IEnumerator FlickerAsync()
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x2F7BAFC", Offset = "0x2F7BAFC", VA = "0x2F7BAFC")]
	public void Flash()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x2F7BB28", Offset = "0x2F7BB28", VA = "0x2F7BB28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF5C4", Offset = "0x16FF5C4")]
	private IEnumerator FlashAsync()
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x2F7BBD0", Offset = "0x2F7BBD0", VA = "0x2F7BBD0")]
	public void Lightning()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x2F7BBFC", Offset = "0x2F7BBFC", VA = "0x2F7BBFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF628", Offset = "0x16FF628")]
	private IEnumerator LightningAsync()
	{
		return null;
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x2F7BCA4", Offset = "0x2F7BCA4", VA = "0x2F7BCA4")]
	public void Pulse()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x2F7BCD0", Offset = "0x2F7BCD0", VA = "0x2F7BCD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF68C", Offset = "0x16FF68C")]
	private IEnumerator PulseAsync()
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x2F7BD78", Offset = "0x2F7BD78", VA = "0x2F7BD78")]
	public void Explosion()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x2F7BDA4", Offset = "0x2F7BDA4", VA = "0x2F7BDA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF6F0", Offset = "0x16FF6F0")]
	private IEnumerator ExplosionAsync()
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x2F7BE4C", Offset = "0x2F7BE4C", VA = "0x2F7BE4C")]
	public void Fire()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x2F7BE7C", Offset = "0x2F7BE7C", VA = "0x2F7BE7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF754", Offset = "0x16FF754")]
	private IEnumerator FireAsync(int cycles)
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x2F7BF34", Offset = "0x2F7BF34", VA = "0x2F7BF34")]
	public void Disco()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x2F7BF64", Offset = "0x2F7BF64", VA = "0x2F7BF64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF7B8", Offset = "0x16FF7B8")]
	private IEnumerator DiscoAsync(int cycles)
	{
		return null;
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x2F7C01C", Offset = "0x2F7C01C", VA = "0x2F7C01C")]
	public void GoToSettings()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x2F7C088", Offset = "0x2F7C088", VA = "0x2F7C088")]
	public HueTestPanel()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x2F7C090", Offset = "0x2F7C090", VA = "0x2F7C090")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF81C", Offset = "0x16FF81C")]
	private void <Start>b__9_0(float <p0>)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x2F7C094", Offset = "0x2F7C094", VA = "0x2F7C094")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF82C", Offset = "0x16FF82C")]
	private void <Start>b__9_1(float <p0>)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x2F7C098", Offset = "0x2F7C098", VA = "0x2F7C098")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF83C", Offset = "0x16FF83C")]
	private void <Start>b__9_2(float <p0>)
	{
	}
}
[Token(Token = "0x2000022")]
public class HuenitySetup : MonoBehaviour
{
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E938C", Offset = "0x16E938C")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HuenitySetup <>4__this;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string bridgeAddress;

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x24BA3BC", Offset = "0x24BA3BC", VA = "0x24BA3BC")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x24BAE88", Offset = "0x24BAE88", VA = "0x24BAE88")]
		internal void <GetUsername>b__0(string usernameCallback)
		{
		}
	}

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AppName;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas InitiateConnectionScreen;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField IPInput;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Canvas PromptToPressLinkButtonScreen;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Canvas LightSelectorScreen;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform ContentPanel;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject LightToggle;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text StatusMessage;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HuenityController _hueController;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string[] _includedLights;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HueManager _hueManager;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x24B9F48", Offset = "0x24B9F48", VA = "0x24B9F48")]
	public void Start()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x24BA130", Offset = "0x24BA130", VA = "0x24BA130")]
	public void CreateConnection()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x24BA1E8", Offset = "0x24BA1E8", VA = "0x24BA1E8")]
	public void GenerateUsernameWithManualIP()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x24BA278", Offset = "0x24BA278", VA = "0x24BA278")]
	private void GetUsername(string bridgeAddress)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x24BA3C4", Offset = "0x24BA3C4", VA = "0x24BA3C4")]
	private bool CheckForError(string response)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x24BA09C", Offset = "0x24BA09C", VA = "0x24BA09C")]
	private void RefreshLights()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x24BA484", Offset = "0x24BA484", VA = "0x24BA484")]
	private void SaveIncludedLights()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x24BA794", Offset = "0x24BA794", VA = "0x24BA794")]
	private void RefreshLightsUI(HueLight[] lights)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x24BAC78", Offset = "0x24BAC78", VA = "0x24BAC78")]
	public void ResetBridge()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x24BACE0", Offset = "0x24BACE0", VA = "0x24BACE0")]
	public void BackButton()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x24BAD4C", Offset = "0x24BAD4C", VA = "0x24BAD4C")]
	public HuenitySetup()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x24BAD54", Offset = "0x24BAD54", VA = "0x24BAD54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF84C", Offset = "0x16FF84C")]
	private void <CreateConnection>b__12_0(string ipCallback)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x24BAE14", Offset = "0x24BAE14", VA = "0x24BAE14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF85C", Offset = "0x16FF85C")]
	private void <RefreshLights>b__16_0(List<HueLight> callbackLightsList)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x24BAE84", Offset = "0x24BAE84", VA = "0x24BAE84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FF86C", Offset = "0x16FF86C")]
	private void <RefreshLightsUI>b__18_0(bool <p0>)
	{
	}
}
[Token(Token = "0x2000023")]
public class LightToggle : MonoBehaviour
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle toggle;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text NameLabel;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ID;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x24BAC08", Offset = "0x24BAC08", VA = "0x24BAC08")]
	public void Setup(bool enabled, string lightName, string lightID)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x24C6B5C", Offset = "0x24C6B5C", VA = "0x24C6B5C")]
	public LightToggle()
	{
	}
}
[Token(Token = "0x2000024")]
public class HueRequestHelper : MonoBehaviour
{
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E939C", Offset = "0x16E939C")]
	private sealed class <SendRequestAsync>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string connection;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string request;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string method;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string body;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<string> response;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DownloadHandlerBuffer <downloadHandler>5__3;

		[Token(Token = "0x170003E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0x2F7AF58", Offset = "0x2F7AF58", VA = "0x2F7AF58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0x2F7AFC0", Offset = "0x2F7AFC0", VA = "0x2F7AFC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x2F7AC74", Offset = "0x2F7AC74", VA = "0x2F7AC74")]
		[DebuggerHidden]
		public <SendRequestAsync>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x2F7ACA8", Offset = "0x2F7ACA8", VA = "0x2F7ACA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x2F7ACAC", Offset = "0x2F7ACAC", VA = "0x2F7ACAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x2F7AF60", Offset = "0x2F7AF60", VA = "0x2F7AF60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x2F7AB98", Offset = "0x2F7AB98", VA = "0x2F7AB98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF87C", Offset = "0x16FF87C")]
	public static IEnumerator SendRequestAsync(string connection, string request, string method, Action<string> response, [Optional] string body)
	{
		return null;
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x2F7ACA0", Offset = "0x2F7ACA0", VA = "0x2F7ACA0")]
	public HueRequestHelper()
	{
	}
}
[Token(Token = "0x2000025")]
public class AutoDestroy : MonoBehaviour
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float destroyTime;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float time;

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x25D37D8", Offset = "0x25D37D8", VA = "0x25D37D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x25D37DC", Offset = "0x25D37DC", VA = "0x25D37DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x25D3890", Offset = "0x25D3890", VA = "0x25D3890")]
	public AutoDestroy()
	{
	}
}
[Token(Token = "0x2000026")]
public class AutoKaleidoWave : MonoBehaviour
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector3 ringShiftSpeed;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ringShiftTime;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ringAngleSpeed;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ringAngleTime;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Kaleidoscope kaleidoscope;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float time;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private UnityEngine.Vector3 def_ringShift;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float def_ringAngle;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x25D38A0", Offset = "0x25D38A0", VA = "0x25D38A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x25D3928", Offset = "0x25D3928", VA = "0x25D3928")]
	private void Update()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x25D3A88", Offset = "0x25D3A88", VA = "0x25D3A88")]
	public AutoKaleidoWave()
	{
	}
}
[Token(Token = "0x2000027")]
public class AutoMove : MonoBehaviour
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector3 moveSpeed;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UnityEngine.Vector3 rotSpeed;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lessSpeed;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x25D3A9C", Offset = "0x25D3A9C", VA = "0x25D3A9C")]
	private void Start()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x25D3AA0", Offset = "0x25D3AA0", VA = "0x25D3AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x25D3D04", Offset = "0x25D3D04", VA = "0x25D3D04")]
	public AutoMove()
	{
	}
}
[Token(Token = "0x2000028")]
public class AutoWaveMove : MonoBehaviour
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Vector3 moveSpeed;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float waveTime;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private UnityEngine.Vector3 default_pos;

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x25D3D0C", Offset = "0x25D3D0C", VA = "0x25D3D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x25D3D48", Offset = "0x25D3D48", VA = "0x25D3D48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x25D3E80", Offset = "0x25D3E80", VA = "0x25D3E80")]
	public AutoWaveMove()
	{
	}
}
[Token(Token = "0x2000029")]
public class Bullet : MonoBehaviour
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float bombTime;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float time;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x25E0F34", Offset = "0x25E0F34", VA = "0x25E0F34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x25E0F38", Offset = "0x25E0F38", VA = "0x25E0F38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x25E106C", Offset = "0x25E106C", VA = "0x25E106C")]
	public Bullet()
	{
	}
}
[Token(Token = "0x200002A")]
public class Kaleidoscope : MonoBehaviour
{
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform baseObject;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int circleValue;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool xMirror;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Gradient color;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool freezeRotation;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int ringValue;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.Vector3 ringShift;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ringAngle;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ringSize;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem pe;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystemRenderer per;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int mirror_mult;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int circleValueOld;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool xMirrorOld;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int ringValueOld;

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x24BB354", Offset = "0x24BB354", VA = "0x24BB354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x24BBE0C", Offset = "0x24BBE0C", VA = "0x24BBE0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x24BB594", Offset = "0x24BB594", VA = "0x24BB594")]
	private void ParticleUpdate()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x24BB498", Offset = "0x24BB498", VA = "0x24BB498")]
	private void ResetParticles()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x24BBED8", Offset = "0x24BBED8", VA = "0x24BBED8")]
	private UnityEngine.Vector3 MoveCircle(UnityEngine.Vector3 before, float angle)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x24BBFB0", Offset = "0x24BBFB0", VA = "0x24BBFB0")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x24BBFCC", Offset = "0x24BBFCC", VA = "0x24BBFCC")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x24BBFE8", Offset = "0x24BBFE8", VA = "0x24BBFE8")]
	public Kaleidoscope()
	{
	}
}
[Token(Token = "0x200002B")]
public class RealTimeChange : MonoBehaviour
{
	[Token(Token = "0x20003F2")]
	public enum Mode
	{
		[Token(Token = "0x40019C8")]
		MATERIAL,
		[Token(Token = "0x40019C9")]
		MESH
	}

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int idx;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Kaleidoscope kaleidoscope;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform kaleidoscopeTarget;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mode renderMode;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] materials;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh[] meshes;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider slider;

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1A98EF8", Offset = "0x1A98EF8", VA = "0x1A98EF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1A98EFC", Offset = "0x1A98EFC", VA = "0x1A98EFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1A99070", Offset = "0x1A99070", VA = "0x1A99070")]
	public void SetCircleValue(float value)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1A990F8", Offset = "0x1A990F8", VA = "0x1A990F8")]
	public void OnSliderChanged()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1A99134", Offset = "0x1A99134", VA = "0x1A99134")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1A991F4", Offset = "0x1A991F4", VA = "0x1A991F4")]
	public RealTimeChange()
	{
	}
}
[Token(Token = "0x200002C")]
public class Shooting : MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float randomSize;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float shootSpeed;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x2AC2CE0", Offset = "0x2AC2CE0", VA = "0x2AC2CE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x2AC2CE4", Offset = "0x2AC2CE4", VA = "0x2AC2CE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x2AC2EEC", Offset = "0x2AC2EEC", VA = "0x2AC2EEC")]
	public Shooting()
	{
	}
}
[Token(Token = "0x200002D")]
public class ApplyProceduralTextureProperties : MonoBehaviour
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EA790", Offset = "0x16EA790")]
	public Material m_Material;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EA7A4", Offset = "0x16EA7A4")]
	public ProceduralTexture2D proceduralTexAssetAlbedo;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProceduralTexture2D proceduralTexAssetNormal;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ProceduralTexture2D proceduralTexAssetMask;

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x25CCC0C", Offset = "0x25CCC0C", VA = "0x25CCC0C")]
	public void SyncMatWithProceduralTextureAsset()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x25CD2E0", Offset = "0x25CD2E0", VA = "0x25CD2E0")]
	public ApplyProceduralTextureProperties()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x16E57C8", Offset = "0x16E57C8")]
public class ProceduralTexture2D : ScriptableObject
{
	[Token(Token = "0x20003F3")]
	public enum TextureType
	{
		[Token(Token = "0x40019CB")]
		Color,
		[Token(Token = "0x40019CC")]
		Normal,
		[Token(Token = "0x40019CD")]
		Other
	}

	[Token(Token = "0x20003F4")]
	public enum CompressionLevel
	{
		[Token(Token = "0x40019CF")]
		None = -1,
		[Token(Token = "0x40019D0")]
		LowQuality = 0,
		[Token(Token = "0x40019D1")]
		NormalQuality = 50,
		[Token(Token = "0x40019D2")]
		HighQuality = 100
	}

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D input;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextureType type;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool includeAlpha;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool generateMipMaps;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FilterMode filterMode;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int anisoLevel;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CompressionLevel compressionQuality;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D Tinput;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D invT;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.Vector3 colorSpaceOrigin;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public UnityEngine.Vector3 colorSpaceVector1;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEngine.Vector3 colorSpaceVector2;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public UnityEngine.Vector3 colorSpaceVector3;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector4 compressionScalers;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public long memoryUsageBytes;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture2D currentInput;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextureType currentType;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool currentIncludeAlpha;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool currentGenerateMipMaps;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public FilterMode currentFilterMode;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int currentAnisoLevel;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CompressionLevel currentCompressionQuality;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1A986D4", Offset = "0x1A986D4", VA = "0x1A986D4")]
	public ProceduralTexture2D()
	{
	}
}
[Token(Token = "0x200002F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E5834", Offset = "0x16E5834")]
[ExecuteInEditMode]
public class PrismSetDofFocusPointToCameraRay : MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lerpSpeed;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sphereRadius;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject currentHitObject;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1A97594", Offset = "0x1A97594", VA = "0x1A97594")]
	private void Update()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1A9785C", Offset = "0x1A9785C", VA = "0x1A9785C")]
	public PrismSetDofFocusPointToCameraRay()
	{
	}
}
[Token(Token = "0x2000030")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E58A8", Offset = "0x16E58A8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E58A8", Offset = "0x16E58A8")]
[ImageEffectAllowedInSceneView]
public class PrismEffects : MonoBehaviour
{
	[Token(Token = "0x20003F5")]
	public enum OcclusionSource
	{
		[Token(Token = "0x40019D4")]
		DepthTexture,
		[Token(Token = "0x40019D5")]
		DepthNormalsTexture,
		[Token(Token = "0x40019D6")]
		GBuffer
	}

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PrismPreset currentPrismPreset;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool currentlyInsideVolume;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	protected bool shouldSkipNextFrame;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	protected bool areEffectsDisabled;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool enableGuaranteedMaterialOptimization;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool autoTurnOffDepthTextures;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool renderDepthDebug;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_Material;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader m_Shader;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_Material2;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Shader m_Shader2;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material m_AOMaterial;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Shader m_AOShader;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material m_Material3;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Shader m_Shader3;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material m_DoFMaterial;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader m_DoFShader;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material m_FlaresMaterial;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader m_FlaresShader;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Camera m_Camera;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool doBigPass;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool useSeparableBlur;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture2D lensDirtTexture;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool useLensDirt;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EA7B8", Offset = "0x16EA7B8")]
	public bool useBloom;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool useBloomFlares;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	public bool bloomUseScreenBlend;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public BloomType bloomType;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool useDifferentMobileBloom;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public BloomThreshholdType bloomThreshType;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool debugBloomTex;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public BloomDownsampleAmount bloomDownsampleEnum;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EA7CC", Offset = "0x16EA7CC")]
	public int bloomDownsample;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EA7E4", Offset = "0x16EA7E4")]
	public int bloomBlurPasses;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float bloomIntensity;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float bloomOneIntensity;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float bloomTwoIntensity;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float bloomThreeIntensity;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float bloomFourIntensity;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EA7FC", Offset = "0x16EA7FC")]
	public float bloomThreshold;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float bloomRadius;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float bloomKnee;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float dirtIntensity;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool useBloomStability;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected RenderTexture accumulationBuffer;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Texture2D bloomFlareStarburstTex;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float bloomFlareStrength;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float bloomFlareHaloWidth;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float bloomFlareGhostDispersal;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float bloomFlareChromaticDistortion;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float bloomFlareLensDirtIntensityMultiplier;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public int bloomFlareNumberGhosts;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float bloomFlareRadius1;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float bloomFlareRadius2;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float bloomFlareRadius3;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool useUIBlur;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int uiBlurGrabTextureFromPassNumber;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected RenderTexture uiBlurTexture;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EA814", Offset = "0x16EA814")]
	public bool useVignette;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float vignetteStart;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float vignetteEnd;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float vignetteStrength;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Color vignetteColor;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EA828", Offset = "0x16EA828")]
	public bool useNoise;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	public bool useDither;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Texture2D noiseTexture;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float noiseIntensity;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float secondaryNoiseMultiplier;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EA83C", Offset = "0x16EA83C")]
	public bool useChromaticAberration;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public AberrationType aberrationType;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EA850", Offset = "0x16EA850")]
	public float chromaticDistanceOne;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EA868", Offset = "0x16EA868")]
	public float chromaticDistanceTwo;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float chromaticIntensity;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float chromaticBlurWidth;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool useChromaticBlur;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EA880", Offset = "0x16EA880")]
	public bool useTonemap;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public TonemapType tonemapType;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public UnityEngine.Vector3 toneValues;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public UnityEngine.Vector3 secondaryToneValues;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool useBrightness;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float brightIntensity;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float brightCutoff;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float brightSoftness;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool useExposure;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	public bool debugViewExposure;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected RenderTexture currentAdaptationTexture;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float exposureMiddleGrey;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float exposureLowerLimit;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float exposureUpperLimit;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public float exposureSpeed;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public int histWidth;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public int histHeight;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	protected bool firstRun;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	public bool useGammaCorrection;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public float gammaValue;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EA894", Offset = "0x16EA894")]
	private RenderBuffer[] _DoFMRT;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public bool useDof;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	public bool dofForceEnableMedian;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
	public bool useNearDofBlur;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EB")]
	public bool useFullScreenBlur;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public float dofNearFocusPoint;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public float dofNearFocusDistance;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public float dofFocusPoint;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float dofFocusDistance;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public BloomDownsampleAmount dofDownsample;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool dofUseMRT;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public float dofRadius;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public float dofBokehFactor;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public DoFSamples dofSampleAmount;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public bool useDICEDof;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public float dofShapeWeight;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool dofBlurSkybox;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	public bool debugDofPass;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public DebugDofPass dofDebugType;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Transform dofFocusTransform;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EA8A8", Offset = "0x16EA8A8")]
	public bool useLut;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Texture2D twoDLookupTex;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Texture3D threeDLookupTex;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public string basedOnTempTex;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float lutLerpAmount;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public bool useSecondLut;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Texture2D secondaryTwoDLookupTex;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public Texture3D secondaryThreeDLookupTex;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public string secondaryBasedOnTempTex;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public float secondaryLutLerpAmount;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public bool useColorify;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public float colorifyAmount;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EA8BC", Offset = "0x16EA8BC")]
	public bool useSharpen;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float sharpenAmount;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public bool useFog;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27D")]
	public bool fogAffectSkybox;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public float fogHeight;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public float fogIntensity;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public float fogStartPoint;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public float fogDistance;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public Color fogColor;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Color fogMidColor;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Color fogEndColor;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public float fogMidPoint;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	public float fogEndPoint;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public float fogNoiseFactor1;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	public float fogNoiseFactor2;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public FogType fogExpFactor;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public bool useAmbientObscurance;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public Prism.Utils.SampleCount aoSampleCount;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public bool useAODistanceCutoff;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public float aoDistanceCutoffLength;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public float aoDistanceCutoffStart;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public float aoIntensity;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	public float aoContrast;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public float aoMinIntensity;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public float aoRadius;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public bool aoDownsample;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	public AOBlurType aoBlurType;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EA8D0", Offset = "0x16EA8D0")]
	public int aoBlurIterations;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	public float aoBias;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public float aoBlurFilterDistance;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	public float aoLightingContribution;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public bool aoShowDebug;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x311")]
	public bool useRays;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Transform rayTransform;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public float rayWeight;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	public float rayDecay;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public float rayExposure;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	public float rayDensity;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x16EA8E8", Offset = "0x16EA8E8")]
	public Color rayColor;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x16EA910", Offset = "0x16EA910")]
	public Color rayThreshold;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public RaysDownsampleAmount rayDownsample;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	public bool raysShowDebug;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA938", Offset = "0x16EA938")]
	public OcclusionSource occlusionSource;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EA984", Offset = "0x16EA984")]
	public bool advancedVignette;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35D")]
	public bool advancedAO;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35E")]
	public bool advancedDof;

	[Token(Token = "0x1700000D")]
	public bool forceSecondChromaticPass
	{
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x1A90184", Offset = "0x1A90184", VA = "0x1A90184")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	public bool useMedianDoF
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x1A901A4", Offset = "0x1A901A4", VA = "0x1A901A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000F")]
	public bool useMedianDoFTextureForOtherEffect
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x1A901D4", Offset = "0x1A901D4", VA = "0x1A901D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000010")]
	protected RenderTextureFormat aoTextureFormat
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x1A901FC", Offset = "0x1A901FC", VA = "0x1A901FC")]
		get
		{
			return default(RenderTextureFormat);
		}
	}

	[Token(Token = "0x17000011")]
	public int aoSampleCountValue
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x1A90230", Offset = "0x1A90230", VA = "0x1A90230")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x1A902D0", Offset = "0x1A902D0", VA = "0x1A902D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public int rayDSA
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x1A902D8", Offset = "0x1A902D8", VA = "0x1A902D8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000013")]
	public bool UsingTerrain
	{
		[Token(Token = "0x6000134")]
		[Address(RVA = "0x1A902E0", Offset = "0x1A902E0", VA = "0x1A902E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000014")]
	public bool IsGBufferAvailable
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0x1A90354", Offset = "0x1A90354", VA = "0x1A90354")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1A90380", Offset = "0x1A90380", VA = "0x1A90380")]
	public void DontRenderPrismThisFrame()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1A9038C", Offset = "0x1A9038C", VA = "0x1A9038C")]
	public Camera GetPrismCamera()
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1A90438", Offset = "0x1A90438", VA = "0x1A90438")]
	public void ResetToneParamsRomB()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1A904C8", Offset = "0x1A904C8", VA = "0x1A904C8")]
	public void ResetToneParamsFilmic()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1A90560", Offset = "0x1A90560", VA = "0x1A90560")]
	public void ResetToneParamsACES()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1A905FC", Offset = "0x1A905FC", VA = "0x1A905FC")]
	public void SetBloomIntensity(float value)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1A90604", Offset = "0x1A90604", VA = "0x1A90604")]
	public void SetBloomExposure(float value)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1A9060C", Offset = "0x1A9060C", VA = "0x1A9060C")]
	public void SetGamma(float value)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1A90614", Offset = "0x1A90614", VA = "0x1A90614")]
	public void SetChromaticIntensity(float value)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1A9061C", Offset = "0x1A9061C", VA = "0x1A9061C")]
	public void SetChromaticStart(float value)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1A90624", Offset = "0x1A90624", VA = "0x1A90624")]
	public void SetChromaticEnd(float value)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1A9062C", Offset = "0x1A9062C", VA = "0x1A9062C")]
	public void SetChromaticBlur(bool useBlur)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1A90638", Offset = "0x1A90638", VA = "0x1A90638")]
	public void SetChromaticType(bool useVertical)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1A90644", Offset = "0x1A90644", VA = "0x1A90644")]
	public void SetChromaticBlurWidth(float width)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1A9064C", Offset = "0x1A9064C", VA = "0x1A9064C")]
	public void SetNoiseIntensity(float value)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1A90654", Offset = "0x1A90654", VA = "0x1A90654")]
	public void SetNoiseMultiplier(float value)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1A9065C", Offset = "0x1A9065C", VA = "0x1A9065C")]
	public void SetVignetteStrength(float value)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1A90664", Offset = "0x1A90664", VA = "0x1A90664")]
	public void SetVignetteStart(float value)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1A9066C", Offset = "0x1A9066C", VA = "0x1A9066C")]
	public void SetVignetteEnd(float value)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1A90674", Offset = "0x1A90674", VA = "0x1A90674")]
	public void SetPrimaryLutStrength(float value)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1A9067C", Offset = "0x1A9067C", VA = "0x1A9067C")]
	public void SetSecondaryLutStrength(float value)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1A90684", Offset = "0x1A90684", VA = "0x1A90684")]
	public void SetPrimaryLut(Texture2D newPrimaryLut)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1A90B14", Offset = "0x1A90B14", VA = "0x1A90B14")]
	public void SetSecondaryLut(Texture2D newSecondaryLut)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1A90B4C", Offset = "0x1A90B4C", VA = "0x1A90B4C")]
	public void SetPrismPreset(PrismPreset preset)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1A8F050", Offset = "0x1A8F050", VA = "0x1A8F050")]
	public void LerpToPreset(PrismPreset preset, float t, bool switchLUTsAtOne = false)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1A91244", Offset = "0x1A91244", VA = "0x1A91244")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1A9188C", Offset = "0x1A9188C", VA = "0x1A9188C")]
	protected void SetupCameraDepthTexturesForAO()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1A91920", Offset = "0x1A91920", VA = "0x1A91920")]
	private void SetupMRT()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1A91998", Offset = "0x1A91998", VA = "0x1A91998")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1A91B04", Offset = "0x1A91B04", VA = "0x1A91B04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1A920EC", Offset = "0x1A920EC", VA = "0x1A920EC")]
	protected Material CreateMaterial(Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1A9219C", Offset = "0x1A9219C", VA = "0x1A9219C")]
	public void DisableEffects()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1A921A8", Offset = "0x1A921A8", VA = "0x1A921A8")]
	public void EnableEffects()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1A91204", Offset = "0x1A91204", VA = "0x1A91204")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1A921B0", Offset = "0x1A921B0", VA = "0x1A921B0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x16FF8E0", Offset = "0x16FF8E0")]
	public void ResetCameraDepthTextureFlags()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1A921D0", Offset = "0x1A921D0", VA = "0x1A921D0")]
	protected bool CreateMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1A929B8", Offset = "0x1A929B8", VA = "0x1A929B8")]
	public void UpdateShaderValues()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1A93E48", Offset = "0x1A93E48", VA = "0x1A93E48")]
	protected void SetBloomStablityValues()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1A94658", Offset = "0x1A94658", VA = "0x1A94658")]
	protected void SetBrightnessShaderValues(Material brightMaterial)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1A93A20", Offset = "0x1A93A20", VA = "0x1A93A20")]
	protected void SetBloomShaderValues(Material bloomMaterial)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1A93CF4", Offset = "0x1A93CF4", VA = "0x1A93CF4")]
	protected void SetBloomFlaresShaderValues(Material flaresMaterial)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1A9473C", Offset = "0x1A9473C", VA = "0x1A9473C")]
	protected void SetGodraysShaderValues(Material raysMaterial)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1A93F38", Offset = "0x1A93F38", VA = "0x1A93F38")]
	protected void SetFogShaderValues(Material fogMaterial)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1A949B4", Offset = "0x1A949B4", VA = "0x1A949B4")]
	protected void SetAOShaderValues(Material aoMaterial)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1A94330", Offset = "0x1A94330", VA = "0x1A94330")]
	protected void SetPrimaryLutShaderValues()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1A944C4", Offset = "0x1A944C4", VA = "0x1A944C4")]
	protected void SetSecondaryLutShaderValues()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1A94CFC", Offset = "0x1A94CFC", VA = "0x1A94CFC")]
	public void SetDofTransform(Transform target)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1A94D0C", Offset = "0x1A94D0C", VA = "0x1A94D0C")]
	public void SetDofPoint(UnityEngine.Vector3 point)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1A94DE0", Offset = "0x1A94DE0", VA = "0x1A94DE0")]
	public void ResetDofTransform()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1A940EC", Offset = "0x1A940EC", VA = "0x1A940EC")]
	protected void SetDofValues(Material targetMat)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1A94DF4", Offset = "0x1A94DF4", VA = "0x1A94DF4")]
	protected void HandleExposure(RenderTexture source, RenderTextureFormat rtFormat)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1A950E4", Offset = "0x1A950E4", VA = "0x1A950E4")]
	protected RenderTexture BlurTex(RenderTexture tex, int iterations = 1)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1A95214", Offset = "0x1A95214", VA = "0x1A95214")]
	protected RenderTexture HandleDofBlurDICE(RenderTexture source, RenderTexture tex, int sizeX, int sizeY)
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1A955B0", Offset = "0x1A955B0", VA = "0x1A955B0")]
	[ImageEffectTransformsToLDR]
	protected void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1A96E20", Offset = "0x1A96E20", VA = "0x1A96E20")]
	public void SetIdentityLut(bool secondary = false)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x1A97118", Offset = "0x1A97118", VA = "0x1A97118")]
	public bool ValidDimensions(Texture2D tex2d)
	{
		return default(bool);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1A906BC", Offset = "0x1A906BC", VA = "0x1A906BC")]
	public void Convert(Texture2D temp2DTex, bool secondaryLut = false)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1A9720C", Offset = "0x1A9720C", VA = "0x1A9720C")]
	public PrismEffects()
	{
	}
}
[Token(Token = "0x2000031")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E5950", Offset = "0x16E5950")]
[DisallowMultipleComponent]
public class PrismVolume : MonoBehaviour
{
	[Token(Token = "0x20003F6")]
	public enum VolumeShape
	{
		[Token(Token = "0x40019D8")]
		BOX = 1,
		[Token(Token = "0x40019D9")]
		SPHERE
	}

	[Token(Token = "0x20003F7")]
	public enum VolumeLerpType
	{
		[Token(Token = "0x40019DB")]
		INSTANT = 1,
		[Token(Token = "0x40019DC")]
		LERP_WHEN_TRIGGERED,
		[Token(Token = "0x40019DD")]
		LERP_OVER_DISTANCE
	}

	[Token(Token = "0x40001D8")]
	private const string MENU_PATH = "PRISM/Prism Volume";

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EA998", Offset = "0x16EA998")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA998", Offset = "0x16EA998")]
	public VolumeShape volumeShape;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EA9F8", Offset = "0x16EA9F8")]
	public PrismPreset volumePreset;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PrismPreset lastPreset;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EAA30", Offset = "0x16EAA30")]
	public bool updateEachFrame;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EAA68", Offset = "0x16EAA68")]
	public float volumeRange;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EAAA0", Offset = "0x16EAAA0")]
	public UnityEngine.Vector3 volumeSize;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EAAD8", Offset = "0x16EAAD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EAAD8", Offset = "0x16EAAD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EAAD8", Offset = "0x16EAAD8")]
	public Camera targetCamera;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PrismEffects targetPRISM;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isMainVolume;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EAB48", Offset = "0x16EAB48")]
	public bool useMainCamera;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EAB80", Offset = "0x16EAB80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EAB80", Offset = "0x16EAB80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EAB80", Offset = "0x16EAB80")]
	public bool instantSwitch;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EABF0", Offset = "0x16EABF0")]
	public float switchDuration;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentSwitchTime;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool hasCompletedSwitch;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EAC28", Offset = "0x16EAC28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EAC28", Offset = "0x16EAC28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EAC28", Offset = "0x16EAC28")]
	public float volumeTetherRange;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EAC98", Offset = "0x16EAC98")]
	public float volumeTetherDuration;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float volumeTriggerTime;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isTethered;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool isActiveVolume;

	[Token(Token = "0x17000015")]
	private float volumeWidth
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x1A97870", Offset = "0x1A97870", VA = "0x1A97870")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000016")]
	private float volumeHeight
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x1A97878", Offset = "0x1A97878", VA = "0x1A97878")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000017")]
	private float volumeDepth
	{
		[Token(Token = "0x6000172")]
		[Address(RVA = "0x1A97880", Offset = "0x1A97880", VA = "0x1A97880")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000018")]
	private Camera _targetCamera
	{
		[Token(Token = "0x6000173")]
		[Address(RVA = "0x1A97888", Offset = "0x1A97888", VA = "0x1A97888")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1A97928", Offset = "0x1A97928", VA = "0x1A97928")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x1A97BD8", Offset = "0x1A97BD8", VA = "0x1A97BD8")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x1A9794C", Offset = "0x1A9794C", VA = "0x1A9794C")]
	private void ResetTargetCameraToMain()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x1A97A2C", Offset = "0x1A97A2C", VA = "0x1A97A2C")]
	private void GetTargetPRISM()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x1A97BFC", Offset = "0x1A97BFC", VA = "0x1A97BFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x1A97C74", Offset = "0x1A97C74", VA = "0x1A97C74")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1A97F1C", Offset = "0x1A97F1C", VA = "0x1A97F1C")]
	private void HandlePresetLerping(PrismPreset preset)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1A97D28", Offset = "0x1A97D28", VA = "0x1A97D28")]
	private void DeTether()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x1A97D84", Offset = "0x1A97D84", VA = "0x1A97D84")]
	public bool CheckIfShouldTrigger(float extraRange)
	{
		return default(bool);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x1A9808C", Offset = "0x1A9808C", VA = "0x1A9808C")]
	public void TriggerVolume()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x1A98480", Offset = "0x1A98480", VA = "0x1A98480")]
	public void TetherVolume()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x1A97D34", Offset = "0x1A97D34", VA = "0x1A97D34")]
	public void ExitVolume()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1A981C0", Offset = "0x1A981C0", VA = "0x1A981C0")]
	private void CallSetPrismPreset(PrismPreset preset)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1A981D8", Offset = "0x1A981D8", VA = "0x1A981D8")]
	private UnityEngine.Vector3 GetCameraPosition()
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1A98204", Offset = "0x1A98204", VA = "0x1A98204")]
	private UnityEngine.Vector3 GetVolumePosition()
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1A984B0", Offset = "0x1A984B0", VA = "0x1A984B0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1A984E8", Offset = "0x1A984E8", VA = "0x1A984E8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1A98398", Offset = "0x1A98398", VA = "0x1A98398")]
	public static bool IsWithinRange(float range, UnityEngine.Vector3 firstPosition, UnityEngine.Vector3 secondPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1A98228", Offset = "0x1A98228", VA = "0x1A98228")]
	public static bool PointIsInCube(UnityEngine.Vector3 point, UnityEngine.Vector3 cubeCenter, UnityEngine.Vector3 cubeSizes)
	{
		return default(bool);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1A98644", Offset = "0x1A98644", VA = "0x1A98644")]
	public PrismVolume()
	{
	}
}
[Token(Token = "0x2000032")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E59AC", Offset = "0x16E59AC")]
public class particleAttractorLinear : MonoBehaviour
{
	[Token(Token = "0x20003F8")]
	[BurstCompile]
	private struct UpdateParticleJob : IJobParticleSystem
	{
		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float speed;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float deltaTime;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEngine.Vector3 targetPos;

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x337F498", Offset = "0x337F498", VA = "0x337F498", Slot = "4")]
		public void Execute(ParticleSystemJobData particles)
		{
		}
	}

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem ps;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private UpdateParticleJob m_positionJob;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private JobHandle m_jobHandle;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x337F300", Offset = "0x337F300", VA = "0x337F300")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x337F3B4", Offset = "0x337F3B4", VA = "0x337F3B4")]
	private void OnParticleUpdateJobScheduled()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x337F488", Offset = "0x337F488", VA = "0x337F488")]
	public particleAttractorLinear()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E5A10", Offset = "0x16E5A10")]
[ExecuteInEditMode]
public class particleAttractorLinearLocalPos : MonoBehaviour
{
	[Token(Token = "0x20003F9")]
	[BurstCompile]
	private struct UpdateParticleJob : IJobParticleSystem
	{
		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float speed;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float turnSpeed;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float accelRate;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float dieRange;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool killBasedOnZ;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float deltaTime;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector3 targetPos;

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x337F840", Offset = "0x337F840", VA = "0x337F840", Slot = "4")]
		public void Execute(ParticleSystemJobData particles)
		{
		}
	}

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float turnSpeed;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float accelRate;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float dieRange;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EACD0", Offset = "0x16EACD0")]
	public bool killBasedOnZ;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem ps;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.Vector3 targetPos;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform localTransform;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float referenceTurnSpeed;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private UpdateParticleJob m_positionJob;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private JobHandle m_jobHandle;

	[Token(Token = "0x17000019")]
	public UnityEngine.Vector3 LocalTargetPos
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x337F5E0", Offset = "0x337F5E0", VA = "0x337F5E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public float ReferenceTurnSpeed
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x337F624", Offset = "0x337F624", VA = "0x337F624")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x337F5EC", Offset = "0x337F5EC", VA = "0x337F5EC")]
	public void WorldToLocalTargetPos(UnityEngine.Vector3 worldPos)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x337F62C", Offset = "0x337F62C", VA = "0x337F62C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x337F704", Offset = "0x337F704", VA = "0x337F704")]
	private void OnParticleUpdateJobScheduled()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x337F7D8", Offset = "0x337F7D8", VA = "0x337F7D8")]
	public void KillAll()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x337F7E4", Offset = "0x337F7E4", VA = "0x337F7E4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x337F82C", Offset = "0x337F82C", VA = "0x337F82C")]
	public particleAttractorLinearLocalPos()
	{
	}
}
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E5A84", Offset = "0x16E5A84")]
[ExecuteInEditMode]
public class particleAttractorLinearWorldPos : MonoBehaviour
{
	[Token(Token = "0x20003FA")]
	[BurstCompile]
	private struct UpdateParticleJob : IJobParticleSystem
	{
		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float speed;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float turnSpeed;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float accelRate;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float dieRange;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool killBasedOnZ;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float deltaTime;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector3 targetPos;

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x337FC64", Offset = "0x337FC64", VA = "0x337FC64", Slot = "4")]
		public void Execute(ParticleSystemJobData particles)
		{
		}
	}

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float turnSpeed;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float accelRate;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float dieRange;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EAD08", Offset = "0x16EAD08")]
	public bool killBasedOnZ;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem ps;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.Vector3 targetPos;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform localTransform;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float referenceTurnSpeed;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private UpdateParticleJob m_positionJob;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private JobHandle m_jobHandle;

	[Token(Token = "0x1700001B")]
	public UnityEngine.Vector3 TargetPos
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x337FA6C", Offset = "0x337FA6C", VA = "0x337FA6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public float ReferenceTurnSpeed
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x337FA78", Offset = "0x337FA78", VA = "0x337FA78")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x337FA80", Offset = "0x337FA80", VA = "0x337FA80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x337FB58", Offset = "0x337FB58", VA = "0x337FB58")]
	private void OnParticleUpdateJobScheduled()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x337FC2C", Offset = "0x337FC2C", VA = "0x337FC2C")]
	public void KillAll()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x337FC38", Offset = "0x337FC38", VA = "0x337FC38")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x337FC50", Offset = "0x337FC50", VA = "0x337FC50")]
	public particleAttractorLinearWorldPos()
	{
	}
}
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E5AF8", Offset = "0x16E5AF8")]
public class particleAttractorMove : MonoBehaviour
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int numParticlesAlive;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x337FE90", Offset = "0x337FE90", VA = "0x337FE90")]
	private void Start()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x337FF60", Offset = "0x337FF60", VA = "0x337FF60")]
	private void Update()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x338014C", Offset = "0x338014C", VA = "0x338014C")]
	public particleAttractorMove()
	{
	}
}
[Token(Token = "0x2000036")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E5B5C", Offset = "0x16E5B5C")]
public class particleAttractorSelf : MonoBehaviour
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int numParticlesAlive;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x338015C", Offset = "0x338015C", VA = "0x338015C")]
	private void Start()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x338022C", Offset = "0x338022C", VA = "0x338022C")]
	private void Update()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x3380434", Offset = "0x3380434", VA = "0x3380434")]
	public particleAttractorSelf()
	{
	}
}
[Token(Token = "0x2000037")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E5BC0", Offset = "0x16E5BC0")]
public class particleAttractorSpherical : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ps;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int numParticlesAlive;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x3380444", Offset = "0x3380444", VA = "0x3380444")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x3380514", Offset = "0x3380514", VA = "0x3380514")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x3380700", Offset = "0x3380700", VA = "0x3380700")]
	public particleAttractorSpherical()
	{
	}
}
[Token(Token = "0x2000038")]
public class rotation : MonoBehaviour
{
	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xRotation;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yRotation;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zRotation;

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x3380710", Offset = "0x3380710", VA = "0x3380710")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x3380770", Offset = "0x3380770", VA = "0x3380770")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x3380778", Offset = "0x3380778", VA = "0x3380778")]
	public void clickOn()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x33807D8", Offset = "0x33807D8", VA = "0x33807D8")]
	public void clickOff()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x33807E0", Offset = "0x33807E0", VA = "0x33807E0")]
	private void rotate()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x33808C8", Offset = "0x33808C8", VA = "0x33808C8")]
	public rotation()
	{
	}
}
[Token(Token = "0x2000039")]
public class AnimatedLeftHand : MonoBehaviour
{
	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject VRhand;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator anim;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float h;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float g;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float horizontal;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float vertical;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool Pointing;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x25CC7D4", Offset = "0x25CC7D4", VA = "0x25CC7D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x25CC864", Offset = "0x25CC864", VA = "0x25CC864")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x25CC9E4", Offset = "0x25CC9E4", VA = "0x25CC9E4")]
	private void Normal()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x25CC928", Offset = "0x25CC928", VA = "0x25CC928")]
	public void Point()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x25CC874", Offset = "0x25CC874", VA = "0x25CC874")]
	public void StopPoint()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x25CC9E8", Offset = "0x25CC9E8", VA = "0x25CC9E8")]
	public AnimatedLeftHand()
	{
	}
}
[Token(Token = "0x200003A")]
public class AnimatedRightHand : MonoBehaviour
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject VRhand;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator anim;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float h;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float g;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float horizontal;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float vertical;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool Pointing;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x25CC9F0", Offset = "0x25CC9F0", VA = "0x25CC9F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x25CCA80", Offset = "0x25CCA80", VA = "0x25CCA80")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x25CCC00", Offset = "0x25CCC00", VA = "0x25CCC00")]
	private void Normal()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x25CCB44", Offset = "0x25CCB44", VA = "0x25CCB44")]
	public void Point()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x25CCA90", Offset = "0x25CCA90", VA = "0x25CCA90")]
	public void StopPoint()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x25CCC04", Offset = "0x25CCC04", VA = "0x25CCC04")]
	public AnimatedRightHand()
	{
	}
}
[Token(Token = "0x200003B")]
public class ExampleTarget : MonoBehaviour
{
	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UnityEngine.Vector3 direction;

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x2F77784", Offset = "0x2F77784", VA = "0x2F77784")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x2F77788", Offset = "0x2F77788", VA = "0x2F77788")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x2F7787C", Offset = "0x2F7787C", VA = "0x2F7787C")]
	public ExampleTarget()
	{
	}
}
[Token(Token = "0x200003C")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UnityEngine.Vector3 direction;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x2AC10D0", Offset = "0x2AC10D0", VA = "0x2AC10D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x2AC10D4", Offset = "0x2AC10D4", VA = "0x2AC10D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x2AC11B4", Offset = "0x2AC11B4", VA = "0x2AC11B4")]
	public Rotator()
	{
	}
}
[Token(Token = "0x200003D")]
public class SC_EffectControl : MonoBehaviour
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material mat;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EAD40", Offset = "0x16EAD40")]
	public GameObject Target;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector4 TargetPosition;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EAD78", Offset = "0x16EAD78")]
	public GameObject Target2;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector4 TargetPosition2;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EADB0", Offset = "0x16EADB0")]
	public GameObject Target3;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector4 TargetPosition3;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EADE8", Offset = "0x16EADE8")]
	public GameObject Target4;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector4 TargetPosition4;

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x2AC220C", Offset = "0x2AC220C", VA = "0x2AC220C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x2AC2290", Offset = "0x2AC2290", VA = "0x2AC2290")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x2AC26E8", Offset = "0x2AC26E8", VA = "0x2AC26E8")]
	public SC_EffectControl()
	{
	}
}
[Token(Token = "0x200003E")]
public class ShowCase : MonoBehaviour
{
	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int childc;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject grandChild;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x2AC2F00", Offset = "0x2AC2F00", VA = "0x2AC2F00")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x2AC2F38", Offset = "0x2AC2F38", VA = "0x2AC2F38")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x2AC3048", Offset = "0x2AC3048", VA = "0x2AC3048")]
	public ShowCase()
	{
	}
}
[Token(Token = "0x200003F")]
public class RunTimeCombineAndRelease : MonoBehaviour
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleMeshCombine simpleMeshCombine;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float combineTime;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float releaseTime;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x2AC121C", Offset = "0x2AC121C", VA = "0x2AC121C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x2AC127C", Offset = "0x2AC127C", VA = "0x2AC127C")]
	public void Start()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x2AC1364", Offset = "0x2AC1364", VA = "0x2AC1364")]
	public void Combine()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x2AC1F8C", Offset = "0x2AC1F8C", VA = "0x2AC1F8C")]
	public void Release()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x2AC21F8", Offset = "0x2AC21F8", VA = "0x2AC21F8")]
	public RunTimeCombineAndRelease()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E5C24", Offset = "0x16E5C24")]
public class SimpleMeshCombine : MonoBehaviour
{
	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] combinedGameOjects;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject combined;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string meshName;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _canGenerateLightmapUV;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int vCount;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool generateLightmapUV;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float lightmapScale;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject copyTarget;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool destroyOldColliders;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool keepStructure;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Mesh autoOverwrite;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool setStatic;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x2AC20AC", Offset = "0x2AC20AC", VA = "0x2AC20AC")]
	public void EnableRenderers(bool e)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x2AC9E4C", Offset = "0x2AC9E4C", VA = "0x2AC9E4C")]
	public MeshFilter[] FindEnabledMeshes()
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x2AC13E4", Offset = "0x2AC13E4", VA = "0x2AC13E4")]
	public void CombineMeshes()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x2ACA0BC", Offset = "0x2ACA0BC", VA = "0x2ACA0BC")]
	public int Contains(ArrayList l, Material n)
	{
		return default(int);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x2ACA1FC", Offset = "0x2ACA1FC", VA = "0x2ACA1FC")]
	public SimpleMeshCombine()
	{
	}
}
[Token(Token = "0x2000041")]
public class SimpleMeshCombineMaster : MonoBehaviour
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool generateLightmapUV;

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x2ACA270", Offset = "0x2ACA270", VA = "0x2ACA270")]
	public SimpleMeshCombineMaster()
	{
	}
}
[Token(Token = "0x2000042")]
public class SpringBoneAssistant : MonoBehaviour
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpringManager mSpringManager;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Vector3 mTargetBoneAxis;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x34656B0", Offset = "0x34656B0", VA = "0x34656B0")]
	public void MarkChildren()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x3465B10", Offset = "0x3465B10", VA = "0x3465B10")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x3465C70", Offset = "0x3465C70", VA = "0x3465C70")]
	public SpringBoneAssistant()
	{
	}
}
[Token(Token = "0x2000043")]
public class SpringBoneMarker : MonoBehaviour
{
	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x3465CD0", Offset = "0x3465CD0", VA = "0x3465CD0")]
	public bool CheckHasChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x34658A0", Offset = "0x34658A0", VA = "0x34658A0")]
	public void MarkChildren()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x3465A00", Offset = "0x3465A00", VA = "0x3465A00")]
	public SpringBone AddSpringBone()
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x3465AA8", Offset = "0x3465AA8", VA = "0x3465AA8")]
	public void UnmarkSelf()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x3465D00", Offset = "0x3465D00", VA = "0x3465D00")]
	public SpringBoneMarker()
	{
	}
}
[Token(Token = "0x2000044")]
[ExecuteInEditMode]
public class SplineMaker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003FB")]
	public class Vector3ArrayEvent : UnityEvent<UnityEngine.Vector3[]>
	{
		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x3465660", Offset = "0x3465660", VA = "0x3465660")]
		public Vector3ArrayEvent()
		{
		}
	}

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _pointsPerSegment;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool _loop;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEngine.Vector3[] _anchorPoints;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3ArrayEvent _onUpdated;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isDirty;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Vector3[] _points;

	[Token(Token = "0x1700001D")]
	public int pointsPerSegment
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x3464A48", Offset = "0x3464A48", VA = "0x3464A48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x3464A50", Offset = "0x3464A50", VA = "0x3464A50")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public bool loop
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x3464AD8", Offset = "0x3464AD8", VA = "0x3464AD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x3464AE0", Offset = "0x3464AE0", VA = "0x3464AE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public UnityEngine.Vector3[] anchorPoints
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x3464AF4", Offset = "0x3464AF4", VA = "0x3464AF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x3464AFC", Offset = "0x3464AFC", VA = "0x3464AFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public UnityEngine.Vector3[] points
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x3464B2C", Offset = "0x3464B2C", VA = "0x3464B2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000021")]
	public Vector3ArrayEvent onUpdated
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x3464B34", Offset = "0x3464B34", VA = "0x3464B34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x3464B3C", Offset = "0x3464B3C", VA = "0x3464B3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x3464C40", Offset = "0x3464C40", VA = "0x3464C40")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x3464CB4", Offset = "0x3464CB4", VA = "0x3464CB4")]
	private void UpdatePoints()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x3465544", Offset = "0x3465544", VA = "0x3465544")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x3465580", Offset = "0x3465580", VA = "0x3465580")]
	private void OnDidApplyAnimationProperties()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x346520C", Offset = "0x346520C", VA = "0x346520C")]
	private static UnityEngine.Vector3 CatmullRomInterpolation(UnityEngine.Vector3 p0, UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, UnityEngine.Vector3 p3, float t)
	{
		return default(UnityEngine.Vector3);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x34655BC", Offset = "0x34655BC", VA = "0x34655BC")]
	public SplineMaker()
	{
	}
}
[Token(Token = "0x2000045")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E5C6C", Offset = "0x16E5C6C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E5C6C", Offset = "0x16E5C6C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E5C6C", Offset = "0x16E5C6C")]
[ExecuteInEditMode]
public class TubeRenderer : MonoBehaviour
{
	[Token(Token = "0x20003FC")]
	public enum NormalMode
	{
		[Token(Token = "0x40019F0")]
		Smooth,
		[Token(Token = "0x40019F1")]
		Hard,
		[Token(Token = "0x40019F2")]
		HardEdges
	}

	[Token(Token = "0x20003FD")]
	public enum CapMode
	{
		[Token(Token = "0x40019F4")]
		None,
		[Token(Token = "0x40019F5")]
		Begin,
		[Token(Token = "0x40019F6")]
		End,
		[Token(Token = "0x40019F7")]
		Both
	}

	[Token(Token = "0x20003FE")]
	public delegate void Postprocess(UnityEngine.Vector3[] vertices, UnityEngine.Vector3[] normals, Vector4[] tangents);

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEngine.Vector3[] _points;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float[] _radiuses;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _radius;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color32[] _pointColors;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int _edgeCount;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool _calculateTangents;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[SerializeField]
	private bool _invertMesh;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private NormalMode _normalMode;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private CapMode _caps;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool _postprocessContinously;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Rect _uvRect;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private Rect _uvRectCap;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private bool _uvRectCapEndMirrored;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float _forwardAngleOffset;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Mesh _mesh;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool _showMeshGizmos;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float _meshGizmoLength;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private bool _showRotationGizmos;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float _rotationGizmoLength;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private bool _pointsFoldout;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[SerializeField]
	private bool _radiusesFoldout;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	[SerializeField]
	private bool _colorsFoldout;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	[SerializeField]
	private bool _uvFoldout;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private UnityEngine.Vector3[] _vertices;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UnityEngine.Vector3[] _normals;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] _triangles;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector2[] _uvs;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector4[] _tangents;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Color32[] _colors32;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private UnityEngine.Vector3[] _circlePointLookup;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private UnityEngine.Vector3[] _circleNormalLookup;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private UnityEngine.Vector3[] _circleTangentLookup;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion[] _rotations;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private UnityEngine.Vector3[] _directions;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] _lengths;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float[] _steepnessAngles;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private UnityEngine.Vector3 _pastBeginUp;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float _length;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private MeshFilter _filter;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool _dirtyCircle;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	private bool _dirtyRotations;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	private bool _dirtySteepnessAngles;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
	private bool _dirtyVertexCount;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool _redrawFlag;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	private bool _dirtyTriangles;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
	private bool _dirtyUVs;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
	private bool _dirtyColors;

	[Token(Token = "0x400027E")]
	private const float tau = (float)Math.PI * 2f;

	[Token(Token = "0x400027F")]
	private const int meshVertexCountLimit = 65000;

	[Token(Token = "0x4000280")]
	private const string logPrepend = "<b>[TubeRenderer]</b> ";

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Postprocess Postprocesses;

	[Token(Token = "0x17000022")]
	public UnityEngine.Vector3[] points
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x3465D08", Offset = "0x3465D08", VA = "0x3465D08")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x3465D10", Offset = "0x3465D10", VA = "0x3465D10")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public float[] radiuses
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x3465EE8", Offset = "0x3465EE8", VA = "0x3465EE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x3465EF0", Offset = "0x3465EF0", VA = "0x3465EF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public float radius
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x3465F8C", Offset = "0x3465F8C", VA = "0x3465F8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x3465F94", Offset = "0x3465F94", VA = "0x3465F94")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public Color32[] colors
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x3466044", Offset = "0x3466044", VA = "0x3466044")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x346604C", Offset = "0x346604C", VA = "0x346604C")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public int edgeCount
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x3466094", Offset = "0x3466094", VA = "0x3466094")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x346609C", Offset = "0x346609C", VA = "0x346609C")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public bool calculateTangents
	{
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x34661D8", Offset = "0x34661D8", VA = "0x34661D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x34661E0", Offset = "0x34661E0", VA = "0x34661E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public bool invertMesh
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x3466260", Offset = "0x3466260", VA = "0x3466260")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x3466268", Offset = "0x3466268", VA = "0x3466268")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public NormalMode normalMode
	{
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x3466290", Offset = "0x3466290", VA = "0x3466290")]
		get
		{
			return default(NormalMode);
		}
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x3466298", Offset = "0x3466298", VA = "0x3466298")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public CapMode caps
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x34663AC", Offset = "0x34663AC", VA = "0x34663AC")]
		get
		{
			return default(CapMode);
		}
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x34663B4", Offset = "0x34663B4", VA = "0x34663B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public bool postprocessContinously
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x34664C4", Offset = "0x34664C4", VA = "0x34664C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x34664CC", Offset = "0x34664CC", VA = "0x34664CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public Rect uvRect
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x34664D8", Offset = "0x34664D8", VA = "0x34664D8")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x34664E4", Offset = "0x34664E4", VA = "0x34664E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public Rect uvRectCap
	{
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x3466544", Offset = "0x3466544", VA = "0x3466544")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x3466550", Offset = "0x3466550", VA = "0x3466550")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public bool uvRectCapEndMirrored
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x34665B0", Offset = "0x34665B0", VA = "0x34665B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0x34665B8", Offset = "0x34665B8", VA = "0x34665B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public float forwardAngleOffset
	{
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x34665E0", Offset = "0x34665E0", VA = "0x34665E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0x34665E8", Offset = "0x34665E8", VA = "0x34665E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public float length
	{
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0x346660C", Offset = "0x346660C", VA = "0x346660C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000031")]
	public Mesh mesh
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0x3466614", Offset = "0x3466614", VA = "0x3466614")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public bool showMeshGizmos
	{
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x346661C", Offset = "0x346661C", VA = "0x346661C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x3466624", Offset = "0x3466624", VA = "0x3466624")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public float meshGizmoLength
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x3466630", Offset = "0x3466630", VA = "0x3466630")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000204")]
		[Address(RVA = "0x3466638", Offset = "0x3466638", VA = "0x3466638")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public bool showRotationGizmos
	{
		[Token(Token = "0x6000205")]
		[Address(RVA = "0x3466640", Offset = "0x3466640", VA = "0x3466640")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x3466648", Offset = "0x3466648", VA = "0x3466648")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public float rotationGizmoLength
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x3466654", Offset = "0x3466654", VA = "0x3466654")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x346665C", Offset = "0x346665C", VA = "0x346665C")]
		set
		{
		}
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x3466664", Offset = "0x3466664", VA = "0x3466664")]
	public void ForceUpdate()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x346676C", Offset = "0x346676C", VA = "0x346676C")]
	public void MarkDynamic()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x3466788", Offset = "0x3466788", VA = "0x3466788")]
	public void AddPostprocess(Postprocess postprocess)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x3466818", Offset = "0x3466818", VA = "0x3466818")]
	public void RemovePostprocess(Postprocess postprocess)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x34668A8", Offset = "0x34668A8", VA = "0x34668A8")]
	public Quaternion GetRotationAtPoint(int index)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x3466964", Offset = "0x3466964", VA = "0x3466964")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x3466668", Offset = "0x3466668", VA = "0x3466668")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x346A518", Offset = "0x346A518", VA = "0x346A518")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x346A578", Offset = "0x346A578", VA = "0x346A578")]
	private void OnDidApplyAnimationProperties()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x346A57C", Offset = "0x346A57C", VA = "0x346A57C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x3468248", Offset = "0x3468248", VA = "0x3468248")]
	private void ReDraw()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x346AD80", Offset = "0x346AD80", VA = "0x346AD80")]
	private void ReDrawSmoothNormals()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x346B250", Offset = "0x346B250", VA = "0x346B250")]
	private void ReDrawHardNormals()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x346BCB0", Offset = "0x346BCB0", VA = "0x346BCB0")]
	private void ReDrawHardNormalEdges()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x3466D3C", Offset = "0x3466D3C", VA = "0x3466D3C")]
	private void UpdateVertexCount()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x3467F0C", Offset = "0x3467F0C", VA = "0x3467F0C")]
	private void UpdateCircleLookup()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x3466EA4", Offset = "0x3466EA4", VA = "0x3466EA4")]
	private void UpdateRotations()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x3467BE0", Offset = "0x3467BE0", VA = "0x3467BE0")]
	private void UpdateSteepnessAngles()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x3468E74", Offset = "0x3468E74", VA = "0x3468E74")]
	private void UpdateTriangles()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x346965C", Offset = "0x346965C", VA = "0x346965C")]
	private void UpdateUVs()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x3469FAC", Offset = "0x3469FAC", VA = "0x3469FAC")]
	private void UpdateColors()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x3465E78", Offset = "0x3465E78", VA = "0x3465E78")]
	private static int ComputeVertexCountForProperties(int pointCount, int edgeCount, NormalMode normalMode, CapMode capMode)
	{
		return default(int);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x346C8E0", Offset = "0x346C8E0", VA = "0x346C8E0")]
	public TubeRenderer()
	{
	}
}
[Token(Token = "0x2000046")]
public class ViveportDemo : MonoBehaviour
{
	[Token(Token = "0x20003FF")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x22FAF58", Offset = "0x22FAF58", VA = "0x22FAF58", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x22FB0C0", Offset = "0x22FB0C0", VA = "0x22FB0C0", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x22F9DE8", Offset = "0x22F9DE8", VA = "0x22F9DE8")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nInitValue;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nResult;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nWidth;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nHeight;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nXStart;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int nYStart;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string stringToEdit;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string StatsCount;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string achivToEdit;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string leaderboardToEdit;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string leaderboardUserName;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string leaderboardScore;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bUserProfileIsReady;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bTokenIsReady;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string msgBuffer;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_ID;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string APP_KEY;

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x22F7230", Offset = "0x22F7230", VA = "0x22F7230")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x22F72F4", Offset = "0x22F72F4", VA = "0x22F72F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x22F73C4", Offset = "0x22F73C4", VA = "0x22F73C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x22F73C8", Offset = "0x22F73C8", VA = "0x22F73C8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x22F9DF0", Offset = "0x22F9DF0", VA = "0x22F9DF0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x22F9F48", Offset = "0x22F9F48", VA = "0x22F9F48")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x22FA094", Offset = "0x22FA094", VA = "0x22FA094")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x22FA1D4", Offset = "0x22FA1D4", VA = "0x22FA1D4")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x22FA2C0", Offset = "0x22FA2C0", VA = "0x22FA2C0")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x22FA534", Offset = "0x22FA534", VA = "0x22FA534")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x22FA758", Offset = "0x22FA758", VA = "0x22FA758")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x22FA8A4", Offset = "0x22FA8A4", VA = "0x22FA8A4")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x22FA9D0", Offset = "0x22FA9D0", VA = "0x22FA9D0")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x22FAAC4", Offset = "0x22FAAC4", VA = "0x22FAAC4")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x22FABB8", Offset = "0x22FABB8", VA = "0x22FABB8")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x22FACAC", Offset = "0x22FACAC", VA = "0x22FACAC")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x22FADA0", Offset = "0x22FADA0", VA = "0x22FADA0")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x2000047")]
public class ViveportDemo_ArcadeSession : MonoBehaviour
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x22FB194", Offset = "0x22FB194", VA = "0x22FB194")]
	private void Start()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x22FB268", Offset = "0x22FB268", VA = "0x22FB268")]
	private void Update()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x22FB26C", Offset = "0x22FB26C", VA = "0x22FB26C")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x22FB368", Offset = "0x22FB368", VA = "0x22FB368")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x2000048")]
public class ViveportDemo_DLC : MonoBehaviour
{
	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x22FB3D8", Offset = "0x22FB3D8", VA = "0x22FB3D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x22FB4A8", Offset = "0x22FB4A8", VA = "0x22FB4A8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x22FB8A8", Offset = "0x22FB8A8", VA = "0x22FB8A8")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x22FB8AC", Offset = "0x22FB8AC", VA = "0x22FB8AC")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x22FB8B0", Offset = "0x22FB8B0", VA = "0x22FB8B0")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x22FB8B4", Offset = "0x22FB8B4", VA = "0x22FB8B4")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x2000049")]
public class ViveportDemo_Deeplink : MonoBehaviour
{
	[Token(Token = "0x2000400")]
	private class MyDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x22FC3C8", Offset = "0x22FC3C8", VA = "0x22FC3C8", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x22FC434", Offset = "0x22FC434", VA = "0x22FC434", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x22FC1B0", Offset = "0x22FC1B0", VA = "0x22FC1B0")]
		public MyDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string LaunchAPPID;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string LaunchStoreAPPID;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string LaunchData;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool bInit;

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x22FB938", Offset = "0x22FB938", VA = "0x22FB938")]
	private void Start()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x22FBA08", Offset = "0x22FBA08", VA = "0x22FBA08")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x22FC1B8", Offset = "0x22FC1B8", VA = "0x22FC1B8")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x22FC2F8", Offset = "0x22FC2F8", VA = "0x22FC2F8")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x22FC2FC", Offset = "0x22FC2FC", VA = "0x22FC2FC")]
	public ViveportDemo_Deeplink()
	{
	}
}
[Token(Token = "0x200004A")]
public class ViveportDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x2000401")]
	public class Item
	{
		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ticket;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] items;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subscription_ticket;

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x22FD74C", Offset = "0x22FD74C", VA = "0x22FD74C")]
		public Item()
		{
		}
	}

	[Token(Token = "0x2000402")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item mItem;

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x22FD7C4", Offset = "0x22FD7C4", VA = "0x22FD7C4", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x22FD87C", Offset = "0x22FD87C", VA = "0x22FD87C", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x22FD940", Offset = "0x22FD940", VA = "0x22FD940", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x22FDA30", Offset = "0x22FDA30", VA = "0x22FDA30", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x22FDACC", Offset = "0x22FDACC", VA = "0x22FDACC", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x22FE244", Offset = "0x22FE244", VA = "0x22FE244", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x22FE2CC", Offset = "0x22FE2CC", VA = "0x22FE2CC", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x22FE390", Offset = "0x22FE390", VA = "0x22FE390", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x22FE454", Offset = "0x22FE454", VA = "0x22FE454", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x22FE544", Offset = "0x22FE544", VA = "0x22FE544", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x22FE984", Offset = "0x22FE984", VA = "0x22FE984", Slot = "15")]
		public override void OnQuerySubscriptionListSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x22FEDC4", Offset = "0x22FEDC4", VA = "0x22FEDC4", Slot = "16")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x22FEE64", Offset = "0x22FEE64", VA = "0x22FEE64", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x22FC770", Offset = "0x22FC770", VA = "0x22FC770")]
		public Result()
		{
		}
	}

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Result mListener;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool bInit_Done;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool bIsReady_Done;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool bShutdown_Done;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text winText;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x22FC608", Offset = "0x22FC608", VA = "0x22FC608")]
	private void Start()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x22FC7E0", Offset = "0x22FC7E0", VA = "0x22FC7E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x22FC7E4", Offset = "0x22FC7E4", VA = "0x22FC7E4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x22FD4C0", Offset = "0x22FD4C0", VA = "0x22FD4C0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x22FD5A8", Offset = "0x22FD5A8", VA = "0x22FD5A8")]
	private static void ShutdownStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x22FD698", Offset = "0x22FD698", VA = "0x22FD698")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x200004B")]
public class ViveportDemo_MainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x2000403")]
	private class ThisCallbackWillNotWorkFine : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x22FF250", Offset = "0x22FF250", VA = "0x22FF250", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x22FF2F0", Offset = "0x22FF2F0", VA = "0x22FF2F0")]
		public ThisCallbackWillNotWorkFine()
		{
		}
	}

	[Token(Token = "0x2000404")]
	private class ThisCallbackWillWorkFine_01 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA0E4", Offset = "0x16EA0E4")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pchCurrencyName;

			[Token(Token = "0x6002444")]
			[Address(RVA = "0x22FF3D4", Offset = "0x22FF3D4", VA = "0x22FF3D4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002445")]
			[Address(RVA = "0x22FF3DC", Offset = "0x22FF3DC", VA = "0x22FF3DC")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x22FF2F8", Offset = "0x22FF2F8", VA = "0x22FF2F8", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x22FF1C8", Offset = "0x22FF1C8", VA = "0x22FF1C8")]
		public ThisCallbackWillWorkFine_01()
		{
		}
	}

	[Token(Token = "0x2000405")]
	private class ThisCallbackWillWorkFine_02 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA0F4", Offset = "0x16EA0F4")]
		private sealed class <ShowResult>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string pchCurrencyName;

			[Token(Token = "0x17000541")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002449")]
				[Address(RVA = "0x22FF694", Offset = "0x22FF694", VA = "0x22FF694", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000542")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600244B")]
				[Address(RVA = "0x22FF6FC", Offset = "0x22FF6FC", VA = "0x22FF6FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002446")]
			[Address(RVA = "0x22FF578", Offset = "0x22FF578", VA = "0x22FF578")]
			[DebuggerHidden]
			public <ShowResult>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002447")]
			[Address(RVA = "0x22FF5AC", Offset = "0x22FF5AC", VA = "0x22FF5AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002448")]
			[Address(RVA = "0x22FF5B0", Offset = "0x22FF5B0", VA = "0x22FF5B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600244A")]
			[Address(RVA = "0x22FF69C", Offset = "0x22FF69C", VA = "0x22FF69C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x22FF47C", Offset = "0x22FF47C", VA = "0x22FF47C", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x22FF4FC", Offset = "0x22FF4FC", VA = "0x22FF4FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1705E0C", Offset = "0x1705E0C")]
		private IEnumerator ShowResult(string pchCurrencyName)
		{
			return null;
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x22FF5A4", Offset = "0x22FF5A4", VA = "0x22FF5A4")]
		public ThisCallbackWillWorkFine_02()
		{
		}
	}

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uiText;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Text myApiResultText;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string appId;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string apiKey;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x22FF038", Offset = "0x22FF038", VA = "0x22FF038")]
	private void Start()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x22FF128", Offset = "0x22FF128", VA = "0x22FF128")]
	private void InitCallback(int errorCode)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x22FF1D0", Offset = "0x22FF1D0", VA = "0x22FF1D0")]
	public ViveportDemo_MainThreadDispatcher()
	{
	}
}
[Token(Token = "0x200004C")]
public class ViveportDemo_Subscription : MonoBehaviour
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bIsReady;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string APP_ID;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInit;

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x22FF704", Offset = "0x22FF704", VA = "0x22FF704")]
	private void Start()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x22FF7D4", Offset = "0x22FF7D4", VA = "0x22FF7D4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x22FFFE0", Offset = "0x22FFFE0", VA = "0x22FFFE0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x2300128", Offset = "0x2300128", VA = "0x2300128")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x230012C", Offset = "0x230012C", VA = "0x230012C")]
	private static void IsReadyHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x230036C", Offset = "0x230036C", VA = "0x230036C")]
	public ViveportDemo_Subscription()
	{
	}
}
[Token(Token = "0x200004D")]
public enum ObjectToTarget
{
	[Token(Token = "0x40002C2")]
	GameObject,
	[Token(Token = "0x40002C3")]
	Text,
	[Token(Token = "0x40002C4")]
	Image,
	[Token(Token = "0x40002C5")]
	Renderer
}
[Token(Token = "0x200004E")]
public class Dot : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E93DC", Offset = "0x16E93DC")]
	private sealed class <>c
	{
		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<XRNodeState, bool> <>9__15_0;

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x232FDAC", Offset = "0x232FDAC", VA = "0x232FDAC")]
		public <>c()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x232FDB4", Offset = "0x232FDB4", VA = "0x232FDB4")]
		internal bool <Update>b__15_0(XRNodeState x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Guide;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Vector3 RaycastOffset;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FingerSeconds;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float UpFactor;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float OpacityInTime;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float OpacityOutTime;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool IsDown;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _currentPos;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image FillCircle;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal LayerMask LayerToHit;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _initialOpacity;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _opacity;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider _lastCollider;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<XRNodeState> _nodeStates;

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x232F5A0", Offset = "0x232F5A0", VA = "0x232F5A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x232F698", Offset = "0x232F698", VA = "0x232F698")]
	private void Update()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x232FC84", Offset = "0x232FC84", VA = "0x232FC84")]
	public Dot()
	{
	}
}
[Token(Token = "0x200004F")]
public class NoWatchMeshSelector : MonoBehaviour
{
	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh WithoutWatchMesh;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1A8EC68", Offset = "0x1A8EC68", VA = "0x1A8EC68")]
	private void Start()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1A8EDD4", Offset = "0x1A8EDD4", VA = "0x1A8EDD4")]
	public NoWatchMeshSelector()
	{
	}
}
[Token(Token = "0x2000050")]
public class YUR_Identifier : MonoBehaviour
{
	[Token(Token = "0x600025B")]
	[Address(RVA = "0x337F0E8", Offset = "0x337F0E8", VA = "0x337F0E8")]
	public YUR_Identifier()
	{
	}
}
namespace YUR.SDK.Core.Watch
{
	[Token(Token = "0x2000051")]
	public class ChangeIndicatorMaterials : MonoBehaviour
	{
		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material onlineMat;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material offlineMat;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Renderer> m_indicatorRenderers;

		[Token(Token = "0x600025C")]
		[Address(RVA = "0x3375ED0", Offset = "0x3375ED0", VA = "0x3375ED0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0x3375FAC", Offset = "0x3375FAC", VA = "0x3375FAC")]
		public void GoOnline()
		{
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0x33760A8", Offset = "0x33760A8", VA = "0x33760A8")]
		public void GoOffline()
		{
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0x33761A4", Offset = "0x33761A4", VA = "0x33761A4")]
		public ChangeIndicatorMaterials()
		{
		}
	}
	[Token(Token = "0x2000052")]
	public class ChangeParticleColor : MonoBehaviour
	{
		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem _particleSystem;

		[Token(Token = "0x6000260")]
		[Address(RVA = "0x3376220", Offset = "0x3376220", VA = "0x3376220")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0x3376280", Offset = "0x3376280", VA = "0x3376280")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0x337629C", Offset = "0x337629C", VA = "0x337629C")]
		public void GoOnline()
		{
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0x3376308", Offset = "0x3376308", VA = "0x3376308")]
		public void GoOffline()
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x3376374", Offset = "0x3376374", VA = "0x3376374")]
		public ChangeParticleColor()
		{
		}
	}
	[Token(Token = "0x2000053")]
	public class CheckScale : MonoBehaviour
	{
		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EAFD0", Offset = "0x16EAFD0")]
		public UnityEngine.Vector3 Left;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UnityEngine.Vector3 Right;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YURWatch m_watch;

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x337637C", Offset = "0x337637C", VA = "0x337637C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x337645C", Offset = "0x337645C", VA = "0x337645C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x3376460", Offset = "0x3376460", VA = "0x3376460")]
		private void RunScaleCheck()
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x3376684", Offset = "0x3376684", VA = "0x3376684")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x3376720", Offset = "0x3376720", VA = "0x3376720")]
		public CheckScale()
		{
		}
	}
	[Token(Token = "0x2000054")]
	public abstract class DataSetter : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DataTag;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB008", Offset = "0x16EB008")]
		public ObjectToTarget TargetedObject;

		[Token(Token = "0x17000036")]
		private string PropertyPathBase
		{
			[Token(Token = "0x600026A")]
			[Address(RVA = "0x33767A8", Offset = "0x33767A8", VA = "0x33767A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		public string PropertyPath
		{
			[Token(Token = "0x600026B")]
			[Address(RVA = "0x3376850", Offset = "0x3376850", VA = "0x3376850")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		protected abstract string DefaultDataTag
		{
			[Token(Token = "0x600026C")]
			get;
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0x33768E4", Offset = "0x33768E4", VA = "0x33768E4", Slot = "6")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0x337698C", Offset = "0x337698C", VA = "0x337698C", Slot = "7")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0x3376A94", Offset = "0x3376A94", VA = "0x3376A94", Slot = "8")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0x3376B9C", Offset = "0x3376B9C", VA = "0x3376B9C", Slot = "9")]
		public virtual void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0x3376BA0", Offset = "0x3376BA0", VA = "0x3376BA0")]
		protected DataSetter()
		{
		}
	}
	[Token(Token = "0x2000055")]
	public class LoginController : MonoBehaviour
	{
		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E93EC", Offset = "0x16E93EC")]
		private sealed class <LoginAttemptTimeout>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginController <>4__this;

			[Token(Token = "0x170003E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D90")]
				[Address(RVA = "0x33775E0", Offset = "0x33775E0", VA = "0x33775E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D92")]
				[Address(RVA = "0x3377648", Offset = "0x3377648", VA = "0x3377648", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x33774F8", Offset = "0x33774F8", VA = "0x33774F8")]
			[DebuggerHidden]
			public <LoginAttemptTimeout>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x337752C", Offset = "0x337752C", VA = "0x337752C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x3377530", Offset = "0x3377530", VA = "0x3377530", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x33775E8", Offset = "0x33775E8", VA = "0x33775E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShortcodeLoginEvent OnLoginRequest;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnLoginError;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnLoginSuccess;

		[Token(Token = "0x40002E1")]
		private const float LOGIN_ATTEMPT_TIMEOUT = 10f;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine _co;

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x3376C08", Offset = "0x3376C08", VA = "0x3376C08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0x3377080", Offset = "0x3377080", VA = "0x3377080")]
		private void SetShortcodeMessage(YURShortcodeResponse response)
		{
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0x3377138", Offset = "0x3377138", VA = "0x3377138")]
		private void SetErrorcodeMessage()
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0x337716C", Offset = "0x337716C", VA = "0x337716C")]
		private void SetSuccessMessage()
		{
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0x33770F0", Offset = "0x33770F0", VA = "0x33770F0")]
		private void StopCoroutine()
		{
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0x33771A0", Offset = "0x33771A0", VA = "0x33771A0")]
		public void RetryLogin()
		{
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0x337725C", Offset = "0x337725C", VA = "0x337725C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0x3377004", Offset = "0x3377004", VA = "0x3377004")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF928", Offset = "0x16FF928")]
		private IEnumerator LoginAttemptTimeout()
		{
			return null;
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x3377524", Offset = "0x3377524", VA = "0x3377524")]
		public LoginController()
		{
		}
	}
	[Token(Token = "0x2000056")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E5D2C", Offset = "0x16E5D2C")]
	public class NotificationController : MonoBehaviour
	{
		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E93FC", Offset = "0x16E93FC")]
		private sealed class <ExpandNotification>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NotificationController <>4__this;

			[Token(Token = "0x4001A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityEngine.Vector3 <currentPos>5__2;

			[Token(Token = "0x4001A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private UnityEngine.Vector3 <currentScale>5__3;

			[Token(Token = "0x4001A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__4;

			[Token(Token = "0x170003EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D96")]
				[Address(RVA = "0x3377B3C", Offset = "0x3377B3C", VA = "0x3377B3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D98")]
				[Address(RVA = "0x3377BA4", Offset = "0x3377BA4", VA = "0x3377BA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x3377758", Offset = "0x3377758", VA = "0x3377758")]
			[DebuggerHidden]
			public <ExpandNotification>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x3377840", Offset = "0x3377840", VA = "0x3377840", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x3377844", Offset = "0x3377844", VA = "0x3377844", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x3377B44", Offset = "0x3377B44", VA = "0x3377B44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E940C", Offset = "0x16E940C")]
		private sealed class <RetractNotification>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NotificationController <>4__this;

			[Token(Token = "0x4001A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityEngine.Vector3 <currentPos>5__2;

			[Token(Token = "0x4001A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private UnityEngine.Vector3 <currentScale>5__3;

			[Token(Token = "0x4001A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__4;

			[Token(Token = "0x170003EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D9C")]
				[Address(RVA = "0x3377E20", Offset = "0x3377E20", VA = "0x3377E20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D9E")]
				[Address(RVA = "0x3377E88", Offset = "0x3377E88", VA = "0x3377E88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x3377800", Offset = "0x3377800", VA = "0x3377800")]
			[DebuggerHidden]
			public <RetractNotification>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x3377BAC", Offset = "0x3377BAC", VA = "0x3377BAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x3377BB0", Offset = "0x3377BB0", VA = "0x3377BB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x3377E28", Offset = "0x3377E28", VA = "0x3377E28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject NotificationPanel;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform RetractedTransform;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform ExpandedTransform;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip NotificationSound;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve NotificationCurve;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float TimeToMove;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float WaitTime;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource m_source;

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x3377650", Offset = "0x3377650", VA = "0x3377650")]
		private void Awake()
		{
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x33776B0", Offset = "0x33776B0", VA = "0x33776B0")]
		public void Notify()
		{
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0x33776DC", Offset = "0x33776DC", VA = "0x33776DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF98C", Offset = "0x16FF98C")]
		private IEnumerator ExpandNotification()
		{
			return null;
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x3377784", Offset = "0x3377784", VA = "0x3377784")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FF9F0", Offset = "0x16FF9F0")]
		private IEnumerator RetractNotification()
		{
			return null;
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0x337782C", Offset = "0x337782C", VA = "0x337782C")]
		public NotificationController()
		{
		}
	}
	[Token(Token = "0x2000057")]
	public class PINTextUpdate : MonoBehaviour
	{
		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _pinText;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _urlText;

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x3377E90", Offset = "0x3377E90", VA = "0x3377E90")]
		public void SetTextSize(float size)
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x3377EDC", Offset = "0x3377EDC", VA = "0x3377EDC")]
		public void UpdateText(YURShortcodeResponse response)
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x3377F38", Offset = "0x3377F38", VA = "0x3377F38")]
		public PINTextUpdate()
		{
		}
	}
	[Token(Token = "0x2000058")]
	public class PreferenceController : MonoBehaviour
	{
		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnPreferenceUpdate;

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x3377F40", Offset = "0x3377F40", VA = "0x3377F40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x3378048", Offset = "0x3378048", VA = "0x3378048")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0x3378150", Offset = "0x3378150", VA = "0x3378150")]
		private void Reload(UserPreferences arg0)
		{
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x337816C", Offset = "0x337816C", VA = "0x337816C")]
		public PreferenceController()
		{
		}
	}
	[Token(Token = "0x2000059")]
	public class RotateFan : MonoBehaviour
	{
		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _fanSpeed;

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x3378174", Offset = "0x3378174", VA = "0x3378174")]
		private void Update()
		{
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x33781E4", Offset = "0x33781E4", VA = "0x33781E4")]
		public RotateFan()
		{
		}
	}
	[Token(Token = "0x200005A")]
	public class SetBlend : MonoBehaviour
	{
		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EB070", Offset = "0x16EB070")]
		private float _blendValue;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator m_thisAnimator;

		[Token(Token = "0x17000039")]
		public float BlendValue
		{
			[Token(Token = "0x6000289")]
			[Address(RVA = "0x33781F4", Offset = "0x33781F4", VA = "0x33781F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600028A")]
			[Address(RVA = "0x33781FC", Offset = "0x33781FC", VA = "0x33781FC")]
			set
			{
			}
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0x3378204", Offset = "0x3378204", VA = "0x3378204")]
		private void Awake()
		{
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0x3378288", Offset = "0x3378288", VA = "0x3378288")]
		private void Update()
		{
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0x33782E8", Offset = "0x33782E8", VA = "0x33782E8")]
		public SetBlend()
		{
		}
	}
	[Token(Token = "0x200005B")]
	public class SetDownloadText : MonoBehaviour
	{
		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_text;

		[Token(Token = "0x600028E")]
		[Address(RVA = "0x33782F0", Offset = "0x33782F0", VA = "0x33782F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0x3378350", Offset = "0x3378350", VA = "0x3378350")]
		public void UpdateProgress(float progress, float maxCount)
		{
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x33786C8", Offset = "0x33786C8", VA = "0x33786C8")]
		public SetDownloadText()
		{
		}
	}
	[Token(Token = "0x200005C")]
	public enum ObjectToChangeColorOn
	{
		[Token(Token = "0x40002F3")]
		Renderer,
		[Token(Token = "0x40002F4")]
		Image,
		[Token(Token = "0x40002F5")]
		Text
	}
	[Token(Token = "0x200005D")]
	public class SetFillColor : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YurFillColors FillColor;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ObjectToChangeColorOn ObjectToTarget;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer m_rend;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image m_image;

		[Token(Token = "0x6000291")]
		[Address(RVA = "0x33786D0", Offset = "0x33786D0", VA = "0x33786D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x337879C", Offset = "0x337879C", VA = "0x337879C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000293")]
		[Address(RVA = "0x33788A4", Offset = "0x33788A4", VA = "0x33788A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x33789AC", Offset = "0x33789AC", VA = "0x33789AC", Slot = "4")]
		public void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0x3378A68", Offset = "0x3378A68", VA = "0x3378A68")]
		public static Color GetFillColorTagValue(OverlayStatusUpdate info, YurFillColors tag)
		{
			return default(Color);
		}

		[Token(Token = "0x6000296")]
		[Address(RVA = "0x3378D08", Offset = "0x3378D08", VA = "0x3378D08")]
		public SetFillColor()
		{
		}
	}
	[Token(Token = "0x200005E")]
	public class SetFont : MonoBehaviour
	{
		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProUGUI m_font;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x6000297")]
		[Address(RVA = "0x3378D10", Offset = "0x3378D10", VA = "0x3378D10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x3378D94", Offset = "0x3378D94", VA = "0x3378D94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0x3378EE4", Offset = "0x3378EE4", VA = "0x3378EE4")]
		public SetFont()
		{
		}
	}
	[Token(Token = "0x200005F")]
	public class SetPercentageFill : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YurDataValues DataValue;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB0B0", Offset = "0x16EB0B0")]
		public float Floor;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Ceiling;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float? m_overrideFloor;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float? m_overrideCeiling;

		[Token(Token = "0x600029A")]
		[Address(RVA = "0x3378EEC", Offset = "0x3378EEC", VA = "0x3378EEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x3378F64", Offset = "0x3378F64", VA = "0x3378F64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x337906C", Offset = "0x337906C", VA = "0x337906C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x3379174", Offset = "0x3379174", VA = "0x3379174", Slot = "4")]
		public void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x33794F4", Offset = "0x33794F4", VA = "0x33794F4")]
		private float GetPercentage(float valueToCheck, float floor, float ceiling)
		{
			return default(float);
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x3379260", Offset = "0x3379260", VA = "0x3379260")]
		public static float GetDataTagValue(OverlayStatusUpdate info, YurDataValues tag, out float? floorValue, out float? ceilingValue)
		{
			return default(float);
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x33795D8", Offset = "0x33795D8", VA = "0x33795D8")]
		public SetPercentageFill()
		{
		}
	}
	[Token(Token = "0x2000060")]
	public enum RenderQueueType
	{
		[Token(Token = "0x4000304")]
		Tile,
		[Token(Token = "0x4000305")]
		Text,
		[Token(Token = "0x4000306")]
		Image
	}
	[Token(Token = "0x2000061")]
	public class SetRenderQueue : MonoBehaviour
	{
		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RenderQueueType queueType;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer m_rend;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image m_image;

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x337967C", Offset = "0x337967C", VA = "0x337967C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x3379748", Offset = "0x3379748", VA = "0x3379748")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x3379AA4", Offset = "0x3379AA4", VA = "0x3379AA4")]
		public SetRenderQueue()
		{
		}
	}
	[Token(Token = "0x2000062")]
	public enum ShaderOverrideType
	{
		[Token(Token = "0x400030C")]
		WatchAndTile,
		[Token(Token = "0x400030D")]
		TMP,
		[Token(Token = "0x400030E")]
		Image
	}
	[Token(Token = "0x2000063")]
	public class SetShader : MonoBehaviour
	{
		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShaderOverrideType shaderType;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer m_rend;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image m_image;

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x3379AAC", Offset = "0x3379AAC", VA = "0x3379AAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x3379B78", Offset = "0x3379B78", VA = "0x3379B78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x3379FD0", Offset = "0x3379FD0", VA = "0x3379FD0")]
		public SetShader()
		{
		}
	}
	[Token(Token = "0x2000064")]
	public class SetText : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YurDataValues TextValue;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x3379FD8", Offset = "0x3379FD8", VA = "0x3379FD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x337A038", Offset = "0x337A038", VA = "0x337A038")]
		private void Start()
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x337A140", Offset = "0x337A140", VA = "0x337A140")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x337A248", Offset = "0x337A248", VA = "0x337A248")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x337A350", Offset = "0x337A350", VA = "0x337A350", Slot = "4")]
		public void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x337A58C", Offset = "0x337A58C", VA = "0x337A58C")]
		public static string GetTextTagValue(OverlayStatusUpdate info, YurDataValues tag)
		{
			return null;
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x337A8DC", Offset = "0x337A8DC", VA = "0x337A8DC")]
		public SetText()
		{
		}
	}
	[Token(Token = "0x2000065")]
	public class SetTileColor : MonoBehaviour
	{
		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YurFillColors TileColorOverride;

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x337A8E4", Offset = "0x337A8E4", VA = "0x337A8E4")]
		private void Start()
		{
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x337AB2C", Offset = "0x337AB2C", VA = "0x337AB2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x337A8E8", Offset = "0x337A8E8", VA = "0x337A8E8")]
		private void Init()
		{
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x337ABD4", Offset = "0x337ABD4", VA = "0x337ABD4")]
		public SetTileColor()
		{
		}
	}
	[Token(Token = "0x2000066")]
	public enum ObjectToToggle
	{
		[Token(Token = "0x4000317")]
		GameObject,
		[Token(Token = "0x4000318")]
		Image,
		[Token(Token = "0x4000319")]
		Text
	}
	[Token(Token = "0x2000067")]
	public class SetVisibility : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YurVisibilityValues Tag;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ObjectToToggle ToggleObject;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool turnOnIfFalse;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB0E8", Offset = "0x16EB0E8")]
		public int ValueToCheck;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject m_object;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text m_text;

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x337ABDC", Offset = "0x337ABDC", VA = "0x337ABDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x337ACD4", Offset = "0x337ACD4", VA = "0x337ACD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x337ADDC", Offset = "0x337ADDC", VA = "0x337ADDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x337AEE4", Offset = "0x337AEE4", VA = "0x337AEE4", Slot = "4")]
		public void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x337B2AC", Offset = "0x337B2AC", VA = "0x337B2AC")]
		public static bool GetElementVisibilityFromTag(OverlayStatusUpdate info, YurVisibilityValues tag, int equalsVal, bool reverseResult)
		{
			return default(bool);
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x337B68C", Offset = "0x337B68C", VA = "0x337B68C")]
		public SetVisibility()
		{
		}
	}
	[Token(Token = "0x2000068")]
	public class SetWidgetPlacements : MonoBehaviour
	{
		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _placementSlots;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _placementContainer;

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x337B6A0", Offset = "0x337B6A0", VA = "0x337B6A0")]
		public void TogglePlacements(bool activeState)
		{
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x337BAF8", Offset = "0x337BAF8", VA = "0x337BAF8")]
		internal Transform GetOpenSlot()
		{
			return null;
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x337BB9C", Offset = "0x337BB9C", VA = "0x337BB9C")]
		internal Transform GetSlot(WidgetPosition widgetEnum)
		{
			return null;
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x337BCD0", Offset = "0x337BCD0", VA = "0x337BCD0")]
		public void ClearWidgets()
		{
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x337BE24", Offset = "0x337BE24", VA = "0x337BE24")]
		public SetWidgetPlacements()
		{
		}
	}
	[Token(Token = "0x2000069")]
	public class TileTransitionController : MonoBehaviour
	{
		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TriggerSleeveState triggerSleeveState;

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x337BE2C", Offset = "0x337BE2C", VA = "0x337BE2C")]
		public void Logout()
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x337BEFC", Offset = "0x337BEFC", VA = "0x337BEFC")]
		public TileTransitionController()
		{
		}
	}
	[Token(Token = "0x200006A")]
	public class ToggleFace : MonoBehaviour
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x337BF04", Offset = "0x337BF04", VA = "0x337BF04")]
		public void Set(bool activeState)
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x337C0E4", Offset = "0x337C0E4", VA = "0x337C0E4")]
		public ToggleFace()
		{
		}
	}
	[Token(Token = "0x200006B")]
	public class TriggerContent : MonoBehaviour
	{
		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] contentObjects;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isActive;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent _onToggleOn;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent _onToggleOff;

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x337C0EC", Offset = "0x337C0EC", VA = "0x337C0EC")]
		public void Toggle(bool activeState)
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x337C194", Offset = "0x337C194", VA = "0x337C194")]
		public TriggerContent()
		{
		}
	}
	[Token(Token = "0x200006C")]
	public class TriggerHandChange : MonoBehaviour
	{
		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private YURWatch m_watch;

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x337C234", Offset = "0x337C234", VA = "0x337C234")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x337C2B0", Offset = "0x337C2B0", VA = "0x337C2B0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x337C2FC", Offset = "0x337C2FC", VA = "0x337C2FC")]
		public TriggerHandChange()
		{
		}
	}
	[Token(Token = "0x200006D")]
	public class TriggerSleeveState : MonoBehaviour
	{
		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SleeveState StateToTransitionTo;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal YURSleeveController referenceToSleeveController;

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x337BEDC", Offset = "0x337BEDC", VA = "0x337BEDC")]
		public void SendTransitionStateToController()
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x337C304", Offset = "0x337C304", VA = "0x337C304")]
		public TriggerSleeveState()
		{
		}
	}
	[Token(Token = "0x200006E")]
	public class WatchReferenceContainer : MonoBehaviour
	{
		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB160", Offset = "0x16EB160")]
		private GameObject <ThisWatch>k__BackingField;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent GoOnlineEvent;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent GoOfflineEvent;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer[] watchRenders;

		[Token(Token = "0x1700003A")]
		public GameObject ThisWatch
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x337C314", Offset = "0x337C314", VA = "0x337C314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFA54", Offset = "0x16FFA54")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002CA")]
			[Address(RVA = "0x337C31C", Offset = "0x337C31C", VA = "0x337C31C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFA64", Offset = "0x16FFA64")]
			private set
			{
			}
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x337C324", Offset = "0x337C324", VA = "0x337C324")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x337C354", Offset = "0x337C354", VA = "0x337C354")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x337C404", Offset = "0x337C404", VA = "0x337C404")]
		private void SetLoginMat(bool obj)
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x337C430", Offset = "0x337C430", VA = "0x337C430")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x337C4CC", Offset = "0x337C4CC", VA = "0x337C4CC")]
		public void SetMaterial(Shader shaderToSet)
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x337C554", Offset = "0x337C554", VA = "0x337C554")]
		public void SetRenderQueue(int renderQueue)
		{
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x337C5DC", Offset = "0x337C5DC", VA = "0x337C5DC")]
		public WatchReferenceContainer()
		{
		}
	}
	[Token(Token = "0x200006F")]
	public class YURSleeveController : MonoBehaviour
	{
		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E941C", Offset = "0x16E941C")]
		private sealed class <DelayInitialSleeveRoute>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YURSleeveController <>4__this;

			[Token(Token = "0x170003EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA2")]
				[Address(RVA = "0x337DA2C", Offset = "0x337DA2C", VA = "0x337DA2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA4")]
				[Address(RVA = "0x337DA94", Offset = "0x337DA94", VA = "0x337DA94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x337CA04", Offset = "0x337CA04", VA = "0x337CA04")]
			[DebuggerHidden]
			public <DelayInitialSleeveRoute>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0x337D898", Offset = "0x337D898", VA = "0x337D898", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0x337D89C", Offset = "0x337D89C", VA = "0x337D89C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x337DA34", Offset = "0x337DA34", VA = "0x337DA34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E942C", Offset = "0x16E942C")]
		private sealed class <RunSleeveRetract>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YURSleeveController <>4__this;

			[Token(Token = "0x4001A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sleeveName;

			[Token(Token = "0x170003F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA8")]
				[Address(RVA = "0x337DF2C", Offset = "0x337DF2C", VA = "0x337DF2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DAA")]
				[Address(RVA = "0x337DF94", Offset = "0x337DF94", VA = "0x337DF94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x337D6CC", Offset = "0x337D6CC", VA = "0x337D6CC")]
			[DebuggerHidden]
			public <RunSleeveRetract>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x337DDA0", Offset = "0x337DDA0", VA = "0x337DDA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x337DDA4", Offset = "0x337DDA4", VA = "0x337DDA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0x337DF34", Offset = "0x337DF34", VA = "0x337DF34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E943C", Offset = "0x16E943C")]
		private sealed class <RunSleeveExpand>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YURSleeveController <>4__this;

			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sleeveName;

			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <thisSleeve>5__2;

			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private MeshRenderer <rend>5__3;

			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <turnedOn>5__4;

			[Token(Token = "0x170003F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DAE")]
				[Address(RVA = "0x337DD30", Offset = "0x337DD30", VA = "0x337DD30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB0")]
				[Address(RVA = "0x337DD98", Offset = "0x337DD98", VA = "0x337DD98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0x337D858", Offset = "0x337D858", VA = "0x337D858")]
			[DebuggerHidden]
			public <RunSleeveExpand>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x337DA9C", Offset = "0x337DA9C", VA = "0x337DA9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0x337DAA0", Offset = "0x337DAA0", VA = "0x337DAA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x337DD38", Offset = "0x337DD38", VA = "0x337DD38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SleeveState _currentSleeveState;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SleeveState InitialSleeve;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB170", Offset = "0x16EB170")]
		[SerializeField]
		private GameObject[] _sleeves;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TriggerSleeveState[] _sleeveStateTriggers;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB1CC", Offset = "0x16EB1CC")]
		[SerializeField]
		private SetBlend _metalBarsBlend;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SetBlend _sleeveAnchorBlend;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SleeveState m_previousSleeve;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine m_co;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_wasLoggedIn;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _delayRouteCo;

		[Token(Token = "0x1700003B")]
		public SleeveState CurrentSleeveState
		{
			[Token(Token = "0x60002D2")]
			[Address(RVA = "0x337C5E4", Offset = "0x337C5E4", VA = "0x337C5E4")]
			get
			{
				return default(SleeveState);
			}
			[Token(Token = "0x60002D3")]
			[Address(RVA = "0x337C5EC", Offset = "0x337C5EC", VA = "0x337C5EC")]
			set
			{
			}
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x337C5F4", Offset = "0x337C5F4", VA = "0x337C5F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x337C6F0", Offset = "0x337C6F0", VA = "0x337C6F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x337C7A8", Offset = "0x337C7A8", VA = "0x337C7A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x337C72C", Offset = "0x337C72C", VA = "0x337C72C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FFA74", Offset = "0x16FFA74")]
		private IEnumerator DelayInitialSleeveRoute()
		{
			return null;
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x337CA30", Offset = "0x337CA30", VA = "0x337CA30")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x337CCF8", Offset = "0x337CCF8", VA = "0x337CCF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x337CD94", Offset = "0x337CD94", VA = "0x337CD94")]
		private void OnLoginStateChanged(bool loggedIn)
		{
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x337D3E4", Offset = "0x337D3E4", VA = "0x337D3E4")]
		private bool IsSleeveExpanded()
		{
			return default(bool);
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x337D4A0", Offset = "0x337D4A0", VA = "0x337D4A0")]
		public void ToggleSleeveExpand()
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x337CA88", Offset = "0x337CA88", VA = "0x337CA88")]
		private void CheckSleeveState(SleeveState previousSleeve, SleeveState currentSleeve)
		{
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x337D2F0", Offset = "0x337D2F0", VA = "0x337D2F0")]
		internal void TransitionToSleeve(SleeveState sleeveToTransitionTo)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x337D59C", Offset = "0x337D59C", VA = "0x337D59C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FFAD8", Offset = "0x16FFAD8")]
		private IEnumerator RunSleeveRetract(string sleeveName)
		{
			return null;
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x337D6F8", Offset = "0x337D6F8", VA = "0x337D6F8")]
		private void TurnOffAllSleeves()
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x337C818", Offset = "0x337C818", VA = "0x337C818")]
		private void ResetToStartSleeve()
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x337D634", Offset = "0x337D634", VA = "0x337D634")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FFB3C", Offset = "0x16FFB3C")]
		private IEnumerator RunSleeveExpand(string sleeveName)
		{
			return null;
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x337D884", Offset = "0x337D884", VA = "0x337D884")]
		public YURSleeveController()
		{
		}
	}
	[Token(Token = "0x2000070")]
	public class YURWatch : MonoBehaviour
	{
		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB228", Offset = "0x16EB228")]
		private UnityEvent <OnHandChanged>k__BackingField;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YUR_Settings YURSettingsAsset;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject DefaultWatch;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static GameObject Head;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static Transform LeftHandAnchor;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static Transform RightHandAnchor;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject m_watchContainer;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject m_watch;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_defaultWatch;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.Vector3 m_watchpos;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private UnityEngine.Vector3 m_watcheuler;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.Vector3 m_watchscale;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action<GameObject, int> m_setLayer;

		[Token(Token = "0x1700003C")]
		internal UnityEvent OnHandChanged
		{
			[Token(Token = "0x60002E4")]
			[Address(RVA = "0x337DF9C", Offset = "0x337DF9C", VA = "0x337DF9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFBA0", Offset = "0x16FFBA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002E5")]
			[Address(RVA = "0x337DFA4", Offset = "0x337DFA4", VA = "0x337DFA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFBB0", Offset = "0x16FFBB0")]
			set
			{
			}
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x337DFAC", Offset = "0x337DFAC", VA = "0x337DFAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x337E040", Offset = "0x337E040", VA = "0x337E040")]
		private void CreateWatch()
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x337E4B0", Offset = "0x337E4B0", VA = "0x337E4B0")]
		private void SetDefaultSettings()
		{
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x337E6F0", Offset = "0x337E6F0", VA = "0x337E6F0")]
		internal void SetLayers()
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x337E8AC", Offset = "0x337E8AC", VA = "0x337E8AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x337E8F0", Offset = "0x337E8F0", VA = "0x337E8F0")]
		private void UpdateWatchTransform(YUR_Settings settings)
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x337EE80", Offset = "0x337EE80", VA = "0x337EE80")]
		public void ToggleWatch(bool isActive)
		{
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x337EF58", Offset = "0x337EF58", VA = "0x337EF58")]
		public YURWatch()
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x337EFF4", Offset = "0x337EFF4", VA = "0x337EFF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFBC0", Offset = "0x16FFBC0")]
		private void <SetLayers>b__19_0(GameObject go, int layer)
		{
		}
	}
}
namespace YUR.SDK.Core.Utils
{
	[Token(Token = "0x2000071")]
	public static class ColorFunctions
	{
		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string DEFAULT_WIDGET_BG_COLOR;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<int, string> DAY_LEVELS;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Dictionary<int, string> ActivityLevelColors;

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x33736C0", Offset = "0x33736C0", VA = "0x33736C0")]
		public static Color GetDefaultColor()
		{
			return default(Color);
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x3373758", Offset = "0x3373758", VA = "0x3373758")]
		public static Color GetDayLevelColor(int index)
		{
			return default(Color);
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x3373824", Offset = "0x3373824", VA = "0x3373824")]
		public static Color GetTodayCalsColor(float todayCals)
		{
			return default(Color);
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x3373954", Offset = "0x3373954", VA = "0x3373954")]
		public static Color GetWorkoutTimeColor(int seconds)
		{
			return default(Color);
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x3373A58", Offset = "0x3373A58", VA = "0x3373A58")]
		public static Color GetTodayTimeColor(int seconds)
		{
			return default(Color);
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x3373B60", Offset = "0x3373B60", VA = "0x3373B60")]
		public static Color GetSquatColor(float squatCount)
		{
			return default(Color);
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x3373C94", Offset = "0x3373C94", VA = "0x3373C94")]
		public static Color GetReadableForeColor(string hexColor)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x2000072")]
	public class FormatTest : MonoBehaviour
	{
		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DebugRun;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] floatArray;

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x337401C", Offset = "0x337401C", VA = "0x337401C")]
		private void Update()
		{
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x3374030", Offset = "0x3374030", VA = "0x3374030")]
		private void RunTest()
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x33741F0", Offset = "0x33741F0", VA = "0x33741F0")]
		public FormatTest()
		{
		}
	}
	[Token(Token = "0x2000073")]
	public class LogInfo : MonoBehaviour
	{
		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string myLog;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue myLogQueue;

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x3374274", Offset = "0x3374274", VA = "0x3374274")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x33742E8", Offset = "0x33742E8", VA = "0x33742E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x337435C", Offset = "0x337435C", VA = "0x337435C")]
		private void HandleLog(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x33747C4", Offset = "0x33747C4", VA = "0x33747C4")]
		public LogInfo()
		{
		}
	}
	[Token(Token = "0x2000074")]
	public class RestartActiveScene : MonoBehaviour
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x3374838", Offset = "0x3374838", VA = "0x3374838")]
		private void Update()
		{
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x33748C8", Offset = "0x33748C8", VA = "0x33748C8")]
		public RestartActiveScene()
		{
		}
	}
	[Token(Token = "0x2000075")]
	public class RunRetryEvent : MonoBehaviour
	{
		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnRetry;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _retryOnEnable;

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x33748D0", Offset = "0x33748D0", VA = "0x33748D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x33748F8", Offset = "0x33748F8", VA = "0x33748F8")]
		public void DoRetry()
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x3374914", Offset = "0x3374914", VA = "0x3374914")]
		public RunRetryEvent()
		{
		}
	}
	[Token(Token = "0x2000076")]
	public class RunShutdownEvent : MonoBehaviour
	{
		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnShutdown;

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x337491C", Offset = "0x337491C", VA = "0x337491C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x3374994", Offset = "0x3374994", VA = "0x3374994")]
		public RunShutdownEvent()
		{
		}
	}
	[Token(Token = "0x2000077")]
	public static class TimeFunctions
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x33749EC", Offset = "0x33749EC", VA = "0x33749EC")]
		public static string FormatShortK(float number)
		{
			return null;
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x3374ADC", Offset = "0x3374ADC", VA = "0x3374ADC")]
		public static string FormatTime(int seconds)
		{
			return null;
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x3374C2C", Offset = "0x3374C2C", VA = "0x3374C2C")]
		public static string FormatTimeNoSeconds(int seconds)
		{
			return null;
		}
	}
	[Token(Token = "0x2000078")]
	public class TimeScaleTest : MonoBehaviour
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x3374D5C", Offset = "0x3374D5C", VA = "0x3374D5C")]
		private void Update()
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x3374DBC", Offset = "0x3374DBC", VA = "0x3374DBC")]
		public TimeScaleTest()
		{
		}
	}
	[Token(Token = "0x2000079")]
	public class ToggleCollider : MonoBehaviour
	{
		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider coll;

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x3374DC4", Offset = "0x3374DC4", VA = "0x3374DC4")]
		private void Start()
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x3374E24", Offset = "0x3374E24", VA = "0x3374E24")]
		public void EnableCollider()
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x3374E44", Offset = "0x3374E44", VA = "0x3374E44")]
		public void DisableCollider()
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x3374E64", Offset = "0x3374E64", VA = "0x3374E64")]
		public ToggleCollider()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007A")]
	public class YUREvent : UnityEvent<OverlayStatusUpdate>
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x337504C", Offset = "0x337504C", VA = "0x337504C")]
		public YUREvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007B")]
	public class UnityEventString : UnityEvent<string>
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x3374F0C", Offset = "0x3374F0C", VA = "0x3374F0C")]
		public UnityEventString()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007C")]
	public class UnityEventFloat : UnityEvent<float>
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x3374E6C", Offset = "0x3374E6C", VA = "0x3374E6C")]
		public UnityEventFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007D")]
	public class UnityEventInt : UnityEvent<int>
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0x3374EBC", Offset = "0x3374EBC", VA = "0x3374EBC")]
		public UnityEventInt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007E")]
	public class ShortcodeLoginEvent : UnityEvent<YURShortcodeResponse>
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x337499C", Offset = "0x337499C", VA = "0x337499C")]
		public ShortcodeLoginEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007F")]
	public class UserPreferencesEvent : UnityEvent<UserPreferences>
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x3374FAC", Offset = "0x3374FAC", VA = "0x3374FAC")]
		public UserPreferencesEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000080")]
	public class UnityEventTwoFloat : UnityEvent<float, float>
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x3374F5C", Offset = "0x3374F5C", VA = "0x3374F5C")]
		public UnityEventTwoFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000081")]
	public class WidgetAppsEvent : UnityEvent<WidgetApp[]>
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x3374FFC", Offset = "0x3374FFC", VA = "0x3374FFC")]
		public WidgetAppsEvent()
		{
		}
	}
	[Token(Token = "0x2000082")]
	public static class YUR_Formatter
	{
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x337416C", Offset = "0x337416C", VA = "0x337416C")]
		internal static UnityEngine.Vector3 ConvertAs(float[] param, YurFormat formatType)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x33752F0", Offset = "0x33752F0", VA = "0x33752F0")]
		internal static string ConvertAs(string param, YurFormat formatType)
		{
			return null;
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x33758E8", Offset = "0x33758E8", VA = "0x33758E8")]
		internal static string ConvertAs(int param, YurFormat formatType)
		{
			return null;
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0x3375AEC", Offset = "0x3375AEC", VA = "0x3375AEC")]
		internal static string ConvertAs(float param, YurFormat formatType)
		{
			return null;
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0x33759E8", Offset = "0x33759E8", VA = "0x33759E8")]
		public static string ConvertToTimeFromInt(int param)
		{
			return null;
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x3375BE4", Offset = "0x3375BE4", VA = "0x3375BE4")]
		public static Color ConvertToColor(string obj)
		{
			return default(Color);
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0x337509C", Offset = "0x337509C", VA = "0x337509C")]
		public static UnityEngine.Vector3 ConvertToVector3(float[] obj)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x3375C60", Offset = "0x3375C60", VA = "0x3375C60")]
		public static Quaternion ConvertToQuaternion(float[] obj)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x33759C0", Offset = "0x33759C0", VA = "0x33759C0")]
		public static string ConvertToStringFromInt(int obj, [Optional] string formatParams)
		{
			return null;
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x3375BB8", Offset = "0x3375BB8", VA = "0x3375BB8")]
		public static string ConvertToStringFromFloat(float obj, [Optional] string formatParams)
		{
			return null;
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x3375364", Offset = "0x3375364", VA = "0x3375364")]
		public static string ConvertToShortK(string obj)
		{
			return null;
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x3375458", Offset = "0x3375458", VA = "0x3375458")]
		public static string ConvertToTime(string obj)
		{
			return null;
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x33755B8", Offset = "0x33755B8", VA = "0x33755B8")]
		public static string ConvertToTimeNoSeconds(string obj)
		{
			return null;
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x33756FC", Offset = "0x33756FC", VA = "0x33756FC")]
		public static string ConvertToFormattedTime(string obj)
		{
			return null;
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x33757F0", Offset = "0x33757F0", VA = "0x33757F0")]
		public static string ConvertToTimeOfDaySignifier(string obj)
		{
			return null;
		}
	}
}
namespace YUR.SDK.Core.Interfaces
{
	[Token(Token = "0x2000083")]
	public interface IYURUpdatable
	{
		[Token(Token = "0x6000326")]
		void ApplyOverlayUpdate(OverlayStatusUpdate OSU);
	}
}
namespace YUR.SDK.Core.Interaction
{
	[Token(Token = "0x2000084")]
	public class GazeEvent : MonoBehaviour
	{
		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent _fireGaze;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _fireEventManually;

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x337366C", Offset = "0x337366C", VA = "0x337366C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x337369C", Offset = "0x337369C", VA = "0x337369C")]
		public void FireGazeEvent()
		{
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x33736B8", Offset = "0x33736B8", VA = "0x33736B8")]
		public GazeEvent()
		{
		}
	}
}
namespace YUR.SDK.Core.Initialization
{
	[Token(Token = "0x2000085")]
	public class YUR_Hand : MonoBehaviour
	{
		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB268", Offset = "0x16EB268")]
		private Transform <yurAnchor>k__BackingField;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal GameObject thisAnchor;

		[Token(Token = "0x1700003D")]
		internal virtual Transform yurAnchor
		{
			[Token(Token = "0x600032A")]
			[Address(RVA = "0x23039A8", Offset = "0x23039A8", VA = "0x23039A8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFBD0", Offset = "0x16FFBD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600032B")]
			[Address(RVA = "0x23039B0", Offset = "0x23039B0", VA = "0x23039B0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFBE0", Offset = "0x16FFBE0")]
			set
			{
			}
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x23039B8", Offset = "0x23039B8", VA = "0x23039B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x2303A74", Offset = "0x2303A74", VA = "0x2303A74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x2303AB4", Offset = "0x2303AB4", VA = "0x2303AB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0x2303B84", Offset = "0x2303B84", VA = "0x2303B84")]
		public YUR_Hand()
		{
		}
	}
	[Token(Token = "0x2000086")]
	public class YUR_Head : MonoBehaviour
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0x2303B8C", Offset = "0x2303B8C", VA = "0x2303B8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0x2303C10", Offset = "0x2303C10", VA = "0x2303C10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x2303D04", Offset = "0x2303D04", VA = "0x2303D04")]
		public YUR_Head()
		{
		}
	}
	[Token(Token = "0x2000087")]
	public class YUR_LeftHand : YUR_Hand
	{
		[Token(Token = "0x1700003E")]
		internal override Transform yurAnchor
		{
			[Token(Token = "0x6000333")]
			[Address(RVA = "0x2303D0C", Offset = "0x2303D0C", VA = "0x2303D0C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000334")]
			[Address(RVA = "0x2303D74", Offset = "0x2303D74", VA = "0x2303D74", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x2303DE4", Offset = "0x2303DE4", VA = "0x2303DE4")]
		public YUR_LeftHand()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000088")]
	internal class Watch
	{
		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string WatchName;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MinLevelRequired;

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x2303940", Offset = "0x2303940", VA = "0x2303940")]
		public Watch()
		{
		}
	}
	[Token(Token = "0x2000089")]
	public class YUR_Loader : MonoBehaviour
	{
		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E944C", Offset = "0x16E944C")]
		private sealed class <LoadWidgets>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YUR_Loader <>4__this;

			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UserPreferences prefs;

			[Token(Token = "0x170003F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB4")]
				[Address(RVA = "0x23067BC", Offset = "0x23067BC", VA = "0x23067BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB6")]
				[Address(RVA = "0x2306824", Offset = "0x2306824", VA = "0x2306824", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x2304ECC", Offset = "0x2304ECC", VA = "0x2304ECC")]
			[DebuggerHidden]
			public <LoadWidgets>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0x2305904", Offset = "0x2305904", VA = "0x2305904", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0x2305908", Offset = "0x2305908", VA = "0x2305908", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0x23067C4", Offset = "0x23067C4", VA = "0x23067C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _localPath;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _latestFilesUpdated;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SetWidgetPlacements _widgetParent;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _watchAnchor;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Watch[] _watches;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent _onLoadSuccess;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent _onLoadFailure;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WatchReferenceContainer m_instantiatedWatchReferences;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> m_widgets;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<AssetBundle> m_bundlesInUse;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> m_defaultObjects;

		[Token(Token = "0x1700003F")]
		public string LocalPath
		{
			[Token(Token = "0x6000337")]
			[Address(RVA = "0x2303DEC", Offset = "0x2303DEC", VA = "0x2303DEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000338")]
			[Address(RVA = "0x2303DF4", Offset = "0x2303DF4", VA = "0x2303DF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public bool LatestFilesUpdated
		{
			[Token(Token = "0x6000339")]
			[Address(RVA = "0x2303DFC", Offset = "0x2303DFC", VA = "0x2303DFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600033A")]
			[Address(RVA = "0x2303E04", Offset = "0x2303E04", VA = "0x2303E04")]
			set
			{
			}
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0x2303E10", Offset = "0x2303E10", VA = "0x2303E10")]
		private void Awake()
		{
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0x2303EB0", Offset = "0x2303EB0", VA = "0x2303EB0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x23041D8", Offset = "0x23041D8", VA = "0x23041D8")]
		public void UpdateAssets()
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0x2304118", Offset = "0x2304118", VA = "0x2304118")]
		public void Load(OverlayStatusUpdate OSU, UserPreferences prefs)
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0x23042E8", Offset = "0x23042E8", VA = "0x23042E8")]
		private void LoadWatch(int watchIndex, UserPreferences prefs)
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x2304944", Offset = "0x2304944", VA = "0x2304944")]
		public void UpdateWidgets(UserPreferences prefs)
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x2304E34", Offset = "0x2304E34", VA = "0x2304E34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FFBF0", Offset = "0x16FFBF0")]
		private IEnumerator LoadWidgets(UserPreferences prefs)
		{
			return null;
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x2304EF8", Offset = "0x2304EF8", VA = "0x2304EF8")]
		private void SpawnDefaultWidget(WidgetPosition key)
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x23056BC", Offset = "0x23056BC", VA = "0x23056BC")]
		private void SpawnWidget(UnityEngine.Object[] assets, WidgetPosition widgetEnum)
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x2304FE4", Offset = "0x2304FE4", VA = "0x2304FE4")]
		private void ConfigureWidget(GameObject thisWidget, WidgetPosition widgetEnum)
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x2305828", Offset = "0x2305828", VA = "0x2305828")]
		public YUR_Loader()
		{
		}
	}
	[Token(Token = "0x200008A")]
	public class YUR_Manager : MonoBehaviour
	{
		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB2D8", Offset = "0x16EB2D8")]
		private OverlayStatusUpdate <LatestOSU>k__BackingField;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB2E8", Offset = "0x16EB2E8")]
		private WidgetApp[] <LatestWidgetApps>k__BackingField;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB2F8", Offset = "0x16EB2F8")]
		private UserPreferences <LatestPreferences>k__BackingField;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static YUR_Manager _instance;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB308", Offset = "0x16EB308")]
		public UnityEvent OnYURStartup;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YUREvent OnYURUpdate;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UserPreferencesEvent OnPreferenceUpdate;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal ShortcodeLoginEvent OnLoginAttempt;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal UnityEvent OnLoginSuccess;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal UnityEvent OnLoginFailed;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public YUR_Settings YURSettings;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB340", Offset = "0x16EB340")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EB340", Offset = "0x16EB340")]
		public bool TurnOnDebugLogging;

		[Token(Token = "0x17000041")]
		public OverlayStatusUpdate LatestOSU
		{
			[Token(Token = "0x6000346")]
			[Address(RVA = "0x230682C", Offset = "0x230682C", VA = "0x230682C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFC54", Offset = "0x16FFC54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000347")]
			[Address(RVA = "0x2306834", Offset = "0x2306834", VA = "0x2306834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFC64", Offset = "0x16FFC64")]
			private set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public WidgetApp[] LatestWidgetApps
		{
			[Token(Token = "0x6000348")]
			[Address(RVA = "0x230683C", Offset = "0x230683C", VA = "0x230683C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFC74", Offset = "0x16FFC74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000349")]
			[Address(RVA = "0x2306844", Offset = "0x2306844", VA = "0x2306844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFC84", Offset = "0x16FFC84")]
			private set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public UserPreferences LatestPreferences
		{
			[Token(Token = "0x600034A")]
			[Address(RVA = "0x230684C", Offset = "0x230684C", VA = "0x230684C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFC94", Offset = "0x16FFC94")]
			get
			{
				return null;
			}
			[Token(Token = "0x600034B")]
			[Address(RVA = "0x2306854", Offset = "0x2306854", VA = "0x2306854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFCA4", Offset = "0x16FFCA4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000044")]
		public static YUR_Manager Instance
		{
			[Token(Token = "0x600034C")]
			[Address(RVA = "0x230685C", Offset = "0x230685C", VA = "0x230685C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x23068C4", Offset = "0x23068C4", VA = "0x23068C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x2306F08", Offset = "0x2306F08", VA = "0x2306F08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x2306FF4", Offset = "0x2306FF4", VA = "0x2306FF4")]
		private void OnStatusUpdate(OverlayStatusUpdate obj)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x23078D8", Offset = "0x23078D8", VA = "0x23078D8")]
		private void OnUpdateWidgetApps(WidgetApp[] apps)
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x2307AC8", Offset = "0x2307AC8", VA = "0x2307AC8")]
		private void OnUserPreferencesChanged(UserPreferences obj)
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x2307D28", Offset = "0x2307D28", VA = "0x2307D28")]
		private void OnServiceShutdown(CoreServiceManager.ExecutionResult obj)
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x2307DFC", Offset = "0x2307DFC", VA = "0x2307DFC")]
		public void Login()
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x230803C", Offset = "0x230803C", VA = "0x230803C")]
		public void Logout()
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x23081E8", Offset = "0x23081E8", VA = "0x23081E8")]
		private void OnLoginRequest(YURShortcodeResponse obj)
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x2308430", Offset = "0x2308430", VA = "0x2308430")]
		private void OnLoginResponseSuccess()
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x2308680", Offset = "0x2308680", VA = "0x2308680")]
		private void OnLoginResponseFailure(string obj)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x23009B8", Offset = "0x23009B8", VA = "0x23009B8")]
		public void Log(object text, [CallerFilePath] string file = "", [CallerMemberName] string member = "", [CallerLineNumber] int line = 0)
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x23088D0", Offset = "0x23088D0", VA = "0x23088D0")]
		public YUR_Manager()
		{
		}
	}
	[Token(Token = "0x200008B")]
	public class YUR_Notification : MonoBehaviour, IYURUpdatable
	{
		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnNotification;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEventString OnNotificationHeader;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEventString OnNotificationBody;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _debugHeaderString;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _debugBodyString;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _debugFire;

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x23089A0", Offset = "0x23089A0", VA = "0x23089A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x2308AA8", Offset = "0x2308AA8", VA = "0x2308AA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x2308BB0", Offset = "0x2308BB0", VA = "0x2308BB0")]
		private void Update()
		{
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x2308C68", Offset = "0x2308C68", VA = "0x2308C68", Slot = "4")]
		public void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x2308E9C", Offset = "0x2308E9C", VA = "0x2308E9C")]
		public YUR_Notification()
		{
		}
	}
	[Token(Token = "0x200008C")]
	public class YUR_RightHand : YUR_Hand
	{
		[Token(Token = "0x17000045")]
		internal override Transform yurAnchor
		{
			[Token(Token = "0x6000360")]
			[Address(RVA = "0x2308F14", Offset = "0x2308F14", VA = "0x2308F14", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000361")]
			[Address(RVA = "0x2308F7C", Offset = "0x2308F7C", VA = "0x2308F7C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x2308FEC", Offset = "0x2308FEC", VA = "0x2308FEC")]
		public YUR_RightHand()
		{
		}
	}
	[Token(Token = "0x200008D")]
	public class YUR_Updater : MonoBehaviour
	{
		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E945C", Offset = "0x16E945C")]
		private sealed class <StartDownloads>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, string> apps;

			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public YUR_Updater <>4__this;

			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, byte[]> <bundlesToSave>5__2;

			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <assetsDownloaded>5__3;

			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Dictionary<string, string>.Enumerator <>7__wrap3;

			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private KeyValuePair<string, string> <app>5__5;

			[Token(Token = "0x4001A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private UnityWebRequest <uwr>5__6;

			[Token(Token = "0x170003F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DBC")]
				[Address(RVA = "0x230B23C", Offset = "0x230B23C", VA = "0x230B23C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DBE")]
				[Address(RVA = "0x230B2A4", Offset = "0x230B2A4", VA = "0x230B2A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0x230A180", Offset = "0x230A180", VA = "0x230A180")]
			[DebuggerHidden]
			public <StartDownloads>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0x230AB88", Offset = "0x230AB88", VA = "0x230AB88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0x230AD30", Offset = "0x230AD30", VA = "0x230AD30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0x230ACD8", Offset = "0x230ACD8", VA = "0x230ACD8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0x230AC18", Offset = "0x230AC18", VA = "0x230AC18")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x230B244", Offset = "0x230B244", VA = "0x230B244", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB3D0", Offset = "0x16EB3D0")]
		private string <LocalPath>k__BackingField;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnUpdateCheck;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnUpdateRequired;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEventTwoFloat OnDownloadProgressUpdate;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnSaveComplete;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_version;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_updated;

		[Token(Token = "0x17000046")]
		public string LocalPath
		{
			[Token(Token = "0x6000363")]
			[Address(RVA = "0x2308FF4", Offset = "0x2308FF4", VA = "0x2308FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFCB4", Offset = "0x16FFCB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000364")]
			[Address(RVA = "0x2308FFC", Offset = "0x2308FFC", VA = "0x2308FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFCC4", Offset = "0x16FFCC4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x2309004", Offset = "0x2309004", VA = "0x2309004")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x23090BC", Offset = "0x23090BC", VA = "0x23090BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x23098A0", Offset = "0x23098A0", VA = "0x23098A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x2309270", Offset = "0x2309270", VA = "0x2309270")]
		private void CheckForUpdates(WidgetApp[] apps)
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x23099A8", Offset = "0x23099A8", VA = "0x23099A8")]
		public bool CheckForDirectory()
		{
			return default(bool);
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x2309B50", Offset = "0x2309B50", VA = "0x2309B50")]
		private Dictionary<string, string> GetAppsToUpdate(WidgetApp[] apps)
		{
			return null;
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x230A0E8", Offset = "0x230A0E8", VA = "0x230A0E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FFCD4", Offset = "0x16FFCD4")]
		private IEnumerator StartDownloads(Dictionary<string, string> apps)
		{
			return null;
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x230A1AC", Offset = "0x230A1AC", VA = "0x230A1AC")]
		private void SaveBundles(Dictionary<string, byte[]> bundleDataAssets)
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x230AB20", Offset = "0x230AB20", VA = "0x230AB20")]
		public YUR_Updater()
		{
		}
	}
}
namespace YUR.SDK.Core.Enums
{
	[Token(Token = "0x200008E")]
	public enum HandState
	{
		[Token(Token = "0x400037C")]
		Left,
		[Token(Token = "0x400037D")]
		Right
	}
	[Token(Token = "0x200008F")]
	public enum SleeveState
	{
		[Token(Token = "0x400037F")]
		None,
		[Token(Token = "0x4000380")]
		StartSleeve,
		[Token(Token = "0x4000381")]
		PINSleeve,
		[Token(Token = "0x4000382")]
		TileSleeve,
		[Token(Token = "0x4000383")]
		LogoutSleeve,
		[Token(Token = "0x4000384")]
		SetupSleeve
	}
	[Token(Token = "0x2000090")]
	public enum YurDataValues
	{
		[Token(Token = "0x4000386")]
		TagValue,
		[Token(Token = "0x4000387")]
		ClockTime,
		[Token(Token = "0x4000388")]
		ClockTimeSuffix,
		[Token(Token = "0x4000389")]
		SquatCount,
		[Token(Token = "0x400038A")]
		EstOrHeartRate,
		[Token(Token = "0x400038B")]
		HeartRate,
		[Token(Token = "0x400038C")]
		EstRate,
		[Token(Token = "0x400038D")]
		BurnRate,
		[Token(Token = "0x400038E")]
		TodayCalories,
		[Token(Token = "0x400038F")]
		TodaySquatCount,
		[Token(Token = "0x4000390")]
		TodayTime,
		[Token(Token = "0x4000391")]
		TodayTimeNoSeconds,
		[Token(Token = "0x4000392")]
		WorkoutTime,
		[Token(Token = "0x4000393")]
		WorkoutTimeNoSeconds,
		[Token(Token = "0x4000394")]
		WorkoutCalories,
		[Token(Token = "0x4000395")]
		UserRank,
		[Token(Token = "0x4000396")]
		LocalTime,
		[Token(Token = "0x4000397")]
		NotificationHeader,
		[Token(Token = "0x4000398")]
		NotificationBody,
		[Token(Token = "0x4000399")]
		NotificationFooter,
		[Token(Token = "0x400039A")]
		TotalXP,
		[Token(Token = "0x400039B")]
		NextLevelXP,
		[Token(Token = "0x400039C")]
		CurrentLevelXP,
		[Token(Token = "0x400039D")]
		XPCompletionPercentage
	}
	[Token(Token = "0x2000091")]
	public enum YurFillColors
	{
		[Token(Token = "0x400039F")]
		Default,
		[Token(Token = "0x40003A0")]
		SquatCountLevel,
		[Token(Token = "0x40003A1")]
		TodaySquatCountLevel,
		[Token(Token = "0x40003A2")]
		EstOrHeartRateLevel,
		[Token(Token = "0x40003A3")]
		BurnRateLevel,
		[Token(Token = "0x40003A4")]
		TodayCaloriesLevel,
		[Token(Token = "0x40003A5")]
		UserRank,
		[Token(Token = "0x40003A6")]
		UserRankContrast,
		[Token(Token = "0x40003A7")]
		WorkoutCaloriesLevel,
		[Token(Token = "0x40003A8")]
		WorkoutTimeLevel,
		[Token(Token = "0x40003A9")]
		TodayTimeLevel
	}
	[Token(Token = "0x2000092")]
	public enum YurFormat
	{
		[Token(Token = "0x40003AB")]
		None,
		[Token(Token = "0x40003AC")]
		NoSigValues,
		[Token(Token = "0x40003AD")]
		OneSigValue,
		[Token(Token = "0x40003AE")]
		TwoSigValues,
		[Token(Token = "0x40003AF")]
		FormattedTime,
		[Token(Token = "0x40003B0")]
		TimeOfDaySignifier,
		[Token(Token = "0x40003B1")]
		Vector3,
		[Token(Token = "0x40003B2")]
		ShortK,
		[Token(Token = "0x40003B3")]
		Time,
		[Token(Token = "0x40003B4")]
		TimeNoSeconds
	}
	[Token(Token = "0x2000093")]
	public enum YurVisibilityValues
	{
		[Token(Token = "0x40003B6")]
		HeartRateAvailable,
		[Token(Token = "0x40003B7")]
		WorkoutInProgress,
		[Token(Token = "0x40003B8")]
		BioDataValid,
		[Token(Token = "0x40003B9")]
		LoggedIn,
		[Token(Token = "0x40003BA")]
		Online,
		[Token(Token = "0x40003BB")]
		NotificationActive,
		[Token(Token = "0x40003BC")]
		NotificationHeaderActive,
		[Token(Token = "0x40003BD")]
		NotificationBodyActive,
		[Token(Token = "0x40003BE")]
		NotificationFooterActive,
		[Token(Token = "0x40003BF")]
		TwentyFourHourTime,
		[Token(Token = "0x40003C0")]
		DayLevel,
		[Token(Token = "0x40003C1")]
		IsFace
	}
}
namespace YUR.SDK.Core.Configuration
{
	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x16E5D90", Offset = "0x16E5D90")]
	public class YUR_Settings : ScriptableObject
	{
		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB3E0", Offset = "0x16EB3E0")]
		[HideInInspector]
		public UnityEvent WatchHandChanged;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HandState _lastHand;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private HandState _handBeingUsed;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB43C", Offset = "0x16EB43C")]
		[SerializeField]
		private UnityEngine.Vector3 _leftPositionOffset;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private UnityEngine.Vector3 _leftEulerOffset;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB498", Offset = "0x16EB498")]
		[SerializeField]
		private UnityEngine.Vector3 _rightPositionOffset;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private UnityEngine.Vector3 _rightEulerOffset;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB4F4", Offset = "0x16EB4F4")]
		[SerializeField]
		private Shader _watchAndTileShaderOverride;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool _disableWatchModel;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Shader _tmpShaderOverride;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Shader _imageShaderOverride;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _shaderColorProperty;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int _watchRenderQueue;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB590", Offset = "0x16EB590")]
		public string LayerToSet;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB5C8", Offset = "0x16EB5C8")]
		public TMP_FontAsset Font;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB600", Offset = "0x16EB600")]
		[SerializeField]
		private bool _turnOffYURServiceOnDisable;

		[Token(Token = "0x17000047")]
		public HandState HandBeingUsed
		{
			[Token(Token = "0x600036E")]
			[Address(RVA = "0x2303678", Offset = "0x2303678", VA = "0x2303678")]
			get
			{
				return default(HandState);
			}
			[Token(Token = "0x600036F")]
			[Address(RVA = "0x2303680", Offset = "0x2303680", VA = "0x2303680")]
			set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public UnityEngine.Vector3 LeftPositionOffset
		{
			[Token(Token = "0x6000371")]
			[Address(RVA = "0x23036CC", Offset = "0x23036CC", VA = "0x23036CC")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000372")]
			[Address(RVA = "0x23036D8", Offset = "0x23036D8", VA = "0x23036D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public UnityEngine.Vector3 LeftEulerOffset
		{
			[Token(Token = "0x6000373")]
			[Address(RVA = "0x23036E4", Offset = "0x23036E4", VA = "0x23036E4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000374")]
			[Address(RVA = "0x23036F0", Offset = "0x23036F0", VA = "0x23036F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public UnityEngine.Vector3 RightPositionOffset
		{
			[Token(Token = "0x6000375")]
			[Address(RVA = "0x23036FC", Offset = "0x23036FC", VA = "0x23036FC")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000376")]
			[Address(RVA = "0x2303708", Offset = "0x2303708", VA = "0x2303708")]
			set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public UnityEngine.Vector3 RightEulerOffset
		{
			[Token(Token = "0x6000377")]
			[Address(RVA = "0x2303714", Offset = "0x2303714", VA = "0x2303714")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000378")]
			[Address(RVA = "0x2303720", Offset = "0x2303720", VA = "0x2303720")]
			set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public Shader WatchAndTileShaderOverride
		{
			[Token(Token = "0x6000379")]
			[Address(RVA = "0x230372C", Offset = "0x230372C", VA = "0x230372C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600037A")]
			[Address(RVA = "0x2303734", Offset = "0x2303734", VA = "0x2303734")]
			set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public bool DisableWatchModel
		{
			[Token(Token = "0x600037B")]
			[Address(RVA = "0x230373C", Offset = "0x230373C", VA = "0x230373C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600037C")]
			[Address(RVA = "0x2303744", Offset = "0x2303744", VA = "0x2303744")]
			set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public Shader TmpShaderOverride
		{
			[Token(Token = "0x600037D")]
			[Address(RVA = "0x2303750", Offset = "0x2303750", VA = "0x2303750")]
			get
			{
				return null;
			}
			[Token(Token = "0x600037E")]
			[Address(RVA = "0x2303758", Offset = "0x2303758", VA = "0x2303758")]
			set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public Shader ImageShaderOverride
		{
			[Token(Token = "0x600037F")]
			[Address(RVA = "0x2303760", Offset = "0x2303760", VA = "0x2303760")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000380")]
			[Address(RVA = "0x2303768", Offset = "0x2303768", VA = "0x2303768")]
			set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public string ShaderColorProperty
		{
			[Token(Token = "0x6000381")]
			[Address(RVA = "0x2303770", Offset = "0x2303770", VA = "0x2303770")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000382")]
			[Address(RVA = "0x2303778", Offset = "0x2303778", VA = "0x2303778")]
			set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public int WatchRenderQueue
		{
			[Token(Token = "0x6000383")]
			[Address(RVA = "0x2303780", Offset = "0x2303780", VA = "0x2303780")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000384")]
			[Address(RVA = "0x2303788", Offset = "0x2303788", VA = "0x2303788")]
			set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public bool TurnOffYURServiceOnDisable
		{
			[Token(Token = "0x6000385")]
			[Address(RVA = "0x2303790", Offset = "0x2303790", VA = "0x2303790")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000386")]
			[Address(RVA = "0x2303798", Offset = "0x2303798", VA = "0x2303798")]
			set
			{
			}
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0x23036A4", Offset = "0x23036A4", VA = "0x23036A4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x23037A4", Offset = "0x23037A4", VA = "0x23037A4")]
		public YUR_Settings()
		{
		}
	}
}
namespace YUR.SDK.Core.AppData
{
	[Token(Token = "0x2000095")]
	public class YUR_Alpha : DataSetter
	{
		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text m_text;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer m_rend;

		[Token(Token = "0x17000053")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000389")]
			[Address(RVA = "0x23004D8", Offset = "0x23004D8", VA = "0x23004D8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x23003FC", Offset = "0x23003FC", VA = "0x23003FC", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x2300520", Offset = "0x2300520", VA = "0x2300520", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x2300BE0", Offset = "0x2300BE0", VA = "0x2300BE0")]
		public YUR_Alpha()
		{
		}
	}
	[Token(Token = "0x2000096")]
	public class YUR_Color : DataSetter
	{
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text m_text;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer m_rend;

		[Token(Token = "0x17000054")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x600038D")]
			[Address(RVA = "0x2300CC4", Offset = "0x2300CC4", VA = "0x2300CC4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x2300BE8", Offset = "0x2300BE8", VA = "0x2300BE8", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x2300D0C", Offset = "0x2300D0C", VA = "0x2300D0C", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0x23010A0", Offset = "0x23010A0", VA = "0x23010A0")]
		public YUR_Color()
		{
		}
	}
	[Token(Token = "0x2000097")]
	public class YUR_Emission : DataSetter
	{
		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer m_rend;

		[Token(Token = "0x17000055")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000391")]
			[Address(RVA = "0x2301140", Offset = "0x2301140", VA = "0x2301140", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x23010A8", Offset = "0x23010A8", VA = "0x23010A8", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x2301188", Offset = "0x2301188", VA = "0x2301188", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x23014FC", Offset = "0x23014FC", VA = "0x23014FC")]
		public YUR_Emission()
		{
		}
	}
	[Token(Token = "0x2000098")]
	public class YUR_Euler : DataSetter
	{
		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_transform;

		[Token(Token = "0x17000056")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000395")]
			[Address(RVA = "0x2301540", Offset = "0x2301540", VA = "0x2301540", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x2301504", Offset = "0x2301504", VA = "0x2301504", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x2301588", Offset = "0x2301588", VA = "0x2301588", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x2301828", Offset = "0x2301828", VA = "0x2301828")]
		public YUR_Euler()
		{
		}
	}
	[Token(Token = "0x2000099")]
	public class YUR_FontSize : DataSetter
	{
		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x17000057")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x6000399")]
			[Address(RVA = "0x230189C", Offset = "0x230189C", VA = "0x230189C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x2301830", Offset = "0x2301830", VA = "0x2301830", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x23018E4", Offset = "0x23018E4", VA = "0x23018E4", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x2301BC4", Offset = "0x2301BC4", VA = "0x2301BC4")]
		public YUR_FontSize()
		{
		}
	}
	[Token(Token = "0x200009A")]
	public class YUR_Position : DataSetter
	{
		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_transform;

		[Token(Token = "0x17000058")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x600039D")]
			[Address(RVA = "0x2301C08", Offset = "0x2301C08", VA = "0x2301C08", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x2301BCC", Offset = "0x2301BCC", VA = "0x2301BCC", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x2301C50", Offset = "0x2301C50", VA = "0x2301C50", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x2301EF0", Offset = "0x2301EF0", VA = "0x2301EF0")]
		public YUR_Position()
		{
		}
	}
	[Token(Token = "0x200009B")]
	public class YUR_RenderQueue : DataSetter
	{
		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text m_text;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer m_rend;

		[Token(Token = "0x17000059")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x60003A1")]
			[Address(RVA = "0x2301FD4", Offset = "0x2301FD4", VA = "0x2301FD4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x2301EF8", Offset = "0x2301EF8", VA = "0x2301EF8", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x230201C", Offset = "0x230201C", VA = "0x230201C", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x23023E4", Offset = "0x23023E4", VA = "0x23023E4")]
		public YUR_RenderQueue()
		{
		}
	}
	[Token(Token = "0x200009C")]
	public class YUR_Scale : DataSetter
	{
		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_transform;

		[Token(Token = "0x1700005A")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x60003A5")]
			[Address(RVA = "0x2302428", Offset = "0x2302428", VA = "0x2302428", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x23023EC", Offset = "0x23023EC", VA = "0x23023EC", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x2302470", Offset = "0x2302470", VA = "0x2302470", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x2302710", Offset = "0x2302710", VA = "0x2302710")]
		public YUR_Scale()
		{
		}
	}
	[Token(Token = "0x200009D")]
	public class YUR_Text : DataSetter
	{
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public YurFormat format;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x1700005B")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x60003A9")]
			[Address(RVA = "0x2302784", Offset = "0x2302784", VA = "0x2302784", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x2302718", Offset = "0x2302718", VA = "0x2302718", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x23027CC", Offset = "0x23027CC", VA = "0x23027CC", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x2302AC8", Offset = "0x2302AC8", VA = "0x2302AC8")]
		public YUR_Text()
		{
		}
	}
	[Token(Token = "0x200009E")]
	public class YUR_TileColor : DataSetter
	{
		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer m_rend;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_arbDataPath;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SetFillColor SFC;

		[Token(Token = "0x1700005C")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x60003AD")]
			[Address(RVA = "0x2302CC8", Offset = "0x2302CC8", VA = "0x2302CC8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x2302AD0", Offset = "0x2302AD0", VA = "0x2302AD0", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x2302D10", Offset = "0x2302D10", VA = "0x2302D10", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x2303180", Offset = "0x2303180", VA = "0x2303180")]
		public YUR_TileColor()
		{
		}
	}
	[Token(Token = "0x200009F")]
	public class YUR_Visibility : DataSetter
	{
		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image m_image;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text m_text;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer m_rend;

		[Token(Token = "0x1700005D")]
		protected override string DefaultDataTag
		{
			[Token(Token = "0x60003B1")]
			[Address(RVA = "0x23032C4", Offset = "0x23032C4", VA = "0x23032C4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x23031E8", Offset = "0x23031E8", VA = "0x23031E8", Slot = "6")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x230330C", Offset = "0x230330C", VA = "0x230330C", Slot = "9")]
		public override void ApplyOverlayUpdate(OverlayStatusUpdate OSU)
		{
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x2303670", Offset = "0x2303670", VA = "0x2303670")]
		public YUR_Visibility()
		{
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x20000A0")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x1A987C8", Offset = "0x1A987C8", VA = "0x1A987C8")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x1A98844", Offset = "0x1A98844", VA = "0x1A98844")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x1A98D5C", Offset = "0x1A98D5C", VA = "0x1A98D5C")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x1A98E70", Offset = "0x1A98E70", VA = "0x1A98E70")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x20000A1")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E946C", Offset = "0x16E946C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4001A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x22F5630", Offset = "0x22F5630", VA = "0x22F5630")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x22F579C", Offset = "0x22F579C", VA = "0x22F579C")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E947C", Offset = "0x16E947C")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x170003F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC4")]
				[Address(RVA = "0x22F5834", Offset = "0x22F5834", VA = "0x22F5834", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC6")]
				[Address(RVA = "0x22F589C", Offset = "0x22F589C", VA = "0x22F589C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x22F56DC", Offset = "0x22F56DC", VA = "0x22F56DC")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x22F57C0", Offset = "0x22F57C0", VA = "0x22F57C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x22F57C4", Offset = "0x22F57C4", VA = "0x22F57C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x22F583C", Offset = "0x22F583C", VA = "0x22F583C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E948C", Offset = "0x16E948C")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4001A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x170003FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DCA")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DCC")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC7")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC8")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC9")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DCB")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E949C", Offset = "0x16E949C")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4001A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x170003FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD0")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD2")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DCD")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001DCE")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DCF")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD1")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E94AC", Offset = "0x16E94AC")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x170003FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD3")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD4")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD5")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD7")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E94BC", Offset = "0x16E94BC")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4001A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4001A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x17000400")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DDC")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000401")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DDE")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD9")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001DDA")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DDB")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DDD")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x22F50AC", Offset = "0x22F50AC", VA = "0x22F50AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x22F51C8", Offset = "0x22F51C8", VA = "0x22F51C8")]
		public void Update()
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x22F5330", Offset = "0x22F5330", VA = "0x22F5330")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x22F5430", Offset = "0x22F5430", VA = "0x22F5430")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x22F549C", Offset = "0x22F549C", VA = "0x22F549C")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x22F5638", Offset = "0x22F5638", VA = "0x22F5638")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x60003BF")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x60003C0")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x60003C1")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x60003C2")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x22F5660", Offset = "0x22F5660", VA = "0x22F5660")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FFD38", Offset = "0x16FFD38")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x60003C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FFD9C", Offset = "0x16FFD9C")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x60003C5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FFE00", Offset = "0x16FFE00")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x60003C6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FFE64", Offset = "0x16FFE64")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x60003C7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x16FFEC8", Offset = "0x16FFEC8")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x22F5708", Offset = "0x22F5708", VA = "0x22F5708")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	public enum Locale
	{
		[Token(Token = "0x40003EC")]
		US,
		[Token(Token = "0x40003ED")]
		DE,
		[Token(Token = "0x40003EE")]
		JP,
		[Token(Token = "0x40003EF")]
		KR,
		[Token(Token = "0x40003F0")]
		RU,
		[Token(Token = "0x40003F1")]
		CN,
		[Token(Token = "0x40003F2")]
		TW,
		[Token(Token = "0x40003F3")]
		FR
	}
	[Token(Token = "0x20000A3")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x20000A4")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x20000A5")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x20000A6")]
	public class Leaderboard
	{
		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB64C", Offset = "0x16EB64C")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB65C", Offset = "0x16EB65C")]
		private int <Score>k__BackingField;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB66C", Offset = "0x16EB66C")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x1700005E")]
		public int Rank
		{
			[Token(Token = "0x60003D6")]
			[Address(RVA = "0x22F507C", Offset = "0x22F507C", VA = "0x22F507C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFF2C", Offset = "0x16FFF2C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0x22F5084", Offset = "0x22F5084", VA = "0x22F5084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFF3C", Offset = "0x16FFF3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public int Score
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0x22F508C", Offset = "0x22F508C", VA = "0x22F508C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFF4C", Offset = "0x16FFF4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60003D9")]
			[Address(RVA = "0x22F5094", Offset = "0x22F5094", VA = "0x22F5094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFF5C", Offset = "0x16FFF5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public string UserName
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0x22F509C", Offset = "0x22F509C", VA = "0x22F509C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFF6C", Offset = "0x16FFF6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0x22F50A4", Offset = "0x22F50A4", VA = "0x22F50A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFF7C", Offset = "0x16FFF7C")]
			set
			{
			}
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x22F4D78", Offset = "0x22F4D78", VA = "0x22F4D78")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x2000415")]
		public enum Platform
		{
			[Token(Token = "0x4001A44")]
			Windows,
			[Token(Token = "0x4001A45")]
			Android
		}

		[Token(Token = "0x2000416")]
		public enum TransactionType
		{
			[Token(Token = "0x4001A47")]
			Unknown,
			[Token(Token = "0x4001A48")]
			Paid,
			[Token(Token = "0x4001A49")]
			Redeem,
			[Token(Token = "0x4001A4A")]
			FreeTrial
		}

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB67C", Offset = "0x16EB67C")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB68C", Offset = "0x16EB68C")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x17000061")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x60003DD")]
			[Address(RVA = "0x22F65A0", Offset = "0x22F65A0", VA = "0x22F65A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFF8C", Offset = "0x16FFF8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0x22F65A8", Offset = "0x22F65A8", VA = "0x22F65A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFF9C", Offset = "0x16FFF9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public TransactionType Type
		{
			[Token(Token = "0x60003DF")]
			[Address(RVA = "0x22F65B0", Offset = "0x22F65B0", VA = "0x22F65B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFFAC", Offset = "0x16FFFAC")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x60003E0")]
			[Address(RVA = "0x22F65B8", Offset = "0x22F65B8", VA = "0x22F65B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FFFBC", Offset = "0x16FFFBC")]
			set
			{
			}
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x22F6514", Offset = "0x22F6514", VA = "0x22F6514")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x20000A8")]
	public class Api
	{
		[Token(Token = "0x2000417")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x6001DDF")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x6001DE0")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x2387D68", Offset = "0x2387D68", VA = "0x2387D68")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x2387740", Offset = "0x2387740", VA = "0x2387740")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x2387648", Offset = "0x2387648", VA = "0x2387648")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x16FFFCC", Offset = "0x16FFFCC")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x238784C", Offset = "0x238784C", VA = "0x238784C")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x23876C4", Offset = "0x23876C4", VA = "0x23876C4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1700030", Offset = "0x1700030")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x23879C8", Offset = "0x23879C8", VA = "0x23879C8")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x2387B24", Offset = "0x2387B24", VA = "0x2387B24")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x2387BBC", Offset = "0x2387BBC", VA = "0x2387BBC")]
		public Api()
		{
		}
	}
	[Token(Token = "0x20000A9")]
	public class User
	{
		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x22F65C8", Offset = "0x22F65C8", VA = "0x22F65C8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1700094", Offset = "0x1700094")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x22F6628", Offset = "0x22F6628", VA = "0x22F6628")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x22F67AC", Offset = "0x22F67AC", VA = "0x22F67AC")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x22F67D0", Offset = "0x22F67D0", VA = "0x22F67D0")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x22F67F4", Offset = "0x22F67F4", VA = "0x22F67F4")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x22F6818", Offset = "0x22F6818", VA = "0x22F6818")]
		public User()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	public class UserStats
	{
		[Token(Token = "0x2000418")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4001A4C")]
			GlobalData,
			[Token(Token = "0x4001A4D")]
			GlobalDataAroundUser,
			[Token(Token = "0x4001A4E")]
			LocalData,
			[Token(Token = "0x4001A4F")]
			LocalDataAroundUser
		}

		[Token(Token = "0x2000419")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4001A51")]
			AllTime,
			[Token(Token = "0x4001A52")]
			Daily,
			[Token(Token = "0x4001A53")]
			Weekly,
			[Token(Token = "0x4001A54")]
			Monthly
		}

		[Token(Token = "0x200041A")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4001A56")]
			None,
			[Token(Token = "0x4001A57")]
			Ascending,
			[Token(Token = "0x4001A58")]
			Descending
		}

		[Token(Token = "0x200041B")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4001A5A")]
			None,
			[Token(Token = "0x4001A5B")]
			Numeric,
			[Token(Token = "0x4001A5C")]
			TimeSeconds,
			[Token(Token = "0x4001A5D")]
			TimeMilliSeconds
		}

		[Token(Token = "0x200041C")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4001A5F")]
			None,
			[Token(Token = "0x4001A60")]
			KeepBest,
			[Token(Token = "0x4001A61")]
			ForceUpdate
		}

		[Token(Token = "0x200041D")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4001A63")]
			Name,
			[Token(Token = "0x4001A64")]
			Desc,
			[Token(Token = "0x4001A65")]
			Hidden
		}

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x22F6820", Offset = "0x22F6820", VA = "0x22F6820")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x17000F8", Offset = "0x17000F8")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x22F6A00", Offset = "0x22F6A00", VA = "0x22F6A00")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x22F6880", Offset = "0x22F6880", VA = "0x22F6880")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x170015C", Offset = "0x170015C")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x22F6B84", Offset = "0x22F6B84", VA = "0x22F6B84")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x22F6D08", Offset = "0x22F6D08", VA = "0x22F6D08")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x22F6D0C", Offset = "0x22F6D0C", VA = "0x22F6D0C")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x22F6D10", Offset = "0x22F6D10", VA = "0x22F6D10")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x22F6D14", Offset = "0x22F6D14", VA = "0x22F6D14")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x22F68E0", Offset = "0x22F68E0", VA = "0x22F68E0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x17001C0", Offset = "0x17001C0")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x22F6D18", Offset = "0x22F6D18", VA = "0x22F6D18")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x22F6E9C", Offset = "0x22F6E9C", VA = "0x22F6E9C")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x22F6EA0", Offset = "0x22F6EA0", VA = "0x22F6EA0")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x22F6EA4", Offset = "0x22F6EA4", VA = "0x22F6EA4")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x22F6EA8", Offset = "0x22F6EA8", VA = "0x22F6EA8")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x22F6EAC", Offset = "0x22F6EAC", VA = "0x22F6EAC")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x22F6EB0", Offset = "0x22F6EB0", VA = "0x22F6EB0")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x22F6EB4", Offset = "0x22F6EB4", VA = "0x22F6EB4")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x22F6940", Offset = "0x22F6940", VA = "0x22F6940")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1700224", Offset = "0x1700224")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x22F6EB8", Offset = "0x22F6EB8", VA = "0x22F6EB8")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x22F69A0", Offset = "0x22F69A0", VA = "0x22F69A0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1700288", Offset = "0x1700288")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x22F707C", Offset = "0x22F707C", VA = "0x22F707C")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x22F7218", Offset = "0x22F7218", VA = "0x22F7218")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x22F721C", Offset = "0x22F721C", VA = "0x22F721C")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x22F7220", Offset = "0x22F7220", VA = "0x22F7220")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x22F7224", Offset = "0x22F7224", VA = "0x22F7224")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x22F7228", Offset = "0x22F7228", VA = "0x22F7228")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20000AB")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x600040A")]
		[Address(RVA = "0x2387D78", Offset = "0x2387D78", VA = "0x2387D78")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x20000AC")]
	public class IAPurchase
	{
		[Token(Token = "0x200041E")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4001A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0x2388CF4", Offset = "0x2388CF4", VA = "0x2388CF4")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x2388D64", Offset = "0x2388D64", VA = "0x2388D64")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0x2389CC4", Offset = "0x2389CC4", VA = "0x2389CC4", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0x2388EA8", Offset = "0x2388EA8", VA = "0x2388EA8")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0x238A1CC", Offset = "0x238A1CC", VA = "0x238A1CC", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0x23890C4", Offset = "0x23890C4", VA = "0x23890C4")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0x238A6D4", Offset = "0x238A6D4", VA = "0x238A6D4", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x2389208", Offset = "0x2389208", VA = "0x2389208")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0x238AD2C", Offset = "0x238AD2C", VA = "0x238AD2C", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0x238933C", Offset = "0x238933C", VA = "0x238933C")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0x238B764", Offset = "0x238B764", VA = "0x238B764", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0x2389470", Offset = "0x2389470", VA = "0x2389470")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0x238C648", Offset = "0x238C648", VA = "0x238C648", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0x23895FC", Offset = "0x23895FC", VA = "0x23895FC")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0x238CCA4", Offset = "0x238CCA4", VA = "0x238CCA4", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0x2389740", Offset = "0x2389740", VA = "0x2389740")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0x238D194", Offset = "0x238D194", VA = "0x238D194", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x2389884", Offset = "0x2389884", VA = "0x2389884")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0x238D684", Offset = "0x238D684", VA = "0x238D684", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0x23899C8", Offset = "0x23899C8", VA = "0x23899C8")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0x238DDA0", Offset = "0x238DDA0", VA = "0x238DDA0", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0x2389AFC", Offset = "0x2389AFC", VA = "0x2389AFC")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0x238E2AC", Offset = "0x238E2AC", VA = "0x238E2AC", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x2389C40", Offset = "0x2389C40", VA = "0x2389C40")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0x238E7B8", Offset = "0x238E7B8", VA = "0x238E7B8", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x200041F")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x6001DFB")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x6001DFC")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x6001DFD")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x6001DFE")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x6001DFF")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x6001E00")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x6001E01")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x6001E02")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x6001E03")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x6001E04")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x6001E05")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x6001E06")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x2389CBC", Offset = "0x2389CBC", VA = "0x2389CBC")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x2000420")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x22EE760", Offset = "0x22EE760", VA = "0x22EE760", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x22EE764", Offset = "0x22EE764", VA = "0x22EE764", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0x22EE768", Offset = "0x22EE768", VA = "0x22EE768", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x22EE76C", Offset = "0x22EE76C", VA = "0x22EE76C", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0x22EE770", Offset = "0x22EE770", VA = "0x22EE770", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0x22EE774", Offset = "0x22EE774", VA = "0x22EE774", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0x22EE778", Offset = "0x22EE778", VA = "0x22EE778", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0x22EE77C", Offset = "0x22EE77C", VA = "0x22EE77C", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6001E10")]
			[Address(RVA = "0x22EE780", Offset = "0x22EE780", VA = "0x22EE780", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0x22EE784", Offset = "0x22EE784", VA = "0x22EE784", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6001E12")]
			[Address(RVA = "0x22EE788", Offset = "0x22EE788", VA = "0x22EE788", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0x22EE78C", Offset = "0x22EE78C", VA = "0x22EE78C", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x22EE790", Offset = "0x22EE790", VA = "0x22EE790", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x6001E15")]
			[Address(RVA = "0x22EE794", Offset = "0x22EE794", VA = "0x22EE794")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x2000421")]
		public class QueryResponse
		{
			[Token(Token = "0x4001A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8288", Offset = "0x16F8288")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8298", Offset = "0x16F8298")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F82A8", Offset = "0x16F82A8")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F82B8", Offset = "0x16F82B8")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F82C8", Offset = "0x16F82C8")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F82D8", Offset = "0x16F82D8")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000402")]
			public string order_id
			{
				[Token(Token = "0x6001E16")]
				[Address(RVA = "0x22EE7D4", Offset = "0x22EE7D4", VA = "0x22EE7D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706280", Offset = "0x1706280")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E17")]
				[Address(RVA = "0x22EE7DC", Offset = "0x22EE7DC", VA = "0x22EE7DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706290", Offset = "0x1706290")]
				set
				{
				}
			}

			[Token(Token = "0x17000403")]
			public string purchase_id
			{
				[Token(Token = "0x6001E18")]
				[Address(RVA = "0x22EE7E4", Offset = "0x22EE7E4", VA = "0x22EE7E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17062A0", Offset = "0x17062A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E19")]
				[Address(RVA = "0x22EE7EC", Offset = "0x22EE7EC", VA = "0x22EE7EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17062B0", Offset = "0x17062B0")]
				set
				{
				}
			}

			[Token(Token = "0x17000404")]
			public string status
			{
				[Token(Token = "0x6001E1A")]
				[Address(RVA = "0x22EE7F4", Offset = "0x22EE7F4", VA = "0x22EE7F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17062C0", Offset = "0x17062C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E1B")]
				[Address(RVA = "0x22EE7FC", Offset = "0x22EE7FC", VA = "0x22EE7FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17062D0", Offset = "0x17062D0")]
				set
				{
				}
			}

			[Token(Token = "0x17000405")]
			public string price
			{
				[Token(Token = "0x6001E1C")]
				[Address(RVA = "0x22EE804", Offset = "0x22EE804", VA = "0x22EE804")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17062E0", Offset = "0x17062E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E1D")]
				[Address(RVA = "0x22EE80C", Offset = "0x22EE80C", VA = "0x22EE80C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17062F0", Offset = "0x17062F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000406")]
			public string currency
			{
				[Token(Token = "0x6001E1E")]
				[Address(RVA = "0x22EE814", Offset = "0x22EE814", VA = "0x22EE814")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706300", Offset = "0x1706300")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E1F")]
				[Address(RVA = "0x22EE81C", Offset = "0x22EE81C", VA = "0x22EE81C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706310", Offset = "0x1706310")]
				set
				{
				}
			}

			[Token(Token = "0x17000407")]
			public long paid_timestamp
			{
				[Token(Token = "0x6001E20")]
				[Address(RVA = "0x22EE824", Offset = "0x22EE824", VA = "0x22EE824")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706320", Offset = "0x1706320")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001E21")]
				[Address(RVA = "0x22EE82C", Offset = "0x22EE82C", VA = "0x22EE82C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706330", Offset = "0x1706330")]
				set
				{
				}
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x22EE834", Offset = "0x22EE834", VA = "0x22EE834")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x2000422")]
		public class QueryResponse2
		{
			[Token(Token = "0x4001A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F82E8", Offset = "0x16F82E8")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F82F8", Offset = "0x16F82F8")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8308", Offset = "0x16F8308")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8318", Offset = "0x16F8318")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4001A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8328", Offset = "0x16F8328")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8338", Offset = "0x16F8338")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8348", Offset = "0x16F8348")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000408")]
			public string order_id
			{
				[Token(Token = "0x6001E23")]
				[Address(RVA = "0x22EE83C", Offset = "0x22EE83C", VA = "0x22EE83C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706340", Offset = "0x1706340")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E24")]
				[Address(RVA = "0x22EE844", Offset = "0x22EE844", VA = "0x22EE844")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706350", Offset = "0x1706350")]
				set
				{
				}
			}

			[Token(Token = "0x17000409")]
			public string app_id
			{
				[Token(Token = "0x6001E25")]
				[Address(RVA = "0x22EE84C", Offset = "0x22EE84C", VA = "0x22EE84C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706360", Offset = "0x1706360")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E26")]
				[Address(RVA = "0x22EE854", Offset = "0x22EE854", VA = "0x22EE854")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706370", Offset = "0x1706370")]
				set
				{
				}
			}

			[Token(Token = "0x1700040A")]
			public string purchase_id
			{
				[Token(Token = "0x6001E27")]
				[Address(RVA = "0x22EE85C", Offset = "0x22EE85C", VA = "0x22EE85C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706380", Offset = "0x1706380")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E28")]
				[Address(RVA = "0x22EE864", Offset = "0x22EE864", VA = "0x22EE864")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706390", Offset = "0x1706390")]
				set
				{
				}
			}

			[Token(Token = "0x1700040B")]
			public string user_data
			{
				[Token(Token = "0x6001E29")]
				[Address(RVA = "0x22EE86C", Offset = "0x22EE86C", VA = "0x22EE86C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17063A0", Offset = "0x17063A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E2A")]
				[Address(RVA = "0x22EE874", Offset = "0x22EE874", VA = "0x22EE874")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17063B0", Offset = "0x17063B0")]
				set
				{
				}
			}

			[Token(Token = "0x1700040C")]
			public string price
			{
				[Token(Token = "0x6001E2B")]
				[Address(RVA = "0x22EE87C", Offset = "0x22EE87C", VA = "0x22EE87C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17063C0", Offset = "0x17063C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E2C")]
				[Address(RVA = "0x22EE884", Offset = "0x22EE884", VA = "0x22EE884")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17063D0", Offset = "0x17063D0")]
				set
				{
				}
			}

			[Token(Token = "0x1700040D")]
			public string currency
			{
				[Token(Token = "0x6001E2D")]
				[Address(RVA = "0x22EE88C", Offset = "0x22EE88C", VA = "0x22EE88C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17063E0", Offset = "0x17063E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E2E")]
				[Address(RVA = "0x22EE894", Offset = "0x22EE894", VA = "0x22EE894")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17063F0", Offset = "0x17063F0")]
				set
				{
				}
			}

			[Token(Token = "0x1700040E")]
			public long paid_timestamp
			{
				[Token(Token = "0x6001E2F")]
				[Address(RVA = "0x22EE89C", Offset = "0x22EE89C", VA = "0x22EE89C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706400", Offset = "0x1706400")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001E30")]
				[Address(RVA = "0x22EE8A4", Offset = "0x22EE8A4", VA = "0x22EE8A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706410", Offset = "0x1706410")]
				set
				{
				}
			}

			[Token(Token = "0x6001E31")]
			[Address(RVA = "0x22EE8AC", Offset = "0x22EE8AC", VA = "0x22EE8AC")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x2000423")]
		public class QueryListResponse
		{
			[Token(Token = "0x4001A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8358", Offset = "0x16F8358")]
			private int <total>k__BackingField;

			[Token(Token = "0x4001A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8368", Offset = "0x16F8368")]
			private int <from>k__BackingField;

			[Token(Token = "0x4001A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8378", Offset = "0x16F8378")]
			private int <to>k__BackingField;

			[Token(Token = "0x4001A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x1700040F")]
			public int total
			{
				[Token(Token = "0x6001E32")]
				[Address(RVA = "0x22EE79C", Offset = "0x22EE79C", VA = "0x22EE79C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706420", Offset = "0x1706420")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001E33")]
				[Address(RVA = "0x22EE7A4", Offset = "0x22EE7A4", VA = "0x22EE7A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706430", Offset = "0x1706430")]
				set
				{
				}
			}

			[Token(Token = "0x17000410")]
			public int from
			{
				[Token(Token = "0x6001E34")]
				[Address(RVA = "0x22EE7AC", Offset = "0x22EE7AC", VA = "0x22EE7AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706440", Offset = "0x1706440")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001E35")]
				[Address(RVA = "0x22EE7B4", Offset = "0x22EE7B4", VA = "0x22EE7B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706450", Offset = "0x1706450")]
				set
				{
				}
			}

			[Token(Token = "0x17000411")]
			public int to
			{
				[Token(Token = "0x6001E36")]
				[Address(RVA = "0x22EE7BC", Offset = "0x22EE7BC", VA = "0x22EE7BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706460", Offset = "0x1706460")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001E37")]
				[Address(RVA = "0x22EE7C4", Offset = "0x22EE7C4", VA = "0x22EE7C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706470", Offset = "0x1706470")]
				set
				{
				}
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x22EE7CC", Offset = "0x22EE7CC", VA = "0x22EE7CC")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x2000424")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4001A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8388", Offset = "0x16F8388")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4001A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8398", Offset = "0x16F8398")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4001A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F83A8", Offset = "0x16F83A8")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000412")]
			public long create_time
			{
				[Token(Token = "0x6001E39")]
				[Address(RVA = "0x22EE924", Offset = "0x22EE924", VA = "0x22EE924")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706480", Offset = "0x1706480")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001E3A")]
				[Address(RVA = "0x22EE92C", Offset = "0x22EE92C", VA = "0x22EE92C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706490", Offset = "0x1706490")]
				set
				{
				}
			}

			[Token(Token = "0x17000413")]
			public string payment_method
			{
				[Token(Token = "0x6001E3B")]
				[Address(RVA = "0x22EE934", Offset = "0x22EE934", VA = "0x22EE934")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17064A0", Offset = "0x17064A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E3C")]
				[Address(RVA = "0x22EE93C", Offset = "0x22EE93C", VA = "0x22EE93C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17064B0", Offset = "0x17064B0")]
				set
				{
				}
			}

			[Token(Token = "0x17000414")]
			public string status
			{
				[Token(Token = "0x6001E3D")]
				[Address(RVA = "0x22EE944", Offset = "0x22EE944", VA = "0x22EE944")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17064C0", Offset = "0x17064C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E3E")]
				[Address(RVA = "0x22EE94C", Offset = "0x22EE94C", VA = "0x22EE94C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17064D0", Offset = "0x17064D0")]
				set
				{
				}
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x22EE954", Offset = "0x22EE954", VA = "0x22EE954")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x2000425")]
		public class StatusDetail
		{
			[Token(Token = "0x4001A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F83B8", Offset = "0x16F83B8")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4001A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F83C8", Offset = "0x16F83C8")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4001A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F83D8", Offset = "0x16F83D8")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000415")]
			public long date_next_charge
			{
				[Token(Token = "0x6001E40")]
				[Address(RVA = "0x22EE8EC", Offset = "0x22EE8EC", VA = "0x22EE8EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17064E0", Offset = "0x17064E0")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001E41")]
				[Address(RVA = "0x22EE8F4", Offset = "0x22EE8F4", VA = "0x22EE8F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17064F0", Offset = "0x17064F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000416")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x6001E42")]
				[Address(RVA = "0x22EE8FC", Offset = "0x22EE8FC", VA = "0x22EE8FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706500", Offset = "0x1706500")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E43")]
				[Address(RVA = "0x22EE904", Offset = "0x22EE904", VA = "0x22EE904")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706510", Offset = "0x1706510")]
				set
				{
				}
			}

			[Token(Token = "0x17000417")]
			public string cancel_reason
			{
				[Token(Token = "0x6001E44")]
				[Address(RVA = "0x22EE90C", Offset = "0x22EE90C", VA = "0x22EE90C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706520", Offset = "0x1706520")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E45")]
				[Address(RVA = "0x22EE914", Offset = "0x22EE914", VA = "0x22EE914")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706530", Offset = "0x1706530")]
				set
				{
				}
			}

			[Token(Token = "0x6001E46")]
			[Address(RVA = "0x22EE91C", Offset = "0x22EE91C", VA = "0x22EE91C")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x2000426")]
		public class TimePeriod
		{
			[Token(Token = "0x4001A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F83E8", Offset = "0x16F83E8")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4001A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F83F8", Offset = "0x16F83F8")]
			private int <value>k__BackingField;

			[Token(Token = "0x17000418")]
			public string time_type
			{
				[Token(Token = "0x6001E47")]
				[Address(RVA = "0x22EEA34", Offset = "0x22EEA34", VA = "0x22EEA34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706540", Offset = "0x1706540")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E48")]
				[Address(RVA = "0x22EEA3C", Offset = "0x22EEA3C", VA = "0x22EEA3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706550", Offset = "0x1706550")]
				set
				{
				}
			}

			[Token(Token = "0x17000419")]
			public int value
			{
				[Token(Token = "0x6001E49")]
				[Address(RVA = "0x22EEA44", Offset = "0x22EEA44", VA = "0x22EEA44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706560", Offset = "0x1706560")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001E4A")]
				[Address(RVA = "0x22EEA4C", Offset = "0x22EEA4C", VA = "0x22EEA4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706570", Offset = "0x1706570")]
				set
				{
				}
			}

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x22EEA54", Offset = "0x22EEA54", VA = "0x22EEA54")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x2000427")]
		public class Subscription
		{
			[Token(Token = "0x4001A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8408", Offset = "0x16F8408")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8418", Offset = "0x16F8418")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8428", Offset = "0x16F8428")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x4001A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8438", Offset = "0x16F8438")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8448", Offset = "0x16F8448")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8458", Offset = "0x16F8458")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4001A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8468", Offset = "0x16F8468")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4001A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8478", Offset = "0x16F8478")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4001A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8488", Offset = "0x16F8488")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4001A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F8498", Offset = "0x16F8498")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4001A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F84A8", Offset = "0x16F84A8")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F84B8", Offset = "0x16F84B8")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F84C8", Offset = "0x16F84C8")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x1700041A")]
			public string app_id
			{
				[Token(Token = "0x6001E4C")]
				[Address(RVA = "0x22EE95C", Offset = "0x22EE95C", VA = "0x22EE95C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706580", Offset = "0x1706580")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E4D")]
				[Address(RVA = "0x22EE964", Offset = "0x22EE964", VA = "0x22EE964")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706590", Offset = "0x1706590")]
				set
				{
				}
			}

			[Token(Token = "0x1700041B")]
			public string order_id
			{
				[Token(Token = "0x6001E4E")]
				[Address(RVA = "0x22EE96C", Offset = "0x22EE96C", VA = "0x22EE96C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17065A0", Offset = "0x17065A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E4F")]
				[Address(RVA = "0x22EE974", Offset = "0x22EE974", VA = "0x22EE974")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17065B0", Offset = "0x17065B0")]
				set
				{
				}
			}

			[Token(Token = "0x1700041C")]
			public string subscription_id
			{
				[Token(Token = "0x6001E50")]
				[Address(RVA = "0x22EE97C", Offset = "0x22EE97C", VA = "0x22EE97C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17065C0", Offset = "0x17065C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E51")]
				[Address(RVA = "0x22EE984", Offset = "0x22EE984", VA = "0x22EE984")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17065D0", Offset = "0x17065D0")]
				set
				{
				}
			}

			[Token(Token = "0x1700041D")]
			public string price
			{
				[Token(Token = "0x6001E52")]
				[Address(RVA = "0x22EE98C", Offset = "0x22EE98C", VA = "0x22EE98C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17065E0", Offset = "0x17065E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E53")]
				[Address(RVA = "0x22EE994", Offset = "0x22EE994", VA = "0x22EE994")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17065F0", Offset = "0x17065F0")]
				set
				{
				}
			}

			[Token(Token = "0x1700041E")]
			public string currency
			{
				[Token(Token = "0x6001E54")]
				[Address(RVA = "0x22EE99C", Offset = "0x22EE99C", VA = "0x22EE99C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706600", Offset = "0x1706600")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E55")]
				[Address(RVA = "0x22EE9A4", Offset = "0x22EE9A4", VA = "0x22EE9A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706610", Offset = "0x1706610")]
				set
				{
				}
			}

			[Token(Token = "0x1700041F")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6001E56")]
				[Address(RVA = "0x22EE9AC", Offset = "0x22EE9AC", VA = "0x22EE9AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706620", Offset = "0x1706620")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001E57")]
				[Address(RVA = "0x22EE9B4", Offset = "0x22EE9B4", VA = "0x22EE9B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706630", Offset = "0x1706630")]
				set
				{
				}
			}

			[Token(Token = "0x17000420")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6001E58")]
				[Address(RVA = "0x22EE9BC", Offset = "0x22EE9BC", VA = "0x22EE9BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706640", Offset = "0x1706640")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E59")]
				[Address(RVA = "0x22EE9C4", Offset = "0x22EE9C4", VA = "0x22EE9C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706650", Offset = "0x1706650")]
				set
				{
				}
			}

			[Token(Token = "0x17000421")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x6001E5A")]
				[Address(RVA = "0x22EE9CC", Offset = "0x22EE9CC", VA = "0x22EE9CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706660", Offset = "0x1706660")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E5B")]
				[Address(RVA = "0x22EE9D4", Offset = "0x22EE9D4", VA = "0x22EE9D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706670", Offset = "0x1706670")]
				set
				{
				}
			}

			[Token(Token = "0x17000422")]
			public int number_of_charge_period
			{
				[Token(Token = "0x6001E5C")]
				[Address(RVA = "0x22EE9DC", Offset = "0x22EE9DC", VA = "0x22EE9DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706680", Offset = "0x1706680")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001E5D")]
				[Address(RVA = "0x22EE9E4", Offset = "0x22EE9E4", VA = "0x22EE9E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706690", Offset = "0x1706690")]
				set
				{
				}
			}

			[Token(Token = "0x17000423")]
			public string plan_id
			{
				[Token(Token = "0x6001E5E")]
				[Address(RVA = "0x22EE9EC", Offset = "0x22EE9EC", VA = "0x22EE9EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17066A0", Offset = "0x17066A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E5F")]
				[Address(RVA = "0x22EE9F4", Offset = "0x22EE9F4", VA = "0x22EE9F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17066B0", Offset = "0x17066B0")]
				set
				{
				}
			}

			[Token(Token = "0x17000424")]
			public string plan_name
			{
				[Token(Token = "0x6001E60")]
				[Address(RVA = "0x22EE9FC", Offset = "0x22EE9FC", VA = "0x22EE9FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17066C0", Offset = "0x17066C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E61")]
				[Address(RVA = "0x22EEA04", Offset = "0x22EEA04", VA = "0x22EEA04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17066D0", Offset = "0x17066D0")]
				set
				{
				}
			}

			[Token(Token = "0x17000425")]
			public string status
			{
				[Token(Token = "0x6001E62")]
				[Address(RVA = "0x22EEA0C", Offset = "0x22EEA0C", VA = "0x22EEA0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17066E0", Offset = "0x17066E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E63")]
				[Address(RVA = "0x22EEA14", Offset = "0x22EEA14", VA = "0x22EEA14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17066F0", Offset = "0x17066F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000426")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6001E64")]
				[Address(RVA = "0x22EEA1C", Offset = "0x22EEA1C", VA = "0x22EEA1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706700", Offset = "0x1706700")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E65")]
				[Address(RVA = "0x22EEA24", Offset = "0x22EEA24", VA = "0x22EEA24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706710", Offset = "0x1706710")]
				set
				{
				}
			}

			[Token(Token = "0x6001E66")]
			[Address(RVA = "0x22EEA2C", Offset = "0x22EEA2C", VA = "0x22EEA2C")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x2000428")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4001A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F84D8", Offset = "0x16F84D8")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4001A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F84E8", Offset = "0x16F84E8")]
			private string <message>k__BackingField;

			[Token(Token = "0x4001A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F84F8", Offset = "0x16F84F8")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x17000427")]
			public int statusCode
			{
				[Token(Token = "0x6001E67")]
				[Address(RVA = "0x22EE8B4", Offset = "0x22EE8B4", VA = "0x22EE8B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706720", Offset = "0x1706720")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001E68")]
				[Address(RVA = "0x22EE8BC", Offset = "0x22EE8BC", VA = "0x22EE8BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706730", Offset = "0x1706730")]
				set
				{
				}
			}

			[Token(Token = "0x17000428")]
			public string message
			{
				[Token(Token = "0x6001E69")]
				[Address(RVA = "0x22EE8C4", Offset = "0x22EE8C4", VA = "0x22EE8C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706740", Offset = "0x1706740")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E6A")]
				[Address(RVA = "0x22EE8CC", Offset = "0x22EE8CC", VA = "0x22EE8CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706750", Offset = "0x1706750")]
				set
				{
				}
			}

			[Token(Token = "0x17000429")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x6001E6B")]
				[Address(RVA = "0x22EE8D4", Offset = "0x22EE8D4", VA = "0x22EE8D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706760", Offset = "0x1706760")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E6C")]
				[Address(RVA = "0x22EE8DC", Offset = "0x22EE8DC", VA = "0x22EE8DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1706770", Offset = "0x1706770")]
				set
				{
				}
			}

			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0x22EE8E4", Offset = "0x22EE8E4", VA = "0x22EE8E4")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x2388640", Offset = "0x2388640", VA = "0x2388640")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x17002EC", Offset = "0x17002EC")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x2388C24", Offset = "0x2388C24", VA = "0x2388C24")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x23886B4", Offset = "0x23886B4", VA = "0x23886B4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1700350", Offset = "0x1700350")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x2388DD8", Offset = "0x2388DD8", VA = "0x2388DD8")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x2388728", Offset = "0x2388728", VA = "0x2388728")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x17003B4", Offset = "0x17003B4")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x2388F1C", Offset = "0x2388F1C", VA = "0x2388F1C")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x238879C", Offset = "0x238879C", VA = "0x238879C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1700418", Offset = "0x1700418")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x2388FF4", Offset = "0x2388FF4", VA = "0x2388FF4")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x2388810", Offset = "0x2388810", VA = "0x2388810")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x170047C", Offset = "0x170047C")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x2389138", Offset = "0x2389138", VA = "0x2389138")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x2388884", Offset = "0x2388884", VA = "0x2388884")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x17004E0", Offset = "0x17004E0")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x238927C", Offset = "0x238927C", VA = "0x238927C")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x23888F8", Offset = "0x23888F8", VA = "0x23888F8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1700544", Offset = "0x1700544")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x23893B0", Offset = "0x23893B0", VA = "0x23893B0")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x238896C", Offset = "0x238896C", VA = "0x238896C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x17005A8", Offset = "0x17005A8")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x23894E4", Offset = "0x23894E4", VA = "0x23894E4")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x23889E0", Offset = "0x23889E0", VA = "0x23889E0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x170060C", Offset = "0x170060C")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x2389670", Offset = "0x2389670", VA = "0x2389670")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x2388A54", Offset = "0x2388A54", VA = "0x2388A54")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1700670", Offset = "0x1700670")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x23897B4", Offset = "0x23897B4", VA = "0x23897B4")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x2388AC8", Offset = "0x2388AC8", VA = "0x2388AC8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x17006D4", Offset = "0x17006D4")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x23898F8", Offset = "0x23898F8", VA = "0x23898F8")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x2388B3C", Offset = "0x2388B3C", VA = "0x2388B3C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1700738", Offset = "0x1700738")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x2389A3C", Offset = "0x2389A3C", VA = "0x2389A3C")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x2388BB0", Offset = "0x2388BB0", VA = "0x2388BB0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x170079C", Offset = "0x170079C")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x2389B70", Offset = "0x2389B70", VA = "0x2389B70")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x2389CB4", Offset = "0x2389CB4", VA = "0x2389CB4")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public class DLC
	{
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x23883F8", Offset = "0x23883F8", VA = "0x23883F8")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x20000AE")]
	public class Subscription
	{
		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x22F6220", Offset = "0x22F6220", VA = "0x22F6220")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1700800", Offset = "0x1700800")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x22F6290", Offset = "0x22F6290", VA = "0x22F6290")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x22F6414", Offset = "0x22F6414", VA = "0x22F6414")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x22F6598", Offset = "0x22F6598", VA = "0x22F6598")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x20000AF")]
	public class Deeplink
	{
		[Token(Token = "0x2000429")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x6001E6E")]
			public abstract void OnSuccess();

			[Token(Token = "0x6001E6F")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6001E70")]
			[Address(RVA = "0x2388638", Offset = "0x2388638", VA = "0x2388638")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x2388400", Offset = "0x2388400", VA = "0x2388400")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x23884C0", Offset = "0x23884C0", VA = "0x23884C0")]
		public static void GoToStore(DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x2388568", Offset = "0x2388568", VA = "0x2388568")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x2388628", Offset = "0x2388628", VA = "0x2388628")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x2388630", Offset = "0x2388630", VA = "0x2388630")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x20000B0")]
	internal class Token
	{
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x22F65C0", Offset = "0x22F65C0", VA = "0x22F65C0")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x20000B1")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x16E5DA0", Offset = "0x16E5DA0")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x20000B2")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x16E5DB4", Offset = "0x16E5DB4")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x20000B3")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x16E5DC8", Offset = "0x16E5DC8")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x20000B4")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x16E5DDC", Offset = "0x16E5DDC")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x20000B5")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4000419")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x400041A")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x400041B")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x400041C")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x20000B6")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x400041E")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x400041F")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4000420")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4000421")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x20000B7")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4000423")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4000424")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4000425")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x20000B8")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4000427")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4000428")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4000429")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x400042A")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x20000B9")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x400042C")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x400042D")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x400042E")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x20000BA")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4000430")]
		UNKNOWN,
		[Token(Token = "0x4000431")]
		PAID,
		[Token(Token = "0x4000432")]
		REDEEM,
		[Token(Token = "0x4000433")]
		FREEE_TRIAL
	}
	[Token(Token = "0x20000BB")]
	internal enum ELocale
	{
		[Token(Token = "0x4000435")]
		k_ELocaleUS,
		[Token(Token = "0x4000436")]
		k_ELocaleDE,
		[Token(Token = "0x4000437")]
		k_ELocaleJP,
		[Token(Token = "0x4000438")]
		k_ELocaleKR,
		[Token(Token = "0x4000439")]
		k_ELocaleRU,
		[Token(Token = "0x400043A")]
		k_ELocaleCN,
		[Token(Token = "0x400043B")]
		k_ELocaleTW,
		[Token(Token = "0x400043C")]
		k_ELocaleFR
	}
	[Token(Token = "0x20000BC")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x400043E")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x400043F")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4000440")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x20000BD")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x20000BE")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x16E5DF0", Offset = "0x16E5DF0")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x20000BF")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x20000C0")]
	internal class Api
	{
		[Token(Token = "0x200042A")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4001A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x6001E71")]
			[Address(RVA = "0x22F02D0", Offset = "0x22F02D0", VA = "0x22F02D0")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6001E72")]
			[Address(RVA = "0x22F0368", Offset = "0x22F0368", VA = "0x22F0368")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x6001E73")]
			[Address(RVA = "0x22F0588", Offset = "0x22F0588", VA = "0x22F0588")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x22EFDB4", Offset = "0x22EFDB4", VA = "0x22EFDB4")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x22EFF2C", Offset = "0x22EFF2C", VA = "0x22EFF2C")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x22F002C", Offset = "0x22F002C", VA = "0x22F002C")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x22F0128", Offset = "0x22F0128", VA = "0x22F0128")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x22F0360", Offset = "0x22F0360", VA = "0x22F0360")]
		public Api()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	internal class User
	{
		[Token(Token = "0x600044A")]
		[Address(RVA = "0x22F32A0", Offset = "0x22F32A0", VA = "0x22F32A0")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x22F33D8", Offset = "0x22F33D8", VA = "0x22F33D8")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x22F34BC", Offset = "0x22F34BC", VA = "0x22F34BC")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x22F35A0", Offset = "0x22F35A0", VA = "0x22F35A0")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x22F3684", Offset = "0x22F3684", VA = "0x22F3684")]
		public User()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	internal class UserStats
	{
		[Token(Token = "0x600044F")]
		[Address(RVA = "0x22F368C", Offset = "0x22F368C", VA = "0x22F368C")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x22F37C4", Offset = "0x22F37C4", VA = "0x22F37C4")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x22F38FC", Offset = "0x22F38FC", VA = "0x22F38FC")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x22F3A34", Offset = "0x22F3A34", VA = "0x22F3A34")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x22F3B74", Offset = "0x22F3B74", VA = "0x22F3B74")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x22F3CBC", Offset = "0x22F3CBC", VA = "0x22F3CBC")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x22F3DFC", Offset = "0x22F3DFC", VA = "0x22F3DFC")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x22F3F44", Offset = "0x22F3F44", VA = "0x22F3F44")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x22F4024", Offset = "0x22F4024", VA = "0x22F4024")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x22F4104", Offset = "0x22F4104", VA = "0x22F4104")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x22F41E4", Offset = "0x22F41E4", VA = "0x22F41E4")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x22F42C4", Offset = "0x22F42C4", VA = "0x22F42C4")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x22F4404", Offset = "0x22F4404", VA = "0x22F4404")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x22F4590", Offset = "0x22F4590", VA = "0x22F4590")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x22F4670", Offset = "0x22F4670", VA = "0x22F4670")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x22F493C", Offset = "0x22F493C", VA = "0x22F493C")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x22F4B14", Offset = "0x22F4B14", VA = "0x22F4B14")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x22F4D80", Offset = "0x22F4D80", VA = "0x22F4D80")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x22F4E7C", Offset = "0x22F4E7C", VA = "0x22F4E7C")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x22F4F78", Offset = "0x22F4F78", VA = "0x22F4F78")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x22F5074", Offset = "0x22F5074", VA = "0x22F5074")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	internal class Deeplink
	{
		[Token(Token = "0x200042B")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4001A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x6001E74")]
			[Address(RVA = "0x22F0924", Offset = "0x22F0924", VA = "0x22F0924")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x6001E75")]
			[Address(RVA = "0x22F0DB8", Offset = "0x22F0DB8", VA = "0x22F0DB8")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x6001E76")]
			[Address(RVA = "0x22F0E48", Offset = "0x22F0E48", VA = "0x22F0E48")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x22F077C", Offset = "0x22F077C", VA = "0x22F077C")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x22F09B4", Offset = "0x22F09B4", VA = "0x22F09B4")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x22F0B24", Offset = "0x22F0B24", VA = "0x22F0B24")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x22F0CCC", Offset = "0x22F0CCC", VA = "0x22F0CCC")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x22F0DB0", Offset = "0x22F0DB0", VA = "0x22F0DB0")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	internal class IAPurchase
	{
		[Token(Token = "0x6000469")]
		[Address(RVA = "0x22F1474", Offset = "0x22F1474", VA = "0x22F1474")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x22F15E4", Offset = "0x22F15E4", VA = "0x22F15E4")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x22F1754", Offset = "0x22F1754", VA = "0x22F1754")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x22F18FC", Offset = "0x22F18FC", VA = "0x22F18FC")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x22F1A6C", Offset = "0x22F1A6C", VA = "0x22F1A6C")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x22F1BDC", Offset = "0x22F1BDC", VA = "0x22F1BDC")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x22F1D0C", Offset = "0x22F1D0C", VA = "0x22F1D0C")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x22F1E3C", Offset = "0x22F1E3C", VA = "0x22F1E3C")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x22F2160", Offset = "0x22F2160", VA = "0x22F2160")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x22F22D0", Offset = "0x22F22D0", VA = "0x22F22D0")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x22F2440", Offset = "0x22F2440", VA = "0x22F2440")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x22F25B0", Offset = "0x22F25B0", VA = "0x22F25B0")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x22F26E0", Offset = "0x22F26E0", VA = "0x22F26E0")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x22F2850", Offset = "0x22F2850", VA = "0x22F2850")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	internal class Subscription
	{
		[Token(Token = "0x6000477")]
		[Address(RVA = "0x22F2DB0", Offset = "0x22F2DB0", VA = "0x22F2DB0")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x22F2EE8", Offset = "0x22F2EE8", VA = "0x22F2EE8")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x22F2FE4", Offset = "0x22F2FE4", VA = "0x22F2FE4")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x22F30E0", Offset = "0x22F30E0", VA = "0x22F30E0")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x22F3298", Offset = "0x22F3298", VA = "0x22F3298")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	internal class Android
	{
		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x17000063")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x6000482")]
			[Address(RVA = "0x22EF194", Offset = "0x22EF194", VA = "0x22EF194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6000483")]
			[Address(RVA = "0x22EF230", Offset = "0x22EF230", VA = "0x22EF230")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x6000484")]
			[Address(RVA = "0x22EF290", Offset = "0x22EF290", VA = "0x22EF290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x22EEA5C", Offset = "0x22EEA5C", VA = "0x22EEA5C")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x22EEB90", Offset = "0x22EEB90", VA = "0x22EEB90")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x22EECC4", Offset = "0x22EECC4", VA = "0x22EECC4")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x22EEDF8", Offset = "0x22EEDF8", VA = "0x22EEDF8")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x22EEF2C", Offset = "0x22EEF2C", VA = "0x22EEF2C")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x22EF060", Offset = "0x22EF060", VA = "0x22EF060")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x22EF294", Offset = "0x22EF294", VA = "0x22EF294")]
		public Android()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x22EF29C", Offset = "0x22EF29C", VA = "0x22EF29C")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x22EF32C", Offset = "0x22EF32C", VA = "0x22EF32C")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x22EF3BC", Offset = "0x22EF3BC", VA = "0x22EF3BC")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x22EF44C", Offset = "0x22EF44C", VA = "0x22EF44C")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x20000C8")]
	internal class Session
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0x2387D70", Offset = "0x2387D70", VA = "0x2387D70")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x20000C9")]
	public class Logger
	{
		[Token(Token = "0x4000450")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x2387D80", Offset = "0x2387D80", VA = "0x2387D80")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x238819C", Offset = "0x238819C", VA = "0x238819C")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x2387E50", Offset = "0x2387E50", VA = "0x2387E50")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x2388238", Offset = "0x2388238", VA = "0x2388238")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x238839C", Offset = "0x238839C", VA = "0x238839C")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x20000CA")]
	public enum JsonType
	{
		[Token(Token = "0x4000455")]
		None,
		[Token(Token = "0x4000456")]
		Object,
		[Token(Token = "0x4000457")]
		Array,
		[Token(Token = "0x4000458")]
		String,
		[Token(Token = "0x4000459")]
		Int,
		[Token(Token = "0x400045A")]
		Long,
		[Token(Token = "0x400045B")]
		Double,
		[Token(Token = "0x400045C")]
		Boolean
	}
	[Token(Token = "0x20000CB")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x17000066")]
		bool IsArray
		{
			[Token(Token = "0x6000491")]
			get;
		}

		[Token(Token = "0x17000067")]
		bool IsBoolean
		{
			[Token(Token = "0x6000492")]
			get;
		}

		[Token(Token = "0x17000068")]
		bool IsDouble
		{
			[Token(Token = "0x6000493")]
			get;
		}

		[Token(Token = "0x17000069")]
		bool IsInt
		{
			[Token(Token = "0x6000494")]
			get;
		}

		[Token(Token = "0x1700006A")]
		bool IsLong
		{
			[Token(Token = "0x6000495")]
			get;
		}

		[Token(Token = "0x1700006B")]
		bool IsObject
		{
			[Token(Token = "0x6000496")]
			get;
		}

		[Token(Token = "0x1700006C")]
		bool IsString
		{
			[Token(Token = "0x6000497")]
			get;
		}

		[Token(Token = "0x6000498")]
		bool GetBoolean();

		[Token(Token = "0x6000499")]
		double GetDouble();

		[Token(Token = "0x600049A")]
		int GetInt();

		[Token(Token = "0x600049B")]
		JsonType GetJsonType();

		[Token(Token = "0x600049C")]
		long GetLong();

		[Token(Token = "0x600049D")]
		string GetString();

		[Token(Token = "0x600049E")]
		void SetBoolean(bool val);

		[Token(Token = "0x600049F")]
		void SetDouble(double val);

		[Token(Token = "0x60004A0")]
		void SetInt(int val);

		[Token(Token = "0x60004A1")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x60004A2")]
		void SetLong(long val);

		[Token(Token = "0x60004A3")]
		void SetString(string val);

		[Token(Token = "0x60004A4")]
		string ToJson();

		[Token(Token = "0x60004A5")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x16E5E04", Offset = "0x16E5E04")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x1700006D")]
		public int Count
		{
			[Token(Token = "0x60004A6")]
			[Address(RVA = "0x24C7474", Offset = "0x24C7474", VA = "0x24C7474")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700006E")]
		public bool IsArray
		{
			[Token(Token = "0x60004A7")]
			[Address(RVA = "0x24C75FC", Offset = "0x24C75FC", VA = "0x24C75FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006F")]
		public bool IsBoolean
		{
			[Token(Token = "0x60004A8")]
			[Address(RVA = "0x24C760C", Offset = "0x24C760C", VA = "0x24C760C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000070")]
		public bool IsDouble
		{
			[Token(Token = "0x60004A9")]
			[Address(RVA = "0x24C761C", Offset = "0x24C761C", VA = "0x24C761C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000071")]
		public bool IsInt
		{
			[Token(Token = "0x60004AA")]
			[Address(RVA = "0x24C762C", Offset = "0x24C762C", VA = "0x24C762C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000072")]
		public bool IsLong
		{
			[Token(Token = "0x60004AB")]
			[Address(RVA = "0x24C763C", Offset = "0x24C763C", VA = "0x24C763C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000073")]
		public bool IsObject
		{
			[Token(Token = "0x60004AC")]
			[Address(RVA = "0x24C764C", Offset = "0x24C764C", VA = "0x24C764C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000074")]
		public bool IsString
		{
			[Token(Token = "0x60004AD")]
			[Address(RVA = "0x24C765C", Offset = "0x24C765C", VA = "0x24C765C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000075")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x60004AE")]
			[Address(RVA = "0x24C766C", Offset = "0x24C766C", VA = "0x24C766C", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000076")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x60004AF")]
			[Address(RVA = "0x24C7670", Offset = "0x24C7670", VA = "0x24C7670", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x60004B0")]
			[Address(RVA = "0x24C772C", Offset = "0x24C772C", VA = "0x24C772C", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x60004B1")]
			[Address(RVA = "0x24C77E8", Offset = "0x24C77E8", VA = "0x24C77E8", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000079")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x60004B2")]
			[Address(RVA = "0x24C79D4", Offset = "0x24C79D4", VA = "0x24C79D4", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007A")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x60004B3")]
			[Address(RVA = "0x24C7A90", Offset = "0x24C7A90", VA = "0x24C7A90", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x60004B4")]
			[Address(RVA = "0x24C7DC0", Offset = "0x24C7DC0", VA = "0x24C7DC0", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x60004B5")]
			[Address(RVA = "0x24C80F0", Offset = "0x24C80F0", VA = "0x24C80F0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007D")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x60004B6")]
			[Address(RVA = "0x24C8100", Offset = "0x24C8100", VA = "0x24C8100", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007E")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x60004B7")]
			[Address(RVA = "0x24C8110", Offset = "0x24C8110", VA = "0x24C8110", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700007F")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0x24C8120", Offset = "0x24C8120", VA = "0x24C8120", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000080")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x60004B9")]
			[Address(RVA = "0x24C8130", Offset = "0x24C8130", VA = "0x24C8130", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000081")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x60004BA")]
			[Address(RVA = "0x24C8140", Offset = "0x24C8140", VA = "0x24C8140", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000082")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x60004BB")]
			[Address(RVA = "0x24C8150", Offset = "0x24C8150", VA = "0x24C8150", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000083")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x60004BC")]
			[Address(RVA = "0x24C8160", Offset = "0x24C8160", VA = "0x24C8160", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000084")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x60004BD")]
			[Address(RVA = "0x24C8318", Offset = "0x24C8318", VA = "0x24C8318", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x60004BE")]
			[Address(RVA = "0x24C83D4", Offset = "0x24C83D4", VA = "0x24C83D4", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004BF")]
			[Address(RVA = "0x24C849C", Offset = "0x24C849C", VA = "0x24C849C", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x60004C0")]
			[Address(RVA = "0x24C89B4", Offset = "0x24C89B4", VA = "0x24C89B4", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004C1")]
			[Address(RVA = "0x24C8A84", Offset = "0x24C8A84", VA = "0x24C8A84", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x60004C2")]
			[Address(RVA = "0x24C8C8C", Offset = "0x24C8C8C", VA = "0x24C8C8C", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004C3")]
			[Address(RVA = "0x24C8D54", Offset = "0x24C8D54", VA = "0x24C8D54", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public JsonData Item
		{
			[Token(Token = "0x60004C4")]
			[Address(RVA = "0x24C9038", Offset = "0x24C9038", VA = "0x24C9038")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004C5")]
			[Address(RVA = "0x24C860C", Offset = "0x24C860C", VA = "0x24C860C")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public JsonData Item
		{
			[Token(Token = "0x60004C6")]
			[Address(RVA = "0x24C9100", Offset = "0x24C9100", VA = "0x24C9100")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004C7")]
			[Address(RVA = "0x24C8D98", Offset = "0x24C8D98", VA = "0x24C8D98")]
			set
			{
			}
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x24C925C", Offset = "0x24C925C", VA = "0x24C925C")]
		public JsonData()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x24C9264", Offset = "0x24C9264", VA = "0x24C9264")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x24C929C", Offset = "0x24C929C", VA = "0x24C929C")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x24C92D8", Offset = "0x24C92D8", VA = "0x24C92D8")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x24C930C", Offset = "0x24C930C", VA = "0x24C930C")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x24C9340", Offset = "0x24C9340", VA = "0x24C9340")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x24C953C", Offset = "0x24C953C", VA = "0x24C953C")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x24C9578", Offset = "0x24C9578", VA = "0x24C9578")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x24C95E8", Offset = "0x24C95E8", VA = "0x24C95E8")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x24C965C", Offset = "0x24C965C", VA = "0x24C965C")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x24C96C8", Offset = "0x24C96C8", VA = "0x24C96C8")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x24C9734", Offset = "0x24C9734", VA = "0x24C9734")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x24C97AC", Offset = "0x24C97AC", VA = "0x24C97AC")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x24C9840", Offset = "0x24C9840", VA = "0x24C9840")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x24C98D4", Offset = "0x24C98D4", VA = "0x24C98D4")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x24C9968", Offset = "0x24C9968", VA = "0x24C9968")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x24C99FC", Offset = "0x24C99FC", VA = "0x24C99FC")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x24C9A90", Offset = "0x24C9A90", VA = "0x24C9A90", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x24C9B60", Offset = "0x24C9B60", VA = "0x24C9B60", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x24C9D20", Offset = "0x24C9D20", VA = "0x24C9D20", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x24C9E60", Offset = "0x24C9E60", VA = "0x24C9E60", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x24C9F2C", Offset = "0x24C9F2C", VA = "0x24C9F2C", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x24C9FD4", Offset = "0x24C9FD4", VA = "0x24C9FD4", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x24CA260", Offset = "0x24CA260", VA = "0x24CA260", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x24CA318", Offset = "0x24CA318", VA = "0x24CA318", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x24CA3A4", Offset = "0x24CA3A4", VA = "0x24CA3A4", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x24CA430", Offset = "0x24CA430", VA = "0x24CA430", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x24CA4BC", Offset = "0x24CA4BC", VA = "0x24CA4BC", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x24CA548", Offset = "0x24CA548", VA = "0x24CA548", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x24CA5D4", Offset = "0x24CA5D4", VA = "0x24CA5D4", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x24CA5F0", Offset = "0x24CA5F0", VA = "0x24CA5F0", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x24CA608", Offset = "0x24CA608", VA = "0x24CA608", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x24CA620", Offset = "0x24CA620", VA = "0x24CA620", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x24CA638", Offset = "0x24CA638", VA = "0x24CA638", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x24CA670", Offset = "0x24CA670", VA = "0x24CA670", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x24CA744", Offset = "0x24CA744", VA = "0x24CA744", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x24CA77C", Offset = "0x24CA77C", VA = "0x24CA77C", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x24CA868", Offset = "0x24CA868", VA = "0x24CA868", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0x24CA934", Offset = "0x24CA934", VA = "0x24CA934", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x24CAA00", Offset = "0x24CAA00", VA = "0x24CAA00", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x24CAACC", Offset = "0x24CAACC", VA = "0x24CAACC", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x24CABB0", Offset = "0x24CABB0", VA = "0x24CABB0", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0x24CAC8C", Offset = "0x24CAC8C", VA = "0x24CAC8C", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x24CAD68", Offset = "0x24CAD68", VA = "0x24CAD68", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x24CAE50", Offset = "0x24CAE50", VA = "0x24CAE50", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x24CAF9C", Offset = "0x24CAF9C", VA = "0x24CAF9C", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x24C7530", Offset = "0x24C7530", VA = "0x24C7530")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x24C78A4", Offset = "0x24C78A4", VA = "0x24C78A4")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0x24C821C", Offset = "0x24C821C", VA = "0x24C821C")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0x24C8570", Offset = "0x24C8570", VA = "0x24C8570")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x24CB158", Offset = "0x24CB158", VA = "0x24CB158")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x24CA780", Offset = "0x24CA780", VA = "0x24CA780")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x24CBC74", Offset = "0x24CBC74", VA = "0x24CBC74")]
		public void Clear()
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x24CBD90", Offset = "0x24CBD90", VA = "0x24CBD90", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x24CBE7C", Offset = "0x24CBE7C", VA = "0x24CBE7C", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x24CBE84", Offset = "0x24CBE84", VA = "0x24CBE84", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x24CA674", Offset = "0x24CA674", VA = "0x24CA674")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x24CA748", Offset = "0x24CA748", VA = "0x24CA748")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x24CBFCC", Offset = "0x24CBFCC", VA = "0x24CBFCC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20000CD")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x1700008A")]
		public object Current
		{
			[Token(Token = "0x6000503")]
			[Address(RVA = "0x1C961C8", Offset = "0x1C961C8", VA = "0x1C961C8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x6000504")]
			[Address(RVA = "0x1C96234", Offset = "0x1C96234", VA = "0x1C96234", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x1700008C")]
		public object Key
		{
			[Token(Token = "0x6000505")]
			[Address(RVA = "0x1C96314", Offset = "0x1C96314", VA = "0x1C96314", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		public object Value
		{
			[Token(Token = "0x6000506")]
			[Address(RVA = "0x1C963C4", Offset = "0x1C963C4", VA = "0x1C963C4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x1C9647C", Offset = "0x1C9647C", VA = "0x1C9647C")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x1C964B0", Offset = "0x1C964B0", VA = "0x1C964B0", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x1C96560", Offset = "0x1C96560", VA = "0x1C96560", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x24CC0AC", Offset = "0x24CC0AC", VA = "0x24CC0AC")]
		public JsonException()
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x24CC0B4", Offset = "0x24CC0B4", VA = "0x24CC0B4")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x24CC144", Offset = "0x24CC144", VA = "0x24CC144")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x24CC1E4", Offset = "0x24CC1E4", VA = "0x24CC1E4")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x24CC274", Offset = "0x24CC274", VA = "0x24CC274")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x24CC314", Offset = "0x24CC314", VA = "0x24CC314")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x24CC31C", Offset = "0x24CC31C", VA = "0x24CC31C")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x20000CF")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x20000D0")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x1700008E")]
		public Type ElementType
		{
			[Token(Token = "0x6000511")]
			[Address(RVA = "0x24C6B64", Offset = "0x24C6B64", VA = "0x24C6B64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x24C6C24", Offset = "0x24C6C24", VA = "0x24C6C24")]
			set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public bool IsArray
		{
			[Token(Token = "0x6000513")]
			[Address(RVA = "0x24C6C2C", Offset = "0x24C6C2C", VA = "0x24C6C2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x24C6C34", Offset = "0x24C6C34", VA = "0x24C6C34")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public bool IsList
		{
			[Token(Token = "0x6000515")]
			[Address(RVA = "0x24C6C40", Offset = "0x24C6C40", VA = "0x24C6C40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000516")]
			[Address(RVA = "0x24C6C48", Offset = "0x24C6C48", VA = "0x24C6C48")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20000D1")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x17000091")]
		public Type ElementType
		{
			[Token(Token = "0x6000517")]
			[Address(RVA = "0x1C960DC", Offset = "0x1C960DC", VA = "0x1C960DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000518")]
			[Address(RVA = "0x1C9619C", Offset = "0x1C9619C", VA = "0x1C9619C")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public bool IsDictionary
		{
			[Token(Token = "0x6000519")]
			[Address(RVA = "0x1C961A4", Offset = "0x1C961A4", VA = "0x1C961A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600051A")]
			[Address(RVA = "0x1C961AC", Offset = "0x1C961AC", VA = "0x1C961AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x600051B")]
			[Address(RVA = "0x1C961B8", Offset = "0x1C961B8", VA = "0x1C961B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600051C")]
			[Address(RVA = "0x1C961C0", Offset = "0x1C961C0", VA = "0x1C961C0")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20000D2")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x20000D3")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x20000D4")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x20000D5")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x20000D6")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x20000D7")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E94CC", Offset = "0x16E94CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x4001A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4001A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x4001A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x4001A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x4001A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x4001A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x4001A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x4001A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x4001A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x4001A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x4001A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x4001AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x4001AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x4001AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4001AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x4001AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4001AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4001AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6001E78")]
			[Address(RVA = "0x1C8FCF0", Offset = "0x1C8FCF0", VA = "0x1C8FCF0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E79")]
			[Address(RVA = "0x1C8FCF8", Offset = "0x1C8FCF8", VA = "0x1C8FCF8")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x1C8FE90", Offset = "0x1C8FE90", VA = "0x1C8FE90")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0x1C8FFE4", Offset = "0x1C8FFE4", VA = "0x1C8FFE4")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0x1C900D0", Offset = "0x1C900D0", VA = "0x1C900D0")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x1C90244", Offset = "0x1C90244", VA = "0x1C90244")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0x1C902FC", Offset = "0x1C902FC", VA = "0x1C902FC")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x1C903B4", Offset = "0x1C903B4", VA = "0x1C903B4")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x1C9046C", Offset = "0x1C9046C", VA = "0x1C9046C")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x1C90604", Offset = "0x1C90604", VA = "0x1C90604")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x1C90690", Offset = "0x1C90690", VA = "0x1C90690")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x1C9085C", Offset = "0x1C9085C", VA = "0x1C9085C")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x1C90920", Offset = "0x1C90920", VA = "0x1C90920")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x1C909E4", Offset = "0x1C909E4", VA = "0x1C909E4")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x1C90AA8", Offset = "0x1C90AA8", VA = "0x1C90AA8")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x1C90B6C", Offset = "0x1C90B6C", VA = "0x1C90B6C")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x1C90C30", Offset = "0x1C90C30", VA = "0x1C90C30")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x1C90CF4", Offset = "0x1C90CF4", VA = "0x1C90CF4")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0x1C90DB4", Offset = "0x1C90DB4", VA = "0x1C90DB4")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0x1C90E78", Offset = "0x1C90E78", VA = "0x1C90E78")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0x1C90F38", Offset = "0x1C90F38", VA = "0x1C90F38")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0x1C90FFC", Offset = "0x1C90FFC", VA = "0x1C90FFC")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x1C910C0", Offset = "0x1C910C0", VA = "0x1C910C0")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x1C9117C", Offset = "0x1C9117C", VA = "0x1C9117C")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x1C9126C", Offset = "0x1C9126C", VA = "0x1C9126C")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x6001E91")]
			[Address(RVA = "0x1C912C8", Offset = "0x1C912C8", VA = "0x1C912C8")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x1C91324", Offset = "0x1C91324", VA = "0x1C91324")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E94DC", Offset = "0x16E94DC")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x6001E93")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6001E94")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E94EC", Offset = "0x16E94EC")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4001AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6001E95")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6001E96")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x24CC324", Offset = "0x24CC324", VA = "0x24CC324")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x24CE308", Offset = "0x24CE308", VA = "0x24CE308")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x24CE778", Offset = "0x24CE778", VA = "0x24CE778")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x24CEECC", Offset = "0x24CEECC", VA = "0x24CEECC")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0x24CF41C", Offset = "0x24CF41C", VA = "0x24CF41C")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x24CFCFC", Offset = "0x24CFCFC", VA = "0x24CFCFC")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x24D0C8C", Offset = "0x24D0C8C", VA = "0x24D0C8C")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x24CC664", Offset = "0x24CC664", VA = "0x24CC664")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x24CD4C0", Offset = "0x24CD4C0", VA = "0x24CD4C0")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x24D132C", Offset = "0x24D132C", VA = "0x24D132C")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x24D1570", Offset = "0x24D1570", VA = "0x24D1570")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x24D29F4", Offset = "0x24D29F4", VA = "0x24D29F4")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x24D2B50", Offset = "0x24D2B50", VA = "0x24D2B50")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x24D2BCC", Offset = "0x24D2BCC", VA = "0x24D2BCC")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x24D2D80", Offset = "0x24D2D80", VA = "0x24D2D80")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x24D2EE0", Offset = "0x24D2EE0", VA = "0x24D2EE0")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6000541")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000542")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6000543")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x24D2D0C", Offset = "0x24D2D0C", VA = "0x24D2D0C")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x24D3020", Offset = "0x24D3020", VA = "0x24D3020")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6000546")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6000547")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x24D30B4", Offset = "0x24D30B4", VA = "0x24D30B4")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x24D318C", Offset = "0x24D318C", VA = "0x24D318C")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x24D3264", Offset = "0x24D3264", VA = "0x24D3264")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public enum JsonToken
	{
		[Token(Token = "0x4000482")]
		None,
		[Token(Token = "0x4000483")]
		ObjectStart,
		[Token(Token = "0x4000484")]
		PropertyName,
		[Token(Token = "0x4000485")]
		ObjectEnd,
		[Token(Token = "0x4000486")]
		ArrayStart,
		[Token(Token = "0x4000487")]
		ArrayEnd,
		[Token(Token = "0x4000488")]
		Int,
		[Token(Token = "0x4000489")]
		Long,
		[Token(Token = "0x400048A")]
		Double,
		[Token(Token = "0x400048B")]
		String,
		[Token(Token = "0x400048C")]
		Boolean,
		[Token(Token = "0x400048D")]
		Null
	}
	[Token(Token = "0x20000D9")]
	public class JsonReader
	{
		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x17000094")]
		public bool AllowComments
		{
			[Token(Token = "0x600054B")]
			[Address(RVA = "0x1C91380", Offset = "0x1C91380", VA = "0x1C91380")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600054C")]
			[Address(RVA = "0x1C9139C", Offset = "0x1C9139C", VA = "0x1C9139C")]
			set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x600054D")]
			[Address(RVA = "0x1C913BC", Offset = "0x1C913BC", VA = "0x1C913BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600054E")]
			[Address(RVA = "0x1C913D8", Offset = "0x1C913D8", VA = "0x1C913D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public bool EndOfInput
		{
			[Token(Token = "0x600054F")]
			[Address(RVA = "0x1C913F8", Offset = "0x1C913F8", VA = "0x1C913F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000097")]
		public bool EndOfJson
		{
			[Token(Token = "0x6000550")]
			[Address(RVA = "0x1C91400", Offset = "0x1C91400", VA = "0x1C91400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000098")]
		public JsonToken Token
		{
			[Token(Token = "0x6000551")]
			[Address(RVA = "0x1C91408", Offset = "0x1C91408", VA = "0x1C91408")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x17000099")]
		public object Value
		{
			[Token(Token = "0x6000552")]
			[Address(RVA = "0x1C91410", Offset = "0x1C91410", VA = "0x1C91410")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x1C91418", Offset = "0x1C91418", VA = "0x1C91418")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x1C91A98", Offset = "0x1C91A98", VA = "0x1C91A98")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x1C91C7C", Offset = "0x1C91C7C", VA = "0x1C91C7C")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x1C91B10", Offset = "0x1C91B10", VA = "0x1C91B10")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x1C9141C", Offset = "0x1C9141C", VA = "0x1C9141C")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x1C91E88", Offset = "0x1C91E88", VA = "0x1C91E88")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x1C91D78", Offset = "0x1C91D78", VA = "0x1C91D78")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x1C91FF0", Offset = "0x1C91FF0", VA = "0x1C91FF0")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x1C9217C", Offset = "0x1C9217C", VA = "0x1C9217C")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x1C92344", Offset = "0x1C92344", VA = "0x1C92344")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x1C9258C", Offset = "0x1C9258C", VA = "0x1C9258C")]
		public void Close()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x1C925F0", Offset = "0x1C925F0", VA = "0x1C925F0")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000DA")]
	internal enum Condition
	{
		[Token(Token = "0x400049D")]
		InArray,
		[Token(Token = "0x400049E")]
		InObject,
		[Token(Token = "0x400049F")]
		NotAProperty,
		[Token(Token = "0x40004A0")]
		Property,
		[Token(Token = "0x40004A1")]
		Value
	}
	[Token(Token = "0x20000DB")]
	internal class WriterContext
	{
		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x1C92F98", Offset = "0x1C92F98", VA = "0x1C92F98")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class JsonWriter
	{
		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x1700009A")]
		public int IndentValue
		{
			[Token(Token = "0x6000560")]
			[Address(RVA = "0x1C92A34", Offset = "0x1C92A34", VA = "0x1C92A34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000561")]
			[Address(RVA = "0x1C92A3C", Offset = "0x1C92A3C", VA = "0x1C92A3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6000562")]
			[Address(RVA = "0x1C92A50", Offset = "0x1C92A50", VA = "0x1C92A50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000563")]
			[Address(RVA = "0x1C92A58", Offset = "0x1C92A58", VA = "0x1C92A58")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6000564")]
			[Address(RVA = "0x1C92A64", Offset = "0x1C92A64", VA = "0x1C92A64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		public bool Validate
		{
			[Token(Token = "0x6000565")]
			[Address(RVA = "0x1C92A6C", Offset = "0x1C92A6C", VA = "0x1C92A6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000566")]
			[Address(RVA = "0x1C92A74", Offset = "0x1C92A74", VA = "0x1C92A74")]
			set
			{
			}
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x1C92A80", Offset = "0x1C92A80", VA = "0x1C92A80")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x1C92AE0", Offset = "0x1C92AE0", VA = "0x1C92AE0")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x1C92C9C", Offset = "0x1C92C9C", VA = "0x1C92C9C")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x1C92D10", Offset = "0x1C92D10", VA = "0x1C92D10")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x1C92DBC", Offset = "0x1C92DBC", VA = "0x1C92DBC")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x1C92B98", Offset = "0x1C92B98", VA = "0x1C92B98")]
		private void Init()
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x1C92FA0", Offset = "0x1C92FA0", VA = "0x1C92FA0")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x1C93028", Offset = "0x1C93028", VA = "0x1C93028")]
		private void Indent()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x1C93040", Offset = "0x1C93040", VA = "0x1C93040")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x1C930D8", Offset = "0x1C930D8", VA = "0x1C930D8")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x1C930E0", Offset = "0x1C930E0", VA = "0x1C930E0")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x1C93178", Offset = "0x1C93178", VA = "0x1C93178")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x1C93434", Offset = "0x1C93434", VA = "0x1C93434")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x1C9344C", Offset = "0x1C9344C", VA = "0x1C9344C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x1C934BC", Offset = "0x1C934BC", VA = "0x1C934BC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x1C935A4", Offset = "0x1C935A4", VA = "0x1C935A4")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x1C9015C", Offset = "0x1C9015C", VA = "0x1C9015C")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x1C90720", Offset = "0x1C90720", VA = "0x1C90720")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x1C8FDB0", Offset = "0x1C8FDB0", VA = "0x1C8FDB0")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x1C93640", Offset = "0x1C93640", VA = "0x1C93640")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x1C8FF48", Offset = "0x1C8FF48", VA = "0x1C8FF48")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x1C90524", Offset = "0x1C90524", VA = "0x1C90524")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x1C93720", Offset = "0x1C93720", VA = "0x1C93720")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x1C93804", Offset = "0x1C93804", VA = "0x1C93804")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x1C938E8", Offset = "0x1C938E8", VA = "0x1C938E8")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x1C939CC", Offset = "0x1C939CC", VA = "0x1C939CC")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x1C93AB0", Offset = "0x1C93AB0", VA = "0x1C93AB0")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x20000DD")]
	internal class FsmContext
	{
		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x24C708C", Offset = "0x24C708C", VA = "0x24C708C")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	internal class Lexer
	{
		[Token(Token = "0x200042F")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x1700009E")]
		public bool AllowComments
		{
			[Token(Token = "0x6000583")]
			[Address(RVA = "0x1C93BE4", Offset = "0x1C93BE4", VA = "0x1C93BE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000584")]
			[Address(RVA = "0x1C93BEC", Offset = "0x1C93BEC", VA = "0x1C93BEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6000585")]
			[Address(RVA = "0x1C93BF8", Offset = "0x1C93BF8", VA = "0x1C93BF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000586")]
			[Address(RVA = "0x1C93C00", Offset = "0x1C93C00", VA = "0x1C93C00")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public bool EndOfInput
		{
			[Token(Token = "0x6000587")]
			[Address(RVA = "0x1C93C0C", Offset = "0x1C93C0C", VA = "0x1C93C0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A1")]
		public int Token
		{
			[Token(Token = "0x6000588")]
			[Address(RVA = "0x1C93C14", Offset = "0x1C93C14", VA = "0x1C93C14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A2")]
		public string StringValue
		{
			[Token(Token = "0x6000589")]
			[Address(RVA = "0x1C93C1C", Offset = "0x1C93C1C", VA = "0x1C93C1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x1C93C24", Offset = "0x1C93C24", VA = "0x1C93C24")]
		static Lexer()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x1C91C84", Offset = "0x1C91C84", VA = "0x1C91C84")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x1C94810", Offset = "0x1C94810", VA = "0x1C94810")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x1C93C28", Offset = "0x1C93C28", VA = "0x1C93C28")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x1C948A0", Offset = "0x1C948A0", VA = "0x1C948A0")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0x1C949A0", Offset = "0x1C949A0", VA = "0x1C949A0")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0x1C94BB0", Offset = "0x1C94BB0", VA = "0x1C94BB0")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x1C94C5C", Offset = "0x1C94C5C", VA = "0x1C94C5C")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x1C94D9C", Offset = "0x1C94D9C", VA = "0x1C94D9C")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x1C94E9C", Offset = "0x1C94E9C", VA = "0x1C94E9C")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x1C94F20", Offset = "0x1C94F20", VA = "0x1C94F20")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x1C9501C", Offset = "0x1C9501C", VA = "0x1C9501C")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x1C950B4", Offset = "0x1C950B4", VA = "0x1C950B4")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x1C95174", Offset = "0x1C95174", VA = "0x1C95174")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x1C951E4", Offset = "0x1C951E4", VA = "0x1C951E4")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x1C95254", Offset = "0x1C95254", VA = "0x1C95254")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x1C952C4", Offset = "0x1C952C4", VA = "0x1C952C4")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x1C95334", Offset = "0x1C95334", VA = "0x1C95334")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x1C953A4", Offset = "0x1C953A4", VA = "0x1C953A4")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x1C95414", Offset = "0x1C95414", VA = "0x1C95414")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x1C95484", Offset = "0x1C95484", VA = "0x1C95484")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x1C954F4", Offset = "0x1C954F4", VA = "0x1C954F4")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x1C95564", Offset = "0x1C95564", VA = "0x1C95564")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1C955D4", Offset = "0x1C955D4", VA = "0x1C955D4")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x1C95680", Offset = "0x1C95680", VA = "0x1C95680")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x1C956F0", Offset = "0x1C956F0", VA = "0x1C956F0")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x1C9583C", Offset = "0x1C9583C", VA = "0x1C9583C")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x1C959C0", Offset = "0x1C959C0", VA = "0x1C959C0")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x1C95A6C", Offset = "0x1C95A6C", VA = "0x1C95A6C")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x1C95AE4", Offset = "0x1C95AE4", VA = "0x1C95AE4")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x1C95B64", Offset = "0x1C95B64", VA = "0x1C95B64")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x1C95BD0", Offset = "0x1C95BD0", VA = "0x1C95BD0")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x1C95C3C", Offset = "0x1C95C3C", VA = "0x1C95C3C")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x1C94B78", Offset = "0x1C94B78", VA = "0x1C94B78")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x1C95CB8", Offset = "0x1C95CB8", VA = "0x1C95CB8")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x1C923A4", Offset = "0x1C923A4", VA = "0x1C923A4")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x1C94D90", Offset = "0x1C94D90", VA = "0x1C94D90")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	internal enum ParserToken
	{
		[Token(Token = "0x40004C5")]
		None = 65536,
		[Token(Token = "0x40004C6")]
		Number,
		[Token(Token = "0x40004C7")]
		True,
		[Token(Token = "0x40004C8")]
		False,
		[Token(Token = "0x40004C9")]
		Null,
		[Token(Token = "0x40004CA")]
		CharSeq,
		[Token(Token = "0x40004CB")]
		Char,
		[Token(Token = "0x40004CC")]
		Text,
		[Token(Token = "0x40004CD")]
		Object,
		[Token(Token = "0x40004CE")]
		ObjectPrime,
		[Token(Token = "0x40004CF")]
		Pair,
		[Token(Token = "0x40004D0")]
		PairRest,
		[Token(Token = "0x40004D1")]
		Array,
		[Token(Token = "0x40004D2")]
		ArrayPrime,
		[Token(Token = "0x40004D3")]
		Value,
		[Token(Token = "0x40004D4")]
		ValueRest,
		[Token(Token = "0x40004D5")]
		String,
		[Token(Token = "0x40004D6")]
		End,
		[Token(Token = "0x40004D7")]
		Epsilon
	}
}
namespace VRConsole
{
	[Token(Token = "0x20000E0")]
	public class VRConsoleConsoleMessage : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image messageIcon_Image;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text messageText_Text;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button showStackTrace_Button;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite infoSprite;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite warningSprite;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite errorSprite;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color infoColor;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color warningColor;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color errorColor;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LogType messageLogType;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string thisMessageStackTrace;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string wholeMessage;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool hovering;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float timeHovered;

		[Token(Token = "0x40004E6")]
		private const float hoverTimeRequiredToShowWholeMessage = 0.5f;

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x23850B8", Offset = "0x23850B8", VA = "0x23850B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x238524C", Offset = "0x238524C", VA = "0x238524C")]
		public void SetMessage(string message, string stackTrace, LogType messageType)
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x2385440", Offset = "0x2385440", VA = "0x2385440")]
		private void ShowStackTraceOnConsole()
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x2385510", Offset = "0x2385510", VA = "0x2385510", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x238551C", Offset = "0x238551C", VA = "0x238551C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x23855B0", Offset = "0x23855B0", VA = "0x23855B0")]
		public VRConsoleConsoleMessage()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class VRConsoleExampleSceneErrorProducer : MonoBehaviour
	{
		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LogType logType;

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x23855B8", Offset = "0x23855B8", VA = "0x23855B8")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x23856C4", Offset = "0x23856C4", VA = "0x23856C4")]
		public VRConsoleExampleSceneErrorProducer()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	[ExecuteInEditMode]
	public class VRConsoleMessageUIResizer : MonoBehaviour
	{
		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform RootCanvasRectTransform;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GridLayoutGroup LayoutGroup;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoxCollider ConsoleMessageBoxCollider;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform StackTraceTextRectTransform;

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x23856CC", Offset = "0x23856CC", VA = "0x23856CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x2385834", Offset = "0x2385834", VA = "0x2385834")]
		public VRConsoleMessageUIResizer()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class VRConsoleRuntimeConsole : MonoBehaviour
	{
		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E94FC", Offset = "0x16E94FC")]
		private sealed class <SetStackTraceContentSizeDeltaAfterOneFrame>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRConsoleRuntimeConsole <>4__this;

			[Token(Token = "0x1700042A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9E")]
				[Address(RVA = "0x2386C00", Offset = "0x2386C00", VA = "0x2386C00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA0")]
				[Address(RVA = "0x2386C68", Offset = "0x2386C68", VA = "0x2386C68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x23864D4", Offset = "0x23864D4", VA = "0x23864D4")]
			[DebuggerHidden]
			public <SetStackTraceContentSizeDeltaAfterOneFrame>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x2386AF8", Offset = "0x2386AF8", VA = "0x2386AF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x2386AFC", Offset = "0x2386AFC", VA = "0x2386AFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x2386C08", Offset = "0x2386C08", VA = "0x2386C08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E950C", Offset = "0x16E950C")]
		private sealed class <SetWholeMessageBackgroundSizeDeltaAfterOneFrame>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRConsoleRuntimeConsole <>4__this;

			[Token(Token = "0x1700042C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA4")]
				[Address(RVA = "0x2386DDC", Offset = "0x2386DDC", VA = "0x2386DDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA6")]
				[Address(RVA = "0x2386E44", Offset = "0x2386E44", VA = "0x2386E44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x2386500", Offset = "0x2386500", VA = "0x2386500")]
			[DebuggerHidden]
			public <SetWholeMessageBackgroundSizeDeltaAfterOneFrame>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0x2386C70", Offset = "0x2386C70", VA = "0x2386C70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x2386C74", Offset = "0x2386C74", VA = "0x2386C74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x2386DE4", Offset = "0x2386DE4", VA = "0x2386DE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB69C", Offset = "0x16EB69C")]
		public bool JumpToNewestLog;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EB6D4", Offset = "0x16EB6D4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EB6D4", Offset = "0x16EB6D4")]
		public bool ShowInfos;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ShowWarnings;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool ShowErrors;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Transform scrollViewContent;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public GameObject consoleMessagePrefab;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public RectTransform messagesContent_RectTransform;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Scrollbar MessagesScrollBar;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public RectTransform stackTraceContent_RectTransform;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public RectTransform stackTraceText_RectTransform;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Text stackTrace_Text;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Toggle showInfoMessagesToggle;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Toggle showWarningMessagesToggle;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Toggle showErrorMessagesToggle;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Text infoMessagesAmount_Text;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Text warningMessagesAmount_Text;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Text errorMessagesAmount_Text;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Image infoToggleEnabledOverlay_Image;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Image warningToggleEnabledOverlay_Image;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Image errorToggleEnabledOverlay_Image;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Button messagesUp_Button;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Button messagesDown_Button;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Button stackTraceUp_Button;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Button stackTraceDown_Button;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public Scrollbar messages_ScrollBar;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Scrollbar stackTrace_ScrollBar;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Image WholeMessageBackgroundImage;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Text WholeMessageText;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<string> consoleMessages;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<string> messageStackTraces;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<LogType> consoleMessageTypes;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<GameObject> instantiatedMessageObjects;

		[Token(Token = "0x400050C")]
		private const float messagesScrollBarIncrement = 0.02f;

		[Token(Token = "0x400050D")]
		private const float scrollViewHeight = 90f;

		[Token(Token = "0x400050E")]
		private const float wholeMessageBackGroundExpandConstant = 5f;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Camera camera;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool showing;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Plane[] frustum;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Collider fingerPointArea;

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x238583C", Offset = "0x238583C", VA = "0x238583C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x23858B8", Offset = "0x23858B8", VA = "0x23858B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x238592C", Offset = "0x238592C", VA = "0x238592C")]
		private void OnCameraChanged(object cam)
		{
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x23859A8", Offset = "0x23859A8", VA = "0x23859A8")]
		private void HandleLogMessage(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x2385A64", Offset = "0x2385A64", VA = "0x2385A64")]
		private void InstantiateNewMessageToConsole(string message, string messageTrace, LogType logtype)
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x2385F28", Offset = "0x2385F28", VA = "0x2385F28")]
		private void BindListeners()
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x2386174", Offset = "0x2386174", VA = "0x2386174")]
		public void ClearWholeLog()
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x238629C", Offset = "0x238629C", VA = "0x238629C")]
		public void UpdateWholeLog()
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x2385D8C", Offset = "0x2385D8C", VA = "0x2385D8C")]
		private void UpdateConsoleMessageColliders()
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x2385BFC", Offset = "0x2385BFC", VA = "0x2385BFC")]
		public void UpdateLogTextFieldAmounts()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x23854C4", Offset = "0x23854C4", VA = "0x23854C4")]
		public void SetStackTraceText(string stackTrace)
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x2385580", Offset = "0x2385580", VA = "0x2385580")]
		public void HideWholeMessageTextAndBG()
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x2385180", Offset = "0x2385180", VA = "0x2385180")]
		public void SetAndShowWholeDebugMessage(string wholeMessage, UnityEngine.Vector3 messageLocation)
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x23863DC", Offset = "0x23863DC", VA = "0x23863DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1700864", Offset = "0x1700864")]
		private IEnumerator SetStackTraceContentSizeDeltaAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x2386458", Offset = "0x2386458", VA = "0x2386458")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17008C8", Offset = "0x17008C8")]
		private IEnumerator SetWholeMessageBackgroundSizeDeltaAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x238652C", Offset = "0x238652C", VA = "0x238652C")]
		public void ShowErrorMessagesToggled(bool isOn)
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x2386578", Offset = "0x2386578", VA = "0x2386578")]
		public void ShowWarningMessagesToggled(bool isOn)
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x23865C4", Offset = "0x23865C4", VA = "0x23865C4")]
		public void ShowInfoMessagesToggled(bool isOn)
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x2386610", Offset = "0x2386610", VA = "0x2386610")]
		public void MoveMessagesUpButtonPressed()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x2386660", Offset = "0x2386660", VA = "0x2386660")]
		public void MoveMessagesDownButtonPressed()
		{
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x23866B0", Offset = "0x23866B0", VA = "0x23866B0")]
		public void StackTraceUpButtonPressed()
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x2386700", Offset = "0x2386700", VA = "0x2386700")]
		public void StackTraceDownButtonPressed()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x2386750", Offset = "0x2386750", VA = "0x2386750")]
		private void Update()
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x23869BC", Offset = "0x23869BC", VA = "0x23869BC")]
		public VRConsoleRuntimeConsole()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class VRConsoleUICollisionInteractor : MonoBehaviour
	{
		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E951C", Offset = "0x16E951C")]
		private sealed class <TickSubmit>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRConsoleUICollisionInteractor <>4__this;

			[Token(Token = "0x4001AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private PointerEventData <pointData>5__2;

			[Token(Token = "0x1700042E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EAA")]
				[Address(RVA = "0x23875D8", Offset = "0x23875D8", VA = "0x23875D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EAC")]
				[Address(RVA = "0x2387640", Offset = "0x2387640", VA = "0x2387640", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x238738C", Offset = "0x238738C", VA = "0x238738C")]
			[DebuggerHidden]
			public <TickSubmit>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0x23873C8", Offset = "0x23873C8", VA = "0x23873C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0x23873CC", Offset = "0x23873CC", VA = "0x23873CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x23875E0", Offset = "0x23875E0", VA = "0x23875E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000513")]
		public const string ACTIVATOR_TAG = "Finger";

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float submitTickRate;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool tickIfTriggered;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float submitDelaytime;

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x2386E4C", Offset = "0x2386E4C", VA = "0x2386E4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x2386E60", Offset = "0x2386E60", VA = "0x2386E60")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x238717C", Offset = "0x238717C", VA = "0x238717C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x2387100", Offset = "0x2387100", VA = "0x2387100")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x170092C", Offset = "0x170092C")]
		private IEnumerator TickSubmit()
		{
			return null;
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x23873B8", Offset = "0x23873B8", VA = "0x23873B8")]
		public VRConsoleUICollisionInteractor()
		{
		}
	}
}
namespace Sigtrap.Editors.ShaderStripper
{
	[Token(Token = "0x20000E5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x16E5E4C", Offset = "0x16E5E4C")]
	public class ShaderForceKeywords : ShaderStripperBase
	{
		[Serializable]
		[Token(Token = "0x2000433")]
		private struct ForceBuiltin
		{
			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BuiltinShaderDefine defineToMatch;

			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public BuiltinShaderDefine defineToForce;

			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8508", Offset = "0x16F8508")]
			public bool invertMatch;

			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8540", Offset = "0x16F8540")]
			public bool invertForce;
		}

		[Serializable]
		[Token(Token = "0x2000434")]
		private struct ForceKeyword
		{
			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string keywordToMatch;

			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string keywordToForce;

			[Token(Token = "0x4001ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8578", Offset = "0x16F8578")]
			public bool invertMatch;

			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F85B0", Offset = "0x16F85B0")]
			public bool invertForce;
		}

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ForceBuiltin[] _forceBuiltins;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ForceKeyword[] _forceKeywords;

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x2AC3050", Offset = "0x2AC3050", VA = "0x2AC3050")]
		public ShaderForceKeywords()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class ShaderLog
	{
		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> log;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EB8C4", Offset = "0x16EB8C4")]
		private string <logName>k__BackingField;

		[Token(Token = "0x170000A3")]
		public string logName
		{
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0x2AC3080", Offset = "0x2AC3080", VA = "0x2AC3080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700990", Offset = "0x1700990")]
			get
			{
				return null;
			}
			[Token(Token = "0x60005D8")]
			[Address(RVA = "0x2AC3088", Offset = "0x2AC3088", VA = "0x2AC3088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17009A0", Offset = "0x17009A0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public int Count
		{
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0x2AC3090", Offset = "0x2AC3090", VA = "0x2AC3090")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x2AC30E0", Offset = "0x2AC30E0", VA = "0x2AC30E0")]
		public ShaderLog(string logName)
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x2AC3178", Offset = "0x2AC3178", VA = "0x2AC3178")]
		public void Add(string s)
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x2AC31E0", Offset = "0x2AC31E0", VA = "0x2AC31E0")]
		public void Clear()
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x2AC3238", Offset = "0x2AC3238", VA = "0x2AC3238")]
		public void Insert(int index, string s)
		{
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x2AC32A8", Offset = "0x2AC32A8", VA = "0x2AC32A8")]
		public bool Contains(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x2AC3310", Offset = "0x2AC3310", VA = "0x2AC3310")]
		public string[] ToArray()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E7")]
	public abstract class ShaderStripperBase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000435")]
		protected class StringMatch
		{
			[Token(Token = "0x2000613")]
			public enum MatchType
			{
				[Token(Token = "0x40022C3")]
				EQUALS,
				[Token(Token = "0x40022C4")]
				CONTAINS,
				[Token(Token = "0x40022C5")]
				STARTSWITH,
				[Token(Token = "0x40022C6")]
				ENDSWITH
			}

			[Token(Token = "0x4001AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MatchType matchType;

			[Token(Token = "0x4001AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string namePattern;

			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool caseInsensitive;

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x2AC337C", Offset = "0x2AC337C", VA = "0x2AC337C")]
			public bool Evaluate(string name)
			{
				return default(bool);
			}

			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0x2AC3474", Offset = "0x2AC3474", VA = "0x2AC3474")]
			public StringMatch()
			{
			}
		}

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private bool _expanded;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[HideInInspector]
		private int _order;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _active;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _notes;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _logOutput;

		[Token(Token = "0x170000A5")]
		public bool active
		{
			[Token(Token = "0x60005E0")]
			[Address(RVA = "0x2AC3368", Offset = "0x2AC3368", VA = "0x2AC3368")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005E1")]
			[Address(RVA = "0x2AC3370", Offset = "0x2AC3370", VA = "0x2AC3370")]
			set
			{
			}
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x2AC3068", Offset = "0x2AC3068", VA = "0x2AC3068")]
		protected ShaderStripperBase()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x16E5E90", Offset = "0x16E5E90")]
	public class ShaderStripperPath : ShaderStripperBase
	{
		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StringMatch[] _pathBlacklist;

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x2AC347C", Offset = "0x2AC347C", VA = "0x2AC347C")]
		public ShaderStripperPath()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x16E5ED4", Offset = "0x16E5ED4")]
	public class ShaderStripperPlatform : ShaderStripperBase
	{
		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EB984", Offset = "0x16EB984")]
		private bool _whitelist;

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x2AC3494", Offset = "0x2AC3494", VA = "0x2AC3494")]
		public ShaderStripperPlatform()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x16E5F18", Offset = "0x16E5F18")]
	public class ShaderStripperSimple : ShaderStripperBase
	{
		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EB9D0", Offset = "0x16EB9D0")]
		private List<StringMatch> _blacklistedShaderNames;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBA1C", Offset = "0x16EBA1C")]
		private List<PassType> _blacklistedPassTypes;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBA68", Offset = "0x16EBA68")]
		private List<string> _blacklistedKeywords;

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x2AC34AC", Offset = "0x2AC34AC", VA = "0x2AC34AC")]
		public ShaderStripperSimple()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x16E5F5C", Offset = "0x16E5F5C")]
	public class ShaderStripperVariantCollection : ShaderStripperBase, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBAB4", Offset = "0x16EBAB4")]
		private string _mergeToFile;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBB00", Offset = "0x16EBB00")]
		private List<ShaderVariantCollection> _whitelistedCollections;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private List<string> _collectionPaths;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBB84", Offset = "0x16EBB84")]
		private bool _stripHidden;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBBD0", Offset = "0x16EBBD0")]
		private bool _allowVrVariants;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBC1C", Offset = "0x16EBC1C")]
		private bool _allowInstancedVariants;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBC68", Offset = "0x16EBC68")]
		private StringMatch[] _ignoreShadersByName;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBCB4", Offset = "0x16EBCB4")]
		private List<PassType> _ignorePassTypes;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _valid;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _dirty;

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x2AC34C4", Offset = "0x2AC34C4", VA = "0x2AC34C4", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x2AC34D0", Offset = "0x2AC34D0", VA = "0x2AC34D0", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x2AC34DC", Offset = "0x2AC34DC", VA = "0x2AC34DC")]
		public ShaderStripperVariantCollection()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x16E5FA0", Offset = "0x16E5FA0")]
	public class ShaderStripper_BlacklistExcept : ShaderStripperBase, ISerializationCallbackReceiver
	{
		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBD00", Offset = "0x16EBD00")]
		private string _mergeToFile;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBD4C", Offset = "0x16EBD4C")]
		private List<ShaderVariantCollection> _blacklistedCollections;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private List<string> _collectionPaths;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBDD0", Offset = "0x16EBDD0")]
		private bool _stripHidden;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBE1C", Offset = "0x16EBE1C")]
		private bool _allowVrVariants;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBE68", Offset = "0x16EBE68")]
		private bool _allowInstancedVariants;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		private bool _valid;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _dirty;

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x2AC34F4", Offset = "0x2AC34F4", VA = "0x2AC34F4", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x2AC3500", Offset = "0x2AC3500", VA = "0x2AC3500", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x2AC350C", Offset = "0x2AC350C", VA = "0x2AC350C")]
		public ShaderStripper_BlacklistExcept()
		{
		}
	}
}
namespace TubeRendererExamples
{
	[Token(Token = "0x20000ED")]
	public class CameraMan : MonoBehaviour
	{
		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEngine.Vector3 focusPoint;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool hover;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float hoverRange;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera _cam;

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x3264B60", Offset = "0x3264B60", VA = "0x3264B60")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x3264C38", Offset = "0x3264C38", VA = "0x3264C38")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x3264DDC", Offset = "0x3264DDC", VA = "0x3264DDC")]
		public CameraMan()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class Digestion : MonoBehaviour
	{
		[Token(Token = "0x400053C")]
		private const int POINT_COUNT = 61;

		[Token(Token = "0x400053D")]
		private const float DISTORTION_OFFSET = 0.7f;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TubeRenderer _tube;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] _normalizedRadiuses;

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x3264E64", Offset = "0x3264E64", VA = "0x3264E64")]
		private void Start()
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x32654A4", Offset = "0x32654A4", VA = "0x32654A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x32656A4", Offset = "0x32656A4", VA = "0x32656A4")]
		private void Distort(UnityEngine.Vector3[] vertices, UnityEngine.Vector3[] normals, Vector4[] tangents)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x3265FB0", Offset = "0x3265FB0", VA = "0x3265FB0")]
		public Digestion()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class Flower : MonoBehaviour
	{
		[Token(Token = "0x4000540")]
		private const int HAIR_COUNT = 800;

		[Token(Token = "0x4000541")]
		private const int POINT_COUNT = 6;

		[Token(Token = "0x4000542")]
		private const float HAIR_RADIUS = 0.045f;

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x3265FB8", Offset = "0x3265FB8", VA = "0x3265FB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x32665D4", Offset = "0x32665D4", VA = "0x32665D4")]
		public Flower()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class Helpers
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x32665DC", Offset = "0x32665DC", VA = "0x32665DC")]
		public static Material CreateVertexColorMaterial()
		{
			return null;
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x3265210", Offset = "0x3265210", VA = "0x3265210")]
		public static Texture2D CreateTileTexture(int sqrTileCount)
		{
			return null;
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x32666F0", Offset = "0x32666F0", VA = "0x32666F0")]
		public Helpers()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class Herd : MonoBehaviour
	{
		[Token(Token = "0x2000436")]
		private class Critter
		{
			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TubeRenderer tube;

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0x32668C8", Offset = "0x32668C8", VA = "0x32668C8")]
			public Critter()
			{
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x3266B84", Offset = "0x3266B84", VA = "0x3266B84")]
			public void Update()
			{
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0x3266D84", Offset = "0x3266D84", VA = "0x3266D84")]
			private UnityEngine.Vector3 SmoothRandom(float t)
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x4000543")]
		private const int CRITTER_COUNT = 20;

		[Token(Token = "0x4000544")]
		private const int POINT_COUNT = 50;

		[Token(Token = "0x4000545")]
		private const float POINT_SPACING = 0.05f;

		[Token(Token = "0x4000546")]
		private const float DISPERSION = 0.3f;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Critter[] _critters;

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x32666F8", Offset = "0x32666F8", VA = "0x32666F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x3266B1C", Offset = "0x3266B1C", VA = "0x3266B1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x3266D7C", Offset = "0x3266D7C", VA = "0x3266D7C")]
		public Herd()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public class Paw : MonoBehaviour
	{
		[Token(Token = "0x4000548")]
		private const int TUBE_COUNT = 5;

		[Token(Token = "0x4000549")]
		private const int POINT_COUNT = 24;

		[Token(Token = "0x400054A")]
		private const float RADIUS = 1f;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TubeRenderer _tube;

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x3266F80", Offset = "0x3266F80", VA = "0x3266F80")]
		private void Start()
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x32673BC", Offset = "0x32673BC", VA = "0x32673BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x3267650", Offset = "0x3267650", VA = "0x3267650")]
		public Paw()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class Skin : MonoBehaviour
	{
		[Token(Token = "0x400054C")]
		private const int POINT_COUNT = 64;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform[] _bones;

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x3267658", Offset = "0x3267658", VA = "0x3267658")]
		private void Start()
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x3267F20", Offset = "0x3267F20", VA = "0x3267F20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x32681B8", Offset = "0x32681B8", VA = "0x32681B8")]
		public Skin()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class Slide : MonoBehaviour
	{
		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E952C", Offset = "0x16E952C")]
		private sealed class <RainCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Slide <>4__this;

			[Token(Token = "0x17000430")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB5")]
				[Address(RVA = "0x3268938", Offset = "0x3268938", VA = "0x3268938", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000431")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB7")]
				[Address(RVA = "0x32689A0", Offset = "0x32689A0", VA = "0x32689A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x32685E8", Offset = "0x32685E8", VA = "0x32685E8")]
			[DebuggerHidden]
			public <RainCoroutine>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x32686CC", Offset = "0x32686CC", VA = "0x32686CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x32686D0", Offset = "0x32686D0", VA = "0x32686D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x3268940", Offset = "0x3268940", VA = "0x3268940", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E953C", Offset = "0x16E953C")]
		private sealed class <WaitAndDestroy>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject go;

			[Token(Token = "0x17000432")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EBB")]
				[Address(RVA = "0x3268A7C", Offset = "0x3268A7C", VA = "0x3268A7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000433")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EBD")]
				[Address(RVA = "0x3268AE4", Offset = "0x3268AE4", VA = "0x3268AE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x3268690", Offset = "0x3268690", VA = "0x3268690")]
			[DebuggerHidden]
			public <WaitAndDestroy>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0x32689A8", Offset = "0x32689A8", VA = "0x32689A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x32689AC", Offset = "0x32689AC", VA = "0x32689AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x3268A84", Offset = "0x3268A84", VA = "0x3268A84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _tileMaterial;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int POINT_COUNT;

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x32681C0", Offset = "0x32681C0", VA = "0x32681C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x326856C", Offset = "0x326856C", VA = "0x326856C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17009B0", Offset = "0x17009B0")]
		private IEnumerator RainCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x3268614", Offset = "0x3268614", VA = "0x3268614")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1700A14", Offset = "0x1700A14")]
		private IEnumerator WaitAndDestroy(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x32686BC", Offset = "0x32686BC", VA = "0x32686BC")]
		public Slide()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class Spline : MonoBehaviour
	{
		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E954C", Offset = "0x16E954C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TubeRenderer tube;

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x3268DB8", Offset = "0x3268DB8", VA = "0x3268DB8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0x3268F3C", Offset = "0x3268F3C", VA = "0x3268F3C")]
			internal void <Start>b__0(UnityEngine.Vector3[] points)
			{
			}
		}

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SplineMaker _splineMaker;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityEngine.Vector3[] _anchorPoints;

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x3268AEC", Offset = "0x3268AEC", VA = "0x3268AEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x3268DC0", Offset = "0x3268DC0", VA = "0x3268DC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x3268F34", Offset = "0x3268F34", VA = "0x3268F34")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class Starfish : MonoBehaviour
	{
		[Token(Token = "0x4000552")]
		private const int ARM_COUNT = 5;

		[Token(Token = "0x4000553")]
		private const float ARM_OFFSET = 0.1f;

		[Token(Token = "0x4000554")]
		private const int POINT_COUNT = 20;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TubeRenderer[] _armTubes;

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x3268F58", Offset = "0x3268F58", VA = "0x3268F58")]
		private void Start()
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x3269690", Offset = "0x3269690", VA = "0x3269690")]
		private void Update()
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x3269B04", Offset = "0x3269B04", VA = "0x3269B04")]
		private Color PerlinColorAtOffset(float offset)
		{
			return default(Color);
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x3269C24", Offset = "0x3269C24", VA = "0x3269C24")]
		public Starfish()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class Volume : MonoBehaviour
	{
		[Token(Token = "0x4000556")]
		private const int POINT_COUNT = 16;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TubeRenderer _outerTube;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TubeRenderer _innerTube;

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x3269C2C", Offset = "0x3269C2C", VA = "0x3269C2C")]
		private void Start()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x326A11C", Offset = "0x326A11C", VA = "0x326A11C")]
		private void Update()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x326A310", Offset = "0x326A310", VA = "0x326A310")]
		public Volume()
		{
		}
	}
}
namespace UnityChan
{
	[Token(Token = "0x20000F8")]
	public class SpringBone : MonoBehaviour
	{
		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform child;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 boneAxis;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float radius;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isUseEachBoneForceSettings;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float stiffnessForce;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float dragForce;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public UnityEngine.Vector3 springForce;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SpringCollider[] colliders;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool debug;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float threshold;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float springLength;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion localRotation;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform trs;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.Vector3 currTipPos;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private UnityEngine.Vector3 prevTipPos;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform org;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SpringManager managerRef;

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x326AEA0", Offset = "0x326AEA0", VA = "0x326AEA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x326AF1C", Offset = "0x326AF1C", VA = "0x326AF1C")]
		private SpringManager GetParentSpringManager(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x326B030", Offset = "0x326B030", VA = "0x326B030")]
		private void Start()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x326B138", Offset = "0x326B138", VA = "0x326B138")]
		public void UpdateSpring()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x326B8A4", Offset = "0x326B8A4", VA = "0x326B8A4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x326B8EC", Offset = "0x326B8EC", VA = "0x326B8EC")]
		public SpringBone()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class SpringCollider : MonoBehaviour
	{
		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x326B9A8", Offset = "0x326B9A8", VA = "0x326B9A8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x326B9F8", Offset = "0x326B9F8", VA = "0x326B9F8")]
		public SpringCollider()
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class SpringManager : MonoBehaviour
	{
		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float dynamicRatio;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float stiffnessForce;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve stiffnessCurve;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float dragForce;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve dragCurve;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SpringBone[] springBones;

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x326BA08", Offset = "0x326BA08", VA = "0x326BA08")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x326BA8C", Offset = "0x326BA8C", VA = "0x326BA8C")]
		public SpringManager()
		{
		}
	}
}
namespace ShaderControl
{
	[Token(Token = "0x20000FB")]
	[ExecuteInEditMode]
	public class Effect : MonoBehaviour
	{
		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] keywords;

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x2AC2A7C", Offset = "0x2AC2A7C", VA = "0x2AC2A7C")]
		private void Start()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x2AC2AE4", Offset = "0x2AC2AE4", VA = "0x2AC2AE4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x2AC2B80", Offset = "0x2AC2B80", VA = "0x2AC2B80")]
		public Effect()
		{
		}
	}
}
namespace RhythmTool
{
	[Token(Token = "0x20000FC")]
	public abstract class Analysis : MonoBehaviour
	{
		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EBEB4", Offset = "0x16EBEB4")]
		private int <sampleRate>k__BackingField;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EBEC4", Offset = "0x16EBEC4")]
		private int <frameSize>k__BackingField;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EBED4", Offset = "0x16EBED4")]
		private int <hopSize>k__BackingField;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EBEE4", Offset = "0x16EBEE4")]
		private int <frameIndex>k__BackingField;

		[Token(Token = "0x170000A6")]
		public Track track
		{
			[Token(Token = "0x600061C")]
			[Address(RVA = "0x1A99214", Offset = "0x1A99214", VA = "0x1A99214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		public int sampleRate
		{
			[Token(Token = "0x600061D")]
			[Address(RVA = "0x1A99220", Offset = "0x1A99220", VA = "0x1A99220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700A78", Offset = "0x1700A78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600061E")]
			[Address(RVA = "0x1A99228", Offset = "0x1A99228", VA = "0x1A99228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700A88", Offset = "0x1700A88")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public int frameSize
		{
			[Token(Token = "0x600061F")]
			[Address(RVA = "0x1A99230", Offset = "0x1A99230", VA = "0x1A99230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700A98", Offset = "0x1700A98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000620")]
			[Address(RVA = "0x1A99238", Offset = "0x1A99238", VA = "0x1A99238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700AA8", Offset = "0x1700AA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public int hopSize
		{
			[Token(Token = "0x6000621")]
			[Address(RVA = "0x1A99240", Offset = "0x1A99240", VA = "0x1A99240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700AB8", Offset = "0x1700AB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000622")]
			[Address(RVA = "0x1A99248", Offset = "0x1A99248", VA = "0x1A99248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700AC8", Offset = "0x1700AC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public new abstract string name
		{
			[Token(Token = "0x6000623")]
			get;
		}

		[Token(Token = "0x170000AB")]
		protected int frameIndex
		{
			[Token(Token = "0x6000624")]
			[Address(RVA = "0x1A99250", Offset = "0x1A99250", VA = "0x1A99250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700AD8", Offset = "0x1700AD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000625")]
			[Address(RVA = "0x1A99258", Offset = "0x1A99258", VA = "0x1A99258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700AE8", Offset = "0x1700AE8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x1A99260", Offset = "0x1A99260", VA = "0x1A99260", Slot = "5")]
		public virtual void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x1A9926C", Offset = "0x1A9926C", VA = "0x1A9926C", Slot = "6")]
		public virtual void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x1A99274", Offset = "0x1A99274", VA = "0x1A99274")]
		protected float FrameIndexToSeconds(float frameIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6000629")]
		protected abstract Track GetTrack();

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x1A99290", Offset = "0x1A99290", VA = "0x1A99290")]
		protected Analysis()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	[ExecuteInEditMode]
	public abstract class Analysis<T> : Analysis where T : Feature
	{
		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EBEF4", Offset = "0x16EBEF4")]
		private Track<T> <track>k__BackingField;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> toAdd;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> toRemove;

		[Token(Token = "0x170000AC")]
		public new Track<T> track
		{
			[Token(Token = "0x600062B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700AF8", Offset = "0x1700AF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600062C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700B08", Offset = "0x1700B08")]
			private set
			{
			}
		}

		[Token(Token = "0x600062D")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x600062E")]
		protected sealed override Track GetTrack()
		{
			return null;
		}

		[Token(Token = "0x600062F")]
		protected void AddFeature(T feature)
		{
		}

		[Token(Token = "0x6000630")]
		protected void RemoveFeature(T feature)
		{
		}

		[Token(Token = "0x6000631")]
		private void Update()
		{
		}

		[Token(Token = "0x6000632")]
		protected Analysis()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class BeatTrack : Track<Beat>
	{
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x1A992A8", Offset = "0x1A992A8", VA = "0x1A992A8")]
		public BeatTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FF")]
	public class Beat : Feature
	{
		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float bpm;

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x1A99298", Offset = "0x1A99298", VA = "0x1A99298")]
		public Beat()
		{
		}
	}
	[Token(Token = "0x2000100")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6004", Offset = "0x16E6004")]
	public class BeatTracker : Analysis<Beat>
	{
		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] signalBuffer;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] signal;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] smoothedSignal;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] autoCorrelation;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] combFilter;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] lengthScore;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] offsetScore;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] signalWindow;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] offsetWindow;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] kernel;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float[] prevMagnitude;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float prevSpectralFlux;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int maxBeatLength;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int minBeatLength;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int beatLength;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int prevBeatLength;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int beatOffset;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int updateOffset;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int bufferSize;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int resolution;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int combElements;

		[Token(Token = "0x170000AD")]
		public override string name
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0x1A99318", Offset = "0x1A99318", VA = "0x1A99318", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x1A99360", Offset = "0x1A99360", VA = "0x1A99360", Slot = "5")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x1A996FC", Offset = "0x1A996FC", VA = "0x1A996FC", Slot = "6")]
		public override void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x1A9986C", Offset = "0x1A9986C", VA = "0x1A9986C")]
		private float GetSample(float[] magnitude)
		{
			return default(float);
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x1A99980", Offset = "0x1A99980", VA = "0x1A99980")]
		private void UpdateSignal()
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x1A99CD4", Offset = "0x1A99CD4", VA = "0x1A99CD4")]
		private void UpdateOffset()
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x1A99B04", Offset = "0x1A99B04", VA = "0x1A99B04")]
		private void UpdateLength()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x1A99FAC", Offset = "0x1A99FAC", VA = "0x1A99FAC")]
		private void UpdateAutoCorrelation()
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x1A9A154", Offset = "0x1A9A154", VA = "0x1A9A154")]
		private void UpdateLengthScore()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x1A9A380", Offset = "0x1A9A380", VA = "0x1A9A380")]
		public BeatTracker()
		{
		}
	}
	[Token(Token = "0x2000101")]
	public static class Bindings<T>
	{
		[Token(Token = "0x200043A")]
		private delegate T ObjectActivator(params object[] args);

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, ObjectActivator> bindings;

		[Token(Token = "0x600063F")]
		public static T GetBinding(params object[] args)
		{
			return (T)null;
		}

		[Token(Token = "0x6000640")]
		private static ObjectActivator GetCachedActivator(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000641")]
		private static ObjectActivator GetActivator(ConstructorInfo ctor)
		{
			return null;
		}

		[Token(Token = "0x6000642")]
		private static Type GetBindingType(Type featureType)
		{
			return null;
		}

		[Token(Token = "0x6000643")]
		private static void GetGenericBindingType(Type featureType)
		{
		}

		[Token(Token = "0x6000644")]
		private static ConstructorInfo GetConstructor(Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x2000102")]
	public class ChromaTrack : Track<Chroma>
	{
		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1A9A5B8", Offset = "0x1A9A5B8", VA = "0x1A9A5B8")]
		public ChromaTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000103")]
	public class Chroma : Feature
	{
		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Note note;

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1A9A3DC", Offset = "0x1A9A3DC", VA = "0x1A9A3DC")]
		public Chroma()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public enum Note
	{
		[Token(Token = "0x4000593")]
		A,
		[Token(Token = "0x4000594")]
		ASharp,
		[Token(Token = "0x4000595")]
		B,
		[Token(Token = "0x4000596")]
		C,
		[Token(Token = "0x4000597")]
		CSHARP,
		[Token(Token = "0x4000598")]
		D,
		[Token(Token = "0x4000599")]
		DSHARP,
		[Token(Token = "0x400059A")]
		E,
		[Token(Token = "0x400059B")]
		F,
		[Token(Token = "0x400059C")]
		FSHARP,
		[Token(Token = "0x400059D")]
		G,
		[Token(Token = "0x400059E")]
		GSHARP
	}
	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6050", Offset = "0x16E6050")]
	public class Chromagram : Analysis<Chroma>
	{
		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int startNote;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int endNote;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int bufferSize;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int downsampleFactor;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int chromaInterval;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] noteIndices;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] downsampled;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] spectrum;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] magnitude;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] window;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] pitchWindow;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] pitch;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float[] chroma;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int offset;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int[] chromaHistory;

		[Token(Token = "0x170000AE")]
		public override string name
		{
			[Token(Token = "0x6000648")]
			[Address(RVA = "0x1A9A628", Offset = "0x1A9A628", VA = "0x1A9A628", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x1A9A670", Offset = "0x1A9A670", VA = "0x1A9A670", Slot = "5")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x1A9AA60", Offset = "0x1A9AA60", VA = "0x1A9AA60", Slot = "6")]
		public override void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x1A9AAA8", Offset = "0x1A9AAA8", VA = "0x1A9AAA8")]
		private void Downsample(float[] samples)
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x1A9ABD0", Offset = "0x1A9ABD0", VA = "0x1A9ABD0")]
		private void UpdateChroma()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x1A9A9D4", Offset = "0x1A9A9D4", VA = "0x1A9A9D4")]
		private static int FrequencyToIndex(float frequency, int length, int samplerate)
		{
			return default(int);
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x1A9A954", Offset = "0x1A9A954", VA = "0x1A9A954")]
		private static float GetMidiFrequency(int index)
		{
			return default(float);
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x1A9B05C", Offset = "0x1A9B05C", VA = "0x1A9B05C")]
		public Chromagram()
		{
		}
	}
	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6088", Offset = "0x16E6088")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6088", Offset = "0x16E6088")]
	public class DebugDrawer : MonoBehaviour
	{
		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EBF04", Offset = "0x16EBF04")]
		private RhythmPlayer <rhythmPlayer>k__BackingField;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float width;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float height;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float padding;

		[Token(Token = "0x170000AF")]
		public RhythmPlayer rhythmPlayer
		{
			[Token(Token = "0x6000650")]
			[Address(RVA = "0x1A9B0C0", Offset = "0x1A9B0C0", VA = "0x1A9B0C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700B18", Offset = "0x1700B18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000651")]
			[Address(RVA = "0x1A9B0C8", Offset = "0x1A9B0C8", VA = "0x1A9B0C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700B28", Offset = "0x1700B28")]
			private set
			{
			}
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x1A9B0D0", Offset = "0x1A9B0D0", VA = "0x1A9B0D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x1A9B130", Offset = "0x1A9B130", VA = "0x1A9B130")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x1A9B524", Offset = "0x1A9B524", VA = "0x1A9B524")]
		public DebugDrawer()
		{
		}
	}
	[Token(Token = "0x2000107")]
	public abstract class TrackDrawer
	{
		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, TrackDrawer> trackDrawers;

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x2EA5028", Offset = "0x2EA5028", VA = "0x2EA5028")]
		public static void Draw(Track track, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x6000656")]
		protected abstract void DrawTrack(Track track, Rect rect, float start, float end);

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x2EA52B4", Offset = "0x2EA52B4", VA = "0x2EA52B4")]
		public static TrackDrawer GetTrackDrawer(Track track)
		{
			return null;
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x2EA5450", Offset = "0x2EA5450", VA = "0x2EA5450")]
		protected static float GetFeaturePosition(Feature feature, Rect rect, float start, float end)
		{
			return default(float);
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x2EA54B0", Offset = "0x2EA54B0", VA = "0x2EA54B0")]
		protected static void DrawRect(Rect position)
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x2EA5554", Offset = "0x2EA5554", VA = "0x2EA5554")]
		protected TrackDrawer()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class TrackDrawer<T> : TrackDrawer where T : Feature
	{
		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> features;

		[Token(Token = "0x600065C")]
		public TrackDrawer()
		{
		}

		[Token(Token = "0x600065D")]
		protected override void DrawTrack(Track track, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x600065E")]
		protected virtual void DrawTrack(Track<T> track, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x600065F")]
		protected virtual void DrawFeature(T feature, Rect rect, float start, float end)
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class OnsetDrawer : TrackDrawer<Onset>
	{
		[Token(Token = "0x6000660")]
		[Address(RVA = "0x1A9D578", Offset = "0x1A9D578", VA = "0x1A9D578", Slot = "6")]
		protected override void DrawFeature(Onset feature, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1A9D68C", Offset = "0x1A9D68C", VA = "0x1A9D68C")]
		public OnsetDrawer()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class ChromaDrawer : TrackDrawer<Chroma>
	{
		[Token(Token = "0x6000662")]
		[Address(RVA = "0x1A9A3E4", Offset = "0x1A9A3E4", VA = "0x1A9A3E4", Slot = "6")]
		protected override void DrawFeature(Chroma feature, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x1A9A568", Offset = "0x1A9A568", VA = "0x1A9A568")]
		public ChromaDrawer()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class ValueDrawer : TrackDrawer<Value>
	{
		[Token(Token = "0x6000664")]
		[Address(RVA = "0x2EA5D28", Offset = "0x2EA5D28", VA = "0x2EA5D28", Slot = "6")]
		protected override void DrawFeature(Value feature, Rect rect, float start, float end)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x2EA5E34", Offset = "0x2EA5E34", VA = "0x2EA5E34")]
		public ValueDrawer()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class Feature
	{
		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timestamp;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float length;

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x1A992A0", Offset = "0x1A992A0", VA = "0x1A992A0")]
		public Feature()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class LomontFFT
	{
		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float[] cosTable;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] sinTable;

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x1A9C79C", Offset = "0x1A9C79C", VA = "0x1A9C79C")]
		public void FFT(float[] data, bool forward)
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x1A9CC80", Offset = "0x1A9CC80", VA = "0x1A9CC80")]
		public void RealFFT(float[] data, bool forward)
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x1A9CD44", Offset = "0x1A9CD44", VA = "0x1A9CD44")]
		private void Reconstruct(float[] data, bool forward)
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x1A9CAC0", Offset = "0x1A9CAC0", VA = "0x1A9CAC0")]
		private void InitializeTables(int length)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x1A9CA24", Offset = "0x1A9CA24", VA = "0x1A9CA24")]
		private static void BitReverse(float[] data)
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x1A9CF54", Offset = "0x1A9CF54", VA = "0x1A9CF54")]
		private static void Swap(float[] data, int a, int b)
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1A9CFB0", Offset = "0x1A9CFB0", VA = "0x1A9CFB0")]
		public LomontFFT()
		{
		}
	}
	[Token(Token = "0x200010E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6114", Offset = "0x16E6114")]
	public class OnsetDetector : Analysis<Onset>
	{
		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EBF14", Offset = "0x16EBF14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBF14", Offset = "0x16EBF14")]
		public float normalization;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EBF68", Offset = "0x16EBF68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBF68", Offset = "0x16EBF68")]
		public float threshold;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EBFBC", Offset = "0x16EBFBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EBFBC", Offset = "0x16EBFBC")]
		public int bufferSize;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int start;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int end;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] buffer;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float mean;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m2;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] prevMagnitude;

		[Token(Token = "0x170000B0")]
		public override string name
		{
			[Token(Token = "0x600066E")]
			[Address(RVA = "0x1A9CFC0", Offset = "0x1A9CFC0", VA = "0x1A9CFC0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x1A9D008", Offset = "0x1A9D008", VA = "0x1A9D008", Slot = "5")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x1A9D0D8", Offset = "0x1A9D0D8", VA = "0x1A9D0D8", Slot = "6")]
		public override void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x1A9D2BC", Offset = "0x1A9D2BC", VA = "0x1A9D2BC")]
		private float SpectralDifference(float[] magnitude)
		{
			return default(float);
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x1A9D3FC", Offset = "0x1A9D3FC", VA = "0x1A9D3FC")]
		private float Normalize(float sample)
		{
			return default(float);
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x1A9D50C", Offset = "0x1A9D50C", VA = "0x1A9D50C")]
		public OnsetDetector()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class OnsetTrack : Track<Onset>
	{
		[Token(Token = "0x6000674")]
		[Address(RVA = "0x1A9D6DC", Offset = "0x1A9D6DC", VA = "0x1A9D6DC")]
		public OnsetTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000110")]
	public class Onset : Feature
	{
		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float strength;

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x1A9CFB8", Offset = "0x1A9CFB8", VA = "0x1A9CFB8")]
		public Onset()
		{
		}
	}
	[Token(Token = "0x2000111")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E614C", Offset = "0x16E614C")]
	public class RhythmAnalyzer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E955C", Offset = "0x16E955C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Analysis> <>9__42_0;

			[Token(Token = "0x4001ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Analysis, Track> <>9__42_1;

			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0x1A9E580", Offset = "0x1A9E580", VA = "0x1A9E580")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x1A9E588", Offset = "0x1A9E588", VA = "0x1A9E588")]
			internal bool <Initialize>b__42_0(Analysis a)
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x1A9E5B4", Offset = "0x1A9E5B4", VA = "0x1A9E5B4")]
			internal Track <Initialize>b__42_1(Analysis a)
			{
				return null;
			}
		}

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EC024", Offset = "0x16EC024")]
		private RhythmData <rhythmData>k__BackingField;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EC034", Offset = "0x16EC034")]
		private float <progress>k__BackingField;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EC044", Offset = "0x16EC044")]
		private bool <isDone>k__BackingField;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EC054", Offset = "0x16EC054")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioClip audioClip;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int hopSize;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int frameSize;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int bufferCount;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int channels;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int sampleRate;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int totalFrames;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int lastFrame;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] buffer;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] window;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] samples;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] monoSamples;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] spectrum;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] magnitude;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Thread analyze;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AutoResetEvent waitForMainThread;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool getData;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool abort;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int initialLength;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Analysis> analyses;

		[Token(Token = "0x170000B1")]
		public RhythmData rhythmData
		{
			[Token(Token = "0x6000678")]
			[Address(RVA = "0x1A9D894", Offset = "0x1A9D894", VA = "0x1A9D894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700B58", Offset = "0x1700B58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000679")]
			[Address(RVA = "0x1A9D89C", Offset = "0x1A9D89C", VA = "0x1A9D89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700B68", Offset = "0x1700B68")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public float progress
		{
			[Token(Token = "0x600067A")]
			[Address(RVA = "0x1A9D8A4", Offset = "0x1A9D8A4", VA = "0x1A9D8A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700B78", Offset = "0x1700B78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600067B")]
			[Address(RVA = "0x1A9D8AC", Offset = "0x1A9D8AC", VA = "0x1A9D8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700B88", Offset = "0x1700B88")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public bool isDone
		{
			[Token(Token = "0x600067C")]
			[Address(RVA = "0x1A9D8B4", Offset = "0x1A9D8B4", VA = "0x1A9D8B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700B98", Offset = "0x1700B98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600067D")]
			[Address(RVA = "0x1A9D8BC", Offset = "0x1A9D8BC", VA = "0x1A9D8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700BA8", Offset = "0x1700BA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public bool initialized
		{
			[Token(Token = "0x600067E")]
			[Address(RVA = "0x1A9D8C8", Offset = "0x1A9D8C8", VA = "0x1A9D8C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700BB8", Offset = "0x1700BB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600067F")]
			[Address(RVA = "0x1A9D8D0", Offset = "0x1A9D8D0", VA = "0x1A9D8D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700BC8", Offset = "0x1700BC8")]
			private set
			{
			}
		}

		[Token(Token = "0x14000003")]
		public event Action<RhythmData> Initialized
		{
			[Token(Token = "0x6000676")]
			[Address(RVA = "0x1A9D74C", Offset = "0x1A9D74C", VA = "0x1A9D74C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700B38", Offset = "0x1700B38")]
			add
			{
			}
			[Token(Token = "0x6000677")]
			[Address(RVA = "0x1A9D7F0", Offset = "0x1A9D7F0", VA = "0x1A9D7F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700B48", Offset = "0x1700B48")]
			remove
			{
			}
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x1A9D8DC", Offset = "0x1A9D8DC", VA = "0x1A9D8DC")]
		public RhythmData Analyze(AudioClip audioClip, float initialLength = 5f)
		{
			return null;
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x1A9DD74", Offset = "0x1A9DD74", VA = "0x1A9DD74")]
		public void ForceLoad(AudioClip audioClip)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x1A9D9B8", Offset = "0x1A9D9B8", VA = "0x1A9D9B8")]
		public void Abort()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x1A9DA24", Offset = "0x1A9DA24", VA = "0x1A9DA24")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x1A9DEB4", Offset = "0x1A9DEB4", VA = "0x1A9DEB4")]
		private void StartAnalyze()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x1A9E090", Offset = "0x1A9E090", VA = "0x1A9E090")]
		private void Analyze()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x1A9E314", Offset = "0x1A9E314", VA = "0x1A9E314")]
		private void OnAnalysisDone()
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x1A9E188", Offset = "0x1A9E188", VA = "0x1A9E188")]
		private void ProcessFrame(float[] samples)
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x1A9E15C", Offset = "0x1A9E15C", VA = "0x1A9E15C")]
		private void FillBuffer()
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x1A9E320", Offset = "0x1A9E320", VA = "0x1A9E320")]
		private void GetData()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x1A9E3F4", Offset = "0x1A9E3F4", VA = "0x1A9E3F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x1A9E488", Offset = "0x1A9E488", VA = "0x1A9E488")]
		public RhythmAnalyzer()
		{
		}
	}
	[Token(Token = "0x2000112")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x16E619C", Offset = "0x16E619C")]
	public class RhythmData : ScriptableObject, IEnumerable<Track>, IEnumerable
	{
		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E956C", Offset = "0x16E956C")]
		private sealed class <GetEnumerator>d__12 : IEnumerator<Track>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Track <>2__current;

			[Token(Token = "0x4001AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RhythmData <>4__this;

			[Token(Token = "0x4001AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<Track>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000434")]
			private Track System.Collections.Generic.IEnumerator<RhythmTool.Track>.Current
			{
				[Token(Token = "0x6001ECC")]
				[Address(RVA = "0x2EA251C", Offset = "0x2EA251C", VA = "0x2EA251C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000435")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ECE")]
				[Address(RVA = "0x2EA2584", Offset = "0x2EA2584", VA = "0x2EA2584", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x2EA2314", Offset = "0x2EA2314", VA = "0x2EA2314")]
			[DebuggerHidden]
			public <GetEnumerator>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x2EA2340", Offset = "0x2EA2340", VA = "0x2EA2340", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0x2EA23B4", Offset = "0x2EA23B4", VA = "0x2EA23B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0x2EA235C", Offset = "0x2EA235C", VA = "0x2EA235C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x2EA2524", Offset = "0x2EA2524", VA = "0x2EA2524", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E957C", Offset = "0x16E957C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Track> <>9__14_0;

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x2EA22A0", Offset = "0x2EA22A0", VA = "0x2EA22A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0x2EA22A8", Offset = "0x2EA22A8", VA = "0x2EA22A8")]
			internal bool <OnEnable>b__14_0(Track t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip audioClip;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Track> _tracks;

		[Token(Token = "0x170000B5")]
		public List<Track> tracks
		{
			[Token(Token = "0x600068C")]
			[Address(RVA = "0x1A9E5D4", Offset = "0x1A9E5D4", VA = "0x1A9E5D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068D")]
		public Track<T> GetTrack<T>() where T : Feature
		{
			return null;
		}

		[Token(Token = "0x600068E")]
		public Track<T> GetTrack<T>(string trackName) where T : Feature
		{
			return null;
		}

		[Token(Token = "0x600068F")]
		public void GetTracks<T>(List<Track<T>> tracks) where T : Feature
		{
		}

		[Token(Token = "0x6000690")]
		public void GetTracks<T>(List<Track<T>> tracks, string trackName) where T : Feature
		{
		}

		[Token(Token = "0x6000691")]
		public void GetFeatures<T>(List<T> features, float start, float end) where T : Feature
		{
		}

		[Token(Token = "0x6000692")]
		public void GetFeatures<T>(List<T> features, float start, float end, string trackName) where T : Feature
		{
		}

		[Token(Token = "0x6000693")]
		public void GetIntersectingFeatures<T>(List<T> features, float start, float end) where T : Feature
		{
		}

		[Token(Token = "0x6000694")]
		public void GetIntersectingFeatures<T>(List<T> features, float start, float end, string trackName) where T : Feature
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x1A9E5DC", Offset = "0x1A9E5DC", VA = "0x1A9E5DC", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1700BD8", Offset = "0x1700BD8")]
		public IEnumerator<Track> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x1A9E658", Offset = "0x1A9E658", VA = "0x1A9E658", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x1A9E6E4", Offset = "0x1A9E6E4", VA = "0x1A9E6E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x1A9E7E4", Offset = "0x1A9E7E4", VA = "0x1A9E7E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x1A9DE04", Offset = "0x1A9DE04", VA = "0x1A9DE04")]
		public static RhythmData Create(AudioClip audioClip, IEnumerable<Track> tracks)
		{
			return null;
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x1A9E934", Offset = "0x1A9E934", VA = "0x1A9E934")]
		public RhythmData()
		{
		}
	}
	[Token(Token = "0x2000113")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x16E61FC", Offset = "0x16E61FC")]
	public class RhythmEventProvider : RhythmTarget
	{
		[Token(Token = "0x200043E")]
		private abstract class RhythmEvent : IDisposable
		{
			[Token(Token = "0x6001ED2")]
			public abstract void Process(RhythmData rhythmData, float start, float end);

			[Token(Token = "0x6001ED3")]
			public abstract void Dispose();

			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x2EA28FC", Offset = "0x2EA28FC", VA = "0x2EA28FC")]
			protected RhythmEvent()
			{
			}
		}

		[Token(Token = "0x200043F")]
		private class RhythmEvent<T> : RhythmEvent where T : Feature
		{
			[Token(Token = "0x4001AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Action<T> _action;

			[Token(Token = "0x4001AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<T> _features;

			[Token(Token = "0x4001AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private string trackName;

			[Token(Token = "0x6001ED5")]
			public RhythmEvent(string trackName)
			{
			}

			[Token(Token = "0x6001ED6")]
			public override void Process(RhythmData rhythmData, float start, float end)
			{
			}

			[Token(Token = "0x6001ED7")]
			public void Register(Action<T> action)
			{
			}

			[Token(Token = "0x6001ED8")]
			public void Unregister(Action<T> action)
			{
			}

			[Token(Token = "0x6001ED9")]
			public override void Dispose()
			{
			}
		}

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EC074", Offset = "0x16EC074")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EC074", Offset = "0x16EC074")]
		public float offset;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, RhythmEvent> _events;

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x2EA258C", Offset = "0x2EA258C", VA = "0x2EA258C", Slot = "4")]
		public override void Process(RhythmData rhythmData, float start, float end)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x2EA26BC", Offset = "0x2EA26BC", VA = "0x2EA26BC", Slot = "5")]
		public override void Reset(RhythmData rhythmData, float time)
		{
		}

		[Token(Token = "0x600069D")]
		public void Register<T>(Action<T> action) where T : Feature
		{
		}

		[Token(Token = "0x600069E")]
		public void Unregister<T>(Action<T> action) where T : Feature
		{
		}

		[Token(Token = "0x600069F")]
		public void Register<T>(Action<T> action, string trackName) where T : Feature
		{
		}

		[Token(Token = "0x60006A0")]
		public void Unregister<T>(Action<T> action, string trackName) where T : Feature
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x2EA26E0", Offset = "0x2EA26E0", VA = "0x2EA26E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x2EA2808", Offset = "0x2EA2808", VA = "0x2EA2808")]
		private static int GetHashCode(Type type, string trackName)
		{
			return default(int);
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x2EA286C", Offset = "0x2EA286C", VA = "0x2EA286C")]
		private static int CombineHashCodes(int h1, int h2)
		{
			return default(int);
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x2EA2878", Offset = "0x2EA2878", VA = "0x2EA2878")]
		public RhythmEventProvider()
		{
		}
	}
	[Token(Token = "0x2000114")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E625C", Offset = "0x16E625C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E625C", Offset = "0x16E625C")]
	public class RhythmPlayer : MonoBehaviour
	{
		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EC0E8", Offset = "0x16EC0E8")]
		private AudioSource <audioSource>k__BackingField;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EC0F8", Offset = "0x16EC0F8")]
		private float <prevTime>k__BackingField;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RhythmData rhythmData;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<RhythmTarget> targets;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _time;

		[Token(Token = "0x170000B6")]
		public AudioSource audioSource
		{
			[Token(Token = "0x60006A9")]
			[Address(RVA = "0x2EA2B94", Offset = "0x2EA2B94", VA = "0x2EA2B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700C7C", Offset = "0x1700C7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006AA")]
			[Address(RVA = "0x2EA2B9C", Offset = "0x2EA2B9C", VA = "0x2EA2B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700C8C", Offset = "0x1700C8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public AudioClip audioClip
		{
			[Token(Token = "0x60006AB")]
			[Address(RVA = "0x2EA2BA4", Offset = "0x2EA2BA4", VA = "0x2EA2BA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		public float time
		{
			[Token(Token = "0x60006AC")]
			[Address(RVA = "0x2EA2C34", Offset = "0x2EA2C34", VA = "0x2EA2C34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006AD")]
			[Address(RVA = "0x2EA2C3C", Offset = "0x2EA2C3C", VA = "0x2EA2C3C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public float volume
		{
			[Token(Token = "0x60006AE")]
			[Address(RVA = "0x2EA2C60", Offset = "0x2EA2C60", VA = "0x2EA2C60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006AF")]
			[Address(RVA = "0x2EA2C7C", Offset = "0x2EA2C7C", VA = "0x2EA2C7C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public float pitch
		{
			[Token(Token = "0x60006B0")]
			[Address(RVA = "0x2EA2C98", Offset = "0x2EA2C98", VA = "0x2EA2C98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006B1")]
			[Address(RVA = "0x2EA2CB4", Offset = "0x2EA2CB4", VA = "0x2EA2CB4")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public bool isPlaying
		{
			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x2EA2CD0", Offset = "0x2EA2CD0", VA = "0x2EA2CD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BC")]
		public float prevTime
		{
			[Token(Token = "0x60006B3")]
			[Address(RVA = "0x2EA2CEC", Offset = "0x2EA2CEC", VA = "0x2EA2CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700C9C", Offset = "0x1700C9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006B4")]
			[Address(RVA = "0x2EA2CF4", Offset = "0x2EA2CF4", VA = "0x2EA2CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700CAC", Offset = "0x1700CAC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000004")]
		public event Action SongEnded
		{
			[Token(Token = "0x60006A5")]
			[Address(RVA = "0x2EA2904", Offset = "0x2EA2904", VA = "0x2EA2904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700C3C", Offset = "0x1700C3C")]
			add
			{
			}
			[Token(Token = "0x60006A6")]
			[Address(RVA = "0x2EA29A8", Offset = "0x2EA29A8", VA = "0x2EA29A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700C4C", Offset = "0x1700C4C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public event Action Reset
		{
			[Token(Token = "0x60006A7")]
			[Address(RVA = "0x2EA2A4C", Offset = "0x2EA2A4C", VA = "0x2EA2A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700C5C", Offset = "0x1700C5C")]
			add
			{
			}
			[Token(Token = "0x60006A8")]
			[Address(RVA = "0x2EA2AF0", Offset = "0x2EA2AF0", VA = "0x2EA2AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700C6C", Offset = "0x1700C6C")]
			remove
			{
			}
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x2EA2CFC", Offset = "0x2EA2CFC", VA = "0x2EA2CFC")]
		public void Play()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x2EA2F50", Offset = "0x2EA2F50", VA = "0x2EA2F50")]
		public void Stop()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x2EA2F6C", Offset = "0x2EA2F6C", VA = "0x2EA2F6C")]
		public void Pause()
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x2EA2F88", Offset = "0x2EA2F88", VA = "0x2EA2F88")]
		public void UnPause()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x2EA2FA4", Offset = "0x2EA2FA4", VA = "0x2EA2FA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x2EA3004", Offset = "0x2EA3004", VA = "0x2EA3004")]
		private void Update()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x2EA3318", Offset = "0x2EA3318", VA = "0x2EA3318")]
		private void OnSongEnded()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x2EA2DDC", Offset = "0x2EA2DDC", VA = "0x2EA2DDC")]
		private void OnReset()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x2EA332C", Offset = "0x2EA332C", VA = "0x2EA332C")]
		public RhythmPlayer()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public abstract class RhythmTarget : ScriptableObject
	{
		[Token(Token = "0x60006BE")]
		public abstract void Process(RhythmData rhythmData, float start, float end);

		[Token(Token = "0x60006BF")]
		public abstract void Reset(RhythmData rhythmData, float time);

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x2EA28F4", Offset = "0x2EA28F4", VA = "0x2EA28F4")]
		protected RhythmTarget()
		{
		}
	}
	[Token(Token = "0x2000116")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E62E8", Offset = "0x16E62E8")]
	public class Segmenter : Analysis<Value>
	{
		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EC108", Offset = "0x16EC108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EC108", Offset = "0x16EC108")]
		public float threshold;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EC160", Offset = "0x16EC160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EC160", Offset = "0x16EC160")]
		public int smoothing;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 changeWeight;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float changeStartSlope;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float changeEndSlope;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int iterations;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int bufferSize;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[][] buffer;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] kernel;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float w;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float current;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float next;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool change;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float changeSign;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector2 changeStart;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float maxSlope;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int maxSlopeIndex;

		[Token(Token = "0x170000BD")]
		public override string name
		{
			[Token(Token = "0x60006C1")]
			[Address(RVA = "0x2EA3334", Offset = "0x2EA3334", VA = "0x2EA3334", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x2EA337C", Offset = "0x2EA337C", VA = "0x2EA337C", Slot = "5")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x2EA35D4", Offset = "0x2EA35D4", VA = "0x2EA35D4", Slot = "6")]
		public override void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x2EA396C", Offset = "0x2EA396C", VA = "0x2EA396C")]
		private void FindSegments()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x2EA3A1C", Offset = "0x2EA3A1C", VA = "0x2EA3A1C")]
		private void FindChangeEnd(float slope)
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x2EA3BC0", Offset = "0x2EA3BC0", VA = "0x2EA3BC0")]
		private void FindChangeStart(float slope)
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x2EA3CBC", Offset = "0x2EA3CBC", VA = "0x2EA3CBC")]
		public Segmenter()
		{
		}
	}
	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6320", Offset = "0x16E6320")]
	public class StreamedRhythmAnalyzer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E958C", Offset = "0x16E958C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Analysis> <>9__46_0;

			[Token(Token = "0x4001ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Analysis, Track> <>9__46_1;

			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0x2EA4FC8", Offset = "0x2EA4FC8", VA = "0x2EA4FC8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x2EA4FD0", Offset = "0x2EA4FD0", VA = "0x2EA4FD0")]
			internal bool <Initialize>b__46_0(Analysis a)
			{
				return default(bool);
			}

			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0x2EA4FFC", Offset = "0x2EA4FFC", VA = "0x2EA4FFC")]
			internal Track <Initialize>b__46_1(Analysis a)
			{
				return null;
			}
		}

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EC1C4", Offset = "0x16EC1C4")]
		private RhythmData <rhythmData>k__BackingField;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EC1D4", Offset = "0x16EC1D4")]
		private float <progress>k__BackingField;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EC1E4", Offset = "0x16EC1E4")]
		private bool <isDone>k__BackingField;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EC1F4", Offset = "0x16EC1F4")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource audioSource;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioClip audioClip;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int hopSize;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int frameSize;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int dspBufferSize;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int bufferCount;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int filterReadCount;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int channels;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int sampleRate;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int totalFrames;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int lastFrame;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] buffer;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] window;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] samples;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] monoSamples;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float[] spectrum;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float[] magnitude;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Thread analyze;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AutoResetEvent waitForMainThread;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool abort;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int initialLength;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool clipLoaded;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool paused;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<Analysis> analyses;

		[Token(Token = "0x170000BE")]
		public RhythmData rhythmData
		{
			[Token(Token = "0x60006CA")]
			[Address(RVA = "0x2EA3EA4", Offset = "0x2EA3EA4", VA = "0x2EA3EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700CDC", Offset = "0x1700CDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0x2EA3EAC", Offset = "0x2EA3EAC", VA = "0x2EA3EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700CEC", Offset = "0x1700CEC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public float progress
		{
			[Token(Token = "0x60006CC")]
			[Address(RVA = "0x2EA3EB4", Offset = "0x2EA3EB4", VA = "0x2EA3EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700CFC", Offset = "0x1700CFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006CD")]
			[Address(RVA = "0x2EA3EBC", Offset = "0x2EA3EBC", VA = "0x2EA3EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700D0C", Offset = "0x1700D0C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public bool isDone
		{
			[Token(Token = "0x60006CE")]
			[Address(RVA = "0x2EA3EC4", Offset = "0x2EA3EC4", VA = "0x2EA3EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700D1C", Offset = "0x1700D1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006CF")]
			[Address(RVA = "0x2EA3ECC", Offset = "0x2EA3ECC", VA = "0x2EA3ECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700D2C", Offset = "0x1700D2C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public bool initialized
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0x2EA3ED8", Offset = "0x2EA3ED8", VA = "0x2EA3ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700D3C", Offset = "0x1700D3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006D1")]
			[Address(RVA = "0x2EA3EE0", Offset = "0x2EA3EE0", VA = "0x2EA3EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700D4C", Offset = "0x1700D4C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000006")]
		public event Action<RhythmData> Initialized
		{
			[Token(Token = "0x60006C8")]
			[Address(RVA = "0x2EA3D5C", Offset = "0x2EA3D5C", VA = "0x2EA3D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700CBC", Offset = "0x1700CBC")]
			add
			{
			}
			[Token(Token = "0x60006C9")]
			[Address(RVA = "0x2EA3E00", Offset = "0x2EA3E00", VA = "0x2EA3E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700CCC", Offset = "0x1700CCC")]
			remove
			{
			}
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x2EA3EEC", Offset = "0x2EA3EEC", VA = "0x2EA3EEC")]
		public RhythmData Analyze(AudioClip audioClip, float initialLength = 4f)
		{
			return null;
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x2EA4034", Offset = "0x2EA4034", VA = "0x2EA4034")]
		public void Abort()
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x2EA43DC", Offset = "0x2EA43DC", VA = "0x2EA43DC")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x2EA406C", Offset = "0x2EA406C", VA = "0x2EA406C")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x2EA46D8", Offset = "0x2EA46D8", VA = "0x2EA46D8")]
		private void StartAnalyze()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x2EA4858", Offset = "0x2EA4858", VA = "0x2EA4858")]
		private void OnAnalysisDone()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x2EA453C", Offset = "0x2EA453C", VA = "0x2EA453C")]
		private void ProcessFrame(float[] samples)
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x2EA4D70", Offset = "0x2EA4D70", VA = "0x2EA4D70")]
		private void Update()
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x2EA4ED8", Offset = "0x2EA4ED8", VA = "0x2EA4ED8")]
		public StreamedRhythmAnalyzer()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public abstract class Track : ScriptableObject
	{
		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string _name;

		[Token(Token = "0x170000C2")]
		public new string name
		{
			[Token(Token = "0x60006DB")]
			[Address(RVA = "0x2EA5018", Offset = "0x2EA5018", VA = "0x2EA5018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x2EA5020", Offset = "0x2EA5020", VA = "0x2EA5020")]
		protected Track()
		{
		}
	}
	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x16E635C", Offset = "0x16E635C")]
	public abstract class Track<T> : Track where T : Feature
	{
		[Serializable]
		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E959C", Offset = "0x16E959C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<T> <>9__11_0;

			[Token(Token = "0x6001EDF")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EE0")]
			internal int <Sort>b__11_0(T a, T b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<T> _features;

		[NonSerialized]
		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<int> cachedTimestamps;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, int> cachedIndices;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type concreteType;

		[Token(Token = "0x170000C3")]
		public T Item
		{
			[Token(Token = "0x60006DD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public int count
		{
			[Token(Token = "0x60006DE")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60006DF")]
		static Track()
		{
		}

		[Token(Token = "0x60006E0")]
		public void Add(T feature)
		{
		}

		[Token(Token = "0x60006E1")]
		public void Remove(T feature)
		{
		}

		[Token(Token = "0x60006E2")]
		public void Sort()
		{
		}

		[Token(Token = "0x60006E3")]
		public void GetFeatures(List<T> features, float start, float end)
		{
		}

		[Token(Token = "0x60006E4")]
		public void GetIntersectingFeatures(List<T> features, float start, float end)
		{
		}

		[Token(Token = "0x60006E5")]
		public int GetIndex(float timestamp)
		{
			return default(int);
		}

		[Token(Token = "0x60006E6")]
		public int GetIndex(T feature)
		{
			return default(int);
		}

		[Token(Token = "0x60006E7")]
		public int GetIntersectingIndex(float timestamp)
		{
			return default(int);
		}

		[Token(Token = "0x60006E8")]
		private int BinarySearch(float timestamp)
		{
			return default(int);
		}

		[Token(Token = "0x60006E9")]
		private int GetCacheIndex(float timestamp)
		{
			return default(int);
		}

		[Token(Token = "0x60006EA")]
		private void ClearCache(float timestamp)
		{
		}

		[Token(Token = "0x60006EB")]
		public static Track<T> Create(string name)
		{
			return null;
		}

		[Token(Token = "0x60006EC")]
		protected Track()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class Util
	{
		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LomontFFT fft;

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x2EA4890", Offset = "0x2EA4890", VA = "0x2EA4890")]
		public static void GetMono(float[] samples, float[] monoSamples, int channels = 0)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x2EA4B0C", Offset = "0x2EA4B0C", VA = "0x2EA4B0C")]
		public static void GetSpectrum(float[] samples)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x2EA4B8C", Offset = "0x2EA4B8C", VA = "0x2EA4B8C")]
		public static void GetSpectrumMagnitude(float[] spectrum, float[] magnitude)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x2EA55D4", Offset = "0x2EA55D4", VA = "0x2EA55D4")]
		public static void GetSpectrumPhase(float[] spectrum, float[] phase)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x2EA4A94", Offset = "0x2EA4A94", VA = "0x2EA4A94")]
		internal static void ApplyWindow(float[] array, float[] window)
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x2EA3844", Offset = "0x2EA3844", VA = "0x2EA3844")]
		public static float Mean(float[] array, int start = 0, int end = 0)
		{
			return default(float);
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x2EA38B8", Offset = "0x2EA38B8", VA = "0x2EA38B8")]
		public static float WeightedSum(float[] array, float[] kernel, int index)
		{
			return default(float);
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x2EA5798", Offset = "0x2EA5798", VA = "0x2EA5798")]
		public static int MaxIndex(float[] array, int start = 0, int end = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x2EA5814", Offset = "0x2EA5814", VA = "0x2EA5814")]
		public static int MinIndex(float[] array, int start = 0, int end = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x2EA5890", Offset = "0x2EA5890", VA = "0x2EA5890")]
		public static float Max(float[] array, int start = 0, int end = 0)
		{
			return default(float);
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x2EA5938", Offset = "0x2EA5938", VA = "0x2EA5938")]
		public static float Min(float[] array, int start = 0, int end = 0)
		{
			return default(float);
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x2EA59E0", Offset = "0x2EA59E0", VA = "0x2EA59E0")]
		public static void Smooth(float[] array, float[] smoothedArray, float[] kernel)
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x2EA5AC4", Offset = "0x2EA5AC4", VA = "0x2EA5AC4")]
		public static float Interpolate(float[] array, float index)
		{
			return default(float);
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x2EA5B5C", Offset = "0x2EA5B5C", VA = "0x2EA5B5C")]
		public static void HannWindow(float[] array)
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x2EA354C", Offset = "0x2EA354C", VA = "0x2EA354C")]
		public static float[] HannWindow(int length)
		{
			return null;
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x2EA5C14", Offset = "0x2EA5C14", VA = "0x2EA5C14")]
		public static float HannWindow(int n, int windowSize)
		{
			return default(float);
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x2EA5CB0", Offset = "0x2EA5CB0", VA = "0x2EA5CB0")]
		public Util()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class ValueTrack : Track<Value>
	{
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x2EA5E84", Offset = "0x2EA5E84", VA = "0x2EA5E84")]
		public ValueTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011C")]
	public class Value : Feature
	{
		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x2EA3CB4", Offset = "0x2EA3CB4", VA = "0x2EA3CB4")]
		public Value()
		{
		}
	}
	[Token(Token = "0x200011D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6394", Offset = "0x16E6394")]
	public class VolumeSampler : Analysis<Value>
	{
		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EC224", Offset = "0x16EC224")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EC224", Offset = "0x16EC224")]
		private int _interval;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EC28C", Offset = "0x16EC28C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EC28C", Offset = "0x16EC28C")]
		private int _smoothing;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int bufferSize;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int smoothingBufferSize;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] buffer;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] smoothingBuffer;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] smoothingKernel;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float w;

		[Token(Token = "0x170000C5")]
		public override string name
		{
			[Token(Token = "0x6000701")]
			[Address(RVA = "0x2EA5EF4", Offset = "0x2EA5EF4", VA = "0x2EA5EF4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		public int interval
		{
			[Token(Token = "0x6000702")]
			[Address(RVA = "0x2EA5F3C", Offset = "0x2EA5F3C", VA = "0x2EA5F3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000703")]
			[Address(RVA = "0x2EA5F44", Offset = "0x2EA5F44", VA = "0x2EA5F44")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public int smoothing
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0x2EA5FC8", Offset = "0x2EA5FC8", VA = "0x2EA5FC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000705")]
			[Address(RVA = "0x2EA5FD0", Offset = "0x2EA5FD0", VA = "0x2EA5FD0")]
			set
			{
			}
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x2EA6054", Offset = "0x2EA6054", VA = "0x2EA6054", Slot = "5")]
		public override void Initialize(int sampleRate, int frameSize, int hopSize)
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x2EA61C0", Offset = "0x2EA61C0", VA = "0x2EA61C0", Slot = "6")]
		public override void Process(float[] samples, float[] magnitude, int frameIndex)
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x2EA6420", Offset = "0x2EA6420", VA = "0x2EA6420")]
		public VolumeSampler()
		{
		}
	}
}
namespace RhythmTool.Examples
{
	[Token(Token = "0x200011E")]
	public abstract class SongSelector : MonoBehaviour
	{
		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StreamedRhythmAnalyzer analyzer;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RhythmPlayer player;

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1A9B610", Offset = "0x1A9B610", VA = "0x1A9B610", Slot = "4")]
		public virtual void NextSong()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x1A9B6E4", Offset = "0x1A9B6E4", VA = "0x1A9B6E4")]
		protected SongSelector()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class AudioClipSelector : SongSelector
	{
		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E95AC", Offset = "0x16E95AC")]
		private sealed class <NextSongAsync>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClipSelector <>4__this;

			[Token(Token = "0x17000436")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EE4")]
				[Address(RVA = "0x1A9B7DC", Offset = "0x1A9B7DC", VA = "0x1A9B7DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000437")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EE6")]
				[Address(RVA = "0x1A9B844", Offset = "0x1A9B844", VA = "0x1A9B844", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x1A9B6A8", Offset = "0x1A9B6A8", VA = "0x1A9B6A8")]
			[DebuggerHidden]
			public <NextSongAsync>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x1A9B6EC", Offset = "0x1A9B6EC", VA = "0x1A9B6EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x1A9B6F0", Offset = "0x1A9B6F0", VA = "0x1A9B6F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x1A9B7E4", Offset = "0x1A9B7E4", VA = "0x1A9B7E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<AudioClip> songs;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RhythmData data;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentSong;

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x1A9B540", Offset = "0x1A9B540", VA = "0x1A9B540")]
		private void Start()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1A9B54C", Offset = "0x1A9B54C", VA = "0x1A9B54C", Slot = "4")]
		public override void NextSong()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x1A9B62C", Offset = "0x1A9B62C", VA = "0x1A9B62C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1700D5C", Offset = "0x1700D5C")]
		private IEnumerator NextSongAsync()
		{
			return null;
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x1A9B6D4", Offset = "0x1A9B6D4", VA = "0x1A9B6D4")]
		public AudioClipSelector()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class Line : MonoBehaviour
	{
		[Token(Token = "0x2000443")]
		public enum LineType
		{
			[Token(Token = "0x4001AE1")]
			None,
			[Token(Token = "0x4001AE2")]
			Beat,
			[Token(Token = "0x4001AE3")]
			Onset,
			[Token(Token = "0x4001AE4")]
			Segment,
			[Token(Token = "0x4001AE5")]
			Chroma
		}

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EC2F0", Offset = "0x16EC2F0")]
		private float <timestamp>k__BackingField;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LineType type;

		[Token(Token = "0x170000C8")]
		public float timestamp
		{
			[Token(Token = "0x600070F")]
			[Address(RVA = "0x1A9B84C", Offset = "0x1A9B84C", VA = "0x1A9B84C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700DC0", Offset = "0x1700DC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000710")]
			[Address(RVA = "0x1A9B854", Offset = "0x1A9B854", VA = "0x1A9B854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700DD0", Offset = "0x1700DD0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x1A9B85C", Offset = "0x1A9B85C", VA = "0x1A9B85C")]
		public void Init(Color color, float opacity, float timestamp, LineType type)
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x1A9B970", Offset = "0x1A9B970", VA = "0x1A9B970")]
		public Line()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class Visualizer : MonoBehaviour
	{
		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StreamedRhythmAnalyzer analyzer;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RhythmPlayer player;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RhythmEventProvider eventProvider;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource tickSFX;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text textBPM;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Line linePrefab;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Line> lines;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Chroma> chromaFeatures;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Note lastNote;

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x1A9B978", Offset = "0x1A9B978", VA = "0x1A9B978")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x1A9BBC0", Offset = "0x1A9BBC0", VA = "0x1A9BBC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x1A9BC04", Offset = "0x1A9BC04", VA = "0x1A9BC04")]
		private void UpdateLines()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x1A9BFE0", Offset = "0x1A9BFE0", VA = "0x1A9BFE0")]
		private void OnInitialized(RhythmData rhythmData)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x1A9BFFC", Offset = "0x1A9BFFC", VA = "0x1A9BFFC")]
		private void OnReset()
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x1A9C144", Offset = "0x1A9C144", VA = "0x1A9C144")]
		private void OnBeat(Beat beat)
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x1A9C4B4", Offset = "0x1A9C4B4", VA = "0x1A9C4B4")]
		private void OnOnset(Onset onset)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1A9C710", Offset = "0x1A9C710", VA = "0x1A9C710")]
		private void OnSegment(Value segment)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x1A9C308", Offset = "0x1A9C308", VA = "0x1A9C308")]
		private void CreateLine(float timestamp, float position, float scale, Color color, float opacity, Line.LineType type)
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1A9C78C", Offset = "0x1A9C78C", VA = "0x1A9C78C")]
		public Visualizer()
		{
		}
	}
}
namespace Prism.Demo
{
	[Token(Token = "0x2000122")]
	public class PrismLerpPresetExample : MonoBehaviour
	{
		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PrismEffects prism;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EC300", Offset = "0x16EC300")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EC300", Offset = "0x16EC300")]
		public float maxDistance;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float t;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EC360", Offset = "0x16EC360")]
		public PrismPreset target;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve cameraDistanceCurve;

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x1A8EE48", Offset = "0x1A8EE48", VA = "0x1A8EE48")]
		private void Start()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x1A8EF3C", Offset = "0x1A8EF3C", VA = "0x1A8EF3C")]
		private void Update()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x1A8FB08", Offset = "0x1A8FB08", VA = "0x1A8FB08")]
		public PrismLerpPresetExample()
		{
		}
	}
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E63CC", Offset = "0x16E63CC")]
	public class PrismLightFlicker : MonoBehaviour
	{
		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EC398", Offset = "0x16EC398")]
		public float offset;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EC3B0", Offset = "0x16EC3B0")]
		public float flickerChance;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EC3C8", Offset = "0x16EC3C8")]
		public float minAliveTime;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EC3E0", Offset = "0x16EC3E0")]
		public float maxAliveTime;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EC3F8", Offset = "0x16EC3F8")]
		public float flickerSpeed;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float nextTick;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Light m_light;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialIntensity;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float targetIntensity;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lerpAmount;

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x1A8FB18", Offset = "0x1A8FB18", VA = "0x1A8FB18")]
		private void Start()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x1A8FB94", Offset = "0x1A8FB94", VA = "0x1A8FB94")]
		private static float cubicEaseIn(float start, float end, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x1A8FBAC", Offset = "0x1A8FBAC", VA = "0x1A8FBAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x1A8FCEC", Offset = "0x1A8FCEC", VA = "0x1A8FCEC")]
		public PrismLightFlicker()
		{
		}
	}
}
namespace Prism.Utils
{
	[Token(Token = "0x2000124")]
	public class PrismAnimCurveCreator : MonoBehaviour
	{
		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] curvePointsX;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] curvePointsY;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve thisCurve;

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x1A8FD08", Offset = "0x1A8FD08", VA = "0x1A8FD08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1700DE0", Offset = "0x1700DE0")]
		private void GenerateCurve()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1A8FDEC", Offset = "0x1A8FDEC", VA = "0x1A8FDEC")]
		public PrismAnimCurveCreator()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public enum NoiseType
	{
		[Token(Token = "0x4000646")]
		RandomNoise,
		[Token(Token = "0x4000647")]
		RandomTimeNoise,
		[Token(Token = "0x4000648")]
		GradientNoise
	}
	[Token(Token = "0x2000126")]
	public enum SampleCount
	{
		[Token(Token = "0x400064A")]
		Low = 3,
		[Token(Token = "0x400064B")]
		Medium = 6,
		[Token(Token = "0x400064C")]
		High = 10
	}
	[Token(Token = "0x2000127")]
	public enum TonemapType
	{
		[Token(Token = "0x400064E")]
		Filmic,
		[Token(Token = "0x400064F")]
		RomB,
		[Token(Token = "0x4000650")]
		ACES
	}
	[Token(Token = "0x2000128")]
	public enum AberrationType
	{
		[Token(Token = "0x4000652")]
		Vignette,
		[Token(Token = "0x4000653")]
		Vertical,
		[Token(Token = "0x4000654")]
		Barrel
	}
	[Token(Token = "0x2000129")]
	public enum DoFSamples
	{
		[Token(Token = "0x4000656")]
		Low,
		[Token(Token = "0x4000657")]
		Medium
	}
	[Token(Token = "0x200012A")]
	public enum DebugDofPass
	{
		[Token(Token = "0x4000659")]
		None,
		[Token(Token = "0x400065A")]
		BackCoC,
		[Token(Token = "0x400065B")]
		FrontCoC,
		[Token(Token = "0x400065C")]
		Back,
		[Token(Token = "0x400065D")]
		Front,
		[Token(Token = "0x400065E")]
		Depth
	}
	[Token(Token = "0x200012B")]
	public enum BloomType
	{
		[Token(Token = "0x4000660")]
		Simple,
		[Token(Token = "0x4000661")]
		HDR
	}
	[Token(Token = "0x200012C")]
	public enum BloomThreshholdType
	{
		[Token(Token = "0x4000663")]
		Gradual,
		[Token(Token = "0x4000664")]
		Highlights,
		[Token(Token = "0x4000665")]
		Quadratic
	}
	[Token(Token = "0x200012D")]
	public enum BloomDownsampleAmount
	{
		[Token(Token = "0x4000667")]
		None = 1,
		[Token(Token = "0x4000668")]
		Half = 2,
		[Token(Token = "0x4000669")]
		Quarter = 4,
		[Token(Token = "0x400066A")]
		Eighth = 8
	}
	[Token(Token = "0x200012E")]
	public enum RaysDownsampleAmount
	{
		[Token(Token = "0x400066C")]
		None = 1,
		[Token(Token = "0x400066D")]
		Half = 2,
		[Token(Token = "0x400066E")]
		Quarter = 4
	}
	[Token(Token = "0x200012F")]
	public enum PrismPresetType
	{
		[Token(Token = "0x4000670")]
		Full,
		[Token(Token = "0x4000671")]
		Bloom,
		[Token(Token = "0x4000672")]
		Fog,
		[Token(Token = "0x4000673")]
		DepthOfField,
		[Token(Token = "0x4000674")]
		ChromaticAberration,
		[Token(Token = "0x4000675")]
		Vignette,
		[Token(Token = "0x4000676")]
		Noise,
		[Token(Token = "0x4000677")]
		Tonemap,
		[Token(Token = "0x4000678")]
		Exposure,
		[Token(Token = "0x4000679")]
		ColorCorrection,
		[Token(Token = "0x400067A")]
		Nightvision,
		[Token(Token = "0x400067B")]
		Gamma,
		[Token(Token = "0x400067C")]
		AmbientObscurance,
		[Token(Token = "0x400067D")]
		Godrays,
		[Token(Token = "0x400067E")]
		Sharpen,
		[Token(Token = "0x400067F")]
		Colorify,
		[Token(Token = "0x4000680")]
		Brightness
	}
	[Token(Token = "0x2000130")]
	public enum AOBlurType
	{
		[Token(Token = "0x4000682")]
		Fast = 3,
		[Token(Token = "0x4000683")]
		Wide
	}
	[Token(Token = "0x2000131")]
	public enum FogType
	{
		[Token(Token = "0x4000685")]
		Linear = 1,
		[Token(Token = "0x4000686")]
		Exponential,
		[Token(Token = "0x4000687")]
		ExponentialSquared
	}
	[Serializable]
	[Token(Token = "0x2000132")]
	public class PrismPreset : ScriptableObject
	{
		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string PresetDescription;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrismPresetType presetType;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public bool useBloom;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public BloomType bloomType;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public BloomDownsampleAmount bloomDownsampleEnum;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public bool bloomUseScreenBlend;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public int bloomDownsample;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public int bloomBlurPasses;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public float bloomIntensity;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public float bloomThreshold;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public BloomThreshholdType bloomThreshType;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public float bloomRadius;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public float bloomKnee;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public float bloomOneIntensity;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public float bloomTwoIntensity;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public float bloomThreeIntensity;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		public float bloomFourIntensity;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public bool useBloomStability;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		public bool useBloomLensdirt;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		public float bloomLensdirtIntensity;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public Texture2D bloomLensdirtTexture;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public bool useFullScreenBlur;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public Texture2D bloomFlareRadialColorTex;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public Texture2D bloomFlareHaloTex;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public Texture2D bloomFlareStarburstTex;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public float bloomFlareStrength;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		public float bloomFlareLensDirtIntensityMultiplier;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public float bloomFlareHaloWidth;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		public float bloomFlareGhostDispersal;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public float bloomFlareChromaticDistortion;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		public int bloomFlareNumberGhosts;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public bool useUIBlur;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		public int uiBlurGrabTextureFromPassNumber;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public bool useFog;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[SerializeField]
		public bool fogAffectSkybox;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		public float fogIntensity;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		public float fogHeight;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		public float fogStartPoint;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		public float fogMidPoint;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public float fogEndPoint;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		public float fogDistance;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		public Color fogColor;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		public Color fogEndColor;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		public Color fogMidColor;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		public bool useDoF;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		public float dofRadius;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		public DoFSamples dofSampleCount;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		public float dofBokehFactor;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		public float dofFocusPoint;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		public float dofFocusDistance;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		public bool useNearBlur;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		[SerializeField]
		public bool dofBlurSkybox;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		public float dofNearFocusDistance;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		public bool dofForceEnableMedian;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		public BloomDownsampleAmount dofDownsample;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		public bool useAmbientObscurance;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		public float aoIntensity;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		public float aoContrast;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		public float aoRadius;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		public float aoBias;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		public bool aoDownsample;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		public int aoBlurIterations;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		public float aoBlurFilterDistance;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		public bool useAODistanceCutoff;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		public float aoDistanceCutoffLength;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		public float aoDistanceCutoffStart;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		public SampleCount aoSampleCount;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		public AOBlurType aoBlurType;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		public float aoLightingContribution;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		public PrismEffects.OcclusionSource occlusionSource;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		public bool useChromaticAb;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		public AberrationType aberrationType;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		public float chromIntensity;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		public float chromStart;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		public float chromEnd;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[SerializeField]
		public bool useChromaticBlur;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		public float chromaticBlurWidth;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		public bool useVignette;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		public float vignetteStart;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[SerializeField]
		public float vignetteEnd;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		public float vignetteIntensity;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[SerializeField]
		public Color vignetteColor;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[SerializeField]
		public bool useNoise;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		public float noiseIntensity;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[SerializeField]
		public bool useTonemap;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		public TonemapType toneType;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		public UnityEngine.Vector3 toneValues;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		public UnityEngine.Vector3 secondaryToneValues;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		public bool useGammaCorrection;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		public float gammaValue;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		public bool useExposure;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		public float exposureSpeed;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		public float exposureMiddleGrey;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		public float exposureLowerLimit;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		public float exposureUpperLimit;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		public bool useLUT;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		public string lutPath;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		public float lutIntensity;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		public Texture2D twoDLookupTex;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		public bool useSecondLut;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		public string secondaryLutPath;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		public Texture2D secondaryTwoDLookupTex;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		public float secondaryLutLerpAmount;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[SerializeField]
		public bool useNV;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		public Color nvColor;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		public Color nvBleachColor;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		public float nvLightingContrib;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[SerializeField]
		public float nvLightSensitivity;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		public bool useRays;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[SerializeField]
		public float rayWeight;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		public Color rayColor;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		public Color rayThreshold;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		public float rayDecay;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[SerializeField]
		public float rayExposure;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		public float rayDensity;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[SerializeField]
		public RaysDownsampleAmount rayDownsample;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		public bool useSharpen;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[SerializeField]
		public float sharpenAmount;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		public bool useColorify;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[SerializeField]
		public float colorifyAmount;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		public bool useBrightness;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[SerializeField]
		public float brightIntensity;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		public float brightCutoff;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		public float brightSoftness;

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x1A8FDF4", Offset = "0x1A8FDF4", VA = "0x1A8FDF4")]
		public PrismPreset()
		{
		}
	}
}
namespace UnityEngine.UI.Michsky.UI.ModernUIPack
{
	[Token(Token = "0x2000133")]
	public class UIGradient : BaseMeshEffect
	{
		[Token(Token = "0x2000444")]
		public enum Type
		{
			[Token(Token = "0x4001AE7")]
			Horizontal,
			[Token(Token = "0x4001AE8")]
			Vertical,
			[Token(Token = "0x4001AE9")]
			Radial,
			[Token(Token = "0x4001AEA")]
			Diamond
		}

		[Token(Token = "0x2000445")]
		public enum Blend
		{
			[Token(Token = "0x4001AEC")]
			Override,
			[Token(Token = "0x4001AED")]
			Add,
			[Token(Token = "0x4001AEE")]
			Multiply
		}

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Gradient _effectGradient;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Type _gradientType;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Blend _blendMode;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16ECBE0", Offset = "0x16ECBE0")]
		private float _offset;

		[Token(Token = "0x170000C9")]
		public Blend BlendMode
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0x326BA9C", Offset = "0x326BA9C", VA = "0x326BA9C")]
			get
			{
				return default(Blend);
			}
			[Token(Token = "0x6000728")]
			[Address(RVA = "0x326BAA4", Offset = "0x326BAA4", VA = "0x326BAA4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public Gradient EffectGradient
		{
			[Token(Token = "0x6000729")]
			[Address(RVA = "0x326BAD4", Offset = "0x326BAD4", VA = "0x326BAD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600072A")]
			[Address(RVA = "0x326BADC", Offset = "0x326BADC", VA = "0x326BADC")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public Type GradientType
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0x326BB20", Offset = "0x326BB20", VA = "0x326BB20")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x600072C")]
			[Address(RVA = "0x326BB28", Offset = "0x326BB28", VA = "0x326BB28")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public float Offset
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0x326BB58", Offset = "0x326BB58", VA = "0x326BB58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600072E")]
			[Address(RVA = "0x326BB60", Offset = "0x326BB60", VA = "0x326BB60")]
			set
			{
			}
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x326BB90", Offset = "0x326BB90", VA = "0x326BB90", Slot = "20")]
		public override void ModifyMesh(VertexHelper helper)
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x326CB9C", Offset = "0x326CB9C", VA = "0x326CB9C")]
		private Color BlendColor(Color colorA, Color colorB)
		{
			return default(Color);
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x326CBF4", Offset = "0x326CBF4", VA = "0x326CBF4")]
		public UIGradient()
		{
		}
	}
}
namespace Michsky.UI.ModernUIPack
{
	[Token(Token = "0x2000134")]
	public class AnimatedIconHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x2000446")]
		public enum PlayType
		{
			[Token(Token = "0x4001AF0")]
			CLICK,
			[Token(Token = "0x4001AF1")]
			ON_POINTER_ENTER
		}

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECC20", Offset = "0x16ECC20")]
		public PlayType playType;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator iconAnimator;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Button eventButton;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isClicked;

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1C98030", Offset = "0x1C98030", VA = "0x1C98030")]
		private void Start()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x1C98144", Offset = "0x1C98144", VA = "0x1C98144")]
		public void ClickEvent()
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1C981D0", Offset = "0x1C981D0", VA = "0x1C981D0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x1C98244", Offset = "0x1C98244", VA = "0x1C98244", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x1C982B8", Offset = "0x1C982B8", VA = "0x1C982B8")]
		public AnimatedIconHandler()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class ButtonManager : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string buttonText;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip hoverSound;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clickSound;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button buttonVar;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI highlightedText;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource soundSource;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useCustomContent;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool enableButtonSounds;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool useHoverSound;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool useClickSound;

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1C982C0", Offset = "0x1C982C0", VA = "0x1C982C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x1C98440", Offset = "0x1C98440", VA = "0x1C98440")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x1C98494", Offset = "0x1C98494", VA = "0x1C98494", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x1C984E4", Offset = "0x1C984E4", VA = "0x1C984E4")]
		public ButtonManager()
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x1C9854C", Offset = "0x1C9854C", VA = "0x1C9854C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700E18", Offset = "0x1700E18")]
		private void <Start>b__12_0()
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1C98568", Offset = "0x1C98568", VA = "0x1C98568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700E28", Offset = "0x1700E28")]
		private void <Start>b__12_1()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class ButtonManagerBasic : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string buttonText;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip hoverSound;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clickSound;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button buttonVar;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource soundSource;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool useCustomContent;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool enableButtonSounds;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool useHoverSound;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool useClickSound;

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1C9858C", Offset = "0x1C9858C", VA = "0x1C9858C")]
		private void Start()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1C98720", Offset = "0x1C98720", VA = "0x1C98720")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1C9874C", Offset = "0x1C9874C", VA = "0x1C9874C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1C9879C", Offset = "0x1C9879C", VA = "0x1C9879C")]
		public ButtonManagerBasic()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1C98804", Offset = "0x1C98804", VA = "0x1C98804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700E38", Offset = "0x1700E38")]
		private void <Start>b__11_0()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1C98820", Offset = "0x1C98820", VA = "0x1C98820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700E48", Offset = "0x1700E48")]
		private void <Start>b__11_1()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class ButtonManagerBasicIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip hoverSound;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clickSound;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button buttonVar;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image normalIcon;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource soundSource;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool useCustomContent;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool enableButtonSounds;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool useHoverSound;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool useClickSound;

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1C98844", Offset = "0x1C98844", VA = "0x1C98844")]
		private void Start()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1C989C4", Offset = "0x1C989C4", VA = "0x1C989C4")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1C989E8", Offset = "0x1C989E8", VA = "0x1C989E8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1C98A38", Offset = "0x1C98A38", VA = "0x1C98A38")]
		public ButtonManagerBasicIcon()
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x1C98A48", Offset = "0x1C98A48", VA = "0x1C98A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700E58", Offset = "0x1700E58")]
		private void <Start>b__11_0()
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x1C98A64", Offset = "0x1C98A64", VA = "0x1C98A64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700E68", Offset = "0x1700E68")]
		private void <Start>b__11_1()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class ButtonManagerBasicWithIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buttonText;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip hoverSound;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip clickSound;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button buttonVar;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image normalImage;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource soundSource;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useCustomContent;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool enableButtonSounds;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool useHoverSound;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool useClickSound;

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1C98A88", Offset = "0x1C98A88", VA = "0x1C98A88")]
		private void Start()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x1C98C08", Offset = "0x1C98C08", VA = "0x1C98C08")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1C98C54", Offset = "0x1C98C54", VA = "0x1C98C54", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x1C98CA4", Offset = "0x1C98CA4", VA = "0x1C98CA4")]
		public ButtonManagerBasicWithIcon()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1C98D0C", Offset = "0x1C98D0C", VA = "0x1C98D0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700E78", Offset = "0x1700E78")]
		private void <Start>b__13_0()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1C98D28", Offset = "0x1C98D28", VA = "0x1C98D28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700E88", Offset = "0x1700E88")]
		private void <Start>b__13_1()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class ButtonManagerIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip hoverSound;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clickSound;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button buttonVar;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image normalIcon;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image highlightedIcon;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource soundSource;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useCustomContent;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool enableButtonSounds;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool useHoverSound;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool useClickSound;

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1C98D4C", Offset = "0x1C98D4C", VA = "0x1C98D4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1C98ECC", Offset = "0x1C98ECC", VA = "0x1C98ECC")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x1C98F10", Offset = "0x1C98F10", VA = "0x1C98F10", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x1C98F60", Offset = "0x1C98F60", VA = "0x1C98F60")]
		public ButtonManagerIcon()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x1C98F70", Offset = "0x1C98F70", VA = "0x1C98F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700E98", Offset = "0x1700E98")]
		private void <Start>b__12_0()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x1C98F8C", Offset = "0x1C98F8C", VA = "0x1C98F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700EA8", Offset = "0x1700EA8")]
		private void <Start>b__12_1()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class ButtonManagerWithIcon : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite buttonIcon;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buttonText;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent buttonEvent;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip hoverSound;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip clickSound;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button buttonVar;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image normalIcon;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image highlightedIcon;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI normalText;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI highlightedText;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource soundSource;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool useCustomContent;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool enableButtonSounds;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool useHoverSound;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool useClickSound;

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x1C98FB0", Offset = "0x1C98FB0", VA = "0x1C98FB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x1C99130", Offset = "0x1C99130", VA = "0x1C99130")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x1C991AC", Offset = "0x1C991AC", VA = "0x1C991AC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x1C991FC", Offset = "0x1C991FC", VA = "0x1C991FC")]
		public ButtonManagerWithIcon()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x1C99264", Offset = "0x1C99264", VA = "0x1C99264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700EB8", Offset = "0x1700EB8")]
		private void <Start>b__15_0()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x1C99280", Offset = "0x1C99280", VA = "0x1C99280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1700EC8", Offset = "0x1700EC8")]
		private void <Start>b__15_1()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class DemoListShadow : MonoBehaviour
	{
		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Scrollbar listScrollbar;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isTop;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool enableAnim;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator shadowAnimator;

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x1C9A760", Offset = "0x1C9A760", VA = "0x1C9A760")]
		private void Start()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x1C9A818", Offset = "0x1C9A818", VA = "0x1C9A818")]
		private void Update()
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x1C9AA98", Offset = "0x1C9AA98", VA = "0x1C9AA98")]
		public void ScrollUp()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x1C9AAA4", Offset = "0x1C9AAA4", VA = "0x1C9AAA4")]
		public void ScrollDown()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x1C9AAB0", Offset = "0x1C9AAB0", VA = "0x1C9AAB0")]
		public DemoListShadow()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class DemoTopButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator buttonAnimator;

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x1C9AAB8", Offset = "0x1C9AAB8", VA = "0x1C9AAB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x1C9AB18", Offset = "0x1C9AB18", VA = "0x1C9AB18", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x1C9AC1C", Offset = "0x1C9AC1C", VA = "0x1C9AC1C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x1C9AD20", Offset = "0x1C9AD20", VA = "0x1C9AD20")]
		public DemoTopButton()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class LaunchURL : MonoBehaviour
	{
		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string URL;

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x1C9D7C4", Offset = "0x1C9D7C4", VA = "0x1C9D7C4")]
		public void urlLinkOrWeb()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x1C9D7D0", Offset = "0x1C9D7D0", VA = "0x1C9D7D0")]
		public LaunchURL()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class CustomDropdown : MonoBehaviour, IPointerExitHandler, IEventSystemHandler
	{
		[Serializable]
		[Token(Token = "0x2000447")]
		public class DropdownEvent : UnityEvent<int>
		{
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0x1C9A494", Offset = "0x1C9A494", VA = "0x1C9A494")]
			public DropdownEvent()
			{
			}
		}

		[Token(Token = "0x2000448")]
		public enum AnimationType
		{
			[Token(Token = "0x4001AF3")]
			FADING,
			[Token(Token = "0x4001AF4")]
			SLIDING,
			[Token(Token = "0x4001AF5")]
			STYLISH
		}

		[Serializable]
		[Token(Token = "0x2000449")]
		public class Item
		{
			[Token(Token = "0x4001AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemName;

			[Token(Token = "0x4001AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Sprite itemIcon;

			[Token(Token = "0x4001AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent OnItemSelection;

			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0x1C9A1F4", Offset = "0x1C9A1F4", VA = "0x1C9A1F4")]
			public Item()
			{
			}
		}

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E95BC", Offset = "0x16E95BC")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomDropdown <>4__this;

			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0x1C99DF4", Offset = "0x1C99DF4", VA = "0x1C99DF4")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0x1C9A364", Offset = "0x1C9A364", VA = "0x1C9A364")]
			internal void <SetupDropdown>b__0()
			{
			}
		}

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject triggerObject;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI selectedText;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image selectedImage;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform itemParent;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject itemObject;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject scrollbar;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VerticalLayoutGroup itemList;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform currentListParent;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform listParent;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool enableIcon;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool enableTrigger;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool enableScrollbar;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool setHighPriorty;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool outOnPointerExit;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool isListItem;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public bool invokeAtStart;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationType animationType;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int selectedItemIndex;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool saveSelected;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string dropdownTag;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public List<Item> dropdownItems;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16ECC68", Offset = "0x16ECC68")]
		public DropdownEvent dropdownEvent;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Animator dropdownAnimator;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool isOn;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public int index;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public int siblingIndex;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private TextMeshProUGUI setItemText;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Image setItemImage;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Sprite imageHelper;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string textHelper;

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x1C992A4", Offset = "0x1C992A4", VA = "0x1C992A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x1C9952C", Offset = "0x1C9952C", VA = "0x1C9952C")]
		public void SetupDropdown()
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x1C99CA0", Offset = "0x1C99CA0", VA = "0x1C99CA0")]
		public void ChangeDropdownInfo(int itemIndex)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x1C99DFC", Offset = "0x1C99DFC", VA = "0x1C99DFC")]
		public void Animate()
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x1C9A02C", Offset = "0x1C9A02C", VA = "0x1C9A02C", Slot = "4")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x1C9A0A4", Offset = "0x1C9A0A4", VA = "0x1C9A0A4")]
		public void UpdateValues()
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x1C9A144", Offset = "0x1C9A144", VA = "0x1C9A144")]
		public void CreateNewItem(string title, Sprite icon)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x1C9A254", Offset = "0x1C9A254", VA = "0x1C9A254")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0x1C9A2C8", Offset = "0x1C9A2C8", VA = "0x1C9A2C8")]
		public CustomDropdown()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class DropdownMultiSelect : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200044B")]
		public class ToggleEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0x1C9BCBC", Offset = "0x1C9BCBC", VA = "0x1C9BCBC")]
			public ToggleEvent()
			{
			}
		}

		[Token(Token = "0x200044C")]
		public enum AnimationType
		{
			[Token(Token = "0x4001AFC")]
			FADING,
			[Token(Token = "0x4001AFD")]
			SLIDING,
			[Token(Token = "0x4001AFE")]
			STYLISH
		}

		[Serializable]
		[Token(Token = "0x200044D")]
		public class Item
		{
			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemName;

			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isOn;

			[Token(Token = "0x4001B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public ToggleEvent toggleEvents;

			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0x1C9BB44", Offset = "0x1C9BB44", VA = "0x1C9BB44")]
			public Item()
			{
			}
		}

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject triggerObject;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform itemParent;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemObject;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject scrollbar;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VerticalLayoutGroup itemList;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform currentListParent;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform listParent;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator dropdownAnimator;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI setItemText;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool enableIcon;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool enableTrigger;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool enableScrollbar;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool setHighPriorty;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool outOnPointerExit;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool isListItem;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationType animationType;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool saveSelected;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool invokeAtStart;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string toggleTag;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public List<Item> dropdownItems;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string textHelper;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string newItemTitle;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Sprite newItemIcon;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isOn;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int iHelper;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int siblingIndex;

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1C9AD28", Offset = "0x1C9AD28", VA = "0x1C9AD28")]
		private void Start()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x1C9AF84", Offset = "0x1C9AF84", VA = "0x1C9AF84")]
		public void SetupDropdown()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x1C9B6CC", Offset = "0x1C9B6CC", VA = "0x1C9B6CC")]
		public void UpdateToggle(bool isOn)
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x1C9B6D0", Offset = "0x1C9B6D0", VA = "0x1C9B6D0")]
		public void SaveToggle(bool isOn)
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1C9B79C", Offset = "0x1C9B79C", VA = "0x1C9B79C")]
		public void Animate()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x1C9B9CC", Offset = "0x1C9B9CC", VA = "0x1C9B9CC")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1C9BA44", Offset = "0x1C9BA44", VA = "0x1C9BA44")]
		public void UpdateValues()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1C9BAB4", Offset = "0x1C9BAB4", VA = "0x1C9BAB4")]
		public void CreateNewItem()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1C9BBA4", Offset = "0x1C9BBA4", VA = "0x1C9BBA4")]
		public void SetItemTitle(string title)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x1C9BBAC", Offset = "0x1C9BBAC", VA = "0x1C9BBAC")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1C9BC20", Offset = "0x1C9BC20", VA = "0x1C9BC20")]
		public DropdownMultiSelect()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class LayoutGroupPositionFix : MonoBehaviour
	{
		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E95CC", Offset = "0x16E95CC")]
		private sealed class <ExecuteAfterTime>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LayoutGroupPositionFix <>4__this;

			[Token(Token = "0x17000438")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EF0")]
				[Address(RVA = "0x1C9DA58", Offset = "0x1C9DA58", VA = "0x1C9DA58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000439")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EF2")]
				[Address(RVA = "0x1C9DAC0", Offset = "0x1C9DAC0", VA = "0x1C9DAC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EED")]
			[Address(RVA = "0x1C9D8F4", Offset = "0x1C9D8F4", VA = "0x1C9D8F4")]
			[DebuggerHidden]
			public <ExecuteAfterTime>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x1C9D928", Offset = "0x1C9D928", VA = "0x1C9D928", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x1C9D92C", Offset = "0x1C9D92C", VA = "0x1C9D92C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x1C9DA60", Offset = "0x1C9DA60", VA = "0x1C9DA60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LayoutGroup lg;

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x1C9D7D8", Offset = "0x1C9D7D8", VA = "0x1C9D7D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1C9D868", Offset = "0x1C9D868", VA = "0x1C9D868")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1700ED8", Offset = "0x1700ED8")]
		private IEnumerator ExecuteAfterTime(float time)
		{
			return null;
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x1C9D920", Offset = "0x1C9D920", VA = "0x1C9D920")]
		public LayoutGroupPositionFix()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class UIElementInFront : MonoBehaviour
	{
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x1CA2A88", Offset = "0x1CA2A88", VA = "0x1CA2A88")]
		private void Start()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x1CA2AAC", Offset = "0x1CA2AAC", VA = "0x1CA2AAC")]
		public UIElementInFront()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class HorizontalSelector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200044F")]
		public class SelectorEvent : UnityEvent<int>
		{
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x1C9D774", Offset = "0x1C9D774", VA = "0x1C9D774")]
			public SelectorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000450")]
		public class Item
		{
			[Token(Token = "0x4001B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string itemTitle;

			[Token(Token = "0x4001B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent onValueChanged;

			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0x1C9D11C", Offset = "0x1C9D11C", VA = "0x1C9D11C")]
			public Item()
			{
			}
		}

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI labelHelper;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform indicatorParent;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject indicatorObject;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator selectorAnimator;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string newItemTitle;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool saveValue;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string selectorTag;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool enableIndicators;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool invokeAtStart;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool invertAnimation;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool loopSelection;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int defaultIndex;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int index;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Item> itemList;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16ECCDC", Offset = "0x16ECCDC")]
		public SelectorEvent selectorEvent;

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x1C9BD0C", Offset = "0x1C9BD0C", VA = "0x1C9BD0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1C9C048", Offset = "0x1C9C048", VA = "0x1C9C048")]
		public void SetupSelector()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x1C9C630", Offset = "0x1C9C630", VA = "0x1C9C630")]
		public void PreviousClick()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x1C9CB54", Offset = "0x1C9CB54", VA = "0x1C9CB54")]
		public void ForwardClick()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x1C9D074", Offset = "0x1C9D074", VA = "0x1C9D074")]
		public void CreateNewItem(string title)
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0x1C9D17C", Offset = "0x1C9D17C", VA = "0x1C9D17C")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1C9D1F0", Offset = "0x1C9D1F0", VA = "0x1C9D1F0")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x1C9D6D8", Offset = "0x1C9D6D8", VA = "0x1C9D6D8")]
		public HorizontalSelector()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class CustomInputField : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECCF0", Offset = "0x16ECCF0")]
		public GameObject fieldTrigger;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_InputField inputText;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator inputFieldAnimator;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isEmpty;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isClicked;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string inAnim;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string outAnim;

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x1C9A4E4", Offset = "0x1C9A4E4", VA = "0x1C9A4E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x1C9A5D4", Offset = "0x1C9A5D4", VA = "0x1C9A5D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1C9A63C", Offset = "0x1C9A63C", VA = "0x1C9A63C")]
		public void Animate()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1C9A688", Offset = "0x1C9A688", VA = "0x1C9A688")]
		public void FieldTrigger()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x1C9A6DC", Offset = "0x1C9A6DC", VA = "0x1C9A6DC", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x1C9A6E0", Offset = "0x1C9A6E0", VA = "0x1C9A6E0")]
		public CustomInputField()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class ModalWindowManager : MonoBehaviour
	{
		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image windowIcon;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI windowTitle;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI windowDescription;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button confirmButton;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button cancelButton;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite icon;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string titleText;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x16ECD28", Offset = "0x16ECD28")]
		public string descriptionText;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onConfirm;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onCancel;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool sharpAnimations;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool useCustomValues;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator mwAnimator;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool isOn;

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x1C9DAC8", Offset = "0x1C9DAC8", VA = "0x1C9DAC8")]
		private void Start()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x1C9DD24", Offset = "0x1C9DD24", VA = "0x1C9DD24")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x1C9DE70", Offset = "0x1C9DE70", VA = "0x1C9DE70")]
		public void OpenWindow()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x1C9DEFC", Offset = "0x1C9DEFC", VA = "0x1C9DEFC")]
		public void CloseWindow()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x1C9DF84", Offset = "0x1C9DF84", VA = "0x1C9DF84")]
		public void AnimateWindow()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x1C9E044", Offset = "0x1C9E044", VA = "0x1C9E044")]
		public ModalWindowManager()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class ModalWindowTabs : MonoBehaviour
	{
		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECD38", Offset = "0x16ECD38")]
		public List<GameObject> panels;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECD70", Offset = "0x16ECD70")]
		public List<GameObject> buttons;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string panelFadeIn;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string panelFadeOut;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string buttonFadeIn;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string buttonFadeOut;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject currentPanel;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject nextPanel;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject currentButton;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject nextButton;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECDA8", Offset = "0x16ECDA8")]
		public int currentPanelIndex;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int currentButtonlIndex;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator currentPanelAnimator;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator nextPanelAnimator;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Animator currentButtonAnimator;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator nextButtonAnimator;

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x1C9E0BC", Offset = "0x1C9E0BC", VA = "0x1C9E0BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x1C9E1F4", Offset = "0x1C9E1F4", VA = "0x1C9E1F4")]
		public void PanelAnim(int newPanel)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x1C9E440", Offset = "0x1C9E440", VA = "0x1C9E440")]
		public ModalWindowTabs()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class NotificationManager : MonoBehaviour
	{
		[Token(Token = "0x2000451")]
		public enum NotificationStyle
		{
			[Token(Token = "0x4001B09")]
			FADING,
			[Token(Token = "0x4001B0A")]
			POPUP,
			[Token(Token = "0x4001B0B")]
			SLIDING
		}

		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E95DC", Offset = "0x16E95DC")]
		private sealed class <StartTimer>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NotificationManager <>4__this;

			[Token(Token = "0x1700043A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EF8")]
				[Address(RVA = "0x1C9ED14", Offset = "0x1C9ED14", VA = "0x1C9ED14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EFA")]
				[Address(RVA = "0x1C9ED7C", Offset = "0x1C9ED7C", VA = "0x1C9ED7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0x1C9E93C", Offset = "0x1C9E93C", VA = "0x1C9E93C")]
			[DebuggerHidden]
			public <StartTimer>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0x1C9EC20", Offset = "0x1C9EC20", VA = "0x1C9EC20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0x1C9EC24", Offset = "0x1C9EC24", VA = "0x1C9EC24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0x1C9ED1C", Offset = "0x1C9ED1C", VA = "0x1C9ED1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite icon;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x16ECDE0", Offset = "0x16ECDE0")]
		public string description;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator notificationAnimator;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image iconObj;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI titleObj;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI descriptionObj;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool enableTimer;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float timer;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useCustomContent;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool useStacking;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public NotificationStyle notificationStyle;

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x1C9E548", Offset = "0x1C9E548", VA = "0x1C9E548")]
		private void Start()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x1C9E8C0", Offset = "0x1C9E8C0", VA = "0x1C9E8C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1700F3C", Offset = "0x1700F3C")]
		private IEnumerator StartTimer()
		{
			return null;
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x1C9E968", Offset = "0x1C9E968", VA = "0x1C9E968")]
		public void OpenNotification()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x1C9E9F0", Offset = "0x1C9E9F0", VA = "0x1C9E9F0")]
		public void CloseNotification()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x1C9EA4C", Offset = "0x1C9EA4C", VA = "0x1C9EA4C")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x1C9EB98", Offset = "0x1C9EB98", VA = "0x1C9EB98")]
		public NotificationManager()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class NotificationStacking : MonoBehaviour
	{
		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E95EC", Offset = "0x16E95EC")]
		private sealed class <StartNotification>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NotificationStacking <>4__this;

			[Token(Token = "0x1700043C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EFE")]
				[Address(RVA = "0x1C9F288", Offset = "0x1C9F288", VA = "0x1C9F288", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F00")]
				[Address(RVA = "0x1C9F2F0", Offset = "0x1C9F2F0", VA = "0x1C9F2F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0x1C9F04C", Offset = "0x1C9F04C", VA = "0x1C9F04C")]
			[DebuggerHidden]
			public <StartNotification>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0x1C9F0FC", Offset = "0x1C9F0FC", VA = "0x1C9F0FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0x1C9F100", Offset = "0x1C9F100", VA = "0x1C9F100", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0x1C9F290", Offset = "0x1C9F290", VA = "0x1C9F290", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<NotificationManager> notifications;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool enableUpdating;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECE10", Offset = "0x16ECE10")]
		public float delay;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int currentNotification;

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x1C9ED84", Offset = "0x1C9ED84", VA = "0x1C9ED84")]
		private void Update()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x1C9EFD0", Offset = "0x1C9EFD0", VA = "0x1C9EFD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1700FA0", Offset = "0x1700FA0")]
		private IEnumerator StartNotification()
		{
			return null;
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x1C9F078", Offset = "0x1C9F078", VA = "0x1C9F078")]
		public NotificationStacking()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class PBFilled : MonoBehaviour
	{
		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECE48", Offset = "0x16ECE48")]
		public TextMeshProUGUI minLabel;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI maxLabel;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECE80", Offset = "0x16ECE80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16ECE80", Offset = "0x16ECE80")]
		public int transitionAfter;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color minColor;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color maxColor;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ProgressBar progressBar;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator barAnimatior;

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1C9F2F8", Offset = "0x1C9F2F8", VA = "0x1C9F2F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x1C9F3DC", Offset = "0x1C9F3DC", VA = "0x1C9F3DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x1C9F4C4", Offset = "0x1C9F4C4", VA = "0x1C9F4C4")]
		public PBFilled()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class ProgressBar : MonoBehaviour
	{
		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16ECED8", Offset = "0x16ECED8")]
		public float currentPercent;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16ECEF4", Offset = "0x16ECEF4")]
		public int speed;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image loadingBar;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI textPercent;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isOn;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool restart;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool invert;

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x1C9F55C", Offset = "0x1C9F55C", VA = "0x1C9F55C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x1C9F644", Offset = "0x1C9F644", VA = "0x1C9F644")]
		private void Update()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1C9F7E4", Offset = "0x1C9F7E4", VA = "0x1C9F7E4")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x1C9F8C4", Offset = "0x1C9F8C4", VA = "0x1C9F8C4")]
		public ProgressBar()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class RadialSlider : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x2000454")]
		public class SliderEvent : UnityEvent<float>
		{
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0x1CA01A8", Offset = "0x1CA01A8", VA = "0x1CA01A8")]
			public SliderEvent()
			{
			}
		}

		[Token(Token = "0x40007E8")]
		private const string PREFS_UI_SAVE_NAME = "Radial";

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float currentValue;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image sliderImage;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform indicatorPivot;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI valueText;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxValue;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16ECF10", Offset = "0x16ECF10")]
		public int decimals;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isPercent;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool rememberValue;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string sliderTag;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SliderEvent onValueChanged;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent onPointerEnter;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onPointerExit;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GraphicRaycaster graphicRaycaster;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RectTransform hitRectTransform;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isPointerDown;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float currentAngle;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float currentAngleOnPointerDown;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float valueDisplayPrecision;

		[Token(Token = "0x170000CD")]
		public float SliderAngle
		{
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0x1C9F8CC", Offset = "0x1C9F8CC", VA = "0x1C9F8CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0x1C9F8D4", Offset = "0x1C9F8D4", VA = "0x1C9F8D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public float SliderValue
		{
			[Token(Token = "0x60007A8")]
			[Address(RVA = "0x1C9F95C", Offset = "0x1C9F95C", VA = "0x1C9F95C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007A9")]
			[Address(RVA = "0x1C9F9C0", Offset = "0x1C9F9C0", VA = "0x1C9F9C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public float SliderValueRaw
		{
			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x1C9F9A4", Offset = "0x1C9F9A4", VA = "0x1C9F9A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0x1C9F9D8", Offset = "0x1C9F9D8", VA = "0x1C9F9D8")]
			set
			{
			}
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x1C9F9F0", Offset = "0x1C9F9F0", VA = "0x1C9F9F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x1C9FB34", Offset = "0x1C9FB34", VA = "0x1C9FB34")]
		private void Start()
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x1C9FDE4", Offset = "0x1C9FDE4", VA = "0x1C9FDE4", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x1CA0020", Offset = "0x1CA0020", VA = "0x1CA0020", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x1CA00E8", Offset = "0x1CA00E8", VA = "0x1CA00E8", Slot = "6")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x1CA00F0", Offset = "0x1CA00F0", VA = "0x1CA00F0", Slot = "7")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x1CA010C", Offset = "0x1CA010C", VA = "0x1CA010C", Slot = "8")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x1C9FBCC", Offset = "0x1C9FBCC", VA = "0x1C9FBCC")]
		public void LoadState()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x1CA0074", Offset = "0x1CA0074", VA = "0x1CA0074")]
		public void SaveState()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x1C9FC38", Offset = "0x1C9FC38", VA = "0x1C9FC38")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x1CA0064", Offset = "0x1CA0064", VA = "0x1CA0064")]
		private bool HasValueChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x1C9FE7C", Offset = "0x1C9FE7C", VA = "0x1C9FE7C")]
		private void HandleSliderMouseInput(PointerEventData eventData, bool allowValueWrap)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1CA0128", Offset = "0x1CA0128", VA = "0x1CA0128")]
		public RadialSlider()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class RangeMaxSlider : Slider
	{
		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public RangeMinSlider minSlider;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public TextMeshProUGUI label;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string numberFormat;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float realValue;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private bool assignedRealValue;

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x1CA01F8", Offset = "0x1CA01F8", VA = "0x1CA01F8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x1CA0208", Offset = "0x1CA0208", VA = "0x1CA0208", Slot = "53")]
		protected override void Set(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x1CA046C", Offset = "0x1CA046C", VA = "0x1CA046C")]
		public void Refresh(float input)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x1CA0480", Offset = "0x1CA0480", VA = "0x1CA0480")]
		public RangeMaxSlider()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class RangeMinSlider : Slider
	{
		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECF38", Offset = "0x16ECF38")]
		public RangeMaxSlider maxSlider;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public TextMeshProUGUI label;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string numberFormat;

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x1CA0488", Offset = "0x1CA0488", VA = "0x1CA0488", Slot = "53")]
		protected override void Set(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x1CA06C0", Offset = "0x1CA06C0", VA = "0x1CA06C0")]
		public void Refresh(float input)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x1CA06D4", Offset = "0x1CA06D4", VA = "0x1CA06D4")]
		public RangeMinSlider()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class RangeSlider : MonoBehaviour
	{
		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECF70", Offset = "0x16ECF70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16ECF70", Offset = "0x16ECF70")]
		public int DecimalPlaces;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minValue;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxValue;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool useWholeNumbers;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool showLabels;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECFC4", Offset = "0x16ECFC4")]
		public RangeMinSlider minSlider;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI minSliderLabel;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ECFFC", Offset = "0x16ECFFC")]
		public RangeMaxSlider maxSlider;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI maxSliderLabel;

		[Token(Token = "0x170000D0")]
		public float CurrentLowerValue
		{
			[Token(Token = "0x60007C0")]
			[Address(RVA = "0x1CA06DC", Offset = "0x1CA06DC", VA = "0x1CA06DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D1")]
		public float CurrentUpperValue
		{
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0x1CA0700", Offset = "0x1CA0700", VA = "0x1CA0700")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x1CA071C", Offset = "0x1CA071C", VA = "0x1CA071C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x1CA08F4", Offset = "0x1CA08F4", VA = "0x1CA08F4")]
		public RangeSlider()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class SliderManager : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x2000455")]
		public class SliderEvent : UnityEvent<float>
		{
			[Token(Token = "0x6001F02")]
			[Address(RVA = "0x1CA13D8", Offset = "0x1CA13D8", VA = "0x1CA13D8")]
			public SliderEvent()
			{
			}
		}

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider mainSlider;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI valueText;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI popupValueText;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool enableSaving;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sliderTag;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool usePercent;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool showValue;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool showPopupValue;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool useRoundValue;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public SliderEvent onValueChanged;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16ED044", Offset = "0x16ED044")]
		public SliderEvent sliderEvent;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator sliderAnimator;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float saveValue;

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x1CA090C", Offset = "0x1CA090C", VA = "0x1CA090C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x1CA0BC4", Offset = "0x1CA0BC4", VA = "0x1CA0BC4")]
		private void Update()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x1CA1268", Offset = "0x1CA1268", VA = "0x1CA1268", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x1CA12D8", Offset = "0x1CA12D8", VA = "0x1CA12D8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x1CA1348", Offset = "0x1CA1348", VA = "0x1CA1348")]
		public SliderManager()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x1CA1428", Offset = "0x1CA1428", VA = "0x1CA1428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701004", Offset = "0x1701004")]
		private void <Start>b__14_0(float <p0>)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x1CA14A8", Offset = "0x1CA14A8", VA = "0x1CA14A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701014", Offset = "0x1701014")]
		private void <Start>b__14_1(float <p0>)
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class SwitchManager : MonoBehaviour
	{
		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnEvents;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OffEvents;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool saveValue;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string switchTag;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isOn;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool invokeAtStart;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator switchAnimator;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button switchButton;

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x1CA151C", Offset = "0x1CA151C", VA = "0x1CA151C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x1CA18B4", Offset = "0x1CA18B4", VA = "0x1CA18B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x1CA1AF8", Offset = "0x1CA1AF8", VA = "0x1CA1AF8")]
		public void AnimateSwitch()
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x1CA1C08", Offset = "0x1CA1C08", VA = "0x1CA1C08")]
		public SwitchManager()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class ToggleAnim : MonoBehaviour
	{
		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggleObject;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator toggleAnimator;

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x1CA1C78", Offset = "0x1CA1C78", VA = "0x1CA1C78")]
		private void Start()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x1CA1DC4", Offset = "0x1CA1DC4", VA = "0x1CA1DC4")]
		private void TaskOnClick(bool value)
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x1CA1E3C", Offset = "0x1CA1E3C", VA = "0x1CA1E3C")]
		public ToggleAnim()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class TooltipContent : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED058", Offset = "0x16ED058")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x16ED058", Offset = "0x16ED058")]
		public string description;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED0A4", Offset = "0x16ED0A4")]
		public GameObject tooltipRect;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI descriptionText;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TooltipManager tpManager;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Animator tooltipAnimator;

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x1CA1E44", Offset = "0x1CA1E44", VA = "0x1CA1E44")]
		private void Start()
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x1CA20A0", Offset = "0x1CA20A0", VA = "0x1CA20A0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x1CA21AC", Offset = "0x1CA21AC", VA = "0x1CA21AC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x1CA2250", Offset = "0x1CA2250", VA = "0x1CA2250")]
		public TooltipContent()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class TooltipManager : MonoBehaviour
	{
		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas mainCanvas;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject tooltipObject;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tooltipContent;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16ED0EC", Offset = "0x16ED0EC")]
		public float tooltipSmoothness;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool allowUpdating;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int vBorderTop;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int vBorderBottom;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int hBorderLeft;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int hBorderRight;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 uiPos;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityEngine.Vector3 cursorPos;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform tooltipRect;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RectTransform tooltipZHelper;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UnityEngine.Vector3 contentPos;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private UnityEngine.Vector3 tooltipVelocity;

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x1CA2258", Offset = "0x1CA2258", VA = "0x1CA2258")]
		private void Start()
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x1CA23D0", Offset = "0x1CA23D0", VA = "0x1CA23D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x1CA26B8", Offset = "0x1CA26B8", VA = "0x1CA26B8")]
		public void CheckForBounds()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1CA29BC", Offset = "0x1CA29BC", VA = "0x1CA29BC")]
		public TooltipManager()
		{
		}
	}
	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x16E6430", Offset = "0x16E6430")]
	public class UIManager : ScriptableObject
	{
		[Token(Token = "0x2000456")]
		public enum ButtonThemeType
		{
			[Token(Token = "0x4001B13")]
			BASIC,
			[Token(Token = "0x4001B14")]
			CUSTOM
		}

		[Token(Token = "0x2000457")]
		public enum DropdownThemeType
		{
			[Token(Token = "0x4001B16")]
			BASIC,
			[Token(Token = "0x4001B17")]
			CUSTOM
		}

		[Token(Token = "0x2000458")]
		public enum DropdownAnimationType
		{
			[Token(Token = "0x4001B19")]
			FADING,
			[Token(Token = "0x4001B1A")]
			SLIDING,
			[Token(Token = "0x4001B1B")]
			STYLISH
		}

		[Token(Token = "0x2000459")]
		public enum ModalWindowThemeType
		{
			[Token(Token = "0x4001B1D")]
			BASIC,
			[Token(Token = "0x4001B1E")]
			CUSTOM
		}

		[Token(Token = "0x200045A")]
		public enum NotificationThemeType
		{
			[Token(Token = "0x4001B20")]
			BASIC,
			[Token(Token = "0x4001B21")]
			CUSTOM
		}

		[Token(Token = "0x200045B")]
		public enum SliderThemeType
		{
			[Token(Token = "0x4001B23")]
			BASIC,
			[Token(Token = "0x4001B24")]
			CUSTOM
		}

		[Token(Token = "0x200045C")]
		public enum ToggleThemeType
		{
			[Token(Token = "0x4001B26")]
			BASIC,
			[Token(Token = "0x4001B27")]
			CUSTOM
		}

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool enableDynamicUpdate;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool enableExtendedColorPicker;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[HideInInspector]
		public bool editorHints;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color animatedIconColor;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ButtonThemeType buttonThemeType;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_FontAsset buttonFont;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float buttonFontSize;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color buttonBorderColor;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color buttonFilledColor;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color buttonTextBasicColor;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Color buttonTextColor;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color buttonTextHighlightedColor;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color buttonIconBasicColor;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color buttonIconColor;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Color buttonIconHighlightedColor;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TMP_FontAsset dropdownItemFont;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float dropdownItemFontSize;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public DropdownThemeType dropdownThemeType;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public DropdownAnimationType dropdownAnimationType;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public TMP_FontAsset dropdownFont;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float dropdownFontSize;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public Color dropdownColor;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Color dropdownTextColor;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public Color dropdownIconColor;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public Color dropdownItemColor;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public Color dropdownItemTextColor;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public Color dropdownItemIconColor;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public TMP_FontAsset selectorFont;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float hSelectorFontSize;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public Color selectorColor;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public Color selectorHighlightedColor;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public bool hSelectorInvertAnimation;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		public bool hSelectorLoopSelection;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public TMP_FontAsset inputFieldFont;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float inputFieldFontSize;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public Color inputFieldColor;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public TMP_FontAsset modalWindowTitleFont;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public TMP_FontAsset modalWindowContentFont;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public DropdownThemeType modalThemeType;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public Color modalWindowTitleColor;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public Color modalWindowDescriptionColor;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public Color modalWindowIconColor;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public Color modalWindowBackgroundColor;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public Color modalWindowContentPanelColor;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public TMP_FontAsset notificationTitleFont;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float notificationTitleFontSize;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public TMP_FontAsset notificationDescriptionFont;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float notificationDescriptionFontSize;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public NotificationThemeType notificationThemeType;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public Color notificationBackgroundColor;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Color notificationTitleColor;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public Color notificationDescriptionColor;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public Color notificationIconColor;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public TMP_FontAsset progressBarLabelFont;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public float progressBarLabelFontSize;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public Color progressBarColor;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public Color progressBarBackgroundColor;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public Color progressBarLoopBackgroundColor;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		public Color progressBarLabelColor;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public Color scrollbarColor;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public Color scrollbarBackgroundColor;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public TMP_FontAsset sliderLabelFont;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public float sliderLabelFontSize;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		public SliderThemeType sliderThemeType;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public Color sliderColor;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public Color sliderBackgroundColor;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public Color sliderLabelColor;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public Color sliderPopupLabelColor;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public Color sliderHandleColor;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public Color switchBorderColor;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public Color switchBackgroundColor;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public Color switchHandleOnColor;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public Color switchHandleOffColor;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public TMP_FontAsset toggleFont;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public float toggleFontSize;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		public ToggleThemeType toggleThemeType;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public Color toggleTextColor;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public Color toggleBorderColor;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public Color toggleBackgroundColor;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public Color toggleCheckColor;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public TMP_FontAsset tooltipFont;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public float tooltipFontSize;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		public Color tooltipTextColor;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		public Color tooltipBackgroundColor;

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x1CA2AB4", Offset = "0x1CA2AB4", VA = "0x1CA2AB4")]
		public UIManager()
		{
		}
	}
	[Token(Token = "0x2000154")]
	[ExecuteInEditMode]
	public class UIManagerAnimatedIcon : MonoBehaviour
	{
		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED138", Offset = "0x16ED138")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED170", Offset = "0x16ED170")]
		public List<GameObject> images;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> imagesWithAlpha;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1CA3340", Offset = "0x1CA3340", VA = "0x1CA3340")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1CA34A0", Offset = "0x1CA34A0", VA = "0x1CA34A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1CA3668", Offset = "0x1CA3668", VA = "0x1CA3668")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1CA34D8", Offset = "0x1CA34D8", VA = "0x1CA34D8")]
		private void UpdateAnimatedIcon()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x1CA3708", Offset = "0x1CA3708", VA = "0x1CA3708")]
		public UIManagerAnimatedIcon()
		{
		}
	}
	[Token(Token = "0x2000155")]
	[ExecuteInEditMode]
	public class UIManagerButton : MonoBehaviour
	{
		[Token(Token = "0x200045D")]
		public enum ButtonType
		{
			[Token(Token = "0x4001B29")]
			BASIC,
			[Token(Token = "0x4001B2A")]
			BASIC_ONLY_ICON,
			[Token(Token = "0x4001B2B")]
			BASIC_WITH_ICON,
			[Token(Token = "0x4001B2C")]
			BASIC_OUTLINE,
			[Token(Token = "0x4001B2D")]
			BASIC_OUTLINE_ONLY_ICON,
			[Token(Token = "0x4001B2E")]
			BASIC_OUTLINE_WITH_ICON,
			[Token(Token = "0x4001B2F")]
			RADIAL_ONLY_ICON,
			[Token(Token = "0x4001B30")]
			RADIAL_OUTLINE_ONLY_ICON,
			[Token(Token = "0x4001B31")]
			ROUNDED,
			[Token(Token = "0x4001B32")]
			ROUNDED_OUTLINE
		}

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED1A8", Offset = "0x16ED1A8")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonType buttonType;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Image basicFilled;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public TextMeshProUGUI basicText;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Image basicOnlyIconFilled;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Image basicOnlyIconIcon;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Image basicWithIconFilled;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Image basicWithIconIcon;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public TextMeshProUGUI basicWithIconText;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Image basicOutlineBorder;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Image basicOutlineFilled;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineText;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineTextHighligted;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Image basicOutlineOOBorder;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Image basicOutlineOOFilled;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Image basicOutlineOOIcon;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Image basicOutlineOOIconHighlighted;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Image basicOutlineWOBorder;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Image basicOutlineWOFilled;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Image basicOutlineWOIcon;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Image basicOutlineWOIconHighlighted;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineWOText;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public TextMeshProUGUI basicOutlineWOTextHighligted;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Image radialOOBackground;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Image radialOOIcon;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public Image radialOutlineOOBorder;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public Image radialOutlineOOFilled;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public Image radialOutlineOOIcon;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public Image radialOutlineOOIconHighlighted;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public Image roundedBackground;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public TextMeshProUGUI roundedText;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public Image roundedOutlineBorder;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Image roundedOutlineFilled;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public TextMeshProUGUI roundedOutlineText;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public TextMeshProUGUI roundedOutlineTextHighligted;

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1CA37B0", Offset = "0x1CA37B0", VA = "0x1CA37B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x1CA3910", Offset = "0x1CA3910", VA = "0x1CA3910")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x1CA4E04", Offset = "0x1CA4E04", VA = "0x1CA4E04")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x1CA3948", Offset = "0x1CA3948", VA = "0x1CA3948")]
		private void UpdateButton()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x1CA4EA4", Offset = "0x1CA4EA4", VA = "0x1CA4EA4")]
		public UIManagerButton()
		{
		}
	}
	[Token(Token = "0x2000156")]
	[ExecuteInEditMode]
	public class UIManagerDropdown : MonoBehaviour
	{
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED3F0", Offset = "0x16ED3F0")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED428", Offset = "0x16ED428")]
		public Image background;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image contentBackground;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image mainIcon;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI mainText;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image expandIcon;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image itemBackground;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image itemIcon;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI itemText;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CustomDropdown dropdownMain;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DropdownMultiSelect dropdownMulti;

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x1CA4EAC", Offset = "0x1CA4EAC", VA = "0x1CA4EAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x1CA511C", Offset = "0x1CA511C", VA = "0x1CA511C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1CA5864", Offset = "0x1CA5864", VA = "0x1CA5864")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x1CA5154", Offset = "0x1CA5154", VA = "0x1CA5154")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x1CA5904", Offset = "0x1CA5904", VA = "0x1CA5904")]
		public UIManagerDropdown()
		{
		}
	}
	[Token(Token = "0x2000157")]
	[ExecuteInEditMode]
	public class UIManagerHSelector : MonoBehaviour
	{
		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED460", Offset = "0x16ED460")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED498", Offset = "0x16ED498")]
		public List<GameObject> images;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> imagesHighlighted;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> texts;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HorizontalSelector hSelector;

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1CA590C", Offset = "0x1CA590C", VA = "0x1CA590C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1CA5B10", Offset = "0x1CA5B10", VA = "0x1CA5B10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1CA5E7C", Offset = "0x1CA5E7C", VA = "0x1CA5E7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1CA5B48", Offset = "0x1CA5B48", VA = "0x1CA5B48")]
		private void UpdateSelector()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1CA5F1C", Offset = "0x1CA5F1C", VA = "0x1CA5F1C")]
		public UIManagerHSelector()
		{
		}
	}
	[Token(Token = "0x2000158")]
	[ExecuteInEditMode]
	public class UIManagerInputField : MonoBehaviour
	{
		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED4D0", Offset = "0x16ED4D0")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED508", Offset = "0x16ED508")]
		public List<GameObject> images;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> texts;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x1CA5FE8", Offset = "0x1CA5FE8", VA = "0x1CA5FE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x1CA6148", Offset = "0x1CA6148", VA = "0x1CA6148")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x1CA6390", Offset = "0x1CA6390", VA = "0x1CA6390")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x1CA6180", Offset = "0x1CA6180", VA = "0x1CA6180")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x1CA6430", Offset = "0x1CA6430", VA = "0x1CA6430")]
		public UIManagerInputField()
		{
		}
	}
	[Token(Token = "0x2000159")]
	[ExecuteInEditMode]
	public class UIManagerModalWindow : MonoBehaviour
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED540", Offset = "0x16ED540")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED578", Offset = "0x16ED578")]
		public Image background;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image contentBackground;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image icon;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI title;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI description;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1CA64D8", Offset = "0x1CA64D8", VA = "0x1CA64D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x1CA6638", Offset = "0x1CA6638", VA = "0x1CA6638")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x1CA68B8", Offset = "0x1CA68B8", VA = "0x1CA68B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x1CA6670", Offset = "0x1CA6670", VA = "0x1CA6670")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1CA6958", Offset = "0x1CA6958", VA = "0x1CA6958")]
		public UIManagerModalWindow()
		{
		}
	}
	[Token(Token = "0x200015A")]
	[ExecuteInEditMode]
	public class UIManagerNotification : MonoBehaviour
	{
		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED5B0", Offset = "0x16ED5B0")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED5E8", Offset = "0x16ED5E8")]
		public Image background;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image icon;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI title;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI description;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1CA6960", Offset = "0x1CA6960", VA = "0x1CA6960")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1CA6AC0", Offset = "0x1CA6AC0", VA = "0x1CA6AC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1CA6D58", Offset = "0x1CA6D58", VA = "0x1CA6D58")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x1CA6AF8", Offset = "0x1CA6AF8", VA = "0x1CA6AF8")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x1CA6DF8", Offset = "0x1CA6DF8", VA = "0x1CA6DF8")]
		public UIManagerNotification()
		{
		}
	}
	[Token(Token = "0x200015B")]
	[ExecuteInEditMode]
	public class UIManagerProgressBar : MonoBehaviour
	{
		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED620", Offset = "0x16ED620")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED658", Offset = "0x16ED658")]
		public Image bar;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI label;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1CA6E00", Offset = "0x1CA6E00", VA = "0x1CA6E00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x1CA6F60", Offset = "0x1CA6F60", VA = "0x1CA6F60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1CA7160", Offset = "0x1CA7160", VA = "0x1CA7160")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1CA6F98", Offset = "0x1CA6F98", VA = "0x1CA6F98")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1CA7200", Offset = "0x1CA7200", VA = "0x1CA7200")]
		public UIManagerProgressBar()
		{
		}
	}
	[Token(Token = "0x200015C")]
	[ExecuteInEditMode]
	public class UIManagerProgressBarLoop : MonoBehaviour
	{
		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED690", Offset = "0x16ED690")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasBackground;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool useRegularBackground;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED6C8", Offset = "0x16ED6C8")]
		public Image bar;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Image background;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1CA7208", Offset = "0x1CA7208", VA = "0x1CA7208")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1CA7368", Offset = "0x1CA7368", VA = "0x1CA7368")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1CA751C", Offset = "0x1CA751C", VA = "0x1CA751C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1CA73A0", Offset = "0x1CA73A0", VA = "0x1CA73A0")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x1CA75BC", Offset = "0x1CA75BC", VA = "0x1CA75BC")]
		public UIManagerProgressBarLoop()
		{
		}
	}
	[Token(Token = "0x200015D")]
	[ExecuteInEditMode]
	public class UIManagerScrollbar : MonoBehaviour
	{
		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED710", Offset = "0x16ED710")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED748", Offset = "0x16ED748")]
		public Image background;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image bar;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1A89268", Offset = "0x1A89268", VA = "0x1A89268")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1A893C8", Offset = "0x1A893C8", VA = "0x1A893C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x1A89530", Offset = "0x1A89530", VA = "0x1A89530")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1A89400", Offset = "0x1A89400", VA = "0x1A89400")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1A895D0", Offset = "0x1A895D0", VA = "0x1A895D0")]
		public UIManagerScrollbar()
		{
		}
	}
	[Token(Token = "0x200015E")]
	[ExecuteInEditMode]
	public class UIManagerSlider : MonoBehaviour
	{
		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED780", Offset = "0x16ED780")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasLabel;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool hasPopupLabel;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED7B8", Offset = "0x16ED7B8")]
		public Image background;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image bar;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image handle;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public TextMeshProUGUI label;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public TextMeshProUGUI popupLabel;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x1A895D8", Offset = "0x1A895D8", VA = "0x1A895D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1A89738", Offset = "0x1A89738", VA = "0x1A89738")]
		private void Awake()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x1A89CE0", Offset = "0x1A89CE0", VA = "0x1A89CE0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1A89770", Offset = "0x1A89770", VA = "0x1A89770")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1A89D80", Offset = "0x1A89D80", VA = "0x1A89D80")]
		public UIManagerSlider()
		{
		}
	}
	[Token(Token = "0x200015F")]
	[ExecuteInEditMode]
	public class UIManagerSwitch : MonoBehaviour
	{
		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED810", Offset = "0x16ED810")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED848", Offset = "0x16ED848")]
		public Image border;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image handleOn;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image handleOff;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1A89D88", Offset = "0x1A89D88", VA = "0x1A89D88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1A89EE8", Offset = "0x1A89EE8", VA = "0x1A89EE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1A8A1E4", Offset = "0x1A8A1E4", VA = "0x1A8A1E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x1A89F20", Offset = "0x1A89F20", VA = "0x1A89F20")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x1A8A284", Offset = "0x1A8A284", VA = "0x1A8A284")]
		public UIManagerSwitch()
		{
		}
	}
	[Token(Token = "0x2000160")]
	[ExecuteInEditMode]
	public class UIManagerToggle : MonoBehaviour
	{
		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED880", Offset = "0x16ED880")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED8B8", Offset = "0x16ED8B8")]
		public Image border;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image background;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image check;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI onLabel;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI offLabel;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x1A8A28C", Offset = "0x1A8A28C", VA = "0x1A8A28C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x1A8A3EC", Offset = "0x1A8A3EC", VA = "0x1A8A3EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x1A8A758", Offset = "0x1A8A758", VA = "0x1A8A758")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x1A8A424", Offset = "0x1A8A424", VA = "0x1A8A424")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x1A8A7F8", Offset = "0x1A8A7F8", VA = "0x1A8A7F8")]
		public UIManagerToggle()
		{
		}
	}
	[Token(Token = "0x2000161")]
	[ExecuteInEditMode]
	public class UIManagerTooltip : MonoBehaviour
	{
		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED8F0", Offset = "0x16ED8F0")]
		public UIManager UIManagerAsset;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED928", Offset = "0x16ED928")]
		public Image background;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI text;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool dynamicUpdateEnabled;

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x1A8A800", Offset = "0x1A8A800", VA = "0x1A8A800")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1A8A960", Offset = "0x1A8A960", VA = "0x1A8A960")]
		private void Awake()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1A8AB20", Offset = "0x1A8AB20", VA = "0x1A8AB20")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x1A8A998", Offset = "0x1A8A998", VA = "0x1A8A998")]
		private void UpdateDropdown()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x1A8ABC0", Offset = "0x1A8ABC0", VA = "0x1A8ABC0")]
		public UIManagerTooltip()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class WindowDragger : UIBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED960", Offset = "0x16ED960")]
		public RectTransform dragArea;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform dragObject;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16ED998", Offset = "0x16ED998")]
		public bool topOnClick;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector2 originalLocalPointerPosition;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private UnityEngine.Vector3 originalPanelLocalPosition;

		[Token(Token = "0x170000D2")]
		private RectTransform DragObjectInternal
		{
			[Token(Token = "0x6000822")]
			[Address(RVA = "0x1A8ADCC", Offset = "0x1A8ADCC", VA = "0x1A8ADCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private RectTransform DragAreaInternal
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0x1A8AE74", Offset = "0x1A8AE74", VA = "0x1A8AE74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x1A8ABC8", Offset = "0x1A8ABC8", VA = "0x1A8ABC8")]
		public new void Start()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x1A8AFA8", Offset = "0x1A8AFA8", VA = "0x1A8AFA8", Slot = "17")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x1A8B0D8", Offset = "0x1A8B0D8", VA = "0x1A8B0D8", Slot = "18")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x1A8B270", Offset = "0x1A8B270", VA = "0x1A8B270")]
		private void ClampToArea()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x1A8B4B4", Offset = "0x1A8B4B4", VA = "0x1A8B4B4")]
		public WindowDragger()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class WindowManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200045E")]
		public class WindowItem
		{
			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string windowName;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject windowObject;

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject buttonObject;

			[Token(Token = "0x6001F03")]
			[Address(RVA = "0x1A8C13C", Offset = "0x1A8C13C", VA = "0x1A8C13C")]
			public WindowItem()
			{
			}
		}

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<WindowItem> windows;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int currentWindowIndex;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int currentButtonIndex;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int newWindowIndex;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string windowFadeIn;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string windowFadeOut;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string buttonFadeIn;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string buttonFadeOut;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject currentWindow;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject nextWindow;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject currentButton;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject nextButton;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator currentWindowAnimator;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator nextWindowAnimator;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Animator currentButtonAnimator;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Animator nextButtonAnimator;

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x1A8B4C4", Offset = "0x1A8B4C4", VA = "0x1A8B4C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x1A8B60C", Offset = "0x1A8B60C", VA = "0x1A8B60C")]
		public void OpenFirstTab()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x1A8B930", Offset = "0x1A8B930", VA = "0x1A8B930")]
		public void OpenPanel(string newPanel)
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x1A8BBEC", Offset = "0x1A8BBEC", VA = "0x1A8BBEC")]
		public void NextPage()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x1A8BE5C", Offset = "0x1A8BE5C", VA = "0x1A8BE5C")]
		public void PrevPage()
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x1A8C0C8", Offset = "0x1A8C0C8", VA = "0x1A8C0C8")]
		public void AddNewItem()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x1A8C19C", Offset = "0x1A8C19C", VA = "0x1A8C19C")]
		public WindowManager()
		{
		}
	}
}
namespace LuxURPEssentials
{
	[Token(Token = "0x2000164")]
	public class DecalManager : MonoBehaviour
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Gizmos;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DrawDecalGizmos;

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x1C96874", Offset = "0x1C96874", VA = "0x1C96874")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x1C968E4", Offset = "0x1C968E4", VA = "0x1C968E4")]
		public DecalManager()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class LuxURP_HelpBtn : PropertyAttribute
	{
		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string URL;

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x1C96A10", Offset = "0x1C96A10", VA = "0x1C96A10")]
		public LuxURP_HelpBtn(string URL)
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class LuxURP_LayerBasedCulling : MonoBehaviour
	{
		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LuxURP_HelpBtn", RVA = "0x16ED9D0", Offset = "0x16ED9D0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16ED9D0", Offset = "0x16ED9D0")]
		public LayerMask SmallDetailsLayer;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SmallDetailsDistance;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask MediumDetailsLayer;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MediumDetailsDistance;

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x1C96A44", Offset = "0x1C96A44", VA = "0x1C96A44")]
		private int GetLayerNumber(int LayerValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x1C96A64", Offset = "0x1C96A64", VA = "0x1C96A64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x1C96C10", Offset = "0x1C96C10", VA = "0x1C96C10")]
		public LuxURP_LayerBasedCulling()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000167")]
	public enum RTSize
	{
		[Token(Token = "0x400091C")]
		_128 = 0x80,
		[Token(Token = "0x400091D")]
		_256 = 0x100,
		[Token(Token = "0x400091E")]
		_512 = 0x200
	}
	[Serializable]
	[Token(Token = "0x2000168")]
	public enum RTFormat
	{
		[Token(Token = "0x4000920")]
		ARGB32,
		[Token(Token = "0x4000921")]
		ARGBHalf
	}
	[Serializable]
	[Token(Token = "0x2000169")]
	public enum GustMixLayer
	{
		[Token(Token = "0x4000923")]
		Layer_0,
		[Token(Token = "0x4000924")]
		Layer_1,
		[Token(Token = "0x4000925")]
		Layer_2
	}
	[Token(Token = "0x200016A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6570", Offset = "0x16E6570")]
	public class LuxURP_Wind : MonoBehaviour
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EDA34", Offset = "0x16EDA34")]
		[AttributeAttribute(Name = "LuxURP_HelpBtn", RVA = "0x16EDA34", Offset = "0x16EDA34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EDA34", Offset = "0x16EDA34")]
		public bool UpdateInEditMode;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EDA98", Offset = "0x16EDA98")]
		public RTSize Resolution;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RTFormat Format;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture WindBaseTex;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader WindCompositeShader;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EDAD0", Offset = "0x16EDAD0")]
		public float Grass;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float Foliage;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EDB08", Offset = "0x16EDB08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EDB08", Offset = "0x16EDB08")]
		public float BaseWindSpeed;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EDB68", Offset = "0x16EDB68")]
		public float SizeInWorldSpace;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16EDBA0", Offset = "0x16EDBA0")]
		public float speedLayer0;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float speedLayer1;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float speedLayer2;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EDBB4", Offset = "0x16EDBB4")]
		public int GrassGustTiling;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float GrassGustSpeed;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public GustMixLayer LayerToMixWith;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16EDBEC", Offset = "0x16EDBEC")]
		public float JitterFrequency;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float JitterHighFrequency;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture WindRenderTexture;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_material;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 uvs;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 uvs1;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 uvs2;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 uvs3;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int WindRTPID;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform trans;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WindZone windZone;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float mainWind;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float turbulence;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int LuxLWRPWindDirSizePID;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int LuxLWRPWindStrengthMultipliersPID;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int LuxLWRPSinTimePID;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int LuxLWRPGustPID;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int LuxLWRPGustMixLayerPID;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int LuxLWRPWindUVsPID;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int LuxLWRPWindUVs1PID;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int LuxLWRPWindUVs2PID;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int LuxLWRPWindUVs3PID;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int previousRTSize;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int previousRTFormat;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector4 WindDirectionSize;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UnityEngine.Vector3[] MixLayers;

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x1C96C28", Offset = "0x1C96C28", VA = "0x1C96C28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x1C97070", Offset = "0x1C97070", VA = "0x1C97070")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x1C96DC4", Offset = "0x1C96DC4", VA = "0x1C96DC4")]
		private void SetupRT()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x1C96F40", Offset = "0x1C96F40", VA = "0x1C96F40")]
		private void GetPIDs()
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x1C971E4", Offset = "0x1C971E4", VA = "0x1C971E4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x1C973C8", Offset = "0x1C973C8", VA = "0x1C973C8")]
		private void Update()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x1C979CC", Offset = "0x1C979CC", VA = "0x1C979CC")]
		public LuxURP_Wind()
		{
		}
	}
	[Token(Token = "0x200016B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E65E4", Offset = "0x16E65E4")]
	public class GetTerrainHeightNormalMap : MonoBehaviour
	{
		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData targetTerrainData;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string savePathTerrainHeightNormalMap;

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x1C96948", Offset = "0x1C96948", VA = "0x1C96948")]
		public void GetTerData()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x1C96A08", Offset = "0x1C96A08", VA = "0x1C96A08")]
		public GetTerrainHeightNormalMap()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x200016C")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x4000952")]
		NONE = 0u,
		[Token(Token = "0x4000953")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x4000954")]
		STAGE = 2u,
		[Token(Token = "0x4000955")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x4000956")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E6658", Offset = "0x16E6658")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6658", Offset = "0x16E6658")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E95FC", Offset = "0x16E95FC")]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x1700043E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F07")]
				[Address(RVA = "0x24BD784", Offset = "0x24BD784", VA = "0x24BD784", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F09")]
				[Address(RVA = "0x24BD7EC", Offset = "0x24BD7EC", VA = "0x24BD7EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F04")]
			[Address(RVA = "0x24BCA88", Offset = "0x24BCA88", VA = "0x24BCA88")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001F05")]
			[Address(RVA = "0x24BD5CC", Offset = "0x24BD5CC", VA = "0x24BD5CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F06")]
			[Address(RVA = "0x24BD5D0", Offset = "0x24BD5D0", VA = "0x24BD5D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F08")]
			[Address(RVA = "0x24BD78C", Offset = "0x24BD78C", VA = "0x24BD78C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EDC24", Offset = "0x16EDC24")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16EDC24", Offset = "0x16EDC24")]
		[SerializeField]
		private Transform _stage;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EDC94", Offset = "0x16EDC94")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16EDC94", Offset = "0x16EDC94")]
		[SerializeField]
		private Transform _stageTransform;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EDD04", Offset = "0x16EDD04")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16EDD04", Offset = "0x16EDD04")]
		[SerializeField]
		private Camera _HMDCamera;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EDD74", Offset = "0x16EDD74")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16EDD74", Offset = "0x16EDD74")]
		[SerializeField]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EDDE4", Offset = "0x16EDDE4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16EDDE4", Offset = "0x16EDDE4")]
		[SerializeField]
		private bool _disableStandardAssets;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EDE54", Offset = "0x16EDE54")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16EDE54", Offset = "0x16EDE54")]
		[SerializeField]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EDEC4", Offset = "0x16EDEC4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16EDEC4", Offset = "0x16EDEC4")]
		[SerializeField]
		private string[] _excludeBehaviours;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16EDF34", Offset = "0x16EDF34")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16EDF34", Offset = "0x16EDF34")]
		[SerializeField]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x170000D4")]
		public Transform stage
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0x24BC008", Offset = "0x24BC008", VA = "0x24BC008")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000841")]
			[Address(RVA = "0x24BC0A8", Offset = "0x24BC0A8", VA = "0x24BC0A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1707F20", Offset = "0x1707F20")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x24BC1BC", Offset = "0x24BC1BC", VA = "0x24BC1BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000843")]
			[Address(RVA = "0x24BC1C0", Offset = "0x24BC1C0", VA = "0x24BC1C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x24BC1C4", Offset = "0x24BC1C4", VA = "0x24BC1C4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000D7")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x6000845")]
			[Address(RVA = "0x24BC2A4", Offset = "0x24BC2A4", VA = "0x24BC2A4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000D8")]
		public Transform stageTransform
		{
			[Token(Token = "0x6000846")]
			[Address(RVA = "0x24BC384", Offset = "0x24BC384", VA = "0x24BC384")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000847")]
			[Address(RVA = "0x24BC38C", Offset = "0x24BC38C", VA = "0x24BC38C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public Camera HMDCamera
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x24BC394", Offset = "0x24BC394", VA = "0x24BC394")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000849")]
			[Address(RVA = "0x24BC39C", Offset = "0x24BC39C", VA = "0x24BC39C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x24BC49C", Offset = "0x24BC49C", VA = "0x24BC49C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600084B")]
			[Address(RVA = "0x24BC4A4", Offset = "0x24BC4A4", VA = "0x24BC4A4")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0x24BC544", Offset = "0x24BC544", VA = "0x24BC544")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600084D")]
			[Address(RVA = "0x24BC54C", Offset = "0x24BC54C", VA = "0x24BC54C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0x24BC558", Offset = "0x24BC558", VA = "0x24BC558")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600084F")]
			[Address(RVA = "0x24BC560", Offset = "0x24BC560", VA = "0x24BC560")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x24BC568", Offset = "0x24BC568", VA = "0x24BC568")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000851")]
			[Address(RVA = "0x24BC570", Offset = "0x24BC570", VA = "0x24BC570")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x6000852")]
			[Address(RVA = "0x24BC5B0", Offset = "0x24BC5B0", VA = "0x24BC5B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000853")]
			[Address(RVA = "0x24BC5B8", Offset = "0x24BC5B8", VA = "0x24BC5B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public bool isValid
		{
			[Token(Token = "0x6000854")]
			[Address(RVA = "0x24BC5C4", Offset = "0x24BC5C4", VA = "0x24BC5C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E0")]
		public bool isActive
		{
			[Token(Token = "0x6000855")]
			[Address(RVA = "0x24BC734", Offset = "0x24BC734", VA = "0x24BC734")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E1")]
		private bool _isReady
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0x24BC73C", Offset = "0x24BC73C", VA = "0x24BC73C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E2")]
		public SDKRender render
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x24BC878", Offset = "0x24BC878", VA = "0x24BC878")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x24BC880", Offset = "0x24BC880", VA = "0x24BC880")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x24BC8E4", Offset = "0x24BC8E4", VA = "0x24BC8E4")]
		private void Update()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x24BCA04", Offset = "0x24BCA04", VA = "0x24BCA04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x24BCA0C", Offset = "0x24BCA0C", VA = "0x24BCA0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701024", Offset = "0x1701024")]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x24BC88C", Offset = "0x24BC88C", VA = "0x24BC88C")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x24BCAB4", Offset = "0x24BCAB4", VA = "0x24BCAB4")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x24BCAC0", Offset = "0x24BCAC0", VA = "0x24BCAC0")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x24BCB68", Offset = "0x24BCB68", VA = "0x24BCB68")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x24BCDC0", Offset = "0x24BCDC0", VA = "0x24BCDC0")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x24BCEBC", Offset = "0x24BCEBC", VA = "0x24BCEBC")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x24BCE30", Offset = "0x24BCE30", VA = "0x24BCE30")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x24BCE74", Offset = "0x24BCE74", VA = "0x24BCE74")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x24BCC00", Offset = "0x24BCC00", VA = "0x24BCC00")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x24BC908", Offset = "0x24BC908", VA = "0x24BC908")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x24BD3D4", Offset = "0x24BD3D4", VA = "0x24BD3D4")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public static class SDKBridge
	{
		[Token(Token = "0x2000460")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x170000E3")]
		public static bool IsActive
		{
			[Token(Token = "0x6000879")]
			[Address(RVA = "0x24BC7C0", Offset = "0x24BC7C0", VA = "0x24BC7C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x24BDA9C", Offset = "0x24BDA9C", VA = "0x24BDA9C")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x24BDAA4", Offset = "0x24BDAA4", VA = "0x24BDAA4")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x24BDAAC", Offset = "0x24BDAAC", VA = "0x24BDAAC")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x24BDAB4", Offset = "0x24BDAB4", VA = "0x24BDAB4")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x24BDABC", Offset = "0x24BDABC", VA = "0x24BDABC")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x24BDAC4", Offset = "0x24BDAC4", VA = "0x24BDAC4")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x24BDB04", Offset = "0x24BDB04", VA = "0x24BDB04")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x24BDB44", Offset = "0x24BDB44", VA = "0x24BDB44")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x24BDB4C", Offset = "0x24BDB4C", VA = "0x24BDB4C")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x24BDB54", Offset = "0x24BDB54", VA = "0x24BDB54")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x24BDB94", Offset = "0x24BDB94", VA = "0x24BDB94")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x24BDBD4", Offset = "0x24BDBD4", VA = "0x24BDBD4")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x24BDC14", Offset = "0x24BDC14", VA = "0x24BDC14")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x24BDC1C", Offset = "0x24BDC1C", VA = "0x24BDC1C")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x24BDCA4", Offset = "0x24BDCA4", VA = "0x24BDCA4")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x24BDDA0", Offset = "0x24BDDA0", VA = "0x24BDDA0")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x24BDE5C", Offset = "0x24BDE5C", VA = "0x24BDE5C")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x24BDEC8", Offset = "0x24BDEC8", VA = "0x24BDEC8")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x24BDF34", Offset = "0x24BDF34", VA = "0x24BDF34")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x24BD238", Offset = "0x24BD238", VA = "0x24BD238")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x600087C")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x600087D")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600087E")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x600087F")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6000880")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x24BDFF0", Offset = "0x24BDFF0", VA = "0x24BDFF0")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x24BE3A8", Offset = "0x24BE3A8", VA = "0x24BE3A8")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x24BE590", Offset = "0x24BE590", VA = "0x24BE590")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x24BE6A8", Offset = "0x24BE6A8", VA = "0x24BE6A8")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x24BE7F8", Offset = "0x24BE7F8", VA = "0x24BE7F8")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x24BE890", Offset = "0x24BE890", VA = "0x24BE890")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200016F")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LIV _liv;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private SDKResolution _resolution;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Camera _cameraInstance;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private SDKPose _requestedPose;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private SDKPass _clipPlanePass;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private SDKPass _combineAlphaPass;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private SDKPass _captureTexturePass;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private SDKPass _applyTexturePass;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKPass _optimizedRenderingPass;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private RenderPassEvent _clipPlaneRenderPassEvent;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private RenderPassEvent _addAlphaRenderPassEvent;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private RenderPassEvent _captureTextureRenderPassEvent;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private RenderPassEvent _applyTextureRenderPassEvent;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private RenderPassEvent _optimizedRenderingPassEvent;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Material _writeMaterial;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private UniversalAdditionalCameraData _universalAdditionalCameraData;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private RenderTargetIdentifier _cameraColorTextureIdentifier;

		[Token(Token = "0x170000E4")]
		public LIV liv
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0x24C0C40", Offset = "0x24C0C40", VA = "0x24C0C40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x6000889")]
			[Address(RVA = "0x24C0C48", Offset = "0x24C0C48", VA = "0x24C0C48")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x170000E6")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x600088A")]
			[Address(RVA = "0x24C0C58", Offset = "0x24C0C58", VA = "0x24C0C58")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x170000E7")]
		public SDKResolution resolution
		{
			[Token(Token = "0x600088B")]
			[Address(RVA = "0x24C0C68", Offset = "0x24C0C68", VA = "0x24C0C68")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x170000E8")]
		public Camera cameraInstance
		{
			[Token(Token = "0x600088C")]
			[Address(RVA = "0x24C0C70", Offset = "0x24C0C70", VA = "0x24C0C70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		public Camera cameraReference
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0x24C0C78", Offset = "0x24C0C78", VA = "0x24C0C78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		public Camera hmdCamera
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0x24C0D14", Offset = "0x24C0D14", VA = "0x24C0D14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		public Transform stage
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x24C0D30", Offset = "0x24C0D30", VA = "0x24C0D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public Transform stageTransform
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x24C0D48", Offset = "0x24C0D48", VA = "0x24C0D48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0x24C0D64", Offset = "0x24C0D64", VA = "0x24C0D64")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000EE")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x6000892")]
			[Address(RVA = "0x24C0E4C", Offset = "0x24C0E4C", VA = "0x24C0E4C")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170000EF")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x6000893")]
			[Address(RVA = "0x24C0F0C", Offset = "0x24C0F0C", VA = "0x24C0F0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F0")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0x24C0F2C", Offset = "0x24C0F2C", VA = "0x24C0F2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F1")]
		public bool canSetPose
		{
			[Token(Token = "0x6000895")]
			[Address(RVA = "0x24C0F48", Offset = "0x24C0F48", VA = "0x24C0F48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F2")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0x24C2880", Offset = "0x24C2880", VA = "0x24C2880")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F3")]
		private bool interlacedRendering
		{
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0x24C28D8", Offset = "0x24C28D8", VA = "0x24C28D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F4")]
		private bool canRenderBackground
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0x24C28E4", Offset = "0x24C28E4", VA = "0x24C28E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F5")]
		private bool canRenderForeground
		{
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0x24C2980", Offset = "0x24C2980", VA = "0x24C2980")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F6")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x24C2A30", Offset = "0x24C2A30", VA = "0x24C2A30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x24C0F68", Offset = "0x24C0F68", VA = "0x24C0F68")]
		public bool SetPose(UnityEngine.Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x24C13F4", Offset = "0x24C13F4", VA = "0x24C13F4")]
		public void SetGroundPlane(float distance, UnityEngine.Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x24C15E8", Offset = "0x24C15E8", VA = "0x24C15E8")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x24C1664", Offset = "0x24C1664", VA = "0x24C1664")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x24C183C", Offset = "0x24C183C", VA = "0x24C183C")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x24C18B0", Offset = "0x24C18B0", VA = "0x24C18B0")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x24C1918", Offset = "0x24C1918", VA = "0x24C1918")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x24C1AA4", Offset = "0x24C1AA4", VA = "0x24C1AA4")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x24C1B14", Offset = "0x24C1B14", VA = "0x24C1B14")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x24C1B84", Offset = "0x24C1B84", VA = "0x24C1B84")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x24C1BF4", Offset = "0x24C1BF4", VA = "0x24C1BF4")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x24C1C64", Offset = "0x24C1C64", VA = "0x24C1C64")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x24C1CD4", Offset = "0x24C1CD4", VA = "0x24C1CD4")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x24C1D44", Offset = "0x24C1D44", VA = "0x24C1D44")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x24C1F58", Offset = "0x24C1F58", VA = "0x24C1F58")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x24C1FF0", Offset = "0x24C1FF0", VA = "0x24C1FF0")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x24C2088", Offset = "0x24C2088", VA = "0x24C2088")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x24C2120", Offset = "0x24C2120", VA = "0x24C2120")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x24C24A4", Offset = "0x24C24A4", VA = "0x24C24A4")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x24C26A8", Offset = "0x24C26A8", VA = "0x24C26A8")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x24C27D4", Offset = "0x24C27D4", VA = "0x24C27D4")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x24BCEFC", Offset = "0x24BCEFC", VA = "0x24BCEFC")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x24BD6B0", Offset = "0x24BD6B0", VA = "0x24BD6B0")]
		public void Render()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x24C3438", Offset = "0x24C3438", VA = "0x24C3438")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x24C3738", Offset = "0x24C3738", VA = "0x24C3738")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x24C41D0", Offset = "0x24C41D0", VA = "0x24C41D0")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x24C2AB8", Offset = "0x24C2AB8", VA = "0x24C2AB8")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x24C5ADC", Offset = "0x24C5ADC", VA = "0x24C5ADC")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x24BD0B8", Offset = "0x24BD0B8", VA = "0x24BD0B8", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000170")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x400099B")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x400099C")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x400099D")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x400099E")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x400099F")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x40009A0")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x40009A1")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x40009A2")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x40009A3")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x40009A4")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x40009A5")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x24C4B5C", Offset = "0x24C4B5C", VA = "0x24C4B5C")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x24C4C40", Offset = "0x24C4C40", VA = "0x24C4C40")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x24C5104", Offset = "0x24C5104", VA = "0x24C5104")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x24C5150", Offset = "0x24C5150", VA = "0x24C5150")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x24C4BA8", Offset = "0x24C4BA8", VA = "0x24C4BA8")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x24C4BF4", Offset = "0x24C4BF4", VA = "0x24C4BF4")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public struct SDKConstants
	{
		[Token(Token = "0x40009A6")]
		public const string SDK_ID = "URLRSHW2MFDUF5AGPAGKLTE1UXOMZSYF";

		[Token(Token = "0x40009A7")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x40009A8")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x2000172")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x40009AA")]
		NONE = 0,
		[Token(Token = "0x40009AB")]
		GAME = 63
	}
	[Token(Token = "0x2000173")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x40009AD")]
		NONE = 0uL,
		[Token(Token = "0x40009AE")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x40009AF")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x40009B0")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x40009B1")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x40009B2")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x40009B3")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x40009B4")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x40009B5")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x40009B6")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x40009B7")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x40009B8")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x2000174")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x40009BA")]
		UNDEFINED = 0u,
		[Token(Token = "0x40009BB")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x40009BC")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x40009BD")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x2000175")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x40009BF")]
		UNDEFINED,
		[Token(Token = "0x40009C0")]
		COLOR_BUFFER
	}
	[Token(Token = "0x2000176")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x40009C2")]
		UNDEFINED = 0u,
		[Token(Token = "0x40009C3")]
		ARGB32 = 10u
	}
	[Token(Token = "0x2000177")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x40009C5")]
		UNDEFINED,
		[Token(Token = "0x40009C6")]
		RAW,
		[Token(Token = "0x40009C7")]
		DIRECTX,
		[Token(Token = "0x40009C8")]
		OPENGL,
		[Token(Token = "0x40009C9")]
		VULKAN,
		[Token(Token = "0x40009CA")]
		METAL
	}
	[Token(Token = "0x2000178")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x40009CC")]
		UNDEFINED,
		[Token(Token = "0x40009CD")]
		LINEAR,
		[Token(Token = "0x40009CE")]
		SRGB
	}
	[Token(Token = "0x2000179")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x40009D0")]
		UNDEFINED,
		[Token(Token = "0x40009D1")]
		FORWARD,
		[Token(Token = "0x40009D2")]
		DEFERRED,
		[Token(Token = "0x40009D3")]
		VERTEX_LIT,
		[Token(Token = "0x40009D4")]
		UNIVERSAL,
		[Token(Token = "0x40009D5")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x200017A")]
	public struct SDKResolution
	{
		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x170000F7")]
		public static SDKResolution zero
		{
			[Token(Token = "0x60008BF")]
			[Address(RVA = "0x24BEB60", Offset = "0x24BEB60", VA = "0x24BEB60")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x24C5C94", Offset = "0x24C5C94", VA = "0x24C5C94", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200017B")]
	public struct SDKVector3
	{
		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x170000F8")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0x24BEE00", Offset = "0x24BEE00", VA = "0x24BEE00")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170000F9")]
		public static SDKVector3 one
		{
			[Token(Token = "0x60008C2")]
			[Address(RVA = "0x24C6400", Offset = "0x24C6400", VA = "0x24C6400")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170000FA")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x60008C3")]
			[Address(RVA = "0x24C6A3C", Offset = "0x24C6A3C", VA = "0x24C6A3C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170000FB")]
		public static SDKVector3 up
		{
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0x24C0204", Offset = "0x24C0204", VA = "0x24C0204")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170000FC")]
		public static SDKVector3 right
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0x24C6A4C", Offset = "0x24C6A4C", VA = "0x24C6A4C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x24C677C", Offset = "0x24C677C", VA = "0x24C677C")]
		public static implicit operator UnityEngine.Vector3(SDKVector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x24C01EC", Offset = "0x24C01EC", VA = "0x24C01EC")]
		public static implicit operator SDKVector3(UnityEngine.Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x24C6A5C", Offset = "0x24C6A5C", VA = "0x24C6A5C")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x24C6A6C", Offset = "0x24C6A6C", VA = "0x24C6A6C")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x24C6A7C", Offset = "0x24C6A7C", VA = "0x24C6A7C")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x24C6A8C", Offset = "0x24C6A8C", VA = "0x24C6A8C")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x24C6A9C", Offset = "0x24C6A9C", VA = "0x24C6A9C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200017C")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x170000FD")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x24BEE10", Offset = "0x24BEE10", VA = "0x24BEE10")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x24C080C", Offset = "0x24C080C", VA = "0x24C080C")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x24C083C", Offset = "0x24C083C", VA = "0x24C083C")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x24C0840", Offset = "0x24C0840", VA = "0x24C0840")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x24C0954", Offset = "0x24C0954", VA = "0x24C0954")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x24C09C8", Offset = "0x24C09C8", VA = "0x24C09C8")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x24C0A6C", Offset = "0x24C0A6C", VA = "0x24C0A6C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200017D")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x170000FE")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0x24BEB9C", Offset = "0x24BEB9C", VA = "0x24BEB9C")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x24BF610", Offset = "0x24BF610", VA = "0x24BF610")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x24BF654", Offset = "0x24BF654", VA = "0x24BF654")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x24BF698", Offset = "0x24BF698", VA = "0x24BF698")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x24BF7A0", Offset = "0x24BF7A0", VA = "0x24BF7A0")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x24BF84C", Offset = "0x24BF84C", VA = "0x24BF84C")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x24BF8A4", Offset = "0x24BF8A4", VA = "0x24BF8A4")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x24BF8E0", Offset = "0x24BF8E0", VA = "0x24BF8E0")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x24BF974", Offset = "0x24BF974", VA = "0x24BF974")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x24BF9A0", Offset = "0x24BF9A0", VA = "0x24BF9A0")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x24BFA8C", Offset = "0x24BFA8C", VA = "0x24BFA8C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200017E")]
	public struct SDKPlane
	{
		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x170000FF")]
		public static SDKPlane empty
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x24C01F0", Offset = "0x24C01F0", VA = "0x24C01F0")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x24C018C", Offset = "0x24C018C", VA = "0x24C018C")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x24C0214", Offset = "0x24C0214", VA = "0x24C0214", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200017F")]
	public struct SDKPriority
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x17000100")]
		public static SDKPriority empty
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x24BF288", Offset = "0x24BF288", VA = "0x24BF288")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x24C0554", Offset = "0x24C0554", VA = "0x24C0554", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000180")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x17000101")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0x24BD0FC", Offset = "0x24BD0FC", VA = "0x24BD0FC")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x24BD7F4", Offset = "0x24BD7F4", VA = "0x24BD7F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000181")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x17000102")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0x24BE298", Offset = "0x24BE298", VA = "0x24BE298")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x24BF294", Offset = "0x24BF294", VA = "0x24BF294")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x24BF2A4", Offset = "0x24BF2A4", VA = "0x24BF2A4")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x24BF2B8", Offset = "0x24BF2B8", VA = "0x24BF2B8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000182")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x17000103")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0x24BFFF0", Offset = "0x24BFFF0", VA = "0x24BFFF0")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x24C00AC", Offset = "0x24C00AC", VA = "0x24C00AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000183")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x17000104")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x24C0050", Offset = "0x24C0050", VA = "0x24C0050")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x24C61A0", Offset = "0x24C61A0", VA = "0x24C61A0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000184")]
	public struct SDKTexture
	{
		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x17000105")]
		public static SDKTexture empty
		{
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0x24BE540", Offset = "0x24BE540", VA = "0x24BE540")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x24C5DD4", Offset = "0x24C5DD4", VA = "0x24C5DD4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000185")]
	public struct SDKTransform
	{
		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x17000106")]
		public static SDKTransform empty
		{
			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x24BF274", Offset = "0x24BF274", VA = "0x24BF274")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x24C6410", Offset = "0x24C6410", VA = "0x24C6410", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000186")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x17000107")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0x24BEB68", Offset = "0x24BEB68", VA = "0x24BEB68")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x24BEBC8", Offset = "0x24BEBC8", VA = "0x24BEBC8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000187")]
	public struct SDKControllerState
	{
		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x17000108")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x24BEDB4", Offset = "0x24BEDB4", VA = "0x24BEDB4")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x24BEE24", Offset = "0x24BEE24", VA = "0x24BEE24", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000188")]
	public struct SDKPose
	{
		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x17000109")]
		public static SDKPose empty
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0x24BF1F8", Offset = "0x24BF1F8", VA = "0x24BF1F8")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x24C02C0", Offset = "0x24C02C0", VA = "0x24C02C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000189")]
	public class SDKPass : ScriptableRenderPass
	{
		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CommandBuffer commandBuffer;

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x24C0158", Offset = "0x24C0158", VA = "0x24C0158", Slot = "7")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x24C0184", Offset = "0x24C0184", VA = "0x24C0184")]
		public SDKPass()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class SDKUniversalRenderFeature : ScriptableRendererFeature
	{
		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SDKPass> passes;

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x24C4AD8", Offset = "0x24C4AD8", VA = "0x24C4AD8")]
		public static void AddPass(SDKPass pass)
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x24C4C8C", Offset = "0x24C4C8C", VA = "0x24C4C8C")]
		public static void ClearPasses()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x24C64E8", Offset = "0x24C64E8", VA = "0x24C64E8", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x24C64EC", Offset = "0x24C64EC", VA = "0x24C64EC", Slot = "5")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x24C65E8", Offset = "0x24C65E8", VA = "0x24C65E8")]
		public SDKUniversalRenderFeature()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public static class SDKUtils
	{
		[Token(Token = "0x1700010A")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x6000902")]
			[Address(RVA = "0x24C6680", Offset = "0x24C6680", VA = "0x24C6680")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x24C554C", Offset = "0x24C554C", VA = "0x24C554C")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x24C6668", Offset = "0x24C6668", VA = "0x24C6668")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x24C260C", Offset = "0x24C260C", VA = "0x24C260C")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x24C66B0", Offset = "0x24C66B0", VA = "0x24C66B0")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x24C25A8", Offset = "0x24C25A8", VA = "0x24C25A8")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x24BD3C8", Offset = "0x24BD3C8", VA = "0x24BD3C8")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x24BC1A8", Offset = "0x24BC1A8", VA = "0x24BC1A8")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x24C66D0", Offset = "0x24C66D0", VA = "0x24C66D0")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out UnityEngine.Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x24C5238", Offset = "0x24C5238", VA = "0x24C5238")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x24C487C", Offset = "0x24C487C", VA = "0x24C487C")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x24C12D0", Offset = "0x24C12D0", VA = "0x24C12D0")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x24C67B0", Offset = "0x24C67B0", VA = "0x24C67B0")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x600090D")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x600090E")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x24C1DDC", Offset = "0x24C1DDC", VA = "0x24C1DDC")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x24C23EC", Offset = "0x24C23EC", VA = "0x24C23EC")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x24C32F0", Offset = "0x24C32F0", VA = "0x24C32F0")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x24C4748", Offset = "0x24C4748", VA = "0x24C4748")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x24C23E0", Offset = "0x24C23E0", VA = "0x24C23E0")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x24C4D08", Offset = "0x24C4D08", VA = "0x24C4D08")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x24C519C", Offset = "0x24C519C", VA = "0x24C519C")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x24C4EA0", Offset = "0x24C4EA0", VA = "0x24C4EA0")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x200018C")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4000A37")]
		Array = 1,
		[Token(Token = "0x4000A38")]
		Object,
		[Token(Token = "0x4000A39")]
		String,
		[Token(Token = "0x4000A3A")]
		Number,
		[Token(Token = "0x4000A3B")]
		NullValue,
		[Token(Token = "0x4000A3C")]
		Boolean,
		[Token(Token = "0x4000A3D")]
		None
	}
	[Token(Token = "0x200018D")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4000A3F")]
		Compact,
		[Token(Token = "0x4000A40")]
		Indent
	}
	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x16E66C8", Offset = "0x16E66C8")]
	public abstract class JSONNode
	{
		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E960C", Offset = "0x16E960C")]
		private sealed class <get_Children>d__29 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000440")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001F0D")]
				[Address(RVA = "0x2AC7980", Offset = "0x2AC7980", VA = "0x2AC7980", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000441")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F0F")]
				[Address(RVA = "0x2AC79E8", Offset = "0x2AC79E8", VA = "0x2AC79E8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0x2AC5B30", Offset = "0x2AC5B30", VA = "0x2AC5B30")]
			[DebuggerHidden]
			public <get_Children>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0x2AC7964", Offset = "0x2AC7964", VA = "0x2AC7964", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x2AC7968", Offset = "0x2AC7968", VA = "0x2AC7968", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x2AC7988", Offset = "0x2AC7988", VA = "0x2AC7988", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x2AC79F0", Offset = "0x2AC79F0", VA = "0x2AC79F0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x2AC7A88", Offset = "0x2AC7A88", VA = "0x2AC7A88", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E961C", Offset = "0x16E961C")]
		private sealed class <get_DeepChildren>d__31 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x17000442")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001F17")]
				[Address(RVA = "0x2AC80F0", Offset = "0x2AC80F0", VA = "0x2AC80F0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000443")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F19")]
				[Address(RVA = "0x2AC8158", Offset = "0x2AC8158", VA = "0x2AC8158", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x2AC5BF4", Offset = "0x2AC5BF4", VA = "0x2AC5BF4")]
			[DebuggerHidden]
			public <get_DeepChildren>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x2AC7A8C", Offset = "0x2AC7A8C", VA = "0x2AC7A8C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x2AC7C9C", Offset = "0x2AC7C9C", VA = "0x2AC7C9C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x2AC7BDC", Offset = "0x2AC7BDC", VA = "0x2AC7BDC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x2AC7B1C", Offset = "0x2AC7B1C", VA = "0x2AC7B1C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001F18")]
			[Address(RVA = "0x2AC80F8", Offset = "0x2AC80F8", VA = "0x2AC80F8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0x2AC8160", Offset = "0x2AC8160", VA = "0x2AC8160", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0x2AC8214", Offset = "0x2AC8214", VA = "0x2AC8214", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x1700010B")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0x2AC599C", Offset = "0x2AC599C", VA = "0x2AC599C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000918")]
			[Address(RVA = "0x2AC59A4", Offset = "0x2AC59A4", VA = "0x2AC59A4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000919")]
			[Address(RVA = "0x2AC59A8", Offset = "0x2AC59A8", VA = "0x2AC59A8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x600091A")]
			[Address(RVA = "0x2AC59B0", Offset = "0x2AC59B0", VA = "0x2AC59B0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public virtual string Value
		{
			[Token(Token = "0x600091B")]
			[Address(RVA = "0x2AC59B4", Offset = "0x2AC59B4", VA = "0x2AC59B4", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600091C")]
			[Address(RVA = "0x2AC59FC", Offset = "0x2AC59FC", VA = "0x2AC59FC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public virtual int Count
		{
			[Token(Token = "0x600091D")]
			[Address(RVA = "0x2AC5A00", Offset = "0x2AC5A00", VA = "0x2AC5A00", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010F")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0x2AC5A08", Offset = "0x2AC5A08", VA = "0x2AC5A08", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000110")]
		public virtual bool IsString
		{
			[Token(Token = "0x600091F")]
			[Address(RVA = "0x2AC5A10", Offset = "0x2AC5A10", VA = "0x2AC5A10", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000111")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x6000920")]
			[Address(RVA = "0x2AC5A18", Offset = "0x2AC5A18", VA = "0x2AC5A18", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000112")]
		public virtual bool IsNull
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0x2AC5A20", Offset = "0x2AC5A20", VA = "0x2AC5A20", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000113")]
		public virtual bool IsArray
		{
			[Token(Token = "0x6000922")]
			[Address(RVA = "0x2AC5A28", Offset = "0x2AC5A28", VA = "0x2AC5A28", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public virtual bool IsObject
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x2AC5A30", Offset = "0x2AC5A30", VA = "0x2AC5A30", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000115")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0x2AC5AC0", Offset = "0x2AC5AC0", VA = "0x2AC5AC0", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701088", Offset = "0x1701088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x2AC5B68", Offset = "0x2AC5B68", VA = "0x2AC5B68")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17010EC", Offset = "0x17010EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x600092E")]
			get;
		}

		[Token(Token = "0x17000118")]
		public virtual double AsDouble
		{
			[Token(Token = "0x600092F")]
			[Address(RVA = "0x2AC5D60", Offset = "0x2AC5D60", VA = "0x2AC5D60", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x2AC5E04", Offset = "0x2AC5E04", VA = "0x2AC5E04", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public virtual int AsInt
		{
			[Token(Token = "0x6000931")]
			[Address(RVA = "0x2AC5E44", Offset = "0x2AC5E44", VA = "0x2AC5E44", Slot = "28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000932")]
			[Address(RVA = "0x2AC5E7C", Offset = "0x2AC5E7C", VA = "0x2AC5E7C", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0x2AC5E94", Offset = "0x2AC5E94", VA = "0x2AC5E94", Slot = "30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000934")]
			[Address(RVA = "0x2AC5EB8", Offset = "0x2AC5EB8", VA = "0x2AC5EB8", Slot = "31")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0x2AC5ECC", Offset = "0x2AC5ECC", VA = "0x2AC5ECC", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x2AC5F94", Offset = "0x2AC5F94", VA = "0x2AC5F94", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6000937")]
			[Address(RVA = "0x2AC6010", Offset = "0x2AC6010", VA = "0x2AC6010", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x2AC6090", Offset = "0x2AC6090", VA = "0x2AC6090", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x2AC5A38", Offset = "0x2AC5A38", VA = "0x2AC5A38", Slot = "17")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x2AC5A3C", Offset = "0x2AC5A3C", VA = "0x2AC5A3C", Slot = "18")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x2AC5AA8", Offset = "0x2AC5AA8", VA = "0x2AC5AA8", Slot = "19")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x2AC5AB0", Offset = "0x2AC5AB0", VA = "0x2AC5AB0", Slot = "20")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x2AC5AB8", Offset = "0x2AC5AB8", VA = "0x2AC5AB8", Slot = "21")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x2AC5C2C", Offset = "0x2AC5C2C", VA = "0x2AC5C2C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x2AC5CC0", Offset = "0x2AC5CC0", VA = "0x2AC5CC0", Slot = "23")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x600092D")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x2AC6110", Offset = "0x2AC6110", VA = "0x2AC6110")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x2AC61F4", Offset = "0x2AC61F4", VA = "0x2AC61F4")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x2AC6288", Offset = "0x2AC6288", VA = "0x2AC6288")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x2AC62F0", Offset = "0x2AC62F0", VA = "0x2AC62F0")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x2AC6388", Offset = "0x2AC6388", VA = "0x2AC6388")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x2AC63F0", Offset = "0x2AC63F0", VA = "0x2AC63F0")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x2AC6488", Offset = "0x2AC6488", VA = "0x2AC6488")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x2AC64E8", Offset = "0x2AC64E8", VA = "0x2AC64E8")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x2AC6580", Offset = "0x2AC6580", VA = "0x2AC6580")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x2AC65E0", Offset = "0x2AC65E0", VA = "0x2AC65E0")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x2AC3D84", Offset = "0x2AC3D84", VA = "0x2AC3D84")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x2AC6678", Offset = "0x2AC6678", VA = "0x2AC6678")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x2AC66F8", Offset = "0x2AC66F8", VA = "0x2AC66F8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x2AC6704", Offset = "0x2AC6704", VA = "0x2AC6704", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x2AC670C", Offset = "0x2AC670C", VA = "0x2AC670C")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x2AC6AC4", Offset = "0x2AC6AC4", VA = "0x2AC6AC4")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x2AC3588", Offset = "0x2AC3588", VA = "0x2AC3588")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x2AC6CB4", Offset = "0x2AC6CB4", VA = "0x2AC6CB4", Slot = "36")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x2AC6CB8", Offset = "0x2AC6CB8", VA = "0x2AC6CB8")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x2AC6D38", Offset = "0x2AC6D38", VA = "0x2AC6D38")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x2AC6DA4", Offset = "0x2AC6DA4", VA = "0x2AC6DA4")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x2AC6E10", Offset = "0x2AC6E10", VA = "0x2AC6E10")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x2AC6E7C", Offset = "0x2AC6E7C", VA = "0x2AC6E7C")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x2AC6FD0", Offset = "0x2AC6FD0", VA = "0x2AC6FD0")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x2AC7154", Offset = "0x2AC7154", VA = "0x2AC7154")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x2AC7468", Offset = "0x2AC7468", VA = "0x2AC7468")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x2AC74D4", Offset = "0x2AC74D4", VA = "0x2AC74D4")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x2AC7540", Offset = "0x2AC7540", VA = "0x2AC7540")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x2AC75AC", Offset = "0x2AC75AC", VA = "0x2AC75AC")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x2AC76EC", Offset = "0x2AC76EC", VA = "0x2AC76EC")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x2AC7820", Offset = "0x2AC7820", VA = "0x2AC7820")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x2AC46FC", Offset = "0x2AC46FC", VA = "0x2AC46FC")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x200018F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x16E6700", Offset = "0x16E6700")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E962C", Offset = "0x16E962C")]
		private sealed class <get_Children>d__18 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000444")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001F20")]
				[Address(RVA = "0x2AC4B2C", Offset = "0x2AC4B2C", VA = "0x2AC4B2C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000445")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F22")]
				[Address(RVA = "0x2AC4B94", Offset = "0x2AC4B94", VA = "0x2AC4B94", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0x2AC4328", Offset = "0x2AC4328", VA = "0x2AC4328")]
			[DebuggerHidden]
			public <get_Children>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x2AC4950", Offset = "0x2AC4950", VA = "0x2AC4950", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0x2AC49C4", Offset = "0x2AC49C4", VA = "0x2AC49C4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x2AC496C", Offset = "0x2AC496C", VA = "0x2AC496C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F21")]
			[Address(RVA = "0x2AC4B34", Offset = "0x2AC4B34", VA = "0x2AC4B34", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x2AC4B9C", Offset = "0x2AC4B9C", VA = "0x2AC4B9C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x2AC4C50", Offset = "0x2AC4C50", VA = "0x2AC4C50", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E963C", Offset = "0x16E963C")]
		private sealed class <GetEnumerator>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000446")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F29")]
				[Address(RVA = "0x2AC48E0", Offset = "0x2AC48E0", VA = "0x2AC48E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000447")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F2B")]
				[Address(RVA = "0x2AC4948", Offset = "0x2AC4948", VA = "0x2AC4948", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x2AC43DC", Offset = "0x2AC43DC", VA = "0x2AC43DC")]
			[DebuggerHidden]
			public <GetEnumerator>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x2AC4704", Offset = "0x2AC4704", VA = "0x2AC4704", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x2AC4778", Offset = "0x2AC4778", VA = "0x2AC4778", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x2AC4720", Offset = "0x2AC4720", VA = "0x2AC4720")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x2AC48E8", Offset = "0x2AC48E8", VA = "0x2AC48E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inline;

		[Token(Token = "0x1700011E")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x2AC3B50", Offset = "0x2AC3B50", VA = "0x2AC3B50", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700011F")]
		public override bool IsArray
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x2AC3B58", Offset = "0x2AC3B58", VA = "0x2AC3B58", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000120")]
		public override JSONNode Item
		{
			[Token(Token = "0x600095C")]
			[Address(RVA = "0x2AC3B60", Offset = "0x2AC3B60", VA = "0x2AC3B60", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600095D")]
			[Address(RVA = "0x2AC3C98", Offset = "0x2AC3C98", VA = "0x2AC3C98", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public override JSONNode Item
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x2AC3F70", Offset = "0x2AC3F70", VA = "0x2AC3F70", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x2AC3FD0", Offset = "0x2AC3FD0", VA = "0x2AC3FD0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public override int Count
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x2AC4080", Offset = "0x2AC4080", VA = "0x2AC4080", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000123")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x2AC429C", Offset = "0x2AC429C", VA = "0x2AC429C", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701150", Offset = "0x1701150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x2AC40D0", Offset = "0x2AC40D0", VA = "0x2AC40D0", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x2AC4180", Offset = "0x2AC4180", VA = "0x2AC4180", Slot = "20")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x2AC422C", Offset = "0x2AC422C", VA = "0x2AC422C", Slot = "21")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x2AC4360", Offset = "0x2AC4360", VA = "0x2AC4360", Slot = "37")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17011B4", Offset = "0x17011B4")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x2AC4408", Offset = "0x2AC4408", VA = "0x2AC4408", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x2AC44E8", Offset = "0x2AC44E8", VA = "0x2AC44E8", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x2AC4660", Offset = "0x2AC4660", VA = "0x2AC4660")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x16E6738", Offset = "0x16E6738")]
	public class JSONObject : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000465")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E964C", Offset = "0x16E964C")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0x2AC9000", Offset = "0x2AC9000", VA = "0x2AC9000")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x2AC95F8", Offset = "0x2AC95F8", VA = "0x2AC95F8")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000466")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E965C", Offset = "0x16E965C")]
		private sealed class <get_Children>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000448")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001F32")]
				[Address(RVA = "0x2AC9AC8", Offset = "0x2AC9AC8", VA = "0x2AC9AC8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000449")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F34")]
				[Address(RVA = "0x2AC9B30", Offset = "0x2AC9B30", VA = "0x2AC9B30", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x2AC9094", Offset = "0x2AC9094", VA = "0x2AC9094")]
			[DebuggerHidden]
			public <get_Children>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x2AC98E4", Offset = "0x2AC98E4", VA = "0x2AC98E4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F30")]
			[Address(RVA = "0x2AC9958", Offset = "0x2AC9958", VA = "0x2AC9958", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x2AC9900", Offset = "0x2AC9900", VA = "0x2AC9900")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F33")]
			[Address(RVA = "0x2AC9AD0", Offset = "0x2AC9AD0", VA = "0x2AC9AD0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001F35")]
			[Address(RVA = "0x2AC9B38", Offset = "0x2AC9B38", VA = "0x2AC9B38", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001F36")]
			[Address(RVA = "0x2AC9BEC", Offset = "0x2AC9BEC", VA = "0x2AC9BEC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E966C", Offset = "0x16E966C")]
		private sealed class <GetEnumerator>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONObject <>4__this;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700044A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F3B")]
				[Address(RVA = "0x2AC9874", Offset = "0x2AC9874", VA = "0x2AC9874", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F3D")]
				[Address(RVA = "0x2AC98DC", Offset = "0x2AC98DC", VA = "0x2AC98DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F37")]
			[Address(RVA = "0x2AC9148", Offset = "0x2AC9148", VA = "0x2AC9148")]
			[DebuggerHidden]
			public <GetEnumerator>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001F38")]
			[Address(RVA = "0x2AC9670", Offset = "0x2AC9670", VA = "0x2AC9670", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F39")]
			[Address(RVA = "0x2AC96E4", Offset = "0x2AC96E4", VA = "0x2AC96E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0x2AC968C", Offset = "0x2AC968C", VA = "0x2AC968C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0x2AC987C", Offset = "0x2AC987C", VA = "0x2AC987C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inline;

		[Token(Token = "0x17000124")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x2AC87BC", Offset = "0x2AC87BC", VA = "0x2AC87BC", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000125")]
		public override bool IsObject
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x2AC87C4", Offset = "0x2AC87C4", VA = "0x2AC87C4", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000126")]
		public override JSONNode Item
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x2AC87CC", Offset = "0x2AC87CC", VA = "0x2AC87CC", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x600096C")]
			[Address(RVA = "0x2AC8888", Offset = "0x2AC8888", VA = "0x2AC8888", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public override JSONNode Item
		{
			[Token(Token = "0x600096D")]
			[Address(RVA = "0x2AC898C", Offset = "0x2AC898C", VA = "0x2AC898C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x2AC8A24", Offset = "0x2AC8A24", VA = "0x2AC8A24", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public override int Count
		{
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x2AC8B2C", Offset = "0x2AC8B2C", VA = "0x2AC8B2C", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000129")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0x2AC9008", Offset = "0x2AC9008", VA = "0x2AC9008", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701218", Offset = "0x1701218")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x2AC8B84", Offset = "0x2AC8B84", VA = "0x2AC8B84", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x2AC8CF8", Offset = "0x2AC8CF8", VA = "0x2AC8CF8", Slot = "19")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x2AC8DB4", Offset = "0x2AC8DB4", VA = "0x2AC8DB4", Slot = "20")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x2AC8E70", Offset = "0x2AC8E70", VA = "0x2AC8E70", Slot = "21")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x2AC90CC", Offset = "0x2AC90CC", VA = "0x2AC90CC", Slot = "37")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x170127C", Offset = "0x170127C")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x2AC9174", Offset = "0x2AC9174", VA = "0x2AC9174", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x2AC932C", Offset = "0x2AC932C", VA = "0x2AC932C", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x2AC5278", Offset = "0x2AC5278", VA = "0x2AC5278")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x1700012A")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0x2AC9BF0", Offset = "0x2AC9BF0", VA = "0x2AC9BF0", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700012B")]
		public override bool IsString
		{
			[Token(Token = "0x600097A")]
			[Address(RVA = "0x2AC9BF8", Offset = "0x2AC9BF8", VA = "0x2AC9BF8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012C")]
		public override string Value
		{
			[Token(Token = "0x600097B")]
			[Address(RVA = "0x2AC9C00", Offset = "0x2AC9C00", VA = "0x2AC9C00", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x2AC9C08", Offset = "0x2AC9C08", VA = "0x2AC9C08", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x2AC6170", Offset = "0x2AC6170", VA = "0x2AC6170")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x2AC9C10", Offset = "0x2AC9C10", VA = "0x2AC9C10", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x2AC9C60", Offset = "0x2AC9C60", VA = "0x2AC9C60", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x2AC9D18", Offset = "0x2AC9D18", VA = "0x2AC9D18", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x2AC9E2C", Offset = "0x2AC9E2C", VA = "0x2AC9E2C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000192")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x1700012D")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000982")]
			[Address(RVA = "0x2AC83A4", Offset = "0x2AC83A4", VA = "0x2AC83A4", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700012E")]
		public override bool IsNumber
		{
			[Token(Token = "0x6000983")]
			[Address(RVA = "0x2AC83AC", Offset = "0x2AC83AC", VA = "0x2AC83AC", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012F")]
		public override string Value
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x2AC83B4", Offset = "0x2AC83B4", VA = "0x2AC83B4", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x2AC83C0", Offset = "0x2AC83C0", VA = "0x2AC83C0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public override double AsDouble
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0x2AC844C", Offset = "0x2AC844C", VA = "0x2AC844C", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x2AC8454", Offset = "0x2AC8454", VA = "0x2AC8454", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x2AC54F0", Offset = "0x2AC54F0", VA = "0x2AC54F0")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x2AC845C", Offset = "0x2AC845C", VA = "0x2AC845C")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x2AC84E4", Offset = "0x2AC84E4", VA = "0x2AC84E4", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x2AC8534", Offset = "0x2AC8534", VA = "0x2AC8534", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x2AC8554", Offset = "0x2AC8554", VA = "0x2AC8554")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x2AC8684", Offset = "0x2AC8684", VA = "0x2AC8684", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x2AC87B0", Offset = "0x2AC87B0", VA = "0x2AC87B0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000193")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x17000131")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0x2AC4C54", Offset = "0x2AC4C54", VA = "0x2AC4C54", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000132")]
		public override bool IsBoolean
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0x2AC4C5C", Offset = "0x2AC4C5C", VA = "0x2AC4C5C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000133")]
		public override string Value
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x2AC4C64", Offset = "0x2AC4C64", VA = "0x2AC4C64", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x2AC4C70", Offset = "0x2AC4C70", VA = "0x2AC4C70", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public override bool AsBool
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x2AC4CFC", Offset = "0x2AC4CFC", VA = "0x2AC4CFC", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000994")]
			[Address(RVA = "0x2AC4D04", Offset = "0x2AC4D04", VA = "0x2AC4D04", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x2AC4D10", Offset = "0x2AC4D10", VA = "0x2AC4D10")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x2AC4D90", Offset = "0x2AC4D90", VA = "0x2AC4D90")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x2AC4E18", Offset = "0x2AC4E18", VA = "0x2AC4E18", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x2AC4E64", Offset = "0x2AC4E64", VA = "0x2AC4E64", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x2AC4EE0", Offset = "0x2AC4EE0", VA = "0x2AC4EE0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x2AC4F68", Offset = "0x2AC4F68", VA = "0x2AC4F68", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000194")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x17000135")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0x2AC8218", Offset = "0x2AC8218", VA = "0x2AC8218", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000136")]
		public override bool IsNull
		{
			[Token(Token = "0x600099C")]
			[Address(RVA = "0x2AC8220", Offset = "0x2AC8220", VA = "0x2AC8220", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000137")]
		public override string Value
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x2AC8228", Offset = "0x2AC8228", VA = "0x2AC8228", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x2AC8270", Offset = "0x2AC8270", VA = "0x2AC8270", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public override bool AsBool
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0x2AC8274", Offset = "0x2AC8274", VA = "0x2AC8274", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x2AC827C", Offset = "0x2AC827C", VA = "0x2AC827C", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x2AC8280", Offset = "0x2AC8280", VA = "0x2AC8280", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x2AC831C", Offset = "0x2AC831C", VA = "0x2AC831C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x2AC8324", Offset = "0x2AC8324", VA = "0x2AC8324", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x2AC8348", Offset = "0x2AC8348", VA = "0x2AC8348", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x2AC3F08", Offset = "0x2AC3F08", VA = "0x2AC3F08")]
		public JSONNull()
		{
		}
	}
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x16E6770", Offset = "0x16E6770")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x17000139")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x2AC4F74", Offset = "0x2AC4F74", VA = "0x2AC4F74", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700013A")]
		public override JSONNode Item
		{
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x2AC5088", Offset = "0x2AC5088", VA = "0x2AC5088", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x2AC50E8", Offset = "0x2AC50E8", VA = "0x2AC50E8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public override JSONNode Item
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x2AC5174", Offset = "0x2AC5174", VA = "0x2AC5174", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x2AC51E4", Offset = "0x2AC51E4", VA = "0x2AC51E4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public override int AsInt
		{
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x2AC5484", Offset = "0x2AC5484", VA = "0x2AC5484", Slot = "28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x2AC556C", Offset = "0x2AC556C", VA = "0x2AC556C", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public override float AsFloat
		{
			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x2AC55DC", Offset = "0x2AC55DC", VA = "0x2AC55DC", Slot = "30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x2AC5648", Offset = "0x2AC5648", VA = "0x2AC5648", Slot = "31")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public override double AsDouble
		{
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0x2AC56B8", Offset = "0x2AC56B8", VA = "0x2AC56B8", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x2AC5724", Offset = "0x2AC5724", VA = "0x2AC5724", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public override bool AsBool
		{
			[Token(Token = "0x60009BA")]
			[Address(RVA = "0x2AC5794", Offset = "0x2AC5794", VA = "0x2AC5794", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0x2AC5800", Offset = "0x2AC5800", VA = "0x2AC5800", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x2AC5870", Offset = "0x2AC5870", VA = "0x2AC5870", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x2AC58D8", Offset = "0x2AC58D8", VA = "0x2AC58D8", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x2AC3C04", Offset = "0x2AC3C04", VA = "0x2AC3C04")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x2AC4F7C", Offset = "0x2AC4F7C", VA = "0x2AC4F7C")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x2AC5014", Offset = "0x2AC5014", VA = "0x2AC5014")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x2AC5314", Offset = "0x2AC5314", VA = "0x2AC5314", Slot = "18")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x2AC53A0", Offset = "0x2AC53A0", VA = "0x2AC53A0", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x2AC5434", Offset = "0x2AC5434", VA = "0x2AC5434")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x2AC544C", Offset = "0x2AC544C", VA = "0x2AC544C")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x2AC5464", Offset = "0x2AC5464", VA = "0x2AC5464", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x2AC547C", Offset = "0x2AC547C", VA = "0x2AC547C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x2AC5940", Offset = "0x2AC5940", VA = "0x2AC5940", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000196")]
	public static class JSON
	{
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x2AC3524", Offset = "0x2AC3524", VA = "0x2AC3524")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace Huenity
{
	[Serializable]
	[Token(Token = "0x2000197")]
	public class HueGroup
	{
		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int? id;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] lights;

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x2F7DEF0", Offset = "0x2F7DEF0", VA = "0x2F7DEF0")]
		public HueGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000198")]
	public class HueLight
	{
		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HueLightState state;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string type;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string modelid;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string swversion;

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x2F7DEF8", Offset = "0x2F7DEF8", VA = "0x2F7DEF8")]
		public HueLight()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public enum Alert
	{
		[Token(Token = "0x4000A55")]
		none,
		[Token(Token = "0x4000A56")]
		select,
		[Token(Token = "0x4000A57")]
		lselect
	}
	[Token(Token = "0x200019A")]
	public enum Effect
	{
		[Token(Token = "0x4000A59")]
		none,
		[Token(Token = "0x4000A5A")]
		colorloop
	}
	[Serializable]
	[Token(Token = "0x200019B")]
	public class HueLightState
	{
		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool? on;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int? sat;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int? bri;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int? hue;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int? ct;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double[] xy;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int? transitiontime;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool? reachable;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string colormode;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Alert? alert;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Effect? effect;

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x2F7B2E0", Offset = "0x2F7B2E0", VA = "0x2F7B2E0")]
		public HueLightState()
		{
		}
	}
	[Token(Token = "0x200019C")]
	internal class WhitelistRequest
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string devicetype;

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x24B98A8", Offset = "0x24B98A8", VA = "0x24B98A8")]
		public WhitelistRequest()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public static class ColorConverter
	{
		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x2F7B2E8", Offset = "0x2F7B2E8", VA = "0x2F7B2E8")]
		public static double[] XYfromRGB(Color rgb)
		{
			return null;
		}
	}
	[Token(Token = "0x200019E")]
	public class HuenityController : MonoBehaviour
	{
		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E967C", Offset = "0x16E967C")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string errorMessage;

			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string whitelistedUsername;

			[Token(Token = "0x4001B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<string> username;

			[Token(Token = "0x4001B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int timeout;

			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0x24B81F8", Offset = "0x24B81F8", VA = "0x24B81F8")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0x24B8200", Offset = "0x24B8200", VA = "0x24B8200")]
			internal void <ConnectBridge>b__0(string callback)
			{
			}
		}

		[Token(Token = "0x2000469")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E968C", Offset = "0x16E968C")]
		private sealed class <ConnectBridge>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<string> username;

			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string appName;

			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string deviceID;

			[Token(Token = "0x4001B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public HuenityController <>4__this;

			[Token(Token = "0x4001B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string bridgeAddress;

			[Token(Token = "0x4001B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass13_0 <>8__1;

			[Token(Token = "0x4001B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private WhitelistRequest <connection>5__2;

			[Token(Token = "0x1700044C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F43")]
				[Address(RVA = "0x24B98B0", Offset = "0x24B98B0", VA = "0x24B98B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F45")]
				[Address(RVA = "0x24B9918", Offset = "0x24B9918", VA = "0x24B9918", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F40")]
			[Address(RVA = "0x24B9590", Offset = "0x24B9590", VA = "0x24B9590")]
			[DebuggerHidden]
			public <ConnectBridge>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001F41")]
			[Address(RVA = "0x24B95BC", Offset = "0x24B95BC", VA = "0x24B95BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F42")]
			[Address(RVA = "0x24B95C0", Offset = "0x24B95C0", VA = "0x24B95C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F44")]
			[Address(RVA = "0x24B98B8", Offset = "0x24B98B8", VA = "0x24B98B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E969C", Offset = "0x16E969C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HuenityController <>4__this;

			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<string> response;

			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x24B850C", Offset = "0x24B850C", VA = "0x24B850C")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x24B8514", Offset = "0x24B8514", VA = "0x24B8514")]
			internal void <FindBridge>b__0(string callback)
			{
			}
		}

		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E96AC", Offset = "0x16E96AC")]
		private sealed class <>c__DisplayClass14_1
		{
			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Socket socket;

			[Token(Token = "0x4001B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass14_0 CS$<>8__locals1;

			[Token(Token = "0x6001F48")]
			[Address(RVA = "0x24B857C", Offset = "0x24B857C", VA = "0x24B857C")]
			public <>c__DisplayClass14_1()
			{
			}

			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x24B8584", Offset = "0x24B8584", VA = "0x24B8584")]
			internal void <FindBridge>b__1()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E96BC", Offset = "0x16E96BC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__16_0;

			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0x24B8194", Offset = "0x24B8194", VA = "0x24B8194")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0x24B819C", Offset = "0x24B819C", VA = "0x24B819C")]
			internal bool <IdentifyBridge>b__16_0(string s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E96CC", Offset = "0x16E96CC")]
		private sealed class <IdentifyBridge>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HuenityController <>4__this;

			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<string> response;

			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <foundIp>5__2;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<string>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string <ip>5__4;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UnityWebRequest <webRequest>5__5;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private DownloadHandlerBuffer <downloadHandler>5__6;

			[Token(Token = "0x1700044E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F51")]
				[Address(RVA = "0x24B9ED8", Offset = "0x24B9ED8", VA = "0x24B9ED8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F53")]
				[Address(RVA = "0x24B9F40", Offset = "0x24B9F40", VA = "0x24B9F40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x24B9920", Offset = "0x24B9920", VA = "0x24B9920")]
			[DebuggerHidden]
			public <IdentifyBridge>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x24B994C", Offset = "0x24B994C", VA = "0x24B994C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x24B99C0", Offset = "0x24B99C0", VA = "0x24B99C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x24B9968", Offset = "0x24B9968", VA = "0x24B9968")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F52")]
			[Address(RVA = "0x24B9EE0", Offset = "0x24B9EE0", VA = "0x24B9EE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200046E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E96DC", Offset = "0x16E96DC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<HueLight> foundHueLights;

			[Token(Token = "0x4001B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<List<HueLight>> allLights;

			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x24B85B4", Offset = "0x24B85B4", VA = "0x24B85B4")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x24B85BC", Offset = "0x24B85BC", VA = "0x24B85BC")]
			internal void <GetAllLights>b__0(string callback)
			{
			}
		}

		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E96EC", Offset = "0x16E96EC")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<HueLight> newHueLights;

			[Token(Token = "0x4001B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<List<HueLight>> newLights;

			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x24B8740", Offset = "0x24B8740", VA = "0x24B8740")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x24B8748", Offset = "0x24B8748", VA = "0x24B8748")]
			internal void <GetNewLights>b__0(string callback)
			{
			}
		}

		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E96FC", Offset = "0x16E96FC")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HueLight hueLight;

			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HueLightState hueLightState;

			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<HueLight> light;

			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x24B88E4", Offset = "0x24B88E4", VA = "0x24B88E4")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x24B88EC", Offset = "0x24B88EC", VA = "0x24B88EC")]
			internal void <GetLight>b__0(string callback)
			{
			}
		}

		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E970C", Offset = "0x16E970C")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<HueGroup> foundHueGroups;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<List<HueGroup>> allGroups;

			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x24B8EE4", Offset = "0x24B8EE4", VA = "0x24B8EE4")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0x24B8EEC", Offset = "0x24B8EEC", VA = "0x24B8EEC")]
			internal void <GetAllGroups>b__0(string callback)
			{
			}
		}

		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E971C", Offset = "0x16E971C")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<string> groupID;

			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x24B91D0", Offset = "0x24B91D0", VA = "0x24B91D0")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0x24B91D8", Offset = "0x24B91D8", VA = "0x24B91D8")]
			internal void <CreateGroup>b__0(string callback)
			{
			}
		}

		[Token(Token = "0x2000473")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E972C", Offset = "0x16E972C")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<HueGroup> group;

			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0x24B9318", Offset = "0x24B9318", VA = "0x24B9318")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0x24B9320", Offset = "0x24B9320", VA = "0x24B9320")]
			internal void <GetGroup>b__0(string groupCallback)
			{
			}
		}

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _connectionString;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int socketScanTime;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IPAddress multicastAddress;

		[Token(Token = "0x4000A6A")]
		private const int multicastPort = 1900;

		[Token(Token = "0x4000A6B")]
		private const int unicastPort = 1901;

		[Token(Token = "0x4000A6C")]
		private const string messageHeader = "M-SEARCH * HTTP/1.1";

		[Token(Token = "0x4000A6D")]
		private const string messageHost = "HOST: 239.255.255.250:1900";

		[Token(Token = "0x4000A6E")]
		private const string messageMan = "MAN: \"ssdp:discover\"";

		[Token(Token = "0x4000A6F")]
		private const string messageMx = "MX: 8";

		[Token(Token = "0x4000A70")]
		private const string messageSt = "ST:SsdpSearch:all";

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly byte[] broadcastMessage;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> _discoveredDevices;

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x2F7DF00", Offset = "0x2F7DF00", VA = "0x2F7DF00")]
		public void SetConnectionString(string connectionString)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x2F7DF08", Offset = "0x2F7DF08", VA = "0x2F7DF08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17012E0", Offset = "0x17012E0")]
		public IEnumerator ConnectBridge(string bridgeAddress, string appName, string deviceID, Action<string> username)
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x2F7DFE4", Offset = "0x2F7DFE4", VA = "0x2F7DFE4")]
		public void FindBridge(Action<string> response)
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x2F7E470", Offset = "0x2F7E470", VA = "0x2F7E470")]
		private void GetSocketResponse(Socket socket)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x2F7E3D8", Offset = "0x2F7E3D8", VA = "0x2F7E3D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701344", Offset = "0x1701344")]
		private IEnumerator IdentifyBridge(Action<string> response)
		{
			return null;
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x2F7E6C8", Offset = "0x2F7E6C8", VA = "0x2F7E6C8")]
		public void DeleteUser(string username)
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x2F7E75C", Offset = "0x2F7E75C", VA = "0x2F7E75C")]
		public void GetAllLights(Action<List<HueLight>> allLights)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x2F7E880", Offset = "0x2F7E880", VA = "0x2F7E880")]
		public void GetNewLights(Action<List<HueLight>> newLights)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x2F7E9A4", Offset = "0x2F7E9A4", VA = "0x2F7E9A4")]
		public void SearchForNewLights()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x2F7AA24", Offset = "0x2F7AA24", VA = "0x2F7AA24")]
		public void SetLightState(int lightID, HueLightState lightState)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x2F7F4A4", Offset = "0x2F7F4A4", VA = "0x2F7F4A4")]
		public void GetLight(int lightID, Action<HueLight> light)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x2F7F648", Offset = "0x2F7F648", VA = "0x2F7F648")]
		public void UpdateLight(HueLight light)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x2F7F720", Offset = "0x2F7F720", VA = "0x2F7F720")]
		public void DeleteLight(HueLight light)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x2F7F7E0", Offset = "0x2F7F7E0", VA = "0x2F7F7E0")]
		public void GetAllGroups(Action<List<HueGroup>> allGroups)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x2F7F904", Offset = "0x2F7F904", VA = "0x2F7F904")]
		public void CreateGroup(HueGroup group, Action<string> groupID)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x2F7FA08", Offset = "0x2F7FA08", VA = "0x2F7FA08")]
		public void UpdateGroup(HueGroup group)
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x2F7FAE0", Offset = "0x2F7FAE0", VA = "0x2F7FAE0")]
		public void GetGroup(string groupID, Action<HueGroup> group)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x2F7FC00", Offset = "0x2F7FC00", VA = "0x2F7FC00")]
		public void SetGroupState(int groupID, HueLightState lightState)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x2F7FCD8", Offset = "0x2F7FCD8", VA = "0x2F7FCD8")]
		public void DeleteGroup(HueGroup group)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x2F7EA18", Offset = "0x2F7EA18", VA = "0x2F7EA18")]
		private string JSONStateFormatter(HueLightState lightState)
		{
			return null;
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x2F7FD98", Offset = "0x2F7FD98", VA = "0x2F7FD98")]
		public HuenityController()
		{
		}
	}
}
namespace Avante
{
	[Token(Token = "0x200019F")]
	[ExecuteInEditMode]
	public class FulldomePreview : MonoBehaviour
	{
		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _fulldomePreviewMaterial;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture _fulldomeTexture;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _cullingMask;

		[Token(Token = "0x17000142")]
		private Camera _TargetCamera
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x25D65AC", Offset = "0x25D65AC", VA = "0x25D65AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private Material FulldomePreviewMaterial
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x25D65FC", Offset = "0x25D65FC", VA = "0x25D65FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x25D66C8", Offset = "0x25D66C8", VA = "0x25D66C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x25D66CC", Offset = "0x25D66CC", VA = "0x25D66CC")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x25D6910", Offset = "0x25D6910", VA = "0x25D6910")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x25D697C", Offset = "0x25D697C", VA = "0x25D697C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x25D6A14", Offset = "0x25D6A14", VA = "0x25D6A14")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x25D6B18", Offset = "0x25D6B18", VA = "0x25D6B18")]
		public FulldomePreview()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E67B8", Offset = "0x16E67B8")]
	public class ConditionalHideAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ConditionalSourceField;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool HideInInspector;

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x25D49B0", Offset = "0x25D49B0", VA = "0x25D49B0")]
		public ConditionalHideAttribute(string conditionalSourceField)
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x25D4A38", Offset = "0x25D4A38", VA = "0x25D4A38")]
		public ConditionalHideAttribute(string conditionalSourceField, bool hideInInspector)
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class EnumFlagsAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string enumName;

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x25D4AC8", Offset = "0x25D4AC8", VA = "0x25D4AC8")]
		public EnumFlagsAttribute()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x25D4AD0", Offset = "0x25D4AD0", VA = "0x25D4AD0")]
		public EnumFlagsAttribute(string name)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class Capture : MonoBehaviour
	{
		[Token(Token = "0x2000474")]
		public enum FileType
		{
			[Token(Token = "0x4001B80")]
			PNG,
			[Token(Token = "0x4001B81")]
			JPG
		}

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RenderTexture fbo;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FileType fileType;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EDFA4", Offset = "0x16EDFA4")]
		public int jpgQuality;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isTransparent;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string capturePath;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string filePrefix;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int framerate;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float totalSecods;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float skipFrames;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool capturing;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera _camera;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Texture2D _tex;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _captureNow;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _frameNumber;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _totalFrames;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _w;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _h;

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x25D3E90", Offset = "0x25D3E90", VA = "0x25D3E90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x25D3F1C", Offset = "0x25D3F1C", VA = "0x25D3F1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x25D4070", Offset = "0x25D4070", VA = "0x25D4070")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x25D4124", Offset = "0x25D4124", VA = "0x25D4124")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x25D4608", Offset = "0x25D4608", VA = "0x25D4608")]
		private string MakeName()
		{
			return null;
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x25D4924", Offset = "0x25D4924", VA = "0x25D4924")]
		public Capture()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public enum Orientation
	{
		[Token(Token = "0x4000A8B")]
		Fisheye,
		[Token(Token = "0x4000A8C")]
		Fulldome
	}
	[Token(Token = "0x20001A4")]
	[Flags]
	public enum Face
	{
		[Token(Token = "0x4000A8E")]
		None = 0,
		[Token(Token = "0x4000A8F")]
		Everything = 0x3F,
		[Token(Token = "0x4000A90")]
		PositiveX = 1,
		[Token(Token = "0x4000A91")]
		NegativeX = 2,
		[Token(Token = "0x4000A92")]
		PositiveY = 4,
		[Token(Token = "0x4000A93")]
		NegativeY = 8,
		[Token(Token = "0x4000A94")]
		PositiveZ = 0x10,
		[Token(Token = "0x4000A95")]
		NegativeZ = 0x20
	}
	[Token(Token = "0x20001A5")]
	[ExecuteInEditMode]
	public class FulldomeCamera : MonoBehaviour
	{
		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera mainCamera;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "EnumFlagsAttribute", RVA = "0x16EDFC0", Offset = "0x16EDFC0")]
		public Face cubemapFaces;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Orientation orientation;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EDFD0", Offset = "0x16EDFD0")]
		public float horizon;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16EDFF0", Offset = "0x16EDFF0")]
		public float domeTilt;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool masked;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture _cubemapFbo;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _isRenderingCubemap;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera _fulldomeCamera;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _cubemapToDomeMaterial;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FulldomeCamera _instance;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private FulldomeGizmo _gizmo;

		[Token(Token = "0x17000144")]
		public static bool IsRenderingCubemap
		{
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x25D4B04", Offset = "0x25D4B04", VA = "0x25D4B04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000145")]
		private bool _IsFulldome
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x25D4B6C", Offset = "0x25D4B6C", VA = "0x25D4B6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		private Camera _TargetCamera
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x25D4B7C", Offset = "0x25D4B7C", VA = "0x25D4B7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private Transform _Transform
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x25D4C04", Offset = "0x25D4C04", VA = "0x25D4C04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private Camera _FulldomeCamera
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x25D4CA0", Offset = "0x25D4CA0", VA = "0x25D4CA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private Material CubemapToDomeMaterial
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x25D4D48", Offset = "0x25D4D48", VA = "0x25D4D48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private int _FaceMask
		{
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x25D4E14", Offset = "0x25D4E14", VA = "0x25D4E14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014B")]
		public static FulldomeCamera Instance
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x25D4E1C", Offset = "0x25D4E1C", VA = "0x25D4E1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x25D4E84", Offset = "0x25D4E84", VA = "0x25D4E84")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x25D5054", Offset = "0x25D5054", VA = "0x25D5054")]
		private void Start()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x25D4E88", Offset = "0x25D4E88", VA = "0x25D4E88")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x25D5058", Offset = "0x25D5058", VA = "0x25D5058")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x25D5134", Offset = "0x25D5134", VA = "0x25D5134")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x25D522C", Offset = "0x25D522C", VA = "0x25D522C")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x25D52DC", Offset = "0x25D52DC", VA = "0x25D52DC")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x25D550C", Offset = "0x25D550C", VA = "0x25D550C")]
		public RenderTexture GetFulldomeTexture()
		{
			return null;
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x25D558C", Offset = "0x25D558C", VA = "0x25D558C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x25D60A4", Offset = "0x25D60A4", VA = "0x25D60A4")]
		public FulldomeCamera()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class FulldomeGizmo
	{
		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float horizon;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float wireStep;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float meshStep;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float PI2;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float PI05;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<UnityEngine.Vector3> _linePoints;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UnityEngine.Vector3> _meshPoints;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<UnityEngine.Vector3> _meshNormals;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<int> _meshTriangles;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Mesh _mesh;

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x25D5664", Offset = "0x25D5664", VA = "0x25D5664")]
		public FulldomeGizmo(float h)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x25D61A8", Offset = "0x25D61A8", VA = "0x25D61A8")]
		private float NextAngle(float a, float from, float to, float step)
		{
			return default(float);
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x25D6280", Offset = "0x25D6280", VA = "0x25D6280")]
		private void AddLines(List<UnityEngine.Vector3> ps)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x25D6438", Offset = "0x25D6438", VA = "0x25D6438")]
		private void addMeshQuad(UnityEngine.Vector3[] ps)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x25D5CF8", Offset = "0x25D5CF8", VA = "0x25D5CF8")]
		public void Draw(Transform transform, bool connected, bool isFulldome, float domeTilt)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x25D60C4", Offset = "0x25D60C4", VA = "0x25D60C4")]
		private float HorizonToAltitude(float h)
		{
			return default(float);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x25D60D8", Offset = "0x25D60D8", VA = "0x25D60D8")]
		private UnityEngine.Vector3 LatLngToDome(float lat, float lng)
		{
			return default(UnityEngine.Vector3);
		}
	}
	[Token(Token = "0x20001A7")]
	public class Lib : MonoBehaviour
	{
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x25D6B20", Offset = "0x25D6B20", VA = "0x25D6B20")]
		public static string GetEnumNameByValue(Type enumType, int value)
		{
			return null;
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x25D6DF8", Offset = "0x25D6DF8", VA = "0x25D6DF8")]
		public static int GetEnumValueByName(Type enumType, string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x25D70F0", Offset = "0x25D70F0", VA = "0x25D70F0")]
		public static long Max(long a, long b)
		{
			return default(long);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x25D70FC", Offset = "0x25D70FC", VA = "0x25D70FC")]
		public static long Min(long a, long b)
		{
			return default(long);
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x25D7108", Offset = "0x25D7108", VA = "0x25D7108")]
		public static float Map(float value, float istart, float istop, float ostart, float ostop)
		{
			return default(float);
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x25D7124", Offset = "0x25D7124", VA = "0x25D7124")]
		public static float AngleBetween(UnityEngine.Vector3 v0, UnityEngine.Vector3 v1)
		{
			return default(float);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x25D71B8", Offset = "0x25D71B8", VA = "0x25D71B8")]
		public static string ToStringSpaces(int value, int size)
		{
			return null;
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x25D4894", Offset = "0x25D4894", VA = "0x25D4894")]
		public static string ToStringZeroes(int value, int size)
		{
			return null;
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x25D7268", Offset = "0x25D7268", VA = "0x25D7268")]
		public static Vector2 texelToUnit2(Vector2 uv)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x25D730C", Offset = "0x25D730C", VA = "0x25D730C")]
		public static UnityEngine.Vector3 texelToUnit3(UnityEngine.Vector3 uv)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x25D73CC", Offset = "0x25D73CC", VA = "0x25D73CC")]
		public static Vector2 unitToTexel2(Vector2 uv)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x25D7460", Offset = "0x25D7460", VA = "0x25D7460")]
		public static UnityEngine.Vector3 unitToTexel3(UnityEngine.Vector3 uv)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x25D7508", Offset = "0x25D7508", VA = "0x25D7508")]
		public static Vector2 domeToTexel(UnityEngine.Vector3 pos, float horizon)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x25D7604", Offset = "0x25D7604", VA = "0x25D7604")]
		public static Vector2 domeToTexel(UnityEngine.Vector3 pos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x25D7610", Offset = "0x25D7610", VA = "0x25D7610")]
		public static UnityEngine.Vector3 texelToDome(Vector2 st, float horizon)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x25D771C", Offset = "0x25D771C", VA = "0x25D771C")]
		public static UnityEngine.Vector3 texelToDome(Vector2 st)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x25D7728", Offset = "0x25D7728", VA = "0x25D7728")]
		public Lib()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x20001A8")]
	public class AutoMoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000475")]
		public class Vector3andSpace
		{
			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Vector3 value;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Space space;

			[Token(Token = "0x6001F60")]
			[Address(RVA = "0x237434C", Offset = "0x237434C", VA = "0x237434C")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimescale;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_LastRealTime;

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x23741DC", Offset = "0x23741DC", VA = "0x23741DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x2374204", Offset = "0x2374204", VA = "0x2374204")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x2374344", Offset = "0x2374344", VA = "0x2374344")]
		public AutoMoveAndRotate()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class FollowTarget : MonoBehaviour
	{
		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 offset;

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x237435C", Offset = "0x237435C", VA = "0x237435C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x237443C", Offset = "0x237443C", VA = "0x237443C")]
		public FollowTarget()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class SmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float rotationDamping;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float heightDamping;

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x237449C", Offset = "0x237449C", VA = "0x237449C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x23744A0", Offset = "0x23744A0", VA = "0x23744A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x23747CC", Offset = "0x23747CC", VA = "0x23747CC")]
		public SmoothFollow()
		{
		}
	}
}
namespace UnityStandardAssets.CinematicEffects
{
	[Token(Token = "0x20001AB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6810", Offset = "0x16E6810")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6810", Offset = "0x16E6810")]
	[ImageEffectAllowedInSceneView]
	public class AntiAliasing : MonoBehaviour
	{
		[Token(Token = "0x2000476")]
		public enum Method
		{
			[Token(Token = "0x4001B85")]
			Smaa,
			[Token(Token = "0x4001B86")]
			Fxaa
		}

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SMAA m_SMAA;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FXAA m_FXAA;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private int m_Method;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera m_Camera;

		[Token(Token = "0x1700014C")]
		public int method
		{
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x326CD58", Offset = "0x326CD58", VA = "0x326CD58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A20")]
			[Address(RVA = "0x326CD60", Offset = "0x326CD60", VA = "0x326CD60")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public IAntiAliasing current
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x326CD74", Offset = "0x326CD74", VA = "0x326CD74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		public Camera cameraComponent
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x326CD8C", Offset = "0x326CD8C", VA = "0x326CD8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x326CE38", Offset = "0x326CE38", VA = "0x326CE38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x326D00C", Offset = "0x326D00C", VA = "0x326D00C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x326D0F0", Offset = "0x326D0F0", VA = "0x326D0F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x326D2F8", Offset = "0x326D2F8", VA = "0x326D2F8")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x326D3CC", Offset = "0x326D3CC", VA = "0x326D3CC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x326D4A0", Offset = "0x326D4A0", VA = "0x326D4A0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x326D58C", Offset = "0x326D58C", VA = "0x326D58C")]
		public AntiAliasing()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AC")]
	public class FXAA : IAntiAliasing
	{
		[Serializable]
		[Token(Token = "0x2000477")]
		public struct QualitySettings
		{
			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F85F8", Offset = "0x16F85F8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F85F8", Offset = "0x16F85F8")]
			public float subpixelAliasingRemovalAmount;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F864C", Offset = "0x16F864C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F864C", Offset = "0x16F864C")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F86A8", Offset = "0x16F86A8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F86A8", Offset = "0x16F86A8")]
			public float minimumRequiredLuminance;
		}

		[Serializable]
		[Token(Token = "0x2000478")]
		public struct ConsoleSettings
		{
			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8700", Offset = "0x16F8700")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8700", Offset = "0x16F8700")]
			public float subpixelSpreadAmount;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8758", Offset = "0x16F8758")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8758", Offset = "0x16F8758")]
			public float edgeSharpnessAmount;

			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F87AC", Offset = "0x16F87AC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F87AC", Offset = "0x16F87AC")]
			public float edgeDetectionThreshold;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8800", Offset = "0x16F8800")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8800", Offset = "0x16F8800")]
			public float minimumRequiredLuminance;
		}

		[Serializable]
		[Token(Token = "0x2000479")]
		public struct Preset
		{
			[Token(Token = "0x2000614")]
			[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16EA104", Offset = "0x16EA104")]
			public class LayoutAttribute : PropertyAttribute
			{
				[Token(Token = "0x600244C")]
				[Address(RVA = "0x327208C", Offset = "0x327208C", VA = "0x327208C")]
				public LayoutAttribute()
				{
				}
			}

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Layout]
			public QualitySettings qualitySettings;

			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[Layout]
			public ConsoleSettings consoleSettings;

			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Preset s_ExtremePerformance;

			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private static readonly Preset s_Performance;

			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private static readonly Preset s_Default;

			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private static readonly Preset s_Quality;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private static readonly Preset s_ExtremeQuality;

			[Token(Token = "0x17000450")]
			public static Preset extremePerformancePreset
			{
				[Token(Token = "0x6001F61")]
				[Address(RVA = "0x3271D38", Offset = "0x3271D38", VA = "0x3271D38")]
				get
				{
					return default(Preset);
				}
			}

			[Token(Token = "0x17000451")]
			public static Preset performancePreset
			{
				[Token(Token = "0x6001F62")]
				[Address(RVA = "0x3271DB0", Offset = "0x3271DB0", VA = "0x3271DB0")]
				get
				{
					return default(Preset);
				}
			}

			[Token(Token = "0x17000452")]
			public static Preset defaultPreset
			{
				[Token(Token = "0x6001F63")]
				[Address(RVA = "0x3271E28", Offset = "0x3271E28", VA = "0x3271E28")]
				get
				{
					return default(Preset);
				}
			}

			[Token(Token = "0x17000453")]
			public static Preset qualityPreset
			{
				[Token(Token = "0x6001F64")]
				[Address(RVA = "0x3271EA0", Offset = "0x3271EA0", VA = "0x3271EA0")]
				get
				{
					return default(Preset);
				}
			}

			[Token(Token = "0x17000454")]
			public static Preset extremeQualityPreset
			{
				[Token(Token = "0x6001F65")]
				[Address(RVA = "0x3271F18", Offset = "0x3271F18", VA = "0x3271F18")]
				get
				{
					return default(Preset);
				}
			}
		}

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Shader m_Shader;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material m_Material;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public Preset preset;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Preset[] availablePresets;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EE0EC", Offset = "0x16EE0EC")]
		private bool <validSourceFormat>k__BackingField;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_QualitySettings;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_ConsoleSettings;

		[Token(Token = "0x1700014F")]
		private Shader shader
		{
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x3271780", Offset = "0x3271780", VA = "0x3271780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		public Material material
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x3271820", Offset = "0x3271820", VA = "0x3271820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		public bool validSourceFormat
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x32718C4", Offset = "0x32718C4", VA = "0x32718C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17013A8", Offset = "0x17013A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x32718CC", Offset = "0x32718CC", VA = "0x32718CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17013B8", Offset = "0x17013B8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x326CF9C", Offset = "0x326CF9C", VA = "0x326CF9C", Slot = "4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x326D09C", Offset = "0x326D09C", VA = "0x326D09C", Slot = "5")]
		public void OnEnable(AntiAliasing owner)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x326D244", Offset = "0x326D244", VA = "0x326D244", Slot = "6")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x32718D8", Offset = "0x32718D8", VA = "0x32718D8", Slot = "7")]
		public void OnPreCull(Camera camera)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x32718DC", Offset = "0x32718DC", VA = "0x32718DC", Slot = "8")]
		public void OnPostRender(Camera camera)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x32718E0", Offset = "0x32718E0", VA = "0x32718E0", Slot = "9")]
		public void OnRenderImage(Camera camera, RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x326D6FC", Offset = "0x326D6FC", VA = "0x326D6FC")]
		public FXAA()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public interface IAntiAliasing
	{
		[Token(Token = "0x6000A36")]
		void Awake();

		[Token(Token = "0x6000A37")]
		void OnEnable(AntiAliasing owner);

		[Token(Token = "0x6000A38")]
		void OnDisable();

		[Token(Token = "0x6000A39")]
		void OnPreCull(Camera camera);

		[Token(Token = "0x6000A3A")]
		void OnPostRender(Camera camera);

		[Token(Token = "0x6000A3B")]
		void OnRenderImage(Camera camera, RenderTexture source, RenderTexture destination);
	}
	[Serializable]
	[Token(Token = "0x20001AE")]
	public class SMAA : IAntiAliasing
	{
		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E973C", Offset = "0x16E973C")]
		public class SettingsGroup : Attribute
		{
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x32758E0", Offset = "0x32758E0", VA = "0x32758E0")]
			public SettingsGroup()
			{
			}
		}

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E9750", Offset = "0x16E9750")]
		public class TopLevelSettings : Attribute
		{
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x32758F0", Offset = "0x32758F0", VA = "0x32758F0")]
			public TopLevelSettings()
			{
			}
		}

		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E9764", Offset = "0x16E9764")]
		public class ExperimentalGroup : Attribute
		{
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x32757BC", Offset = "0x32757BC", VA = "0x32757BC")]
			public ExperimentalGroup()
			{
			}
		}

		[Token(Token = "0x200047D")]
		public enum DebugPass
		{
			[Token(Token = "0x4001B96")]
			Off,
			[Token(Token = "0x4001B97")]
			Edges,
			[Token(Token = "0x4001B98")]
			Weights,
			[Token(Token = "0x4001B99")]
			Accumulation
		}

		[Token(Token = "0x200047E")]
		public enum QualityPreset
		{
			[Token(Token = "0x4001B9B")]
			Low,
			[Token(Token = "0x4001B9C")]
			Medium,
			[Token(Token = "0x4001B9D")]
			High,
			[Token(Token = "0x4001B9E")]
			Ultra,
			[Token(Token = "0x4001B9F")]
			Custom
		}

		[Token(Token = "0x200047F")]
		public enum EdgeDetectionMethod
		{
			[Token(Token = "0x4001BA1")]
			Luma = 1,
			[Token(Token = "0x4001BA2")]
			Color,
			[Token(Token = "0x4001BA3")]
			Depth
		}

		[Serializable]
		[Token(Token = "0x2000480")]
		public struct GlobalSettings
		{
			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F887C", Offset = "0x16F887C")]
			public DebugPass debugPass;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F88B4", Offset = "0x16F88B4")]
			public QualityPreset quality;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F88EC", Offset = "0x16F88EC")]
			public EdgeDetectionMethod edgeDetectionMethod;

			[Token(Token = "0x17000455")]
			public static GlobalSettings defaultSettings
			{
				[Token(Token = "0x6001F6A")]
				[Address(RVA = "0x3275790", Offset = "0x3275790", VA = "0x3275790")]
				get
				{
					return default(GlobalSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000481")]
		public struct QualitySettings
		{
			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8924", Offset = "0x16F8924")]
			public bool diagonalDetection;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F895C", Offset = "0x16F895C")]
			public bool cornerDetection;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8994", Offset = "0x16F8994")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8994", Offset = "0x16F8994")]
			public float threshold;

			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F89E8", Offset = "0x16F89E8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F89E8", Offset = "0x16F89E8")]
			public float depthThreshold;

			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8A3C", Offset = "0x16F8A3C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8A3C", Offset = "0x16F8A3C")]
			public int maxSearchSteps;

			[Token(Token = "0x4001BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8A94", Offset = "0x16F8A94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8A94", Offset = "0x16F8A94")]
			public int maxDiagonalSearchSteps;

			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8AE8", Offset = "0x16F8AE8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8AE8", Offset = "0x16F8AE8")]
			public int cornerRounding;

			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F8B40", Offset = "0x16F8B40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8B40", Offset = "0x16F8B40")]
			public float localContrastAdaptationFactor;

			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static QualitySettings[] presetQualitySettings;
		}

		[Serializable]
		[Token(Token = "0x2000482")]
		public struct TemporalSettings
		{
			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8B90", Offset = "0x16F8B90")]
			public bool enabled;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8BC8", Offset = "0x16F8BC8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8BC8", Offset = "0x16F8BC8")]
			public float fuzzSize;

			[Token(Token = "0x17000456")]
			public static TemporalSettings defaultSettings
			{
				[Token(Token = "0x6001F6D")]
				[Address(RVA = "0x32757B4", Offset = "0x32757B4", VA = "0x32757B4")]
				get
				{
					return default(TemporalSettings);
				}
			}

			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x32758E8", Offset = "0x32758E8", VA = "0x32758E8")]
			public bool UseTemporal()
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000483")]
		public struct PredicationSettings
		{
			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8C1C", Offset = "0x16F8C1C")]
			public bool enabled;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F8C54", Offset = "0x16F8C54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8C54", Offset = "0x16F8C54")]
			public float threshold;

			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8CA8", Offset = "0x16F8CA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8CA8", Offset = "0x16F8CA8")]
			public float scale;

			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8CFC", Offset = "0x16F8CFC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8CFC", Offset = "0x16F8CFC")]
			public float strength;

			[Token(Token = "0x17000457")]
			public static PredicationSettings defaultSettings
			{
				[Token(Token = "0x6001F6E")]
				[Address(RVA = "0x327579C", Offset = "0x327579C", VA = "0x327579C")]
				get
				{
					return default(PredicationSettings);
				}
			}
		}

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[TopLevelSettings]
		public GlobalSettings settings;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SettingsGroup]
		public QualitySettings quality;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SettingsGroup]
		public PredicationSettings predication;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SettingsGroup]
		[ExperimentalGroup]
		public TemporalSettings temporal;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Matrix4x4 m_ProjectionMatrix;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Matrix4x4 m_PreviousViewProjectionMatrix;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_FlipFlop;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTexture m_Accumulation;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Shader m_Shader;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Texture2D m_AreaTexture;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Texture2D m_SearchTexture;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material m_Material;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int m_AreaTex;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int m_SearchTex;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int m_Metrics;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int m_Params1;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int m_Params2;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int m_Params3;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_ReprojectionMatrix;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int m_SubsampleIndices;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int m_BlendTex;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int m_AccumulationTex;

		[Token(Token = "0x17000152")]
		public Shader shader
		{
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x32748D8", Offset = "0x32748D8", VA = "0x32748D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private Texture2D areaTexture
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x3274978", Offset = "0x3274978", VA = "0x3274978")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private Texture2D searchTexture
		{
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x3274A20", Offset = "0x3274A20", VA = "0x3274A20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private Material material
		{
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0x3274AC8", Offset = "0x3274AC8", VA = "0x3274AC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x326CE6C", Offset = "0x326CE6C", VA = "0x326CE6C", Slot = "4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x326D048", Offset = "0x326D048", VA = "0x326D048", Slot = "5")]
		public void OnEnable(AntiAliasing owner)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x326D124", Offset = "0x326D124", VA = "0x326D124", Slot = "6")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x3274B6C", Offset = "0x3274B6C", VA = "0x3274B6C", Slot = "7")]
		public void OnPreCull(Camera camera)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x3274D18", Offset = "0x3274D18", VA = "0x3274D18", Slot = "8")]
		public void OnPostRender(Camera camera)
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x3274D40", Offset = "0x3274D40", VA = "0x3274D40", Slot = "9")]
		public void OnRenderImage(Camera camera, RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x3275778", Offset = "0x3275778", VA = "0x3275778")]
		private RenderTexture TempRT(int width, int height, RenderTextureFormat format)
		{
			return null;
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x326D624", Offset = "0x326D624", VA = "0x326D624")]
		public SMAA()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E68B8", Offset = "0x16E68B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E68B8", Offset = "0x16E68B8")]
	[ImageEffectAllowedInSceneView]
	public class Bloom : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000484")]
		public struct Settings
		{
			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8D50", Offset = "0x16F8D50")]
			public float threshold;

			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8D9C", Offset = "0x16F8D9C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8D9C", Offset = "0x16F8D9C")]
			public float softKnee;

			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F8E00", Offset = "0x16F8E00")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8E00", Offset = "0x16F8E00")]
			public float radius;

			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8E64", Offset = "0x16F8E64")]
			public float intensity;

			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8EB0", Offset = "0x16F8EB0")]
			public bool highQuality;

			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8EFC", Offset = "0x16F8EFC")]
			public bool antiFlicker;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8F48", Offset = "0x16F8F48")]
			public Texture dirtTexture;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F8F80", Offset = "0x16F8F80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8F80", Offset = "0x16F8F80")]
			public float dirtIntensity;

			[Token(Token = "0x17000458")]
			public float thresholdGamma
			{
				[Token(Token = "0x6001F70")]
				[Address(RVA = "0x326E8DC", Offset = "0x326E8DC", VA = "0x326E8DC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001F6F")]
				[Address(RVA = "0x326E8D4", Offset = "0x326E8D4", VA = "0x326E8D4")]
				set
				{
				}
			}

			[Token(Token = "0x17000459")]
			public float thresholdLinear
			{
				[Token(Token = "0x6001F72")]
				[Address(RVA = "0x326E6F4", Offset = "0x326E6F4", VA = "0x326E6F4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001F71")]
				[Address(RVA = "0x326E954", Offset = "0x326E954", VA = "0x326E954")]
				set
				{
				}
			}

			[Token(Token = "0x1700045A")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F73")]
				[Address(RVA = "0x326E868", Offset = "0x326E868", VA = "0x326E868")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private Shader m_Shader;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_Material;

		[Token(Token = "0x4000ADB")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture[] m_blurBuffer1;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture[] m_blurBuffer2;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_Threshold;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_Curve;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_PrefilterOffs;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_SampleScale;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Intensity;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_DirtTex;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_DirtIntensity;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_BaseTex;

		[Token(Token = "0x17000156")]
		public Shader shader
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x326D7C8", Offset = "0x326D7C8", VA = "0x326D7C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		public Material material
		{
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x326D868", Offset = "0x326D868", VA = "0x326D868")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x326D9D8", Offset = "0x326D9D8", VA = "0x326D9D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x326DAD8", Offset = "0x326DAD8", VA = "0x326DAD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x326DE10", Offset = "0x326DE10", VA = "0x326DE10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x326DEC4", Offset = "0x326DEC4", VA = "0x326DEC4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x326E770", Offset = "0x326E770", VA = "0x326E770")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public static class ImageEffectHelper
	{
		[Token(Token = "0x17000158")]
		public static bool supportsDX11
		{
			[Token(Token = "0x6000A51")]
			[Address(RVA = "0x326F14C", Offset = "0x326F14C", VA = "0x326F14C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x326DB24", Offset = "0x326DB24", VA = "0x326DB24")]
		public static bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x326D90C", Offset = "0x326D90C", VA = "0x326D90C")]
		public static Material CheckShaderAndCreateMaterial(Shader s)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B1")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float min;

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x3272F84", Offset = "0x3272F84", VA = "0x3272F84")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class RenderTextureUtility
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x3270924", Offset = "0x3270924", VA = "0x3270924")]
		public RenderTexture GetTemporaryRenderTexture(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, FilterMode filterMode = FilterMode.Bilinear)
		{
			return null;
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x3270B28", Offset = "0x3270B28", VA = "0x3270B28")]
		public void ReleaseTemporaryRenderTexture(RenderTexture rt)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x326F6DC", Offset = "0x326F6DC", VA = "0x326F6DC")]
		public void ReleaseAllTemporaryRenderTextures()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x3271648", Offset = "0x3271648", VA = "0x3271648")]
		public RenderTextureUtility()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6960", Offset = "0x16E6960")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6960", Offset = "0x16E6960")]
	public class DepthOfField : MonoBehaviour
	{
		[Token(Token = "0x2000485")]
		private enum Passes
		{
			[Token(Token = "0x4001BBF")]
			BlurAlphaWeighted,
			[Token(Token = "0x4001BC0")]
			BoxBlur,
			[Token(Token = "0x4001BC1")]
			DilateFgCocFromColor,
			[Token(Token = "0x4001BC2")]
			DilateFgCoc,
			[Token(Token = "0x4001BC3")]
			CaptureCocExplicit,
			[Token(Token = "0x4001BC4")]
			VisualizeCocExplicit,
			[Token(Token = "0x4001BC5")]
			CocPrefilter,
			[Token(Token = "0x4001BC6")]
			CircleBlur,
			[Token(Token = "0x4001BC7")]
			CircleBlurWithDilatedFg,
			[Token(Token = "0x4001BC8")]
			CircleBlurLowQuality,
			[Token(Token = "0x4001BC9")]
			CircleBlowLowQualityWithDilatedFg,
			[Token(Token = "0x4001BCA")]
			MergeExplicit,
			[Token(Token = "0x4001BCB")]
			ShapeLowQuality,
			[Token(Token = "0x4001BCC")]
			ShapeLowQualityDilateFg,
			[Token(Token = "0x4001BCD")]
			ShapeLowQualityMerge,
			[Token(Token = "0x4001BCE")]
			ShapeLowQualityMergeDilateFg,
			[Token(Token = "0x4001BCF")]
			ShapeMediumQuality,
			[Token(Token = "0x4001BD0")]
			ShapeMediumQualityDilateFg,
			[Token(Token = "0x4001BD1")]
			ShapeMediumQualityMerge,
			[Token(Token = "0x4001BD2")]
			ShapeMediumQualityMergeDilateFg,
			[Token(Token = "0x4001BD3")]
			ShapeHighQuality,
			[Token(Token = "0x4001BD4")]
			ShapeHighQualityDilateFg,
			[Token(Token = "0x4001BD5")]
			ShapeHighQualityMerge,
			[Token(Token = "0x4001BD6")]
			ShapeHighQualityMergeDilateFg
		}

		[Token(Token = "0x2000486")]
		private enum MedianPasses
		{
			[Token(Token = "0x4001BD8")]
			Median3,
			[Token(Token = "0x4001BD9")]
			Median3X3
		}

		[Token(Token = "0x2000487")]
		private enum BokehTexturesPasses
		{
			[Token(Token = "0x4001BDB")]
			Apply,
			[Token(Token = "0x4001BDC")]
			Collect
		}

		[Token(Token = "0x2000488")]
		public enum TweakMode
		{
			[Token(Token = "0x4001BDE")]
			Range,
			[Token(Token = "0x4001BDF")]
			Explicit
		}

		[Token(Token = "0x2000489")]
		public enum ApertureShape
		{
			[Token(Token = "0x4001BE1")]
			Circular,
			[Token(Token = "0x4001BE2")]
			Hexagonal,
			[Token(Token = "0x4001BE3")]
			Octogonal
		}

		[Token(Token = "0x200048A")]
		public enum QualityPreset
		{
			[Token(Token = "0x4001BE5")]
			Low,
			[Token(Token = "0x4001BE6")]
			Medium,
			[Token(Token = "0x4001BE7")]
			High
		}

		[Token(Token = "0x200048B")]
		public enum FilterQuality
		{
			[Token(Token = "0x4001BE9")]
			None,
			[Token(Token = "0x4001BEA")]
			Normal,
			[Token(Token = "0x4001BEB")]
			High
		}

		[Serializable]
		[Token(Token = "0x200048C")]
		public struct GlobalSettings
		{
			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F8FD0", Offset = "0x16F8FD0")]
			public bool visualizeFocus;

			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9008", Offset = "0x16F9008")]
			public TweakMode tweakMode;

			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9040", Offset = "0x16F9040")]
			public QualityPreset filteringQuality;

			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9078", Offset = "0x16F9078")]
			public ApertureShape apertureShape;

			[Token(Token = "0x4001BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F90B0", Offset = "0x16F90B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F90B0", Offset = "0x16F90B0")]
			public float apertureOrientation;

			[Token(Token = "0x1700045B")]
			public static GlobalSettings defaultSettings
			{
				[Token(Token = "0x6001F74")]
				[Address(RVA = "0x327157C", Offset = "0x327157C", VA = "0x327157C")]
				get
				{
					return default(GlobalSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200048D")]
		public struct QualitySettings
		{
			[Token(Token = "0x4001BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9108", Offset = "0x16F9108")]
			public bool prefilterBlur;

			[Token(Token = "0x4001BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9140", Offset = "0x16F9140")]
			public FilterQuality medianFilter;

			[Token(Token = "0x4001BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9178", Offset = "0x16F9178")]
			public bool dilateNearBlur;

			[Token(Token = "0x4001BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static QualitySettings[] presetQualitySettings;
		}

		[Serializable]
		[Token(Token = "0x200048E")]
		public struct FocusSettings
		{
			[Token(Token = "0x4001BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F91B0", Offset = "0x16F91B0")]
			public Transform transform;

			[Token(Token = "0x4001BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F91E8", Offset = "0x16F91E8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F91E8", Offset = "0x16F91E8")]
			public float focusPlane;

			[Token(Token = "0x4001BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F9238", Offset = "0x16F9238")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9238", Offset = "0x16F9238")]
			public float range;

			[Token(Token = "0x4001BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F928C", Offset = "0x16F928C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F928C", Offset = "0x16F928C")]
			public float nearPlane;

			[Token(Token = "0x4001BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F92DC", Offset = "0x16F92DC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F92DC", Offset = "0x16F92DC")]
			public float nearFalloff;

			[Token(Token = "0x4001BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F932C", Offset = "0x16F932C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F932C", Offset = "0x16F932C")]
			public float farPlane;

			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F937C", Offset = "0x16F937C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F937C", Offset = "0x16F937C")]
			public float farFalloff;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F93CC", Offset = "0x16F93CC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F93CC", Offset = "0x16F93CC")]
			public float nearBlurRadius;

			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9424", Offset = "0x16F9424")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9424", Offset = "0x16F9424")]
			public float farBlurRadius;

			[Token(Token = "0x1700045C")]
			public static FocusSettings defaultSettings
			{
				[Token(Token = "0x6001F76")]
				[Address(RVA = "0x3271594", Offset = "0x3271594", VA = "0x3271594")]
				get
				{
					return default(FocusSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x200048F")]
		public struct BokehTextureSettings
		{
			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F947C", Offset = "0x16F947C")]
			public Texture2D texture;

			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F94B4", Offset = "0x16F94B4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F94B4", Offset = "0x16F94B4")]
			public float scale;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F950C", Offset = "0x16F950C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F950C", Offset = "0x16F950C")]
			public float intensity;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9568", Offset = "0x16F9568")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9568", Offset = "0x16F9568")]
			public float threshold;

			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F95C0", Offset = "0x16F95C0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F95C0", Offset = "0x16F95C0")]
			public float spawnHeuristic;

			[Token(Token = "0x1700045D")]
			public static BokehTextureSettings defaultSettings
			{
				[Token(Token = "0x6001F77")]
				[Address(RVA = "0x32715F8", Offset = "0x32715F8", VA = "0x32715F8")]
				get
				{
					return default(BokehTextureSettings);
				}
			}
		}

		[Token(Token = "0x4000AE8")]
		private const float kMaxBlur = 40f;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GlobalSettings settings;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FocusSettings focus;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BokehTextureSettings bokehTexture;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Shader m_FilmicDepthOfFieldShader;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Shader m_MedianFilterShader;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Shader m_TextureBokehShader;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderTextureUtility m_RTU;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material m_FilmicDepthOfFieldMaterial;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material m_MedianFilterMaterial;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material m_TextureBokehMaterial;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ComputeBuffer m_ComputeBufferDrawArgs;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ComputeBuffer m_ComputeBufferPoints;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private QualitySettings m_CurrentQualitySettings;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_LastApertureOrientation;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector4 m_OctogonalBokehDirection1;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector4 m_OctogonalBokehDirection2;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector4 m_OctogonalBokehDirection3;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector4 m_OctogonalBokehDirection4;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector4 m_HexagonalBokehDirection1;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector4 m_HexagonalBokehDirection2;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector4 m_HexagonalBokehDirection3;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int m_BlurParams;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int m_BlurCoe;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int m_Offsets;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int m_BlurredColor;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int m_SpawnHeuristic;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int m_BokehParams;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int m_Convolved_TexelSize;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private int m_SecondTex;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int m_ThirdTex;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private int m_MainTex;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int m_Screen;

		[Token(Token = "0x17000159")]
		public Shader filmicDepthOfFieldShader
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x326E9D0", Offset = "0x326E9D0", VA = "0x326E9D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		public Shader medianFilterShader
		{
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0x326EA70", Offset = "0x326EA70", VA = "0x326EA70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		public Shader textureBokehShader
		{
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x326EB10", Offset = "0x326EB10", VA = "0x326EB10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		public Material filmicDepthOfFieldMaterial
		{
			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0x326EBB0", Offset = "0x326EBB0", VA = "0x326EBB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		public Material medianFilterMaterial
		{
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x326EC54", Offset = "0x326EC54", VA = "0x326EC54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		public Material textureBokehMaterial
		{
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x326ECF8", Offset = "0x326ECF8", VA = "0x326ECF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public ComputeBuffer computeBufferDrawArgs
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x326ED9C", Offset = "0x326ED9C", VA = "0x326ED9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		public ComputeBuffer computeBufferPoints
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x326EE74", Offset = "0x326EE74", VA = "0x326EE74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private bool shouldPerformBokeh
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x3270A08", Offset = "0x3270A08", VA = "0x3270A08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x326EEFC", Offset = "0x326EEFC", VA = "0x326EEFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x326F044", Offset = "0x326F044", VA = "0x326F044")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x326F4D0", Offset = "0x326F4D0", VA = "0x326F4D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x326F784", Offset = "0x326F784", VA = "0x326F784")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x326FC08", Offset = "0x326FC08", VA = "0x326FC08")]
		private void DoDepthOfField(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x3270E08", Offset = "0x3270E08", VA = "0x3270E08")]
		private void DoHexagonalBlur(RenderTexture blurredFgCoc, ref RenderTexture src, ref RenderTexture dst, float maxRadius)
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x3271094", Offset = "0x3271094", VA = "0x3271094")]
		private void DoOctogonalBlur(RenderTexture blurredFgCoc, ref RenderTexture src, ref RenderTexture dst, float maxRadius)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x3270CA8", Offset = "0x3270CA8", VA = "0x3270CA8")]
		private void DoCircularBlur(RenderTexture blurredFgCoc, ref RenderTexture src, ref RenderTexture dst, float maxRadius)
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x326F964", Offset = "0x326F964", VA = "0x326F964")]
		private void ComputeCocParameters(out Vector4 blurParams, out Vector4 blurCoe)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x326F680", Offset = "0x326F680", VA = "0x326F680")]
		private void ReleaseComputeResources()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x326F17C", Offset = "0x326F17C", VA = "0x326F17C")]
		private void ComputeBlurDirections(bool force)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x3271424", Offset = "0x3271424", VA = "0x3271424")]
		private static void Rotate2D(ref Vector4 direction, float cosinus, float sinus)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x3270AE8", Offset = "0x3270AE8", VA = "0x3270AE8")]
		private static void SwapRenderTexture(ref RenderTexture src, ref RenderTexture dst)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x327132C", Offset = "0x327132C", VA = "0x327132C")]
		private static void GetDirectionalBlurPassesFromRadius(RenderTexture blurredFgCoc, float maxRadius, out int blurPass, out int blurAndMergePass)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x3271448", Offset = "0x3271448", VA = "0x3271448")]
		public DepthOfField()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E69F8", Offset = "0x16E69F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E69F8", Offset = "0x16E69F8")]
	public class LensAberrations : MonoBehaviour
	{
		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E9778", Offset = "0x16E9778")]
		public class SettingsGroup : Attribute
		{
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x3272F7C", Offset = "0x3272F7C", VA = "0x3272F7C")]
			public SettingsGroup()
			{
			}
		}

		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E978C", Offset = "0x16E978C")]
		public class AdvancedSetting : Attribute
		{
			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x3272F74", Offset = "0x3272F74", VA = "0x3272F74")]
			public AdvancedSetting()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000492")]
		public struct DistortionSettings
		{
			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9618", Offset = "0x16F9618")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9618", Offset = "0x16F9618")]
			public float amount;

			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9674", Offset = "0x16F9674")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9674", Offset = "0x16F9674")]
			public float centerX;

			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F96C8", Offset = "0x16F96C8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F96C8", Offset = "0x16F96C8")]
			public float centerY;

			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F971C", Offset = "0x16F971C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F971C", Offset = "0x16F971C")]
			public float amountX;

			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9770", Offset = "0x16F9770")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9770", Offset = "0x16F9770")]
			public float amountY;

			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F97C4", Offset = "0x16F97C4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F97C4", Offset = "0x16F97C4")]
			public float scale;

			[Token(Token = "0x1700045E")]
			public static DistortionSettings defaultSettings
			{
				[Token(Token = "0x6001F7A")]
				[Address(RVA = "0x3272EA0", Offset = "0x3272EA0", VA = "0x3272EA0")]
				get
				{
					return default(DistortionSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000493")]
		public struct VignetteSettings
		{
			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x16F981C", Offset = "0x16F981C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F981C", Offset = "0x16F981C")]
			public Color color;

			[Token(Token = "0x4001C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F986C", Offset = "0x16F986C")]
			public Vector2 center;

			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F98A4", Offset = "0x16F98A4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F98A4", Offset = "0x16F98A4")]
			public float intensity;

			[Token(Token = "0x4001C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F98F8", Offset = "0x16F98F8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F98F8", Offset = "0x16F98F8")]
			public float smoothness;

			[Token(Token = "0x4001C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AdvancedSetting]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9950", Offset = "0x16F9950")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9950", Offset = "0x16F9950")]
			public float roundness;

			[Token(Token = "0x4001C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F99B4", Offset = "0x16F99B4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F99B4", Offset = "0x16F99B4")]
			public float blur;

			[Token(Token = "0x4001C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9A08", Offset = "0x16F9A08")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9A08", Offset = "0x16F9A08")]
			public float desaturate;

			[Token(Token = "0x1700045F")]
			public static VignetteSettings defaultSettings
			{
				[Token(Token = "0x6001F7B")]
				[Address(RVA = "0x3272EB8", Offset = "0x3272EB8", VA = "0x3272EB8")]
				get
				{
					return default(VignetteSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000494")]
		public struct ChromaticAberrationSettings
		{
			[Token(Token = "0x4001C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4001C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x16F9A5C", Offset = "0x16F9A5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9A5C", Offset = "0x16F9A5C")]
			public Color color;

			[Token(Token = "0x4001C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9AAC", Offset = "0x16F9AAC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9AAC", Offset = "0x16F9AAC")]
			public float amount;

			[Token(Token = "0x17000460")]
			public static ChromaticAberrationSettings defaultSettings
			{
				[Token(Token = "0x6001F7C")]
				[Address(RVA = "0x3272F40", Offset = "0x3272F40", VA = "0x3272F40")]
				get
				{
					return default(ChromaticAberrationSettings);
				}
			}
		}

		[Token(Token = "0x2000495")]
		private enum Pass
		{
			[Token(Token = "0x4001C16")]
			BlurPrePass,
			[Token(Token = "0x4001C17")]
			Chroma,
			[Token(Token = "0x4001C18")]
			Distort,
			[Token(Token = "0x4001C19")]
			Vignette,
			[Token(Token = "0x4001C1A")]
			ChromaDistort,
			[Token(Token = "0x4001C1B")]
			ChromaVignette,
			[Token(Token = "0x4001C1C")]
			DistortVignette,
			[Token(Token = "0x4001C1D")]
			ChromaDistortVignette
		}

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SettingsGroup]
		public DistortionSettings distortion;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SettingsGroup]
		public VignetteSettings vignette;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SettingsGroup]
		public ChromaticAberrationSettings chromaticAberration;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material m_Material;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RenderTextureUtility m_RTU;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_DistCenterScale;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_DistAmount;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_ChromaticAberration;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int m_VignetteColor;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_BlurPass;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int m_BlurTex;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_VignetteBlur;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int m_VignetteDesat;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_VignetteCenter;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_VignetteSettings;

		[Token(Token = "0x17000162")]
		public Shader shader
		{
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0x3272094", Offset = "0x3272094", VA = "0x3272094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		public Material material
		{
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0x3272134", Offset = "0x3272134", VA = "0x3272134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x32721D8", Offset = "0x32721D8", VA = "0x32721D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x3272308", Offset = "0x3272308", VA = "0x3272308")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x3272398", Offset = "0x3272398", VA = "0x3272398")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x3272460", Offset = "0x3272460", VA = "0x3272460")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x3272E2C", Offset = "0x3272E2C", VA = "0x3272E2C")]
		public LensAberrations()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6A90", Offset = "0x16E6A90")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6A90", Offset = "0x16E6A90")]
	public class MotionBlur : MonoBehaviour
	{
		[Token(Token = "0x2000496")]
		private class FrameBlendingFilter
		{
			[Token(Token = "0x2000615")]
			private struct Frame
			{
				[Token(Token = "0x40022C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public RenderTexture lumaTexture;

				[Token(Token = "0x40022C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public RenderTexture chromaTexture;

				[Token(Token = "0x40022C9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public float time;

				[Token(Token = "0x40022CA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private RenderBuffer[] _mrt;

				[Token(Token = "0x600244D")]
				[Address(RVA = "0x3274654", Offset = "0x3274654", VA = "0x3274654")]
				public float CalculateWeight(float strength, float currentTime)
				{
					return default(float);
				}

				[Token(Token = "0x600244E")]
				[Address(RVA = "0x32741D0", Offset = "0x32741D0", VA = "0x32741D0")]
				public void Release()
				{
				}

				[Token(Token = "0x600244F")]
				[Address(RVA = "0x32742B8", Offset = "0x32742B8", VA = "0x32742B8")]
				public void MakeRecord(RenderTexture source, Material material)
				{
				}

				[Token(Token = "0x6002450")]
				[Address(RVA = "0x32744DC", Offset = "0x32744DC", VA = "0x32744DC")]
				public void MakeRecordRaw(RenderTexture source, RenderTextureFormat format)
				{
				}
			}

			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool _useCompression;

			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private RenderTextureFormat _rawTextureFormat;

			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Material _material;

			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Frame[] _frameList;

			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _lastFrameCount;

			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int _History1LumaTex;

			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int _History2LumaTex;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int _History3LumaTex;

			[Token(Token = "0x4001C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int _History4LumaTex;

			[Token(Token = "0x4001C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int _History1ChromaTex;

			[Token(Token = "0x4001C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int _History2ChromaTex;

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int _History3ChromaTex;

			[Token(Token = "0x4001C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int _History4ChromaTex;

			[Token(Token = "0x4001C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int _History1Weight;

			[Token(Token = "0x4001C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int _History2Weight;

			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int _History3Weight;

			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int _History4Weight;

			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x3273160", Offset = "0x3273160", VA = "0x3273160")]
			public FrameBlendingFilter()
			{
			}

			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x3273360", Offset = "0x3273360", VA = "0x3273360")]
			public void Release()
			{
			}

			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x3273DFC", Offset = "0x3273DFC", VA = "0x3273DFC")]
			public void PushFrame(RenderTexture source)
			{
			}

			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x3273B70", Offset = "0x3273B70", VA = "0x3273B70")]
			public void BlendFrames(float strength, RenderTexture source, RenderTexture destination)
			{
			}

			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x3273F58", Offset = "0x3273F58", VA = "0x3273F58")]
			private static bool CheckSupportCompression()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F82")]
			[Address(RVA = "0x3273FA0", Offset = "0x3273FA0", VA = "0x3273FA0")]
			private static RenderTextureFormat GetPreferredRenderTextureFormat()
			{
				return default(RenderTextureFormat);
			}

			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x32745DC", Offset = "0x32745DC", VA = "0x32745DC")]
			private Frame GetFrameRelative(int offset)
			{
				return default(Frame);
			}

			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x3274070", Offset = "0x3274070", VA = "0x3274070")]
			private void FetchUniformLocations()
			{
			}
		}

		[Token(Token = "0x2000497")]
		private class ReconstructionFilter
		{
			[Token(Token = "0x4001C2F")]
			private const float kMaxBlurRadius = 5f;

			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Material _material;

			[Token(Token = "0x4001C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool _unroll;

			[Token(Token = "0x4001C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private RenderTextureFormat _vectorRTFormat;

			[Token(Token = "0x4001C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private RenderTextureFormat _packedRTFormat;

			[Token(Token = "0x4001C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int _VelocityScale;

			[Token(Token = "0x4001C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _MaxBlurRadius;

			[Token(Token = "0x4001C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int _TileMaxOffs;

			[Token(Token = "0x4001C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int _TileMaxLoop;

			[Token(Token = "0x4001C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int _LoopCount;

			[Token(Token = "0x4001C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int _NeighborMaxTex;

			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int _VelocityTex;

			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x3273054", Offset = "0x3273054", VA = "0x3273054")]
			public ReconstructionFilter()
			{
			}

			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x32732AC", Offset = "0x32732AC", VA = "0x32732AC")]
			public void Release()
			{
			}

			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x32736D0", Offset = "0x32736D0", VA = "0x32736D0")]
			public void ProcessImage(float shutterAngle, int sampleCount, RenderTexture source, RenderTexture destination)
			{
			}

			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x3274708", Offset = "0x3274708", VA = "0x3274708")]
			private bool CheckTextureFormatSupport()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x327483C", Offset = "0x327483C", VA = "0x327483C")]
			private RenderTexture GetTemporaryRT(Texture source, int divider, RenderTextureFormat format)
			{
				return null;
			}

			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x32748C4", Offset = "0x32748C4", VA = "0x32748C4")]
			private void ReleaseTemporaryRT(RenderTexture rt)
			{
			}

			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x3274754", Offset = "0x3274754", VA = "0x3274754")]
			private void FetchUniformLocations()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000498")]
		public class Settings
		{
			[Token(Token = "0x4001C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9B08", Offset = "0x16F9B08")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9B08", Offset = "0x16F9B08")]
			public float shutterAngle;

			[Token(Token = "0x4001C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9B70", Offset = "0x16F9B70")]
			public int sampleCount;

			[Token(Token = "0x4001C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9BBC", Offset = "0x16F9BBC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9BBC", Offset = "0x16F9BBC")]
			public float frameBlending;

			[Token(Token = "0x17000461")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F8C")]
				[Address(RVA = "0x3273EE4", Offset = "0x3273EE4", VA = "0x3273EE4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x32748D0", Offset = "0x32748D0", VA = "0x32748D0")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Settings _settings;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader _reconstructionShader;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader _frameBlendingShader;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReconstructionFilter _reconstructionFilter;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FrameBlendingFilter _frameBlendingFilter;

		[Token(Token = "0x17000164")]
		public Settings settings
		{
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x3272FB8", Offset = "0x3272FB8", VA = "0x3272FB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x3272FC0", Offset = "0x3272FC0", VA = "0x3272FC0")]
			set
			{
			}
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x3272FC8", Offset = "0x3272FC8", VA = "0x3272FC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x3273254", Offset = "0x3273254", VA = "0x3273254")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x3273464", Offset = "0x3273464", VA = "0x3273464")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x32734FC", Offset = "0x32734FC", VA = "0x32734FC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x3273EAC", Offset = "0x3273EAC", VA = "0x3273EAC")]
		public MotionBlur()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	[ExecuteInEditMode]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6B18", Offset = "0x16E6B18")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6B18", Offset = "0x16E6B18")]
	public class TemporalAntiAliasing : MonoBehaviour
	{
		[Token(Token = "0x2000499")]
		public enum Sequence
		{
			[Token(Token = "0x4001C3F")]
			Halton
		}

		[Serializable]
		[Token(Token = "0x200049A")]
		public struct JitterSettings
		{
			[Token(Token = "0x4001C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9C20", Offset = "0x16F9C20")]
			public Sequence sequence;

			[Token(Token = "0x4001C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9C58", Offset = "0x16F9C58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9C58", Offset = "0x16F9C58")]
			public float spread;

			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9CB0", Offset = "0x16F9CB0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9CB0", Offset = "0x16F9CB0")]
			public int sampleCount;
		}

		[Serializable]
		[Token(Token = "0x200049B")]
		public struct SharpenFilterSettings
		{
			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9D08", Offset = "0x16F9D08")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9D08", Offset = "0x16F9D08")]
			public float amount;
		}

		[Serializable]
		[Token(Token = "0x200049C")]
		public struct BlendSettings
		{
			[Token(Token = "0x4001C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9D5C", Offset = "0x16F9D5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9D5C", Offset = "0x16F9D5C")]
			public float stationary;

			[Token(Token = "0x4001C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9DB4", Offset = "0x16F9DB4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9DB4", Offset = "0x16F9DB4")]
			public float moving;

			[Token(Token = "0x4001C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9E0C", Offset = "0x16F9E0C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F9E0C", Offset = "0x16F9E0C")]
			public float motionAmplification;
		}

		[Serializable]
		[Token(Token = "0x200049D")]
		public struct DebugSettings
		{
			[Token(Token = "0x4001C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9E64", Offset = "0x16F9E64")]
			public bool forceRepaint;
		}

		[Serializable]
		[Token(Token = "0x200049E")]
		public class Settings
		{
			[Token(Token = "0x2000616")]
			[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16EA118", Offset = "0x16EA118")]
			public class LayoutAttribute : PropertyAttribute
			{
				[Token(Token = "0x6002451")]
				[Address(RVA = "0x3276D24", Offset = "0x3276D24", VA = "0x3276D24")]
				public LayoutAttribute()
				{
				}
			}

			[Token(Token = "0x4001C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Layout]
			public JitterSettings jitterSettings;

			[Token(Token = "0x4001C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Layout]
			public SharpenFilterSettings sharpenFilterSettings;

			[Token(Token = "0x4001C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Layout]
			public BlendSettings blendSettings;

			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[Layout]
			public DebugSettings debugSettings;

			[Token(Token = "0x17000462")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6001F8E")]
				[Address(RVA = "0x3276C98", Offset = "0x3276C98", VA = "0x3276C98")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x3276D1C", Offset = "0x3276D1C", VA = "0x3276D1C")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Shader m_Shader;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material m_Material;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera m_Camera;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture m_History;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_SampleIndex;

		[Token(Token = "0x17000165")]
		public Shader shader
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x32758F8", Offset = "0x32758F8", VA = "0x32758F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		public Material material
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x3275998", Offset = "0x3275998", VA = "0x3275998")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		public Camera camera_
		{
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x3275AC8", Offset = "0x3275AC8", VA = "0x3275AC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x3275B74", Offset = "0x3275B74", VA = "0x3275B74")]
		private void RenderFullScreenQuad(int pass)
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x3275C7C", Offset = "0x3275C7C", VA = "0x3275C7C")]
		private float GetHaltonValue(int index, int radix)
		{
			return default(float);
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x3275CC0", Offset = "0x3275CC0", VA = "0x3275CC0")]
		private Vector2 GenerateRandomOffset()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x3275D98", Offset = "0x3275D98", VA = "0x3275D98")]
		private Matrix4x4 GetPerspectiveProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x3276214", Offset = "0x3276214", VA = "0x3276214")]
		private Matrix4x4 GetOrthographicProjectionMatrix(Vector2 offset)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x3276390", Offset = "0x3276390", VA = "0x3276390")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x32763D8", Offset = "0x32763D8", VA = "0x32763D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x32764A8", Offset = "0x32764A8", VA = "0x32764A8")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x32766D8", Offset = "0x32766D8", VA = "0x32766D8")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x3276C40", Offset = "0x3276C40", VA = "0x3276C40")]
		public void OnPostRender()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x3276C60", Offset = "0x3276C60", VA = "0x3276C60")]
		public TemporalAntiAliasing()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6BC0", Offset = "0x16E6BC0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6BC0", Offset = "0x16E6BC0")]
	[ImageEffectAllowedInSceneView]
	public class TonemappingColorGrading : MonoBehaviour
	{
		[Token(Token = "0x200049F")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E97A0", Offset = "0x16E97A0")]
		public class SettingsGroup : Attribute
		{
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x2374150", Offset = "0x2374150", VA = "0x2374150")]
			public SettingsGroup()
			{
			}
		}

		[Token(Token = "0x20004A0")]
		public class IndentedGroup : PropertyAttribute
		{
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x23740F8", Offset = "0x23740F8", VA = "0x23740F8")]
			public IndentedGroup()
			{
			}
		}

		[Token(Token = "0x20004A1")]
		public class ChannelMixer : PropertyAttribute
		{
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x2373B24", Offset = "0x2373B24", VA = "0x2373B24")]
			public ChannelMixer()
			{
			}
		}

		[Token(Token = "0x20004A2")]
		public class ColorWheelGroup : PropertyAttribute
		{
			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int minSizePerWheel;

			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int maxSizePerWheel;

			[Token(Token = "0x6001F93")]
			[Address(RVA = "0x2373E8C", Offset = "0x2373E8C", VA = "0x2373E8C")]
			public ColorWheelGroup()
			{
			}

			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x2373EA0", Offset = "0x2373EA0", VA = "0x2373EA0")]
			public ColorWheelGroup(int minSizePerWheel, int maxSizePerWheel)
			{
			}
		}

		[Token(Token = "0x20004A3")]
		public class Curve : PropertyAttribute
		{
			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Color color;

			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x2373EE4", Offset = "0x2373EE4", VA = "0x2373EE4")]
			public Curve()
			{
			}

			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x2373F18", Offset = "0x2373F18", VA = "0x2373F18")]
			public Curve(float r, float g, float b, float a)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A4")]
		public struct EyeAdaptationSettings
		{
			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F9EDC", Offset = "0x16F9EDC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9EDC", Offset = "0x16F9EDC")]
			public float middleGrey;

			[Token(Token = "0x4001C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9F2C", Offset = "0x16F9F2C")]
			public float min;

			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9F64", Offset = "0x16F9F64")]
			public float max;

			[Token(Token = "0x4001C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16F9F9C", Offset = "0x16F9F9C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9F9C", Offset = "0x16F9F9C")]
			public float speed;

			[Token(Token = "0x4001C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F9FEC", Offset = "0x16F9FEC")]
			public bool showDebug;

			[Token(Token = "0x17000463")]
			public static EyeAdaptationSettings defaultSettings
			{
				[Token(Token = "0x6001F97")]
				[Address(RVA = "0x23740D8", Offset = "0x23740D8", VA = "0x23740D8")]
				get
				{
					return default(EyeAdaptationSettings);
				}
			}
		}

		[Token(Token = "0x20004A5")]
		public enum Tonemapper
		{
			[Token(Token = "0x4001C56")]
			ACES,
			[Token(Token = "0x4001C57")]
			Curve,
			[Token(Token = "0x4001C58")]
			Hable,
			[Token(Token = "0x4001C59")]
			HejlDawson,
			[Token(Token = "0x4001C5A")]
			Photographic,
			[Token(Token = "0x4001C5B")]
			Reinhard,
			[Token(Token = "0x4001C5C")]
			Neutral
		}

		[Serializable]
		[Token(Token = "0x20004A6")]
		public struct TonemappingSettings
		{
			[Token(Token = "0x4001C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4001C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA024", Offset = "0x16FA024")]
			public Tonemapper tonemapper;

			[Token(Token = "0x4001C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x16FA05C", Offset = "0x16FA05C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA05C", Offset = "0x16FA05C")]
			public float exposure;

			[Token(Token = "0x4001C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA0AC", Offset = "0x16FA0AC")]
			public AnimationCurve curve;

			[Token(Token = "0x4001C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA0E4", Offset = "0x16FA0E4")]
			public float neutralBlackIn;

			[Token(Token = "0x4001C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA104", Offset = "0x16FA104")]
			public float neutralWhiteIn;

			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA11C", Offset = "0x16FA11C")]
			public float neutralBlackOut;

			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA13C", Offset = "0x16FA13C")]
			public float neutralWhiteOut;

			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA154", Offset = "0x16FA154")]
			public float neutralWhiteLevel;

			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA170", Offset = "0x16FA170")]
			public float neutralWhiteClip;

			[Token(Token = "0x17000464")]
			public static TonemappingSettings defaultSettings
			{
				[Token(Token = "0x6001F98")]
				[Address(RVA = "0x2374158", Offset = "0x2374158", VA = "0x2374158")]
				get
				{
					return default(TonemappingSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004A7")]
		public struct LUTSettings
		{
			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA188", Offset = "0x16FA188")]
			public Texture texture;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA1C0", Offset = "0x16FA1C0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA1C0", Offset = "0x16FA1C0")]
			public float contribution;

			[Token(Token = "0x17000465")]
			public static LUTSettings defaultSettings
			{
				[Token(Token = "0x6001F99")]
				[Address(RVA = "0x2374100", Offset = "0x2374100", VA = "0x2374100")]
				get
				{
					return default(LUTSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004A8")]
		public struct ColorWheelsSettings
		{
			[Token(Token = "0x4001C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x16FA214", Offset = "0x16FA214")]
			public Color shadows;

			[Token(Token = "0x4001C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x16FA228", Offset = "0x16FA228")]
			public Color midtones;

			[Token(Token = "0x4001C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x16FA23C", Offset = "0x16FA23C")]
			public Color highlights;

			[Token(Token = "0x17000466")]
			public static ColorWheelsSettings defaultSettings
			{
				[Token(Token = "0x6001F9A")]
				[Address(RVA = "0x2373D34", Offset = "0x2373D34", VA = "0x2373D34")]
				get
				{
					return default(ColorWheelsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004A9")]
		public struct BasicsSettings
		{
			[Token(Token = "0x4001C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA250", Offset = "0x16FA250")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA250", Offset = "0x16FA250")]
			public float temperatureShift;

			[Token(Token = "0x4001C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA2A4", Offset = "0x16FA2A4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA2A4", Offset = "0x16FA2A4")]
			public float tint;

			[Token(Token = "0x4001C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16FA2F8", Offset = "0x16FA2F8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA2F8", Offset = "0x16FA2F8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA2F8", Offset = "0x16FA2F8")]
			public float hue;

			[Token(Token = "0x4001C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA35C", Offset = "0x16FA35C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA35C", Offset = "0x16FA35C")]
			public float saturation;

			[Token(Token = "0x4001C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA3B0", Offset = "0x16FA3B0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA3B0", Offset = "0x16FA3B0")]
			public float vibrance;

			[Token(Token = "0x4001C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA404", Offset = "0x16FA404")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA404", Offset = "0x16FA404")]
			public float value;

			[Token(Token = "0x4001C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16FA458", Offset = "0x16FA458")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA458", Offset = "0x16FA458")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA458", Offset = "0x16FA458")]
			public float contrast;

			[Token(Token = "0x4001C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA4BC", Offset = "0x16FA4BC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA4BC", Offset = "0x16FA4BC")]
			public float gain;

			[Token(Token = "0x4001C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FA514", Offset = "0x16FA514")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA514", Offset = "0x16FA514")]
			public float gamma;

			[Token(Token = "0x17000467")]
			public static BasicsSettings defaultSettings
			{
				[Token(Token = "0x6001F9B")]
				[Address(RVA = "0x2373B04", Offset = "0x2373B04", VA = "0x2373B04")]
				get
				{
					return default(BasicsSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004AA")]
		public struct ChannelMixerSettings
		{
			[Token(Token = "0x4001C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int currentChannel;

			[Token(Token = "0x4001C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UnityEngine.Vector3[] channels;

			[Token(Token = "0x17000468")]
			public static ChannelMixerSettings defaultSettings
			{
				[Token(Token = "0x6001F9C")]
				[Address(RVA = "0x2373B2C", Offset = "0x2373B2C", VA = "0x2373B2C")]
				get
				{
					return default(ChannelMixerSettings);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x20004AB")]
		public struct CurvesSettings
		{
			[Token(Token = "0x4001C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "Curve", RVA = "0x16FA56C", Offset = "0x16FA56C")]
			public AnimationCurve master;

			[Token(Token = "0x4001C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "Curve", RVA = "0x16FA57C", Offset = "0x16FA57C")]
			public AnimationCurve red;

			[Token(Token = "0x4001C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "Curve", RVA = "0x16FA59C", Offset = "0x16FA59C")]
			public AnimationCurve green;

			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "Curve", RVA = "0x16FA5BC", Offset = "0x16FA5BC")]
			public AnimationCurve blue;

			[Token(Token = "0x17000469")]
			public static CurvesSettings defaultSettings
			{
				[Token(Token = "0x6001F9D")]
				[Address(RVA = "0x2373DC0", Offset = "0x2373DC0", VA = "0x2373DC0")]
				get
				{
					return default(CurvesSettings);
				}
			}

			[Token(Token = "0x1700046A")]
			public static AnimationCurve defaultCurve
			{
				[Token(Token = "0x6001F9E")]
				[Address(RVA = "0x2373FA0", Offset = "0x2373FA0", VA = "0x2373FA0")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x20004AC")]
		public enum ColorGradingPrecision
		{
			[Token(Token = "0x4001C7D")]
			Normal = 0x10,
			[Token(Token = "0x4001C7E")]
			High = 0x20
		}

		[Serializable]
		[Token(Token = "0x20004AD")]
		public struct ColorGradingSettings
		{
			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA5DC", Offset = "0x16FA5DC")]
			public ColorGradingPrecision precision;

			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16FA614", Offset = "0x16FA614")]
			[AttributeAttribute(Name = "ColorWheelGroup", RVA = "0x16FA614", Offset = "0x16FA614")]
			public ColorWheelsSettings colorWheels;

			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16FA64C", Offset = "0x16FA64C")]
			[IndentedGroup]
			public BasicsSettings basics;

			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16FA684", Offset = "0x16FA684")]
			[ChannelMixer]
			public ChannelMixerSettings channelMixer;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16FA6BC", Offset = "0x16FA6BC")]
			[IndentedGroup]
			public CurvesSettings curves;

			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16FA6F4", Offset = "0x16FA6F4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA6F4", Offset = "0x16FA6F4")]
			public bool useDithering;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FA740", Offset = "0x16FA740")]
			public bool showDebug;

			[Token(Token = "0x1700046B")]
			public static ColorGradingSettings defaultSettings
			{
				[Token(Token = "0x6001F9F")]
				[Address(RVA = "0x2373C68", Offset = "0x2373C68", VA = "0x2373C68")]
				get
				{
					return default(ColorGradingSettings);
				}
			}

			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x2373E50", Offset = "0x2373E50", VA = "0x2373E50")]
			internal void Reset()
			{
			}
		}

		[Token(Token = "0x20004AE")]
		private enum Pass
		{
			[Token(Token = "0x4001C88")]
			LutGen,
			[Token(Token = "0x4001C89")]
			AdaptationLog,
			[Token(Token = "0x4001C8A")]
			AdaptationExpBlend,
			[Token(Token = "0x4001C8B")]
			AdaptationExp,
			[Token(Token = "0x4001C8C")]
			TonemappingOff,
			[Token(Token = "0x4001C8D")]
			TonemappingACES,
			[Token(Token = "0x4001C8E")]
			TonemappingCurve,
			[Token(Token = "0x4001C8F")]
			TonemappingHable,
			[Token(Token = "0x4001C90")]
			TonemappingHejlDawson,
			[Token(Token = "0x4001C91")]
			TonemappingPhotographic,
			[Token(Token = "0x4001C92")]
			TonemappingReinhard,
			[Token(Token = "0x4001C93")]
			TonemappingNeutral,
			[Token(Token = "0x4001C94")]
			AdaptationDebug
		}

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[SettingsGroup]
		private EyeAdaptationSettings m_EyeAdaptation;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[SettingsGroup]
		private TonemappingSettings m_Tonemapping;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[SettingsGroup]
		private ColorGradingSettings m_ColorGrading;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[SettingsGroup]
		private LUTSettings m_Lut;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Texture2D m_IdentityLut;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RenderTexture m_InternalLut;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Texture2D m_CurveTexture;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Texture2D m_TonemapperCurve;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float m_TonemapperCurveRange;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Material m_Material;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EE34C", Offset = "0x16EE34C")]
		private bool <validRenderTextureFormat>k__BackingField;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EE35C", Offset = "0x16EE35C")]
		private bool <validUserLutSize>k__BackingField;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
		private bool m_Dirty;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14B")]
		private bool m_TonemapperDirty;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private RenderTexture m_SmallAdaptiveRt;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private RenderTextureFormat m_AdaptiveRtFormat;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private int m_AdaptationSpeed;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int m_MiddleGrey;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int m_AdaptationMin;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int m_AdaptationMax;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int m_LumTex;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private int m_ToneCurveRange;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private int m_ToneCurve;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int m_Exposure;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private int m_NeutralTonemapperParams1;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int m_NeutralTonemapperParams2;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private int m_WhiteBalance;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private int m_Lift;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private int m_Gamma;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private int m_Gain;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private int m_ContrastGainGamma;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private int m_Vibrance;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private int m_HSV;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int m_ChannelMixerRed;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private int m_ChannelMixerGreen;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private int m_ChannelMixerBlue;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private int m_CurveTex;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private int m_InternalLutTex;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private int m_InternalLutParams;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private int m_UserLutTex;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private int m_UserLutParams;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private RenderTexture[] m_AdaptRts;

		[Token(Token = "0x17000168")]
		public EyeAdaptationSettings eyeAdaptation
		{
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0x3276D2C", Offset = "0x3276D2C", VA = "0x3276D2C")]
			get
			{
				return default(EyeAdaptationSettings);
			}
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x3276D40", Offset = "0x3276D40", VA = "0x3276D40")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public TonemappingSettings tonemapping
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x3276D54", Offset = "0x3276D54", VA = "0x3276D54")]
			get
			{
				return default(TonemappingSettings);
			}
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x3276D68", Offset = "0x3276D68", VA = "0x3276D68")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public ColorGradingSettings colorGrading
		{
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0x3276DB4", Offset = "0x3276DB4", VA = "0x3276DB4")]
			get
			{
				return default(ColorGradingSettings);
			}
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x3276DC4", Offset = "0x3276DC4", VA = "0x3276DC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public LUTSettings lut
		{
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x3276E0C", Offset = "0x3276E0C", VA = "0x3276E0C")]
			get
			{
				return default(LUTSettings);
			}
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x3276E20", Offset = "0x3276E20", VA = "0x3276E20")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		private Texture2D identityLut
		{
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0x3276E40", Offset = "0x3276E40", VA = "0x3276E40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private RenderTexture internalLutRt
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x327714C", Offset = "0x327714C", VA = "0x327714C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		private Texture2D curveTexture
		{
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x32772C0", Offset = "0x32772C0", VA = "0x32772C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private Texture2D tonemapperCurve
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x32773E0", Offset = "0x32773E0", VA = "0x32773E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public Shader shader
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x3277538", Offset = "0x3277538", VA = "0x3277538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public Material material
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x32775DC", Offset = "0x32775DC", VA = "0x32775DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public bool isGammaColorSpace
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0x3277680", Offset = "0x3277680", VA = "0x3277680")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000173")]
		public int lutSize
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0x3276F2C", Offset = "0x3276F2C", VA = "0x3276F2C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000174")]
		public bool validRenderTextureFormat
		{
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0x32776A0", Offset = "0x32776A0", VA = "0x32776A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17013E8", Offset = "0x17013E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0x32776A8", Offset = "0x32776A8", VA = "0x32776A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17013F8", Offset = "0x17013F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public bool validUserLutSize
		{
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0x32776B4", Offset = "0x32776B4", VA = "0x32776B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701408", Offset = "0x1701408")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0x32776BC", Offset = "0x32776BC", VA = "0x32776BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701418", Offset = "0x1701418")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x3276E00", Offset = "0x3276E00", VA = "0x3276E00")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x3276DA8", Offset = "0x3276DA8", VA = "0x3276DA8")]
		public void SetTonemapperDirty()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x32776C8", Offset = "0x32776C8", VA = "0x32776C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x3277960", Offset = "0x3277960", VA = "0x3277960")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x32779B4", Offset = "0x32779B4", VA = "0x32779B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x3277CA4", Offset = "0x3277CA4", VA = "0x3277CA4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x3276F34", Offset = "0x3276F34", VA = "0x3276F34")]
		private static Texture2D GenerateIdentityLut(int dim)
		{
			return null;
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x3277CB0", Offset = "0x3277CB0", VA = "0x3277CB0")]
		private float StandardIlluminantY(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x3277CDC", Offset = "0x3277CDC", VA = "0x3277CDC")]
		private UnityEngine.Vector3 CIExyToLMS(float x, float y)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x3277D9C", Offset = "0x3277D9C", VA = "0x3277D9C")]
		private UnityEngine.Vector3 GetWhiteBalance()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x3277E84", Offset = "0x3277E84", VA = "0x3277E84")]
		private static Color NormalizeColor(Color c)
		{
			return default(Color);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x3277F74", Offset = "0x3277F74", VA = "0x3277F74")]
		private void GenerateLiftGammaGain(out Color lift, out Color gamma, out Color gain)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x32781DC", Offset = "0x32781DC", VA = "0x32781DC")]
		private void GenCurveTexture()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x3278400", Offset = "0x3278400", VA = "0x3278400")]
		private bool CheckUserLut()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x32784E4", Offset = "0x32784E4", VA = "0x32784E4")]
		private bool CheckSmallAdaptiveRt()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x32785F0", Offset = "0x32785F0", VA = "0x32785F0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x32787E0", Offset = "0x32787E0", VA = "0x32787E0")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x3279768", Offset = "0x3279768", VA = "0x3279768")]
		public Texture2D BakeLUT()
		{
			return null;
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x32798AC", Offset = "0x32798AC", VA = "0x32798AC")]
		public TonemappingColorGrading()
		{
		}
	}
}
namespace Dreamteck
{
	[Token(Token = "0x20001B8")]
	public static class DMath
	{
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x232FDD8", Offset = "0x232FDD8", VA = "0x232FDD8")]
		public static double Sin(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x232FE44", Offset = "0x232FE44", VA = "0x232FE44")]
		public static double Cos(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x232FEB0", Offset = "0x232FEB0", VA = "0x232FEB0")]
		public static double Tan(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x232FF1C", Offset = "0x232FF1C", VA = "0x232FF1C")]
		public static double Pow(double x, double y)
		{
			return default(double);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x232FF94", Offset = "0x232FF94", VA = "0x232FF94")]
		public static double Log(double a, double newBase)
		{
			return default(double);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x233000C", Offset = "0x233000C", VA = "0x233000C")]
		public static double Log10(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x2330078", Offset = "0x2330078", VA = "0x2330078")]
		public static double Clamp01(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x2330098", Offset = "0x2330098", VA = "0x2330098")]
		public static double Clamp(double a, double min, double max)
		{
			return default(double);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x23300B4", Offset = "0x23300B4", VA = "0x23300B4")]
		public static double Lerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x23300D8", Offset = "0x23300D8", VA = "0x23300D8")]
		public static double InverseLerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x233010C", Offset = "0x233010C", VA = "0x233010C")]
		public static UnityEngine.Vector3 LerpVector3(UnityEngine.Vector3 a, UnityEngine.Vector3 b, double t)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x2330238", Offset = "0x2330238", VA = "0x2330238")]
		public static double Round(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x2330310", Offset = "0x2330310", VA = "0x2330310")]
		public static int RoundInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x2330400", Offset = "0x2330400", VA = "0x2330400")]
		public static double Ceil(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x233046C", Offset = "0x233046C", VA = "0x233046C")]
		public static int CeilInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x23304F0", Offset = "0x23304F0", VA = "0x23304F0")]
		public static double Floor(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x233055C", Offset = "0x233055C", VA = "0x233055C")]
		public static int FloorInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x23305E0", Offset = "0x23305E0", VA = "0x23305E0")]
		public static double Move(double current, double target, double amount)
		{
			return default(double);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x2330610", Offset = "0x2330610", VA = "0x2330610")]
		public static double Abs(double a)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20001B9")]
	public static class LinearAlgebraUtility
	{
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x2330620", Offset = "0x2330620", VA = "0x2330620")]
		public static UnityEngine.Vector3 ProjectOnLine(UnityEngine.Vector3 fromPoint, UnityEngine.Vector3 toPoint, UnityEngine.Vector3 project)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x2330834", Offset = "0x2330834", VA = "0x2330834")]
		public static float InverseLerp(UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 value)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001BA")]
	public class MeshUtility
	{
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UnityEngine.Vector3[] tan1;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static UnityEngine.Vector3[] tan2;

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x2330964", Offset = "0x2330964", VA = "0x2330964")]
		public static int[] GeneratePlaneTriangles(int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0)
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x2330A28", Offset = "0x2330A28", VA = "0x2330A28")]
		public static int[] GeneratePlaneTriangles(ref int[] triangles, int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0, bool reallocateArray = false)
		{
			return null;
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x2330D3C", Offset = "0x2330D3C", VA = "0x2330D3C")]
		public static void CalculateTangents(TS_Mesh mesh)
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x2331550", Offset = "0x2331550", VA = "0x2331550")]
		public static void MakeDoublesided(Mesh input)
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x2331FC4", Offset = "0x2331FC4", VA = "0x2331FC4")]
		public static void MakeDoublesided(TS_Mesh input)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x233291C", Offset = "0x233291C", VA = "0x233291C")]
		public static void MakeDoublesidedHalf(TS_Mesh input)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x2332F2C", Offset = "0x2332F2C", VA = "0x2332F2C")]
		public static void InverseTransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x233301C", Offset = "0x233301C", VA = "0x233301C")]
		public static void TransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x233310C", Offset = "0x233310C", VA = "0x233310C")]
		public static void InverseTransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x23331FC", Offset = "0x23331FC", VA = "0x23331FC")]
		public static void TransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x23332EC", Offset = "0x23332EC", VA = "0x23332EC")]
		public static void InverseTransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x2333440", Offset = "0x2333440", VA = "0x2333440")]
		public static void TransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x23335D8", Offset = "0x23335D8", VA = "0x23335D8")]
		public static void TransformVertices(UnityEngine.Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x233366C", Offset = "0x233366C", VA = "0x233366C")]
		public static void InverseTransformVertices(UnityEngine.Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x2333700", Offset = "0x2333700", VA = "0x2333700")]
		public static void TransformNormals(UnityEngine.Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x2333794", Offset = "0x2333794", VA = "0x2333794")]
		public static void InverseTransformNormals(UnityEngine.Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x2333828", Offset = "0x2333828", VA = "0x2333828")]
		public static string ToOBJString(Mesh mesh, Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x2334184", Offset = "0x2334184", VA = "0x2334184")]
		public static Mesh Copy(Mesh input)
		{
			return null;
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x2334380", Offset = "0x2334380", VA = "0x2334380")]
		public static void Triangulate(Vector2[] points, ref int[] output)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x23349F0", Offset = "0x23349F0", VA = "0x23349F0")]
		public static void FlipTriangles(ref int[] triangles)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x2334A78", Offset = "0x2334A78", VA = "0x2334A78")]
		public static void FlipFaces(TS_Mesh input)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x2334C10", Offset = "0x2334C10", VA = "0x2334C10")]
		public static void BreakMesh(Mesh input, bool keepNormals = true)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x2334738", Offset = "0x2334738", VA = "0x2334738")]
		private static float Area(Vector2[] points, int maxCount)
		{
			return default(float);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x23347D0", Offset = "0x23347D0", VA = "0x23347D0")]
		private static bool Snip(Vector2[] points, int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x23355F8", Offset = "0x23355F8", VA = "0x23355F8")]
		private static bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x2335674", Offset = "0x2335674", VA = "0x2335674")]
		public MeshUtility()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public static class ResourceUtility
	{
		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x233570C", Offset = "0x233570C", VA = "0x233570C")]
		public static string FindFolder(string dir, string folderPattern)
		{
			return null;
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x2335B14", Offset = "0x2335B14", VA = "0x2335B14")]
		public static Texture2D LoadTexture(string dreamteckPath, string textureFileName)
		{
			return null;
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x2335C78", Offset = "0x2335C78", VA = "0x2335C78")]
		public static Texture2D LoadTexture(string path)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BC")]
	public static class SceneUtility
	{
		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x2335D6C", Offset = "0x2335D6C", VA = "0x2335D6C")]
		public static void GetChildrenRecursively(Transform current, ref List<Transform> transformList)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BD")]
	public class TS_Bounds
	{
		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Vector3 center;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEngine.Vector3 extents;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 max;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public UnityEngine.Vector3 min;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.Vector3 size;

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x2F6B5B8", Offset = "0x2F6B5B8", VA = "0x2F6B5B8")]
		public TS_Bounds()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x2F6B670", Offset = "0x2F6B670", VA = "0x2F6B670")]
		public TS_Bounds(Bounds bounds)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x2F6B79C", Offset = "0x2F6B79C", VA = "0x2F6B79C")]
		public TS_Bounds(UnityEngine.Vector3 c, UnityEngine.Vector3 s)
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x2F6B904", Offset = "0x2F6B904", VA = "0x2F6B904")]
		public TS_Bounds(UnityEngine.Vector3 min, UnityEngine.Vector3 max, UnityEngine.Vector3 center)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x2F6BA64", Offset = "0x2F6BA64", VA = "0x2F6BA64")]
		public void CreateFromMinMax(UnityEngine.Vector3 min, UnityEngine.Vector3 max)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x2F6BB74", Offset = "0x2F6BB74", VA = "0x2F6BB74")]
		public bool Contains(UnityEngine.Vector3 point)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001BE")]
	public class TS_Mesh
	{
		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Vector3[] vertices;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector3[] normals;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4[] tangents;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] colors;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] uv;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2[] uv2;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2[] uv3;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2[] uv4;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] triangles;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int[]> subMeshes;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TS_Bounds bounds;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool hasUpdate;

		[Token(Token = "0x17000176")]
		public int vertexCount
		{
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x2F6BBC8", Offset = "0x2F6BBC8", VA = "0x2F6BBC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x2F6BBE4", Offset = "0x2F6BBE4", VA = "0x2F6BBE4")]
			set
			{
			}
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x2F6BBE8", Offset = "0x2F6BBE8", VA = "0x2F6BBE8")]
		public TS_Mesh()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x2F6BE34", Offset = "0x2F6BE34", VA = "0x2F6BE34")]
		public TS_Mesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x2F6C2A0", Offset = "0x2F6C2A0", VA = "0x2F6C2A0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x2F6C090", Offset = "0x2F6C090", VA = "0x2F6C090")]
		public void CreateFromMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x2F6C4E0", Offset = "0x2F6C4E0", VA = "0x2F6C4E0")]
		public void Combine(List<TS_Mesh> newMeshes, bool overwrite = false)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x2F6DA8C", Offset = "0x2F6DA8C", VA = "0x2F6DA8C")]
		public void Combine(TS_Mesh newMesh)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x2F6E1F8", Offset = "0x2F6E1F8", VA = "0x2F6E1F8")]
		public static TS_Mesh Copy(TS_Mesh input)
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x2F6E65C", Offset = "0x2F6E65C", VA = "0x2F6E65C")]
		public void Absorb(TS_Mesh input)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x2F6ED08", Offset = "0x2F6ED08", VA = "0x2F6ED08")]
		public void WriteMesh(ref Mesh input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BF")]
	public class TS_Transform
	{
		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool setPosition;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool setRotation;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool setScale;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool setLocalPosition;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool setLocalRotation;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Transform _transform;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private float posX;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private float posY;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private float posZ;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[HideInInspector]
		private float scaleX;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private float scaleY;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		private float scaleZ;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleX;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleY;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleZ;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[HideInInspector]
		private float rotX;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private float rotY;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[HideInInspector]
		private float rotZ;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private float rotW;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private float lposX;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private float lposY;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[HideInInspector]
		private float lposZ;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private float lrotX;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[HideInInspector]
		private float lrotY;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private float lrotZ;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[HideInInspector]
		private float lrotW;

		[Token(Token = "0x17000177")]
		public UnityEngine.Vector3 position
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x2F6EFE4", Offset = "0x2F6EFE4", VA = "0x2F6EFE4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0x2F6F058", Offset = "0x2F6F058", VA = "0x2F6F058")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0x2F6F0B4", Offset = "0x2F6F0B4", VA = "0x2F6F0B4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0x2F6F130", Offset = "0x2F6F130", VA = "0x2F6F130")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public UnityEngine.Vector3 scale
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0x2F6F198", Offset = "0x2F6F198", VA = "0x2F6F198")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0x2F6F20C", Offset = "0x2F6F20C", VA = "0x2F6F20C")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public UnityEngine.Vector3 lossyScale
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x2F6F264", Offset = "0x2F6F264", VA = "0x2F6F264")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x2F6F2D8", Offset = "0x2F6F2D8", VA = "0x2F6F2D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public UnityEngine.Vector3 localPosition
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0x2F6F330", Offset = "0x2F6F330", VA = "0x2F6F330")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0x2F6F3A4", Offset = "0x2F6F3A4", VA = "0x2F6F3A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public Quaternion localRotation
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0x2F6F400", Offset = "0x2F6F400", VA = "0x2F6F400")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x2F6F47C", Offset = "0x2F6F47C", VA = "0x2F6F47C")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public Transform transform
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x2F6F4E4", Offset = "0x2F6F4E4", VA = "0x2F6F4E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x2F6F4EC", Offset = "0x2F6F4EC", VA = "0x2F6F4EC")]
		public TS_Transform(Transform input)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x2F6F5A0", Offset = "0x2F6F5A0", VA = "0x2F6F5A0")]
		public void Update()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x2F6F570", Offset = "0x2F6F570", VA = "0x2F6F570")]
		public void SetTransform(Transform input)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x2F6F77C", Offset = "0x2F6F77C", VA = "0x2F6F77C")]
		public bool HasChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x2F6F7C0", Offset = "0x2F6F7C0", VA = "0x2F6F7C0")]
		public bool HasPositionChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x2F6F850", Offset = "0x2F6F850", VA = "0x2F6F850")]
		public bool HasRotationChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x2F6F900", Offset = "0x2F6F900", VA = "0x2F6F900")]
		public bool HasScaleChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x2F6F990", Offset = "0x2F6F990", VA = "0x2F6F990")]
		public UnityEngine.Vector3 TransformPoint(UnityEngine.Vector3 point)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x2F6FB00", Offset = "0x2F6FB00", VA = "0x2F6FB00")]
		public UnityEngine.Vector3 TransformDirection(UnityEngine.Vector3 direction)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x2F6FBD4", Offset = "0x2F6FBD4", VA = "0x2F6FBD4")]
		public UnityEngine.Vector3 InverseTransformPoint(UnityEngine.Vector3 point)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x2F6FC90", Offset = "0x2F6FC90", VA = "0x2F6FC90")]
		public UnityEngine.Vector3 InverseTransformDirection(UnityEngine.Vector3 direction)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000B0F")]
		public T GetComponent<T>()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20001C0")]
	public static class TransformUtility
	{
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x2F6FDB4", Offset = "0x2F6FDB4", VA = "0x2F6FDB4")]
		public static UnityEngine.Vector3 GetPosition(ref Matrix4x4 m)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x2F6FE58", Offset = "0x2F6FE58", VA = "0x2F6FE58")]
		public static Quaternion GetRotation(ref Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x2F6FF74", Offset = "0x2F6FF74", VA = "0x2F6FF74")]
		public static UnityEngine.Vector3 GetScale(ref Matrix4x4 m)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x2F70038", Offset = "0x2F70038", VA = "0x2F70038")]
		public static void SetPosition(ref Matrix4x4 m, ref UnityEngine.Vector3 p)
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x2F70090", Offset = "0x2F70090", VA = "0x2F70090")]
		public static void GetChildCount(Transform parent, ref int count)
		{
		}
	}
}
namespace Dreamteck.Splines
{
	[Token(Token = "0x20001C1")]
	public class BlankUser : SplineUser
	{
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x2335FC8", Offset = "0x2335FC8", VA = "0x2335FC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x2335FCC", Offset = "0x2335FCC", VA = "0x2335FCC", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x2335FD4", Offset = "0x2335FD4", VA = "0x2335FD4", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x2335FDC", Offset = "0x2335FDC", VA = "0x2335FDC", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x2335FE4", Offset = "0x2335FE4", VA = "0x2335FE4")]
		public BlankUser()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6C68", Offset = "0x16E6C68")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6C68", Offset = "0x16E6C68")]
	public class EdgeColliderGenerator : SplineUser
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		protected EdgeCollider2D edgeCollider;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float lastUpdateTime;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool updateCollider;

		[Token(Token = "0x1700017E")]
		public float offset
		{
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0x2337434", Offset = "0x2337434", VA = "0x2337434")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0x233743C", Offset = "0x233743C", VA = "0x233743C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x2337460", Offset = "0x2337460", VA = "0x2337460", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x23374CC", Offset = "0x23374CC", VA = "0x23374CC", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x23374D4", Offset = "0x23374D4", VA = "0x23374D4", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x23374DC", Offset = "0x23374DC", VA = "0x23374DC", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x23374E4", Offset = "0x23374E4", VA = "0x23374E4", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x23374EC", Offset = "0x23374EC", VA = "0x23374EC", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x23375C0", Offset = "0x23375C0", VA = "0x23375C0", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x23378A0", Offset = "0x23378A0", VA = "0x23378A0", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x2337A40", Offset = "0x2337A40", VA = "0x2337A40")]
		public EdgeColliderGenerator()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6CF0", Offset = "0x16E6CF0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6CF0", Offset = "0x16E6CF0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6CF0", Offset = "0x16E6CF0")]
	public class ExtrudeMesh : MeshGenerator
	{
		[Token(Token = "0x20004AF")]
		public enum Axis
		{
			[Token(Token = "0x4001C96")]
			X,
			[Token(Token = "0x4001C97")]
			Y,
			[Token(Token = "0x4001C98")]
			Z
		}

		[Token(Token = "0x20004B0")]
		public enum Iteration
		{
			[Token(Token = "0x4001C9A")]
			Ordered,
			[Token(Token = "0x4001C9B")]
			Random
		}

		[Token(Token = "0x20004B1")]
		public enum MirrorMethod
		{
			[Token(Token = "0x4001C9D")]
			None,
			[Token(Token = "0x4001C9E")]
			X,
			[Token(Token = "0x4001C9F")]
			Y,
			[Token(Token = "0x4001CA0")]
			Z
		}

		[Token(Token = "0x20004B2")]
		public enum TileUVs
		{
			[Token(Token = "0x4001CA2")]
			None,
			[Token(Token = "0x4001CA3")]
			U,
			[Token(Token = "0x4001CA4")]
			V,
			[Token(Token = "0x4001CA5")]
			UniformU,
			[Token(Token = "0x4001CA6")]
			UniformV
		}

		[Serializable]
		[Token(Token = "0x20004B3")]
		internal class ExtrudableMesh
		{
			[Serializable]
			[Token(Token = "0x2000617")]
			public class VertexGroup
			{
				[Token(Token = "0x40022CB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public float value;

				[Token(Token = "0x40022CC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int[] ids;

				[Token(Token = "0x6002452")]
				[Address(RVA = "0x233CC98", Offset = "0x233CC98", VA = "0x233CC98")]
				public VertexGroup(float val, int[] vertIds)
				{
				}

				[Token(Token = "0x6002453")]
				[Address(RVA = "0x233CCDC", Offset = "0x233CCDC", VA = "0x233CCDC")]
				public void AddId(int id)
				{
				}
			}

			[Serializable]
			[Token(Token = "0x2000618")]
			public class Submesh
			{
				[Token(Token = "0x40022CD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int[] triangles;

				[Token(Token = "0x6002454")]
				[Address(RVA = "0x233CDA0", Offset = "0x233CDA0", VA = "0x233CDA0")]
				public Submesh()
				{
				}

				[Token(Token = "0x6002455")]
				[Address(RVA = "0x233BFFC", Offset = "0x233BFFC", VA = "0x233BFFC")]
				public Submesh(int[] input)
				{
				}
			}

			[Token(Token = "0x4001CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Vector3[] vertices;

			[Token(Token = "0x4001CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.Vector3[] normals;

			[Token(Token = "0x4001CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color[] colors;

			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Submesh> subMeshes;

			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TS_Bounds bounds;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<VertexGroup> vertexGroups;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private MirrorMethod _mirror;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[SerializeField]
			private Axis _axis;

			[Token(Token = "0x1700046C")]
			public MirrorMethod mirror
			{
				[Token(Token = "0x6001FA1")]
				[Address(RVA = "0x233B490", Offset = "0x233B490", VA = "0x233B490")]
				get
				{
					return default(MirrorMethod);
				}
				[Token(Token = "0x6001FA2")]
				[Address(RVA = "0x2338994", Offset = "0x2338994", VA = "0x2338994")]
				set
				{
				}
			}

			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x233BC30", Offset = "0x233BC30", VA = "0x233BC30")]
			public ExtrudableMesh()
			{
			}

			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0x2338CE8", Offset = "0x2338CE8", VA = "0x2338CE8")]
			public ExtrudableMesh(Mesh inputMesh, Axis axis)
			{
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0x233AE28", Offset = "0x233AE28", VA = "0x233AE28")]
			public void Update(Mesh inputMesh, Axis axis)
			{
			}

			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0x233B498", Offset = "0x233B498", VA = "0x233B498")]
			private void Mirror(MirrorMethod method)
			{
			}

			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x233C0B0", Offset = "0x233C0B0", VA = "0x233C0B0")]
			private void GroupVertices(Axis axis)
			{
			}

			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0x233CB7C", Offset = "0x233CB7C", VA = "0x233CB7C")]
			private int FindInsertIndex(UnityEngine.Vector3 pos, float value)
			{
				return default(int);
			}

			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0x233C458", Offset = "0x233C458", VA = "0x233C458")]
			private void CalculateTangents()
			{
			}
		}

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private Mesh _startMesh;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Mesh _endMesh;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private bool _dontStretchCaps;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[HideInInspector]
		private TileUVs _tileUVs;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private Mesh[] _middleMeshes;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private List<ExtrudableMesh> extrudableMeshes;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		[HideInInspector]
		private Iteration _iteration;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		[HideInInspector]
		private int _repeat;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private double _spacing;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _scale;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private SplineResult lastResult;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool useLastResult;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private List<TS_Mesh> combineMeshes;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private System.Random random;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int iterations;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private bool _hasAnyMesh;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A5")]
		private bool _hasStartMesh;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A6")]
		private bool _hasEndMesh;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x1700017F")]
		public Axis axis
		{
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x2337D10", Offset = "0x2337D10", VA = "0x2337D10")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0x2337D18", Offset = "0x2337D18", VA = "0x2337D18")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public Iteration iteration
		{
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0x233808C", Offset = "0x233808C", VA = "0x233808C")]
			get
			{
				return default(Iteration);
			}
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x2338094", Offset = "0x2338094", VA = "0x2338094")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public int randomSeed
		{
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x23380D8", Offset = "0x23380D8", VA = "0x23380D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x23380E0", Offset = "0x23380E0", VA = "0x23380E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public int repeat
		{
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x233813C", Offset = "0x233813C", VA = "0x233813C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x2338144", Offset = "0x2338144", VA = "0x2338144")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public bool dontStretchCaps
		{
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x233849C", Offset = "0x233849C", VA = "0x233849C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x23384A4", Offset = "0x23384A4", VA = "0x23384A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public TileUVs tileUVs
		{
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0x23384D4", Offset = "0x23384D4", VA = "0x23384D4")]
			get
			{
				return default(TileUVs);
			}
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x23384DC", Offset = "0x23384DC", VA = "0x23384DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public double spacing
		{
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0x2338500", Offset = "0x2338500", VA = "0x2338500")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x2338508", Offset = "0x2338508", VA = "0x2338508")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public Vector2 scale
		{
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0x233857C", Offset = "0x233857C", VA = "0x233857C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0x2338588", Offset = "0x2338588", VA = "0x2338588")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public bool hasAnyMesh
		{
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0x2338650", Offset = "0x2338650", VA = "0x2338650")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x2338658", Offset = "0x2338658", VA = "0x2338658", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x233880C", Offset = "0x233880C", VA = "0x233880C")]
		public Mesh GetStartMesh()
		{
			return null;
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x2338814", Offset = "0x2338814", VA = "0x2338814")]
		public Mesh GetEndMesh()
		{
			return null;
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x233881C", Offset = "0x233881C", VA = "0x233881C")]
		public MirrorMethod GetStartMeshMirror()
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x2338888", Offset = "0x2338888", VA = "0x2338888")]
		public MirrorMethod GetEndMeshMirror()
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x23388F8", Offset = "0x23388F8", VA = "0x23388F8")]
		public void SetStartMeshMirror(MirrorMethod mirror)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x23389D8", Offset = "0x23389D8", VA = "0x23389D8")]
		public void SetEndMeshMirror(MirrorMethod mirror)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x2338A78", Offset = "0x2338A78", VA = "0x2338A78")]
		public void SetMeshMirror(int index, MirrorMethod mirror)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x2338B60", Offset = "0x2338B60", VA = "0x2338B60")]
		public void SetStartMesh(Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x2338F1C", Offset = "0x2338F1C", VA = "0x2338F1C")]
		public void SetEndMesh(Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x23390C8", Offset = "0x23390C8", VA = "0x23390C8")]
		public Mesh GetMesh(int index)
		{
			return null;
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x2339104", Offset = "0x2339104", VA = "0x2339104")]
		public MirrorMethod GetMeshMirror(int index)
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x23391C0", Offset = "0x23391C0", VA = "0x23391C0")]
		public void SetMesh(int index, Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x233931C", Offset = "0x233931C", VA = "0x233931C")]
		public void RemoveMesh(int index)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x23394DC", Offset = "0x23394DC", VA = "0x23394DC")]
		public void AddMesh(Mesh inputMesh)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x23386C8", Offset = "0x23386C8", VA = "0x23386C8")]
		private void CheckMeshes()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x2339638", Offset = "0x2339638", VA = "0x2339638")]
		public int GetMeshCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x2339654", Offset = "0x2339654", VA = "0x2339654", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x23396D0", Offset = "0x23396D0", VA = "0x23396D0")]
		private void Generate()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x2339A88", Offset = "0x2339A88", VA = "0x2339A88")]
		private int GetMeshIndex(int repeatIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x233A52C", Offset = "0x233A52C", VA = "0x233A52C")]
		private void TRS(ExtrudableMesh source, TS_Mesh target, double percent)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x233AA7C", Offset = "0x233AA7C", VA = "0x233AA7C")]
		private void CreateTSFromExtrudableMesh(ExtrudableMesh source, ref TS_Mesh target)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x2339B68", Offset = "0x2339B68", VA = "0x2339B68")]
		private void Stretch(ExtrudableMesh source, TS_Mesh target, double from, double to)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x2337D5C", Offset = "0x2337D5C", VA = "0x2337D5C")]
		private void UpdateExtrudableMeshes()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x233B0DC", Offset = "0x233B0DC", VA = "0x233B0DC")]
		private void UpdateStartExtrudeMesh()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x2338190", Offset = "0x2338190", VA = "0x2338190")]
		private void UpdateEndExtrudeMesh()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x233B330", Offset = "0x233B330", VA = "0x233B330")]
		public ExtrudeMesh()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6DA0", Offset = "0x16E6DA0")]
	public class LengthCalculator : SplineUser
	{
		[Serializable]
		[Token(Token = "0x20004B4")]
		public class LengthEvent
		{
			[Token(Token = "0x2000619")]
			public enum Type
			{
				[Token(Token = "0x40022CF")]
				Growing,
				[Token(Token = "0x40022D0")]
				Shrinking,
				[Token(Token = "0x40022D1")]
				Both
			}

			[Token(Token = "0x4001CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float targetLength;

			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SplineAction action;

			[Token(Token = "0x4001CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Type type;

			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x33FE4E0", Offset = "0x33FE4E0", VA = "0x33FE4E0")]
			public LengthEvent()
			{
			}

			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x33FE564", Offset = "0x33FE564", VA = "0x33FE564")]
			public LengthEvent(Type t)
			{
			}

			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x33FDE40", Offset = "0x33FDE40", VA = "0x33FDE40")]
			public LengthEvent(Type t, SplineAction a)
			{
			}

			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x33FDC10", Offset = "0x33FDC10", VA = "0x33FDC10")]
			public void Check(float fromLength, float toLength)
			{
			}
		}

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public LengthEvent[] lengthEvents;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public float idealLength;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _length;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float lastLength;

		[Token(Token = "0x17000188")]
		public float length
		{
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0x33FDAC0", Offset = "0x33FDAC0", VA = "0x33FDAC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x33FDAC8", Offset = "0x33FDAC8", VA = "0x33FDAC8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x33FDB6C", Offset = "0x33FDB6C", VA = "0x33FDB6C", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x33FDC90", Offset = "0x33FDC90", VA = "0x33FDC90")]
		private void AddEvent(LengthEvent lengthEvent)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x33FDD80", Offset = "0x33FDD80", VA = "0x33FDD80")]
		public void AddEvent(LengthEvent.Type t, UnityAction call, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x33FDEF4", Offset = "0x33FDEF4", VA = "0x33FDEF4")]
		public void AddEvent(LengthEvent.Type t, UnityAction<int> call, int value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x33FDFBC", Offset = "0x33FDFBC", VA = "0x33FDFBC")]
		public void AddEvent(LengthEvent.Type t, UnityAction<float> call, float value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x33FE084", Offset = "0x33FE084", VA = "0x33FE084")]
		public void AddEvent(LengthEvent.Type t, UnityAction<double> call, double value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x33FE14C", Offset = "0x33FE14C", VA = "0x33FE14C")]
		public void AddTrigger(LengthEvent.Type t, UnityAction<string> call, string value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x33FE214", Offset = "0x33FE214", VA = "0x33FE214")]
		public void AddEvent(LengthEvent.Type t, UnityAction<bool> call, bool value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x33FE2DC", Offset = "0x33FE2DC", VA = "0x33FE2DC")]
		public void AddEvent(LengthEvent.Type t, UnityAction<GameObject> call, GameObject value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x33FE3A4", Offset = "0x33FE3A4", VA = "0x33FE3A4")]
		public void AddEvent(LengthEvent.Type t, UnityAction<Transform> call, Transform value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x33FE46C", Offset = "0x33FE46C", VA = "0x33FE46C")]
		public LengthCalculator()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class MeshGenerator : SplineUser
	{
		[Token(Token = "0x20004B5")]
		public enum UVMode
		{
			[Token(Token = "0x4001CB6")]
			Clip,
			[Token(Token = "0x4001CB7")]
			UniformClip,
			[Token(Token = "0x4001CB8")]
			Clamp,
			[Token(Token = "0x4001CB9")]
			UniformClamp
		}

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private bool _baked;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		private Color _color;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Vector3 _offset;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[HideInInspector]
		private int _normalMethod;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private bool _tangents;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[HideInInspector]
		private float _rotation;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private bool _flipFaces;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[SerializeField]
		[HideInInspector]
		private bool _doubleSided;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		private UVMode _uvMode;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvScale;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvOffset;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		private float _uvRotation;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		protected MeshCollider meshCollider;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		protected MeshFilter filter;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		protected MeshRenderer meshRenderer;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		protected TS_Mesh tsMesh;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		protected Mesh mesh;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public float colliderUpdateRate;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		protected bool updateCollider;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected float lastUpdateTime;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float vDist;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Vector2 uvs;

		[Token(Token = "0x17000189")]
		public float size
		{
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0x33FE5FC", Offset = "0x33FE5FC", VA = "0x33FE5FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0x33FE604", Offset = "0x33FE604", VA = "0x33FE604")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public Color color
		{
			[Token(Token = "0x6000B60")]
			[Address(RVA = "0x33FE628", Offset = "0x33FE628", VA = "0x33FE628")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0x33FE634", Offset = "0x33FE634", VA = "0x33FE634")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public UnityEngine.Vector3 offset
		{
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0x33FE6B0", Offset = "0x33FE6B0", VA = "0x33FE6B0")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0x33FE6BC", Offset = "0x33FE6BC", VA = "0x33FE6BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public int normalMethod
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0x33FE79C", Offset = "0x33FE79C", VA = "0x33FE79C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x33FE7A4", Offset = "0x33FE7A4", VA = "0x33FE7A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public bool calculateTangents
		{
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x33FE7C8", Offset = "0x33FE7C8", VA = "0x33FE7C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0x33FE7D0", Offset = "0x33FE7D0", VA = "0x33FE7D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public float rotation
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x33FE800", Offset = "0x33FE800", VA = "0x33FE800")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x33FE808", Offset = "0x33FE808", VA = "0x33FE808")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public bool flipFaces
		{
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0x33FE82C", Offset = "0x33FE82C", VA = "0x33FE82C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x33FE834", Offset = "0x33FE834", VA = "0x33FE834")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public bool doubleSided
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x33FE864", Offset = "0x33FE864", VA = "0x33FE864")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x33FE86C", Offset = "0x33FE86C", VA = "0x33FE86C")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public UVMode uvMode
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x33FE89C", Offset = "0x33FE89C", VA = "0x33FE89C")]
			get
			{
				return default(UVMode);
			}
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x33FE8A4", Offset = "0x33FE8A4", VA = "0x33FE8A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public Vector2 uvScale
		{
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0x33FE8C8", Offset = "0x33FE8C8", VA = "0x33FE8C8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x33FE8D0", Offset = "0x33FE8D0", VA = "0x33FE8D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public Vector2 uvOffset
		{
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0x33FE990", Offset = "0x33FE990", VA = "0x33FE990")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0x33FE998", Offset = "0x33FE998", VA = "0x33FE998")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public float uvRotation
		{
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0x33FEA58", Offset = "0x33FEA58", VA = "0x33FEA58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0x33FEA60", Offset = "0x33FEA60", VA = "0x33FEA60")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public bool baked
		{
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0x33FEA84", Offset = "0x33FEA84", VA = "0x33FEA84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x33FEA8C", Offset = "0x33FEA8C", VA = "0x33FEA8C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x33FEBB0", Offset = "0x33FEBB0", VA = "0x33FEBB0", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x33FECD4", Offset = "0x33FECD4", VA = "0x33FECD4")]
		public void CloneMesh()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x33FEE10", Offset = "0x33FEE10", VA = "0x33FEE10", Slot = "11")]
		public override void Rebuild(bool sampleComputer)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x33FEE28", Offset = "0x33FEE28", VA = "0x33FEE28", Slot = "12")]
		public override void RebuildImmediate(bool sampleComputer)
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x33FEE40", Offset = "0x33FEE40", VA = "0x33FEE40", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x33FEE48", Offset = "0x33FEE48", VA = "0x33FEE48", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x33FEE50", Offset = "0x33FEE50", VA = "0x33FEE50", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x33FEF70", Offset = "0x33FEF70", VA = "0x33FEF70")]
		public void UpdateCollider()
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x33FF070", Offset = "0x33FF070", VA = "0x33FF070", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x33FF164", Offset = "0x33FF164", VA = "0x33FF164", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x33FF1C0", Offset = "0x33FF1C0", VA = "0x33FF1C0", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x33FF1F4", Offset = "0x33FF1F4", VA = "0x33FF1F4", Slot = "29")]
		protected virtual void BuildMesh()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x33FF1F8", Offset = "0x33FF1F8", VA = "0x33FF1F8", Slot = "30")]
		protected virtual void WriteMesh()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x33FF5AC", Offset = "0x33FF5AC", VA = "0x33FF5AC", Slot = "31")]
		protected virtual void AllocateMesh(int vertexCount, int trisCount)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x33FF74C", Offset = "0x33FF74C", VA = "0x33FF74C")]
		protected void ResetUVDistance()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x33FF7C4", Offset = "0x33FF7C4", VA = "0x33FF7C4")]
		protected void AddUVDistance(int sampleIndex)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x33FF8F4", Offset = "0x33FF8F4", VA = "0x33FF8F4")]
		protected void CalculateUVs(double percent, float u)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x33FFA98", Offset = "0x33FFA98", VA = "0x33FFA98")]
		public MeshGenerator()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class Node : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004B6")]
		public class Connection
		{
			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool invertTangents;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private int _pointIndex;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineComputer _computer;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			internal SplinePoint point;

			[Token(Token = "0x1700046D")]
			public SplineComputer computer
			{
				[Token(Token = "0x6001FAE")]
				[Address(RVA = "0x3401754", Offset = "0x3401754", VA = "0x3401754")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046E")]
			public int pointIndex
			{
				[Token(Token = "0x6001FAF")]
				[Address(RVA = "0x340175C", Offset = "0x340175C", VA = "0x340175C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700046F")]
			internal bool isValid
			{
				[Token(Token = "0x6001FB0")]
				[Address(RVA = "0x3400C34", Offset = "0x3400C34", VA = "0x3400C34")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x34013A0", Offset = "0x34013A0", VA = "0x34013A0")]
			internal Connection(SplineComputer comp, int index, SplinePoint inputPoint)
			{
			}
		}

		[Token(Token = "0x20004B7")]
		public enum Type
		{
			[Token(Token = "0x4001CBF")]
			Smooth,
			[Token(Token = "0x4001CC0")]
			Free
		}

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Connection[] connections;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _transformSize;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _transformNormals;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _transformTangents;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TS_Transform tsTransform;

		[Token(Token = "0x17000196")]
		public bool transformNormals
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0x33FFC1C", Offset = "0x33FFC1C", VA = "0x33FFC1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0x33FFC24", Offset = "0x33FFC24", VA = "0x33FFC24")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public bool transformSize
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0x33FFD80", Offset = "0x33FFD80", VA = "0x33FFD80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0x33FFD88", Offset = "0x33FFD88", VA = "0x33FFD88")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public bool transformTangents
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0x33FFDAC", Offset = "0x33FFDAC", VA = "0x33FFDAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0x33FFDB4", Offset = "0x33FFDB4", VA = "0x33FFDB4")]
			set
			{
			}
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x33FFDD8", Offset = "0x33FFDD8", VA = "0x33FFDD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x33FFE60", Offset = "0x33FFE60", VA = "0x33FFE60")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x33FFEBC", Offset = "0x33FFEBC", VA = "0x33FFEBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x33FFE64", Offset = "0x33FFE64", VA = "0x33FFE64")]
		private void Run()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x340025C", Offset = "0x340025C", VA = "0x340025C")]
		public SplinePoint GetPoint(int connectionIndex, bool swapTangents)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x34004CC", Offset = "0x34004CC", VA = "0x34004CC")]
		public void SetPoint(int connectionIndex, SplinePoint worldPoint, bool swappedTangents)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x3400B10", Offset = "0x3400B10", VA = "0x3400B10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x3400B14", Offset = "0x3400B14", VA = "0x3400B14")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x33FFEC0", Offset = "0x33FFEC0", VA = "0x33FFEC0")]
		public void UpdateConnectedComputers([Optional] SplineComputer excludeComputer)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x3400EE8", Offset = "0x3400EE8", VA = "0x3400EE8")]
		public void UpdatePoint(SplineComputer computer, int pointIndex, SplinePoint point, bool updatePosition = true)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x33FFC48", Offset = "0x33FFC48", VA = "0x33FFC48")]
		private void UpdatePoints()
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x3401048", Offset = "0x3401048", VA = "0x3401048")]
		protected void RemoveInvalidConnections()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x34010D8", Offset = "0x34010D8", VA = "0x34010D8", Slot = "4")]
		public virtual void AddConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x340098C", Offset = "0x340098C", VA = "0x340098C")]
		protected SplinePoint PointToLocal(SplinePoint worldPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x3400380", Offset = "0x3400380", VA = "0x3400380")]
		protected SplinePoint PointToWorld(SplinePoint localPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x34013FC", Offset = "0x34013FC", VA = "0x34013FC", Slot = "5")]
		public virtual void RemoveConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x3400CD4", Offset = "0x3400CD4", VA = "0x3400CD4")]
		private void RemoveConnection(int index)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x340157C", Offset = "0x340157C", VA = "0x340157C", Slot = "6")]
		public virtual bool HasConnection(SplineComputer computer, int pointIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x34016D0", Offset = "0x34016D0", VA = "0x34016D0")]
		public Connection[] GetConnections()
		{
			return null;
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x34016D8", Offset = "0x34016D8", VA = "0x34016D8")]
		public Node()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6DD8", Offset = "0x16E6DD8")]
	public class ObjectBender : SplineUser
	{
		[Token(Token = "0x20004B8")]
		public enum Axis
		{
			[Token(Token = "0x4001CC2")]
			X,
			[Token(Token = "0x4001CC3")]
			Y,
			[Token(Token = "0x4001CC4")]
			Z
		}

		[Token(Token = "0x20004B9")]
		public enum NormalMode
		{
			[Token(Token = "0x4001CC6")]
			Spline,
			[Token(Token = "0x4001CC7")]
			Auto,
			[Token(Token = "0x4001CC8")]
			Custom
		}

		[Token(Token = "0x20004BA")]
		public enum ForwardMode
		{
			[Token(Token = "0x4001CCA")]
			Spline,
			[Token(Token = "0x4001CCB")]
			Custom
		}

		[Serializable]
		[Token(Token = "0x20004BB")]
		public class BendProperty
		{
			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TS_Transform transform;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool applyRotation;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool applyScale;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool generateLightmapUVs;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			[SerializeField]
			[HideInInspector]
			private bool _bendMesh;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private bool _bendSpline;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			[SerializeField]
			[HideInInspector]
			private bool _bendCollider;

			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float colliderUpdateDue;

			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float colliderUpdateRate;

			[Token(Token = "0x4001CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool updateCollider;

			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public UnityEngine.Vector3 originalPosition;

			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public UnityEngine.Vector3 originalScale;

			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Quaternion originalRotation;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Quaternion parentRotation;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public UnityEngine.Vector3 positionPercent;

			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public UnityEngine.Vector3[] vertexPercents;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public UnityEngine.Vector3[] normals;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public UnityEngine.Vector3[] colliderVertexPercents;

			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public UnityEngine.Vector3[] colliderNormals;

			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalMesh;

			[Token(Token = "0x4001CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalColliderMesh;

			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Spline _originalSpline;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationMesh;

			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationColliderMesh;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Spline destinationSpline;

			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public TS_Mesh _editMesh;

			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public TS_Mesh _editColliderMesh;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public MeshFilter filter;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public MeshCollider collider;

			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public SplineComputer splineComputer;

			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public UnityEngine.Vector3[] splinePointPercents;

			[Token(Token = "0x4001CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public UnityEngine.Vector3[] primaryTangentPercents;

			[Token(Token = "0x4001CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public UnityEngine.Vector3[] secondaryTangentPercents;

			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[SerializeField]
			[HideInInspector]
			private bool parent;

			[Token(Token = "0x17000470")]
			public bool isValid
			{
				[Token(Token = "0x6001FB2")]
				[Address(RVA = "0x3405948", Offset = "0x3405948", VA = "0x3405948")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000471")]
			public bool bendMesh
			{
				[Token(Token = "0x6001FB3")]
				[Address(RVA = "0x34059D0", Offset = "0x34059D0", VA = "0x34059D0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001FB4")]
				[Address(RVA = "0x3402E6C", Offset = "0x3402E6C", VA = "0x3402E6C")]
				set
				{
				}
			}

			[Token(Token = "0x17000472")]
			public bool bendCollider
			{
				[Token(Token = "0x6001FB5")]
				[Address(RVA = "0x3405A74", Offset = "0x3405A74", VA = "0x3405A74")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001FB6")]
				[Address(RVA = "0x3403014", Offset = "0x3403014", VA = "0x3403014")]
				set
				{
				}
			}

			[Token(Token = "0x17000473")]
			public bool bendSpline
			{
				[Token(Token = "0x6001FB7")]
				[Address(RVA = "0x3405B18", Offset = "0x3405B18", VA = "0x3405B18")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001FB8")]
				[Address(RVA = "0x3405B20", Offset = "0x3405B20", VA = "0x3405B20")]
				set
				{
				}
			}

			[Token(Token = "0x17000474")]
			public TS_Mesh editMesh
			{
				[Token(Token = "0x6001FB9")]
				[Address(RVA = "0x3403E5C", Offset = "0x3403E5C", VA = "0x3403E5C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000475")]
			public TS_Mesh editColliderMesh
			{
				[Token(Token = "0x6001FBA")]
				[Address(RVA = "0x3403F70", Offset = "0x3403F70", VA = "0x3403F70")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000476")]
			public Spline originalSpline
			{
				[Token(Token = "0x6001FBB")]
				[Address(RVA = "0x34040B4", Offset = "0x34040B4", VA = "0x34040B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x340271C", Offset = "0x340271C", VA = "0x340271C")]
			public BendProperty(Transform t, bool isParent = false)
			{
			}

			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x3404304", Offset = "0x3404304", VA = "0x3404304")]
			public void Revert()
			{
			}

			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x34059D8", Offset = "0x34059D8", VA = "0x34059D8")]
			private void RevertMesh()
			{
			}

			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x3405B2C", Offset = "0x3405B2C", VA = "0x3405B2C")]
			private void RevertTransform()
			{
			}

			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x3405A7C", Offset = "0x3405A7C", VA = "0x3405A7C")]
			private void RevertCollider()
			{
			}

			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0x340445C", Offset = "0x340445C", VA = "0x340445C")]
			public void Apply(bool applyTransform)
			{
			}

			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0x34045E8", Offset = "0x34045E8", VA = "0x34045E8")]
			public void Update()
			{
			}

			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0x3405BB0", Offset = "0x3405BB0", VA = "0x3405BB0")]
			private void ApplyMesh()
			{
			}

			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0x3405D70", Offset = "0x3405D70", VA = "0x3405D70")]
			private void ApplyCollider()
			{
			}

			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x3405D40", Offset = "0x3405D40", VA = "0x3405D40")]
			private void ApplySpline()
			{
			}
		}

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private bool _bend;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public BendProperty[] bendProperties;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		private TS_Bounds bounds;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		private NormalMode _normalMode;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		private ForwardMode _forwardMode;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16EF0E4", Offset = "0x16EF0E4")]
		private UnityEngine.Vector3 _customNormal;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Vector3 _customForward;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private SplineResult bendResult;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Quaternion bendRotation;

		[Token(Token = "0x17000199")]
		public bool bend
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x3401764", Offset = "0x3401764", VA = "0x3401764")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0x340176C", Offset = "0x340176C", VA = "0x340176C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public Axis axis
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0x3401A08", Offset = "0x3401A08", VA = "0x3401A08")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x3401A10", Offset = "0x3401A10", VA = "0x3401A10")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public NormalMode upMode
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0x3401AE0", Offset = "0x3401AE0", VA = "0x3401AE0")]
			get
			{
				return default(NormalMode);
			}
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0x3401AE8", Offset = "0x3401AE8", VA = "0x3401AE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public UnityEngine.Vector3 customNormal
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x3401BB0", Offset = "0x3401BB0", VA = "0x3401BB0")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0x3401BBC", Offset = "0x3401BBC", VA = "0x3401BBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public ForwardMode forwardMode
		{
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0x3401CEC", Offset = "0x3401CEC", VA = "0x3401CEC")]
			get
			{
				return default(ForwardMode);
			}
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0x3401CF4", Offset = "0x3401CF4", VA = "0x3401CF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public UnityEngine.Vector3 customForward
		{
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x3401DBC", Offset = "0x3401DBC", VA = "0x3401DBC")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x3401DC8", Offset = "0x3401DC8", VA = "0x3401DC8")]
			set
			{
			}
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x3401EF8", Offset = "0x3401EF8", VA = "0x3401EF8")]
		private void GetTransformsRecursively(Transform current, ref List<Transform> transformList)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x3402170", Offset = "0x3402170", VA = "0x3402170")]
		private void GetObjects()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x3402654", Offset = "0x3402654", VA = "0x3402654")]
		public TS_Bounds GetBounds()
		{
			return null;
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x34022A0", Offset = "0x34022A0", VA = "0x34022A0")]
		private void CreateProperty(ref BendProperty property, Transform t)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x3403188", Offset = "0x3403188", VA = "0x3403188")]
		private void CalculateBounds()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x3403350", Offset = "0x3403350", VA = "0x3403350")]
		private void CalculatePropertyBounds(ref BendProperty property)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x3403918", Offset = "0x3403918", VA = "0x3403918")]
		public void CalculatePercents(BendProperty property)
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x34019A0", Offset = "0x34019A0", VA = "0x34019A0")]
		private void Revert()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x34017DC", Offset = "0x34017DC", VA = "0x34017DC")]
		public void UpdateReferences()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x3404634", Offset = "0x3404634", VA = "0x3404634")]
		private void GetBendResult(UnityEngine.Vector3 percentage)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x340420C", Offset = "0x340420C", VA = "0x340420C")]
		private UnityEngine.Vector3 GetPercentage(UnityEngine.Vector3 point)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x3404D80", Offset = "0x3404D80", VA = "0x3404D80", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x34043CC", Offset = "0x34043CC", VA = "0x34043CC")]
		private void Bend()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x3404DBC", Offset = "0x3404DBC", VA = "0x3404DBC")]
		public void BendObject(BendProperty p)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x340546C", Offset = "0x340546C", VA = "0x340546C")]
		private void BendMesh(UnityEngine.Vector3[] vertexPercents, UnityEngine.Vector3[] originalNormals, TS_Mesh mesh, Matrix4x4 worldToLocalMatrix)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x3405664", Offset = "0x3405664", VA = "0x3405664", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x34057B8", Offset = "0x34057B8", VA = "0x34057B8", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x3405828", Offset = "0x3405828", VA = "0x3405828")]
		public ObjectBender()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6E10", Offset = "0x16E6E10")]
	public class ObjectController : SplineUser
	{
		[Serializable]
		[Token(Token = "0x20004BC")]
		internal class ObjectControl
		{
			[Token(Token = "0x4001CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4001CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.Vector3 position;

			[Token(Token = "0x4001CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x4001CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public UnityEngine.Vector3 scale;

			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool active;

			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public UnityEngine.Vector3 baseScale;

			[Token(Token = "0x17000477")]
			public bool isNull
			{
				[Token(Token = "0x6001FC6")]
				[Address(RVA = "0x3408CEC", Offset = "0x3408CEC", VA = "0x3408CEC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000478")]
			public Transform transform
			{
				[Token(Token = "0x6001FC7")]
				[Address(RVA = "0x3406F64", Offset = "0x3406F64", VA = "0x3406F64")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0x34076C0", Offset = "0x34076C0", VA = "0x34076C0")]
			public ObjectControl(GameObject input)
			{
			}

			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0x3406FFC", Offset = "0x3406FFC", VA = "0x3406FFC")]
			public void Destroy()
			{
			}

			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0x34070B0", Offset = "0x34070B0", VA = "0x34070B0")]
			public void DestroyImmediate()
			{
			}

			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x34088B4", Offset = "0x34088B4", VA = "0x34088B4")]
			public void Apply()
			{
			}
		}

		[Token(Token = "0x20004BD")]
		public enum ObjectMethod
		{
			[Token(Token = "0x4001CF6")]
			Instantiate,
			[Token(Token = "0x4001CF7")]
			GetChildren
		}

		[Token(Token = "0x20004BE")]
		public enum Positioning
		{
			[Token(Token = "0x4001CF9")]
			Stretch,
			[Token(Token = "0x4001CFA")]
			Clip
		}

		[Token(Token = "0x20004BF")]
		public enum Iteration
		{
			[Token(Token = "0x4001CFC")]
			Ordered,
			[Token(Token = "0x4001CFD")]
			Random
		}

		[Token(Token = "0x20004C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E97B4", Offset = "0x16E97B4")]
		private sealed class <InstantiateAllWithDelay>d__101 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectController <>4__this;

			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000479")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FCF")]
				[Address(RVA = "0x3408C7C", Offset = "0x3408C7C", VA = "0x3408C7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD1")]
				[Address(RVA = "0x3408CE4", Offset = "0x3408CE4", VA = "0x3408CE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x34079A0", Offset = "0x34079A0", VA = "0x34079A0")]
			[DebuggerHidden]
			public <InstantiateAllWithDelay>d__101(int <>1__state)
			{
			}

			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0x3408B28", Offset = "0x3408B28", VA = "0x3408B28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0x3408B2C", Offset = "0x3408B2C", VA = "0x3408B2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0x3408C84", Offset = "0x3408C84", VA = "0x3408C84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		public GameObject[] objects;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		private float _positionOffset;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[HideInInspector]
		private int _spawnCount;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		private Positioning _objectPositioning;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private Iteration _iteration;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _randomSize;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Vector3 _offset;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private bool _offsetUseWorldCoords;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Vector3 _minRotationOffset;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Vector3 _maxRotationOffset;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Vector3 _minScaleMultiplier;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Vector3 _maxScaleMultiplier;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		[HideInInspector]
		private bool _randomizeOffset;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		[SerializeField]
		[HideInInspector]
		private bool _useRandomOffsetRotation;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		[SerializeField]
		[HideInInspector]
		private bool _shellOffset;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x117")]
		[SerializeField]
		[HideInInspector]
		private bool _randomOffset;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		private bool _applyRotation;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		[SerializeField]
		[HideInInspector]
		private bool _applyScale;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		[HideInInspector]
		private ObjectMethod _objectMethod;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool delayedSpawn;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[HideInInspector]
		public float spawnDelay;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private int lastChildCount;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private ObjectControl[] spawned;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private SplineResult evaluateResult;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private System.Random randomizer;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private System.Random randomizer2;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private System.Random rotationRandomizer;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private System.Random scaleRandomizer;

		[Token(Token = "0x1700019F")]
		public ObjectMethod objectMethod
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0x3405F54", Offset = "0x3405F54", VA = "0x3405F54")]
			get
			{
				return default(ObjectMethod);
			}
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x3405F5C", Offset = "0x3405F5C", VA = "0x3405F5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public int spawnCount
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x3406030", Offset = "0x3406030", VA = "0x3406030")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x3406038", Offset = "0x3406038", VA = "0x3406038")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public Positioning objectPositioning
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0x34062D4", Offset = "0x34062D4", VA = "0x34062D4")]
			get
			{
				return default(Positioning);
			}
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0x34062DC", Offset = "0x34062DC", VA = "0x34062DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public Iteration iteration
		{
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0x3406300", Offset = "0x3406300", VA = "0x3406300")]
			get
			{
				return default(Iteration);
			}
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0x3406308", Offset = "0x3406308", VA = "0x3406308")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public int randomSeed
		{
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0x340632C", Offset = "0x340632C", VA = "0x340632C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0x3406334", Offset = "0x3406334", VA = "0x3406334")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public UnityEngine.Vector3 offset
		{
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0x3406358", Offset = "0x3406358", VA = "0x3406358")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0x3406364", Offset = "0x3406364", VA = "0x3406364")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public bool offsetUseWorldCoords
		{
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x3406444", Offset = "0x3406444", VA = "0x3406444")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0x340644C", Offset = "0x340644C", VA = "0x340644C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public UnityEngine.Vector3 minRotationOffset
		{
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0x340647C", Offset = "0x340647C", VA = "0x340647C")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0x3406488", Offset = "0x3406488", VA = "0x3406488")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public UnityEngine.Vector3 maxRotationOffset
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0x3406568", Offset = "0x3406568", VA = "0x3406568")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0x3406574", Offset = "0x3406574", VA = "0x3406574")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public UnityEngine.Vector3 rotationOffset
		{
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0x3406654", Offset = "0x3406654", VA = "0x3406654")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0x3406700", Offset = "0x3406700", VA = "0x3406700")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public UnityEngine.Vector3 minScaleMultiplier
		{
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0x3406828", Offset = "0x3406828", VA = "0x3406828")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0x3406834", Offset = "0x3406834", VA = "0x3406834")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public UnityEngine.Vector3 maxScaleMultiplier
		{
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x3406914", Offset = "0x3406914", VA = "0x3406914")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x3406924", Offset = "0x3406924", VA = "0x3406924")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public UnityEngine.Vector3 scaleMultiplier
		{
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x3406A0C", Offset = "0x3406A0C", VA = "0x3406A0C")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x3406AC0", Offset = "0x3406AC0", VA = "0x3406AC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public bool randomizeOffset
		{
			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x3406BF4", Offset = "0x3406BF4", VA = "0x3406BF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x3406BFC", Offset = "0x3406BFC", VA = "0x3406BFC")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public bool useRandomOffsetRotation
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x3406C2C", Offset = "0x3406C2C", VA = "0x3406C2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x3406C34", Offset = "0x3406C34", VA = "0x3406C34")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public bool shellOffset
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x3406C64", Offset = "0x3406C64", VA = "0x3406C64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x3406C6C", Offset = "0x3406C6C", VA = "0x3406C6C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public bool randomOffset
		{
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x3406C9C", Offset = "0x3406C9C", VA = "0x3406C9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x3406CA4", Offset = "0x3406CA4", VA = "0x3406CA4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public bool applyRotation
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x3406CD4", Offset = "0x3406CD4", VA = "0x3406CD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x3406CDC", Offset = "0x3406CDC", VA = "0x3406CDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public bool applyScale
		{
			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0x3406D0C", Offset = "0x3406D0C", VA = "0x3406D0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0x3406D14", Offset = "0x3406D14", VA = "0x3406D14")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public Vector2 randomSize
		{
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0x3406D44", Offset = "0x3406D44", VA = "0x3406D44")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x3406D4C", Offset = "0x3406D4C", VA = "0x3406D4C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public float positionOffset
		{
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0x3406E0C", Offset = "0x3406E0C", VA = "0x3406E0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x3406E14", Offset = "0x3406E14", VA = "0x3406E14")]
			set
			{
			}
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x3406E38", Offset = "0x3406E38", VA = "0x3406E38")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x340606C", Offset = "0x340606C", VA = "0x340606C")]
		private void Remove()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x3407164", Offset = "0x3407164", VA = "0x3407164")]
		public void GetAll()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x3405F7C", Offset = "0x3405F7C", VA = "0x3405F7C")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x3407924", Offset = "0x3407924", VA = "0x3407924", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x34077DC", Offset = "0x34077DC", VA = "0x34077DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701438", Offset = "0x1701438")]
		private IEnumerator InstantiateAllWithDelay()
		{
			return null;
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x3407858", Offset = "0x3407858", VA = "0x3407858")]
		private void InstantiateAll()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x34079CC", Offset = "0x34079CC", VA = "0x34079CC")]
		private void InstantiateSingle()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x3407CF0", Offset = "0x3407CF0", VA = "0x3407CF0", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x3408844", Offset = "0x3408844", VA = "0x3408844", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x34089A0", Offset = "0x34089A0", VA = "0x34089A0", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x34089A8", Offset = "0x34089A8", VA = "0x34089A8")]
		public ObjectController()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6E48", Offset = "0x16E6E48")]
	public class ParticleController : SplineUser
	{
		[Token(Token = "0x20004C1")]
		public enum EmitPoint
		{
			[Token(Token = "0x4001D03")]
			Beginning,
			[Token(Token = "0x4001D04")]
			Ending,
			[Token(Token = "0x4001D05")]
			Random,
			[Token(Token = "0x4001D06")]
			Ordered
		}

		[Token(Token = "0x20004C2")]
		public enum MotionType
		{
			[Token(Token = "0x4001D08")]
			None,
			[Token(Token = "0x4001D09")]
			UseParticleSystem,
			[Token(Token = "0x4001D0A")]
			FollowForward,
			[Token(Token = "0x4001D0B")]
			FollowBackward,
			[Token(Token = "0x4001D0C")]
			ByNormal,
			[Token(Token = "0x4001D0D")]
			ByNormalRandomized
		}

		[Token(Token = "0x20004C3")]
		public enum Wrap
		{
			[Token(Token = "0x4001D0F")]
			Default,
			[Token(Token = "0x4001D10")]
			Loop
		}

		[Token(Token = "0x20004C4")]
		public class Particle
		{
			[Token(Token = "0x4001D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector2 startOffset;

			[Token(Token = "0x4001D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vector2 endOffset;

			[Token(Token = "0x4001D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float cycleSpeed;

			[Token(Token = "0x4001D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float startLifetime;

			[Token(Token = "0x4001D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Color startColor;

			[Token(Token = "0x4001D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float remainingLifetime;

			[Token(Token = "0x4001D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal float lifeTime;

			[Token(Token = "0x4001D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal double startPercent;

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x340A850", Offset = "0x340A850", VA = "0x340A850")]
			internal double GetSplinePercent(Wrap wrap, ParticleSystem.Particle particle)
			{
				return default(double);
			}

			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x3409274", Offset = "0x3409274", VA = "0x3409274")]
			public Particle()
			{
			}
		}

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public ParticleSystem _particleSystem;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public bool volumetric;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		[HideInInspector]
		public bool emitFromShell;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public Vector2 scale;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public EmitPoint emitPoint;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public MotionType motionType;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public float minCycles;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public float maxCycles;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Particle[] controllers;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int particleCount;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int birthIndex;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private SplineResult evalResult;

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x3408D5C", Offset = "0x3408D5C", VA = "0x3408D5C", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x3409208", Offset = "0x3409208", VA = "0x3409208")]
		private void TransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x340A1B8", Offset = "0x340A1B8", VA = "0x340A1B8")]
		private void InverseTransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x340A788", Offset = "0x340A788", VA = "0x340A788", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x340A224", Offset = "0x340A224", VA = "0x340A224")]
		private void HandleParticle(int index)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x340A98C", Offset = "0x340A98C", VA = "0x340A98C")]
		private void OnParticleDie(int index)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x3409304", Offset = "0x3409304", VA = "0x3409304")]
		private void OnParticleBorn(int index)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x340A990", Offset = "0x340A990", VA = "0x340A990")]
		public ParticleController()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6E94", Offset = "0x16E6E94")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6E94", Offset = "0x16E6E94")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6E94", Offset = "0x16E6E94")]
	public class PathGenerator : MeshGenerator
	{
		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private bool _useShapeCurve;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _shape;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _lastShape;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private float _shapeExposure;

		[Token(Token = "0x170001B4")]
		public int slices
		{
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0x340AA8C", Offset = "0x340AA8C", VA = "0x340AA8C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x340AA94", Offset = "0x340AA94", VA = "0x340AA94")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public bool useShapeCurve
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0x340AAC0", Offset = "0x340AAC0", VA = "0x340AAC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0x340AAC8", Offset = "0x340AAC8", VA = "0x340AAC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public float shapeExposure
		{
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0x340AC28", Offset = "0x340AC28", VA = "0x340AC28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x340AC30", Offset = "0x340AC30", VA = "0x340AC30")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public AnimationCurve shape
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x340ACF4", Offset = "0x340ACF4", VA = "0x340ACF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x340ACFC", Offset = "0x340ACFC", VA = "0x340ACFC")]
			set
			{
			}
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x340B07C", Offset = "0x340B07C", VA = "0x340B07C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x340B0E0", Offset = "0x340B0E0", VA = "0x340B0E0", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x340B0E4", Offset = "0x340B0E4", VA = "0x340B0E4", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x340B1C4", Offset = "0x340B1C4", VA = "0x340B1C4")]
		private void GenerateVertices()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x340C170", Offset = "0x340C170", VA = "0x340C170")]
		public PathGenerator()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6F44", Offset = "0x16E6F44")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E6F44", Offset = "0x16E6F44")]
	public class PolygonColliderGenerator : SplineUser
	{
		[Token(Token = "0x20004C5")]
		public enum Type
		{
			[Token(Token = "0x4001D1A")]
			Path,
			[Token(Token = "0x4001D1B")]
			Shape
		}

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private Type _type;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		protected PolygonCollider2D polygonCollider;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float lastUpdateTime;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool updateCollider;

		[Token(Token = "0x170001B8")]
		public Type type
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x340C1E4", Offset = "0x340C1E4", VA = "0x340C1E4")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x340C1EC", Offset = "0x340C1EC", VA = "0x340C1EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public float size
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x340C210", Offset = "0x340C210", VA = "0x340C210")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x340C218", Offset = "0x340C218", VA = "0x340C218")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public float offset
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x340C23C", Offset = "0x340C23C", VA = "0x340C23C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x340C244", Offset = "0x340C244", VA = "0x340C244")]
			set
			{
			}
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x340C268", Offset = "0x340C268", VA = "0x340C268", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x340C2D4", Offset = "0x340C2D4", VA = "0x340C2D4", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x340C2DC", Offset = "0x340C2DC", VA = "0x340C2DC", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x340C2E4", Offset = "0x340C2E4", VA = "0x340C2E4", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x340C2EC", Offset = "0x340C2EC", VA = "0x340C2EC", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x340C2F4", Offset = "0x340C2F4", VA = "0x340C2F4", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x340C3CC", Offset = "0x340C3CC", VA = "0x340C3CC", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x340CB34", Offset = "0x340CB34", VA = "0x340CB34", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x340C43C", Offset = "0x340C43C", VA = "0x340C43C")]
		private void GeneratePath()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x340C878", Offset = "0x340C878", VA = "0x340C878")]
		private void GenerateShape()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x340CCD8", Offset = "0x340CCD8", VA = "0x340CCD8")]
		public PolygonColliderGenerator()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public delegate void EmptySplineHandler();
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E6FCC", Offset = "0x16E6FCC")]
	public class SplineComputer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004C6")]
		public class NodeLink
		{
			[Token(Token = "0x4001D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node node;

			[Token(Token = "0x4001D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int pointIndex;

			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0x363A7A0", Offset = "0x363A7A0", VA = "0x363A7A0")]
			public NodeLink()
			{
			}
		}

		[Token(Token = "0x20004C7")]
		public enum Space
		{
			[Token(Token = "0x4001D1F")]
			World,
			[Token(Token = "0x4001D20")]
			Local
		}

		[Serializable]
		[Token(Token = "0x20004C8")]
		public class Morph
		{
			[Serializable]
			[Token(Token = "0x200061A")]
			internal class SplineMorphState
			{
				[Token(Token = "0x40022D2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SplinePoint[] points;

				[Token(Token = "0x40022D3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public float percent;

				[Token(Token = "0x40022D4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string name;

				[Token(Token = "0x6002456")]
				[Address(RVA = "0x363F664", Offset = "0x363F664", VA = "0x363F664")]
				public SplineMorphState()
				{
				}
			}

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private SplineComputer computer;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineMorphState[] morphStates;

			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			internal bool initialized;

			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x363956C", Offset = "0x363956C", VA = "0x363956C")]
			public Morph(SplineComputer input)
			{
			}

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x363DD9C", Offset = "0x363DD9C", VA = "0x363DD9C")]
			public void SetWeight(int index, float weight)
			{
			}

			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x363EF88", Offset = "0x363EF88", VA = "0x363EF88")]
			public void SetWeight(string name, float weight)
			{
			}

			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0x363F150", Offset = "0x363F150", VA = "0x363F150")]
			public void CaptureSnapshot(int index)
			{
			}

			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0x363F2C0", Offset = "0x363F2C0", VA = "0x363F2C0")]
			public void CaptureSnapshot(string name)
			{
			}

			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0x363F2E8", Offset = "0x363F2E8", VA = "0x363F2E8")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0x363F348", Offset = "0x363F348", VA = "0x363F348")]
			public SplinePoint[] GetSnapshot(int index)
			{
				return null;
			}

			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0x363F38C", Offset = "0x363F38C", VA = "0x363F38C")]
			public SplinePoint[] GetSnapshot(string name)
			{
				return null;
			}

			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0x363E20C", Offset = "0x363E20C", VA = "0x363E20C")]
			public float GetWeight(int index)
			{
				return default(float);
			}

			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0x363F3E0", Offset = "0x363F3E0", VA = "0x363F3E0")]
			public float GetWeight(string name)
			{
				return default(float);
			}

			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0x363F434", Offset = "0x363F434", VA = "0x363F434")]
			public void AddChannel(string name)
			{
			}

			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0x363F6F0", Offset = "0x363F6F0", VA = "0x363F6F0")]
			public void RemoveChannel(string name)
			{
			}

			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0x363F718", Offset = "0x363F718", VA = "0x363F718")]
			public void RemoveChannel(int index)
			{
			}

			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0x363E8D8", Offset = "0x363E8D8", VA = "0x363E8D8")]
			private void Update()
			{
			}

			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0x363F054", Offset = "0x363F054", VA = "0x363F054")]
			private int GetChannelIndex(string name)
			{
				return default(int);
			}

			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0x3639630", Offset = "0x3639630", VA = "0x3639630")]
			public int GetChannelCount()
			{
				return default(int);
			}

			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0x363DFAC", Offset = "0x363DFAC", VA = "0x363DFAC")]
			public string[] GetChannelNames()
			{
				return null;
			}
		}

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Spline spline;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Morph _morph;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Space _space;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private SplineUser[] subscribers;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private NodeLink[] _nodeLinks;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool rebuildPending;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TS_Transform tsTransform;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool updateRebuild;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool lateUpdateRebuild;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private SplineUser.UpdateMethod method;

		[Token(Token = "0x170001BB")]
		public Space space
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x363936C", Offset = "0x363936C", VA = "0x363936C")]
			get
			{
				return default(Space);
			}
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x3639374", Offset = "0x3639374", VA = "0x3639374")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public Spline.Type type
		{
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0x363939C", Offset = "0x363939C", VA = "0x363939C")]
			get
			{
				return default(Spline.Type);
			}
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0x3630314", Offset = "0x3630314", VA = "0x3630314")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public double precision
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x36393B8", Offset = "0x36393B8", VA = "0x36393B8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x36393D4", Offset = "0x36393D4", VA = "0x36393D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public AnimationCurve customValueInterpolation
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0x3639420", Offset = "0x3639420", VA = "0x3639420")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x363943C", Offset = "0x363943C", VA = "0x363943C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public AnimationCurve customNormalInterpolation
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x3639474", Offset = "0x3639474", VA = "0x3639474")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0x3639490", Offset = "0x3639490", VA = "0x3639490")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public int iterations
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0x36394C8", Offset = "0x36394C8", VA = "0x36394C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C1")]
		public double moveStep
		{
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0x3636B08", Offset = "0x3636B08", VA = "0x3636B08")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001C2")]
		public bool isClosed
		{
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x36309D0", Offset = "0x36309D0", VA = "0x36309D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C3")]
		public int pointCount
		{
			[Token(Token = "0x6000C30")]
			[Address(RVA = "0x36369BC", Offset = "0x36369BC", VA = "0x36369BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C4")]
		public Morph morph
		{
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0x36394E0", Offset = "0x36394E0", VA = "0x36394E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		public NodeLink[] nodeLinks
		{
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0x3639600", Offset = "0x3639600", VA = "0x3639600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public bool hasMorph
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0x3639608", Offset = "0x3639608", VA = "0x3639608")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C7")]
		public UnityEngine.Vector3 position
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x3639648", Offset = "0x3639648", VA = "0x3639648")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170001C8")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x3639684", Offset = "0x3639684", VA = "0x3639684")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001C9")]
		public UnityEngine.Vector3 scale
		{
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0x36396C0", Offset = "0x36396C0", VA = "0x36396C0")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170001CA")]
		public int subscriberCount
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x36396FC", Offset = "0x36396FC", VA = "0x36396FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000007")]
		public event EmptySplineHandler onRebuild
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x3639718", Offset = "0x3639718", VA = "0x3639718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170149C", Offset = "0x170149C")]
			add
			{
			}
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x36397BC", Offset = "0x36397BC", VA = "0x36397BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17014AC", Offset = "0x17014AC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x3639860", Offset = "0x3639860", VA = "0x3639860")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x36398E8", Offset = "0x36398E8", VA = "0x36398E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x3639B5C", Offset = "0x3639B5C", VA = "0x3639B5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x3639930", Offset = "0x3639930", VA = "0x3639930")]
		private void Run()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x3639D5C", Offset = "0x3639D5C", VA = "0x3639D5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x3639D40", Offset = "0x3639D40", VA = "0x3639D40")]
		public void ResampleTransform()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x3639D74", Offset = "0x3639D74", VA = "0x3639D74")]
		public void Subscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x3639F78", Offset = "0x3639F78", VA = "0x3639F78")]
		public void Unsubscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x363A168", Offset = "0x363A168", VA = "0x363A168")]
		public bool IsSubscribed(SplineUser user)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x363A240", Offset = "0x363A240", VA = "0x363A240")]
		public SplineUser[] GetSubscribers()
		{
			return null;
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x363A248", Offset = "0x363A248", VA = "0x363A248")]
		public void AddNodeLink(Node node, int pointIndex)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x363A7A8", Offset = "0x363A7A8", VA = "0x363A7A8")]
		public void RemoveNodeLink(int pointIndex)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x363ACE0", Offset = "0x363ACE0", VA = "0x363ACE0")]
		public SplinePoint[] GetPoints(Space getSpace = Space.World)
		{
			return null;
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x363B090", Offset = "0x363B090", VA = "0x363B090")]
		public SplinePoint GetPoint(int index, Space getSpace = Space.World)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x363B23C", Offset = "0x363B23C", VA = "0x363B23C")]
		public UnityEngine.Vector3 GetPointPosition(int index, Space getSpace = Space.World)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x363B2C8", Offset = "0x363B2C8", VA = "0x363B2C8")]
		public UnityEngine.Vector3 GetPointNormal(int index, Space getSpace = Space.World)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x363B358", Offset = "0x363B358", VA = "0x363B358")]
		public UnityEngine.Vector3 GetPointTangent(int index, Space getSpace = Space.World)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x363B3E4", Offset = "0x363B3E4", VA = "0x363B3E4")]
		public UnityEngine.Vector3 GetPointTangent2(int index, Space getSpace = Space.World)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x363B470", Offset = "0x363B470", VA = "0x363B470")]
		public float GetPointSize(int index, Space getSpace = Space.World)
		{
			return default(float);
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x363B4B8", Offset = "0x363B4B8", VA = "0x363B4B8")]
		public Color GetPointColor(int index, Space getSpace = Space.World)
		{
			return default(Color);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x3630344", Offset = "0x3630344", VA = "0x3630344")]
		public void SetPoints(SplinePoint[] points, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x363B938", Offset = "0x363B938", VA = "0x363B938")]
		public void SetPointPosition(int index, UnityEngine.Vector3 pos, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x363BC78", Offset = "0x363BC78", VA = "0x363BC78")]
		public void SetPointTangents(int index, UnityEngine.Vector3 tan1, UnityEngine.Vector3 tan2, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x363BF5C", Offset = "0x363BF5C", VA = "0x363BF5C")]
		public void SetPointNormal(int index, UnityEngine.Vector3 nrm, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x363C114", Offset = "0x363C114", VA = "0x363C114")]
		public void SetPointSize(int index, float size)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x363C1E8", Offset = "0x363C1E8", VA = "0x363C1E8")]
		public void SetPointColor(int index, Color color)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x363C31C", Offset = "0x363C31C", VA = "0x363C31C")]
		public void SetPoint(int index, SplinePoint point, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x363BAF0", Offset = "0x363BAF0", VA = "0x363BAF0")]
		private void AppendPoints(int count)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x363C79C", Offset = "0x363C79C", VA = "0x363C79C")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x36374F4", Offset = "0x36374F4", VA = "0x36374F4")]
		public UnityEngine.Vector3 EvaluatePosition(double percent)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x363C7D0", Offset = "0x363C7D0", VA = "0x363C7D0")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x363C84C", Offset = "0x363C84C", VA = "0x363C84C")]
		public SplineResult Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x363C8E4", Offset = "0x363C8E4", VA = "0x363C8E4")]
		public void Evaluate(SplineResult result, int pointIndex)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x36371FC", Offset = "0x36371FC", VA = "0x36371FC")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x363C9B8", Offset = "0x363C9B8", VA = "0x363C9B8")]
		public void Evaluate(ref SplineResult[] samples, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x363CA44", Offset = "0x363CA44", VA = "0x363CA44")]
		public void EvaluatePositions(ref UnityEngine.Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x363CAF8", Offset = "0x363CAF8", VA = "0x363CAF8")]
		public double Travel(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x363C934", Offset = "0x363C934", VA = "0x363C934")]
		private void TransformResult(SplineResult result)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x3639390", Offset = "0x3639390", VA = "0x3639390")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x363CD6C", Offset = "0x363CD6C", VA = "0x363CD6C")]
		public void RebuildImmediate()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x363CF48", Offset = "0x363CF48", VA = "0x363CF48")]
		private void RemoveSubscriber(int index)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x363999C", Offset = "0x363999C", VA = "0x363999C")]
		private void RebuildOnUpdate()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x363D0A0", Offset = "0x363D0A0", VA = "0x363D0A0")]
		public void RebuildConnectedUsers()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x363D0A4", Offset = "0x363D0A4", VA = "0x363D0A4")]
		private void RebuildUser(int index)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x3637AEC", Offset = "0x3637AEC", VA = "0x3637AEC")]
		public double Project(UnityEngine.Vector3 point, int subdivide = 3, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x3630A10", Offset = "0x3630A10", VA = "0x3630A10")]
		public void Break()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x363D1CC", Offset = "0x363D1CC", VA = "0x363D1CC")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x36308D4", Offset = "0x36308D4", VA = "0x36308D4")]
		public void Close()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x363D21C", Offset = "0x363D21C", VA = "0x363D21C")]
		public void ConvertToBezier()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x3637E7C", Offset = "0x3637E7C", VA = "0x3637E7C")]
		public float CalculateLength(double from = 0.0, double to = 1.0, double resolution = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x363D234", Offset = "0x363D234", VA = "0x363D234")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x363D48C", Offset = "0x363D48C", VA = "0x363D48C")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x363D884", Offset = "0x363D884", VA = "0x363D884")]
		public int[] GetAvailableNodeLinksAtPosition(double percent, Spline.Direction direction)
		{
			return null;
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x363D9B8", Offset = "0x363D9B8", VA = "0x363D9B8")]
		public void GetConnectedComputers(List<SplineComputer> computers, List<int> connectionIndices, List<int> connectedIndices, double percent, Spline.Direction direction, bool includeEqual)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x363DD00", Offset = "0x363DD00", VA = "0x363DD00")]
		public void SetMorphState(int index)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x363DE58", Offset = "0x363DE58", VA = "0x363DE58")]
		public void SetMorphState(string morphName)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x363E0CC", Offset = "0x363E0CC", VA = "0x363E0CC")]
		public void SetMorphState(int index, float percent)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x363E250", Offset = "0x363E250", VA = "0x363E250")]
		public void SetMorphState(string morphName, float percent)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x363E3BC", Offset = "0x363E3BC", VA = "0x363E3BC")]
		public void SetMorphState(float percent)
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x363E4B0", Offset = "0x363E4B0", VA = "0x363E4B0")]
		public List<SplineComputer> GetConnectedComputers()
		{
			return null;
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x363E560", Offset = "0x363E560", VA = "0x363E560")]
		private void GetConnectedComputers(ref List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x363A92C", Offset = "0x363A92C", VA = "0x363A92C")]
		private void RemoveNodeLinkAt(int index)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x363BBA8", Offset = "0x363BBA8", VA = "0x363BBA8")]
		private void SetNodeForPoint(int index, SplinePoint worldPoint)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x363B6DC", Offset = "0x363B6DC", VA = "0x363B6DC")]
		private void UpdateConnectedNodes(SplinePoint[] worldPoints)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x3639BA0", Offset = "0x3639BA0", VA = "0x3639BA0")]
		private void UpdateConnectedNodes()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x363AEB8", Offset = "0x363AEB8", VA = "0x363AEB8")]
		public UnityEngine.Vector3 TransformPoint(UnityEngine.Vector3 point)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x363B504", Offset = "0x363B504", VA = "0x363B504")]
		public UnityEngine.Vector3 InverseTransformPoint(UnityEngine.Vector3 point)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x363AFA4", Offset = "0x363AFA4", VA = "0x363AFA4")]
		public UnityEngine.Vector3 TransformDirection(UnityEngine.Vector3 direction)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x363B5F0", Offset = "0x363B5F0", VA = "0x363B5F0")]
		public UnityEngine.Vector3 InverseTransformDirection(UnityEngine.Vector3 direction)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x363E80C", Offset = "0x363E80C", VA = "0x363E80C")]
		public SplineComputer()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public delegate void SplineReachHandler();
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7004", Offset = "0x16E7004")]
	public class SplineFollower : SplineTracer
	{
		[Token(Token = "0x20004C9")]
		public enum FollowMode
		{
			[Token(Token = "0x4001D25")]
			Uniform,
			[Token(Token = "0x4001D26")]
			Time
		}

		[Token(Token = "0x20004CA")]
		public enum Wrap
		{
			[Token(Token = "0x4001D28")]
			Default,
			[Token(Token = "0x4001D29")]
			Loop,
			[Token(Token = "0x4001D2A")]
			PingPong
		}

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[HideInInspector]
		public FollowMode followMode;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public bool autoStartPosition;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		[HideInInspector]
		public bool autoFollow;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private float _followSpeed;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[HideInInspector]
		private float _followDuration;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private double lastClippedPercent;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private SplineResult from;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private SplineResult to;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool followStarted;

		[Token(Token = "0x170001CB")]
		public float followSpeed
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x363F894", Offset = "0x363F894", VA = "0x363F894")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0x363F89C", Offset = "0x363F89C", VA = "0x363F89C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public float followDuration
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x363F8B8", Offset = "0x363F8B8", VA = "0x363F8B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x363F8C0", Offset = "0x363F8C0", VA = "0x363F8C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1707F58", Offset = "0x1707F58")]
		public SplineResult followResult
		{
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x363F8DC", Offset = "0x363F8DC", VA = "0x363F8DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1707F90", Offset = "0x1707F90")]
		public SplineResult offsettedFollowResult
		{
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x363F8E4", Offset = "0x363F8E4", VA = "0x363F8E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000008")]
		public event SplineReachHandler onEndReached
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x363F8EC", Offset = "0x363F8EC", VA = "0x363F8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17014BC", Offset = "0x17014BC")]
			add
			{
			}
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x363F994", Offset = "0x363F994", VA = "0x363F994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17014CC", Offset = "0x17014CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event SplineReachHandler onBeginningReached
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x363FA3C", Offset = "0x363FA3C", VA = "0x363FA3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17014DC", Offset = "0x17014DC")]
			add
			{
			}
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x363FAE4", Offset = "0x363FAE4", VA = "0x363FAE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17014EC", Offset = "0x17014EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x363FB8C", Offset = "0x363FB8C", VA = "0x363FB8C", Slot = "29")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x363FC28", Offset = "0x363FC28", VA = "0x363FC28", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x363FD5C", Offset = "0x363FD5C", VA = "0x363FD5C", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x363FC64", Offset = "0x363FC64", VA = "0x363FC64")]
		private void AutoFollow()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x3640C7C", Offset = "0x3640C7C", VA = "0x3640C7C")]
		public void Restart(double startPosition = 0.0)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x3640CC8", Offset = "0x3640CC8", VA = "0x3640CC8", Slot = "30")]
		public override void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x3640D30", Offset = "0x3640D30", VA = "0x3640D30", Slot = "31")]
		public override void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x36408D0", Offset = "0x36408D0", VA = "0x36408D0")]
		public void Move(double percent)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x363FDE8", Offset = "0x363FDE8", VA = "0x363FDE8")]
		public void Move(float distance)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x3640DBC", Offset = "0x3640DBC", VA = "0x3640DBC")]
		public SplineFollower()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E703C", Offset = "0x16E703C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E703C", Offset = "0x16E703C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E703C", Offset = "0x16E703C")]
	public class SplineMesh : MeshGenerator
	{
		[Serializable]
		[Token(Token = "0x20004CB")]
		public class Channel
		{
			[Token(Token = "0x200061B")]
			public delegate float FloatHandler(double percent);

			[Token(Token = "0x200061C")]
			public delegate Vector2 Vector2Handler(double percent);

			[Token(Token = "0x200061D")]
			public delegate UnityEngine.Vector3 Vector3Handler(double percent);

			[Token(Token = "0x200061E")]
			public delegate Quaternion QuaternionHandler(double percent);

			[Token(Token = "0x200061F")]
			public enum Type
			{
				[Token(Token = "0x40022D6")]
				Extrude,
				[Token(Token = "0x40022D7")]
				Place
			}

			[Token(Token = "0x2000620")]
			public enum UVOverride
			{
				[Token(Token = "0x40022D9")]
				None,
				[Token(Token = "0x40022DA")]
				ClampU,
				[Token(Token = "0x40022DB")]
				ClampV,
				[Token(Token = "0x40022DC")]
				UniformU,
				[Token(Token = "0x40022DD")]
				UniformV
			}

			[Serializable]
			[Token(Token = "0x2000621")]
			public class MeshDefinition
			{
				[Token(Token = "0x2000632")]
				public enum MirrorMethod
				{
					[Token(Token = "0x4002336")]
					None,
					[Token(Token = "0x4002337")]
					X,
					[Token(Token = "0x4002338")]
					Y,
					[Token(Token = "0x4002339")]
					Z
				}

				[Serializable]
				[Token(Token = "0x2000633")]
				public class Submesh
				{
					[Token(Token = "0x400233A")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public int[] triangles;

					[Token(Token = "0x600249F")]
					[Address(RVA = "0x3711998", Offset = "0x3711998", VA = "0x3711998")]
					public Submesh()
					{
					}

					[Token(Token = "0x60024A0")]
					[Address(RVA = "0x370F654", Offset = "0x370F654", VA = "0x370F654")]
					public Submesh(int[] input)
					{
					}
				}

				[Serializable]
				[Token(Token = "0x2000634")]
				public class VertexGroup
				{
					[Token(Token = "0x400233B")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public float value;

					[Token(Token = "0x400233C")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					public double percent;

					[Token(Token = "0x400233D")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
					public int[] ids;

					[Token(Token = "0x60024A1")]
					[Address(RVA = "0x3711888", Offset = "0x3711888", VA = "0x3711888")]
					public VertexGroup(float val, double perc, int[] vertIds)
					{
					}

					[Token(Token = "0x60024A2")]
					[Address(RVA = "0x37118D4", Offset = "0x37118D4", VA = "0x37118D4")]
					public void AddId(int id)
					{
					}
				}

				[Token(Token = "0x40022DE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[SerializeField]
				[HideInInspector]
				internal UnityEngine.Vector3[] vertices;

				[Token(Token = "0x40022DF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[SerializeField]
				[HideInInspector]
				internal UnityEngine.Vector3[] normals;

				[Token(Token = "0x40022E0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				[SerializeField]
				[HideInInspector]
				internal Vector4[] tangents;

				[Token(Token = "0x40022E1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				[SerializeField]
				[HideInInspector]
				internal Color[] colors;

				[Token(Token = "0x40022E2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv;

				[Token(Token = "0x40022E3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv2;

				[Token(Token = "0x40022E4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv3;

				[Token(Token = "0x40022E5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv4;

				[Token(Token = "0x40022E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				[SerializeField]
				[HideInInspector]
				internal int[] triangles;

				[Token(Token = "0x40022E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				[SerializeField]
				[HideInInspector]
				internal List<Submesh> subMeshes;

				[Token(Token = "0x40022E8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				[SerializeField]
				[HideInInspector]
				internal TS_Bounds bounds;

				[Token(Token = "0x40022E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				[SerializeField]
				[HideInInspector]
				internal List<VertexGroup> vertexGroups;

				[Token(Token = "0x40022EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				[SerializeField]
				[HideInInspector]
				private Mesh _mesh;

				[Token(Token = "0x40022EB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				[SerializeField]
				[HideInInspector]
				private UnityEngine.Vector3 _rotation;

				[Token(Token = "0x40022EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _offset;

				[Token(Token = "0x40022ED")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
				[SerializeField]
				[HideInInspector]
				private UnityEngine.Vector3 _scale;

				[Token(Token = "0x40022EE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _uvScale;

				[Token(Token = "0x40022EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _uvOffset;

				[Token(Token = "0x40022F0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
				[SerializeField]
				[HideInInspector]
				private float _uvRotation;

				[Token(Token = "0x40022F1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
				[SerializeField]
				[HideInInspector]
				private MirrorMethod _mirror;

				[Token(Token = "0x40022F2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
				[SerializeField]
				[HideInInspector]
				private bool _flipFaces;

				[Token(Token = "0x40022F3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
				[SerializeField]
				[HideInInspector]
				private bool _doubleSided;

				[Token(Token = "0x17000543")]
				public Mesh mesh
				{
					[Token(Token = "0x6002467")]
					[Address(RVA = "0x370DF7C", Offset = "0x370DF7C", VA = "0x370DF7C")]
					get
					{
						return null;
					}
					[Token(Token = "0x6002468")]
					[Address(RVA = "0x370DF84", Offset = "0x370DF84", VA = "0x370DF84")]
					set
					{
					}
				}

				[Token(Token = "0x17000544")]
				public UnityEngine.Vector3 rotation
				{
					[Token(Token = "0x6002469")]
					[Address(RVA = "0x370E9A4", Offset = "0x370E9A4", VA = "0x370E9A4")]
					get
					{
						return default(UnityEngine.Vector3);
					}
					[Token(Token = "0x600246A")]
					[Address(RVA = "0x370E9B0", Offset = "0x370E9B0", VA = "0x370E9B0")]
					set
					{
					}
				}

				[Token(Token = "0x17000545")]
				public Vector2 offset
				{
					[Token(Token = "0x600246B")]
					[Address(RVA = "0x370EA84", Offset = "0x370EA84", VA = "0x370EA84")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x600246C")]
					[Address(RVA = "0x370EA8C", Offset = "0x370EA8C", VA = "0x370EA8C")]
					set
					{
					}
				}

				[Token(Token = "0x17000546")]
				public UnityEngine.Vector3 scale
				{
					[Token(Token = "0x600246D")]
					[Address(RVA = "0x370EB40", Offset = "0x370EB40", VA = "0x370EB40")]
					get
					{
						return default(UnityEngine.Vector3);
					}
					[Token(Token = "0x600246E")]
					[Address(RVA = "0x370EB4C", Offset = "0x370EB4C", VA = "0x370EB4C")]
					set
					{
					}
				}

				[Token(Token = "0x17000547")]
				public Vector2 uvScale
				{
					[Token(Token = "0x600246F")]
					[Address(RVA = "0x370EC20", Offset = "0x370EC20", VA = "0x370EC20")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6002470")]
					[Address(RVA = "0x370EC28", Offset = "0x370EC28", VA = "0x370EC28")]
					set
					{
					}
				}

				[Token(Token = "0x17000548")]
				public Vector2 uvOffset
				{
					[Token(Token = "0x6002471")]
					[Address(RVA = "0x370ECDC", Offset = "0x370ECDC", VA = "0x370ECDC")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6002472")]
					[Address(RVA = "0x370ECE4", Offset = "0x370ECE4", VA = "0x370ECE4")]
					set
					{
					}
				}

				[Token(Token = "0x17000549")]
				public float uvRotation
				{
					[Token(Token = "0x6002473")]
					[Address(RVA = "0x370ED98", Offset = "0x370ED98", VA = "0x370ED98")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x6002474")]
					[Address(RVA = "0x370EDA0", Offset = "0x370EDA0", VA = "0x370EDA0")]
					set
					{
					}
				}

				[Token(Token = "0x1700054A")]
				public MirrorMethod mirror
				{
					[Token(Token = "0x6002475")]
					[Address(RVA = "0x370EDB8", Offset = "0x370EDB8", VA = "0x370EDB8")]
					get
					{
						return default(MirrorMethod);
					}
					[Token(Token = "0x6002476")]
					[Address(RVA = "0x370EDC0", Offset = "0x370EDC0", VA = "0x370EDC0")]
					set
					{
					}
				}

				[Token(Token = "0x1700054B")]
				public bool flipFaces
				{
					[Token(Token = "0x6002477")]
					[Address(RVA = "0x370EDD8", Offset = "0x370EDD8", VA = "0x370EDD8")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6002478")]
					[Address(RVA = "0x370EDE0", Offset = "0x370EDE0", VA = "0x370EDE0")]
					set
					{
					}
				}

				[Token(Token = "0x1700054C")]
				public bool doubleSided
				{
					[Token(Token = "0x6002479")]
					[Address(RVA = "0x370EE04", Offset = "0x370EE04", VA = "0x370EE04")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x600247A")]
					[Address(RVA = "0x370EE0C", Offset = "0x370EE0C", VA = "0x370EE0C")]
					set
					{
					}
				}

				[Token(Token = "0x600247B")]
				[Address(RVA = "0x370EE30", Offset = "0x370EE30", VA = "0x370EE30")]
				internal MeshDefinition Copy()
				{
					return null;
				}

				[Token(Token = "0x600247C")]
				[Address(RVA = "0x370F34C", Offset = "0x370F34C", VA = "0x370F34C")]
				public MeshDefinition(Mesh input)
				{
				}

				[Token(Token = "0x600247D")]
				[Address(RVA = "0x370E030", Offset = "0x370E030", VA = "0x370E030")]
				public void Refresh()
				{
				}

				[Token(Token = "0x600247E")]
				[Address(RVA = "0x370FDDC", Offset = "0x370FDDC", VA = "0x370FDDC")]
				private void FlipFaces()
				{
				}

				[Token(Token = "0x600247F")]
				[Address(RVA = "0x370FAEC", Offset = "0x370FAEC", VA = "0x370FAEC")]
				private void DoubleSided()
				{
				}

				[Token(Token = "0x6002480")]
				[Address(RVA = "0x37108B8", Offset = "0x37108B8", VA = "0x37108B8")]
				public void Write(TS_Mesh target, int forceMaterialId = -1)
				{
				}

				[Token(Token = "0x6002481")]
				[Address(RVA = "0x37103D4", Offset = "0x37103D4", VA = "0x37103D4")]
				private void CalculateBounds()
				{
				}

				[Token(Token = "0x6002482")]
				[Address(RVA = "0x370F708", Offset = "0x370F708", VA = "0x370F708")]
				private void Mirror()
				{
				}

				[Token(Token = "0x6002483")]
				[Address(RVA = "0x370FF10", Offset = "0x370FF10", VA = "0x370FF10")]
				private void TransformVertices()
				{
				}

				[Token(Token = "0x6002484")]
				[Address(RVA = "0x3710530", Offset = "0x3710530", VA = "0x3710530")]
				private void GroupVertices()
				{
				}

				[Token(Token = "0x6002485")]
				[Address(RVA = "0x371176C", Offset = "0x371176C", VA = "0x371176C")]
				private int FindInsertIndex(UnityEngine.Vector3 pos, float value)
				{
					return default(int);
				}

				[Token(Token = "0x6002486")]
				[Address(RVA = "0x3711048", Offset = "0x3711048", VA = "0x3711048")]
				private void CalculateTangents()
				{
				}
			}

			[Token(Token = "0x4001D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private System.Random iterationRandom;

			[Token(Token = "0x4001D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			private int _iterationSeed;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private int _offsetSeed;

			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private System.Random offsetRandom;

			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2Handler _offsetHandler;

			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[HideInInspector]
			private int _rotationSeed;

			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private System.Random rotationRandom;

			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private QuaternionHandler _placeRotationHandler;

			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FloatHandler _extrudeRotationHandler;

			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			[HideInInspector]
			private int _scaleSeed;

			[Token(Token = "0x4001D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private System.Random scaleRandom;

			[Token(Token = "0x4001D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3Handler _scaleHandler;

			[Token(Token = "0x4001D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			internal SplineMesh owner;

			[Token(Token = "0x4001D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			[HideInInspector]
			private List<MeshDefinition> meshes;

			[Token(Token = "0x4001D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			[HideInInspector]
			private double _clipFrom;

			[Token(Token = "0x4001D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			[HideInInspector]
			private double _clipTo;

			[Token(Token = "0x4001D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOrder;

			[Token(Token = "0x4001D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[SerializeField]
			[HideInInspector]
			private UVOverride _overrideUVs;

			[Token(Token = "0x4001D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvScale;

			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvOffset;

			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			[HideInInspector]
			private bool _overrideNormal;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[SerializeField]
			[HideInInspector]
			private UnityEngine.Vector3 _customNormal;

			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			[HideInInspector]
			private Type _type;

			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[SerializeField]
			[HideInInspector]
			private int _count;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			[HideInInspector]
			private double _spacing;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[SerializeField]
			[HideInInspector]
			private bool _randomRotation;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[SerializeField]
			[HideInInspector]
			private UnityEngine.Vector3 _minRotation;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[SerializeField]
			[HideInInspector]
			private UnityEngine.Vector3 _maxRotation;

			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOffset;

			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _minOffset;

			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _maxOffset;

			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[SerializeField]
			[HideInInspector]
			private bool _randomScale;

			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
			[SerializeField]
			[HideInInspector]
			private bool _uniformRandomScale;

			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[SerializeField]
			[HideInInspector]
			private UnityEngine.Vector3 _minScale;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[SerializeField]
			[HideInInspector]
			private UnityEngine.Vector3 _maxScale;

			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private int iterator;

			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[SerializeField]
			[HideInInspector]
			private bool _overrideMaterialID;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
			[SerializeField]
			[HideInInspector]
			private int _targetMaterialID;

			[Token(Token = "0x1700047B")]
			public double clipFrom
			{
				[Token(Token = "0x6001FE6")]
				[Address(RVA = "0x36438B0", Offset = "0x36438B0", VA = "0x36438B0")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6001FE7")]
				[Address(RVA = "0x36438B8", Offset = "0x36438B8", VA = "0x36438B8")]
				set
				{
				}
			}

			[Token(Token = "0x1700047C")]
			public double clipTo
			{
				[Token(Token = "0x6001FE8")]
				[Address(RVA = "0x364396C", Offset = "0x364396C", VA = "0x364396C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6001FE9")]
				[Address(RVA = "0x3643974", Offset = "0x3643974", VA = "0x3643974")]
				set
				{
				}
			}

			[Token(Token = "0x1700047D")]
			public bool randomOffset
			{
				[Token(Token = "0x6001FEA")]
				[Address(RVA = "0x364398C", Offset = "0x364398C", VA = "0x364398C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001FEB")]
				[Address(RVA = "0x3643994", Offset = "0x3643994", VA = "0x3643994")]
				set
				{
				}
			}

			[Token(Token = "0x1700047E")]
			public Vector2Handler offsetHandler
			{
				[Token(Token = "0x6001FEC")]
				[Address(RVA = "0x36439B8", Offset = "0x36439B8", VA = "0x36439B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001FED")]
				[Address(RVA = "0x36439C0", Offset = "0x36439C0", VA = "0x36439C0")]
				set
				{
				}
			}

			[Token(Token = "0x1700047F")]
			public bool overrideMaterialID
			{
				[Token(Token = "0x6001FEE")]
				[Address(RVA = "0x3643A28", Offset = "0x3643A28", VA = "0x3643A28")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001FEF")]
				[Address(RVA = "0x3643A30", Offset = "0x3643A30", VA = "0x3643A30")]
				set
				{
				}
			}

			[Token(Token = "0x17000480")]
			public int targetMaterialID
			{
				[Token(Token = "0x6001FF0")]
				[Address(RVA = "0x3643A54", Offset = "0x3643A54", VA = "0x3643A54")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001FF1")]
				[Address(RVA = "0x3643A5C", Offset = "0x3643A5C", VA = "0x3643A5C")]
				set
				{
				}
			}

			[Token(Token = "0x17000481")]
			public bool randomRotation
			{
				[Token(Token = "0x6001FF2")]
				[Address(RVA = "0x3643A74", Offset = "0x3643A74", VA = "0x3643A74")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001FF3")]
				[Address(RVA = "0x3643A7C", Offset = "0x3643A7C", VA = "0x3643A7C")]
				set
				{
				}
			}

			[Token(Token = "0x17000482")]
			public QuaternionHandler placeRotationHandler
			{
				[Token(Token = "0x6001FF4")]
				[Address(RVA = "0x3643AA0", Offset = "0x3643AA0", VA = "0x3643AA0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001FF5")]
				[Address(RVA = "0x3643AA8", Offset = "0x3643AA8", VA = "0x3643AA8")]
				set
				{
				}
			}

			[Token(Token = "0x17000483")]
			public FloatHandler extrudeRotationHandler
			{
				[Token(Token = "0x6001FF6")]
				[Address(RVA = "0x3643B10", Offset = "0x3643B10", VA = "0x3643B10")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001FF7")]
				[Address(RVA = "0x3643B18", Offset = "0x3643B18", VA = "0x3643B18")]
				set
				{
				}
			}

			[Token(Token = "0x17000484")]
			public bool randomScale
			{
				[Token(Token = "0x6001FF8")]
				[Address(RVA = "0x3643B80", Offset = "0x3643B80", VA = "0x3643B80")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001FF9")]
				[Address(RVA = "0x3643B88", Offset = "0x3643B88", VA = "0x3643B88")]
				set
				{
				}
			}

			[Token(Token = "0x17000485")]
			public Vector3Handler scaleHandler
			{
				[Token(Token = "0x6001FFA")]
				[Address(RVA = "0x3643BAC", Offset = "0x3643BAC", VA = "0x3643BAC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001FFB")]
				[Address(RVA = "0x3643BB4", Offset = "0x3643BB4", VA = "0x3643BB4")]
				set
				{
				}
			}

			[Token(Token = "0x17000486")]
			public bool uniformRandomScale
			{
				[Token(Token = "0x6001FFC")]
				[Address(RVA = "0x3643C1C", Offset = "0x3643C1C", VA = "0x3643C1C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001FFD")]
				[Address(RVA = "0x3643C24", Offset = "0x3643C24", VA = "0x3643C24")]
				set
				{
				}
			}

			[Token(Token = "0x17000487")]
			public int offsetSeed
			{
				[Token(Token = "0x6001FFE")]
				[Address(RVA = "0x3643C48", Offset = "0x3643C48", VA = "0x3643C48")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001FFF")]
				[Address(RVA = "0x3643C50", Offset = "0x3643C50", VA = "0x3643C50")]
				set
				{
				}
			}

			[Token(Token = "0x17000488")]
			public int rotationSeed
			{
				[Token(Token = "0x6002000")]
				[Address(RVA = "0x3643C68", Offset = "0x3643C68", VA = "0x3643C68")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002001")]
				[Address(RVA = "0x3643C70", Offset = "0x3643C70", VA = "0x3643C70")]
				set
				{
				}
			}

			[Token(Token = "0x17000489")]
			public int scaleSeed
			{
				[Token(Token = "0x6002002")]
				[Address(RVA = "0x3643C88", Offset = "0x3643C88", VA = "0x3643C88")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002003")]
				[Address(RVA = "0x3643C90", Offset = "0x3643C90", VA = "0x3643C90")]
				set
				{
				}
			}

			[Token(Token = "0x1700048A")]
			public double spacing
			{
				[Token(Token = "0x6002004")]
				[Address(RVA = "0x3643CA8", Offset = "0x3643CA8", VA = "0x3643CA8")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002005")]
				[Address(RVA = "0x3643CB0", Offset = "0x3643CB0", VA = "0x3643CB0")]
				set
				{
				}
			}

			[Token(Token = "0x1700048B")]
			public Vector2 minOffset
			{
				[Token(Token = "0x6002006")]
				[Address(RVA = "0x3643CC8", Offset = "0x3643CC8", VA = "0x3643CC8")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002007")]
				[Address(RVA = "0x3643CD0", Offset = "0x3643CD0", VA = "0x3643CD0")]
				set
				{
				}
			}

			[Token(Token = "0x1700048C")]
			public Vector2 maxOffset
			{
				[Token(Token = "0x6002008")]
				[Address(RVA = "0x3643D84", Offset = "0x3643D84", VA = "0x3643D84")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002009")]
				[Address(RVA = "0x3643D8C", Offset = "0x3643D8C", VA = "0x3643D8C")]
				set
				{
				}
			}

			[Token(Token = "0x1700048D")]
			public UnityEngine.Vector3 minRotation
			{
				[Token(Token = "0x600200A")]
				[Address(RVA = "0x3643E40", Offset = "0x3643E40", VA = "0x3643E40")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x600200B")]
				[Address(RVA = "0x3643E4C", Offset = "0x3643E4C", VA = "0x3643E4C")]
				set
				{
				}
			}

			[Token(Token = "0x1700048E")]
			public UnityEngine.Vector3 maxRotation
			{
				[Token(Token = "0x600200C")]
				[Address(RVA = "0x3643F20", Offset = "0x3643F20", VA = "0x3643F20")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x600200D")]
				[Address(RVA = "0x3643F2C", Offset = "0x3643F2C", VA = "0x3643F2C")]
				set
				{
				}
			}

			[Token(Token = "0x1700048F")]
			public UnityEngine.Vector3 minScale
			{
				[Token(Token = "0x600200E")]
				[Address(RVA = "0x3644000", Offset = "0x3644000", VA = "0x3644000")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x600200F")]
				[Address(RVA = "0x364400C", Offset = "0x364400C", VA = "0x364400C")]
				set
				{
				}
			}

			[Token(Token = "0x17000490")]
			public UnityEngine.Vector3 maxScale
			{
				[Token(Token = "0x6002010")]
				[Address(RVA = "0x36440E0", Offset = "0x36440E0", VA = "0x36440E0")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x6002011")]
				[Address(RVA = "0x36440F0", Offset = "0x36440F0", VA = "0x36440F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000491")]
			public Type type
			{
				[Token(Token = "0x6002012")]
				[Address(RVA = "0x36441CC", Offset = "0x36441CC", VA = "0x36441CC")]
				get
				{
					return default(Type);
				}
				[Token(Token = "0x6002013")]
				[Address(RVA = "0x36441D4", Offset = "0x36441D4", VA = "0x36441D4")]
				set
				{
				}
			}

			[Token(Token = "0x17000492")]
			public bool randomOrder
			{
				[Token(Token = "0x6002014")]
				[Address(RVA = "0x36441EC", Offset = "0x36441EC", VA = "0x36441EC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002015")]
				[Address(RVA = "0x36441F4", Offset = "0x36441F4", VA = "0x36441F4")]
				set
				{
				}
			}

			[Token(Token = "0x17000493")]
			public int randomSeed
			{
				[Token(Token = "0x6002016")]
				[Address(RVA = "0x3644218", Offset = "0x3644218", VA = "0x3644218")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002017")]
				[Address(RVA = "0x3644220", Offset = "0x3644220", VA = "0x3644220")]
				set
				{
				}
			}

			[Token(Token = "0x17000494")]
			public int count
			{
				[Token(Token = "0x6002018")]
				[Address(RVA = "0x3644240", Offset = "0x3644240", VA = "0x3644240")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002019")]
				[Address(RVA = "0x3644248", Offset = "0x3644248", VA = "0x3644248")]
				set
				{
				}
			}

			[Token(Token = "0x17000495")]
			public UVOverride overrideUVs
			{
				[Token(Token = "0x600201A")]
				[Address(RVA = "0x3644268", Offset = "0x3644268", VA = "0x3644268")]
				get
				{
					return default(UVOverride);
				}
				[Token(Token = "0x600201B")]
				[Address(RVA = "0x3644270", Offset = "0x3644270", VA = "0x3644270")]
				set
				{
				}
			}

			[Token(Token = "0x17000496")]
			public Vector2 uvOffset
			{
				[Token(Token = "0x600201C")]
				[Address(RVA = "0x3644288", Offset = "0x3644288", VA = "0x3644288")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x600201D")]
				[Address(RVA = "0x3644290", Offset = "0x3644290", VA = "0x3644290")]
				set
				{
				}
			}

			[Token(Token = "0x17000497")]
			public Vector2 uvScale
			{
				[Token(Token = "0x600201E")]
				[Address(RVA = "0x3644344", Offset = "0x3644344", VA = "0x3644344")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x600201F")]
				[Address(RVA = "0x364434C", Offset = "0x364434C", VA = "0x364434C")]
				set
				{
				}
			}

			[Token(Token = "0x17000498")]
			public bool overrideNormal
			{
				[Token(Token = "0x6002020")]
				[Address(RVA = "0x3644400", Offset = "0x3644400", VA = "0x3644400")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002021")]
				[Address(RVA = "0x3644408", Offset = "0x3644408", VA = "0x3644408")]
				set
				{
				}
			}

			[Token(Token = "0x17000499")]
			public UnityEngine.Vector3 customNormal
			{
				[Token(Token = "0x6002022")]
				[Address(RVA = "0x364442C", Offset = "0x364442C", VA = "0x364442C")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x6002023")]
				[Address(RVA = "0x3644438", Offset = "0x3644438", VA = "0x3644438")]
				set
				{
				}
			}

			[Token(Token = "0x6002024")]
			[Address(RVA = "0x3641408", Offset = "0x3641408", VA = "0x3641408")]
			public Channel(string n, SplineMesh parent)
			{
			}

			[Token(Token = "0x6002025")]
			[Address(RVA = "0x3641208", Offset = "0x3641208", VA = "0x3641208")]
			public Channel(string n, Mesh inputMesh, SplineMesh parent)
			{
			}

			[Token(Token = "0x6002026")]
			[Address(RVA = "0x364450C", Offset = "0x364450C", VA = "0x364450C")]
			private void Init()
			{
			}

			[Token(Token = "0x6002027")]
			[Address(RVA = "0x36445FC", Offset = "0x36445FC", VA = "0x36445FC")]
			public void CopyTo(Channel target)
			{
			}

			[Token(Token = "0x6002028")]
			[Address(RVA = "0x3641E48", Offset = "0x3641E48", VA = "0x3641E48")]
			public int GetMeshCount()
			{
				return default(int);
			}

			[Token(Token = "0x6002029")]
			[Address(RVA = "0x3644804", Offset = "0x3644804", VA = "0x3644804")]
			public void SwapMeshes(int a, int b)
			{
			}

			[Token(Token = "0x600202A")]
			[Address(RVA = "0x3644924", Offset = "0x3644924", VA = "0x3644924")]
			public void DuplicateMesh(int index)
			{
			}

			[Token(Token = "0x600202B")]
			[Address(RVA = "0x36449DC", Offset = "0x36449DC", VA = "0x36449DC")]
			public MeshDefinition GetMesh(int index)
			{
				return null;
			}

			[Token(Token = "0x600202C")]
			[Address(RVA = "0x3644A54", Offset = "0x3644A54", VA = "0x3644A54")]
			public void AddMesh(Mesh input)
			{
			}

			[Token(Token = "0x600202D")]
			[Address(RVA = "0x3644AE8", Offset = "0x3644AE8", VA = "0x3644AE8")]
			public void RemoveMesh(int index)
			{
			}

			[Token(Token = "0x600202E")]
			[Address(RVA = "0x3641E98", Offset = "0x3641E98", VA = "0x3641E98")]
			public void ResetIteration()
			{
			}

			[Token(Token = "0x600202F")]
			[Address(RVA = "0x3642FE4", Offset = "0x3642FE4", VA = "0x3642FE4")]
			public Vector2 NextOffset(double percent)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002030")]
			[Address(RVA = "0x3643118", Offset = "0x3643118", VA = "0x3643118")]
			public Quaternion NextPlaceRotation(double percent)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002031")]
			[Address(RVA = "0x36436C8", Offset = "0x36436C8", VA = "0x36436C8")]
			public float NextExtrudeRotation(double percent)
			{
				return default(float);
			}

			[Token(Token = "0x6002032")]
			[Address(RVA = "0x36434D4", Offset = "0x36434D4", VA = "0x36434D4")]
			public UnityEngine.Vector3 NextExtrudeScale(double percent)
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x6002033")]
			[Address(RVA = "0x36432D8", Offset = "0x36432D8", VA = "0x36432D8")]
			public UnityEngine.Vector3 NextPlaceScale()
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x6002034")]
			[Address(RVA = "0x3642F14", Offset = "0x3642F14", VA = "0x3642F14")]
			public MeshDefinition NextMesh()
			{
				return null;
			}

			[Token(Token = "0x6002035")]
			[Address(RVA = "0x36438D0", Offset = "0x36438D0", VA = "0x36438D0")]
			internal void Rebuild()
			{
			}

			[Token(Token = "0x6002036")]
			[Address(RVA = "0x3644B58", Offset = "0x3644B58", VA = "0x3644B58")]
			private void Refresh()
			{
			}
		}

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private List<Channel> channels;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private SplineResult lastResult;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool useLastResult;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<TS_Mesh> combineMeshes;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int meshCount;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x3640E74", Offset = "0x3640E74", VA = "0x3640E74", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x3640EDC", Offset = "0x3640EDC", VA = "0x3640EDC", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x3640FC8", Offset = "0x3640FC8", VA = "0x3640FC8")]
		public void RemoveChannel(int index)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x3641044", Offset = "0x3641044", VA = "0x3641044")]
		public void SwapChannels(int a, int b)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x3641170", Offset = "0x3641170", VA = "0x3641170")]
		public Channel AddChannel(Mesh inputMesh, string name)
		{
			return null;
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x3640F38", Offset = "0x3640F38", VA = "0x3640F38")]
		public Channel AddChannel(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x36415B4", Offset = "0x36415B4", VA = "0x36415B4")]
		public int GetChannelCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x3641604", Offset = "0x3641604", VA = "0x3641604")]
		public Channel GetChannel(int index)
		{
			return null;
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x364167C", Offset = "0x364167C", VA = "0x364167C", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x36416CC", Offset = "0x36416CC", VA = "0x36416CC")]
		private void Generate()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x36428C4", Offset = "0x36428C4", VA = "0x36428C4")]
		private void Place(Channel channel, TS_Mesh target, double percent)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x3641FD4", Offset = "0x3641FD4", VA = "0x3641FD4")]
		private void Stretch(Channel channel, TS_Mesh target, double from, double to)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x36437B4", Offset = "0x36437B4", VA = "0x36437B4")]
		public SplineMesh()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E70EC", Offset = "0x16E70EC")]
	public class SplinePositioner : SplineTracer
	{
		[Token(Token = "0x20004CC")]
		public enum Mode
		{
			[Token(Token = "0x4001D53")]
			Percent,
			[Token(Token = "0x4001D54")]
			Distance
		}

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private Transform _applyTransform;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private double _position;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private float animPosition;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x170001CF")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1707FC8", Offset = "0x1707FC8")]
		public Transform applyTransform
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x371324C", Offset = "0x371324C", VA = "0x371324C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x3713374", Offset = "0x3713374", VA = "0x3713374")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public GameObject targetObject
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x371326C", Offset = "0x371326C", VA = "0x371326C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x371341C", Offset = "0x371341C", VA = "0x371341C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public double position
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x3713574", Offset = "0x3713574", VA = "0x3713574")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x371357C", Offset = "0x371357C", VA = "0x371357C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public Mode mode
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x37135CC", Offset = "0x37135CC", VA = "0x37135CC")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x37135D4", Offset = "0x37135D4", VA = "0x37135D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1708000", Offset = "0x1708000")]
		public SplineResult positionResult
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x37135F8", Offset = "0x37135F8", VA = "0x37135F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1708038", Offset = "0x1708038")]
		public SplineResult offsettedPositionResult
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x3713600", Offset = "0x3713600", VA = "0x3713600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x3713994", Offset = "0x3713994", VA = "0x3713994", Slot = "10")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x3713A78", Offset = "0x3713A78", VA = "0x3713A78", Slot = "34")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x3713A98", Offset = "0x3713A98", VA = "0x3713A98", Slot = "32")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x3713AF4", Offset = "0x3713AF4", VA = "0x3713AF4", Slot = "33")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x3713B50", Offset = "0x3713B50", VA = "0x3713B50", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x3713C1C", Offset = "0x3713C1C", VA = "0x3713C1C", Slot = "30")]
		public override void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x3713D18", Offset = "0x3713D18", VA = "0x3713D18", Slot = "31")]
		public override void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x3713E20", Offset = "0x3713E20", VA = "0x3713E20")]
		public SplinePositioner()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7124", Offset = "0x16E7124")]
	public class SplineProjector : SplineTracer
	{
		[Token(Token = "0x20004CD")]
		public enum Mode
		{
			[Token(Token = "0x4001D56")]
			Accurate,
			[Token(Token = "0x4001D57")]
			Cached
		}

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		[HideInInspector]
		private bool _autoProject;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private int _subdivide;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private Transform _projectTarget;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private Transform applyTarget;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private TS_Transform finalTarget;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private double traceFromA;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private double traceToA;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private double traceFromB;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		public Vector2 _offset;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		public UnityEngine.Vector3 _rotationOffset;

		[Token(Token = "0x170001D5")]
		public Mode mode
		{
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x3713F58", Offset = "0x3713F58", VA = "0x3713F58")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0x3713F60", Offset = "0x3713F60", VA = "0x3713F60")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public bool autoProject
		{
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x3713F84", Offset = "0x3713F84", VA = "0x3713F84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x3713F8C", Offset = "0x3713F8C", VA = "0x3713F8C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public int subdivide
		{
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x3713FC0", Offset = "0x3713FC0", VA = "0x3713FC0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0x3713FC8", Offset = "0x3713FC8", VA = "0x3713FC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public Transform projectTarget
		{
			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x3713FF4", Offset = "0x3713FF4", VA = "0x3713FF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0x3714084", Offset = "0x3714084", VA = "0x3714084")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1708070", Offset = "0x1708070")]
		public Transform target
		{
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0x371416C", Offset = "0x371416C", VA = "0x371416C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0x371427C", Offset = "0x371427C", VA = "0x371427C")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public GameObject targetObject
		{
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x371418C", Offset = "0x371418C", VA = "0x371418C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0x3714330", Offset = "0x3714330", VA = "0x3714330")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x17080A8", Offset = "0x17080A8")]
		public SplineResult projectResult
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x37143EC", Offset = "0x37143EC", VA = "0x37143EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400000A")]
		public event SplineReachHandler onEndReached
		{
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x37143F4", Offset = "0x37143F4", VA = "0x37143F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17014FC", Offset = "0x17014FC")]
			add
			{
			}
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x371449C", Offset = "0x371449C", VA = "0x371449C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170150C", Offset = "0x170150C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event SplineReachHandler onBeginningReached
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0x3714544", Offset = "0x3714544", VA = "0x3714544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170151C", Offset = "0x170151C")]
			add
			{
			}
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x37145EC", Offset = "0x37145EC", VA = "0x37145EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170152C", Offset = "0x170152C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x3714694", Offset = "0x3714694", VA = "0x3714694", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x37148DC", Offset = "0x37148DC", VA = "0x37148DC", Slot = "34")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x3714984", Offset = "0x3714984", VA = "0x3714984", Slot = "32")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x3714A30", Offset = "0x3714A30", VA = "0x3714A30", Slot = "33")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x3714808", Offset = "0x3714808", VA = "0x3714808")]
		private void GetProjectTarget()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x3714ADC", Offset = "0x3714ADC", VA = "0x3714ADC", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x3714BB4", Offset = "0x3714BB4", VA = "0x3714BB4", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x3715210", Offset = "0x3715210", VA = "0x3715210")]
		private void CheckTriggers()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x371543C", Offset = "0x371543C", VA = "0x371543C")]
		public void CalculateProjection()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x3714C7C", Offset = "0x3714C7C", VA = "0x3714C7C")]
		private void InternalCalculateProjection()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x371577C", Offset = "0x371577C", VA = "0x371577C")]
		public SplineProjector()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E715C", Offset = "0x16E715C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E715C", Offset = "0x16E715C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E715C", Offset = "0x16E715C")]
	[ExecuteInEditMode]
	public class SplineRenderer : MeshGenerator
	{
		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public bool autoOrient;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[HideInInspector]
		public int updateFrameInterval;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int currentFrame;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Vector3 vertexDirection;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool orthographic;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
		private bool init;

		[Token(Token = "0x170001DC")]
		public int slices
		{
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x3715860", Offset = "0x3715860", VA = "0x3715860")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x3715868", Offset = "0x3715868", VA = "0x3715868")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x3715894", Offset = "0x3715894", VA = "0x3715894", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x37158FC", Offset = "0x37158FC", VA = "0x37158FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x37159A0", Offset = "0x37159A0", VA = "0x37159A0", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x37159C4", Offset = "0x37159C4", VA = "0x37159C4", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x3716364", Offset = "0x3716364", VA = "0x3716364")]
		public void RenderWithCamera(Camera cam)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x37164F8", Offset = "0x37164F8", VA = "0x37164F8")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x3715A94", Offset = "0x3715A94", VA = "0x3715A94")]
		public void GenerateVertices(UnityEngine.Vector3 vertexDirection, bool orthoGraphic)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x3716578", Offset = "0x3716578", VA = "0x3716578")]
		public SplineRenderer()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class SplineTracer : SplineUser
	{
		[Token(Token = "0x20004CE")]
		public enum PhysicsMode
		{
			[Token(Token = "0x4001D59")]
			Transform,
			[Token(Token = "0x4001D5A")]
			Rigidbody,
			[Token(Token = "0x4001D5B")]
			Rigidbody2D
		}

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Trigger[] triggerInvokeQueue;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int addTriggerIndex;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public bool applyDirectionRotation;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		protected Spline.Direction _direction;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		protected PhysicsMode _physicsMode;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		protected TransformModule _motion;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16EFFE0", Offset = "0x16EFFE0")]
		protected SplineTrigger[] triggers_old;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Trigger[] triggers;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		protected CustomRotationModule _customRotations;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		protected CustomOffsetModule _customOffsets;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody targetRigidbody;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody2D targetRigidbody2D;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		protected Transform targetTransform;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		protected SplineResult _result;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool setPercentOnRebuild;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private double targetPercentOnRebuild;

		[Token(Token = "0x170001DD")]
		public PhysicsMode physicsMode
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0x37170B8", Offset = "0x37170B8", VA = "0x37170B8")]
			get
			{
				return default(PhysicsMode);
			}
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x37170C0", Offset = "0x37170C0", VA = "0x37170C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public TransformModule motion
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0x37170C8", Offset = "0x37170C8", VA = "0x37170C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public CustomRotationModule customRotations
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x37171E0", Offset = "0x37171E0", VA = "0x37171E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public CustomOffsetModule customOffsets
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x3717258", Offset = "0x3717258", VA = "0x3717258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public SplineResult result
		{
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x37172D0", Offset = "0x37172D0", VA = "0x37172D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		public SplineResult offsettedResult
		{
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x3713604", Offset = "0x3713604", VA = "0x3713604")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		public Spline.Direction direction
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x37172D8", Offset = "0x37172D8", VA = "0x37172D8")]
			get
			{
				return default(Spline.Direction);
			}
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x37172E0", Offset = "0x37172E0", VA = "0x37172E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public double clampedPercent
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x37172F8", Offset = "0x37172F8", VA = "0x37172F8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001E5")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x17080E0", Offset = "0x17080E0")]
		public bool applyPosition
		{
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x3717358", Offset = "0x3717358", VA = "0x3717358")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0x37173C0", Offset = "0x37173C0", VA = "0x37173C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1708118", Offset = "0x1708118")]
		public bool applyRotation
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x371740C", Offset = "0x371740C", VA = "0x371740C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0x3717474", Offset = "0x3717474", VA = "0x3717474")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1708150", Offset = "0x1708150")]
		public bool applyScale
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x37174C0", Offset = "0x37174C0", VA = "0x37174C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x3717528", Offset = "0x3717528", VA = "0x3717528")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1708188", Offset = "0x1708188")]
		public Vector2 offset
		{
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x3717574", Offset = "0x3717574", VA = "0x3717574")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0x3717594", Offset = "0x3717594", VA = "0x3717594")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x17081C0", Offset = "0x17081C0")]
		public UnityEngine.Vector3 rotationOffset
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x37176C8", Offset = "0x37176C8", VA = "0x37176C8")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x37176EC", Offset = "0x37176EC", VA = "0x37176EC")]
			set
			{
			}
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x3717850", Offset = "0x3717850", VA = "0x3717850", Slot = "29")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x3717854", Offset = "0x3717854", VA = "0x3717854")]
		public Node GetNextNode()
		{
			return null;
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x3717A40", Offset = "0x3717A40", VA = "0x3717A40")]
		public void GetCurrentComputer(out SplineComputer comp, out double percent, out Spline.Direction dir)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x3717A6C", Offset = "0x3717A6C", VA = "0x3717A6C")]
		public void ResetTriggers()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x3713C50", Offset = "0x3713C50", VA = "0x3713C50", Slot = "30")]
		public virtual void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x3713D50", Offset = "0x3713D50", VA = "0x3713D50", Slot = "31")]
		public virtual void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x3713BDC", Offset = "0x3713BDC", VA = "0x3713BDC", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x3717F44", Offset = "0x3717F44", VA = "0x3717F44", Slot = "13")]
		public override void EnterAddress(Node node, int pointIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x37180B8", Offset = "0x37180B8", VA = "0x37180B8", Slot = "14")]
		public override void AddComputer(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x371823C", Offset = "0x371823C", VA = "0x371823C", Slot = "17")]
		public override void ExitAddress(int depth)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x371837C", Offset = "0x371837C", VA = "0x371837C", Slot = "32")]
		protected virtual Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x37183CC", Offset = "0x37183CC", VA = "0x37183CC", Slot = "33")]
		protected virtual Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x371841C", Offset = "0x371841C", VA = "0x371841C", Slot = "34")]
		protected virtual Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x3714EF0", Offset = "0x3714EF0", VA = "0x3714EF0")]
		protected void ApplyMotion()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x3715390", Offset = "0x3715390", VA = "0x3715390")]
		protected void CheckTriggers(double from, double to)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x37189D8", Offset = "0x37189D8", VA = "0x37189D8")]
		protected void CheckTriggersClipped(double from, double to)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x371531C", Offset = "0x371531C", VA = "0x371531C")]
		protected void InvokeTriggers()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x3718AB4", Offset = "0x3718AB4", VA = "0x3718AB4")]
		private bool MigrateTriggers()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x37134D8", Offset = "0x37134D8", VA = "0x37134D8")]
		protected void RefreshTargets()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x37188B0", Offset = "0x37188B0", VA = "0x37188B0")]
		private void AddTriggerToQueue(Trigger trigger)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x3718E80", Offset = "0x3718E80", VA = "0x3718E80")]
		private void AddTrigger(Trigger trigger)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x3718F70", Offset = "0x3718F70", VA = "0x3718F70")]
		public void AddTrigger(UnityAction call, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x3719090", Offset = "0x3719090", VA = "0x3719090")]
		public void AddTrigger(UnityAction<int> call, int value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x37191B4", Offset = "0x37191B4", VA = "0x37191B4")]
		public void AddTrigger(UnityAction<float> call, float value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x37192D8", Offset = "0x37192D8", VA = "0x37192D8")]
		public void AddTrigger(UnityAction<double> call, double value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x37193FC", Offset = "0x37193FC", VA = "0x37193FC")]
		public void AddTrigger(UnityAction<string> call, string value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x3719520", Offset = "0x3719520", VA = "0x3719520")]
		public void AddTrigger(UnityAction<bool> call, bool value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x3719644", Offset = "0x3719644", VA = "0x3719644")]
		public void AddTrigger(UnityAction<GameObject> call, GameObject value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x3719768", Offset = "0x3719768", VA = "0x3719768")]
		public void AddTrigger(UnityAction<Transform> call, Transform value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x3717EF8", Offset = "0x3717EF8", VA = "0x3717EF8")]
		public void EvaluateClipped(SplineResult result, double clippedPercent)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x37198B4", Offset = "0x37198B4", VA = "0x37198B4")]
		public UnityEngine.Vector3 EvaluatePositionClipped(double clippedPercent)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x3717C18", Offset = "0x3717C18", VA = "0x3717C18")]
		public double TravelClipped(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x37198F4", Offset = "0x37198F4", VA = "0x37198F4")]
		public SplineResult ProjectClipped(UnityEngine.Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x3713E24", Offset = "0x3713E24", VA = "0x3713E24")]
		public SplineTracer()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class SplineUser : MonoBehaviour
	{
		[Token(Token = "0x20004CF")]
		public enum UpdateMethod
		{
			[Token(Token = "0x4001D5D")]
			Update,
			[Token(Token = "0x4001D5E")]
			FixedUpdate,
			[Token(Token = "0x4001D5F")]
			LateUpdate,
			[Token(Token = "0x4001D60")]
			None
		}

		[Token(Token = "0x20004D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E97C4", Offset = "0x16E97C4")]
		private sealed class <UpdateSubscribersRoutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SplineUser <>4__this;

			[Token(Token = "0x1700049A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600203A")]
				[Address(RVA = "0x371F3D0", Offset = "0x371F3D0", VA = "0x371F3D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600203C")]
				[Address(RVA = "0x371F438", Offset = "0x371F438", VA = "0x371F438", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002037")]
			[Address(RVA = "0x371B95C", Offset = "0x371B95C", VA = "0x371B95C")]
			[DebuggerHidden]
			public <UpdateSubscribersRoutine>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x6002038")]
			[Address(RVA = "0x371F364", Offset = "0x371F364", VA = "0x371F364", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002039")]
			[Address(RVA = "0x371F368", Offset = "0x371F368", VA = "0x371F368", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600203B")]
			[Address(RVA = "0x371F3D8", Offset = "0x371F3D8", VA = "0x371F3D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SplineAddress _address;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private SplineUser[] subscribers;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public UpdateMethod updateMethod;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private SplineUser _user;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool neverRebuild;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		protected bool finished_building;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private double _resolution;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private double _clipTo;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private double _clipFrom;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private bool _autoUpdate;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[SerializeField]
		[HideInInspector]
		private bool _loopSamples;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformSample;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformPreserveClipRange;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private SplineResult[] _samples;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private SplineResult[] _clippedSamples;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private float animClipFrom;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[HideInInspector]
		private float animClipTo;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		private double animResolution;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		protected bool sampleUser;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool rebuild;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool sample;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		private bool getClippedSamples;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Transform trs;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public bool multithreaded;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[HideInInspector]
		public bool buildOnAwake;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[HideInInspector]
		public bool buildOnEnable;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Thread buildThread;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool postThread;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool threadSample;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool threadWork;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		private bool _threadWorking;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private object locker;

		[Token(Token = "0x170001EA")]
		public SplineUser user
		{
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x3719A8C", Offset = "0x3719A8C", VA = "0x3719A8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x3719A94", Offset = "0x3719A94", VA = "0x3719A94")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public SplineUser rootUser
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x3719D70", Offset = "0x3719D70", VA = "0x3719D70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public SplineComputer computer
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x371547C", Offset = "0x371547C", VA = "0x371547C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x3719E88", Offset = "0x3719E88", VA = "0x3719E88")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public double resolution
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x371A5DC", Offset = "0x371A5DC", VA = "0x371A5DC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x371A5E4", Offset = "0x371A5E4", VA = "0x371A5E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public double clipFrom
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x371A61C", Offset = "0x371A61C", VA = "0x371A61C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x371A624", Offset = "0x371A624", VA = "0x371A624")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public double clipTo
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x371A6C0", Offset = "0x371A6C0", VA = "0x371A6C0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x371A6C8", Offset = "0x371A6C8", VA = "0x371A6C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public bool autoUpdate
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x371A764", Offset = "0x371A764", VA = "0x371A764")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x371A76C", Offset = "0x371A76C", VA = "0x371A76C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public bool loopSamples
		{
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x371A7A0", Offset = "0x371A7A0", VA = "0x371A7A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x371A7A8", Offset = "0x371A7A8", VA = "0x371A7A8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public bool uniformSample
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x371A7DC", Offset = "0x371A7DC", VA = "0x371A7DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x371A7E4", Offset = "0x371A7E4", VA = "0x371A7E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public bool uniformPreserveClipRange
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x371A814", Offset = "0x371A814", VA = "0x371A814")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x371A81C", Offset = "0x371A81C", VA = "0x371A81C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public double span
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x371A84C", Offset = "0x371A84C", VA = "0x371A84C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001F5")]
		public SplineAddress address
		{
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x371A560", Offset = "0x371A560", VA = "0x371A560")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public bool samplesAreLooped
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x371A88C", Offset = "0x371A88C", VA = "0x371A88C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F7")]
		public SplineResult[] samples
		{
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x371549C", Offset = "0x371549C", VA = "0x371549C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		public SplineResult[] clippedSamples
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x3716318", Offset = "0x3716318", VA = "0x3716318")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		protected bool willRebuild
		{
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x371B554", Offset = "0x371B554", VA = "0x371B554")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FA")]
		public bool threadWorking
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x371B55C", Offset = "0x371B55C", VA = "0x371B55C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x37146B8", Offset = "0x37146B8", VA = "0x37146B8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x371B63C", Offset = "0x371B63C", VA = "0x371B63C", Slot = "5")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x371B640", Offset = "0x371B640", VA = "0x371B640", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x371B714", Offset = "0x371B714", VA = "0x371B714", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x371B7BC", Offset = "0x371B7BC", VA = "0x371B7BC", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x371B814", Offset = "0x371B814", VA = "0x371B814", Slot = "9")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x37139D0", Offset = "0x37139D0", VA = "0x37139D0", Slot = "10")]
		protected virtual void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x371B86C", Offset = "0x371B86C", VA = "0x371B86C", Slot = "11")]
		public virtual void Rebuild(bool sampleComputer)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x371B8E0", Offset = "0x371B8E0", VA = "0x371B8E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x170153C", Offset = "0x170153C")]
		private IEnumerator UpdateSubscribersRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x371B988", Offset = "0x371B988", VA = "0x371B988", Slot = "12")]
		public virtual void RebuildImmediate(bool sampleComputer)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x371C2B8", Offset = "0x371C2B8", VA = "0x371C2B8")]
		public void GetClippedSamplesImmediate()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x3718004", Offset = "0x3718004", VA = "0x3718004", Slot = "13")]
		public virtual void EnterAddress(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x3718180", Offset = "0x3718180", VA = "0x3718180", Slot = "14")]
		public virtual void AddComputer(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x371C2EC", Offset = "0x371C2EC", VA = "0x371C2EC", Slot = "15")]
		public virtual void CollapseAddress()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x371C340", Offset = "0x371C340", VA = "0x371C340", Slot = "16")]
		public virtual void ClearAddress()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x37182E4", Offset = "0x37182E4", VA = "0x37182E4", Slot = "17")]
		public virtual void ExitAddress(int depth)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x371C3C4", Offset = "0x371C3C4", VA = "0x371C3C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x371C638", Offset = "0x371C638", VA = "0x371C638")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x371C64C", Offset = "0x371C64C", VA = "0x371C64C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x371C19C", Offset = "0x371C19C", VA = "0x371C19C")]
		private void UpdateSubscribers()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x371C3D4", Offset = "0x371C3D4", VA = "0x371C3D4")]
		private void RunMain()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x371C7B8", Offset = "0x371C7B8", VA = "0x371C7B8")]
		private void RunThread()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x371CA3C", Offset = "0x371CA3C", VA = "0x371CA3C", Slot = "18")]
		protected virtual void Run()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x3714BB0", Offset = "0x3714BB0", VA = "0x3714BB0", Slot = "19")]
		protected virtual void LateRun()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x371CA40", Offset = "0x371CA40", VA = "0x371CA40", Slot = "20")]
		protected virtual void Build()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x371CA44", Offset = "0x371CA44", VA = "0x371CA44", Slot = "21")]
		protected virtual void PostBuild()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x371CA48", Offset = "0x371CA48", VA = "0x371CA48")]
		public void SetClipRange(double from, double to)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x371BA88", Offset = "0x371BA88", VA = "0x371BA88")]
		private void SampleComputer()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x371A958", Offset = "0x371A958", VA = "0x371A958")]
		private void GetClippedSamples()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x371CAD8", Offset = "0x371CAD8", VA = "0x371CAD8", Slot = "22")]
		public virtual SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x371D080", Offset = "0x371D080", VA = "0x371D080", Slot = "23")]
		public virtual void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x371D600", Offset = "0x371D600", VA = "0x371D600", Slot = "24")]
		public virtual UnityEngine.Vector3 EvaluatePosition(double percent, bool overrideUniformClipRange = false)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x3717330", Offset = "0x3717330", VA = "0x3717330")]
		public double ClipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x371DC0C", Offset = "0x371DC0C", VA = "0x371DC0C")]
		public void ClipPercent(ref double percent)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x371988C", Offset = "0x371988C", VA = "0x371988C")]
		public double UnclipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x3717AD0", Offset = "0x3717AD0", VA = "0x3717AD0")]
		public void UnclipPercent(ref double percent)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x371D040", Offset = "0x371D040", VA = "0x371D040")]
		public int GetSampleIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x371DD58", Offset = "0x371DD58", VA = "0x371DD58")]
		public int GetClippedSampleIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x371DD94", Offset = "0x371DD94", VA = "0x371DD94", Slot = "25")]
		public virtual SplineResult Project(UnityEngine.Vector3 point, double from = 0.0, double to = 1.0)
		{
			return null;
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x371DE48", Offset = "0x371DE48", VA = "0x371DE48", Slot = "26")]
		public virtual void Project(SplineResult result, UnityEngine.Vector3 point, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x371EDB0", Offset = "0x371EDB0", VA = "0x371EDB0", Slot = "27")]
		public virtual double Travel(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x371A330", Offset = "0x371A330", VA = "0x371A330")]
		private void Subscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x371A110", Offset = "0x371A110", VA = "0x371A110")]
		private void Unsubscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x371F118", Offset = "0x371F118", VA = "0x371F118", Slot = "28")]
		public virtual float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x371C660", Offset = "0x371C660", VA = "0x371C660")]
		private void RemoveSubscriber(int index)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x371B564", Offset = "0x371B564", VA = "0x371B564")]
		private bool IsSubscribed(SplineUser user)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x3719908", Offset = "0x3719908", VA = "0x3719908")]
		public SplineUser()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E721C", Offset = "0x16E721C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E721C", Offset = "0x16E721C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E721C", Offset = "0x16E721C")]
	public class SurfaceGenerator : MeshGenerator
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private float _expand;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private float _extrude;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvScale;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvOffset;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private SplineComputer _extrudeComputer;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private SplineResult[] extrudeResults;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Vector3[] identityVertices;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Vector3[] identityNormals;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] projectedVerts;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[HideInInspector]
		private int[] capTris;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[HideInInspector]
		private int[] wallTris;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeFrom;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeTo;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformUvs;

		[Token(Token = "0x170001FB")]
		public float expand
		{
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x371F440", Offset = "0x371F440", VA = "0x371F440")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0x371F448", Offset = "0x371F448", VA = "0x371F448")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public float extrude
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x371F46C", Offset = "0x371F46C", VA = "0x371F46C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x371F474", Offset = "0x371F474", VA = "0x371F474")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public double extrudeClipFrom
		{
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0x371F498", Offset = "0x371F498", VA = "0x371F498")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x371F4A0", Offset = "0x371F4A0", VA = "0x371F4A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public double extrudeClipTo
		{
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0x371F4C4", Offset = "0x371F4C4", VA = "0x371F4C4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0x371F4CC", Offset = "0x371F4CC", VA = "0x371F4CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public Vector2 sideUvScale
		{
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0x371F4F0", Offset = "0x371F4F0", VA = "0x371F4F0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000D65")]
			[Address(RVA = "0x371F4FC", Offset = "0x371F4FC", VA = "0x371F4FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public Vector2 sideUvOffset
		{
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0x371F5C4", Offset = "0x371F5C4", VA = "0x371F5C4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000D67")]
			[Address(RVA = "0x371F5D0", Offset = "0x371F5D0", VA = "0x371F5D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public SplineComputer extrudeComputer
		{
			[Token(Token = "0x6000D68")]
			[Address(RVA = "0x371F698", Offset = "0x371F698", VA = "0x371F698")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0x371F6A0", Offset = "0x371F6A0", VA = "0x371F6A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public bool uniformUvs
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x371F7EC", Offset = "0x371F7EC", VA = "0x371F7EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0x371F7F4", Offset = "0x371F7F4", VA = "0x371F7F4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x371F824", Offset = "0x371F824", VA = "0x371F824", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x371F88C", Offset = "0x371F88C", VA = "0x371F88C", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x371F8DC", Offset = "0x371F8DC", VA = "0x371F8DC")]
		public void Generate()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x3721BC0", Offset = "0x3721BC0", VA = "0x3721BC0")]
		private void GenerateCapTris(bool flip)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x37220A4", Offset = "0x37220A4", VA = "0x37220A4")]
		private int WriteTris(ref int[] tris, ref int[] target, int vertexOffset, int trisOffset, bool flip)
		{
			return default(int);
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x3721AF4", Offset = "0x3721AF4", VA = "0x3721AF4")]
		private bool IsClockwise(Vector2[] points2D)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x3721C78", Offset = "0x3721C78", VA = "0x3721C78")]
		private void GetIdentityVerts(UnityEngine.Vector3 center, UnityEngine.Vector3 normal, bool clockwise)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x3721764", Offset = "0x3721764", VA = "0x3721764")]
		private void GetProjectedVertices(UnityEngine.Vector3[] points, UnityEngine.Vector3 normal, UnityEngine.Vector3 center, int count = 0)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x3722278", Offset = "0x3722278", VA = "0x3722278")]
		public SurfaceGenerator()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E72CC", Offset = "0x16E72CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E72CC", Offset = "0x16E72CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E72CC", Offset = "0x16E72CC")]
	public class TubeGenerator : MeshGenerator
	{
		[Token(Token = "0x20004D1")]
		public enum CapMethod
		{
			[Token(Token = "0x4001D65")]
			None,
			[Token(Token = "0x4001D66")]
			Flat,
			[Token(Token = "0x4001D67")]
			Round
		}

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private int _sides;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private int _roundCapLatitude;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private CapMethod _capMode;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[HideInInspector]
		private float _integrity;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private float _capUVScale;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int bodyVertexCount;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int bodyTrisCount;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private int capVertexCount;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int capTrisCount;

		[Token(Token = "0x17000203")]
		public int sides
		{
			[Token(Token = "0x6000D75")]
			[Address(RVA = "0x2F68580", Offset = "0x2F68580", VA = "0x2F68580")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0x2F68588", Offset = "0x2F68588", VA = "0x2F68588")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public CapMethod capMode
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0x2F685B8", Offset = "0x2F685B8", VA = "0x2F685B8")]
			get
			{
				return default(CapMethod);
			}
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0x2F685C0", Offset = "0x2F685C0", VA = "0x2F685C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public int roundCapLatitude
		{
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0x2F685E4", Offset = "0x2F685E4", VA = "0x2F685E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0x2F685EC", Offset = "0x2F685EC", VA = "0x2F685EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public float integrity
		{
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0x2F68624", Offset = "0x2F68624", VA = "0x2F68624")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0x2F6862C", Offset = "0x2F6862C", VA = "0x2F6862C")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public float capUVScale
		{
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x2F68650", Offset = "0x2F68650", VA = "0x2F68650")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0x2F68658", Offset = "0x2F68658", VA = "0x2F68658")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		private bool useCap
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x2F6867C", Offset = "0x2F6867C", VA = "0x2F6867C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x2F68814", Offset = "0x2F68814", VA = "0x2F68814", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x2F6881C", Offset = "0x2F6881C", VA = "0x2F6881C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x2F68884", Offset = "0x2F68884", VA = "0x2F68884", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x2F68A14", Offset = "0x2F68A14", VA = "0x2F68A14")]
		private void Generate()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x2F69198", Offset = "0x2F69198", VA = "0x2F69198")]
		private void GenerateFlatCaps()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x2F69978", Offset = "0x2F69978", VA = "0x2F69978")]
		private void GenerateRoundCaps()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x2F6A9F4", Offset = "0x2F6A9F4", VA = "0x2F6A9F4")]
		public TubeGenerator()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E737C", Offset = "0x16E737C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E737C", Offset = "0x16E737C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E737C", Offset = "0x16E737C")]
	public class WaveformGenerator : MeshGenerator
	{
		[Token(Token = "0x20004D2")]
		public enum Axis
		{
			[Token(Token = "0x4001D69")]
			X,
			[Token(Token = "0x4001D6A")]
			Y,
			[Token(Token = "0x4001D6B")]
			Z
		}

		[Token(Token = "0x20004D3")]
		public enum Space
		{
			[Token(Token = "0x4001D6D")]
			World,
			[Token(Token = "0x4001D6E")]
			Local
		}

		[Token(Token = "0x20004D4")]
		public enum UVWrapMode
		{
			[Token(Token = "0x4001D70")]
			Clamp,
			[Token(Token = "0x4001D71")]
			UniformX,
			[Token(Token = "0x4001D72")]
			UniformY,
			[Token(Token = "0x4001D73")]
			Uniform
		}

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private bool _symmetry;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private UVWrapMode _uvWrapMode;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x17000209")]
		public Axis axis
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x2F6AA78", Offset = "0x2F6AA78", VA = "0x2F6AA78")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x2F6AA80", Offset = "0x2F6AA80", VA = "0x2F6AA80")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public bool symmetry
		{
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0x2F6AAA4", Offset = "0x2F6AAA4", VA = "0x2F6AAA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x2F6AAAC", Offset = "0x2F6AAAC", VA = "0x2F6AAAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public UVWrapMode uvWrapMode
		{
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0x2F6AADC", Offset = "0x2F6AADC", VA = "0x2F6AADC")]
			get
			{
				return default(UVWrapMode);
			}
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0x2F6AAE4", Offset = "0x2F6AAE4", VA = "0x2F6AAE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public int slices
		{
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0x2F6AB08", Offset = "0x2F6AB08", VA = "0x2F6AB08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0x2F6AB10", Offset = "0x2F6AB10", VA = "0x2F6AB10")]
			set
			{
			}
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x2F6AB3C", Offset = "0x2F6AB3C", VA = "0x2F6AB3C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x2F6ABA4", Offset = "0x2F6ABA4", VA = "0x2F6ABA4", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x2F6B534", Offset = "0x2F6B534", VA = "0x2F6B534", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x2F6B53C", Offset = "0x2F6B53C", VA = "0x2F6B53C", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x2F6ABCC", Offset = "0x2F6ABCC", VA = "0x2F6ABCC")]
		private void Generate()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x2F6B544", Offset = "0x2F6B544", VA = "0x2F6B544")]
		public WaveformGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D9")]
	public class CustomOffsetModule
	{
		[Serializable]
		[Token(Token = "0x20004D5")]
		public class Key
		{
			[Token(Token = "0x4001D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Vector2 _offset;

			[Token(Token = "0x4001D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private double _from;

			[Token(Token = "0x4001D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _to;

			[Token(Token = "0x4001D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _center;

			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private bool _loop;

			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationCurve interpolation;

			[Token(Token = "0x1700049C")]
			public Vector2 offset
			{
				[Token(Token = "0x600203D")]
				[Address(RVA = "0x233686C", Offset = "0x233686C", VA = "0x233686C")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x600203E")]
				[Address(RVA = "0x2336874", Offset = "0x2336874", VA = "0x2336874")]
				set
				{
				}
			}

			[Token(Token = "0x1700049D")]
			public double center
			{
				[Token(Token = "0x600203F")]
				[Address(RVA = "0x233687C", Offset = "0x233687C", VA = "0x233687C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002040")]
				[Address(RVA = "0x2336884", Offset = "0x2336884", VA = "0x2336884")]
				set
				{
				}
			}

			[Token(Token = "0x1700049E")]
			public double from
			{
				[Token(Token = "0x6002041")]
				[Address(RVA = "0x23368A0", Offset = "0x23368A0", VA = "0x23368A0")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002042")]
				[Address(RVA = "0x23368A8", Offset = "0x23368A8", VA = "0x23368A8")]
				set
				{
				}
			}

			[Token(Token = "0x1700049F")]
			public double to
			{
				[Token(Token = "0x6002043")]
				[Address(RVA = "0x23368C4", Offset = "0x23368C4", VA = "0x23368C4")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002044")]
				[Address(RVA = "0x23368CC", Offset = "0x23368CC", VA = "0x23368CC")]
				set
				{
				}
			}

			[Token(Token = "0x170004A0")]
			public bool loop
			{
				[Token(Token = "0x6002045")]
				[Address(RVA = "0x23368E8", Offset = "0x23368E8", VA = "0x23368E8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002046")]
				[Address(RVA = "0x23368F0", Offset = "0x23368F0", VA = "0x23368F0")]
				set
				{
				}
			}

			[Token(Token = "0x170004A1")]
			public double position
			{
				[Token(Token = "0x6002047")]
				[Address(RVA = "0x23367FC", Offset = "0x23367FC", VA = "0x23367FC")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002048")]
				[Address(RVA = "0x23368FC", Offset = "0x23368FC", VA = "0x23368FC")]
				set
				{
				}
			}

			[Token(Token = "0x6002049")]
			[Address(RVA = "0x23361E4", Offset = "0x23361E4", VA = "0x23361E4")]
			public Key(Vector2 o, double f, double t, double c)
			{
			}

			[Token(Token = "0x600204A")]
			[Address(RVA = "0x2336850", Offset = "0x2336850", VA = "0x2336850")]
			public float Evaluate(float t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Key> keys;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _blend;

		[Token(Token = "0x1700020D")]
		public float blend
		{
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x2335FEC", Offset = "0x2335FEC", VA = "0x2335FEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x2335FF4", Offset = "0x2335FF4", VA = "0x2335FF4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x2336070", Offset = "0x2336070", VA = "0x2336070")]
		public CustomOffsetModule()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x233612C", Offset = "0x233612C", VA = "0x233612C")]
		public void AddKey(Vector2 offset, double f, double t, double c)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x23362E4", Offset = "0x23362E4", VA = "0x23362E4")]
		public Vector2 Evaluate(double time)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x20001DA")]
	public class CustomRotationModule
	{
		[Serializable]
		[Token(Token = "0x20004D6")]
		public class Key
		{
			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private UnityEngine.Vector3 _rotation;

			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _from;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _to;

			[Token(Token = "0x4001D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private double _center;

			[Token(Token = "0x4001D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private bool _loop;

			[Token(Token = "0x4001D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public AnimationCurve interpolation;

			[Token(Token = "0x170004A2")]
			public UnityEngine.Vector3 rotation
			{
				[Token(Token = "0x600204B")]
				[Address(RVA = "0x233730C", Offset = "0x233730C", VA = "0x233730C")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x600204C")]
				[Address(RVA = "0x2337318", Offset = "0x2337318", VA = "0x2337318")]
				set
				{
				}
			}

			[Token(Token = "0x170004A3")]
			public double center
			{
				[Token(Token = "0x600204D")]
				[Address(RVA = "0x2337324", Offset = "0x2337324", VA = "0x2337324")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600204E")]
				[Address(RVA = "0x233732C", Offset = "0x233732C", VA = "0x233732C")]
				set
				{
				}
			}

			[Token(Token = "0x170004A4")]
			public double from
			{
				[Token(Token = "0x600204F")]
				[Address(RVA = "0x2337348", Offset = "0x2337348", VA = "0x2337348")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002050")]
				[Address(RVA = "0x2337350", Offset = "0x2337350", VA = "0x2337350")]
				set
				{
				}
			}

			[Token(Token = "0x170004A5")]
			public double to
			{
				[Token(Token = "0x6002051")]
				[Address(RVA = "0x233736C", Offset = "0x233736C", VA = "0x233736C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002052")]
				[Address(RVA = "0x2337374", Offset = "0x2337374", VA = "0x2337374")]
				set
				{
				}
			}

			[Token(Token = "0x170004A6")]
			public bool loop
			{
				[Token(Token = "0x6002053")]
				[Address(RVA = "0x2337390", Offset = "0x2337390", VA = "0x2337390")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002054")]
				[Address(RVA = "0x2337398", Offset = "0x2337398", VA = "0x2337398")]
				set
				{
				}
			}

			[Token(Token = "0x170004A7")]
			public double position
			{
				[Token(Token = "0x6002055")]
				[Address(RVA = "0x233729C", Offset = "0x233729C", VA = "0x233729C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002056")]
				[Address(RVA = "0x23373A4", Offset = "0x23373A4", VA = "0x23373A4")]
				set
				{
				}
			}

			[Token(Token = "0x6002057")]
			[Address(RVA = "0x2336B8C", Offset = "0x2336B8C", VA = "0x2336B8C")]
			public Key(UnityEngine.Vector3 r, double f, double t, double c)
			{
			}

			[Token(Token = "0x6002058")]
			[Address(RVA = "0x23372F0", Offset = "0x23372F0", VA = "0x23372F0")]
			public float Evaluate(float t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Key> keys;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _blend;

		[Token(Token = "0x1700020E")]
		public float blend
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x233698C", Offset = "0x233698C", VA = "0x233698C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x2336994", Offset = "0x2336994", VA = "0x2336994")]
			set
			{
			}
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x2336A10", Offset = "0x2336A10", VA = "0x2336A10")]
		public CustomRotationModule()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x2336ACC", Offset = "0x2336ACC", VA = "0x2336ACC")]
		public void AddKey(UnityEngine.Vector3 rotation, double f, double t, double c)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x2336C98", Offset = "0x2336C98", VA = "0x2336C98")]
		public Quaternion Evaluate(Quaternion baseRotation, double time)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x20001DB")]
	public class ObjectSequence<T>
	{
		[Token(Token = "0x20004D7")]
		public enum Iteration
		{
			[Token(Token = "0x4001D81")]
			Ordered,
			[Token(Token = "0x4001D82")]
			Random
		}

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T startObject;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T endObject;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] objects;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Iteration iteration;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int index;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private System.Random randomizer;

		[Token(Token = "0x1700020F")]
		public int randomSeed
		{
			[Token(Token = "0x6000D9F")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA1")]
		public ObjectSequence()
		{
		}

		[Token(Token = "0x6000DA2")]
		public T GetFirst()
		{
			return (T)null;
		}

		[Token(Token = "0x6000DA3")]
		public T GetLast()
		{
			return (T)null;
		}

		[Token(Token = "0x6000DA4")]
		public T Next()
		{
			return (T)null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001DC")]
	public class Spline
	{
		[Token(Token = "0x20004D8")]
		public enum Direction
		{
			[Token(Token = "0x4001D84")]
			Forward = 1,
			[Token(Token = "0x4001D85")]
			Backward = -1
		}

		[Token(Token = "0x20004D9")]
		public enum Type
		{
			[Token(Token = "0x4001D87")]
			Hermite,
			[Token(Token = "0x4001D88")]
			BSpline,
			[Token(Token = "0x4001D89")]
			Bezier,
			[Token(Token = "0x4001D8A")]
			Linear
		}

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplinePoint[] points;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool closed;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Type type;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve customValueInterpolation;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve customNormalInterpolation;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F0B24", Offset = "0x16F0B24")]
		public double precision;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Vector3[] hermitePoints;

		[Token(Token = "0x17000210")]
		public bool isClosed
		{
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x3630160", Offset = "0x3630160", VA = "0x3630160")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x3630DF0", Offset = "0x3630DF0", VA = "0x3630DF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public double moveStep
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x3630DF4", Offset = "0x3630DF4", VA = "0x3630DF4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x3630E9C", Offset = "0x3630E9C", VA = "0x3630E9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public int iterations
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x3630E3C", Offset = "0x3630E3C", VA = "0x3630E3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x3630EA0", Offset = "0x3630EA0", VA = "0x3630EA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x362FF38", Offset = "0x362FF38", VA = "0x362FF38")]
		public Spline(Type t)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x3630EA4", Offset = "0x3630EA4", VA = "0x3630EA4")]
		public Spline(Type t, double p)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x3630F8C", Offset = "0x3630F8C", VA = "0x3630F8C")]
		public float CalculateLength(double from = 0.0, double to = 1.0, double resolution = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x36311E8", Offset = "0x36311E8", VA = "0x36311E8")]
		public double Project(UnityEngine.Vector3 point, int subdivide = 3, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x3631750", Offset = "0x3631750", VA = "0x3631750")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x36319DC", Offset = "0x36319DC", VA = "0x36319DC")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x3631E34", Offset = "0x3631E34", VA = "0x3631E34")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x363112C", Offset = "0x363112C", VA = "0x363112C")]
		public UnityEngine.Vector3 EvaluatePosition(double percent)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x3631F68", Offset = "0x3631F68", VA = "0x3631F68")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x3632734", Offset = "0x3632734", VA = "0x3632734")]
		public SplineResult Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x36327B8", Offset = "0x36327B8", VA = "0x36327B8")]
		public void Evaluate(SplineResult result, int pointIndex)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x3631FE4", Offset = "0x3631FE4", VA = "0x3631FE4")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x36328EC", Offset = "0x36328EC", VA = "0x36328EC")]
		public void Evaluate(ref SplineResult[] samples, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x3632B3C", Offset = "0x3632B3C", VA = "0x3632B3C")]
		public void EvaluatePositions(ref UnityEngine.Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x3632D2C", Offset = "0x3632D2C", VA = "0x3632D2C")]
		public double Travel(double start, float distance, Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x3631E64", Offset = "0x3631E64", VA = "0x3631E64")]
		public void EvaluatePosition(ref UnityEngine.Vector3 point, double percent)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x36327E8", Offset = "0x36327E8", VA = "0x36327E8")]
		public void EvaluateTangent(ref UnityEngine.Vector3 tangent, double percent)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x36314B0", Offset = "0x36314B0", VA = "0x36314B0")]
		private double GetClosestPoint(int iterations, UnityEngine.Vector3 point, double start, double end, int slices)
		{
			return default(double);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x3630194", Offset = "0x3630194", VA = "0x3630194")]
		public void Break()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x363311C", Offset = "0x363311C", VA = "0x363311C")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x3630010", Offset = "0x3630010", VA = "0x3630010")]
		public void Close()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x3633370", Offset = "0x3633370", VA = "0x3633370")]
		public void ConvertToBezier()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x3632F74", Offset = "0x3632F74", VA = "0x3632F74")]
		private void GetPoint(ref UnityEngine.Vector3 point, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x36330F4", Offset = "0x36330F4", VA = "0x36330F4")]
		private void GetTangent(ref UnityEngine.Vector3 tangent, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x36347F8", Offset = "0x36347F8", VA = "0x36347F8")]
		private void LinearGetPoint(ref UnityEngine.Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x3635020", Offset = "0x3635020", VA = "0x3635020")]
		private void LinearGetTangent(ref UnityEngine.Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x363432C", Offset = "0x363432C", VA = "0x363432C")]
		private void BSPGetPoint(ref UnityEngine.Vector3 point, double time, int i)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x3634074", Offset = "0x3634074", VA = "0x3634074")]
		private void BezierGetPoint(ref UnityEngine.Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x3634C9C", Offset = "0x3634C9C", VA = "0x3634C9C")]
		private void BezierGetTangent(ref UnityEngine.Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x3633C50", Offset = "0x3633C50", VA = "0x3633C50")]
		private void HermiteGetPoint(ref UnityEngine.Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x36349C0", Offset = "0x36349C0", VA = "0x36349C0")]
		private void GetHermiteTangent(ref UnityEngine.Vector3 direction, double t, int i)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x3633814", Offset = "0x3633814", VA = "0x3633814")]
		private void GetHermitePoints(int i)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DD")]
	public class SplineAddress
	{
		[Serializable]
		[Token(Token = "0x20004DA")]
		public class Element
		{
			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplineComputer computer;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int _startPoint;

			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private int _endPoint;

			[Token(Token = "0x170004A8")]
			public int startPoint
			{
				[Token(Token = "0x6002059")]
				[Address(RVA = "0x3639364", Offset = "0x3639364", VA = "0x3639364")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600205A")]
				[Address(RVA = "0x36389C0", Offset = "0x36389C0", VA = "0x36389C0")]
				set
				{
				}
			}

			[Token(Token = "0x170004A9")]
			public int endPoint
			{
				[Token(Token = "0x600205B")]
				[Address(RVA = "0x3638990", Offset = "0x3638990", VA = "0x3638990")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600205C")]
				[Address(RVA = "0x3636654", Offset = "0x3636654", VA = "0x3636654")]
				set
				{
				}
			}

			[Token(Token = "0x170004AA")]
			public double startPercent
			{
				[Token(Token = "0x600205D")]
				[Address(RVA = "0x36375E4", Offset = "0x36375E4", VA = "0x36375E4")]
				get
				{
					return default(double);
				}
			}

			[Token(Token = "0x170004AB")]
			public double endPercent
			{
				[Token(Token = "0x600205E")]
				[Address(RVA = "0x3637624", Offset = "0x3637624", VA = "0x3637624")]
				get
				{
					return default(double);
				}
			}

			[Token(Token = "0x170004AC")]
			public int span
			{
				[Token(Token = "0x600205F")]
				[Address(RVA = "0x3637534", Offset = "0x3637534", VA = "0x3637534")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002060")]
			[Address(RVA = "0x3636644", Offset = "0x3636644", VA = "0x3636644")]
			public Element()
			{
			}
		}

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Element[] _elements;

		[Token(Token = "0x17000213")]
		public int depth
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x36364C4", Offset = "0x36364C4", VA = "0x36364C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000214")]
		public SplineComputer root
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x36364DC", Offset = "0x36364DC", VA = "0x36364DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x363651C", Offset = "0x363651C", VA = "0x363651C")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public Element[] elements
		{
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x36368AC", Offset = "0x36368AC", VA = "0x36368AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		public double moveStep
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x36368B4", Offset = "0x36368B4", VA = "0x36368B4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x3636B20", Offset = "0x3636B20", VA = "0x3636B20")]
		public SplineAddress(SplineComputer rootComp)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x3636C5C", Offset = "0x3636C5C", VA = "0x3636C5C")]
		public SplineAddress(SplineAddress copy)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x3636E2C", Offset = "0x3636E2C", VA = "0x3636E2C")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x3636EA8", Offset = "0x3636EA8", VA = "0x3636EA8")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x363724C", Offset = "0x363724C", VA = "0x363724C")]
		public UnityEngine.Vector3 EvaluatePosition(double percent)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x363766C", Offset = "0x363766C", VA = "0x363766C")]
		public double Project(UnityEngine.Vector3 point, int subdivide = 4, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x3637D34", Offset = "0x3637D34", VA = "0x3637D34")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x363801C", Offset = "0x363801C", VA = "0x363801C")]
		public double Travel(double start, float distance, Spline.Direction direction, int iterations)
		{
			return default(double);
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x3638224", Offset = "0x3638224", VA = "0x3638224")]
		public int GetElementIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x36378DC", Offset = "0x36378DC", VA = "0x36378DC")]
		public double PathToLocalPercent(double pathPercent, int elementIndex)
		{
			return default(double);
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x3637B48", Offset = "0x3637B48", VA = "0x3637B48")]
		public double LocalToPathPercent(double localPercent, int elementIndex)
		{
			return default(double);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x36369E4", Offset = "0x36369E4", VA = "0x36369E4")]
		public int GetTotalPointCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x3636FC4", Offset = "0x3636FC4", VA = "0x3636FC4")]
		public void GetEvaluationValues(double inputPercent, out SplineComputer computer, out double percent, out Spline.Direction direction)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x36383BC", Offset = "0x36383BC", VA = "0x36383BC")]
		private int LocalToPathPoint(int point, int elementIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x36384C4", Offset = "0x36384C4", VA = "0x36384C4")]
		private void PathToLocalPoint(int point, out int computerIndex, out int localPoint)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x36385D0", Offset = "0x36385D0", VA = "0x36385D0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x17015A0", Offset = "0x17015A0")]
		public void Enter(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x36385D4", Offset = "0x36385D4", VA = "0x36385D4")]
		public void AddSpline(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x3638BD8", Offset = "0x3638BD8", VA = "0x3638BD8")]
		public void AddSpline(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x3638F54", Offset = "0x3638F54", VA = "0x3638F54")]
		public void Exit(int exitDepth)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x36390F0", Offset = "0x36390F0", VA = "0x36390F0")]
		public void Collapse()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x3639274", Offset = "0x3639274", VA = "0x3639274")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x3636D3C", Offset = "0x3636D3C", VA = "0x3636D3C")]
		private void AddElement(Element element)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DE")]
	public struct SplinePoint
	{
		[Token(Token = "0x20004DB")]
		public enum Type
		{
			[Token(Token = "0x4001D8F")]
			SmoothMirrored,
			[Token(Token = "0x4001D90")]
			Broken,
			[Token(Token = "0x4001D91")]
			SmoothFree
		}

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F0B40", Offset = "0x16F0B40")]
		public Type _type;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public UnityEngine.Vector3 position;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 normal;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float size;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Vector3 tangent;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public UnityEngine.Vector3 tangent2;

		[Token(Token = "0x17000217")]
		public Type type
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x37123B4", Offset = "0x37123B4", VA = "0x37123B4")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x37123BC", Offset = "0x37123BC", VA = "0x37123BC")]
			set
			{
			}
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x371249C", Offset = "0x371249C", VA = "0x371249C")]
		public static SplinePoint Lerp(SplinePoint a, SplinePoint b, float t)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x37126A8", Offset = "0x37126A8", VA = "0x37126A8")]
		private static void GetInterpolatedTangents(SplinePoint a, SplinePoint b, float t, out UnityEngine.Vector3 t1, out UnityEngine.Vector3 t2)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x371295C", Offset = "0x371295C", VA = "0x371295C")]
		public void SetPosition(UnityEngine.Vector3 pos)
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x3712AAC", Offset = "0x3712AAC", VA = "0x3712AAC")]
		public void SetTangentPosition(UnityEngine.Vector3 pos)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x3712C18", Offset = "0x3712C18", VA = "0x3712C18")]
		public void SetTangent2Position(UnityEngine.Vector3 pos)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x3712E54", Offset = "0x3712E54", VA = "0x3712E54")]
		public SplinePoint(UnityEngine.Vector3 p)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x3712F14", Offset = "0x3712F14", VA = "0x3712F14")]
		public SplinePoint(UnityEngine.Vector3 p, UnityEngine.Vector3 t)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x371302C", Offset = "0x371302C", VA = "0x371302C")]
		public SplinePoint(UnityEngine.Vector3 pos, UnityEngine.Vector3 tan, UnityEngine.Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x3713194", Offset = "0x3713194", VA = "0x3713194")]
		public SplinePoint(UnityEngine.Vector3 pos, UnityEngine.Vector3 tan, UnityEngine.Vector3 tan2, UnityEngine.Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x37131DC", Offset = "0x37131DC", VA = "0x37131DC")]
		public SplinePoint(SplinePoint source)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x37123CC", Offset = "0x37123CC", VA = "0x37123CC")]
		private void SmoothMirrorTangent2()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x3712C3C", Offset = "0x3712C3C", VA = "0x3712C3C")]
		private void SmoothMirrorTangent()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x3712AD0", Offset = "0x3712AD0", VA = "0x3712AD0")]
		private void SmoothFreeTangent2()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x3712D0C", Offset = "0x3712D0C", VA = "0x3712D0C")]
		private void SmoothFreeTangent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DF")]
	public class SplineResult
	{
		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Vector3 position;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEngine.Vector3 normal;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 direction;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float size;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double percent;

		[Token(Token = "0x17000218")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x3716620", Offset = "0x3716620", VA = "0x3716620")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000219")]
		public UnityEngine.Vector3 right
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x37167D4", Offset = "0x37167D4", VA = "0x37167D4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x371697C", Offset = "0x371697C", VA = "0x371697C")]
		public static SplineResult Lerp(SplineResult a, SplineResult b, float t)
		{
			return null;
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x3716BB4", Offset = "0x3716BB4", VA = "0x3716BB4")]
		public static SplineResult Lerp(SplineResult a, SplineResult b, double t)
		{
			return null;
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x3716C3C", Offset = "0x3716C3C", VA = "0x3716C3C")]
		public static void Lerp(SplineResult a, SplineResult b, double t, SplineResult target)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x3716A04", Offset = "0x3716A04", VA = "0x3716A04")]
		public static void Lerp(SplineResult a, SplineResult b, float t, SplineResult target)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x3716DEC", Offset = "0x3716DEC", VA = "0x3716DEC")]
		public void Lerp(SplineResult b, double t)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x3716DF4", Offset = "0x3716DF4", VA = "0x3716DF4")]
		public void Lerp(SplineResult b, float t)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x3716DFC", Offset = "0x3716DFC", VA = "0x3716DFC")]
		public void CopyFrom(SplineResult input)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x37154C0", Offset = "0x37154C0", VA = "0x37154C0")]
		public SplineResult()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x3716E58", Offset = "0x3716E58", VA = "0x3716E58")]
		public SplineResult(UnityEngine.Vector3 p, UnityEngine.Vector3 n, UnityEngine.Vector3 d, Color c, float s, double t)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x3716FA8", Offset = "0x3716FA8", VA = "0x3716FA8")]
		public SplineResult(SplineResult input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E0")]
	public class SplineAction
	{
		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public UnityEngine.Object target;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int intValue;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float floatValue;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double doubleValue;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string stringValue;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool boolValue;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject goValue;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform transformValue;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityAction action;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityAction<int> intAction;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UnityAction<float> floatAction;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityAction<double> doubleAction;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityAction<string> stringAction;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UnityAction<bool> boolAction;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityAction<GameObject> goAction;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UnityAction<Transform> transformAction;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MethodInfo methodInfo;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string methodName;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private int paramType;

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x36351A0", Offset = "0x36351A0", VA = "0x36351A0")]
		public SplineAction()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x3635200", Offset = "0x3635200", VA = "0x3635200")]
		public SplineAction(UnityAction call)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x3635284", Offset = "0x3635284", VA = "0x3635284")]
		public SplineAction(UnityAction<int> call, int value)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x3635314", Offset = "0x3635314", VA = "0x3635314")]
		public SplineAction(UnityAction<float> call, float value)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x36353AC", Offset = "0x36353AC", VA = "0x36353AC")]
		public SplineAction(UnityAction<double> call, double value)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x3635444", Offset = "0x3635444", VA = "0x3635444")]
		public SplineAction(UnityAction<string> call, string value)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x36354E0", Offset = "0x36354E0", VA = "0x36354E0")]
		public SplineAction(UnityAction<bool> call, bool value)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x3635574", Offset = "0x3635574", VA = "0x3635574")]
		public SplineAction(UnityAction<GameObject> call, GameObject value)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x3635610", Offset = "0x3635610", VA = "0x3635610")]
		public SplineAction(UnityAction<Transform> call, Transform value)
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x36356AC", Offset = "0x36356AC", VA = "0x36356AC")]
		public void SetMethod(MethodInfo newMethod)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x3635FD4", Offset = "0x3635FD4", VA = "0x3635FD4")]
		private Type GetParamType()
		{
			return null;
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x363610C", Offset = "0x363610C", VA = "0x363610C")]
		public MethodInfo GetMethod()
		{
			return null;
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x3635AD8", Offset = "0x3635AD8", VA = "0x3635AD8")]
		private void ConstructUnityAction()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x36362E4", Offset = "0x36362E4", VA = "0x36362E4")]
		public void Invoke()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E1")]
	public class SplineTrigger : ScriptableObject
	{
		[Token(Token = "0x20004DC")]
		public enum Type
		{
			[Token(Token = "0x4001D93")]
			Double,
			[Token(Token = "0x4001D94")]
			Forward,
			[Token(Token = "0x4001D95")]
			Backward
		}

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type type;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F0BB8", Offset = "0x16F0BB8")]
		public double position;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public Color color;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public SplineAction[] actions;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] gameObjects;

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x3719A00", Offset = "0x3719A00", VA = "0x3719A00")]
		public SplineTrigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E2")]
	public class Trigger
	{
		[Token(Token = "0x20004DD")]
		public enum Type
		{
			[Token(Token = "0x4001D97")]
			Double,
			[Token(Token = "0x4001D98")]
			Forward,
			[Token(Token = "0x4001D99")]
			Backward
		}

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type type;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool workOnce;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool worked;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F0C38", Offset = "0x16F0C38")]
		public double position;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public Color color;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public SplineAction[] actions;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] gameObjects;

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x371900C", Offset = "0x371900C", VA = "0x371900C")]
		public void Create(Type t, UnityAction call)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x3719138", Offset = "0x3719138", VA = "0x3719138")]
		public void Create(Type t, UnityAction<int> call, int value)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x3719254", Offset = "0x3719254", VA = "0x3719254")]
		public void Create(Type t, UnityAction<float> call, float value)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x3719378", Offset = "0x3719378", VA = "0x3719378")]
		public void Create(Type t, UnityAction<double> call, double value)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x37194A4", Offset = "0x37194A4", VA = "0x37194A4")]
		public void Create(Type t, UnityAction<string> call, string value)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x37195C8", Offset = "0x37195C8", VA = "0x37195C8")]
		public void Create(Type t, UnityAction<bool> call, bool value)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x3719810", Offset = "0x3719810", VA = "0x3719810")]
		public void Create(Type t, UnityAction<Transform> call, Transform value)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x37196EC", Offset = "0x37196EC", VA = "0x37196EC")]
		public void Create(Type t, UnityAction<GameObject> call, GameObject value)
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x3723064", Offset = "0x3723064", VA = "0x3723064")]
		public void Create(Type t)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x3717AC8", Offset = "0x3717AC8", VA = "0x3717AC8")]
		public void ResetWorkOnce()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x371881C", Offset = "0x371881C", VA = "0x371881C")]
		public bool Check(double previousPercent, double currentPercent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x3718A48", Offset = "0x3718A48", VA = "0x3718A48")]
		public void Invoke()
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x3723144", Offset = "0x3723144", VA = "0x3723144")]
		private void AddAction()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x372324C", Offset = "0x372324C", VA = "0x372324C")]
		public void AddListener(MonoBehaviour behavior, string method, object arg)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x37230C8", Offset = "0x37230C8", VA = "0x37230C8")]
		public void AddAction(SplineAction action)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x3718DDC", Offset = "0x3718DDC", VA = "0x3718DDC")]
		public Trigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E3")]
	public class TransformModule
	{
		[Token(Token = "0x20004DE")]
		public enum VelocityHandleMode
		{
			[Token(Token = "0x4001D9B")]
			Zero,
			[Token(Token = "0x4001D9C")]
			Preserve,
			[Token(Token = "0x4001D9D")]
			Align,
			[Token(Token = "0x4001D9E")]
			AlignRealistic
		}

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F0CA8", Offset = "0x16F0CA8")]
		private Vector2 _offset;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F0D04", Offset = "0x16F0D04")]
		private UnityEngine.Vector3 _rotationOffset;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F0D60", Offset = "0x16F0D60")]
		private UnityEngine.Vector3 _baseScale;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VelocityHandleMode velocityHandleMode;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplineResult _splineResult;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CustomRotationModule customRotation;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CustomOffsetModule customOffset;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool applyPositionX;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool applyPositionY;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool applyPositionZ;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Spline.Direction direction;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool applyRotationX;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool applyRotationY;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool applyRotationZ;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool applyScaleX;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool applyScaleY;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool applyScaleZ;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public SplineUser targetUser;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UnityEngine.Vector3 position;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Quaternion rotation;

		[Token(Token = "0x1700021A")]
		public Vector2 offset
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x37223F0", Offset = "0x37223F0", VA = "0x37223F0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x37175C8", Offset = "0x37175C8", VA = "0x37175C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public UnityEngine.Vector3 rotationOffset
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x37223F8", Offset = "0x37223F8", VA = "0x37223F8")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x3717730", Offset = "0x3717730", VA = "0x3717730")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public UnityEngine.Vector3 baseScale
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x3722404", Offset = "0x3722404", VA = "0x3722404")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x3722410", Offset = "0x3722410", VA = "0x3722410")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public SplineResult splineResult
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x3722530", Offset = "0x3722530", VA = "0x3722530")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x3718424", Offset = "0x3718424", VA = "0x3718424")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public bool applyPosition
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x3717398", Offset = "0x3717398", VA = "0x3717398")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x37173F8", Offset = "0x37173F8", VA = "0x37173F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public bool applyRotation
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x371744C", Offset = "0x371744C", VA = "0x371744C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x37174AC", Offset = "0x37174AC", VA = "0x37174AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public bool applyScale
		{
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x3717500", Offset = "0x3717500", VA = "0x3717500")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x3717560", Offset = "0x3717560", VA = "0x3717560")]
			set
			{
			}
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x37184B4", Offset = "0x37184B4", VA = "0x37184B4")]
		public void ApplyTransform(Transform input)
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x3718538", Offset = "0x3718538", VA = "0x3718538")]
		public void ApplyRigidbody(Rigidbody input)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x371865C", Offset = "0x371865C", VA = "0x371865C")]
		public void ApplyRigidbody2D(Rigidbody2D input)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x3722CB8", Offset = "0x3722CB8", VA = "0x3722CB8")]
		private UnityEngine.Vector3 HandleVelocity(UnityEngine.Vector3 velocity)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x37225A4", Offset = "0x37225A4", VA = "0x37225A4")]
		private UnityEngine.Vector3 GetPosition(UnityEngine.Vector3 inputPosition)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x37228CC", Offset = "0x37228CC", VA = "0x37228CC")]
		private Quaternion GetRotation(Quaternion inputRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x3722C50", Offset = "0x3722C50", VA = "0x3722C50")]
		private UnityEngine.Vector3 GetScale(UnityEngine.Vector3 inputScale)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x371713C", Offset = "0x371713C", VA = "0x371713C")]
		public TransformModule()
		{
		}
	}
}
namespace Dreamteck.Splines.Primitives
{
	[Token(Token = "0x20001E4")]
	public class Capsule : SplinePrimitive
	{
		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x362D430", Offset = "0x362D430", VA = "0x362D430", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x362DD58", Offset = "0x362DD58", VA = "0x362DD58")]
		public Capsule()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class Ellipse : SplinePrimitive
	{
		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float xRadius;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yRadius;

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x362DE24", Offset = "0x362DE24", VA = "0x362DE24", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x362E238", Offset = "0x362E238", VA = "0x362E238")]
		public Ellipse()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class Line : SplinePrimitive
	{
		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool mirror;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float length;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int segments;

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x362E244", Offset = "0x362E244", VA = "0x362E244", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x362E4A4", Offset = "0x362E4A4", VA = "0x362E4A4")]
		public Line()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class Ngon : SplinePrimitive
	{
		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int sides;

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x362E4BC", Offset = "0x362E4BC", VA = "0x362E4BC", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x362E698", Offset = "0x362E698", VA = "0x362E698")]
		public Ngon()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class Rectangle : SplinePrimitive
	{
		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 size;

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x362E6A8", Offset = "0x362E6A8", VA = "0x362E6A8", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x362E9D8", Offset = "0x362E9D8", VA = "0x362E9D8")]
		public Rectangle()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class RoundedRectangle : SplinePrimitive
	{
		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 size;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float xRadius;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float yRadius;

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x362EA48", Offset = "0x362EA48", VA = "0x362EA48", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x362F3A0", Offset = "0x362F3A0", VA = "0x362F3A0")]
		public RoundedRectangle()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class Spiral : SplinePrimitive
	{
		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float startRadius;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float endRadius;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float stretch;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int iterations;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve curve;

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x362F418", Offset = "0x362F418", VA = "0x362F418", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x362FA2C", Offset = "0x362FA2C", VA = "0x362FA2C")]
		public Spiral()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class SplinePrimitive
	{
		[Token(Token = "0x20004DF")]
		public enum Axis
		{
			[Token(Token = "0x4001DA0")]
			X,
			[Token(Token = "0x4001DA1")]
			Y,
			[Token(Token = "0x4001DA2")]
			Z,
			[Token(Token = "0x4001DA3")]
			nX,
			[Token(Token = "0x4001DA4")]
			nY,
			[Token(Token = "0x4001DA5")]
			nZ
		}

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool closed;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SplinePoint[] points;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Spline.Type type;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Axis axis;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 offset;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public UnityEngine.Vector3 rotation;

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x362DBDC", Offset = "0x362DBDC", VA = "0x362DBDC", Slot = "4")]
		protected virtual void Generate()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x362FAB0", Offset = "0x362FAB0", VA = "0x362FAB0")]
		public Spline GetSpline()
		{
			return null;
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x36300AC", Offset = "0x36300AC", VA = "0x36300AC")]
		public void UpdateSpline(Spline spline)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x363019C", Offset = "0x363019C", VA = "0x363019C")]
		public SplineComputer CreateSplineComputer(string name, UnityEngine.Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x3630924", Offset = "0x3630924", VA = "0x3630924")]
		public void UpdateSplineComputer(SplineComputer comp)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x362FB5C", Offset = "0x362FB5C", VA = "0x362FB5C")]
		private void ApplyOffset()
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x362DBE0", Offset = "0x362DBE0", VA = "0x362DBE0")]
		protected void CreatePoints(int count, SplinePoint.Type type)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x3630A18", Offset = "0x3630A18", VA = "0x3630A18")]
		protected UnityEngine.Vector3 GetNormal()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x362DD68", Offset = "0x362DD68", VA = "0x362DD68")]
		public SplinePrimitive()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class Star : SplinePrimitive
	{
		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float depth;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int sides;

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x3630B8C", Offset = "0x3630B8C", VA = "0x3630B8C", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x3630DD8", Offset = "0x3630DD8", VA = "0x3630DD8")]
		public Star()
		{
		}
	}
}
namespace Dreamteck.Splines.IO
{
	[Token(Token = "0x20001ED")]
	public class CSV : SplineParser
	{
		[Token(Token = "0x20004E0")]
		public enum ColumnType
		{
			[Token(Token = "0x4001DA7")]
			Position,
			[Token(Token = "0x4001DA8")]
			Tangent,
			[Token(Token = "0x4001DA9")]
			Tangent2,
			[Token(Token = "0x4001DAA")]
			Normal,
			[Token(Token = "0x4001DAB")]
			Size,
			[Token(Token = "0x4001DAC")]
			Color
		}

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ColumnType> columns;

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x233CE0C", Offset = "0x233CE0C", VA = "0x233CE0C")]
		public CSV(SplineComputer computer)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x233CFFC", Offset = "0x233CFFC", VA = "0x233CFFC")]
		public CSV(string filePath, [Optional] List<ColumnType> customColumns)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x233D280", Offset = "0x233D280", VA = "0x233D280")]
		private void Read(string[] lines)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x233DD78", Offset = "0x233DD78", VA = "0x233DD78")]
		public SplineComputer CreateSplineComputer(UnityEngine.Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x233DD94", Offset = "0x233DD94", VA = "0x233DD94")]
		public Spline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x233DDB0", Offset = "0x233DDB0", VA = "0x233DDB0")]
		public void FlatX()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x233DF34", Offset = "0x233DF34", VA = "0x233DF34")]
		public void FlatY()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x233E0BC", Offset = "0x233E0BC", VA = "0x233E0BC")]
		public void FlatZ()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x233E284", Offset = "0x233E284", VA = "0x233E284")]
		private void AddTitle(ref string[] content, string title)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x233E364", Offset = "0x233E364", VA = "0x233E364")]
		private void AddVector3Title(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x233E560", Offset = "0x233E560", VA = "0x233E560")]
		private void AddColorTitle(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x233E7D4", Offset = "0x233E7D4", VA = "0x233E7D4")]
		private void AddVector3(ref string[] content, int index, UnityEngine.Vector3 vector)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x233E940", Offset = "0x233E940", VA = "0x233E940")]
		private void AddColor(ref string[] content, int index, Color color)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x233E824", Offset = "0x233E824", VA = "0x233E824")]
		private void AddFloat(ref string[] content, int index, float value)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x233E9AC", Offset = "0x233E9AC", VA = "0x233E9AC")]
		public void Write(string filePath)
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class SVG : SplineParser
	{
		[Token(Token = "0x20004E1")]
		public enum Axis
		{
			[Token(Token = "0x4001DAE")]
			X,
			[Token(Token = "0x4001DAF")]
			Y,
			[Token(Token = "0x4001DB0")]
			Z
		}

		[Token(Token = "0x20004E2")]
		internal class PathSegment
		{
			[Token(Token = "0x2000622")]
			internal enum Type
			{
				[Token(Token = "0x40022F5")]
				Cubic,
				[Token(Token = "0x40022F6")]
				CubicShort,
				[Token(Token = "0x40022F7")]
				Quadratic,
				[Token(Token = "0x40022F8")]
				QuadraticShort
			}

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal UnityEngine.Vector3 startTangent;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal UnityEngine.Vector3 endTangent;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal UnityEngine.Vector3 endPoint;

			[Token(Token = "0x6002061")]
			[Address(RVA = "0x33FC8F8", Offset = "0x33FC8F8", VA = "0x33FC8F8")]
			internal PathSegment(Vector2 s, Vector2 e, Vector2 c)
			{
			}

			[Token(Token = "0x6002062")]
			[Address(RVA = "0x33FC860", Offset = "0x33FC860", VA = "0x33FC860")]
			internal PathSegment()
			{
			}
		}

		[Token(Token = "0x20004E3")]
		public enum Element
		{
			[Token(Token = "0x4001DB5")]
			All,
			[Token(Token = "0x4001DB6")]
			Path,
			[Token(Token = "0x4001DB7")]
			Polygon,
			[Token(Token = "0x4001DB8")]
			Ellipse,
			[Token(Token = "0x4001DB9")]
			Rectangle,
			[Token(Token = "0x4001DBA")]
			Line
		}

		[Serializable]
		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E97D4", Offset = "0x16E97D4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__23_0;

			[Token(Token = "0x6002064")]
			[Address(RVA = "0x33FCAE4", Offset = "0x33FCAE4", VA = "0x33FCAE4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002065")]
			[Address(RVA = "0x33FCAEC", Offset = "0x33FCAEC", VA = "0x33FCAEC")]
			internal bool <ReadPath>b__23_0(string t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SplineDefinition> paths;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SplineDefinition> polygons;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SplineDefinition> ellipses;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SplineDefinition> rectangles;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SplineDefinition> lines;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Transformation> transformBuffer;

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x33F5584", Offset = "0x33F5584", VA = "0x33F5584")]
		public SVG(string filePath)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x33F59C0", Offset = "0x33F59C0", VA = "0x33F59C0")]
		public SVG(List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x33F5F08", Offset = "0x33F5F08", VA = "0x33F5F08")]
		public void Write(string filePath, Axis ax = Axis.Z)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x33F6E10", Offset = "0x33F6E10", VA = "0x33F6E10")]
		private Vector2 MapPoint(UnityEngine.Vector3 original, Axis ax)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x33F593C", Offset = "0x33F593C", VA = "0x33F593C")]
		private void Read(XmlDocument doc)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x33F6EF8", Offset = "0x33F6EF8", VA = "0x33F6EF8")]
		private void Traverse(XmlNodeList nodes)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x33F8A2C", Offset = "0x33F8A2C", VA = "0x33F8A2C")]
		public List<SplineComputer> CreateSplineComputers(UnityEngine.Vector3 position, Quaternion rotation, Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x33F926C", Offset = "0x33F926C", VA = "0x33F926C")]
		public List<Spline> CreateSplines(Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x33F859C", Offset = "0x33F859C", VA = "0x33F859C")]
		private int ReadRectangle(XmlNode rectNode)
		{
			return default(int);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x33F82B0", Offset = "0x33F82B0", VA = "0x33F82B0")]
		private int ReadLine(XmlNode lineNode)
		{
			return default(int);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x33F7E94", Offset = "0x33F7E94", VA = "0x33F7E94")]
		private int ReadEllipse(XmlNode ellipseNode)
		{
			return default(int);
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x33F7BAC", Offset = "0x33F7BAC", VA = "0x33F7BAC")]
		private int ReadPolygon(XmlNode polyNode, bool closed)
		{
			return default(int);
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x33F7424", Offset = "0x33F7424", VA = "0x33F7424")]
		private int ParseTransformation(XmlNode node)
		{
			return default(int);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x33F9E94", Offset = "0x33F9E94", VA = "0x33F9E94")]
		private List<Transformation> ParseTransformations(string transformContent)
		{
			return null;
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x33F74E0", Offset = "0x33F74E0", VA = "0x33F74E0")]
		private int ReadPath(XmlNode pathNode)
		{
			return default(int);
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x33FAD1C", Offset = "0x33FAD1C", VA = "0x33FAD1C")]
		private void PathStart(string name, string coords, bool relative)
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x33FAEFC", Offset = "0x33FAEFC", VA = "0x33FAEFC")]
		private void PathClose()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x33FAF1C", Offset = "0x33FAF1C", VA = "0x33FAF1C")]
		private void PathLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x33FB0B0", Offset = "0x33FB0B0", VA = "0x33FB0B0")]
		private void PathHorizontalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x33FB164", Offset = "0x33FB164", VA = "0x33FB164")]
		private void PathVerticalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x33FB220", Offset = "0x33FB220", VA = "0x33FB220")]
		private void PathCurveTo(string coords, PathSegment.Type type, bool relative)
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x33F99C4", Offset = "0x33F99C4", VA = "0x33F99C4")]
		private void WriteBufferTo(List<SplineDefinition> list)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x33FBB04", Offset = "0x33FBB04", VA = "0x33FBB04")]
		private PathSegment[] ParsePathSegment(string coord, PathSegment.Type type)
		{
			return null;
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x33F6750", Offset = "0x33F6750", VA = "0x33F6750")]
		private string EncodePath(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x33F64A8", Offset = "0x33F64A8", VA = "0x33F64A8")]
		private string EncodePolygon(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x33F988C", Offset = "0x33F988C", VA = "0x33F988C")]
		private string GetAttributeContent(XmlNode node, string attributeName)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EF")]
	public class SplineParser
	{
		[Token(Token = "0x20004E5")]
		internal class Transformation
		{
			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected static Matrix4x4 matrix;

			[Token(Token = "0x6002066")]
			[Address(RVA = "0x33FD5C0", Offset = "0x33FD5C0", VA = "0x33FD5C0")]
			internal static void ResetMatrix()
			{
			}

			[Token(Token = "0x6002067")]
			[Address(RVA = "0x33FD89C", Offset = "0x33FD89C", VA = "0x33FD89C", Slot = "4")]
			internal virtual void Push()
			{
			}

			[Token(Token = "0x6002068")]
			[Address(RVA = "0x33FD6EC", Offset = "0x33FD6EC", VA = "0x33FD6EC")]
			internal static void Apply(SplinePoint[] points)
			{
			}

			[Token(Token = "0x6002069")]
			[Address(RVA = "0x33FCBDC", Offset = "0x33FCBDC", VA = "0x33FCBDC")]
			public Transformation()
			{
			}
		}

		[Token(Token = "0x20004E6")]
		internal class Translate : Transformation
		{
			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 offset;

			[Token(Token = "0x600206B")]
			[Address(RVA = "0x33FA8C4", Offset = "0x33FA8C4", VA = "0x33FA8C4")]
			public Translate(Vector2 o)
			{
			}

			[Token(Token = "0x600206C")]
			[Address(RVA = "0x33FD8A4", Offset = "0x33FD8A4", VA = "0x33FD8A4", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20004E7")]
		internal class Rotate : Transformation
		{
			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float angle;

			[Token(Token = "0x600206D")]
			[Address(RVA = "0x33FA970", Offset = "0x33FA970", VA = "0x33FA970")]
			public Rotate(float a)
			{
			}

			[Token(Token = "0x600206E")]
			[Address(RVA = "0x33FCCE8", Offset = "0x33FCCE8", VA = "0x33FCCE8", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20004E8")]
		internal class Scale : Transformation
		{
			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 multiplier;

			[Token(Token = "0x600206F")]
			[Address(RVA = "0x33FA9EC", Offset = "0x33FA9EC", VA = "0x33FA9EC")]
			public Scale(Vector2 s)
			{
			}

			[Token(Token = "0x6002070")]
			[Address(RVA = "0x33FCEF0", Offset = "0x33FCEF0", VA = "0x33FCEF0", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20004E9")]
		internal class SkewX : Transformation
		{
			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x6002071")]
			[Address(RVA = "0x33FAA98", Offset = "0x33FAA98", VA = "0x33FAA98")]
			public SkewX(float a)
			{
			}

			[Token(Token = "0x6002072")]
			[Address(RVA = "0x33FD0FC", Offset = "0x33FD0FC", VA = "0x33FD0FC", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20004EA")]
		internal class SkewY : Transformation
		{
			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x6002073")]
			[Address(RVA = "0x33FAB14", Offset = "0x33FAB14", VA = "0x33FAB14")]
			public SkewY(float a)
			{
			}

			[Token(Token = "0x6002074")]
			[Address(RVA = "0x33FD2CC", Offset = "0x33FD2CC", VA = "0x33FD2CC", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20004EB")]
		internal class MatrixTransform : Transformation
		{
			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Matrix4x4 transformMatrix;

			[Token(Token = "0x6002075")]
			[Address(RVA = "0x33FAB90", Offset = "0x33FAB90", VA = "0x33FAB90")]
			public MatrixTransform(float a, float b, float c, float d, float e, float f)
			{
			}

			[Token(Token = "0x6002076")]
			[Address(RVA = "0x33FCBE4", Offset = "0x33FCBE4", VA = "0x33FCBE4", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x20004EC")]
		internal class SplineDefinition
		{
			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string name;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Spline.Type type;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal List<SplinePoint> points;

			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool closed;

			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal UnityEngine.Vector3 position;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal UnityEngine.Vector3 tangent;

			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal UnityEngine.Vector3 tangent2;

			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal UnityEngine.Vector3 normal;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal float size;

			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal Color color;

			[Token(Token = "0x170004AD")]
			internal int pointCount
			{
				[Token(Token = "0x6002077")]
				[Address(RVA = "0x33FCA2C", Offset = "0x33FCA2C", VA = "0x33FCA2C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002078")]
			[Address(RVA = "0x33F9A50", Offset = "0x33F9A50", VA = "0x33F9A50")]
			internal SplineDefinition(string n, Spline.Type t)
			{
			}

			[Token(Token = "0x6002079")]
			[Address(RVA = "0x33F5D64", Offset = "0x33F5D64", VA = "0x33F5D64")]
			internal SplineDefinition(string n, Spline spline)
			{
			}

			[Token(Token = "0x600207A")]
			[Address(RVA = "0x33FC304", Offset = "0x33FC304", VA = "0x33FC304")]
			internal SplinePoint GetLastPoint()
			{
				return default(SplinePoint);
			}

			[Token(Token = "0x600207B")]
			[Address(RVA = "0x33FC3A0", Offset = "0x33FC3A0", VA = "0x33FC3A0")]
			internal void SetLastPoint(SplinePoint point)
			{
			}

			[Token(Token = "0x600207C")]
			[Address(RVA = "0x33F9DB0", Offset = "0x33F9DB0", VA = "0x33F9DB0")]
			internal void CreateClosingPoint()
			{
			}

			[Token(Token = "0x600207D")]
			[Address(RVA = "0x33FD49C", Offset = "0x33FD49C", VA = "0x33FD49C")]
			internal void CreateSmooth()
			{
			}

			[Token(Token = "0x600207E")]
			[Address(RVA = "0x33FC44C", Offset = "0x33FC44C", VA = "0x33FC44C")]
			internal void CreateBroken()
			{
			}

			[Token(Token = "0x600207F")]
			[Address(RVA = "0x33F9B98", Offset = "0x33F9B98", VA = "0x33F9B98")]
			internal void CreateLinear()
			{
			}

			[Token(Token = "0x6002080")]
			[Address(RVA = "0x33F9060", Offset = "0x33F9060", VA = "0x33F9060")]
			internal SplineComputer CreateSplineComputer(UnityEngine.Vector3 position, Quaternion rotation)
			{
				return null;
			}

			[Token(Token = "0x6002081")]
			[Address(RVA = "0x33F97D8", Offset = "0x33F97D8", VA = "0x33F97D8")]
			internal Spline CreateSpline()
			{
				return null;
			}

			[Token(Token = "0x6002082")]
			[Address(RVA = "0x33FC5EC", Offset = "0x33FC5EC", VA = "0x33FC5EC")]
			internal void Transform(List<Transformation> trs)
			{
			}
		}

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string fileName;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal SplineDefinition buffer;

		[Token(Token = "0x17000221")]
		public string name
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x33FCB10", Offset = "0x33FCB10", VA = "0x33FCB10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x33FB800", Offset = "0x33FB800", VA = "0x33FB800")]
		internal Vector2[] ParseVector2(string coord)
		{
			return null;
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x33FBA0C", Offset = "0x33FBA0C", VA = "0x33FBA0C")]
		internal float[] ParseFloat(string coord)
		{
			return null;
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x33F9BAC", Offset = "0x33F9BAC", VA = "0x33F9BAC")]
		internal List<float> ParseFloatArray(string content)
		{
			return null;
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x33FCB18", Offset = "0x33FCB18", VA = "0x33FCB18")]
		public bool IsWHiteSpace(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x33F58DC", Offset = "0x33F58DC", VA = "0x33F58DC")]
		public SplineParser()
		{
		}
	}
}
namespace Combu
{
	[Serializable]
	[Token(Token = "0x20001F0")]
	public class Achievement : IAchievement, IAchievementDescription, IComparer
	{
		[Token(Token = "0x20004ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E97E4", Offset = "0x16E97E4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x6002083")]
			[Address(RVA = "0x2DD6B1C", Offset = "0x2DD6B1C", VA = "0x2DD6B1C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002084")]
			[Address(RVA = "0x2DD7210", Offset = "0x2DD7210", VA = "0x2DD7210")]
			internal void <ReportProgress>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _title;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _description;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _finished;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _progress;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0DCC", Offset = "0x16F0DCC")]
		private string <id>k__BackingField;

		[NonSerialized]
		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Texture2D _image;

		[Token(Token = "0x17000222")]
		public string id
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x2DD6E00", Offset = "0x2DD6E00", VA = "0x2DD6E00", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17015D8", Offset = "0x17015D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x2DD6E08", Offset = "0x2DD6E08", VA = "0x2DD6E08", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17015E8", Offset = "0x17015E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public double percentCompleted
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x2DD6E10", Offset = "0x2DD6E10", VA = "0x2DD6E10", Slot = "5")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x2DD6E28", Offset = "0x2DD6E28", VA = "0x2DD6E28", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public bool completed
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x2DD6EB0", Offset = "0x2DD6EB0", VA = "0x2DD6EB0", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000225")]
		public bool hidden
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0x2DD6EC0", Offset = "0x2DD6EC0", VA = "0x2DD6EC0", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000226")]
		public DateTime lastReportedDate
		{
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x2DD6EC8", Offset = "0x2DD6EC8", VA = "0x2DD6EC8", Slot = "13")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x17000227")]
		public string title
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x2DD6F30", Offset = "0x2DD6F30", VA = "0x2DD6F30", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public string description
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0x2DD6F38", Offset = "0x2DD6F38", VA = "0x2DD6F38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public int finished
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0x2DD6F40", Offset = "0x2DD6F40", VA = "0x2DD6F40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022A")]
		public Texture2D image
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x2DD6F48", Offset = "0x2DD6F48", VA = "0x2DD6F48", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public string achievedDescription
		{
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x2DD6F50", Offset = "0x2DD6F50", VA = "0x2DD6F50", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		public string unachievedDescription
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x2DD6F58", Offset = "0x2DD6F58", VA = "0x2DD6F58", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		public int points
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x2DD6F60", Offset = "0x2DD6F60", VA = "0x2DD6F60", Slot = "18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x2DD63F4", Offset = "0x2DD63F4", VA = "0x2DD63F4")]
		public Achievement()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x2DD6464", Offset = "0x2DD6464", VA = "0x2DD6464")]
		public Achievement(string jsonString)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x2DD64F4", Offset = "0x2DD64F4", VA = "0x2DD64F4", Slot = "7")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x2DD6854", Offset = "0x2DD6854", VA = "0x2DD6854", Slot = "8")]
		public void ReportProgress(Action<bool> callback)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x2DD6F68", Offset = "0x2DD6F68", VA = "0x2DD6F68", Slot = "6")]
		public int Compare(object x, object y)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001F1")]
	public class CombuEncryption
	{
		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string token;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string rsaXml;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string rsaModulus;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string rsaExponent;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] aesKey;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte[] aesIV;

		[Token(Token = "0x1700022E")]
		public string Token
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x2DD7380", Offset = "0x2DD7380", VA = "0x2DD7380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		public string Key
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x2DD7388", Offset = "0x2DD7388", VA = "0x2DD7388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		public string IV
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x2DD73F4", Offset = "0x2DD73F4", VA = "0x2DD73F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x2DD7460", Offset = "0x2DD7460", VA = "0x2DD7460")]
		public CombuEncryption()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x2DD76AC", Offset = "0x2DD76AC", VA = "0x2DD76AC")]
		public void SetToken(string sessionToken)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x2DD76B4", Offset = "0x2DD76B4", VA = "0x2DD76B4")]
		public void LoadRSA(string sessionToken, string xml)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x2DD7CF0", Offset = "0x2DD7CF0", VA = "0x2DD7CF0")]
		public void LoadRSA(string sessionToken, string modulus, string exponent)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x2DD7538", Offset = "0x2DD7538", VA = "0x2DD7538")]
		private void GenerateAES()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x2DD7D88", Offset = "0x2DD7D88", VA = "0x2DD7D88")]
		public string EncryptRSA(string inputString)
		{
			return null;
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x2DD8124", Offset = "0x2DD8124", VA = "0x2DD8124")]
		public string EncryptAES(string inputString)
		{
			return null;
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x2DD85E0", Offset = "0x2DD85E0", VA = "0x2DD85E0")]
		public string DecryptAES(string inputString)
		{
			return null;
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x2DD8C10", Offset = "0x2DD8C10", VA = "0x2DD8C10")]
		private string HashToString(byte[] result)
		{
			return null;
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x2DD8CFC", Offset = "0x2DD8CFC", VA = "0x2DD8CFC")]
		public string EncryptMD5(string inputString)
		{
			return null;
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x2DD8DCC", Offset = "0x2DD8DCC", VA = "0x2DD8DCC")]
		public string EncryptSHA1(string inputString)
		{
			return null;
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x2DD8E9C", Offset = "0x2DD8E9C", VA = "0x2DD8E9C")]
		public string DecryptResponse(string text)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F2")]
	public enum eContactType
	{
		[Token(Token = "0x4000D06")]
		PendingRequest = -1,
		[Token(Token = "0x4000D07")]
		Friend = 0,
		[Token(Token = "0x4000D08")]
		Request = 1,
		[Token(Token = "0x4000D09")]
		Ignore = 2,
		[Token(Token = "0x4000D0A")]
		MinValue = 0,
		[Token(Token = "0x4000D0B")]
		MaxValue = 2
	}
	[Token(Token = "0x20001F3")]
	public enum eMailList
	{
		[Token(Token = "0x4000D0D")]
		Received,
		[Token(Token = "0x4000D0E")]
		Sent,
		[Token(Token = "0x4000D0F")]
		Both,
		[Token(Token = "0x4000D10")]
		Unread
	}
	[Token(Token = "0x20001F4")]
	public enum eSearchOperator
	{
		[Token(Token = "0x4000D12")]
		Equals,
		[Token(Token = "0x4000D13")]
		Disequals,
		[Token(Token = "0x4000D14")]
		Like,
		[Token(Token = "0x4000D15")]
		Greater,
		[Token(Token = "0x4000D16")]
		GreaterOrEquals,
		[Token(Token = "0x4000D17")]
		Lower,
		[Token(Token = "0x4000D18")]
		LowerOrEquals
	}
	[Token(Token = "0x20001F5")]
	public enum eLeaderboardInterval
	{
		[Token(Token = "0x4000D1A")]
		Total,
		[Token(Token = "0x4000D1B")]
		Month,
		[Token(Token = "0x4000D1C")]
		Week,
		[Token(Token = "0x4000D1D")]
		Today
	}
	[Token(Token = "0x20001F6")]
	public enum eLeaderboardTimeScope
	{
		[Token(Token = "0x4000D1F")]
		None,
		[Token(Token = "0x4000D20")]
		Month
	}
	[Token(Token = "0x20001F7")]
	public enum eShareType
	{
		[Token(Token = "0x4000D22")]
		Everybody,
		[Token(Token = "0x4000D23")]
		Nobody,
		[Token(Token = "0x4000D24")]
		Friends
	}
	[Token(Token = "0x20001F8")]
	public class CombuForm
	{
		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DateTime now;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, string> textData;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, byte[]> binaryData;

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x2DD9160", Offset = "0x2DD9160", VA = "0x2DD9160")]
		public CombuForm()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x2DD6DC0", Offset = "0x2DD6DC0", VA = "0x2DD6DC0")]
		public static implicit operator WWWForm(CombuForm me)
		{
			return null;
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x2DD6C5C", Offset = "0x2DD6C5C", VA = "0x2DD6C5C")]
		public void AddField(string fieldName, string value)
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x2DD9768", Offset = "0x2DD9768", VA = "0x2DD9768")]
		public void AddBinaryData(string fieldName, byte[] content)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x2DD9818", Offset = "0x2DD9818", VA = "0x2DD9818")]
		public string GetField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x2DD98CC", Offset = "0x2DD98CC", VA = "0x2DD98CC")]
		public byte[] GetBinaryField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x2DD93A8", Offset = "0x2DD93A8", VA = "0x2DD93A8")]
		public WWWForm GetForm()
		{
			return null;
		}
	}
	[Token(Token = "0x20001F9")]
	public class CombuManager : MonoBehaviour
	{
		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E97F4", Offset = "0x16E97F4")]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombuManager <>4__this;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string error;

			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<string, string> onComplete;

			[Token(Token = "0x6002085")]
			[Address(RVA = "0x2DDB2F4", Offset = "0x2DDB2F4", VA = "0x2DDB2F4")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x6002086")]
			[Address(RVA = "0x2DDB2FC", Offset = "0x2DDB2FC", VA = "0x2DDB2FC")]
			internal void <DownloadUrl>b__0()
			{
			}
		}

		[Token(Token = "0x20004EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9804", Offset = "0x16E9804")]
		private sealed class <DownloadUrl>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombuManager <>4__this;

			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<string, string> onComplete;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string url;

			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public WWWForm form;

			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass55_0 <>8__1;

			[Token(Token = "0x4001DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool <cancelled>5__2;

			[Token(Token = "0x4001DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UnityWebRequestAsyncOperation <op>5__4;

			[Token(Token = "0x170004AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600208B")]
				[Address(RVA = "0x2DDCBFC", Offset = "0x2DDCBFC", VA = "0x2DDCBFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600208D")]
				[Address(RVA = "0x2DDCC64", Offset = "0x2DDCC64", VA = "0x2DDCC64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002087")]
			[Address(RVA = "0x2DDA4C8", Offset = "0x2DDA4C8", VA = "0x2DDA4C8")]
			[DebuggerHidden]
			public <DownloadUrl>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x6002088")]
			[Address(RVA = "0x2DDC5F8", Offset = "0x2DDC5F8", VA = "0x2DDC5F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002089")]
			[Address(RVA = "0x2DDC6D4", Offset = "0x2DDC6D4", VA = "0x2DDC6D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600208A")]
			[Address(RVA = "0x2DDC614", Offset = "0x2DDC614", VA = "0x2DDC614")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600208C")]
			[Address(RVA = "0x2DDCC04", Offset = "0x2DDCC04", VA = "0x2DDCC04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9814", Offset = "0x16E9814")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Camera> <>9__62_0;

			[Token(Token = "0x600208F")]
			[Address(RVA = "0x2DDB2C0", Offset = "0x2DDB2C0", VA = "0x2DDB2C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002090")]
			[Address(RVA = "0x2DDB2C8", Offset = "0x2DDB2C8", VA = "0x2DDB2C8")]
			internal bool <CaptureScreenshot>b__62_0(Camera cam)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9824", Offset = "0x16E9824")]
		private sealed class <>c__DisplayClass68_0
		{
			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WWWForm form;

			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CombuManager <>4__this;

			[Token(Token = "0x4001DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<bool> callback;

			[Token(Token = "0x4001DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool, CombuServerInfo> <>9__2;

			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<string, string> <>9__1;

			[Token(Token = "0x6002091")]
			[Address(RVA = "0x2DDAD78", Offset = "0x2DDAD78", VA = "0x2DDAD78")]
			public <>c__DisplayClass68_0()
			{
			}

			[Token(Token = "0x6002092")]
			[Address(RVA = "0x2DDB3C0", Offset = "0x2DDB3C0", VA = "0x2DDB3C0")]
			internal void <InitializeServer>b__0(string text, string error)
			{
			}

			[Token(Token = "0x6002093")]
			[Address(RVA = "0x2DDBA64", Offset = "0x2DDBA64", VA = "0x2DDBA64")]
			internal void <InitializeServer>b__1(string textAuthorize, string errorAuthorize)
			{
			}

			[Token(Token = "0x6002094")]
			[Address(RVA = "0x2DDBCF4", Offset = "0x2DDBCF4", VA = "0x2DDBCF4")]
			internal void <InitializeServer>b__2(bool success, CombuServerInfo loadedInfo)
			{
			}
		}

		[Token(Token = "0x20004F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9834", Offset = "0x16E9834")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x4001DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, CombuServerInfo> callback;

			[Token(Token = "0x6002095")]
			[Address(RVA = "0x2DDAEAC", Offset = "0x2DDAEAC", VA = "0x2DDAEAC")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x6002096")]
			[Address(RVA = "0x2DDBEC8", Offset = "0x2DDBEC8", VA = "0x2DDBEC8")]
			internal void <GetServerInfo>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9844", Offset = "0x16E9844")]
		private sealed class <>c__DisplayClass70_0
		{
			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x6002097")]
			[Address(RVA = "0x2DDB05C", Offset = "0x2DDB05C", VA = "0x2DDB05C")]
			public <>c__DisplayClass70_0()
			{
			}

			[Token(Token = "0x6002098")]
			[Address(RVA = "0x2DDC390", Offset = "0x2DDC390", VA = "0x2DDC390")]
			internal void <Ping>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x4000D28")]
		public const string COMBU_VERSION = "3.2.1";

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static CombuManager _instance;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static CombuPlatform _platform;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static CombuEncryption encryption;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ISocialPlatform _defaultSocialPlatform;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected CombuServerInfo _serverInfo;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool downloading;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		protected bool cancelling;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool initialized;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool dontDestroyOnLoad;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool setAsDefaultSocialPlatform;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool connectOnAwake;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool useExperimentalThreaded;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float retryConnectAfterSeconds;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string appId;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string appSecret;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string urlRootProduction;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string urlRootStage;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useStage;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool logDebugInfo;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool rememberCredentials;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float pingIntervalSeconds;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int onlineSeconds;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int playingSeconds;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string language;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject achievementUIObject;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string achievementUIFunction;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject leaderboardUIObject;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string leaderboardUIFunction;

		[Token(Token = "0x17000231")]
		public static string sessionToken
		{
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x2DD9980", Offset = "0x2DD9980", VA = "0x2DD9980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public static CombuManager instance
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x2DD9B04", Offset = "0x2DD9B04", VA = "0x2DD9B04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public static CombuPlatform platform
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x2DD9B6C", Offset = "0x2DD9B6C", VA = "0x2DD9B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public static User localUser
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x2DD9BD4", Offset = "0x2DD9BD4", VA = "0x2DD9BD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public static bool isInitialized
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x2DD6B24", Offset = "0x2DD6B24", VA = "0x2DD6B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000236")]
		public ISocialPlatform defaultSocialPlatform
		{
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x2DD9CAC", Offset = "0x2DD9CAC", VA = "0x2DD9CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		public bool isDownloading
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x2DD9CB4", Offset = "0x2DD9CB4", VA = "0x2DD9CB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000238")]
		public bool isCancelling
		{
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x2DD9CBC", Offset = "0x2DD9CBC", VA = "0x2DD9CBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000239")]
		public bool isAuthenticated
		{
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x2DD9CC4", Offset = "0x2DD9CC4", VA = "0x2DD9CC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023A")]
		public CombuServerInfo serverInfo
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x2DD9D58", Offset = "0x2DD9D58", VA = "0x2DD9D58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x2DD9D60", Offset = "0x2DD9D60", VA = "0x2DD9D60", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x2DD9FA4", Offset = "0x2DD9FA4", VA = "0x2DD9FA4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x2DDA14C", Offset = "0x2DDA14C", VA = "0x2DDA14C", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x2DDA1BC", Offset = "0x2DDA1BC", VA = "0x2DDA1BC", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x2DDA228", Offset = "0x2DDA228", VA = "0x2DDA228")]
		private void PrintDebug(string text, bool isWarning = false, bool isError = false)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x2DDA378", Offset = "0x2DDA378", VA = "0x2DDA378", Slot = "8")]
		protected virtual void AutoPing()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x2DDA400", Offset = "0x2DDA400", VA = "0x2DDA400")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17015F8", Offset = "0x17015F8")]
		protected IEnumerator DownloadUrl(string url, WWWForm form, Action<string, string> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x2DDA4F4", Offset = "0x2DDA4F4", VA = "0x2DDA4F4")]
		private static int CompareCameraDepth(Camera a, Camera b)
		{
			return default(int);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x2DDA094", Offset = "0x2DDA094", VA = "0x2DDA094")]
		public void Connect()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x2DD6DD4", Offset = "0x2DD6DD4", VA = "0x2DD6DD4")]
		public void CallWebservice(string url, WWWForm form, Action<string, string> onComplete)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x2DDA730", Offset = "0x2DDA730", VA = "0x2DDA730")]
		public void CancelRequest()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x2DD6C04", Offset = "0x2DD6C04", VA = "0x2DD6C04")]
		public CombuForm CreateForm()
		{
			return null;
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x2DD6D0C", Offset = "0x2DD6D0C", VA = "0x2DD6D0C")]
		public string GetUrl(string relativeUrl)
		{
			return null;
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x2DDA750", Offset = "0x2DDA750", VA = "0x2DDA750")]
		public static byte[] CaptureScreenshot(int thumbnailHeight = 720, [Optional] List<Camera> excludeCams)
		{
			return null;
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x2DDAB8C", Offset = "0x2DDAB8C", VA = "0x2DDAB8C")]
		public static string EncryptMD5(string inputString)
		{
			return null;
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x2DDAC04", Offset = "0x2DDAC04", VA = "0x2DDAC04")]
		public static string EncryptSHA1(string inputString)
		{
			return null;
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x2DD9A8C", Offset = "0x2DD9A8C", VA = "0x2DD9A8C")]
		public static string EncryptAES(string inputString)
		{
			return null;
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x2DDAC7C", Offset = "0x2DDAC7C", VA = "0x2DDAC7C")]
		public static string DecryptAES(string inputString)
		{
			return null;
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x2DDACF4", Offset = "0x2DDACF4", VA = "0x2DDACF4", Slot = "9")]
		public virtual void SetLocalUser(User user)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x2DDA544", Offset = "0x2DDA544", VA = "0x2DDA544")]
		private void InitializeServer(Action<bool> callback)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x2DDAD80", Offset = "0x2DDAD80", VA = "0x2DDAD80", Slot = "10")]
		public virtual void GetServerInfo(Action<bool, CombuServerInfo> callback)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x2DDAEB4", Offset = "0x2DDAEB4", VA = "0x2DDAEB4", Slot = "11")]
		public virtual void Ping(bool onlyIfAuthenticated = true, [Optional] Action<bool> callback)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x2DDB064", Offset = "0x2DDB064", VA = "0x2DDB064")]
		public CombuManager()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x2DDB14C", Offset = "0x2DDB14C", VA = "0x2DDB14C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170165C", Offset = "0x170165C")]
		private void <AutoPing>b__54_0(bool success)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x2DDB1D8", Offset = "0x2DDB1D8", VA = "0x2DDB1D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170166C", Offset = "0x170166C")]
		private void <Connect>b__57_0(bool success)
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class CombuPlatform : ISocialPlatform
	{
		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9854", Offset = "0x16E9854")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombuPlatform <>4__this;

			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ILocalUser user;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<bool> callback;

			[Token(Token = "0x6002099")]
			[Address(RVA = "0x2DDCE20", Offset = "0x2DDCE20", VA = "0x2DDCE20")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600209A")]
			[Address(RVA = "0x2DDF450", Offset = "0x2DDF450", VA = "0x2DDF450")]
			internal void <Authenticate>b__0(bool success)
			{
			}
		}

		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9864", Offset = "0x16E9864")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<IUserProfile[]> callback;

			[Token(Token = "0x600209B")]
			[Address(RVA = "0x2DDD0E4", Offset = "0x2DDD0E4", VA = "0x2DDD0E4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600209C")]
			[Address(RVA = "0x2DDF524", Offset = "0x2DDF524", VA = "0x2DDF524")]
			internal void <LoadUsers>b__0(User[] profiles)
			{
			}
		}

		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9874", Offset = "0x16E9874")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x600209D")]
			[Address(RVA = "0x2DDD410", Offset = "0x2DDD410", VA = "0x2DDD410")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600209E")]
			[Address(RVA = "0x2DDF598", Offset = "0x2DDF598", VA = "0x2DDF598")]
			internal void <ReportProgress>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9884", Offset = "0x16E9884")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x600209F")]
			[Address(RVA = "0x2DDD644", Offset = "0x2DDD644", VA = "0x2DDD644")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x2DDEF68", Offset = "0x2DDEF68", VA = "0x2DDEF68")]
			internal void <ResetAllAchievements>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9894", Offset = "0x16E9894")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<IAchievementDescription[]> callback;

			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x2DDD7B0", Offset = "0x2DDD7B0", VA = "0x2DDD7B0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x2DDF0D8", Offset = "0x2DDF0D8", VA = "0x2DDF0D8")]
			internal void <LoadAchievementDescriptions>b__0(IAchievement[] achievements)
			{
			}
		}

		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E98A4", Offset = "0x16E98A4")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<IAchievement[]> callback;

			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x2DDD89C", Offset = "0x2DDD89C", VA = "0x2DDD89C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x2DDF1D8", Offset = "0x2DDF1D8", VA = "0x2DDF1D8")]
			internal void <LoadAchievements>b__0(Achievement[] achievements)
			{
			}
		}

		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E98B4", Offset = "0x16E98B4")]
		private sealed class <>c__DisplayClass13_0<T> where T : Achievement, new()
		{
			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CombuPlatform <>4__this;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T[]> callback;

			[Token(Token = "0x60020A5")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60020A6")]
			internal void <LoadAchievements>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E98C4", Offset = "0x16E98C4")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x60020A7")]
			[Address(RVA = "0x2DDDDDC", Offset = "0x2DDDDDC", VA = "0x2DDDDDC")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x2DDF24C", Offset = "0x2DDF24C", VA = "0x2DDF24C")]
			internal void <ReportScore>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E98D4", Offset = "0x16E98D4")]
		private sealed class <LoadScores>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombuPlatform <>4__this;

			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string leaderboardID;

			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int page;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int countPerPage;

			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<IScore[]> callback;

			[Token(Token = "0x170004B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020AC")]
				[Address(RVA = "0x2DDF788", Offset = "0x2DDF788", VA = "0x2DDF788", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020AE")]
				[Address(RVA = "0x2DDF7F0", Offset = "0x2DDF7F0", VA = "0x2DDF7F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x2DDDEC0", Offset = "0x2DDDEC0", VA = "0x2DDDEC0")]
			[DebuggerHidden]
			public <LoadScores>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x2DDF708", Offset = "0x2DDF708", VA = "0x2DDF708", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x2DDF70C", Offset = "0x2DDF70C", VA = "0x2DDF70C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x2DDF790", Offset = "0x2DDF790", VA = "0x2DDF790", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E98E4", Offset = "0x16E98E4")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<IScore[]> callback;

			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Leaderboard leaderboard;

			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x2DDF3BC", Offset = "0x2DDF3BC", VA = "0x2DDF3BC")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x2DDF3C4", Offset = "0x2DDF3C4", VA = "0x2DDF3C4")]
			internal void <LoadScores>b__0(bool success)
			{
			}
		}

		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E98F4", Offset = "0x16E98F4")]
		private sealed class <LoadScores>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<IScore[]> callback;

			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string leaderboardID;

			[Token(Token = "0x4001DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TimeScope timeScope;

			[Token(Token = "0x4001DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int page;

			[Token(Token = "0x4001E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int countPerPage;

			[Token(Token = "0x170004B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020B4")]
				[Address(RVA = "0x2DDFA80", Offset = "0x2DDFA80", VA = "0x2DDFA80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020B6")]
				[Address(RVA = "0x2DDFAE8", Offset = "0x2DDFAE8", VA = "0x2DDFAE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x2DDDFA0", Offset = "0x2DDDFA0", VA = "0x2DDDFA0")]
			[DebuggerHidden]
			public <LoadScores>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x2DDF7F8", Offset = "0x2DDF7F8", VA = "0x2DDF7F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x2DDF7FC", Offset = "0x2DDF7FC", VA = "0x2DDF7FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x2DDFA88", Offset = "0x2DDFA88", VA = "0x2DDFA88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9904", Offset = "0x16E9904")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action callback;

			[Token(Token = "0x60020B7")]
			[Address(RVA = "0x2DDEE74", Offset = "0x2DDEE74", VA = "0x2DDEE74")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x60020B8")]
			[Address(RVA = "0x2DDF43C", Offset = "0x2DDF43C", VA = "0x2DDF43C")]
			internal void <Logout>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9914", Offset = "0x16E9914")]
		private sealed class <LoadScoresByUser>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string leaderboardId;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public User user;

			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public eLeaderboardInterval interval;

			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int limit;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<Score, int, string> callback;

			[Token(Token = "0x170004B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020BC")]
				[Address(RVA = "0x2DDFC28", Offset = "0x2DDFC28", VA = "0x2DDFC28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020BE")]
				[Address(RVA = "0x2DDFC90", Offset = "0x2DDFC90", VA = "0x2DDFC90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020B9")]
			[Address(RVA = "0x2DDEF3C", Offset = "0x2DDEF3C", VA = "0x2DDEF3C")]
			[DebuggerHidden]
			public <LoadScoresByUser>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60020BA")]
			[Address(RVA = "0x2DDFAF0", Offset = "0x2DDFAF0", VA = "0x2DDFAF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020BB")]
			[Address(RVA = "0x2DDFAF4", Offset = "0x2DDFAF4", VA = "0x2DDFAF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020BD")]
			[Address(RVA = "0x2DDFC30", Offset = "0x2DDFC30", VA = "0x2DDFC30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private User _localUser;

		[Token(Token = "0x1700023B")]
		public ILocalUser localUser
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x2DDCC6C", Offset = "0x2DDCC6C", VA = "0x2DDCC6C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x2DDCC74", Offset = "0x2DDCC74", VA = "0x2DDCC74", Slot = "9")]
		public virtual void Authenticate(ILocalUser user, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x2DDCE28", Offset = "0x2DDCE28", VA = "0x2DDCE28", Slot = "10")]
		public virtual void Authenticate(string username, string password, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000ED0")]
		public virtual void Authenticate<T>(string username, string password, Action<bool, string> callback) where T : User, new()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x2DDCEBC", Offset = "0x2DDCEBC", VA = "0x2DDCEBC", Slot = "12")]
		public virtual void Authenticate(ILocalUser user, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x2DDD004", Offset = "0x2DDD004", VA = "0x2DDD004", Slot = "13")]
		public virtual void LoadUsers(string[] userIDs, Action<IUserProfile[]> callback)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x2DDD0EC", Offset = "0x2DDD0EC", VA = "0x2DDD0EC", Slot = "14")]
		public virtual void ReportProgress(string achievementId, double progress, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x2DDD19C", Offset = "0x2DDD19C", VA = "0x2DDD19C", Slot = "15")]
		public virtual void ReportProgress(string achievementId, int progress, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x2DDD418", Offset = "0x2DDD418", VA = "0x2DDD418")]
		public static void ResetAllAchievements(Action<bool> callback)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x2DDD64C", Offset = "0x2DDD64C", VA = "0x2DDD64C", Slot = "16")]
		public virtual void LoadAchievementDescriptions(Action<IAchievementDescription[]> callback)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x2DDD7B8", Offset = "0x2DDD7B8", VA = "0x2DDD7B8", Slot = "17")]
		public virtual void LoadAchievements(Action<IAchievement[]> callback)
		{
		}

		[Token(Token = "0x6000ED8")]
		public virtual void LoadAchievements<T>(Action<T[]> callback) where T : Achievement, new()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x2DDD8A4", Offset = "0x2DDD8A4", VA = "0x2DDD8A4")]
		private int CompareAchievements(Achievement a, Achievement b)
		{
			return default(int);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x2DDD950", Offset = "0x2DDD950", VA = "0x2DDD950", Slot = "19")]
		public virtual IAchievement CreateAchievement()
		{
			return null;
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x2DDD9A8", Offset = "0x2DDD9A8", VA = "0x2DDD9A8", Slot = "20")]
		public virtual void ReportScore(long score, string board, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x2DDDA44", Offset = "0x2DDDA44", VA = "0x2DDDA44", Slot = "21")]
		public virtual void ReportScore(string score, string board, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x2DDDAD0", Offset = "0x2DDDAD0", VA = "0x2DDDAD0", Slot = "22")]
		public virtual void ReportScore(string score, string board, string username, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x2DDDDE4", Offset = "0x2DDDDE4", VA = "0x2DDDDE4", Slot = "23")]
		public virtual void LoadScores(string leaderboardID, Action<IScore[]> callback)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x2DDDE00", Offset = "0x2DDDE00", VA = "0x2DDDE00", Slot = "24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x170167C", Offset = "0x170167C")]
		public virtual IEnumerator LoadScores(string leaderboardID, int page, int countPerPage, Action<IScore[]> callback)
		{
			return null;
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x2DDDEEC", Offset = "0x2DDDEEC", VA = "0x2DDDEEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17016E0", Offset = "0x17016E0")]
		public IEnumerator LoadScores(string leaderboardID, TimeScope timeScope, int page, int countPerPage, Action<IScore[]> callback)
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x2DDDFCC", Offset = "0x2DDDFCC", VA = "0x2DDDFCC", Slot = "25")]
		public virtual ILeaderboard CreateLeaderboard()
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x2DDE184", Offset = "0x2DDE184", VA = "0x2DDE184", Slot = "26")]
		public virtual void ShowAchievementsUI()
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x2DDE4F0", Offset = "0x2DDE4F0", VA = "0x2DDE4F0", Slot = "27")]
		public virtual void ShowLeaderboardUI()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x2DDE85C", Offset = "0x2DDE85C", VA = "0x2DDE85C", Slot = "28")]
		public virtual void LoadFriends(ILocalUser user, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x2DDE980", Offset = "0x2DDE980", VA = "0x2DDE980", Slot = "29")]
		public virtual void LoadScores(ILeaderboard board, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x2DDEAA0", Offset = "0x2DDEAA0", VA = "0x2DDEAA0", Slot = "30")]
		public virtual bool GetLoading(ILeaderboard board)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x2DDEBB4", Offset = "0x2DDEBB4", VA = "0x2DDEBB4", Slot = "31")]
		public virtual void SetLocalUser(User user)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x2DDEBBC", Offset = "0x2DDEBBC", VA = "0x2DDEBBC", Slot = "32")]
		public virtual void Logout(Action callback)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x2DDEE7C", Offset = "0x2DDEE7C", VA = "0x2DDEE7C", Slot = "33")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701744", Offset = "0x1701744")]
		public virtual IEnumerator LoadScoresByUser(string leaderboardId, User user, eLeaderboardInterval interval, int limit, Action<Score, int, string> callback)
		{
			return null;
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x2DD9F30", Offset = "0x2DD9F30", VA = "0x2DD9F30")]
		public CombuPlatform()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class CombuServerInfo
	{
		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string version;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool requireUpdate;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DateTime time;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Hashtable settings;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool responseEncrypted;

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x2DDBE04", Offset = "0x2DDBE04", VA = "0x2DDBE04")]
		public CombuServerInfo()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x2DDBFB4", Offset = "0x2DDBFB4", VA = "0x2DDBFB4")]
		public CombuServerInfo(Hashtable data)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x2DDFD8C", Offset = "0x2DDFD8C", VA = "0x2DDFD8C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001FC")]
	public class ThreadedJob
	{
		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9924", Offset = "0x16E9924")]
		private sealed class <WaitFor>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ThreadedJob <>4__this;

			[Token(Token = "0x170004B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020C2")]
				[Address(RVA = "0x298CAB8", Offset = "0x298CAB8", VA = "0x298CAB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020C4")]
				[Address(RVA = "0x298CB20", Offset = "0x298CB20", VA = "0x298CB20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x298C978", Offset = "0x298C978", VA = "0x298C978")]
			[DebuggerHidden]
			public <WaitFor>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x298CA48", Offset = "0x298CA48", VA = "0x298CA48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x298CA4C", Offset = "0x298CA4C", VA = "0x298CA4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020C3")]
			[Address(RVA = "0x298CAC0", Offset = "0x298CAC0", VA = "0x298CAC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_IsDone;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object m_Handle;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Thread m_Thread;

		[Token(Token = "0x1700023C")]
		public bool IsDone
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x298C6BC", Offset = "0x298C6BC", VA = "0x298C6BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x298C750", Offset = "0x298C750", VA = "0x298C750")]
			set
			{
			}
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x298C7E4", Offset = "0x298C7E4", VA = "0x298C7E4", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x298C898", Offset = "0x298C898", VA = "0x298C898", Slot = "5")]
		public virtual void Abort()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x298C8B4", Offset = "0x298C8B4", VA = "0x298C8B4", Slot = "6")]
		protected virtual void ThreadFunction()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x298C8B8", Offset = "0x298C8B8", VA = "0x298C8B8", Slot = "7")]
		protected virtual void OnFinished()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x298C8BC", Offset = "0x298C8BC", VA = "0x298C8BC", Slot = "8")]
		public virtual bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x298C8FC", Offset = "0x298C8FC", VA = "0x298C8FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17017A8", Offset = "0x17017A8")]
		public IEnumerator WaitFor()
		{
			return null;
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x298C9A4", Offset = "0x298C9A4", VA = "0x298C9A4")]
		private void Run()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x298C9D4", Offset = "0x298C9D4", VA = "0x298C9D4")]
		public ThreadedJob()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class DecryptionJob : ThreadedJob
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly CombuEncryption encryption;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly string text;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Action onFinished;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0DDC", Offset = "0x16F0DDC")]
		private string <decrypted>k__BackingField;

		[Token(Token = "0x1700023D")]
		public string decrypted
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x2DE02D0", Offset = "0x2DE02D0", VA = "0x2DE02D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170180C", Offset = "0x170180C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x2DE02D8", Offset = "0x2DE02D8", VA = "0x2DE02D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170181C", Offset = "0x170181C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x2DE02E0", Offset = "0x2DE02E0", VA = "0x2DE02E0")]
		public DecryptionJob(CombuEncryption encryption, string text, Action onFinished)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x2DE0344", Offset = "0x2DE0344", VA = "0x2DE0344", Slot = "6")]
		protected override void ThreadFunction()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x2DE0380", Offset = "0x2DE0380", VA = "0x2DE0380", Slot = "7")]
		protected override void OnFinished()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public static class CombuUtils
	{
		[Token(Token = "0x2000502")]
		public static class ServerResponse
		{
			[Token(Token = "0x2000623")]
			public class SuccessMessage
			{
				[Token(Token = "0x40022F9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FE8B0", Offset = "0x16FE8B0")]
				private bool <success>k__BackingField;

				[Token(Token = "0x40022FA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FE8C0", Offset = "0x16FE8C0")]
				private string <message>k__BackingField;

				[Token(Token = "0x1700054D")]
				public bool success
				{
					[Token(Token = "0x6002487")]
					[Address(RVA = "0x2DE02A4", Offset = "0x2DE02A4", VA = "0x2DE02A4")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707D50", Offset = "0x1707D50")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6002488")]
					[Address(RVA = "0x2DE02AC", Offset = "0x2DE02AC", VA = "0x2DE02AC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707D60", Offset = "0x1707D60")]
					set
					{
					}
				}

				[Token(Token = "0x1700054E")]
				public string message
				{
					[Token(Token = "0x6002489")]
					[Address(RVA = "0x2DE02B8", Offset = "0x2DE02B8", VA = "0x2DE02B8")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707D70", Offset = "0x1707D70")]
					get
					{
						return null;
					}
					[Token(Token = "0x600248A")]
					[Address(RVA = "0x2DE02C0", Offset = "0x2DE02C0", VA = "0x2DE02C0")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707D80", Offset = "0x1707D80")]
					set
					{
					}
				}

				[Token(Token = "0x600248B")]
				[Address(RVA = "0x2DE02C8", Offset = "0x2DE02C8", VA = "0x2DE02C8")]
				public SuccessMessage()
				{
				}
			}

			[Token(Token = "0x2000624")]
			public static class Server
			{
				[Token(Token = "0x2000635")]
				public class Token
				{
					[Token(Token = "0x400233E")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FECF8", Offset = "0x16FECF8")]
					private string <token>k__BackingField;

					[Token(Token = "0x400233F")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FED08", Offset = "0x16FED08")]
					private string <xml>k__BackingField;

					[Token(Token = "0x4002340")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FED18", Offset = "0x16FED18")]
					private string <modulus>k__BackingField;

					[Token(Token = "0x4002341")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FED28", Offset = "0x16FED28")]
					private string <exponent>k__BackingField;

					[Token(Token = "0x1700054F")]
					public string token
					{
						[Token(Token = "0x60024A3")]
						[Address(RVA = "0x2DE025C", Offset = "0x2DE025C", VA = "0x2DE025C")]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707D90", Offset = "0x1707D90")]
						get
						{
							return null;
						}
						[Token(Token = "0x60024A4")]
						[Address(RVA = "0x2DE0264", Offset = "0x2DE0264", VA = "0x2DE0264")]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707DA0", Offset = "0x1707DA0")]
						set
						{
						}
					}

					[Token(Token = "0x17000550")]
					public string xml
					{
						[Token(Token = "0x60024A5")]
						[Address(RVA = "0x2DE026C", Offset = "0x2DE026C", VA = "0x2DE026C")]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707DB0", Offset = "0x1707DB0")]
						get
						{
							return null;
						}
						[Token(Token = "0x60024A6")]
						[Address(RVA = "0x2DE0274", Offset = "0x2DE0274", VA = "0x2DE0274")]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707DC0", Offset = "0x1707DC0")]
						set
						{
						}
					}

					[Token(Token = "0x17000551")]
					public string modulus
					{
						[Token(Token = "0x60024A7")]
						[Address(RVA = "0x2DE027C", Offset = "0x2DE027C", VA = "0x2DE027C")]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707DD0", Offset = "0x1707DD0")]
						get
						{
							return null;
						}
						[Token(Token = "0x60024A8")]
						[Address(RVA = "0x2DE0284", Offset = "0x2DE0284", VA = "0x2DE0284")]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707DE0", Offset = "0x1707DE0")]
						set
						{
						}
					}

					[Token(Token = "0x17000552")]
					public string exponent
					{
						[Token(Token = "0x60024A9")]
						[Address(RVA = "0x2DE028C", Offset = "0x2DE028C", VA = "0x2DE028C")]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707DF0", Offset = "0x1707DF0")]
						get
						{
							return null;
						}
						[Token(Token = "0x60024AA")]
						[Address(RVA = "0x2DE0294", Offset = "0x2DE0294", VA = "0x2DE0294")]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707E00", Offset = "0x1707E00")]
						set
						{
						}
					}

					[Token(Token = "0x60024AB")]
					[Address(RVA = "0x2DE029C", Offset = "0x2DE029C", VA = "0x2DE029C")]
					public Token()
					{
					}
				}
			}
		}

		[Token(Token = "0x4000D52")]
		public const string STRING_TRUE = "TRUE";

		[Token(Token = "0x4000D53")]
		public const string STRING_FALSE = "FALSE";

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x2DDFC98", Offset = "0x2DDFC98", VA = "0x2DDFC98")]
		public static DateTime? ToDatetime(this string me, string format = "yyyy-MM-dd HH:mm:ss", [Optional] CultureInfo culture)
		{
			return null;
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x2DDFEA4", Offset = "0x2DDFEA4", VA = "0x2DDFEA4")]
		public static DateTime ToDatetimeOrDefault(this string me, [Optional] DateTime? defaultValue, string format = "yyyy-MM-dd HH:mm:ss", [Optional] CultureInfo culture)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x2DDFF84", Offset = "0x2DDFF84", VA = "0x2DDFF84")]
		public static bool IsHigherVersion(string currentVersionNumber, string otherVersionNumber)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20001FF")]
	public class Inventory
	{
		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9934", Offset = "0x16E9934")]
		private sealed class <>c__DisplayClass12_0<T> where T : Inventory, new()
		{
			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T[], string> callback;

			[Token(Token = "0x60020C5")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x60020C6")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9944", Offset = "0x16E9944")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Inventory <>4__this;

			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x2DE0C04", Offset = "0x2DE0C04", VA = "0x2DE0C04")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x2DE0ED8", Offset = "0x2DE0ED8", VA = "0x2DE0ED8")]
			internal void <Update>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9954", Offset = "0x16E9954")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x2DE0ED0", Offset = "0x2DE0ED0", VA = "0x2DE0ED0")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x2DE10A8", Offset = "0x2DE10A8", VA = "0x2DE10A8")]
			internal void <Delete>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private long _id;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int quantity;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Hashtable customData;

		[Token(Token = "0x1700023E")]
		public long id
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x2DE0394", Offset = "0x2DE0394", VA = "0x2DE0394")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x2DE039C", Offset = "0x2DE039C", VA = "0x2DE039C")]
		public Inventory()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x2DE0428", Offset = "0x2DE0428", VA = "0x2DE0428")]
		public Inventory(string jsonString)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x2DE04D4", Offset = "0x2DE04D4", VA = "0x2DE04D4")]
		public Inventory(Hashtable hash)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x2DE0580", Offset = "0x2DE0580", VA = "0x2DE0580", Slot = "4")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x2DE05B4", Offset = "0x2DE05B4", VA = "0x2DE05B4", Slot = "5")]
		public virtual void FromHashtable(Hashtable hash)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x2DE08D4", Offset = "0x2DE08D4", VA = "0x2DE08D4")]
		public static void Load(string userId, Action<Inventory[], string> callback)
		{
		}

		[Token(Token = "0x6000F07")]
		public static void Load<T>(string userId, Action<T[], string> callback) where T : Inventory, new()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x2DE0934", Offset = "0x2DE0934", VA = "0x2DE0934", Slot = "6")]
		public virtual void Update(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x2DE0C70", Offset = "0x2DE0C70", VA = "0x2DE0C70", Slot = "7")]
		public virtual void Delete(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x2DE0C78", Offset = "0x2DE0C78", VA = "0x2DE0C78")]
		public static void Delete(long idInventory, Action<bool, string> callback)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000200")]
	public class Leaderboard : ILeaderboard
	{
		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9964", Offset = "0x16E9964")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Leaderboard <>4__this;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool> callback;

			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x2DE1BD0", Offset = "0x2DE1BD0", VA = "0x2DE1BD0")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x60020CC")]
			[Address(RVA = "0x2DE1BD8", Offset = "0x2DE1BD8", VA = "0x2DE1BD8")]
			internal void <LoadScoresAsync>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9974", Offset = "0x16E9974")]
		private sealed class <LoadScoresAsync>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Leaderboard <>4__this;

			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool> callback;

			[Token(Token = "0x4001E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass50_0 <>8__1;

			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private WWWForm <wwwForm>5__2;

			[Token(Token = "0x170004B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020D0")]
				[Address(RVA = "0x2DE3314", Offset = "0x2DE3314", VA = "0x2DE3314", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020D2")]
				[Address(RVA = "0x2DE337C", Offset = "0x2DE337C", VA = "0x2DE337C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020CD")]
			[Address(RVA = "0x2DE1660", Offset = "0x2DE1660", VA = "0x2DE1660")]
			[DebuggerHidden]
			public <LoadScoresAsync>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x60020CE")]
			[Address(RVA = "0x2DE2DA4", Offset = "0x2DE2DA4", VA = "0x2DE2DA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020CF")]
			[Address(RVA = "0x2DE2DA8", Offset = "0x2DE2DA8", VA = "0x2DE2DA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020D1")]
			[Address(RVA = "0x2DE331C", Offset = "0x2DE331C", VA = "0x2DE331C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9984", Offset = "0x16E9984")]
		private sealed class <Load>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string leaderboardId;

			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Leaderboard, string> callback;

			[Token(Token = "0x170004BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020D6")]
				[Address(RVA = "0x2DE2D34", Offset = "0x2DE2D34", VA = "0x2DE2D34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020D8")]
				[Address(RVA = "0x2DE2D9C", Offset = "0x2DE2D9C", VA = "0x2DE2D9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020D3")]
			[Address(RVA = "0x2DE1724", Offset = "0x2DE1724", VA = "0x2DE1724")]
			[DebuggerHidden]
			public <Load>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x60020D4")]
			[Address(RVA = "0x2DE2C9C", Offset = "0x2DE2C9C", VA = "0x2DE2C9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020D5")]
			[Address(RVA = "0x2DE2CA0", Offset = "0x2DE2CA0", VA = "0x2DE2CA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020D7")]
			[Address(RVA = "0x2DE2D3C", Offset = "0x2DE2D3C", VA = "0x2DE2D3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9994", Offset = "0x16E9994")]
		private sealed class <>c__DisplayClass52_0<T> where T : Leaderboard, new()
		{
			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Leaderboard, string> callback;

			[Token(Token = "0x60020D9")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x60020DA")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E99A4", Offset = "0x16E99A4")]
		private sealed class <Load>d__52<T> : IEnumerator<object>, IEnumerator, IDisposable where T : Leaderboard, new()
		{
			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Leaderboard, string> callback;

			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string leaderboardId;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private <>c__DisplayClass52_0<T> <>8__1;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private WWWForm <wwwForm>5__2;

			[Token(Token = "0x170004BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020DE")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020E0")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020DB")]
			[DebuggerHidden]
			public <Load>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60020DC")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020DD")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020DF")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E99B4", Offset = "0x16E99B4")]
		private sealed class <LoadScoresByUser>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Leaderboard <>4__this;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public User user;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public eLeaderboardInterval interval;

			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int limit;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<Score, int, string> callback;

			[Token(Token = "0x170004BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020E4")]
				[Address(RVA = "0x2DE3450", Offset = "0x2DE3450", VA = "0x2DE3450", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020E6")]
				[Address(RVA = "0x2DE34B8", Offset = "0x2DE34B8", VA = "0x2DE34B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020E1")]
			[Address(RVA = "0x2DE1810", Offset = "0x2DE1810", VA = "0x2DE1810")]
			[DebuggerHidden]
			public <LoadScoresByUser>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x60020E2")]
			[Address(RVA = "0x2DE3384", Offset = "0x2DE3384", VA = "0x2DE3384", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020E3")]
			[Address(RVA = "0x2DE3388", Offset = "0x2DE3388", VA = "0x2DE3388", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020E5")]
			[Address(RVA = "0x2DE3458", Offset = "0x2DE3458", VA = "0x2DE3458", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E99C4", Offset = "0x16E99C4")]
		private sealed class <LoadScoresByUser>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Leaderboard <>4__this;

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public long userId;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public eLeaderboardInterval interval;

			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int limit;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<Score, int, string> callback;

			[Token(Token = "0x170004C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020EA")]
				[Address(RVA = "0x2DE3574", Offset = "0x2DE3574", VA = "0x2DE3574", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020EC")]
				[Address(RVA = "0x2DE35DC", Offset = "0x2DE35DC", VA = "0x2DE35DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020E7")]
			[Address(RVA = "0x2DE18F0", Offset = "0x2DE18F0", VA = "0x2DE18F0")]
			[DebuggerHidden]
			public <LoadScoresByUser>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x60020E8")]
			[Address(RVA = "0x2DE34C0", Offset = "0x2DE34C0", VA = "0x2DE34C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020E9")]
			[Address(RVA = "0x2DE34C4", Offset = "0x2DE34C4", VA = "0x2DE34C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020EB")]
			[Address(RVA = "0x2DE357C", Offset = "0x2DE357C", VA = "0x2DE357C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E99D4", Offset = "0x16E99D4")]
		private sealed class <LoadScoresByUser>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Leaderboard <>4__this;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string userName;

			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public eLeaderboardInterval interval;

			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int limit;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<Score, int, string> callback;

			[Token(Token = "0x170004C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020F0")]
				[Address(RVA = "0x2DE3664", Offset = "0x2DE3664", VA = "0x2DE3664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020F2")]
				[Address(RVA = "0x2DE36CC", Offset = "0x2DE36CC", VA = "0x2DE36CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020ED")]
			[Address(RVA = "0x2DE19DC", Offset = "0x2DE19DC", VA = "0x2DE19DC")]
			[DebuggerHidden]
			public <LoadScoresByUser>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x60020EE")]
			[Address(RVA = "0x2DE35E4", Offset = "0x2DE35E4", VA = "0x2DE35E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020EF")]
			[Address(RVA = "0x2DE35E8", Offset = "0x2DE35E8", VA = "0x2DE35E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020F1")]
			[Address(RVA = "0x2DE366C", Offset = "0x2DE366C", VA = "0x2DE366C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E99E4", Offset = "0x16E99E4")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Score, int, string> callback;

			[Token(Token = "0x60020F3")]
			[Address(RVA = "0x2DE23A0", Offset = "0x2DE23A0", VA = "0x2DE23A0")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x60020F4")]
			[Address(RVA = "0x2DE23A8", Offset = "0x2DE23A8", VA = "0x2DE23A8")]
			internal void <LoadScoresByUser>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E99F4", Offset = "0x16E99F4")]
		private sealed class <LoadScoresByUser>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Score, int, string> callback;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public long userId;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string userName;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Leaderboard <>4__this;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public eLeaderboardInterval interval;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int limit;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass56_0 <>8__1;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private WWWForm <wwwForm>5__2;

			[Token(Token = "0x170004C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020F8")]
				[Address(RVA = "0x2DE3A7C", Offset = "0x2DE3A7C", VA = "0x2DE3A7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020FA")]
				[Address(RVA = "0x2DE3AE4", Offset = "0x2DE3AE4", VA = "0x2DE3AE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020F5")]
			[Address(RVA = "0x2DE1AD8", Offset = "0x2DE1AD8", VA = "0x2DE1AD8")]
			[DebuggerHidden]
			public <LoadScoresByUser>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x60020F6")]
			[Address(RVA = "0x2DE36D4", Offset = "0x2DE36D4", VA = "0x2DE36D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020F7")]
			[Address(RVA = "0x2DE36D8", Offset = "0x2DE36D8", VA = "0x2DE36D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020F9")]
			[Address(RVA = "0x2DE3A84", Offset = "0x2DE3A84", VA = "0x2DE3A84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9A04", Offset = "0x16E9A04")]
		private sealed class <>c__DisplayClass57_0
		{
			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public User user;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Score[], string> callback;

			[Token(Token = "0x60020FB")]
			[Address(RVA = "0x2DE2754", Offset = "0x2DE2754", VA = "0x2DE2754")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x60020FC")]
			[Address(RVA = "0x2DE275C", Offset = "0x2DE275C", VA = "0x2DE275C")]
			internal void <LoadScoresByUser>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9A14", Offset = "0x16E9A14")]
		private sealed class <LoadScoresByUser>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public User user;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Score[], string> callback;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public eLeaderboardInterval interval;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass57_0 <>8__1;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CombuForm <form>5__2;

			[Token(Token = "0x170004C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002100")]
				[Address(RVA = "0x2DE3E84", Offset = "0x2DE3E84", VA = "0x2DE3E84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002102")]
				[Address(RVA = "0x2DE3EEC", Offset = "0x2DE3EEC", VA = "0x2DE3EEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x2DE1BA4", Offset = "0x2DE1BA4", VA = "0x2DE1BA4")]
			[DebuggerHidden]
			public <LoadScoresByUser>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x2DE3AEC", Offset = "0x2DE3AEC", VA = "0x2DE3AEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020FF")]
			[Address(RVA = "0x2DE3AF0", Offset = "0x2DE3AF0", VA = "0x2DE3AF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002101")]
			[Address(RVA = "0x2DE3E8C", Offset = "0x2DE3E8C", VA = "0x2DE3E8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _title;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _description;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Score _localUserScore;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Score[] _scores;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private eLeaderboardTimeScope _customTimeScope;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint _maxRange;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _loading;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> _userIDs;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool highestScorePerPlayer;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool sumScoresPerPlayer;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0DEC", Offset = "0x16F0DEC")]
		private string <id>k__BackingField;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0DFC", Offset = "0x16F0DFC")]
		private string <code>k__BackingField;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0E0C", Offset = "0x16F0E0C")]
		private UserScope <userScope>k__BackingField;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0E1C", Offset = "0x16F0E1C")]
		private Range <range>k__BackingField;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0E2C", Offset = "0x16F0E2C")]
		private TimeScope <timeScope>k__BackingField;

		[Token(Token = "0x1700023F")]
		public bool loading
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x2DE1220", Offset = "0x2DE1220", VA = "0x2DE1220", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000240")]
		public string id
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x2DE1228", Offset = "0x2DE1228", VA = "0x2DE1228", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170184C", Offset = "0x170184C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x2DE1230", Offset = "0x2DE1230", VA = "0x2DE1230", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170185C", Offset = "0x170185C")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public string code
		{
			[Token(Token = "0x6000F0E")]
			[Address(RVA = "0x2DE1238", Offset = "0x2DE1238", VA = "0x2DE1238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170186C", Offset = "0x170186C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0x2DE1240", Offset = "0x2DE1240", VA = "0x2DE1240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170187C", Offset = "0x170187C")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public UserScope userScope
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0x2DE1248", Offset = "0x2DE1248", VA = "0x2DE1248", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170188C", Offset = "0x170188C")]
			get
			{
				return default(UserScope);
			}
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x2DE1250", Offset = "0x2DE1250", VA = "0x2DE1250", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170189C", Offset = "0x170189C")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public Range range
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x2DE1258", Offset = "0x2DE1258", VA = "0x2DE1258", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17018AC", Offset = "0x17018AC")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x2DE1260", Offset = "0x2DE1260", VA = "0x2DE1260", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17018BC", Offset = "0x17018BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public TimeScope timeScope
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x2DE1268", Offset = "0x2DE1268", VA = "0x2DE1268", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17018CC", Offset = "0x17018CC")]
			get
			{
				return default(TimeScope);
			}
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x2DE1270", Offset = "0x2DE1270", VA = "0x2DE1270", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17018DC", Offset = "0x17018DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public eLeaderboardTimeScope customTimescope
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0x2DE1278", Offset = "0x2DE1278", VA = "0x2DE1278")]
			get
			{
				return default(eLeaderboardTimeScope);
			}
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0x2DE1280", Offset = "0x2DE1280", VA = "0x2DE1280")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public IScore localUserScore
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0x2DE1288", Offset = "0x2DE1288", VA = "0x2DE1288", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public uint maxRange
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x2DE1290", Offset = "0x2DE1290", VA = "0x2DE1290", Slot = "15")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000248")]
		public IScore[] scores
		{
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x2DDF434", Offset = "0x2DDF434", VA = "0x2DDF434", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		public string title
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x2DE1298", Offset = "0x2DE1298", VA = "0x2DE1298", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		public string description
		{
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x2DE12A0", Offset = "0x2DE12A0", VA = "0x2DE12A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x2DDE088", Offset = "0x2DDE088", VA = "0x2DDE088")]
		public Leaderboard()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x2DE12A8", Offset = "0x2DE12A8", VA = "0x2DE12A8")]
		public Leaderboard(string jsonString)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x2DE1394", Offset = "0x2DE1394", VA = "0x2DE1394", Slot = "18")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x2DE15DC", Offset = "0x2DE15DC", VA = "0x2DE15DC", Slot = "19")]
		public void SetUserFilter(string[] userIDs)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x2DE165C", Offset = "0x2DE165C", VA = "0x2DE165C", Slot = "4")]
		public void LoadScores(Action<bool> callback)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x2DDF9E8", Offset = "0x2DDF9E8", VA = "0x2DDF9E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17018EC", Offset = "0x17018EC")]
		public IEnumerator LoadScoresAsync(Action<bool> callback)
		{
			return null;
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x2DE168C", Offset = "0x2DE168C", VA = "0x2DE168C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701950", Offset = "0x1701950")]
		public static IEnumerator Load(string leaderboardId, Action<Leaderboard, string> callback)
		{
			return null;
		}

		[Token(Token = "0x6000F24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17019B4", Offset = "0x17019B4")]
		public static IEnumerator Load<T>(string leaderboardId, Action<Leaderboard, string> callback) where T : Leaderboard, new()
		{
			return null;
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x2DE1750", Offset = "0x2DE1750", VA = "0x2DE1750", Slot = "20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701A18", Offset = "0x1701A18")]
		public virtual IEnumerator LoadScoresByUser(User user, eLeaderboardInterval interval, int limit, Action<Score, int, string> callback)
		{
			return null;
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x2DE183C", Offset = "0x2DE183C", VA = "0x2DE183C", Slot = "21")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701A7C", Offset = "0x1701A7C")]
		public virtual IEnumerator LoadScoresByUser(long userId, eLeaderboardInterval interval, int limit, Action<Score, int, string> callback)
		{
			return null;
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x2DE191C", Offset = "0x2DE191C", VA = "0x2DE191C", Slot = "22")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701AE0", Offset = "0x1701AE0")]
		public virtual IEnumerator LoadScoresByUser(string userName, eLeaderboardInterval interval, int limit, Action<Score, int, string> callback)
		{
			return null;
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x2DE1A08", Offset = "0x2DE1A08", VA = "0x2DE1A08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701B44", Offset = "0x1701B44")]
		protected IEnumerator LoadScoresByUser(long userId, string userName, eLeaderboardInterval interval, int limit, Action<Score, int, string> callback)
		{
			return null;
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x2DE1B04", Offset = "0x2DE1B04", VA = "0x2DE1B04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701BA8", Offset = "0x1701BA8")]
		public static IEnumerator LoadScoresByUser(User user, eLeaderboardInterval interval, Action<Score[], string> callback)
		{
			return null;
		}
	}
	[Token(Token = "0x2000201")]
	public class Score : IScore
	{
		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9A24", Offset = "0x16E9A24")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x6002103")]
			[Address(RVA = "0x298C4E8", Offset = "0x298C4E8", VA = "0x298C4E8")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6002104")]
			[Address(RVA = "0x298C4F0", Offset = "0x298C4F0", VA = "0x298C4F0")]
			internal void <ReportScore>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0E3C", Offset = "0x16F0E3C")]
		private string <leaderboardID>k__BackingField;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0E4C", Offset = "0x16F0E4C")]
		private string <leaderboardCode>k__BackingField;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _rank;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double _value;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DateTime _date;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Profile _user;

		[Token(Token = "0x1700024B")]
		public string leaderboardID
		{
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x298BE64", Offset = "0x298BE64", VA = "0x298BE64", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701C0C", Offset = "0x1701C0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x298BE6C", Offset = "0x298BE6C", VA = "0x298BE6C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701C1C", Offset = "0x1701C1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public string leaderboardCode
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x298BE74", Offset = "0x298BE74", VA = "0x298BE74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701C2C", Offset = "0x1701C2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x298BE7C", Offset = "0x298BE7C", VA = "0x298BE7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701C3C", Offset = "0x1701C3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public DateTime date
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x298BE84", Offset = "0x298BE84", VA = "0x298BE84", Slot = "6")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x1700024E")]
		public string formattedValue
		{
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x298BE8C", Offset = "0x298BE8C", VA = "0x298BE8C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		public string userID
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x298BE98", Offset = "0x298BE98", VA = "0x298BE98", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		public Profile user
		{
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0x298BEFC", Offset = "0x298BEFC", VA = "0x298BEFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		public int rank
		{
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0x298BF04", Offset = "0x298BF04", VA = "0x298BF04", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000252")]
		public long value
		{
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x298BF0C", Offset = "0x298BF0C", VA = "0x298BF0C", Slot = "10")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x298BF2C", Offset = "0x298BF2C", VA = "0x298BF2C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public float valueFloat
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x298BF38", Offset = "0x298BF38", VA = "0x298BF38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x298BF44", Offset = "0x298BF44", VA = "0x298BF44")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public double valueDouble
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x298BF50", Offset = "0x298BF50", VA = "0x298BF50")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x298BF58", Offset = "0x298BF58", VA = "0x298BF58")]
			set
			{
			}
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x298BF60", Offset = "0x298BF60", VA = "0x298BF60")]
		public Score()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x298BF68", Offset = "0x298BF68", VA = "0x298BF68")]
		public Score(string idLeaderboard, int rank, User user, double score)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x298BFF0", Offset = "0x298BFF0", VA = "0x298BFF0")]
		public Score(string idLeaderboard, string codeLeaderboard, int rank, User user, double score)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x298C12C", Offset = "0x298C12C", VA = "0x298C12C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1701C4C", Offset = "0x1701C4C")]
		public void Initialize(string idLeaderboard, int rank, Profile user, double score)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x298C048", Offset = "0x298C048", VA = "0x298C048")]
		public void Initialize(string idLeaderboard, string codeLeaderboard, int rank, Profile user, double score)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x298C1A8", Offset = "0x298C1A8", VA = "0x298C1A8", Slot = "12")]
		public void ReportScore(Action<bool> callback)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000202")]
	public class Mail
	{
		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9A34", Offset = "0x16E9A34")]
		private sealed class <>c__DisplayClass17_0<T> where T : Mail, new()
		{
			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T[], int, int, string> callback;

			[Token(Token = "0x6002105")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002106")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9A44", Offset = "0x16E9A44")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002107")]
			[Address(RVA = "0x2DE4B34", Offset = "0x2DE4B34", VA = "0x2DE4B34")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002108")]
			[Address(RVA = "0x2DE64B8", Offset = "0x2DE64B8", VA = "0x2DE64B8")]
			internal void <Send>b__0(bool success, string savedMessage, string error)
			{
			}
		}

		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9A54", Offset = "0x16E9A54")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string, string> callback;

			[Token(Token = "0x6002109")]
			[Address(RVA = "0x2DE4FE8", Offset = "0x2DE4FE8", VA = "0x2DE4FE8")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x600210A")]
			[Address(RVA = "0x2DE6534", Offset = "0x2DE6534", VA = "0x2DE6534")]
			internal void <SendMessage>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9A64", Offset = "0x16E9A64")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Mail, string> callback;

			[Token(Token = "0x600210B")]
			[Address(RVA = "0x2DE52DC", Offset = "0x2DE52DC", VA = "0x2DE52DC")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x600210C")]
			[Address(RVA = "0x2DE66CC", Offset = "0x2DE66CC", VA = "0x2DE66CC")]
			internal void <Send>b__0(bool success, string savedMessageJson, string error)
			{
			}
		}

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9A74", Offset = "0x16E9A74")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mail <>4__this;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x600210D")]
			[Address(RVA = "0x2DE53B4", Offset = "0x2DE53B4", VA = "0x2DE53B4")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x600210E")]
			[Address(RVA = "0x2DE679C", Offset = "0x2DE679C", VA = "0x2DE679C")]
			internal void <Read>b__0(bool success, string error)
			{
			}
		}

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9A84", Offset = "0x16E9A84")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x600210F")]
			[Address(RVA = "0x2DE54B8", Offset = "0x2DE54B8", VA = "0x2DE54B8")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002110")]
			[Address(RVA = "0x2DE6854", Offset = "0x2DE6854", VA = "0x2DE6854")]
			internal void <Read>b__0(bool success, string error)
			{
			}
		}

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9A94", Offset = "0x16E9A94")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002111")]
			[Address(RVA = "0x2DE5914", Offset = "0x2DE5914", VA = "0x2DE5914")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6002112")]
			[Address(RVA = "0x2DE68D0", Offset = "0x2DE68D0", VA = "0x2DE68D0")]
			internal void <Read>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9AA4", Offset = "0x16E9AA4")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mail <>4__this;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002113")]
			[Address(RVA = "0x2DE59EC", Offset = "0x2DE59EC", VA = "0x2DE59EC")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6002114")]
			[Address(RVA = "0x2DE6A48", Offset = "0x2DE6A48", VA = "0x2DE6A48")]
			internal void <Unread>b__0(bool success, string error)
			{
			}
		}

		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9AB4", Offset = "0x16E9AB4")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002115")]
			[Address(RVA = "0x2DE5C4C", Offset = "0x2DE5C4C", VA = "0x2DE5C4C")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002116")]
			[Address(RVA = "0x2DE6B00", Offset = "0x2DE6B00", VA = "0x2DE6B00")]
			internal void <Unread>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9AC4", Offset = "0x16E9AC4")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002117")]
			[Address(RVA = "0x2DE5EB4", Offset = "0x2DE5EB4", VA = "0x2DE5EB4")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6002118")]
			[Address(RVA = "0x2DE6C78", Offset = "0x2DE6C78", VA = "0x2DE6C78")]
			internal void <Delete>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9AD4", Offset = "0x16E9AD4")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<ArrayList, int, string> callback;

			[Token(Token = "0x6002119")]
			[Address(RVA = "0x2DE60E8", Offset = "0x2DE60E8", VA = "0x2DE60E8")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x600211A")]
			[Address(RVA = "0x2DE6DF0", Offset = "0x2DE6DF0", VA = "0x2DE6DF0")]
			internal void <LoadConversations>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9AE4", Offset = "0x16E9AE4")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<MailCount[], string> callback;

			[Token(Token = "0x600211B")]
			[Address(RVA = "0x2DE64B0", Offset = "0x2DE64B0", VA = "0x2DE64B0")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x600211C")]
			[Address(RVA = "0x2DE722C", Offset = "0x2DE722C", VA = "0x2DE722C")]
			internal void <Count>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime sendDate;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DateTime readDate;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string subject;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string message;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isPublic;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public User fromUser;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public User toUser;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public long idGroup;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UserGroup toGroup;

		[Token(Token = "0x17000255")]
		public bool isRead
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x2DE3EF4", Offset = "0x2DE3EF4", VA = "0x2DE3EF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x2DE3F6C", Offset = "0x2DE3F6C", VA = "0x2DE3F6C")]
		public Mail()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x2DE4018", Offset = "0x2DE4018", VA = "0x2DE4018", Slot = "4")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x2DE404C", Offset = "0x2DE404C", VA = "0x2DE404C", Slot = "5")]
		public virtual void FromHashtable(Hashtable hash)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x2DE472C", Offset = "0x2DE472C", VA = "0x2DE472C")]
		public static void Load(eMailList listType, int pageNumber, int limit, Action<Mail[], int, int, string> callback)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x2DE47B0", Offset = "0x2DE47B0", VA = "0x2DE47B0")]
		public static void Load(eMailList listType, long idRecipient, long idSender, long idGroup, int pageNumber, int limit, Action<Mail[], int, int, string> callback)
		{
		}

		[Token(Token = "0x6000F45")]
		public static void Load<T>(eMailList listType, long idRecipient, long idSender, long idGroup, int pageNumber, int limit, Action<T[], int, int, string> callback) where T : Mail, new()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x2DE4848", Offset = "0x2DE4848", VA = "0x2DE4848")]
		public static void Send(long recipientId, string subject, string message, bool isPublic, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x2DE49E8", Offset = "0x2DE49E8", VA = "0x2DE49E8")]
		public static void Send(long[] recipientsId, string subject, string message, bool isPublic, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x2DE4A08", Offset = "0x2DE4A08", VA = "0x2DE4A08")]
		public static void Send(string recipientUsername, string subject, string message, bool isPublic, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x2DE4AEC", Offset = "0x2DE4AEC", VA = "0x2DE4AEC")]
		public static void Send(string[] recipientsUsername, string subject, string message, bool isPublic, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x2DE4B10", Offset = "0x2DE4B10", VA = "0x2DE4B10")]
		public static void SendMailToGroup(long groupId, string subject, string message, bool isPublic, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x2DE48F4", Offset = "0x2DE48F4", VA = "0x2DE48F4")]
		protected static void Send(long[] recipientsId, string[] recipientsUsername, long recipientGroupId, string subject, string message, bool isPublic, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x2DE4D40", Offset = "0x2DE4D40", VA = "0x2DE4D40")]
		protected static CombuForm GetMessageForm(long[] recipientsId, string[] recipientsUsername, long recipientGroupId, string subject, string message, bool isPublic)
		{
			return null;
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x2DE4B3C", Offset = "0x2DE4B3C", VA = "0x2DE4B3C")]
		protected static void SendMessage(long[] recipientsId, string[] recipientsUsername, long recipientGroupId, string subject, string message, bool isPublic, Action<bool, string, string> callback)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x2DE4FF0", Offset = "0x2DE4FF0", VA = "0x2DE4FF0")]
		public static void Send(long recipientId, string subject, string message, bool isPublic, Action<Mail, string> callback)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x2DE5190", Offset = "0x2DE5190", VA = "0x2DE5190")]
		public static void Send(long[] recipientsId, string subject, string message, bool isPublic, Action<Mail, string> callback)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x2DE51B0", Offset = "0x2DE51B0", VA = "0x2DE51B0")]
		public static void Send(string recipientUsername, string subject, string message, bool isPublic, Action<Mail, string> callback)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x2DE5294", Offset = "0x2DE5294", VA = "0x2DE5294")]
		public static void Send(string[] recipientsUsername, string subject, string message, bool isPublic, Action<Mail, string> callback)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x2DE52B8", Offset = "0x2DE52B8", VA = "0x2DE52B8")]
		public static void SendMailToGroup(long groupId, string subject, string message, bool isPublic, Action<Mail, string> callback)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x2DE509C", Offset = "0x2DE509C", VA = "0x2DE509C")]
		protected static void Send(long[] recipientsId, string[] recipientsUsername, long recipientGroupId, string subject, string message, bool isPublic, Action<Mail, string> callback)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x2DE52E4", Offset = "0x2DE52E4", VA = "0x2DE52E4")]
		public void Read(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x2DE53BC", Offset = "0x2DE53BC", VA = "0x2DE53BC")]
		public static void Read(long idMail, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x2DE58FC", Offset = "0x2DE58FC", VA = "0x2DE58FC")]
		public static void Read(long[] idSenders, long[] idGroups, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x2DE54C0", Offset = "0x2DE54C0", VA = "0x2DE54C0")]
		protected static void Read(long idMail, long[] idSenders, long[] idGroups, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x2DE591C", Offset = "0x2DE591C", VA = "0x2DE591C")]
		public void Unread(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x2DE59F4", Offset = "0x2DE59F4", VA = "0x2DE59F4")]
		public static void Unread(long idMail, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x2DE5C54", Offset = "0x2DE5C54", VA = "0x2DE5C54", Slot = "6")]
		public virtual void Delete(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x2DE5C5C", Offset = "0x2DE5C5C", VA = "0x2DE5C5C")]
		public static void Delete(long idMail, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x2DE5EBC", Offset = "0x2DE5EBC", VA = "0x2DE5EBC")]
		public static void LoadConversations(Action<ArrayList, int, string> callback)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x2DE60F0", Offset = "0x2DE60F0", VA = "0x2DE60F0")]
		public static void Count(long[] idUsers, long[] idGroups, Action<MailCount[], string> callback)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000203")]
	public class MailCount
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long idSender;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long idGroup;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int read;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int unread;

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x2DE755C", Offset = "0x2DE755C", VA = "0x2DE755C")]
		public MailCount(Hashtable hash)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000204")]
	public class Match
	{
		[Serializable]
		[Token(Token = "0x200051F")]
		public class MatchRoundData
		{
			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<MatchAccount> users;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MatchRound> scores;

			[Token(Token = "0x600211D")]
			[Address(RVA = "0x2DE8880", Offset = "0x2DE8880", VA = "0x2DE8880")]
			public MatchRoundData()
			{
			}
		}

		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9AF4", Offset = "0x16E9AF4")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long idUser;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string username;

			[Token(Token = "0x600211E")]
			[Address(RVA = "0x2DE8D14", Offset = "0x2DE8D14", VA = "0x2DE8D14")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x600211F")]
			[Address(RVA = "0x2DEA5CC", Offset = "0x2DEA5CC", VA = "0x2DEA5CC")]
			internal bool <RemoveUser>b__0(MatchAccount u)
			{
				return default(bool);
			}

			[Token(Token = "0x6002120")]
			[Address(RVA = "0x2DEA5F0", Offset = "0x2DEA5F0", VA = "0x2DEA5F0")]
			internal bool <RemoveUser>b__1(MatchAccount u)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9B04", Offset = "0x16E9B04")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long myId;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MatchAccount matchAccount;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Match <>4__this;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002121")]
			[Address(RVA = "0x2DE9198", Offset = "0x2DE9198", VA = "0x2DE9198")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002122")]
			[Address(RVA = "0x2DEA630", Offset = "0x2DEA630", VA = "0x2DEA630")]
			internal bool <Score>b__0(MatchAccount u)
			{
				return default(bool);
			}

			[Token(Token = "0x6002123")]
			[Address(RVA = "0x2DEA654", Offset = "0x2DEA654", VA = "0x2DEA654")]
			internal void <Score>b__2(string text, string error)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9B14", Offset = "0x16E9B14")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<MatchRound> <>9__32_1;

			[Token(Token = "0x6002125")]
			[Address(RVA = "0x2DEA52C", Offset = "0x2DEA52C", VA = "0x2DEA52C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002126")]
			[Address(RVA = "0x2DEA534", Offset = "0x2DEA534", VA = "0x2DEA534")]
			internal bool <Score>b__32_1(MatchRound r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9B24", Offset = "0x16E9B24")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Match <>4__this;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002127")]
			[Address(RVA = "0x2DE97A0", Offset = "0x2DE97A0", VA = "0x2DE97A0")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002128")]
			[Address(RVA = "0x2DEA7F0", Offset = "0x2DEA7F0", VA = "0x2DEA7F0")]
			internal void <Save>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9B34", Offset = "0x16E9B34")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002129")]
			[Address(RVA = "0x2DE9A6C", Offset = "0x2DE9A6C", VA = "0x2DE9A6C")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600212A")]
			[Address(RVA = "0x2DEA980", Offset = "0x2DEA980", VA = "0x2DEA980")]
			internal void <Delete>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9B44", Offset = "0x16E9B44")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Match> callback;

			[Token(Token = "0x600212B")]
			[Address(RVA = "0x2DE9F58", Offset = "0x2DE9F58", VA = "0x2DE9F58")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x600212C")]
			[Address(RVA = "0x2DEAAF8", Offset = "0x2DEAAF8", VA = "0x2DEAAF8")]
			internal void <QuickMatch>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9B54", Offset = "0x16E9B54")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Match[]> callback;

			[Token(Token = "0x600212D")]
			[Address(RVA = "0x2DEA238", Offset = "0x2DEA238", VA = "0x2DEA238")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600212E")]
			[Address(RVA = "0x2DEAC60", Offset = "0x2DEAC60", VA = "0x2DEAC60")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9B64", Offset = "0x16E9B64")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Match> callback;

			[Token(Token = "0x600212F")]
			[Address(RVA = "0x2DEA4BC", Offset = "0x2DEA4BC", VA = "0x2DEA4BC")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002130")]
			[Address(RVA = "0x2DEAFF4", Offset = "0x2DEAFF4", VA = "0x2DEAFF4")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long idTournament;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int roundsCount;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DateTime dateCreation;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DateTime? dateExpire;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Hashtable customData;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<long> _deletedUsers;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<MatchAccount> _users;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<MatchRoundData> _rounds;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _finished;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _quickMatch;

		[Token(Token = "0x17000256")]
		public List<MatchAccount> users
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x2DE778C", Offset = "0x2DE778C", VA = "0x2DE778C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		public List<MatchRoundData> rounds
		{
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x2DE7794", Offset = "0x2DE7794", VA = "0x2DE7794")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		public bool finished
		{
			[Token(Token = "0x6000F61")]
			[Address(RVA = "0x2DE779C", Offset = "0x2DE779C", VA = "0x2DE779C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000259")]
		public bool searchingQuickMatch
		{
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x2DE77A4", Offset = "0x2DE77A4", VA = "0x2DE77A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x2DE77AC", Offset = "0x2DE77AC", VA = "0x2DE77AC")]
		public Match()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x2DE790C", Offset = "0x2DE790C", VA = "0x2DE790C")]
		public Match(string jsonString)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x2DE7A8C", Offset = "0x2DE7A8C", VA = "0x2DE7A8C")]
		public Match(Hashtable data)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x2DE7C0C", Offset = "0x2DE7C0C", VA = "0x2DE7C0C", Slot = "4")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x2DE7C40", Offset = "0x2DE7C40", VA = "0x2DE7C40", Slot = "5")]
		public virtual void FromHashtable(Hashtable hash)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x2DE8594", Offset = "0x2DE8594", VA = "0x2DE8594")]
		private void FillRounds()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x2DE8938", Offset = "0x2DE8938", VA = "0x2DE8938", Slot = "6")]
		public virtual void AddUser(Profile user)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x2DE8A90", Offset = "0x2DE8A90", VA = "0x2DE8A90", Slot = "7")]
		public virtual void RemoveUser(Profile user)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x2DE8AB0", Offset = "0x2DE8AB0", VA = "0x2DE8AB0", Slot = "8")]
		public virtual void RemoveUser(long idUser)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x2DE8B20", Offset = "0x2DE8B20", VA = "0x2DE8B20", Slot = "9")]
		public virtual void RemoveUser(string username)
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x2DE8B34", Offset = "0x2DE8B34", VA = "0x2DE8B34", Slot = "10")]
		protected virtual void RemoveUser(long idUser, string username)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x2DE8D1C", Offset = "0x2DE8D1C", VA = "0x2DE8D1C")]
		public void Score(float score, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x2DE91A0", Offset = "0x2DE91A0", VA = "0x2DE91A0")]
		public void Save(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x2DE980C", Offset = "0x2DE980C", VA = "0x2DE980C", Slot = "11")]
		public virtual void Delete(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x2DE9814", Offset = "0x2DE9814", VA = "0x2DE9814")]
		public static void Delete(long idMatch, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x2DE9A74", Offset = "0x2DE9A74", VA = "0x2DE9A74")]
		public static void QuickMatch(bool friendsOnly, SearchCustomData[] customData, int rounds, Action<Match> callback)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x2DE9F60", Offset = "0x2DE9F60", VA = "0x2DE9F60")]
		public static void Load(long idTournament, bool activeOnly, string title, Action<Match[]> callback)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x2DEA240", Offset = "0x2DEA240", VA = "0x2DEA240")]
		public static void Load(long idMatch, Action<Match> callback)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000205")]
	public class MatchAccount
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long idMatch;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long idAccount;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Hashtable customData;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float score;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DateTime? dateScore;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Profile user;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<MatchRound> _rounds;

		[Token(Token = "0x1700025A")]
		public List<MatchRound> rounds
		{
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x2DEB164", Offset = "0x2DEB164", VA = "0x2DEB164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x2DE89E8", Offset = "0x2DE89E8", VA = "0x2DE89E8")]
		public MatchAccount()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x2DEB16C", Offset = "0x2DEB16C", VA = "0x2DEB16C")]
		public MatchAccount(string jsonString)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x2DE84CC", Offset = "0x2DE84CC", VA = "0x2DE84CC")]
		public MatchAccount(Hashtable data)
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x2DEB234", Offset = "0x2DEB234", VA = "0x2DEB234", Slot = "4")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x2DEB268", Offset = "0x2DEB268", VA = "0x2DEB268", Slot = "5")]
		public virtual void FromHashtable(Hashtable hash)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000206")]
	public class MatchRound
	{
		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long idMatchAccount;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float score;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DateTime? dateScore;

		[Token(Token = "0x1700025B")]
		public bool hasScore
		{
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x2DEA588", Offset = "0x2DEA588", VA = "0x2DEA588")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x2DE8930", Offset = "0x2DE8930", VA = "0x2DE8930")]
		public MatchRound()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x2DEBA68", Offset = "0x2DEBA68", VA = "0x2DEBA68")]
		public MatchRound(string jsonString)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x2DEBA30", Offset = "0x2DEBA30", VA = "0x2DEBA30")]
		public MatchRound(Hashtable data)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x2DEBAA0", Offset = "0x2DEBAA0", VA = "0x2DEBAA0", Slot = "4")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x2DEBAD4", Offset = "0x2DEBAD4", VA = "0x2DEBAD4", Slot = "5")]
		public virtual void FromHashtable(Hashtable hash)
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class MiniJSON
	{
		[Token(Token = "0x4000D93")]
		private const int TOKEN_NONE = 0;

		[Token(Token = "0x4000D94")]
		private const int TOKEN_CURLY_OPEN = 1;

		[Token(Token = "0x4000D95")]
		private const int TOKEN_CURLY_CLOSE = 2;

		[Token(Token = "0x4000D96")]
		private const int TOKEN_SQUARED_OPEN = 3;

		[Token(Token = "0x4000D97")]
		private const int TOKEN_SQUARED_CLOSE = 4;

		[Token(Token = "0x4000D98")]
		private const int TOKEN_COLON = 5;

		[Token(Token = "0x4000D99")]
		private const int TOKEN_COMMA = 6;

		[Token(Token = "0x4000D9A")]
		private const int TOKEN_STRING = 7;

		[Token(Token = "0x4000D9B")]
		private const int TOKEN_NUMBER = 8;

		[Token(Token = "0x4000D9C")]
		private const int TOKEN_TRUE = 9;

		[Token(Token = "0x4000D9D")]
		private const int TOKEN_FALSE = 10;

		[Token(Token = "0x4000D9E")]
		private const int TOKEN_NULL = 11;

		[Token(Token = "0x4000D9F")]
		private const int BUILDER_CAPACITY = 2000;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static int lastErrorIndex;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static string lastDecode;

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x2DEBD38", Offset = "0x2DEBD38", VA = "0x2DEBD38")]
		public static object jsonDecode(string json)
		{
			return null;
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x2DEC0DC", Offset = "0x2DEC0DC", VA = "0x2DEC0DC")]
		public static string jsonEncode(object json)
		{
			return null;
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x2DEC668", Offset = "0x2DEC668", VA = "0x2DEC668")]
		public static bool lastDecodeSuccessful()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x2DEC6D8", Offset = "0x2DEC6D8", VA = "0x2DEC6D8")]
		public static int getLastErrorIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x2DEC740", Offset = "0x2DEC740", VA = "0x2DEC740")]
		public static string getLastErrorSnippet()
		{
			return null;
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x2DEC8B8", Offset = "0x2DEC8B8", VA = "0x2DEC8B8")]
		protected static Hashtable parseObject(char[] json, ref int index)
		{
			return null;
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x2DED144", Offset = "0x2DED144", VA = "0x2DED144")]
		protected static ArrayList parseArray(char[] json, ref int index)
		{
			return null;
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x2DEBE64", Offset = "0x2DEBE64", VA = "0x2DEBE64")]
		protected static object parseValue(char[] json, ref int index, ref bool success)
		{
			return null;
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x2DECDF0", Offset = "0x2DECDF0", VA = "0x2DECDF0")]
		protected static string parseString(char[] json, ref int index)
		{
			return null;
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x2DED2DC", Offset = "0x2DED2DC", VA = "0x2DED2DC")]
		protected static double parseNumber(char[] json, ref int index)
		{
			return default(double);
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x2DED4B0", Offset = "0x2DED4B0", VA = "0x2DED4B0")]
		protected static int getLastIndexOfNumber(char[] json, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x2DED3F8", Offset = "0x2DED3F8", VA = "0x2DED3F8")]
		protected static void eatWhitespace(char[] json, ref int index)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x2DECD74", Offset = "0x2DECD74", VA = "0x2DECD74")]
		protected static int lookAhead(char[] json, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x2DECAAC", Offset = "0x2DECAAC", VA = "0x2DECAAC")]
		protected static int nextToken(char[] json, ref int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x2DED568", Offset = "0x2DED568", VA = "0x2DED568")]
		protected static bool serializeObjectOrArray(object objectOrArray, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x2DED6EC", Offset = "0x2DED6EC", VA = "0x2DED6EC")]
		protected static bool serializeObject(Hashtable anObject, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x2DEDD10", Offset = "0x2DEDD10", VA = "0x2DEDD10")]
		protected static bool serializeDictionary(Dictionary<string, string> dict, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x2DED980", Offset = "0x2DED980", VA = "0x2DED980")]
		protected static bool serializeArray(ArrayList anArray, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x2DEC190", Offset = "0x2DEC190", VA = "0x2DEC190")]
		protected static bool serializeValue(object value, StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x2DEDAD4", Offset = "0x2DEDAD4", VA = "0x2DEDAD4")]
		protected static void serializeString(string aString, StringBuilder builder)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x2DEDED0", Offset = "0x2DEDED0", VA = "0x2DEDED0")]
		protected static void serializeNumber(double number, StringBuilder builder)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x2DEDF5C", Offset = "0x2DEDF5C", VA = "0x2DEDF5C")]
		public MiniJSON()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public static class MiniJsonExtensions
	{
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x2DE0C0C", Offset = "0x2DE0C0C", VA = "0x2DE0C0C")]
		public static string toJson(this Hashtable obj)
		{
			return null;
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x2DD9A28", Offset = "0x2DD9A28", VA = "0x2DD9A28")]
		public static string toJson(this Dictionary<string, string> obj)
		{
			return null;
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x2DE97A8", Offset = "0x2DE97A8", VA = "0x2DE97A8")]
		public static string toJson(this ArrayList obj)
		{
			return null;
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x2DE2BF4", Offset = "0x2DE2BF4", VA = "0x2DE2BF4")]
		public static ArrayList arrayListFromJson(this string json)
		{
			return null;
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x2DD67AC", Offset = "0x2DD67AC", VA = "0x2DD67AC")]
		public static Hashtable hashtableFromJson(this string json)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000209")]
	public class News
	{
		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9B74", Offset = "0x16E9B74")]
		private sealed class <>c__DisplayClass9_0<T> where T : News, new()
		{
			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<News[], int, int, string> callback;

			[Token(Token = "0x6002131")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002132")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime date;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subject;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string message;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string url;

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x2DEDFD0", Offset = "0x2DEDFD0", VA = "0x2DEDFD0")]
		public News()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x2DEE080", Offset = "0x2DEE080", VA = "0x2DEE080", Slot = "4")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x2DEE0B4", Offset = "0x2DEE0B4", VA = "0x2DEE0B4", Slot = "5")]
		public virtual void FromHashtable(Hashtable hash)
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x2DEE378", Offset = "0x2DEE378", VA = "0x2DEE378")]
		public static void Load(int pageNumber, int limit, Action<News[], int, int, string> callback)
		{
		}

		[Token(Token = "0x6000FA1")]
		public static void Load<T>(int pageNumber, int limit, Action<News[], int, int, string> callback) where T : News, new()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020A")]
	public class Profile : IUserProfile
	{
		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected long _id;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string _userName;

		[NonSerialized]
		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Texture2D _image;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected string _sessionToken;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected DateTime? _lastSeen;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected string _gameId;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ProfilePlatform> _platforms;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string email;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Hashtable customData;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Hashtable appCustomData;

		[Token(Token = "0x1700025C")]
		public List<ProfilePlatform> platforms
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x2DEE3E0", Offset = "0x2DEE3E0", VA = "0x2DEE3E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public string id
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x2DE3E78", Offset = "0x2DE3E78", VA = "0x2DE3E78", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		public string gameId
		{
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x2DEE3E8", Offset = "0x2DEE3E8", VA = "0x2DEE3E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public long idLong
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x2DEE408", Offset = "0x2DEE408", VA = "0x2DEE408")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000260")]
		public string userName
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x2DEE410", Offset = "0x2DEE410", VA = "0x2DEE410", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x2DEE418", Offset = "0x2DEE418", VA = "0x2DEE418")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public bool isFriend
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x2DEE420", Offset = "0x2DEE420", VA = "0x2DEE420", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000262")]
		public virtual UserState state
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x2DEE61C", Offset = "0x2DEE61C", VA = "0x2DEE61C", Slot = "7")]
			get
			{
				return default(UserState);
			}
		}

		[Token(Token = "0x17000263")]
		public Texture2D image
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x2DEE86C", Offset = "0x2DEE86C", VA = "0x2DEE86C", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x2DEE874", Offset = "0x2DEE874", VA = "0x2DEE874")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public string sessionToken
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x2DEE87C", Offset = "0x2DEE87C", VA = "0x2DEE87C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		public DateTime? lastSeen
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x2DEE884", Offset = "0x2DEE884", VA = "0x2DEE884")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x2DEE890", Offset = "0x2DEE890", VA = "0x2DEE890")]
		public Profile()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x2DEE99C", Offset = "0x2DEE99C", VA = "0x2DEE99C")]
		public Profile(string jsonString)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x2DEB90C", Offset = "0x2DEB90C", VA = "0x2DEB90C")]
		public Profile(Hashtable hash)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x2DEEAC0", Offset = "0x2DEEAC0", VA = "0x2DEEAC0", Slot = "9")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x2DEEAF4", Offset = "0x2DEEAF4", VA = "0x2DEEAF4", Slot = "10")]
		public virtual void FromHashtable(Hashtable hash)
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class ProfilePlatform
	{
		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string platformKey;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string platformId;

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x298BD10", Offset = "0x298BD10", VA = "0x298BD10")]
		public ProfilePlatform(Hashtable data)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020C")]
	public class SearchCustomData
	{
		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eSearchOperator op;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string value;

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x298C664", Offset = "0x298C664", VA = "0x298C664")]
		public SearchCustomData(string key, eSearchOperator op, string value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020D")]
	public class Tournament
	{
		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9B84", Offset = "0x16E9B84")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tournament <>4__this;

			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002133")]
			[Address(RVA = "0x298DE20", Offset = "0x298DE20", VA = "0x298DE20")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002134")]
			[Address(RVA = "0x298F274", Offset = "0x298F274", VA = "0x298F274")]
			internal void <Save>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9B94", Offset = "0x16E9B94")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002135")]
			[Address(RVA = "0x298E090", Offset = "0x298E090", VA = "0x298E090")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002136")]
			[Address(RVA = "0x298F438", Offset = "0x298F438", VA = "0x298F438")]
			internal void <Delete>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9BA4", Offset = "0x16E9BA4")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Tournament[]> callback;

			[Token(Token = "0x6002137")]
			[Address(RVA = "0x298E58C", Offset = "0x298E58C", VA = "0x298E58C")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002138")]
			[Address(RVA = "0x298F5B4", Offset = "0x298F5B4", VA = "0x298F5B4")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9BB4", Offset = "0x16E9BB4")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Tournament> callback;

			[Token(Token = "0x6002139")]
			[Address(RVA = "0x298E7F4", Offset = "0x298E7F4", VA = "0x298E7F4")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x600213A")]
			[Address(RVA = "0x298F954", Offset = "0x298F954", VA = "0x298F954")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9BC4", Offset = "0x16E9BC4")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Tournament tournament;

			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x600213B")]
			[Address(RVA = "0x298EB3C", Offset = "0x298EB3C", VA = "0x298EB3C")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x600213C")]
			[Address(RVA = "0x298FAC8", Offset = "0x298FAC8", VA = "0x298FAC8")]
			internal void <Leave>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long idOwner;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DateTime dateCreation;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DateTime? dateFinished;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Hashtable customData;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Profile _owner;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Match> _matches;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _finished;

		[Token(Token = "0x17000266")]
		public Profile owner
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0x298CB28", Offset = "0x298CB28", VA = "0x298CB28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		public List<Match> matches
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x298CB30", Offset = "0x298CB30", VA = "0x298CB30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		public bool finished
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0x298CB38", Offset = "0x298CB38", VA = "0x298CB38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x298CB40", Offset = "0x298CB40", VA = "0x298CB40")]
		public Tournament()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x298CC2C", Offset = "0x298CC2C", VA = "0x298CC2C")]
		public Tournament(string jsonString)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x298CD38", Offset = "0x298CD38", VA = "0x298CD38")]
		public Tournament(Hashtable data)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x298CE44", Offset = "0x298CE44", VA = "0x298CE44", Slot = "4")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x298CE7C", Offset = "0x298CE7C", VA = "0x298CE7C", Slot = "5")]
		public virtual void FromHashtable(Hashtable hash)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x298D704", Offset = "0x298D704", VA = "0x298D704", Slot = "6")]
		public virtual void Save(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x298DE28", Offset = "0x298DE28", VA = "0x298DE28", Slot = "7")]
		public virtual void Delete(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x298DE30", Offset = "0x298DE30", VA = "0x298DE30")]
		public static void Delete(long idTournament, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x298E098", Offset = "0x298E098", VA = "0x298E098")]
		public static void Load(bool finished, SearchCustomData[] customData, Action<Tournament[]> callback)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x298E594", Offset = "0x298E594", VA = "0x298E594")]
		public static void Load(long id, Action<Tournament> callback)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x298E7FC", Offset = "0x298E7FC", VA = "0x298E7FC")]
		public void Leave(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x298E868", Offset = "0x298E868", VA = "0x298E868")]
		public static void Leave(long idTournament, long idUser, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x298E86C", Offset = "0x298E86C", VA = "0x298E86C")]
		private static void Leave(Tournament tournament, long idTournament, long idUser, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x298EB44", Offset = "0x298EB44", VA = "0x298EB44")]
		public static Tournament QuickTournament(Profile[] users)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200020E")]
	public class User : Profile, ILocalUser, IUserProfile
	{
		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9BD4", Offset = "0x16E9BD4")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> callback;

			[Token(Token = "0x600213D")]
			[Address(RVA = "0x2990384", Offset = "0x2990384", VA = "0x2990384")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x600213E")]
			[Address(RVA = "0x2994434", Offset = "0x2994434", VA = "0x2994434")]
			internal void <Authenticate>b__0(bool success, string error)
			{
			}
		}

		[Token(Token = "0x200052F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9BE4", Offset = "0x16E9BE4")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public User <>4__this;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CombuForm form;

			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<bool, string> callback;

			[Token(Token = "0x600213F")]
			[Address(RVA = "0x29905E8", Offset = "0x29905E8", VA = "0x29905E8")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002140")]
			[Address(RVA = "0x29944A8", Offset = "0x29944A8", VA = "0x29944A8")]
			internal void <Authenticate>b__0(bool success, string error)
			{
			}
		}

		[Token(Token = "0x2000530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9BF4", Offset = "0x16E9BF4")]
		private sealed class <>c__DisplayClass21_0<T> where T : User, new()
		{
			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002141")]
			public <>c__DisplayClass21_0()
			{
			}
		}

		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9C04", Offset = "0x16E9C04")]
		private sealed class <>c__DisplayClass21_1<T> where T : User, new()
		{
			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T user;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass21_0<T> CS$<>8__locals1;

			[Token(Token = "0x6002142")]
			public <>c__DisplayClass21_1()
			{
			}

			[Token(Token = "0x6002143")]
			internal void <AutoLogin>b__0(bool success, string error)
			{
			}
		}

		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9C14", Offset = "0x16E9C14")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public User <>4__this;

			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002144")]
			[Address(RVA = "0x2990AC4", Offset = "0x2990AC4", VA = "0x2990AC4")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002145")]
			[Address(RVA = "0x2994560", Offset = "0x2994560", VA = "0x2994560")]
			internal void <CreateGuest>b__0(bool success, string error)
			{
			}
		}

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9C24", Offset = "0x16E9C24")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002146")]
			[Address(RVA = "0x2990D7C", Offset = "0x2990D7C", VA = "0x2990D7C")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002147")]
			[Address(RVA = "0x2994634", Offset = "0x2994634", VA = "0x2994634")]
			internal void <ResendActivationCode>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9C34", Offset = "0x16E9C34")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public User <>4__this;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002148")]
			[Address(RVA = "0x2990D84", Offset = "0x2990D84", VA = "0x2990D84")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6002149")]
			[Address(RVA = "0x29947CC", Offset = "0x29947CC", VA = "0x29947CC")]
			internal void <DoAuthenticate>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9C44", Offset = "0x16E9C44")]
		private sealed class <>c__DisplayClass27_0<T> where T : User, new()
		{
			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public eContactType contactType;

			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public User <>4__this;

			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<bool> callback;

			[Token(Token = "0x600214A")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x600214B")]
			internal void <LoadFriends>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000536")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9C54", Offset = "0x16E9C54")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public User <>4__this;

			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x600214C")]
			[Address(RVA = "0x2991374", Offset = "0x2991374", VA = "0x2991374")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x600214D")]
			[Address(RVA = "0x2994A64", Offset = "0x2994A64", VA = "0x2994A64")]
			internal void <Update>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9C64", Offset = "0x16E9C64")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x600214E")]
			[Address(RVA = "0x29916D8", Offset = "0x29916D8", VA = "0x29916D8")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x600214F")]
			[Address(RVA = "0x2994C8C", Offset = "0x2994C8C", VA = "0x2994C8C")]
			internal void <Delete>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9C74", Offset = "0x16E9C74")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public User[] updateUsers;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool> callback;

			[Token(Token = "0x6002150")]
			[Address(RVA = "0x29918D4", Offset = "0x29918D4", VA = "0x29918D4")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6002151")]
			[Address(RVA = "0x2994E08", Offset = "0x2994E08", VA = "0x2994E08")]
			internal void <Load>b__0(User[] users)
			{
			}
		}

		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9C84", Offset = "0x16E9C84")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public User <>4__this;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool> callback;

			[Token(Token = "0x6002152")]
			[Address(RVA = "0x2991D94", Offset = "0x2991D94", VA = "0x2991D94")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6002153")]
			[Address(RVA = "0x2994F4C", Offset = "0x2994F4C", VA = "0x2994F4C")]
			internal void <Load>b__0(User[] users)
			{
			}
		}

		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9C94", Offset = "0x16E9C94")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<User> callback;

			[Token(Token = "0x6002154")]
			[Address(RVA = "0x2991EAC", Offset = "0x2991EAC", VA = "0x2991EAC")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6002155")]
			[Address(RVA = "0x2994FF0", Offset = "0x2994FF0", VA = "0x2994FF0")]
			internal void <Load>b__0(User[] users)
			{
			}
		}

		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9CA4", Offset = "0x16E9CA4")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<User> callback;

			[Token(Token = "0x6002156")]
			[Address(RVA = "0x2991FF4", Offset = "0x2991FF4", VA = "0x2991FF4")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6002157")]
			[Address(RVA = "0x299508C", Offset = "0x299508C", VA = "0x299508C")]
			internal void <Load>b__0(User[] users)
			{
			}
		}

		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9CB4", Offset = "0x16E9CB4")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<User[]> callback;

			[Token(Token = "0x6002158")]
			[Address(RVA = "0x29922C4", Offset = "0x29922C4", VA = "0x29922C4")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x6002159")]
			[Address(RVA = "0x2995128", Offset = "0x2995128", VA = "0x2995128")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200053D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9CC4", Offset = "0x16E9CC4")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<User[]> callback;

			[Token(Token = "0x600215A")]
			[Address(RVA = "0x29922CC", Offset = "0x29922CC", VA = "0x29922CC")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x600215B")]
			[Address(RVA = "0x2995598", Offset = "0x2995598", VA = "0x2995598")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200053E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9CD4", Offset = "0x16E9CD4")]
		private sealed class <>c__DisplayClass49_0<T> where T : User, new()
		{
			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T[], int, int> callback;

			[Token(Token = "0x600215C")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x600215D")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9CE4", Offset = "0x16E9CE4")]
		private sealed class <>c__DisplayClass50_0<T> where T : User, new()
		{
			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int count;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T[]> callback;

			[Token(Token = "0x600215E")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x600215F")]
			internal void <Random>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9CF4", Offset = "0x16E9CF4")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002160")]
			[Address(RVA = "0x29925DC", Offset = "0x29925DC", VA = "0x29925DC")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6002161")]
			[Address(RVA = "0x2995A08", Offset = "0x2995A08", VA = "0x2995A08")]
			internal void <Exists>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000541")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9D04", Offset = "0x16E9D04")]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002162")]
			[Address(RVA = "0x2992A8C", Offset = "0x2992A8C", VA = "0x2992A8C")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x6002163")]
			[Address(RVA = "0x2995C10", Offset = "0x2995C10", VA = "0x2995C10")]
			internal void <ResetPassword>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9D14", Offset = "0x16E9D14")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public User <>4__this;

			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002164")]
			[Address(RVA = "0x2992BB0", Offset = "0x2992BB0", VA = "0x2992BB0")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x6002165")]
			[Address(RVA = "0x2995DA8", Offset = "0x2995DA8", VA = "0x2995DA8")]
			internal void <ChangePassword>b__0(bool success, string error)
			{
			}
		}

		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9D24", Offset = "0x16E9D24")]
		private sealed class <>c__DisplayClass57_0
		{
			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002166")]
			[Address(RVA = "0x2992F7C", Offset = "0x2992F7C", VA = "0x2992F7C")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x6002167")]
			[Address(RVA = "0x2995E44", Offset = "0x2995E44", VA = "0x2995E44")]
			internal void <ChangePassword>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9D34", Offset = "0x16E9D34")]
		private sealed class <>c__DisplayClass59_0<T> where T : User, new()
		{
			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public User <>4__this;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002168")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x6002169")]
			internal void <AuthenticatePlatform>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9D44", Offset = "0x16E9D44")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public User <>4__this;

			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x600216A")]
			[Address(RVA = "0x299337C", Offset = "0x299337C", VA = "0x299337C")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x600216B")]
			[Address(RVA = "0x2995FD4", Offset = "0x2995FD4", VA = "0x2995FD4")]
			internal void <LinkAccount>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9D54", Offset = "0x16E9D54")]
		private sealed class <>c__DisplayClass61_0
		{
			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public User <>4__this;

			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x600216C")]
			[Address(RVA = "0x29936DC", Offset = "0x29936DC", VA = "0x29936DC")]
			public <>c__DisplayClass61_0()
			{
			}

			[Token(Token = "0x600216D")]
			[Address(RVA = "0x299626C", Offset = "0x299626C", VA = "0x299626C")]
			internal void <LinkPlatform>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9D64", Offset = "0x16E9D64")]
		private sealed class <>c__DisplayClass63_0<T> where T : User, new()
		{
			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T[]> callback;

			[Token(Token = "0x600216E")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x600216F")]
			internal void <LoadPlatform>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9D74", Offset = "0x16E9D74")]
		private sealed class <>c__DisplayClass65_0<T> where T : User, new()
		{
			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<bool, string, eContactType?, User> callback;

			[Token(Token = "0x6002170")]
			public <>c__DisplayClass65_0()
			{
			}

			[Token(Token = "0x6002171")]
			internal void <GetContact>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9D84", Offset = "0x16E9D84")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002172")]
			[Address(RVA = "0x2993DC4", Offset = "0x2993DC4", VA = "0x2993DC4")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x6002173")]
			[Address(RVA = "0x2996504", Offset = "0x2996504", VA = "0x2996504")]
			internal void <AddContact>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9D94", Offset = "0x16E9D94")]
		private sealed class <>c__DisplayClass73_0
		{
			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002174")]
			[Address(RVA = "0x2994374", Offset = "0x2994374", VA = "0x2994374")]
			public <>c__DisplayClass73_0()
			{
			}

			[Token(Token = "0x6002175")]
			[Address(RVA = "0x299669C", Offset = "0x299669C", VA = "0x299669C")]
			internal void <RemoveContact>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x4000DBF")]
		private const string AUTOLOGIN_USERNAME = "LoginUsername";

		[Token(Token = "0x4000DC0")]
		private const string AUTOLOGIN_PASSWORD = "LoginPassword";

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Exception ExceptionCombuNotInitialized;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Exception ExceptionOnlyLocalUser;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string password;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Profile[] _friends;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Profile[] _ignored;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Profile[] _requests;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Profile[] _pendingRequests;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _authenticated;

		[Token(Token = "0x17000269")]
		public IUserProfile[] friends
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x2990E90", Offset = "0x2990E90", VA = "0x2990E90", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		public IUserProfile[] ignored
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x2990E98", Offset = "0x2990E98", VA = "0x2990E98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		public IUserProfile[] requests
		{
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0x2990EA0", Offset = "0x2990EA0", VA = "0x2990EA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		public IUserProfile[] pendingRequests
		{
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x2990EA8", Offset = "0x2990EA8", VA = "0x2990EA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		public bool authenticated
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x2990EB0", Offset = "0x2990EB0", VA = "0x2990EB0", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026E")]
		public virtual bool underage
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x2990EB8", Offset = "0x2990EB8", VA = "0x2990EB8", Slot = "23")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x298FC78", Offset = "0x298FC78", VA = "0x298FC78")]
		public User()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x298FD38", Offset = "0x298FD38", VA = "0x298FD38")]
		public User(bool authenticated)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x298FE10", Offset = "0x298FE10", VA = "0x298FE10")]
		public User(string jsonString)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x298FEF0", Offset = "0x298FEF0", VA = "0x298FEF0")]
		public User(Hashtable hash)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x298FFD0", Offset = "0x298FFD0", VA = "0x298FFD0", Slot = "14")]
		public virtual void FromUser(User source)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x29901B4", Offset = "0x29901B4", VA = "0x29901B4")]
		private void StoreUserCredentials(string storeUserName, string storePassword)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x29902B4", Offset = "0x29902B4", VA = "0x29902B4", Slot = "15")]
		public virtual void Authenticate(Action<bool> callback)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x299038C", Offset = "0x299038C", VA = "0x299038C", Slot = "16")]
		public virtual void Authenticate(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x29903A8", Offset = "0x29903A8", VA = "0x29903A8", Slot = "17")]
		public virtual void Authenticate(string password, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x29907C0", Offset = "0x29907C0", VA = "0x29907C0")]
		public static bool CanAutoLogin(out string username, out string password)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x2990888", Offset = "0x2990888", VA = "0x2990888")]
		public static void AutoLogin(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FD1")]
		public static void AutoLogin<T>(Action<bool, string> callback) where T : User, new()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x29908F8", Offset = "0x29908F8", VA = "0x29908F8", Slot = "18")]
		public virtual void CreateGuest(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x2990ACC", Offset = "0x2990ACC", VA = "0x2990ACC")]
		public static void ResendActivationCode(string usernameEmailOrId, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x29905F0", Offset = "0x29905F0", VA = "0x29905F0")]
		private void DoAuthenticate(CombuForm form, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x2990D8C", Offset = "0x2990D8C", VA = "0x2990D8C", Slot = "19")]
		public virtual void LoadFriends(Action<bool> callback)
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x2990E0C", Offset = "0x2990E0C", VA = "0x2990E0C", Slot = "20")]
		public virtual void LoadFriends(eContactType contactType, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000FD7")]
		public virtual void LoadFriends<T>(eContactType contactType, Action<bool> callback) where T : User, new()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x2990EC0", Offset = "0x2990EC0", VA = "0x2990EC0", Slot = "24")]
		public virtual void Update(Action<bool, string> callback, bool requestUpdateFromServer = true, bool requestReplaceCustomData = false, bool requestReplaceAppCustomData = false)
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x299137C", Offset = "0x299137C", VA = "0x299137C", Slot = "25")]
		public virtual void Delete(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x29913FC", Offset = "0x29913FC", VA = "0x29913FC")]
		public static void Delete(string username, string password, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x29916E0", Offset = "0x29916E0", VA = "0x29916E0")]
		public static void Load(User[] updateUsers, Action<bool> callback)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x2991C70", Offset = "0x2991C70", VA = "0x2991C70")]
		public void Load(Action<bool> callback)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x2991D9C", Offset = "0x2991D9C", VA = "0x2991D9C")]
		public static void Load(long userId, Action<User> callback)
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x2991EB4", Offset = "0x2991EB4", VA = "0x2991EB4")]
		public static void Load(string userName, Action<User> callback)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x29918DC", Offset = "0x29918DC", VA = "0x29918DC")]
		public static void Load(long[] userIds, Action<User[]> callback)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x2991FFC", Offset = "0x2991FFC", VA = "0x2991FFC")]
		public static void Load(string[] userNames, Action<User[]> callback)
		{
		}

		[Token(Token = "0x6000FE7")]
		public static void Load<T>(string username, string email, SearchCustomData[] customData, bool isOnline, int pageNumber, int limit, Action<T[], int, int> callback) where T : User, new()
		{
		}

		[Token(Token = "0x6000FE8")]
		public static void Random<T>(SearchCustomData[] customData, int count, Action<T[]> callback) where T : User, new()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x29922D4", Offset = "0x29922D4", VA = "0x29922D4")]
		public static void Exists(string username, string email, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x29925E4", Offset = "0x29925E4", VA = "0x29925E4", Slot = "26")]
		public virtual void ResetPassword(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x2992988", Offset = "0x2992988", VA = "0x2992988")]
		public static void ResetPassword(long idUser, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x2992A14", Offset = "0x2992A14", VA = "0x2992A14")]
		public static void ResetPassword(string username, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x2992674", Offset = "0x2992674", VA = "0x2992674")]
		private static void ResetPassword(long idUser, string username, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x2992A94", Offset = "0x2992A94", VA = "0x2992A94", Slot = "27")]
		public virtual void ChangePassword(string newPassword, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x2992BB8", Offset = "0x2992BB8", VA = "0x2992BB8")]
		public static void ChangePassword(long idUser, string username, string resetCode, string newPassword, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x2992F84", Offset = "0x2992F84", VA = "0x2992F84", Slot = "28")]
		public virtual void AuthenticatePlatform(string platformKey, string platformId, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FF1")]
		public virtual void AuthenticatePlatform<T>(string platformKey, string platformId, Action<bool, string> callback) where T : User, new()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x2993018", Offset = "0x2993018", VA = "0x2993018", Slot = "30")]
		public virtual void LinkAccount(string username, string password, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x2993384", Offset = "0x2993384", VA = "0x2993384", Slot = "31")]
		public virtual void LinkPlatform(string platformKey, string platformId, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x29936E4", Offset = "0x29936E4", VA = "0x29936E4")]
		public static void LoadPlatform(IEnumerable<string> platformKeys, IEnumerable<string> platformIds, Action<User[]> callback)
		{
		}

		[Token(Token = "0x6000FF5")]
		public static void LoadPlatform<T>(IEnumerable<string> platformKeys, IEnumerable<string> platformIds, Action<T[]> callback) where T : User, new()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x299376C", Offset = "0x299376C", VA = "0x299376C")]
		public void GetContact(string idOrUsername, Action<bool, string, eContactType?, User> callback)
		{
		}

		[Token(Token = "0x6000FF7")]
		public void GetContact<T>(string idOrUsername, Action<bool, string, eContactType?, User> callback) where T : User, new()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x29937D4", Offset = "0x29937D4", VA = "0x29937D4")]
		public void AddContact(string otherUsername, eContactType contactType, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x2993C84", Offset = "0x2993C84", VA = "0x2993C84")]
		public void AddContact(long otherId, eContactType contactType, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x2993D14", Offset = "0x2993D14", VA = "0x2993D14")]
		public void AddContact(Profile otherUser, eContactType contactType, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x2993854", Offset = "0x2993854", VA = "0x2993854")]
		private void AddContact(string idUser, string username, eContactType contactType, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x2993DCC", Offset = "0x2993DCC", VA = "0x2993DCC")]
		public void RemoveContact(string otherUsername, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x2994254", Offset = "0x2994254", VA = "0x2994254")]
		public void RemoveContact(long otherId, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x29942D4", Offset = "0x29942D4", VA = "0x29942D4")]
		public void RemoveContact(Profile otherUser, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x2993E3C", Offset = "0x2993E3C", VA = "0x2993E3C")]
		private void RemoveContact(string idUser, string otherUsername, Action<bool, string> callback)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020F")]
	public class UserFile
	{
		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9DA4", Offset = "0x16E9DA4")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<UserFile, string> callback;

			[Token(Token = "0x6002176")]
			[Address(RVA = "0x2997210", Offset = "0x2997210", VA = "0x2997210")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002177")]
			[Address(RVA = "0x2997F88", Offset = "0x2997F88", VA = "0x2997F88")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9DB4", Offset = "0x16E9DB4")]
		private sealed class <>c__DisplayClass23_0<T> where T : UserFile, new()
		{
			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<UserFile[], int, int, string> callback;

			[Token(Token = "0x6002178")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002179")]
			internal void <Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9DC4", Offset = "0x16E9DC4")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UserFile <>4__this;

			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x600217A")]
			[Address(RVA = "0x29975D0", Offset = "0x29975D0", VA = "0x29975D0")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x600217B")]
			[Address(RVA = "0x2998158", Offset = "0x2998158", VA = "0x2998158")]
			internal void <Update>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200054E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9DD4", Offset = "0x16E9DD4")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x600217C")]
			[Address(RVA = "0x2997840", Offset = "0x2997840", VA = "0x2997840")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x600217D")]
			[Address(RVA = "0x2998328", Offset = "0x2998328", VA = "0x2998328")]
			internal void <Delete>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9DE4", Offset = "0x16E9DE4")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UserFile file;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x600217E")]
			[Address(RVA = "0x2997B14", Offset = "0x2997B14", VA = "0x2997B14")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x600217F")]
			[Address(RVA = "0x29984A4", Offset = "0x29984A4", VA = "0x29984A4")]
			internal void <View>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9DF4", Offset = "0x16E9DF4")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UserFile file;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002180")]
			[Address(RVA = "0x2997DE8", Offset = "0x2997DE8", VA = "0x2997DE8")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002181")]
			[Address(RVA = "0x2998668", Offset = "0x2998668", VA = "0x2998668")]
			internal void <Like>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9E04", Offset = "0x16E9E04")]
		private sealed class <DownloadUrl>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UserFile <>4__this;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<byte[]> callback;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private byte[] <bytes>5__2;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x170004C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002186")]
				[Address(RVA = "0x2998B18", Offset = "0x2998B18", VA = "0x2998B18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002188")]
				[Address(RVA = "0x2998B80", Offset = "0x2998B80", VA = "0x2998B80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002182")]
			[Address(RVA = "0x2997F5C", Offset = "0x2997F5C", VA = "0x2997F5C")]
			[DebuggerHidden]
			public <DownloadUrl>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002183")]
			[Address(RVA = "0x299882C", Offset = "0x299882C", VA = "0x299882C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002184")]
			[Address(RVA = "0x2998908", Offset = "0x2998908", VA = "0x2998908", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002185")]
			[Address(RVA = "0x2998848", Offset = "0x2998848", VA = "0x2998848")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002187")]
			[Address(RVA = "0x2998B20", Offset = "0x2998B20", VA = "0x2998B20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private long _id;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long _idAccount;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public eShareType sharing;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _views;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _likes;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Hashtable customData;

		[Token(Token = "0x1700026F")]
		public long id
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x2996834", Offset = "0x2996834", VA = "0x2996834")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000270")]
		public long idAccount
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0x299683C", Offset = "0x299683C", VA = "0x299683C")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000271")]
		public int views
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0x2996844", Offset = "0x2996844", VA = "0x2996844")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000272")]
		public int likes
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0x299684C", Offset = "0x299684C", VA = "0x299684C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x2996854", Offset = "0x2996854", VA = "0x2996854")]
		public UserFile()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x29968F8", Offset = "0x29968F8", VA = "0x29968F8")]
		public UserFile(string jsonString)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x29969BC", Offset = "0x29969BC", VA = "0x29969BC")]
		public UserFile(Hashtable hash)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x2996A80", Offset = "0x2996A80", VA = "0x2996A80", Slot = "4")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x2996AB8", Offset = "0x2996AB8", VA = "0x2996AB8", Slot = "5")]
		public virtual void FromHashtable(Hashtable hash)
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x2996FB0", Offset = "0x2996FB0", VA = "0x2996FB0")]
		public static void Load(long fileId, Action<UserFile, string> callback)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x2997218", Offset = "0x2997218", VA = "0x2997218")]
		public static void Load(string userId, bool includeShared, int pageNumber, int countPerPage, Action<UserFile[], int, int, string> callback)
		{
		}

		[Token(Token = "0x600100C")]
		public static void Load<T>(string userId, bool includeShared, int pageNumber, int countPerPage, Action<UserFile[], int, int, string> callback) where T : UserFile, new()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x2997298", Offset = "0x2997298", VA = "0x2997298", Slot = "6")]
		public virtual void Update(byte[] contents, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x29975D8", Offset = "0x29975D8", VA = "0x29975D8", Slot = "7")]
		public virtual void Delete(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x29975E0", Offset = "0x29975E0", VA = "0x29975E0")]
		public static void Delete(long idFile, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x2997848", Offset = "0x2997848", VA = "0x2997848", Slot = "8")]
		public virtual void View(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x2997B04", Offset = "0x2997B04", VA = "0x2997B04")]
		public static void View(long idFile, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x2997854", Offset = "0x2997854", VA = "0x2997854")]
		protected static void View(UserFile file, long idFile, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x2997B1C", Offset = "0x2997B1C", VA = "0x2997B1C", Slot = "9")]
		public virtual void Like(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x2997DD8", Offset = "0x2997DD8", VA = "0x2997DD8")]
		public static void Like(long idFile, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x2997B28", Offset = "0x2997B28", VA = "0x2997B28")]
		protected static void Like(UserFile file, long idFile, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x2997DF0", Offset = "0x2997DF0", VA = "0x2997DF0")]
		public void Download(Action<byte[]> callback)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x2997EC4", Offset = "0x2997EC4", VA = "0x2997EC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701CD8", Offset = "0x1701CD8")]
		private IEnumerator DownloadUrl(Action<byte[]> callback)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000210")]
	public class UserGroup
	{
		[Token(Token = "0x2000552")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9E14", Offset = "0x16E9E14")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<UserGroup[], string> callback;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<UserGroup[], int, int, string> callbackPaginated;

			[Token(Token = "0x6002189")]
			[Address(RVA = "0x2999AA0", Offset = "0x2999AA0", VA = "0x2999AA0")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x600218A")]
			[Address(RVA = "0x299A600", Offset = "0x299A600", VA = "0x299A600")]
			internal void <_Load>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9E24", Offset = "0x16E9E24")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UserGroup <>4__this;

			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool, string> callback;

			[Token(Token = "0x600218B")]
			[Address(RVA = "0x2999EB4", Offset = "0x2999EB4", VA = "0x2999EB4")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x600218C")]
			[Address(RVA = "0x299AAAC", Offset = "0x299AAAC", VA = "0x299AAAC")]
			internal void <Save>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9E34", Offset = "0x16E9E34")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool, string> callback;

			[Token(Token = "0x600218D")]
			[Address(RVA = "0x299A118", Offset = "0x299A118", VA = "0x299A118")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600218E")]
			[Address(RVA = "0x299AC78", Offset = "0x299AC78", VA = "0x299AC78")]
			internal void <Delete>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9E44", Offset = "0x16E9E44")]
		private sealed class <>c__DisplayClass22_0<T> where T : UserGroup, new()
		{
			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<bool, string> callback;

			[Token(Token = "0x600218F")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002190")]
			internal void <Join>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9E54", Offset = "0x16E9E54")]
		private sealed class <>c__DisplayClass26_0<T> where T : UserGroup, new()
		{
			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<bool, string> callback;

			[Token(Token = "0x6002191")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002192")]
			internal void <Leave>b__0(string text, string error)
			{
			}
		}

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long idOwner;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public User owner;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Hashtable customData;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public User[] users;

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x2998B88", Offset = "0x2998B88", VA = "0x2998B88")]
		public UserGroup()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x2998C20", Offset = "0x2998C20", VA = "0x2998C20")]
		public UserGroup(string jsonString)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x2998CD8", Offset = "0x2998CD8", VA = "0x2998CD8")]
		public UserGroup(Hashtable hash)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x2998D90", Offset = "0x2998D90", VA = "0x2998D90", Slot = "4")]
		public virtual void FromJson(string jsonString)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x2998DC8", Offset = "0x2998DC8", VA = "0x2998DC8", Slot = "5")]
		public virtual void FromHashtable(Hashtable hash)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x2999538", Offset = "0x2999538", VA = "0x2999538")]
		public static void Load(long idOwner, Action<UserGroup[], string> callback)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x29998CC", Offset = "0x29998CC", VA = "0x29998CC")]
		public static void Load(string usernameOwner, Action<UserGroup[], string> callback)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x2999944", Offset = "0x2999944", VA = "0x2999944")]
		public static void LoadMembership(long idMember, Action<UserGroup[], string> callback)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x29999BC", Offset = "0x29999BC", VA = "0x29999BC")]
		public static void LoadMembership(string usernameMember, Action<UserGroup[], string> callback)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x2999A34", Offset = "0x2999A34", VA = "0x2999A34")]
		public static void Load(string groupName, int pageNumber, int limit, Action<UserGroup[], int, int, string> callback)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x29995B0", Offset = "0x29995B0", VA = "0x29995B0")]
		private static void _Load(string groupName = "", long idOwner = 0L, string usernameOwner = "", long idMember = 0L, string usernameMember = "", [Optional] Action<UserGroup[], string> callback, int pageNumber = -1, int limit = -1, [Optional] Action<UserGroup[], int, int, string> callbackPaginated)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x2999AA8", Offset = "0x2999AA8", VA = "0x2999AA8", Slot = "6")]
		public virtual void Save(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x2999EBC", Offset = "0x2999EBC", VA = "0x2999EBC", Slot = "7")]
		public virtual void Delete(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x299A120", Offset = "0x299A120", VA = "0x299A120", Slot = "8")]
		public virtual void Join(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x299A280", Offset = "0x299A280", VA = "0x299A280", Slot = "9")]
		public virtual void Join(long[] idUsers, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x299A308", Offset = "0x299A308", VA = "0x299A308", Slot = "10")]
		public virtual void Join(string[] usernames, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x6001028")]
		protected virtual void Join<T>(long[] idUsers, string[] usernames, Action<bool, string> callback) where T : UserGroup, new()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x299A390", Offset = "0x299A390", VA = "0x299A390", Slot = "12")]
		public virtual void Leave(Action<bool, string> callback)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x299A4F0", Offset = "0x299A4F0", VA = "0x299A4F0", Slot = "13")]
		public virtual void Leave(long[] idUsers, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x299A578", Offset = "0x299A578", VA = "0x299A578", Slot = "14")]
		public virtual void Leave(string[] usernames, Action<bool, string> callback)
		{
		}

		[Token(Token = "0x600102C")]
		protected virtual void Leave<T>(long[] idUsers, string[] usernames, Action<bool, string> callback) where T : UserGroup, new()
		{
		}
	}
}
namespace CielaSpike
{
	[Token(Token = "0x2000211")]
	public static class Ninja
	{
		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly object JumpToUnity;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly object JumpBack;

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x25E107C", Offset = "0x25E107C", VA = "0x25E107C")]
		static Ninja()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class Task : IEnumerator
	{
		[Token(Token = "0x2000557")]
		private enum RunningState
		{
			[Token(Token = "0x4001EB6")]
			Init,
			[Token(Token = "0x4001EB7")]
			RunningAsync,
			[Token(Token = "0x4001EB8")]
			PendingYield,
			[Token(Token = "0x4001EB9")]
			ToBackground,
			[Token(Token = "0x4001EBA")]
			RunningSync,
			[Token(Token = "0x4001EBB")]
			CancellationRequested,
			[Token(Token = "0x4001EBC")]
			Done,
			[Token(Token = "0x4001EBD")]
			Error
		}

		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9E64", Offset = "0x16E9E64")]
		private sealed class <Wait>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Task <>4__this;

			[Token(Token = "0x170004CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002196")]
				[Address(RVA = "0x2DD62CC", Offset = "0x2DD62CC", VA = "0x2DD62CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002198")]
				[Address(RVA = "0x2DD6334", Offset = "0x2DD6334", VA = "0x2DD6334", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002193")]
			[Address(RVA = "0x2DD6230", Offset = "0x2DD6230", VA = "0x2DD6230")]
			[DebuggerHidden]
			public <Wait>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002194")]
			[Address(RVA = "0x2DD625C", Offset = "0x2DD625C", VA = "0x2DD625C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002195")]
			[Address(RVA = "0x2DD6260", Offset = "0x2DD6260", VA = "0x2DD6260", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002197")]
			[Address(RVA = "0x2DD62D4", Offset = "0x2DD62D4", VA = "0x2DD62D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0E5C", Offset = "0x16F0E5C")]
		private object <Current>k__BackingField;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IEnumerator _innerRoutine;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RunningState _state;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RunningState _previousState;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object _pendingCurrent;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0E6C", Offset = "0x16F0E6C")]
		private Exception <Exception>k__BackingField;

		[Token(Token = "0x17000273")]
		public object Current
		{
			[Token(Token = "0x600102E")]
			[Address(RVA = "0x25E111C", Offset = "0x25E111C", VA = "0x25E111C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701D3C", Offset = "0x1701D3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x25E1124", Offset = "0x25E1124", VA = "0x25E1124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701D4C", Offset = "0x1701D4C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public TaskState State
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x25E134C", Offset = "0x25E134C", VA = "0x25E134C")]
			get
			{
				return default(TaskState);
			}
		}

		[Token(Token = "0x17000275")]
		public Exception Exception
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x25E1370", Offset = "0x25E1370", VA = "0x25E1370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701D5C", Offset = "0x1701D5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x25E1378", Offset = "0x25E1378", VA = "0x25E1378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701D6C", Offset = "0x1701D6C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x25E112C", Offset = "0x25E112C", VA = "0x25E112C", Slot = "4")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x25E12E0", Offset = "0x25E12E0", VA = "0x25E12E0", Slot = "6")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x25E1380", Offset = "0x25E1380", VA = "0x25E1380")]
		public Task(IEnumerator routine)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x25E13BC", Offset = "0x25E13BC", VA = "0x25E13BC")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x25E147C", Offset = "0x25E147C", VA = "0x25E147C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701D7C", Offset = "0x1701D7C")]
		public IEnumerator Wait()
		{
			return null;
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x25E13E8", Offset = "0x25E13E8", VA = "0x25E13E8")]
		private void GotoState(RunningState state)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x25E14F8", Offset = "0x25E14F8", VA = "0x25E14F8")]
		private void SetPendingCurrentObject(object current)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x25E1130", Offset = "0x25E1130", VA = "0x25E1130")]
		private bool OnMoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x25E1804", Offset = "0x25E1804", VA = "0x25E1804")]
		private void MoveNextAsync()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x25E1878", Offset = "0x25E1878", VA = "0x25E1878")]
		private void BackgroundRunner(object state)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x25E1588", Offset = "0x25E1588", VA = "0x25E1588")]
		private void MoveNextUnity()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public enum TaskState
	{
		[Token(Token = "0x4000DE0")]
		Init,
		[Token(Token = "0x4000DE1")]
		Running,
		[Token(Token = "0x4000DE2")]
		Done,
		[Token(Token = "0x4000DE3")]
		Cancelled,
		[Token(Token = "0x4000DE4")]
		Error
	}
	[Token(Token = "0x2000214")]
	public static class ThreadNinjaMonoBehaviourExtensions
	{
		[Token(Token = "0x600103E")]
		[Address(RVA = "0x2DD633C", Offset = "0x2DD633C", VA = "0x2DD633C")]
		public static Coroutine StartCoroutineAsync(this MonoBehaviour behaviour, IEnumerator routine, out Task task)
		{
			return null;
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x2DD63D0", Offset = "0x2DD63D0", VA = "0x2DD63D0")]
		public static Coroutine StartCoroutineAsync(this MonoBehaviour behaviour, IEnumerator routine)
		{
			return null;
		}
	}
}
namespace BlueprintReality.GameObjects
{
	[Token(Token = "0x2000215")]
	public class GameObjectStack : MonoBehaviour
	{
		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9E74", Offset = "0x16E9E74")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObjectStackElement instance;

			[Token(Token = "0x6002199")]
			[Address(RVA = "0x25D8D0C", Offset = "0x25D8D0C", VA = "0x25D8D0C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600219A")]
			[Address(RVA = "0x25D8DA8", Offset = "0x25D8DA8", VA = "0x25D8DA8")]
			internal bool <RemoveElement>b__0(GameObjectStackElement se)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObjectStackElement> stack;

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x25D8728", Offset = "0x25D8728", VA = "0x25D8728")]
		public void SpawnObject(GameObject prefab)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x25D8A80", Offset = "0x25D8A80", VA = "0x25D8A80")]
		public void PopTopElement()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x25D8B40", Offset = "0x25D8B40", VA = "0x25D8B40")]
		public void RemoveElement(GameObject element)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x25D8D14", Offset = "0x25D8D14", VA = "0x25D8D14")]
		public GameObjectStack()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class GameObjectStackElement : MonoBehaviour
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> tags;

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x25D8E24", Offset = "0x25D8E24", VA = "0x25D8E24")]
		public GameObjectStackElement()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class PopFromGameObjectStack : MonoBehaviour
	{
		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool all;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stackId;

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x25D99F0", Offset = "0x25D99F0", VA = "0x25D99F0")]
		public void PopTopElement()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x25D9AB8", Offset = "0x25D9AB8", VA = "0x25D9AB8")]
		private GameObjectStack FindStack()
		{
			return null;
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x25D9BE0", Offset = "0x25D9BE0", VA = "0x25D9BE0")]
		public PopFromGameObjectStack()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class OpenPopupWindow : PushToGameObjectStack
	{
		[Serializable]
		[Token(Token = "0x200055A")]
		public class BtnData
		{
			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string btnText;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool btnUseLoc;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool btnToUpper;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Button.ButtonClickedEvent btnClick;

			[Token(Token = "0x600219B")]
			[Address(RVA = "0x25D99E0", Offset = "0x25D99E0", VA = "0x25D99E0")]
			public BtnData()
			{
			}
		}

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string titleText;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool titleUseLoc;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool titleToUpper;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string contentText;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool contentUseLoc;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool contentToUpper;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool showCloseButton;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button.ButtonClickedEvent onCloseButtonClicked;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<BtnData> btnData;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PopupWindow popupWindow;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObjectStack popupStack;

		[Token(Token = "0x17000276")]
		public bool isShowing
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x25D8EA0", Offset = "0x25D8EA0", VA = "0x25D8EA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		public float PopupAlpha
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x25D8F44", Offset = "0x25D8F44", VA = "0x25D8F44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x25D8FF0", Offset = "0x25D8FF0", VA = "0x25D8FF0")]
			set
			{
			}
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x25D90AC", Offset = "0x25D90AC", VA = "0x25D90AC")]
		public void Open()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x25D9818", Offset = "0x25D9818", VA = "0x25D9818")]
		public void Close()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x25D98CC", Offset = "0x25D98CC", VA = "0x25D98CC")]
		public OpenPopupWindow()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class PopupWindow : MonoBehaviour
	{
		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Text title;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject closeButton;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.UI.Text content;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform buttons;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject btnPrefab;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button.ButtonClickedEvent onCloseClicked;

		[Token(Token = "0x17000278")]
		public float Alpha
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x25DA0FC", Offset = "0x25DA0FC", VA = "0x25DA0FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x25DA15C", Offset = "0x25DA15C", VA = "0x25DA15C")]
			set
			{
			}
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x25D9C40", Offset = "0x25D9C40", VA = "0x25D9C40")]
		private void CompleteText(UnityEngine.UI.Text uitext, string text, bool useLoc, bool toUpper)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x25D963C", Offset = "0x25D963C", VA = "0x25D963C")]
		public void CompleteTitle(string titleText, bool titleUseLoc, bool titleToUpper)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x25D9714", Offset = "0x25D9714", VA = "0x25D9714")]
		public void CompleteContent(string contentText, bool contentUseLoc, bool contentToUpper)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x25D9730", Offset = "0x25D9730", VA = "0x25D9730")]
		public void CompleteButton(string btnText, bool btnUseLoc, bool btnToUpper, Button.ButtonClickedEvent btnClick)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x25D9658", Offset = "0x25D9658", VA = "0x25D9658")]
		public void SetCloseButtonActive(bool active, Button.ButtonClickedEvent onClicked)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x25D9E54", Offset = "0x25D9E54", VA = "0x25D9E54")]
		private GameObject AddPrefab(Transform parent, GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x25DA004", Offset = "0x25DA004", VA = "0x25DA004")]
		public void HandleCloseButtonClicked()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x25DA1CC", Offset = "0x25DA1CC", VA = "0x25DA1CC")]
		public PopupWindow()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class PushToGameObjectStack : MonoBehaviour
	{
		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool popFirst;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string stackId;

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x25D931C", Offset = "0x25D931C", VA = "0x25D931C")]
		public void PushElement()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x25D93D4", Offset = "0x25D93D4", VA = "0x25D93D4")]
		protected GameObjectStack FindStack()
		{
			return null;
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x25D9980", Offset = "0x25D9980", VA = "0x25D9980")]
		public PushToGameObjectStack()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class SetActiveFromOnTopOfStack : MonoBehaviour
	{
		[Token(Token = "0x200055B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9E84", Offset = "0x16E9E84")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool newState;

			[Token(Token = "0x600219C")]
			[Address(RVA = "0x25DA60C", Offset = "0x25DA60C", VA = "0x25DA60C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600219D")]
			[Address(RVA = "0x25DA6D4", Offset = "0x25DA6D4", VA = "0x25DA6D4")]
			internal void <ApplyState>b__0(GameObject g)
			{
			}

			[Token(Token = "0x600219E")]
			[Address(RVA = "0x25DA6F8", Offset = "0x25DA6F8", VA = "0x25DA6F8")]
			internal void <ApplyState>b__1(GameObject g)
			{
			}
		}

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string stackId;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> active;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> inactive;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObjectStack stack;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObjectStackElement element;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool lastState;

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x25DA1D4", Offset = "0x25DA1D4", VA = "0x25DA1D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x25DA5C4", Offset = "0x25DA5C4", VA = "0x25DA5C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x25DA3BC", Offset = "0x25DA3BC", VA = "0x25DA3BC")]
		private bool CalculateNewState()
		{
			return default(bool);
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x25DA4A4", Offset = "0x25DA4A4", VA = "0x25DA4A4")]
		private void ApplyState(bool newState)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x25DA204", Offset = "0x25DA204", VA = "0x25DA204")]
		private void FindStack()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x25DA614", Offset = "0x25DA614", VA = "0x25DA614")]
		public SetActiveFromOnTopOfStack()
		{
		}
	}
}
namespace BlueprintReality.UI
{
	[Token(Token = "0x200021C")]
	[ExecuteInEditMode]
	public class SetRectFromChildRects : MonoBehaviour
	{
		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform group;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool setWidth;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float widthPadding;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool setHeight;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float heightPadding;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool setPosX;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool setPosY;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool updateEveryFrame;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool leaveIfNoChildren;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Vector3[] worldCoords;

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x25DDC50", Offset = "0x25DDC50", VA = "0x25DDC50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x25DE494", Offset = "0x25DE494", VA = "0x25DE494")]
		private void Update()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x25DDC54", Offset = "0x25DDC54", VA = "0x25DDC54")]
		private void UpdateRect()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x25DE4A4", Offset = "0x25DE4A4", VA = "0x25DE4A4")]
		public SetRectFromChildRects()
		{
		}
	}
	[Token(Token = "0x200021D")]
	[ExecuteInEditMode]
	public class SetRectFromParentRect : MonoBehaviour
	{
		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool setWidth;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool setHeight;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool setPosX;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool setPosY;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sizeYOffset;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float posYOffset;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool updateEveryFrame;

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x25DE510", Offset = "0x25DE510", VA = "0x25DE510")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x25DE71C", Offset = "0x25DE71C", VA = "0x25DE71C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x25DE514", Offset = "0x25DE514", VA = "0x25DE514")]
		private void UpdateRect()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x25DE72C", Offset = "0x25DE72C", VA = "0x25DE72C")]
		public SetRectFromParentRect()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class SpawnPrefabAsChild : MonoBehaviour
	{
		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0E7C", Offset = "0x16F0E7C")]
		private bool <Spawned>k__BackingField;

		[Token(Token = "0x17000279")]
		public bool Spawned
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x25DEDC4", Offset = "0x25DEDC4", VA = "0x25DEDC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701E00", Offset = "0x1701E00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x25DEDCC", Offset = "0x25DEDCC", VA = "0x25DEDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701E10", Offset = "0x1701E10")]
			protected set
			{
			}
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x25DEDD8", Offset = "0x25DEDD8", VA = "0x25DEDD8")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x25DF034", Offset = "0x25DF034", VA = "0x25DF034")]
		public SpawnPrefabAsChild()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class SetInteractableFromActive : MonoBehaviour
	{
		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Selectable button;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> targets;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool all;

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x25DD9EC", Offset = "0x25DD9EC", VA = "0x25DD9EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x25DDAA0", Offset = "0x25DDAA0", VA = "0x25DDAA0")]
		private void Update()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x25DDAD4", Offset = "0x25DDAD4", VA = "0x25DDAD4")]
		private bool CalculateNewState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x25DDBD4", Offset = "0x25DDBD4", VA = "0x25DDBD4")]
		public SetInteractableFromActive()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class SetSelectableFromActiveAndInactive : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9E94", Offset = "0x16E9E94")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__5_0;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<GameObject> <>9__5_1;

			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<GameObject> <>9__5_2;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<GameObject> <>9__5_3;

			[Token(Token = "0x60021A0")]
			[Address(RVA = "0x25DED1C", Offset = "0x25DED1C", VA = "0x25DED1C")]
			public <>c()
			{
			}

			[Token(Token = "0x60021A1")]
			[Address(RVA = "0x25DED24", Offset = "0x25DED24", VA = "0x25DED24")]
			internal bool <Update>b__5_0(GameObject t)
			{
				return default(bool);
			}

			[Token(Token = "0x60021A2")]
			[Address(RVA = "0x25DED50", Offset = "0x25DED50", VA = "0x25DED50")]
			internal bool <Update>b__5_1(GameObject t)
			{
				return default(bool);
			}

			[Token(Token = "0x60021A3")]
			[Address(RVA = "0x25DED6C", Offset = "0x25DED6C", VA = "0x25DED6C")]
			internal bool <Update>b__5_2(GameObject t)
			{
				return default(bool);
			}

			[Token(Token = "0x60021A4")]
			[Address(RVA = "0x25DED98", Offset = "0x25DED98", VA = "0x25DED98")]
			internal bool <Update>b__5_3(GameObject t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Selectable button;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> activeTargets;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> inactiveTargets;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool all;

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x25DE734", Offset = "0x25DE734", VA = "0x25DE734")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x25DE7E0", Offset = "0x25DE7E0", VA = "0x25DE7E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x25DEC0C", Offset = "0x25DEC0C", VA = "0x25DEC0C")]
		public SetSelectableFromActiveAndInactive()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class TooltipEntry : MonoBehaviour
	{
		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string groupId;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tooltipTextId;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public string nonLocTextString;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0E9C", Offset = "0x16F0E9C")]
		private TooltipGroup <AttachedTo>k__BackingField;

		[Token(Token = "0x1700027A")]
		public TooltipGroup AttachedTo
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x25DF03C", Offset = "0x25DF03C", VA = "0x25DF03C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701E20", Offset = "0x1701E20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001075")]
			[Address(RVA = "0x25DF044", Offset = "0x25DF044", VA = "0x25DF044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701E30", Offset = "0x1701E30")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x25DF04C", Offset = "0x25DF04C", VA = "0x25DF04C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x25DF10C", Offset = "0x25DF10C", VA = "0x25DF10C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x25DF050", Offset = "0x25DF050", VA = "0x25DF050")]
		private void AttachToGroup()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x25DF110", Offset = "0x25DF110", VA = "0x25DF110")]
		private void RemoveFromGroup()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x25DF1FC", Offset = "0x25DF1FC", VA = "0x25DF1FC")]
		private TooltipGroup FindClosestEntry()
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x25DF624", Offset = "0x25DF624", VA = "0x25DF624")]
		public TooltipEntry()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x25DF6AC", Offset = "0x25DF6AC", VA = "0x25DF6AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701E40", Offset = "0x1701E40")]
		private bool <FindClosestEntry>b__11_0(TooltipGroup e)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000222")]
	public class TooltipGroup : MonoBehaviour
	{
		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0EAC", Offset = "0x16F0EAC")]
		private static List<TooltipGroup> <ActiveGroups>k__BackingField;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string groupId;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject tooltipGroup;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SetTextFromLocalization tooltipLabel;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TooltipEntry currentEntry;

		[Token(Token = "0x1700027B")]
		public static List<TooltipGroup> ActiveGroups
		{
			[Token(Token = "0x600107D")]
			[Address(RVA = "0x25DF6D0", Offset = "0x25DF6D0", VA = "0x25DF6D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701E50", Offset = "0x1701E50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600107E")]
			[Address(RVA = "0x25DF738", Offset = "0x25DF738", VA = "0x25DF738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701E60", Offset = "0x1701E60")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public TooltipEntry CurrentEntry
		{
			[Token(Token = "0x6001080")]
			[Address(RVA = "0x25DF85C", Offset = "0x25DF85C", VA = "0x25DF85C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001081")]
			[Address(RVA = "0x25DF4C0", Offset = "0x25DF4C0", VA = "0x25DF4C0")]
			set
			{
			}
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x25DF7A8", Offset = "0x25DF7A8", VA = "0x25DF7A8")]
		static TooltipGroup()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x25DF864", Offset = "0x25DF864", VA = "0x25DF864")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x25DF938", Offset = "0x25DF938", VA = "0x25DF938")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x25DFA00", Offset = "0x25DFA00", VA = "0x25DFA00")]
		public TooltipGroup()
		{
		}
	}
}
namespace BlueprintReality.MiniJSON
{
	[Token(Token = "0x2000223")]
	public static class Json
	{
		[Token(Token = "0x200055D")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x2000625")]
			private enum TOKEN
			{
				[Token(Token = "0x40022FC")]
				NONE,
				[Token(Token = "0x40022FD")]
				CURLY_OPEN,
				[Token(Token = "0x40022FE")]
				CURLY_CLOSE,
				[Token(Token = "0x40022FF")]
				SQUARED_OPEN,
				[Token(Token = "0x4002300")]
				SQUARED_CLOSE,
				[Token(Token = "0x4002301")]
				COLON,
				[Token(Token = "0x4002302")]
				COMMA,
				[Token(Token = "0x4002303")]
				STRING,
				[Token(Token = "0x4002304")]
				NUMBER,
				[Token(Token = "0x4002305")]
				TRUE,
				[Token(Token = "0x4002306")]
				FALSE,
				[Token(Token = "0x4002307")]
				NULL
			}

			[Token(Token = "0x4001ECC")]
			private const string WORD_BREAK = "{}[],:\"";

			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x170004CC")]
			private char PeekChar
			{
				[Token(Token = "0x60021B0")]
				[Address(RVA = "0x25DB42C", Offset = "0x25DB42C", VA = "0x25DB42C")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x170004CD")]
			private char NextChar
			{
				[Token(Token = "0x60021B1")]
				[Address(RVA = "0x25DB234", Offset = "0x25DB234", VA = "0x25DB234")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x170004CE")]
			private string NextWord
			{
				[Token(Token = "0x60021B2")]
				[Address(RVA = "0x25DB2BC", Offset = "0x25DB2BC", VA = "0x25DB2BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CF")]
			private TOKEN NextToken
			{
				[Token(Token = "0x60021B3")]
				[Address(RVA = "0x25DAB78", Offset = "0x25DAB78", VA = "0x25DAB78")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x60021A5")]
			[Address(RVA = "0x25DA8DC", Offset = "0x25DA8DC", VA = "0x25DA8DC")]
			public static bool IsWordBreak(char c)
			{
				return default(bool);
			}

			[Token(Token = "0x60021A6")]
			[Address(RVA = "0x25DA97C", Offset = "0x25DA97C", VA = "0x25DA97C")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x60021A7")]
			[Address(RVA = "0x25DA730", Offset = "0x25DA730", VA = "0x25DA730")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x60021A8")]
			[Address(RVA = "0x25DAA28", Offset = "0x25DAA28", VA = "0x25DAA28", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60021A9")]
			[Address(RVA = "0x25DAA64", Offset = "0x25DAA64", VA = "0x25DAA64")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x60021AA")]
			[Address(RVA = "0x25DAFA8", Offset = "0x25DAFA8", VA = "0x25DAFA8")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x60021AB")]
			[Address(RVA = "0x25DAA00", Offset = "0x25DAA00", VA = "0x25DAA00")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x25DB07C", Offset = "0x25DB07C", VA = "0x25DB07C")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x60021AD")]
			[Address(RVA = "0x25DAD28", Offset = "0x25DAD28", VA = "0x25DAD28")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x25DB158", Offset = "0x25DB158", VA = "0x25DB158")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x25DB378", Offset = "0x25DB378", VA = "0x25DB378")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x200055E")]
		private sealed class Serializer
		{
			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x25DB4B4", Offset = "0x25DB4B4", VA = "0x25DB4B4")]
			private Serializer()
			{
			}

			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x25DA860", Offset = "0x25DA860", VA = "0x25DA860")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x60021B6")]
			[Address(RVA = "0x25DB528", Offset = "0x25DB528", VA = "0x25DB528")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x60021B7")]
			[Address(RVA = "0x25DBBE0", Offset = "0x25DBBE0", VA = "0x25DBBE0")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x60021B8")]
			[Address(RVA = "0x25DB924", Offset = "0x25DB924", VA = "0x25DB924")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x60021B9")]
			[Address(RVA = "0x25DB6C4", Offset = "0x25DB6C4", VA = "0x25DB6C4")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x60021BA")]
			[Address(RVA = "0x25DBFC8", Offset = "0x25DBFC8", VA = "0x25DBFC8")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x25DA724", Offset = "0x25DA724", VA = "0x25DA724")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x25DA85C", Offset = "0x25DA85C", VA = "0x25DA85C")]
		public static string Serialize(object obj)
		{
			return null;
		}
	}
}
namespace BlueprintReality.Text
{
	[Token(Token = "0x2000224")]
	public static class Localization
	{
		[Token(Token = "0x4000E27")]
		public const string CSV_RES_PATH = "BPR_Localization";

		[Token(Token = "0x4000E28")]
		public const string DEFAULT_LANG = "english";

		[Token(Token = "0x4000E29")]
		public const string NOT_FOUND_STR_FORMAT = "#{0}#";

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string curLanguage;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<string, Dictionary<string, string>> languageTable;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string checkedLanguage;

		[Token(Token = "0x1700027D")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6001087")]
			[Address(RVA = "0x25DC1D4", Offset = "0x25DC1D4", VA = "0x25DC1D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x25DC5AC", Offset = "0x25DC5AC", VA = "0x25DC5AC")]
			set
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public static event Action LanguageChanged
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x25DC678", Offset = "0x25DC678", VA = "0x25DC678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701E70", Offset = "0x1701E70")]
			add
			{
			}
			[Token(Token = "0x600108A")]
			[Address(RVA = "0x25DC768", Offset = "0x25DC768", VA = "0x25DC768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701E80", Offset = "0x1701E80")]
			remove
			{
			}
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x25DC858", Offset = "0x25DC858", VA = "0x25DC858")]
		public static List<string> GetSupportedLanguages()
		{
			return null;
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x25DC94C", Offset = "0x25DC94C", VA = "0x25DC94C")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x25DCA54", Offset = "0x25DCA54", VA = "0x25DCA54")]
		private static void ParseLocalizationData(string text)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x25DD0BC", Offset = "0x25DD0BC", VA = "0x25DD0BC")]
		private static bool ParseLine(string line, out string key, out List<string> vals)
		{
			return default(bool);
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x25DD400", Offset = "0x25DD400", VA = "0x25DD400")]
		public static string Get(string key)
		{
			return null;
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x25DD4A8", Offset = "0x25DD4A8", VA = "0x25DD4A8")]
		public static string Get(string lang, string key)
		{
			return null;
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x25DD5EC", Offset = "0x25DD5EC", VA = "0x25DD5EC")]
		public static Dictionary<string, string> GetAllLanguageTextFromKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x25DC2AC", Offset = "0x25DC2AC", VA = "0x25DC2AC")]
		private static string GetCheckedLanguage(string language)
		{
			return null;
		}
	}
	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E747C", Offset = "0x16E747C")]
	public class SetTextFromLocalization : MonoBehaviour
	{
		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool toUpper;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool useNewlines;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[HideInInspector]
		public bool autoLocalize;

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x25DD8B4", Offset = "0x25DD8B4", VA = "0x25DD8B4")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x25DD94C", Offset = "0x25DD94C", VA = "0x25DD94C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x25D9D3C", Offset = "0x25D9D3C", VA = "0x25D9D3C")]
		public void RefreshText()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x25DD9DC", Offset = "0x25DD9DC", VA = "0x25DD9DC")]
		public SetTextFromLocalization()
		{
		}
	}
}
namespace BlackfireStudio
{
	[Token(Token = "0x2000226")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E74E0", Offset = "0x16E74E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E74E0", Offset = "0x16E74E0")]
	public class Frost : MonoBehaviour
	{
		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader shader;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D diffuseTex;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture2D bumpTex;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D coverageTex;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float transparency;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float refraction;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float coverage;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float smooth;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material frostMaterial;

		[Token(Token = "0x1700027E")]
		protected Material material
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x25D833C", Offset = "0x25D833C", VA = "0x25D833C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x25D8410", Offset = "0x25D8410", VA = "0x25D8410")]
		private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x25D8720", Offset = "0x25D8720", VA = "0x25D8720")]
		public Frost()
		{
		}
	}
}
namespace Asyncoroutine
{
	[Token(Token = "0x2000227")]
	public class ExampleUnityCoroutine : MonoBehaviour
	{
		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9EA4", Offset = "0x16E9EA4")]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExampleUnityCoroutine <>4__this;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskYieldInstruction<long> <taskYieldInstruction>5__2;

			[Token(Token = "0x170004D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021BE")]
				[Address(RVA = "0x25CF9C8", Offset = "0x25CF9C8", VA = "0x25CF9C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021C0")]
				[Address(RVA = "0x25CFA30", Offset = "0x25CFA30", VA = "0x25CFA30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021BB")]
			[Address(RVA = "0x25CF47C", Offset = "0x25CF47C", VA = "0x25CF47C")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60021BC")]
			[Address(RVA = "0x25CF62C", Offset = "0x25CF62C", VA = "0x25CF62C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021BD")]
			[Address(RVA = "0x25CF630", Offset = "0x25CF630", VA = "0x25CF630", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021BF")]
			[Address(RVA = "0x25CF9D0", Offset = "0x25CF9D0", VA = "0x25CF9D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x25CF400", Offset = "0x25CF400", VA = "0x25CF400")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1701E90", Offset = "0x1701E90")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x25CF4A8", Offset = "0x25CF4A8", VA = "0x25CF4A8")]
		private long LongTimeJob()
		{
			return default(long);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x25CF620", Offset = "0x25CF620", VA = "0x25CF620")]
		public ExampleUnityCoroutine()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x25CF628", Offset = "0x25CF628", VA = "0x25CF628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701EF4", Offset = "0x1701EF4")]
		private long <Start>b__0_0()
		{
			return default(long);
		}
	}
	[Token(Token = "0x2000228")]
	public class AwaiterCoroutine<TInstruction> : INotifyCompletion
	{
		[Token(Token = "0x2000560")]
		public class Enumerator : IEnumerator
		{
			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private AwaiterCoroutine<TInstruction> _parent;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator _nestedCoroutine;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB0D0", Offset = "0x16FB0D0")]
			private object <Current>k__BackingField;

			[Token(Token = "0x170004D2")]
			public object Current
			{
				[Token(Token = "0x60021C1")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707390", Offset = "0x1707390")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021C2")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17073A0", Offset = "0x17073A0")]
				private set
				{
				}
			}

			[Token(Token = "0x60021C3")]
			public Enumerator(AwaiterCoroutine<TInstruction> parent)
			{
			}

			[Token(Token = "0x60021C4")]
			private bool System.Collections.IEnumerator.MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021C5")]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action _continuation;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0EDC", Offset = "0x16F0EDC")]
		private TInstruction <Instruction>k__BackingField;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0EEC", Offset = "0x16F0EEC")]
		private Enumerator <Coroutine>k__BackingField;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isCompleted;

		[Token(Token = "0x1700027F")]
		public TInstruction Instruction
		{
			[Token(Token = "0x600109F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701F04", Offset = "0x1701F04")]
			get
			{
				return (TInstruction)null;
			}
			[Token(Token = "0x60010A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701F14", Offset = "0x1701F14")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public Enumerator Coroutine
		{
			[Token(Token = "0x60010A1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701F24", Offset = "0x1701F24")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010A2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701F34", Offset = "0x1701F34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public bool IsCompleted
		{
			[Token(Token = "0x60010A3")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010A4")]
			protected set
			{
			}
		}

		[Token(Token = "0x60010A5")]
		public AwaiterCoroutine()
		{
		}

		[Token(Token = "0x60010A6")]
		public AwaiterCoroutine(TInstruction instruction)
		{
		}

		[Token(Token = "0x60010A7")]
		private void ProcessCoroutine(TInstruction instruction)
		{
		}

		[Token(Token = "0x60010A8")]
		public TInstruction GetResult()
		{
			return (TInstruction)null;
		}

		[Token(Token = "0x60010A9")]
		private void System.Runtime.CompilerServices.INotifyCompletion.OnCompleted(Action continuation)
		{
		}

		[Token(Token = "0x60010AA")]
		protected virtual void OnCompleted(Action continuation)
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class AwaiterCoroutineWaitForMainThread : AwaiterCoroutine<WaitForMainThread>
	{
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x25CD7E4", Offset = "0x25CD7E4", VA = "0x25CD7E4")]
		public AwaiterCoroutineWaitForMainThread()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x25CD83C", Offset = "0x25CD83C", VA = "0x25CD83C", Slot = "5")]
		protected override void OnCompleted(Action continuation)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x25CD970", Offset = "0x25CD970", VA = "0x25CD970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1701F44", Offset = "0x1701F44")]
		private void <OnCompleted>b__1_0(object state)
		{
		}
	}
	[Token(Token = "0x200022A")]
	public static class AwaiterCoroutineExtension
	{
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x25CD2E8", Offset = "0x25CD2E8", VA = "0x25CD2E8")]
		public static AwaiterCoroutine<IEnumerator> GetAwaiter(this IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x25CD354", Offset = "0x25CD354", VA = "0x25CD354")]
		public static AwaiterCoroutine<WaitForNextFrame> GetAwaiter(this WaitForNextFrame waitForNextFrame)
		{
			return null;
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x25CD3C0", Offset = "0x25CD3C0", VA = "0x25CD3C0")]
		public static AwaiterCoroutine<WaitForSeconds> GetAwaiter(this WaitForSeconds waitForSeconds)
		{
			return null;
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x25CD42C", Offset = "0x25CD42C", VA = "0x25CD42C")]
		public static AwaiterCoroutine<WaitForSecondsRealtime> GetAwaiter(this WaitForSecondsRealtime waitForSecondsRealtime)
		{
			return null;
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x25CD498", Offset = "0x25CD498", VA = "0x25CD498")]
		public static AwaiterCoroutine<WaitForEndOfFrame> GetAwaiter(this WaitForEndOfFrame waitForEndOfFrame)
		{
			return null;
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x25CD504", Offset = "0x25CD504", VA = "0x25CD504")]
		public static AwaiterCoroutine<WaitForFixedUpdate> GetAwaiter(this WaitForFixedUpdate waitForFixedUpdate)
		{
			return null;
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x25CD570", Offset = "0x25CD570", VA = "0x25CD570")]
		public static AwaiterCoroutine<WaitUntil> GetAwaiter(this WaitUntil waitUntil)
		{
			return null;
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x25CD5DC", Offset = "0x25CD5DC", VA = "0x25CD5DC")]
		public static AwaiterCoroutine<WaitWhile> GetAwaiter(this WaitWhile waitWhile)
		{
			return null;
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x25CD648", Offset = "0x25CD648", VA = "0x25CD648")]
		public static AwaiterCoroutine<WWW> GetAwaiter(this WWW www)
		{
			return null;
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x25CD6B4", Offset = "0x25CD6B4", VA = "0x25CD6B4")]
		public static AwaiterCoroutine<AsyncOperation> GetAwaiter(this AsyncOperation asyncOperation)
		{
			return null;
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x25CD720", Offset = "0x25CD720", VA = "0x25CD720")]
		public static AwaiterCoroutine<CustomYieldInstruction> GetAwaiter(this CustomYieldInstruction customYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x25CD78C", Offset = "0x25CD78C", VA = "0x25CD78C")]
		public static AwaiterCoroutineWaitForMainThread GetAwaiter(this WaitForMainThread waitForMainThread)
		{
			return null;
		}
	}
	[Token(Token = "0x200022B")]
	public struct WaitForNextFrame
	{
	}
	[Token(Token = "0x200022C")]
	public struct WaitForMainThread
	{
	}
	[Token(Token = "0x200022D")]
	public class AwaiterCoroutineer : MonoBehaviour
	{
		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AwaiterCoroutineer _instance;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0EFC", Offset = "0x16F0EFC")]
		private SynchronizationContext <SynchronizationContext>k__BackingField;

		[Token(Token = "0x17000282")]
		public static AwaiterCoroutineer Instance
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x25CD91C", Offset = "0x25CD91C", VA = "0x25CD91C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		public SynchronizationContext SynchronizationContext
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x25CDAAC", Offset = "0x25CDAAC", VA = "0x25CDAAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702028", Offset = "0x1702028")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x25CDAB4", Offset = "0x25CDAB4", VA = "0x25CDAB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702038", Offset = "0x1702038")]
			private set
			{
			}
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x25CD9C4", Offset = "0x25CD9C4", VA = "0x25CD9C4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x1702014", Offset = "0x1702014")]
		public static void Install()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x25CDABC", Offset = "0x25CDABC", VA = "0x25CDABC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010BF")]
		public void StartAwaiterCoroutine<T>(AwaiterCoroutine<T> awaiterCoroutine)
		{
		}

		[Token(Token = "0x60010C0")]
		public void StopAwaiterCoroutine<T>(AwaiterCoroutine<T> awaiterCoroutine)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x25CDBA4", Offset = "0x25CDBA4", VA = "0x25CDBA4")]
		public AwaiterCoroutineer()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class TaskYieldInstruction : CustomYieldInstruction
	{
		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0F0C", Offset = "0x16F0F0C")]
		private System.Threading.Tasks.Task <Task>k__BackingField;

		[Token(Token = "0x17000284")]
		public System.Threading.Tasks.Task Task
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x25CFA38", Offset = "0x25CFA38", VA = "0x25CFA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702048", Offset = "0x1702048")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x25CFA40", Offset = "0x25CFA40", VA = "0x25CFA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702058", Offset = "0x1702058")]
			private set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public override bool keepWaiting
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x25CFA48", Offset = "0x25CFA48", VA = "0x25CFA48", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x25CFAD8", Offset = "0x25CFAD8", VA = "0x25CFAD8")]
		public TaskYieldInstruction(System.Threading.Tasks.Task task)
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class TaskYieldInstruction<T> : TaskYieldInstruction
	{
		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0F1C", Offset = "0x16F0F1C")]
		private Task<T> <Task>k__BackingField;

		[Token(Token = "0x17000286")]
		public new Task<T> Task
		{
			[Token(Token = "0x60010C6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702068", Offset = "0x1702068")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702078", Offset = "0x1702078")]
			private set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public T Result
		{
			[Token(Token = "0x60010C8")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60010C9")]
		public TaskYieldInstruction(Task<T> task)
		{
		}
	}
	[Token(Token = "0x2000230")]
	public static class TaskYieldInstructionExtension
	{
		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x25CF934", Offset = "0x25CF934", VA = "0x25CF934")]
		public static TaskYieldInstruction AsCoroutine(this System.Threading.Tasks.Task task)
		{
			return null;
		}

		[Token(Token = "0x60010CB")]
		public static TaskYieldInstruction<T> AsCoroutine<T>(this Task<T> task)
		{
			return null;
		}
	}
}
namespace Asyncoroutine.Example
{
	[Token(Token = "0x2000231")]
	public class ExampleAwaitCoroutine : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9EB4", Offset = "0x16E9EB4")]
		private struct <Awake>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ExampleAwaitCoroutine <>4__this;

			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x60021C6")]
			[Address(RVA = "0x25CDDF8", Offset = "0x25CDDF8", VA = "0x25CDDF8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x25CE658", Offset = "0x25CE658", VA = "0x25CE658", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9EC4", Offset = "0x16E9EC4")]
		private sealed class <UnityCoroutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170004D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021CB")]
				[Address(RVA = "0x25CEBEC", Offset = "0x25CEBEC", VA = "0x25CEBEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021CD")]
				[Address(RVA = "0x25CEC54", Offset = "0x25CEC54", VA = "0x25CEC54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x25CDCE8", Offset = "0x25CDCE8", VA = "0x25CDCE8")]
			[DebuggerHidden]
			public <UnityCoroutine>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x25CE9D4", Offset = "0x25CE9D4", VA = "0x25CE9D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x25CE9D8", Offset = "0x25CE9D8", VA = "0x25CE9D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021CC")]
			[Address(RVA = "0x25CEBF4", Offset = "0x25CEBF4", VA = "0x25CEBF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9ED4", Offset = "0x16E9ED4")]
		private struct <OnDisable>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ExampleAwaitCoroutine <>4__this;

			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x25CE664", Offset = "0x25CE664", VA = "0x25CE664", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x25CE9C8", Offset = "0x25CE9C8", VA = "0x25CE9C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x25CDBAC", Offset = "0x25CDBAC", VA = "0x25CDBAC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x17020A8", Offset = "0x17020A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x25CDC88", Offset = "0x25CDC88", VA = "0x25CDC88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x170210C", Offset = "0x170210C")]
		private IEnumerator UnityCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x25CDD14", Offset = "0x25CDD14", VA = "0x25CDD14")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x1702170", Offset = "0x1702170")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x25CDDF0", Offset = "0x25CDDF0", VA = "0x25CDDF0")]
		public ExampleAwaitCoroutine()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class ExampleAwaitCoroutineSync : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9EE4", Offset = "0x16E9EE4")]
		private struct <Awake>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__2;

			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x25CED24", Offset = "0x25CED24", VA = "0x25CED24", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x25CF3F4", Offset = "0x25CF3F4", VA = "0x25CF3F4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x25CEC5C", Offset = "0x25CEC5C", VA = "0x25CEC5C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x17021D4", Offset = "0x17021D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x25CED1C", Offset = "0x25CED1C", VA = "0x25CED1C")]
		public ExampleAwaitCoroutineSync()
		{
		}
	}
}
namespace VLB
{
	[Token(Token = "0x2000233")]
	public static class BatchingHelper
	{
		[Token(Token = "0x4000E44")]
		public const bool isGpuInstancingSupported = true;

		[Token(Token = "0x17000288")]
		public static bool forceEnableDepthBlend
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x23747E0", Offset = "0x23747E0", VA = "0x23747E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x2374940", Offset = "0x2374940", VA = "0x2374940")]
		public static bool IsGpuInstancingEnabled(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x2374958", Offset = "0x2374958", VA = "0x2374958")]
		public static void SetMaterialProperties(Material material, bool enableGpuInstancing)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x2374974", Offset = "0x2374974", VA = "0x2374974")]
		public static bool CanBeBatched(VolumetricLightBeam beamA, VolumetricLightBeam beamB, ref string reasons)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x2374C9C", Offset = "0x2374C9C", VA = "0x2374C9C")]
		public static bool CanBeBatched(VolumetricLightBeam beam, ref string reasons)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x2374DF8", Offset = "0x2374DF8", VA = "0x2374DF8")]
		private static void AppendErrorMessage(ref string message, string toAppend)
		{
		}
	}
	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7598", Offset = "0x16E7598")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7598", Offset = "0x16E7598")]
	public class BeamGeometry : MonoBehaviour, MaterialModifier.Interface
	{
		[Token(Token = "0x2000565")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9EF4", Offset = "0x16E9EF4")]
		private sealed class <CoUpdateFadeOut>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BeamGeometry <>4__this;

			[Token(Token = "0x170004D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021D5")]
				[Address(RVA = "0x237959C", Offset = "0x237959C", VA = "0x237959C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021D7")]
				[Address(RVA = "0x2379604", Offset = "0x2379604", VA = "0x2379604", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x23751CC", Offset = "0x23751CC", VA = "0x23751CC")]
			[DebuggerHidden]
			public <CoUpdateFadeOut>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x23794F8", Offset = "0x23794F8", VA = "0x23794F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x23794FC", Offset = "0x23794FC", VA = "0x23794FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021D6")]
			[Address(RVA = "0x23795A4", Offset = "0x23795A4", VA = "0x23795A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Matrix4x4 m_ColorGradientMatrix;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshType m_CurrentMeshType;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_CustomMaterial;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialModifier.Callback m_MaterialModifierCallback;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine m_CoFadeOut;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0F2C", Offset = "0x16F0F2C")]
		private MeshRenderer <meshRenderer>k__BackingField;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0F3C", Offset = "0x16F0F3C")]
		private MeshFilter <meshFilter>k__BackingField;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F0F4C", Offset = "0x16F0F4C")]
		private Mesh <coneMesh>k__BackingField;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Camera m_CurrentCameraRenderingSRP;

		[Token(Token = "0x17000289")]
		public MeshRenderer meshRenderer
		{
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0x2374EC0", Offset = "0x2374EC0", VA = "0x2374EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702238", Offset = "0x1702238")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x2374EC8", Offset = "0x2374EC8", VA = "0x2374EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702248", Offset = "0x1702248")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public MeshFilter meshFilter
		{
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0x2374ED0", Offset = "0x2374ED0", VA = "0x2374ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702258", Offset = "0x1702258")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x2374ED8", Offset = "0x2374ED8", VA = "0x2374ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702268", Offset = "0x1702268")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public Mesh coneMesh
		{
			[Token(Token = "0x60010DC")]
			[Address(RVA = "0x2374EE0", Offset = "0x2374EE0", VA = "0x2374EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702278", Offset = "0x1702278")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x2374EE8", Offset = "0x2374EE8", VA = "0x2374EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702288", Offset = "0x1702288")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public bool visible
		{
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x2374EF0", Offset = "0x2374EF0", VA = "0x2374EF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010DF")]
			[Address(RVA = "0x2374F0C", Offset = "0x2374F0C", VA = "0x2374F0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public int sortingLayerID
		{
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0x2374F2C", Offset = "0x2374F2C", VA = "0x2374F2C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010E1")]
			[Address(RVA = "0x2374F48", Offset = "0x2374F48", VA = "0x2374F48")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public int sortingOrder
		{
			[Token(Token = "0x60010E2")]
			[Address(RVA = "0x2374F64", Offset = "0x2374F64", VA = "0x2374F64")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010E3")]
			[Address(RVA = "0x2374F80", Offset = "0x2374F80", VA = "0x2374F80")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public bool _INTERNAL_IsFadeOutCoroutineRunning
		{
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0x2374F9C", Offset = "0x2374F9C", VA = "0x2374F9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000290")]
		public static bool isCustomRenderPipelineSupported
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0x2375988", Offset = "0x2375988", VA = "0x2375988")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000291")]
		private bool shouldUseGPUInstancedMaterial
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x2375990", Offset = "0x2375990", VA = "0x2375990")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000292")]
		private bool isNoiseEnabled
		{
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x2377AFC", Offset = "0x2377AFC", VA = "0x2377AFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000293")]
		private bool isDepthBlendEnabled
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x2377CDC", Offset = "0x2377CDC", VA = "0x2377CDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x2374FAC", Offset = "0x2374FAC", VA = "0x2374FAC")]
		private float ComputeFadeOutFactor(Transform camTransform)
		{
			return default(float);
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x2375150", Offset = "0x2375150", VA = "0x2375150")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1702298", Offset = "0x1702298")]
		private IEnumerator CoUpdateFadeOut()
		{
			return null;
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x23751F8", Offset = "0x23751F8", VA = "0x23751F8")]
		private void ComputeFadeOutFactor()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x237533C", Offset = "0x237533C", VA = "0x237533C")]
		private void SetFadeOutFactorProp(float value)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x2375680", Offset = "0x2375680", VA = "0x2375680")]
		public void RestartFadeOutCoroutine()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x237577C", Offset = "0x237577C", VA = "0x237577C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x237583C", Offset = "0x237583C", VA = "0x237583C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x23758FC", Offset = "0x23758FC", VA = "0x23758FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x2375A24", Offset = "0x2375A24", VA = "0x2375A24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x2375AA8", Offset = "0x2375AA8", VA = "0x2375AA8")]
		public void Initialize(VolumetricLightBeam master)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x23762D0", Offset = "0x23762D0", VA = "0x23762D0")]
		public void RegenerateMesh()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x2377848", Offset = "0x2377848", VA = "0x2377848")]
		private void ComputeLocalMatrix()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x2375FD8", Offset = "0x2375FD8", VA = "0x2375FD8")]
		private bool ApplyMaterial()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x23754C8", Offset = "0x23754C8", VA = "0x23754C8", Slot = "4")]
		public void SetMaterialProp(int nameID, float value)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x23782F0", Offset = "0x23782F0", VA = "0x23782F0", Slot = "5")]
		public void SetMaterialProp(int nameID, Vector4 value)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x2378414", Offset = "0x2378414", VA = "0x2378414", Slot = "6")]
		public void SetMaterialProp(int nameID, Color value)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x2378538", Offset = "0x2378538", VA = "0x2378538", Slot = "7")]
		public void SetMaterialProp(int nameID, Matrix4x4 value)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x2378664", Offset = "0x2378664", VA = "0x2378664", Slot = "8")]
		public void SetMaterialProp(int nameID, Texture value)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x2375404", Offset = "0x2375404", VA = "0x2375404")]
		private void MaterialChangeStart()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x23755BC", Offset = "0x23755BC", VA = "0x23755BC")]
		private void MaterialChangeStop()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x2378740", Offset = "0x2378740", VA = "0x2378740")]
		public void SetDynamicOcclusionCallback(string shaderKeyword, MaterialModifier.Callback cb)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x23771E8", Offset = "0x23771E8", VA = "0x23771E8")]
		public void UpdateMaterialAndBounds()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x2378D38", Offset = "0x2378D38", VA = "0x2378D38")]
		private void UpdateMatricesPropertiesForGPUInstancingSRP()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x2378E7C", Offset = "0x2378E7C", VA = "0x2378E7C")]
		private void OnBeginCameraRenderingSRP(ScriptableRenderContext context, Camera cam)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x2378E88", Offset = "0x2378E88", VA = "0x2378E88")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x2378EC8", Offset = "0x2378EC8", VA = "0x2378EC8")]
		private void OnWillCameraRenderThisBeam(Camera cam)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x2378FB8", Offset = "0x2378FB8", VA = "0x2378FB8")]
		private void UpdateCameraRelatedProperties(Camera cam)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x23794F0", Offset = "0x23794F0", VA = "0x23794F0")]
		public BeamGeometry()
		{
		}
	}
	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7608", Offset = "0x16E7608")]
	public class Config : ScriptableObject
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool geometryOverrideLayer;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int geometryLayerID;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string geometryTag;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int geometryRenderQueue;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F0F5C", Offset = "0x16F0F5C")]
		[SerializeField]
		private RenderPipeline _RenderPipeline;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F0FA8", Offset = "0x16F0FA8")]
		[SerializeField]
		private RenderingMode _RenderingMode;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ditheringFactor;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sharedMeshSides;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int sharedMeshSegments;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F0FF4", Offset = "0x16F0FF4")]
		public float globalNoiseScale;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public UnityEngine.Vector3 globalNoiseVelocity;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string fadeOutCameraTag;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HighlightNull]
		public TextAsset noise3DData;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int noise3DSize;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HighlightNull]
		public ParticleSystem dustParticlesPrefab;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture2D ditheringNoiseTexture;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Material _DummyMaterial;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Shader _BeamShader;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform m_CachedFadeOutCamera;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Config m_Instance;

		[Token(Token = "0x17000294")]
		public RenderPipeline renderPipeline
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0x237960C", Offset = "0x237960C", VA = "0x237960C")]
			get
			{
				return default(RenderPipeline);
			}
			[Token(Token = "0x6001106")]
			[Address(RVA = "0x2379614", Offset = "0x2379614", VA = "0x2379614")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public RenderingMode renderingMode
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x2379680", Offset = "0x2379680", VA = "0x2379680")]
			get
			{
				return default(RenderingMode);
			}
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x2379688", Offset = "0x2379688", VA = "0x2379688")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public RenderingMode actualRenderingMode
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x23748E8", Offset = "0x23748E8", VA = "0x23748E8")]
			get
			{
				return default(RenderingMode);
			}
		}

		[Token(Token = "0x17000297")]
		public bool useSinglePassShader
		{
			[Token(Token = "0x600110C")]
			[Address(RVA = "0x23765D4", Offset = "0x23765D4", VA = "0x23765D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000298")]
		public Shader beamShader
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x2379728", Offset = "0x2379728", VA = "0x2379728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000299")]
		public Vector4 globalNoiseParam
		{
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x2379730", Offset = "0x2379730", VA = "0x2379730")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700029A")]
		public Transform fadeOutCameraTransform
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x23752B8", Offset = "0x23752B8", VA = "0x23752B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		public static Config Instance
		{
			[Token(Token = "0x6001118")]
			[Address(RVA = "0x2374888", Offset = "0x2374888", VA = "0x2374888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x23796F4", Offset = "0x23796F4", VA = "0x23796F4")]
		public void SetRenderingModeAndRefreshShader(RenderingMode mode)
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x23796F8", Offset = "0x23796F8", VA = "0x23796F8")]
		public bool IsSRPBatcherSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x2379768", Offset = "0x2379768", VA = "0x2379768")]
		public void ForceUpdateFadeOutCamera()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x2379818", Offset = "0x2379818", VA = "0x2379818")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x17022FC", Offset = "0x17022FC")]
		private static void OnStartup()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x2379920", Offset = "0x2379920", VA = "0x2379920")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x2379894", Offset = "0x2379894", VA = "0x2379894")]
		private void RefreshGlobalShaderProperties()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x23799E8", Offset = "0x23799E8", VA = "0x23799E8")]
		public void ResetInternalData()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x2379B74", Offset = "0x2379B74", VA = "0x2379B74")]
		public ParticleSystem NewVolumetricDustParticles()
		{
			return null;
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x2379D08", Offset = "0x2379D08", VA = "0x2379D08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x2379D14", Offset = "0x2379D14", VA = "0x2379D14")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x2379D18", Offset = "0x2379D18", VA = "0x2379D18")]
		private static Config GetInstance(bool assertIfNotFound)
		{
			return null;
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x2379E5C", Offset = "0x2379E5C", VA = "0x2379E5C")]
		public Config()
		{
		}
	}
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7640", Offset = "0x16E7640")]
	public class ConfigOverride : Config
	{
		[Token(Token = "0x4000E64")]
		public const string kAssetName = "VLBConfigOverride";

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x2379F4C", Offset = "0x2379F4C", VA = "0x2379F4C")]
		public ConfigOverride()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public static class Consts
	{
		[Token(Token = "0x4000E65")]
		private const string HelpUrlBase = "http://saladgamer.com/vlb-doc/";

		[Token(Token = "0x4000E66")]
		public const string HelpUrlBeam = "http://saladgamer.com/vlb-doc/comp-lightbeam/";

		[Token(Token = "0x4000E67")]
		public const string HelpUrlDustParticles = "http://saladgamer.com/vlb-doc/comp-dustparticles/";

		[Token(Token = "0x4000E68")]
		public const string HelpUrlDynamicOcclusionRaycasting = "http://saladgamer.com/vlb-doc/comp-dynocclusion-raycasting/";

		[Token(Token = "0x4000E69")]
		public const string HelpUrlDynamicOcclusionDepthBuffer = "http://saladgamer.com/vlb-doc/comp-dynocclusion-depthbuffer/";

		[Token(Token = "0x4000E6A")]
		public const string HelpUrlTriggerZone = "http://saladgamer.com/vlb-doc/comp-triggerzone/";

		[Token(Token = "0x4000E6B")]
		public const string HelpUrlConfig = "http://saladgamer.com/vlb-doc/config/";

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly bool ProceduralObjectsVisibleInEditor;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Color FlatColor;

		[Token(Token = "0x4000E6E")]
		public const ColorMode ColorModeDefault = ColorMode.Flat;

		[Token(Token = "0x4000E6F")]
		public const float IntensityDefault = 1f;

		[Token(Token = "0x4000E70")]
		public const float IntensityMin = 0f;

		[Token(Token = "0x4000E71")]
		public const float IntensityMax = 8f;

		[Token(Token = "0x4000E72")]
		public const float SpotAngleDefault = 35f;

		[Token(Token = "0x4000E73")]
		public const float SpotAngleMin = 0.1f;

		[Token(Token = "0x4000E74")]
		public const float SpotAngleMax = 179.9f;

		[Token(Token = "0x4000E75")]
		public const float ConeRadiusStart = 0.1f;

		[Token(Token = "0x4000E76")]
		public const MeshType GeomMeshType = MeshType.Shared;

		[Token(Token = "0x4000E77")]
		public const int GeomSidesDefault = 18;

		[Token(Token = "0x4000E78")]
		public const int GeomSidesMin = 3;

		[Token(Token = "0x4000E79")]
		public const int GeomSidesMax = 256;

		[Token(Token = "0x4000E7A")]
		public const int GeomSegmentsDefault = 5;

		[Token(Token = "0x4000E7B")]
		public const int GeomSegmentsMin = 0;

		[Token(Token = "0x4000E7C")]
		public const int GeomSegmentsMax = 64;

		[Token(Token = "0x4000E7D")]
		public const bool GeomCap = false;

		[Token(Token = "0x4000E7E")]
		public const AttenuationEquation AttenuationEquationDefault = AttenuationEquation.Quadratic;

		[Token(Token = "0x4000E7F")]
		public const float AttenuationCustomBlending = 0.5f;

		[Token(Token = "0x4000E80")]
		public const float FallOffStart = 0f;

		[Token(Token = "0x4000E81")]
		public const float FallOffEnd = 3f;

		[Token(Token = "0x4000E82")]
		public const float FallOffDistancesMinThreshold = 0.01f;

		[Token(Token = "0x4000E83")]
		public const float DepthBlendDistance = 2f;

		[Token(Token = "0x4000E84")]
		public const float CameraClippingDistance = 0.5f;

		[Token(Token = "0x4000E85")]
		public const float FresnelPowMaxValue = 10f;

		[Token(Token = "0x4000E86")]
		public const float FresnelPow = 8f;

		[Token(Token = "0x4000E87")]
		public const float GlareFrontal = 0.5f;

		[Token(Token = "0x4000E88")]
		public const float GlareBehind = 0.5f;

		[Token(Token = "0x4000E89")]
		public const NoiseMode NoiseModeDefault = NoiseMode.Disabled;

		[Token(Token = "0x4000E8A")]
		public const float NoiseIntensityMin = 0f;

		[Token(Token = "0x4000E8B")]
		public const float NoiseIntensityMax = 1f;

		[Token(Token = "0x4000E8C")]
		public const float NoiseIntensityDefault = 0.5f;

		[Token(Token = "0x4000E8D")]
		public const float NoiseScaleMin = 0.01f;

		[Token(Token = "0x4000E8E")]
		public const float NoiseScaleMax = 2f;

		[Token(Token = "0x4000E8F")]
		public const float NoiseScaleDefault = 0.5f;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly UnityEngine.Vector3 NoiseVelocityDefault;

		[Token(Token = "0x4000E91")]
		public const BlendingMode BlendingModeDefault = BlendingMode.Additive;

		[Token(Token = "0x4000E92")]
		public const float FadeOutBeginDefault = -150f;

		[Token(Token = "0x4000E93")]
		public const float FadeOutEndDefault = -200f;

		[Token(Token = "0x4000E94")]
		public const Dimensions BeamDimensions = Dimensions.Dim3D;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly LayerMask DynOcclusionLayerMaskDefault;

		[Token(Token = "0x4000E96")]
		public const float DynOcclusionFadeDistanceToSurfaceDefault = 0.25f;

		[Token(Token = "0x4000E97")]
		public const DynamicOcclusionUpdateRate DynamicOcclusionUpdateRateDefault = DynamicOcclusionUpdateRate.EveryXFrames;

		[Token(Token = "0x4000E98")]
		public const int DynOcclusionWaitFramesCountDefault = 3;

		[Token(Token = "0x4000E99")]
		public const Dimensions DynOcclusionRaycastingDimensionsDefault = Dimensions.Dim3D;

		[Token(Token = "0x4000E9A")]
		public const bool DynOcclusionRaycastingConsiderTriggersDefault = false;

		[Token(Token = "0x4000E9B")]
		public const float DynOcclusionRaycastingMinOccluderAreaDefault = 0f;

		[Token(Token = "0x4000E9C")]
		public const float DynOcclusionRaycastingMinSurfaceRatioDefault = 0.5f;

		[Token(Token = "0x4000E9D")]
		public const float DynOcclusionRaycastingMinSurfaceRatioMin = 50f;

		[Token(Token = "0x4000E9E")]
		public const float DynOcclusionRaycastingMinSurfaceRatioMax = 100f;

		[Token(Token = "0x4000E9F")]
		public const float DynOcclusionRaycastingMaxSurfaceDotDefault = 0.25f;

		[Token(Token = "0x4000EA0")]
		public const float DynOcclusionRaycastingMaxSurfaceAngleMin = 45f;

		[Token(Token = "0x4000EA1")]
		public const float DynOcclusionRaycastingMaxSurfaceAngleMax = 90f;

		[Token(Token = "0x4000EA2")]
		public const PlaneAlignment DynOcclusionRaycastingPlaneAlignmentDefault = PlaneAlignment.Surface;

		[Token(Token = "0x4000EA3")]
		public const float DynOcclusionRaycastingPlaneOffsetDefault = 0.1f;

		[Token(Token = "0x4000EA4")]
		public const int DynOcclusionDepthBufferDepthMapResolutionDefault = 32;

		[Token(Token = "0x4000EA5")]
		public const bool DynOcclusionDepthBufferOcclusionCullingDefault = true;

		[Token(Token = "0x4000EA6")]
		public const bool ConfigGeometryOverrideLayerDefault = true;

		[Token(Token = "0x4000EA7")]
		public const int ConfigGeometryLayerIDDefault = 1;

		[Token(Token = "0x4000EA8")]
		public const string ConfigGeometryTagDefault = "Untagged";

		[Token(Token = "0x4000EA9")]
		public const string ConfigFadeOutCameraTagDefault = "MainCamera";

		[Token(Token = "0x4000EAA")]
		public const RenderQueue ConfigGeometryRenderQueueDefault = RenderQueue.Transparent;

		[Token(Token = "0x4000EAB")]
		public const RenderPipeline ConfigGeometryRenderPipelineDefault = RenderPipeline.BuiltIn;

		[Token(Token = "0x4000EAC")]
		public const RenderingMode ConfigGeometryRenderingModeDefault = RenderingMode.SinglePass;

		[Token(Token = "0x4000EAD")]
		public const int ConfigNoise3DSizeDefault = 64;

		[Token(Token = "0x4000EAE")]
		public const int ConfigSharedMeshSides = 24;

		[Token(Token = "0x4000EAF")]
		public const int ConfigSharedMeshSegments = 5;

		[Token(Token = "0x4000EB0")]
		public const float ConfigDitheringFactor = 0f;

		[Token(Token = "0x1700029C")]
		public static HideFlags ProceduralObjectsHideFlags
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x2375E18", Offset = "0x2375E18", VA = "0x2375E18")]
			get
			{
				return default(HideFlags);
			}
		}
	}
	[Token(Token = "0x2000238")]
	public static class DummyMaterial
	{
	}
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7678", Offset = "0x16E7678")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E7678", Offset = "0x16E7678")]
	public abstract class DynamicOcclusionAbstractBase : MonoBehaviour
	{
		[Token(Token = "0x2000566")]
		protected enum ProcessOcclusionSource
		{
			[Token(Token = "0x4001EE9")]
			RenderLoop,
			[Token(Token = "0x4001EEA")]
			OnEnable,
			[Token(Token = "0x4001EEB")]
			EditorUpdate,
			[Token(Token = "0x4001EEC")]
			User
		}

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DynamicOcclusionUpdateRate updateRate;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F1060", Offset = "0x16F1060")]
		public int waitXFrames;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _INTERNAL_ApplyRandomFrameOffset;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TransformUtils.Packed m_TransformPacked;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_LastFrameRendered;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VolumetricLightBeam m_Master;

		[Token(Token = "0x1700029D")]
		public int _INTERNAL_LastFrameRendered
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0x237A514", Offset = "0x237A514", VA = "0x237A514")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400000D")]
		public event Action onOcclusionProcessed
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x237A270", Offset = "0x237A270", VA = "0x237A270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170230C", Offset = "0x170230C")]
			add
			{
			}
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x237A314", Offset = "0x237A314", VA = "0x237A314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170231C", Offset = "0x170231C")]
			remove
			{
			}
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x237A080", Offset = "0x237A080", VA = "0x237A080")]
		public void ProcessOcclusionManually()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x237A088", Offset = "0x237A088", VA = "0x237A088")]
		protected void ProcessOcclusion(ProcessOcclusionSource source)
		{
		}

		[Token(Token = "0x6001124")]
		protected abstract string GetShaderKeyword();

		[Token(Token = "0x6001125")]
		protected abstract MaterialManager.DynamicOcclusion GetDynamicOcclusionMode();

		[Token(Token = "0x6001126")]
		protected abstract bool OnProcessOcclusion(ProcessOcclusionSource source);

		[Token(Token = "0x6001127")]
		protected abstract void OnModifyMaterialCallback(MaterialModifier.Interface owner);

		[Token(Token = "0x6001128")]
		protected abstract void OnEnablePostValidate();

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x237A51C", Offset = "0x237A51C", VA = "0x237A51C", Slot = "9")]
		protected virtual void OnValidateProperties()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x237A598", Offset = "0x237A598", VA = "0x237A598", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x237A61C", Offset = "0x237A61C", VA = "0x237A61C", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x237A674", Offset = "0x237A674", VA = "0x237A674", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x237A970", Offset = "0x237A970", VA = "0x237A970", Slot = "13")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x237AAB0", Offset = "0x237AAB0", VA = "0x237AAB0")]
		private void OnWillCameraRender(Camera cam)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x237A638", Offset = "0x237A638", VA = "0x237A638")]
		private void DisableOcclusion()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x237ADF0", Offset = "0x237ADF0", VA = "0x237ADF0")]
		protected DynamicOcclusionAbstractBase()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x237AE60", Offset = "0x237AE60", VA = "0x237AE60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170232C", Offset = "0x170232C")]
		private void <OnEnable>b__22_0()
		{
		}
	}
	[Token(Token = "0x200023A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7710", Offset = "0x16E7710")]
	public class DynamicOcclusionDepthBuffer : DynamicOcclusionAbstractBase
	{
		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask layerMask;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool useOcclusionCulling;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int depthMapResolution;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float fadeDistanceToSurface;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera m_DepthCamera;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_NeedToUpdateOcclusionNextFrame;

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x237AE68", Offset = "0x237AE68", VA = "0x237AE68", Slot = "4")]
		protected override string GetShaderKeyword()
		{
			return null;
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x237AEB0", Offset = "0x237AEB0", VA = "0x237AEB0", Slot = "5")]
		protected override MaterialManager.DynamicOcclusion GetDynamicOcclusionMode()
		{
			return default(MaterialManager.DynamicOcclusion);
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x237AEB8", Offset = "0x237AEB8", VA = "0x237AEB8")]
		private void ProcessOcclusionInternal()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x237B128", Offset = "0x237B128", VA = "0x237B128", Slot = "6")]
		protected override bool OnProcessOcclusion(ProcessOcclusionSource source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x237B16C", Offset = "0x237B16C", VA = "0x237B16C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x237AEE8", Offset = "0x237AEE8", VA = "0x237AEE8")]
		private void UpdateDepthCameraPropertiesAccordingToBeam()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x237B370", Offset = "0x237B370", VA = "0x237B370")]
		public bool HasLayerMaskIssues()
		{
			return default(bool);
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x237B42C", Offset = "0x237B42C", VA = "0x237B42C", Slot = "9")]
		protected override void OnValidateProperties()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x237B4CC", Offset = "0x237B4CC", VA = "0x237B4CC")]
		private void InstantiateOrActivateDepthCamera()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x237B790", Offset = "0x237B790", VA = "0x237B790", Slot = "8")]
		protected override void OnEnablePostValidate()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x237B794", Offset = "0x237B794", VA = "0x237B794", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x237B83C", Offset = "0x237B83C", VA = "0x237B83C", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x237B840", Offset = "0x237B840", VA = "0x237B840", Slot = "11")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x237B864", Offset = "0x237B864", VA = "0x237B864")]
		private void DestroyDepthCamera()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x237B9E8", Offset = "0x237B9E8", VA = "0x237B9E8", Slot = "7")]
		protected override void OnModifyMaterialCallback(MaterialModifier.Interface owner)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x237BB78", Offset = "0x237BB78", VA = "0x237BB78")]
		public DynamicOcclusionDepthBuffer()
		{
		}
	}
	[Token(Token = "0x200023B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E775C", Offset = "0x16E775C")]
	public class DynamicOcclusionRaycasting : DynamicOcclusionAbstractBase
	{
		[Token(Token = "0x2000567")]
		public class HitResult
		{
			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Vector3 point;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public UnityEngine.Vector3 normal;

			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float distance;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Collider2D collider2D;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Collider collider3D;

			[Token(Token = "0x170004D7")]
			public bool hasCollider
			{
				[Token(Token = "0x60021DB")]
				[Address(RVA = "0x237CF7C", Offset = "0x237CF7C", VA = "0x237CF7C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004D8")]
			public string name
			{
				[Token(Token = "0x60021DC")]
				[Address(RVA = "0x237DA64", Offset = "0x237DA64", VA = "0x237DA64")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D9")]
			public Bounds bounds
			{
				[Token(Token = "0x60021DD")]
				[Address(RVA = "0x237DB40", Offset = "0x237DB40", VA = "0x237DB40")]
				get
				{
					return default(Bounds);
				}
			}

			[Token(Token = "0x60021D8")]
			[Address(RVA = "0x237C94C", Offset = "0x237C94C", VA = "0x237C94C")]
			public HitResult(RaycastHit hit3D)
			{
			}

			[Token(Token = "0x60021D9")]
			[Address(RVA = "0x237CA80", Offset = "0x237CA80", VA = "0x237CA80")]
			public HitResult(RaycastHit2D hit2D)
			{
			}

			[Token(Token = "0x60021DA")]
			[Address(RVA = "0x237C9D4", Offset = "0x237C9D4", VA = "0x237C9D4")]
			public HitResult()
			{
			}
		}

		[Token(Token = "0x2000568")]
		private enum Direction
		{
			[Token(Token = "0x4001EF3")]
			Up = 0,
			[Token(Token = "0x4001EF4")]
			Down = 1,
			[Token(Token = "0x4001EF5")]
			Left = 2,
			[Token(Token = "0x4001EF6")]
			Right = 3,
			[Token(Token = "0x4001EF7")]
			Max2D = 1,
			[Token(Token = "0x4001EF8")]
			Max3D = 3
		}

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dimensions dimensions;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask layerMask;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool considerTriggers;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float minOccluderArea;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float minSurfaceRatio;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float maxSurfaceDot;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PlaneAlignment planeAlignment;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float planeOffset;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F10A8", Offset = "0x16F10A8")]
		public float fadeDistanceToSurface;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F10E0", Offset = "0x16F10E0")]
		private HitResult <currentHit>k__BackingField;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_RangeMultiplier;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F10F0", Offset = "0x16F10F0")]
		private Plane <planeEquationWS>k__BackingField;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private uint m_PrevNonSubHitDirectionId;

		[Token(Token = "0x1700029E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x17081F8", Offset = "0x17081F8")]
		public float fadeDistanceToPlane
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x237BC38", Offset = "0x237BC38", VA = "0x237BC38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x237BC40", Offset = "0x237BC40", VA = "0x237BC40")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public HitResult currentHit
		{
			[Token(Token = "0x6001146")]
			[Address(RVA = "0x237BDB8", Offset = "0x237BDB8", VA = "0x237BDB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170233C", Offset = "0x170233C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x237BDC0", Offset = "0x237BDC0", VA = "0x237BDC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170234C", Offset = "0x170234C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public Plane planeEquationWS
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x237BE18", Offset = "0x237BE18", VA = "0x237BE18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170235C", Offset = "0x170235C")]
			get
			{
				return default(Plane);
			}
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x237BE24", Offset = "0x237BE24", VA = "0x237BE24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170236C", Offset = "0x170236C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		private QueryTriggerInteraction queryTriggerInteraction
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x237C1F8", Offset = "0x237C1F8", VA = "0x237C1F8")]
			get
			{
				return default(QueryTriggerInteraction);
			}
		}

		[Token(Token = "0x170002A2")]
		private float raycastMaxDistance
		{
			[Token(Token = "0x6001152")]
			[Address(RVA = "0x237C20C", Offset = "0x237C20C", VA = "0x237C20C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x237BC48", Offset = "0x237BC48", VA = "0x237BC48")]
		public bool IsColliderHiddenByDynamicOccluder(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x237BDC8", Offset = "0x237BDC8", VA = "0x237BDC8", Slot = "4")]
		protected override string GetShaderKeyword()
		{
			return null;
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x237BE10", Offset = "0x237BE10", VA = "0x237BE10", Slot = "5")]
		protected override MaterialManager.DynamicOcclusion GetDynamicOcclusionMode()
		{
			return default(MaterialManager.DynamicOcclusion);
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x237BE30", Offset = "0x237BE30", VA = "0x237BE30", Slot = "9")]
		protected override void OnValidateProperties()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x237BED0", Offset = "0x237BED0", VA = "0x237BED0", Slot = "8")]
		protected override void OnEnablePostValidate()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x237BEDC", Offset = "0x237BEDC", VA = "0x237BEDC", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x237C01C", Offset = "0x237C01C", VA = "0x237C01C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x237C0FC", Offset = "0x237C0FC", VA = "0x237C0FC")]
		private UnityEngine.Vector3 GetRandomVectorAround(UnityEngine.Vector3 direction, float angleDiff)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x237C248", Offset = "0x237C248", VA = "0x237C248")]
		private HitResult GetBestHit(UnityEngine.Vector3 rayPos, UnityEngine.Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x237C25C", Offset = "0x237C25C", VA = "0x237C25C")]
		private HitResult GetBestHit3D(UnityEngine.Vector3 rayPos, UnityEngine.Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x237C534", Offset = "0x237C534", VA = "0x237C534")]
		private HitResult GetBestHit2D(UnityEngine.Vector3 rayPos, UnityEngine.Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x237CB80", Offset = "0x237CB80", VA = "0x237CB80")]
		private uint GetDirectionCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x237CB98", Offset = "0x237CB98", VA = "0x237CB98")]
		private UnityEngine.Vector3 GetDirection(uint dirInt)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x237CE7C", Offset = "0x237CE7C", VA = "0x237CE7C")]
		private bool IsHitValid(HitResult hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x237D110", Offset = "0x237D110", VA = "0x237D110", Slot = "6")]
		protected override bool OnProcessOcclusion(ProcessOcclusionSource source)
		{
			return default(bool);
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x237BF04", Offset = "0x237BF04", VA = "0x237BF04")]
		private void SetHit(HitResult hit)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x237D668", Offset = "0x237D668", VA = "0x237D668", Slot = "7")]
		protected override void OnModifyMaterialCallback(MaterialModifier.Interface owner)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x237D4D4", Offset = "0x237D4D4", VA = "0x237D4D4")]
		private void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x237D490", Offset = "0x237D490", VA = "0x237D490")]
		private void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x237D98C", Offset = "0x237D98C", VA = "0x237D98C")]
		private void SetPlaneWS(Plane planeWS)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x237D998", Offset = "0x237D998", VA = "0x237D998")]
		public DynamicOcclusionRaycasting()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public enum ColorMode
	{
		[Token(Token = "0x4000ECC")]
		Flat,
		[Token(Token = "0x4000ECD")]
		Gradient
	}
	[Token(Token = "0x200023D")]
	public enum AttenuationEquation
	{
		[Token(Token = "0x4000ECF")]
		Linear,
		[Token(Token = "0x4000ED0")]
		Quadratic,
		[Token(Token = "0x4000ED1")]
		Blend
	}
	[Token(Token = "0x200023E")]
	public enum BlendingMode
	{
		[Token(Token = "0x4000ED3")]
		Additive,
		[Token(Token = "0x4000ED4")]
		SoftAdditive,
		[Token(Token = "0x4000ED5")]
		TraditionalTransparency
	}
	[Token(Token = "0x200023F")]
	public enum NoiseMode
	{
		[Token(Token = "0x4000ED7")]
		Disabled,
		[Token(Token = "0x4000ED8")]
		WorldSpace,
		[Token(Token = "0x4000ED9")]
		LocalSpace
	}
	[Token(Token = "0x2000240")]
	public enum MeshType
	{
		[Token(Token = "0x4000EDB")]
		Shared,
		[Token(Token = "0x4000EDC")]
		Custom
	}
	[Token(Token = "0x2000241")]
	public enum RenderPipeline
	{
		[Token(Token = "0x4000EDE")]
		BuiltIn,
		[Token(Token = "0x4000EDF")]
		URP,
		[Token(Token = "0x4000EE0")]
		HDRP
	}
	[Token(Token = "0x2000242")]
	public enum RenderingMode
	{
		[Token(Token = "0x4000EE2")]
		MultiPass,
		[Token(Token = "0x4000EE3")]
		SinglePass,
		[Token(Token = "0x4000EE4")]
		GPUInstancing,
		[Token(Token = "0x4000EE5")]
		SRPBatcher
	}
	[Token(Token = "0x2000243")]
	public enum RenderQueue
	{
		[Token(Token = "0x4000EE7")]
		Custom = 0,
		[Token(Token = "0x4000EE8")]
		Background = 1000,
		[Token(Token = "0x4000EE9")]
		Geometry = 2000,
		[Token(Token = "0x4000EEA")]
		AlphaTest = 2450,
		[Token(Token = "0x4000EEB")]
		GeometryLast = 2500,
		[Token(Token = "0x4000EEC")]
		Transparent = 3000,
		[Token(Token = "0x4000EED")]
		Overlay = 4000
	}
	[Token(Token = "0x2000244")]
	public enum Dimensions
	{
		[Token(Token = "0x4000EEF")]
		Dim3D,
		[Token(Token = "0x4000EF0")]
		Dim2D
	}
	[Token(Token = "0x2000245")]
	public enum PlaneAlignment
	{
		[Token(Token = "0x4000EF2")]
		Surface,
		[Token(Token = "0x4000EF3")]
		Beam
	}
	[Token(Token = "0x2000246")]
	[Flags]
	public enum DynamicOcclusionUpdateRate
	{
		[Token(Token = "0x4000EF5")]
		Never = 1,
		[Token(Token = "0x4000EF6")]
		OnEnable = 2,
		[Token(Token = "0x4000EF7")]
		OnBeamMove = 4,
		[Token(Token = "0x4000EF8")]
		EveryXFrames = 8,
		[Token(Token = "0x4000EF9")]
		OnBeamMoveAndEveryXFrames = 0xC
	}
	[Token(Token = "0x2000247")]
	public static class GlobalMesh
	{
		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh ms_Mesh;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool ms_DoubleSided;

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x2376FCC", Offset = "0x2376FCC", VA = "0x2376FCC")]
		public static Mesh Get()
		{
			return null;
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x237DC38", Offset = "0x237DC38", VA = "0x237DC38")]
		public static void Destroy()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public sealed class HighlightNullAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001163")]
		[Address(RVA = "0x237DD50", Offset = "0x237DD50", VA = "0x237DD50")]
		public HighlightNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public static class MaterialManager
	{
		[Token(Token = "0x2000569")]
		public enum BlendingMode
		{
			[Token(Token = "0x4001EFA")]
			Additive,
			[Token(Token = "0x4001EFB")]
			SoftAdditive,
			[Token(Token = "0x4001EFC")]
			TraditionalTransparency,
			[Token(Token = "0x4001EFD")]
			Count
		}

		[Token(Token = "0x200056A")]
		public enum Noise3D
		{
			[Token(Token = "0x4001EFF")]
			Off,
			[Token(Token = "0x4001F00")]
			On,
			[Token(Token = "0x4001F01")]
			Count
		}

		[Token(Token = "0x200056B")]
		public enum DepthBlend
		{
			[Token(Token = "0x4001F03")]
			Off,
			[Token(Token = "0x4001F04")]
			On,
			[Token(Token = "0x4001F05")]
			Count
		}

		[Token(Token = "0x200056C")]
		public enum ColorGradient
		{
			[Token(Token = "0x4001F07")]
			Off,
			[Token(Token = "0x4001F08")]
			MatrixLow,
			[Token(Token = "0x4001F09")]
			MatrixHigh,
			[Token(Token = "0x4001F0A")]
			Count
		}

		[Token(Token = "0x200056D")]
		public enum DynamicOcclusion
		{
			[Token(Token = "0x4001F0C")]
			Off,
			[Token(Token = "0x4001F0D")]
			ClippingPlane,
			[Token(Token = "0x4001F0E")]
			DepthTexture,
			[Token(Token = "0x4001F0F")]
			Count
		}

		[Token(Token = "0x200056E")]
		public class StaticProperties
		{
			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BlendingMode blendingMode;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Noise3D noise3D;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DepthBlend depthBlend;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ColorGradient colorGradient;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DynamicOcclusion dynamicOcclusion;

			[Token(Token = "0x170004DA")]
			public int materialID
			{
				[Token(Token = "0x60021DE")]
				[Address(RVA = "0x237DEE0", Offset = "0x237DEE0", VA = "0x237DEE0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60021DF")]
			[Address(RVA = "0x2377E10", Offset = "0x2377E10", VA = "0x2377E10")]
			public void ApplyToMaterial(Material mat)
			{
			}

			[Token(Token = "0x60021E0")]
			[Address(RVA = "0x2377DF0", Offset = "0x2377DF0", VA = "0x2377DF0")]
			public StaticProperties()
			{
			}
		}

		[Token(Token = "0x200056F")]
		private class MaterialsGroup
		{
			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material[] materials;

			[Token(Token = "0x60021E1")]
			[Address(RVA = "0x237DE4C", Offset = "0x237DE4C", VA = "0x237DE4C")]
			public MaterialsGroup()
			{
			}
		}

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly BlendMode[] BlendingMode_SrcFactor;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly BlendMode[] BlendingMode_DstFactor;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly bool[] BlendingMode_AlphaAsBlack;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int kStaticPropertiesCount;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Hashtable ms_MaterialsGroup;

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x2375E8C", Offset = "0x2375E8C", VA = "0x2375E8C")]
		public static Material NewMaterialTransient(bool gpuInstanced)
		{
			return null;
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x237DD58", Offset = "0x237DD58", VA = "0x237DD58")]
		public static Material NewMaterialPersistent(Shader shader, bool gpuInstanced)
		{
			return null;
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x2378050", Offset = "0x2378050", VA = "0x2378050")]
		public static Material GetInstancedMaterial(uint groupID, StaticProperties staticProps)
		{
			return null;
		}
	}
	[Token(Token = "0x200024A")]
	public static class MeshGenerator
	{
		[Token(Token = "0x4000F02")]
		private const float kMinTruncatedRadius = 0.001f;

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x237E094", Offset = "0x237E094", VA = "0x237E094")]
		private static float GetAngleOffset(int numSides)
		{
			return default(float);
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x237E0AC", Offset = "0x237E0AC", VA = "0x237E0AC")]
		public static Mesh GenerateConeZ_RadiusAndAngle(float lengthZ, float radiusStart, float coneAngle, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x237E178", Offset = "0x237E178", VA = "0x237E178")]
		public static Mesh GenerateConeZ_Angle(float lengthZ, float coneAngle, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x23765F0", Offset = "0x23765F0", VA = "0x23765F0")]
		public static Mesh GenerateConeZ_Radius(float lengthZ, float radiusStart, float radiusEnd, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x237E18C", Offset = "0x237E18C", VA = "0x237E18C")]
		public static int GetVertexCount(int numSides, int numSegments, bool geomCap, bool doubleSided)
		{
			return default(int);
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x237E1A8", Offset = "0x237E1A8", VA = "0x237E1A8")]
		public static int GetIndicesCount(int numSides, int numSegments, bool geomCap, bool doubleSided)
		{
			return default(int);
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x237E1D0", Offset = "0x237E1D0", VA = "0x237E1D0")]
		public static int GetSharedMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x237E26C", Offset = "0x237E26C", VA = "0x237E26C")]
		public static int GetSharedMeshIndicesCount()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200024B")]
	public static class Noise3D
	{
		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool ms_IsSupportedChecked;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_IsSupported;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture3D ms_NoiseTexture;

		[Token(Token = "0x4000F06")]
		private const HideFlags kHideFlags = HideFlags.HideAndDontSave;

		[Token(Token = "0x4000F07")]
		private const int kMinShaderLevel = 35;

		[Token(Token = "0x170002A3")]
		public static bool isSupported
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0x2377B8C", Offset = "0x2377B8C", VA = "0x2377B8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A4")]
		public static bool isProperlyLoaded
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0x237E3AC", Offset = "0x237E3AC", VA = "0x237E3AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A5")]
		public static string isNotSupportedString
		{
			[Token(Token = "0x6001172")]
			[Address(RVA = "0x237E30C", Offset = "0x237E30C", VA = "0x237E30C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x237E444", Offset = "0x237E444", VA = "0x237E444")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x170237C", Offset = "0x170237C")]
		private static void OnStartUp()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x2378AD8", Offset = "0x2378AD8", VA = "0x2378AD8")]
		public static void LoadIfNeeded()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x237E4A0", Offset = "0x237E4A0", VA = "0x237E4A0")]
		private static Texture3D LoadTexture3D(TextAsset textData, int size)
		{
			return null;
		}
	}
	[Token(Token = "0x200024C")]
	public class PolygonHelper : MonoBehaviour
	{
		[Token(Token = "0x2000570")]
		public struct Plane2D
		{
			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 normal;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float distance;

			[Token(Token = "0x60021E2")]
			[Address(RVA = "0x237E7FC", Offset = "0x237E7FC", VA = "0x237E7FC")]
			public float Distance(Vector2 point)
			{
				return default(float);
			}

			[Token(Token = "0x60021E3")]
			[Address(RVA = "0x237E898", Offset = "0x237E898", VA = "0x237E898")]
			public Vector2 ClosestPoint(Vector2 pt)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60021E4")]
			[Address(RVA = "0x237E958", Offset = "0x237E958", VA = "0x237E958")]
			public Vector2 Intersect(Vector2 p1, Vector2 p2)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60021E5")]
			[Address(RVA = "0x237EB8C", Offset = "0x237EB8C", VA = "0x237EB8C")]
			public bool GetSide(Vector2 point)
			{
				return default(bool);
			}

			[Token(Token = "0x60021E6")]
			[Address(RVA = "0x237EBA8", Offset = "0x237EBA8", VA = "0x237EBA8")]
			public static Plane2D FromPoints(UnityEngine.Vector3 p1, UnityEngine.Vector3 p2)
			{
				return default(Plane2D);
			}

			[Token(Token = "0x60021E7")]
			[Address(RVA = "0x237ECA8", Offset = "0x237ECA8", VA = "0x237ECA8")]
			public static Plane2D FromNormalAndPoint(UnityEngine.Vector3 normalizedNormal, UnityEngine.Vector3 p1)
			{
				return default(Plane2D);
			}

			[Token(Token = "0x60021E8")]
			[Address(RVA = "0x237ED50", Offset = "0x237ED50", VA = "0x237ED50")]
			public void Flip()
			{
			}

			[Token(Token = "0x60021E9")]
			[Address(RVA = "0x237EDDC", Offset = "0x237EDDC", VA = "0x237EDDC")]
			public Vector2[] CutConvex(Vector2[] poly)
			{
				return null;
			}

			[Token(Token = "0x60021EA")]
			[Address(RVA = "0x237EFC4", Offset = "0x237EFC4", VA = "0x237EFC4", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x237E7F4", Offset = "0x237E7F4", VA = "0x237E7F4")]
		public PolygonHelper()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public static class ShaderProperties
	{
		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int FadeOutFactor;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int ClippingPlaneWS;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int ClippingPlaneProps;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int ConeSlopeCosSin;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int ConeRadius;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int ConeApexOffsetZ;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int ColorFlat;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int AlphaInside;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int AlphaOutside;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int AttenuationLerpLinearQuad;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int DistanceFadeStart;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly int DistanceFadeEnd;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly int DistanceCamClipping;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static readonly int FresnelPow;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly int GlareBehind;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static readonly int GlareFrontal;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly int DrawCap;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static readonly int DepthBlendDistance;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly int NoiseLocal;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static readonly int NoiseParam;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly int CameraParams;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static readonly int CameraBufferSizeSRP;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly int ColorGradientMatrix;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static readonly int LocalToWorldMatrix;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly int WorldToLocalMatrix;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static readonly int BlendSrcFactor;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly int BlendDstFactor;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static readonly int DynamicOcclusionDepthTexture;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly int DynamicOcclusionDepthProps;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public static readonly int GlobalNoiseTex3D;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly int GlobalNoiseParam;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public static readonly int GlobalDitheringFactor;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly int GlobalDitheringNoiseTex;

		[Token(Token = "0x4000F29")]
		public const string KeywordSRP = "VLB_SRP_API";
	}
	[Token(Token = "0x200024E")]
	public static class TransformUtils
	{
		[Token(Token = "0x2000571")]
		public class Packed
		{
			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Vector3 position;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion rotation;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public UnityEngine.Vector3 lossyScale;

			[Token(Token = "0x60021EB")]
			[Address(RVA = "0x237F4E8", Offset = "0x237F4E8", VA = "0x237F4E8")]
			public Packed()
			{
			}
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x237A46C", Offset = "0x237A46C", VA = "0x237A46C")]
		public static Packed GetWorldPacked(this Transform self)
		{
			return null;
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x237AC2C", Offset = "0x237AC2C", VA = "0x237AC2C")]
		public static bool IsSame(this Transform self, Packed packed)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200024F")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E77C8", Offset = "0x16E77C8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E77C8", Offset = "0x16E77C8")]
	public class TriggerZone : MonoBehaviour
	{
		[Token(Token = "0x2000572")]
		private enum TriggerZoneUpdateRate
		{
			[Token(Token = "0x4001F1C")]
			OnEnable,
			[Token(Token = "0x4001F1D")]
			OnOcclusionChange
		}

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool setIsTrigger;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rangeMultiplier;

		[Token(Token = "0x4000F2C")]
		private const int kMeshColliderNumSides = 8;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VolumetricLightBeam m_Beam;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DynamicOcclusionRaycasting m_DynamicOcclusionRaycasting;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PolygonCollider2D m_PolygonCollider2D;

		[Token(Token = "0x170002A6")]
		private TriggerZoneUpdateRate updateRate
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x237F4F0", Offset = "0x237F4F0", VA = "0x237F4F0")]
			get
			{
				return default(TriggerZoneUpdateRate);
			}
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x237F584", Offset = "0x237F584", VA = "0x237F584")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x237FD44", Offset = "0x237FD44", VA = "0x237FD44")]
		private void OnOcclusionProcessed()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x237F6D4", Offset = "0x237F6D4", VA = "0x237F6D4")]
		private void ComputeZone()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x237FE4C", Offset = "0x237FE4C", VA = "0x237FE4C")]
		public TriggerZone()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public static class Utils
	{
		[Token(Token = "0x2000573")]
		public enum FloatPackingPrecision
		{
			[Token(Token = "0x4001F1F")]
			High = 64,
			[Token(Token = "0x4001F20")]
			Low = 8,
			[Token(Token = "0x4001F21")]
			Undef = 0
		}

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FloatPackingPrecision ms_FloatPackingPrecision;

		[Token(Token = "0x4000F31")]
		private const int kFloatPackingHighMinShaderLevel = 35;

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x237FE64", Offset = "0x237FE64", VA = "0x237FE64")]
		public static float ComputeConeRadiusEnd(float fallOffEnd, float spotAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6001181")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x23761AC", Offset = "0x23761AC", VA = "0x23761AC")]
		public static string GetPath(Transform current)
		{
			return null;
		}

		[Token(Token = "0x6001183")]
		public static T NewWithComponent<T>(string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001184")]
		public static T GetOrAddComponent<T>(this GameObject self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001185")]
		public static T GetOrAddComponent<T>(this MonoBehaviour self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x237FEEC", Offset = "0x237FEEC", VA = "0x237FEEC")]
		public static bool HasFlag(this Enum mask, Enum flags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x237FFD0", Offset = "0x237FFD0", VA = "0x237FFD0")]
		public static Vector2 xy(this UnityEngine.Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x237FFFC", Offset = "0x237FFFC", VA = "0x237FFFC")]
		public static Vector2 xz(this UnityEngine.Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x238002C", Offset = "0x238002C", VA = "0x238002C")]
		public static Vector2 yz(this UnityEngine.Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x2380060", Offset = "0x2380060", VA = "0x2380060")]
		public static Vector2 yx(this UnityEngine.Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x2380098", Offset = "0x2380098", VA = "0x2380098")]
		public static Vector2 zx(this UnityEngine.Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x23800CC", Offset = "0x23800CC", VA = "0x23800CC")]
		public static Vector2 zy(this UnityEngine.Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x23800FC", Offset = "0x23800FC", VA = "0x23800FC")]
		public static float GetVolumeCubic(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x237C860", Offset = "0x237C860", VA = "0x237C860")]
		public static float GetMaxArea2D(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x2380150", Offset = "0x2380150", VA = "0x2380150")]
		public static Color Opaque(this Color self)
		{
			return default(Color);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x2380184", Offset = "0x2380184", VA = "0x2380184")]
		public static void GizmosDrawPlane(UnityEngine.Vector3 normal, UnityEngine.Vector3 position, Color color, float size = 1f)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x237D86C", Offset = "0x237D86C", VA = "0x237D86C")]
		public static Plane TranslateCustom(this Plane plane, UnityEngine.Vector3 translation)
		{
			return default(Plane);
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x237FD48", Offset = "0x237FD48", VA = "0x237FD48")]
		public static UnityEngine.Vector3 ClosestPointOnPlaneCustom(this Plane plane, UnityEngine.Vector3 point)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x237EB10", Offset = "0x237EB10", VA = "0x237EB10")]
		public static bool IsAlmostZero(float f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x237BD6C", Offset = "0x237BD6C", VA = "0x237BD6C")]
		public static bool IsValid(this Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x2378844", Offset = "0x2378844", VA = "0x2378844")]
		public static void SetKeywordEnabled(this Material mat, string name, bool enabled)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x2380598", Offset = "0x2380598", VA = "0x2380598")]
		public static void SetShaderKeywordEnabled(string name, bool enabled)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x2378960", Offset = "0x2378960", VA = "0x2378960")]
		public static Matrix4x4 SampleInMatrix(this Gradient self, int floatPackingPrecision)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x23806A8", Offset = "0x23806A8", VA = "0x23806A8")]
		public static Color[] SampleInArray(this Gradient self, int samplesCount)
		{
			return null;
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x23807B0", Offset = "0x23807B0", VA = "0x23807B0")]
		private static Vector4 Vector4_Floor(Vector4 vec)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x23805AC", Offset = "0x23805AC", VA = "0x23805AC")]
		public static float PackToFloat(this Color color, int floatPackingPrecision)
		{
			return default(float);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x2377D20", Offset = "0x2377D20", VA = "0x2377D20")]
		public static FloatPackingPrecision GetFloatPackingPrecision()
		{
			return default(FloatPackingPrecision);
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x238085C", Offset = "0x238085C", VA = "0x238085C")]
		public static void MarkCurrentSceneDirty()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x2380860", Offset = "0x2380860", VA = "0x2380860")]
		public static void MarkObjectDirty(UnityEngine.Object obj)
		{
		}
	}
	[Token(Token = "0x2000251")]
	public static class Version
	{
		[Token(Token = "0x4000F32")]
		public const int Current = 1860;
	}
	[Token(Token = "0x2000252")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E7870", Offset = "0x16E7870")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7870", Offset = "0x16E7870")]
	public class VolumetricDustParticles : MonoBehaviour
	{
		[Token(Token = "0x2000574")]
		public enum Direction
		{
			[Token(Token = "0x4001F23")]
			Beam,
			[Token(Token = "0x4001F24")]
			Random
		}

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1100", Offset = "0x16F1100")]
		public float alpha;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1118", Offset = "0x16F1118")]
		public float size;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Direction direction;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float density;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1138", Offset = "0x16F1138")]
		public float spawnMinDistance;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1150", Offset = "0x16F1150")]
		public float spawnMaxDistance;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool cullingEnabled;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float cullingMaxDistance;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F1168", Offset = "0x16F1168")]
		private bool <isCulled>k__BackingField;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isFeatureSupported;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem m_Particles;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystemRenderer m_Renderer;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_NoMainCameraLogged;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera ms_MainCamera;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x170002A7")]
		public bool isCulled
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0x2380868", Offset = "0x2380868", VA = "0x2380868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17024DC", Offset = "0x17024DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x2380870", Offset = "0x2380870", VA = "0x2380870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17024EC", Offset = "0x17024EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public bool particlesAreInstantiated
		{
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x238087C", Offset = "0x238087C", VA = "0x238087C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A9")]
		public int particlesCurrentCount
		{
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x23808E8", Offset = "0x23808E8", VA = "0x23808E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002AA")]
		public int particlesMaxCount
		{
			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x238097C", Offset = "0x238097C", VA = "0x238097C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002AB")]
		public Camera mainCamera
		{
			[Token(Token = "0x60011A4")]
			[Address(RVA = "0x2380A28", Offset = "0x2380A28", VA = "0x2380A28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x2380C8C", Offset = "0x2380C8C", VA = "0x2380C8C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x2380D00", Offset = "0x2380D00", VA = "0x2380D00")]
		private void InstantiateParticleSystem()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x2380FCC", Offset = "0x2380FCC", VA = "0x2380FCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x2380F10", Offset = "0x2380F10", VA = "0x2380F10")]
		private void SetActiveAndPlay()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x23816A4", Offset = "0x23816A4", VA = "0x23816A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x2381744", Offset = "0x2381744", VA = "0x2381744")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x238180C", Offset = "0x238180C", VA = "0x238180C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x2380FD0", Offset = "0x2380FD0", VA = "0x2380FD0")]
		private void SetParticleProperties()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x2381840", Offset = "0x2381840", VA = "0x2381840")]
		private void UpdateCulling()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x2381C18", Offset = "0x2381C18", VA = "0x2381C18")]
		public VolumetricDustParticles()
		{
		}
	}
	[Token(Token = "0x2000253")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[SelectionBase]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7918", Offset = "0x16E7918")]
	public class VolumetricLightBeam : MonoBehaviour
	{
		[Token(Token = "0x2000575")]
		public delegate void OnWillCameraRenderCB(Camera cam);

		[Token(Token = "0x2000576")]
		public delegate void OnBeamGeometryInitialized();

		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9F04", Offset = "0x16E9F04")]
		private sealed class <CoPlaytimeUpdate>d__162 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VolumetricLightBeam <>4__this;

			[Token(Token = "0x170004DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021F7")]
				[Address(RVA = "0x2383944", Offset = "0x2383944", VA = "0x2383944", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021F9")]
				[Address(RVA = "0x23839AC", Offset = "0x23839AC", VA = "0x23839AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021F4")]
			[Address(RVA = "0x23833B0", Offset = "0x23833B0", VA = "0x23833B0")]
			[DebuggerHidden]
			public <CoPlaytimeUpdate>d__162(int <>1__state)
			{
			}

			[Token(Token = "0x60021F5")]
			[Address(RVA = "0x23838AC", Offset = "0x23838AC", VA = "0x23838AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021F6")]
			[Address(RVA = "0x23838B0", Offset = "0x23838B0", VA = "0x23838B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021F8")]
			[Address(RVA = "0x238394C", Offset = "0x238394C", VA = "0x238394C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool colorFromLight;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ColorMode colorMode;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x16F1178", Offset = "0x16F1178")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F1178", Offset = "0x16F1178")]
		public Color color;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient colorGradient;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool intensityFromLight;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool intensityModeAdvanced;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F11CC", Offset = "0x16F11CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F11CC", Offset = "0x16F11CC")]
		public float intensityInside;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F1220", Offset = "0x16F1220")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F1220", Offset = "0x16F1220")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1220", Offset = "0x16F1220")]
		public float intensityOutside;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public BlendingMode blendingMode;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F1298", Offset = "0x16F1298")]
		public bool spotAngleFromLight;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F12D0", Offset = "0x16F12D0")]
		public float spotAngle;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F12F0", Offset = "0x16F12F0")]
		public float coneRadiusStart;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public MeshType geomMeshType;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F1328", Offset = "0x16F1328")]
		public int geomCustomSides;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int geomCustomSegments;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool geomCap;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F1360", Offset = "0x16F1360")]
		public bool fallOffEndFromLight;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public AttenuationEquation attenuationEquation;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1398", Offset = "0x16F1398")]
		public float attenuationCustomBlending;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F13B0", Offset = "0x16F13B0")]
		public float fallOffStart;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F13E8", Offset = "0x16F13E8")]
		public float fallOffEnd;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float depthBlendDistance;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float cameraClippingDistance;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1420", Offset = "0x16F1420")]
		public float glareFrontal;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1438", Offset = "0x16F1438")]
		public float glareBehind;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F1450", Offset = "0x16F1450")]
		public float fresnelPow;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public NoiseMode noiseMode;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F1488", Offset = "0x16F1488")]
		[SerializeField]
		private bool _DEPRECATED_NoiseEnabled;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F14D4", Offset = "0x16F14D4")]
		public float noiseIntensity;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool noiseScaleUseGlobal;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F14EC", Offset = "0x16F14EC")]
		public float noiseScaleLocal;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool noiseVelocityUseGlobal;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEngine.Vector3 noiseVelocityLocal;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Dimensions dimensions;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F1508", Offset = "0x16F1508")]
		private MaterialManager.DynamicOcclusion <_INTERNAL_DynamicOcclusionMode>k__BackingField;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool m_IsDynamicOcclusionEnabled;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private OnBeamGeometryInitialized m_OnBeamGeometryInitialized;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F1538", Offset = "0x16F1538")]
		[SerializeField]
		private bool _TrackChangesDuringPlaytime;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private int _SortingLayerID;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private int _SortingOrder;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F15A4", Offset = "0x16F15A4")]
		[SerializeField]
		private float _FadeOutBegin;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F15F0", Offset = "0x16F15F0")]
		[SerializeField]
		private float _FadeOutEnd;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F163C", Offset = "0x16F163C")]
		private uint <_INTERNAL_InstancedMaterialGroupID>k__BackingField;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private BeamGeometry m_BeamGeom;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Coroutine m_CoPlaytimeUpdate;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Light _CachedLight;

		[Token(Token = "0x170002AC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1708230", Offset = "0x1708230")]
		public float alphaInside
		{
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x2381CC8", Offset = "0x2381CC8", VA = "0x2381CC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x2381CD0", Offset = "0x2381CD0", VA = "0x2381CD0")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1708268", Offset = "0x1708268")]
		public float alphaOutside
		{
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x2381CD8", Offset = "0x2381CD8", VA = "0x2381CD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x2381CE0", Offset = "0x2381CE0", VA = "0x2381CE0")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public float intensityGlobal
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x2381CE8", Offset = "0x2381CE8", VA = "0x2381CE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x2381CF0", Offset = "0x2381CF0", VA = "0x2381CF0")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public float coneAngle
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x2378868", Offset = "0x2378868", VA = "0x2378868")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B0")]
		public float coneRadiusEnd
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x2377964", Offset = "0x2377964", VA = "0x2377964")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B1")]
		public float coneVolume
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x2381CF8", Offset = "0x2381CF8", VA = "0x2381CF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B2")]
		public float coneApexOffsetZ
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x2378908", Offset = "0x2378908", VA = "0x2378908")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B3")]
		public int geomSides
		{
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x2381D4C", Offset = "0x2381D4C", VA = "0x2381D4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x2381DD4", Offset = "0x2381DD4", VA = "0x2381DD4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public int geomSegments
		{
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x2381E54", Offset = "0x2381E54", VA = "0x2381E54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x2381EDC", Offset = "0x2381EDC", VA = "0x2381EDC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x17082A0", Offset = "0x17082A0")]
		public bool fadeEndFromLight
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0x2381F5C", Offset = "0x2381F5C", VA = "0x2381F5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x2381F64", Offset = "0x2381F64", VA = "0x2381F64")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public float attenuationLerpLinearQuad
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x2378AB0", Offset = "0x2378AB0", VA = "0x2378AB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x17082D8", Offset = "0x17082D8")]
		public float fadeStart
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x2381F70", Offset = "0x2381F70", VA = "0x2381F70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x2381F78", Offset = "0x2381F78", VA = "0x2381F78")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1708310", Offset = "0x1708310")]
		public float fadeEnd
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x2381F80", Offset = "0x2381F80", VA = "0x2381F80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x2381F88", Offset = "0x2381F88", VA = "0x2381F88")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public bool isNoiseEnabled
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x2374EB0", Offset = "0x2374EB0", VA = "0x2374EB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1708348", Offset = "0x1708348")]
		public bool noiseEnabled
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x2381F90", Offset = "0x2381F90", VA = "0x2381F90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x2381FA0", Offset = "0x2381FA0", VA = "0x2381FA0")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public float fadeOutBegin
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x2381FBC", Offset = "0x2381FBC", VA = "0x2381FBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x2381FC4", Offset = "0x2381FC4", VA = "0x2381FC4")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public float fadeOutEnd
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x2382020", Offset = "0x2382020", VA = "0x2382020")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x2382028", Offset = "0x2382028", VA = "0x2382028")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public bool isFadeOutEnabled
		{
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x237512C", Offset = "0x237512C", VA = "0x237512C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BE")]
		public int sortingLayerID
		{
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0x2382030", Offset = "0x2382030", VA = "0x2382030")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x2382038", Offset = "0x2382038", VA = "0x2382038")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public string sortingLayerName
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x23820E8", Offset = "0x23820E8", VA = "0x23820E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x23820F4", Offset = "0x23820F4", VA = "0x23820F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public int sortingOrder
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x2382124", Offset = "0x2382124", VA = "0x2382124")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x238212C", Offset = "0x238212C", VA = "0x238212C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public bool trackChangesDuringPlaytime
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x23821DC", Offset = "0x23821DC", VA = "0x23821DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x23821E4", Offset = "0x23821E4", VA = "0x23821E4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public bool isCurrentlyTrackingChanges
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x238225C", Offset = "0x238225C", VA = "0x238225C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C3")]
		public bool hasGeometry
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x2381A7C", Offset = "0x2381A7C", VA = "0x2381A7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C4")]
		public Bounds bounds
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x2381AEC", Offset = "0x2381AEC", VA = "0x2381AEC")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x170002C5")]
		public int blendingModeAsInt
		{
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x238226C", Offset = "0x238226C", VA = "0x238226C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C6")]
		public Quaternion beamInternalLocalRotation
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x23779DC", Offset = "0x23779DC", VA = "0x23779DC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002C7")]
		public UnityEngine.Vector3 beamLocalForward
		{
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x237B228", Offset = "0x237B228", VA = "0x237B228")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170002C8")]
		public UnityEngine.Vector3 beamGlobalForward
		{
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x237D030", Offset = "0x237D030", VA = "0x237D030")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170002C9")]
		public UnityEngine.Vector3 beamGlobalUp
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x237CCBC", Offset = "0x237CCBC", VA = "0x237CCBC")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170002CA")]
		public UnityEngine.Vector3 beamGlobalRight
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x237CD9C", Offset = "0x237CD9C", VA = "0x237CD9C")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170002CB")]
		public UnityEngine.Vector3 lossyScale
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x237B2B4", Offset = "0x237B2B4", VA = "0x237B2B4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170002CC")]
		public MaterialManager.DynamicOcclusion _INTERNAL_DynamicOcclusionMode
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x2382364", Offset = "0x2382364", VA = "0x2382364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17024FC", Offset = "0x17024FC")]
			get
			{
				return default(MaterialManager.DynamicOcclusion);
			}
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x238236C", Offset = "0x238236C", VA = "0x238236C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170250C", Offset = "0x170250C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public MaterialManager.DynamicOcclusion _INTERNAL_EnabledDynamicOcclusionMode
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x2377DF8", Offset = "0x2377DF8", VA = "0x2377DF8")]
			get
			{
				return default(MaterialManager.DynamicOcclusion);
			}
		}

		[Token(Token = "0x170002CE")]
		public uint _INTERNAL_InstancedMaterialGroupID
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x23829F8", Offset = "0x23829F8", VA = "0x23829F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170253C", Offset = "0x170253C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x2382A00", Offset = "0x2382A00", VA = "0x2382A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170254C", Offset = "0x170254C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public string meshStats
		{
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x2382A08", Offset = "0x2382A08", VA = "0x2382A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		public int meshVerticesCount
		{
			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x2382B90", Offset = "0x2382B90", VA = "0x2382B90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D1")]
		public int meshTrianglesCount
		{
			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x2382C6C", Offset = "0x2382C6C", VA = "0x2382C6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D2")]
		private Light lightSpotAttached
		{
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0x2382D60", Offset = "0x2382D60", VA = "0x2382D60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400000E")]
		public event OnWillCameraRenderCB onWillCameraRenderThisBeam
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x237A7D8", Offset = "0x237A7D8", VA = "0x237A7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170251C", Offset = "0x170251C")]
			add
			{
			}
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x237AA0C", Offset = "0x237AA0C", VA = "0x237AA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170252C", Offset = "0x170252C")]
			remove
			{
			}
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x237A3B8", Offset = "0x237A3B8", VA = "0x237A3B8")]
		public void _INTERNAL_SetDynamicOcclusionCallback(string shaderKeyword, MaterialModifier.Callback cb)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x2379344", Offset = "0x2379344", VA = "0x2379344")]
		public void _INTERNAL_OnWillCameraRenderThisBeam(Camera cam)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x237A890", Offset = "0x237A890", VA = "0x237A890")]
		public void RegisterOnBeamGeometryInitializedCallback(OnBeamGeometryInitialized cb)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x2382708", Offset = "0x2382708", VA = "0x2382708")]
		private void CallOnBeamGeometryInitializedCallback()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x2381FCC", Offset = "0x2381FCC", VA = "0x2381FCC")]
		private void SetFadeOutValue(ref float propToChange, float value)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x2382954", Offset = "0x2382954", VA = "0x2382954")]
		private void OnFadeOutStateChanged()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x2382E60", Offset = "0x2382E60", VA = "0x2382E60")]
		public float GetInsideBeamFactor(UnityEngine.Vector3 posWS)
		{
			return default(float);
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x2379354", Offset = "0x2379354", VA = "0x2379354")]
		public float GetInsideBeamFactorFromObjectSpacePos(UnityEngine.Vector3 posOS)
		{
			return default(float);
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x2382EC0", Offset = "0x2382EC0", VA = "0x2382EC0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x170255C", Offset = "0x170255C")]
		public void Generate()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x2382ECC", Offset = "0x2382ECC", VA = "0x2382ECC", Slot = "4")]
		public virtual void GenerateGeometry()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x238315C", Offset = "0x238315C", VA = "0x238315C", Slot = "5")]
		public virtual void UpdateAfterManualPropertyChange()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x23831F0", Offset = "0x23831F0", VA = "0x23831F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x23831FC", Offset = "0x23831FC", VA = "0x23831FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x2383294", Offset = "0x2383294", VA = "0x2383294")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x23821F0", Offset = "0x23821F0", VA = "0x23821F0")]
		private void StartPlaytimeUpdateIfNeeded()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x2383334", Offset = "0x2383334", VA = "0x2383334")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1702594", Offset = "0x1702594")]
		private IEnumerator CoPlaytimeUpdate()
		{
			return null;
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x23833DC", Offset = "0x23833DC", VA = "0x23833DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x23833E0", Offset = "0x23833E0", VA = "0x23833E0")]
		private void DestroyBeam()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x23834A8", Offset = "0x23834A8", VA = "0x23834A8")]
		private void AssignPropertiesFromSpotLight(Light lightSpot)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x23835A8", Offset = "0x23835A8", VA = "0x23835A8")]
		private void ClampProperties()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x238312C", Offset = "0x238312C", VA = "0x238312C")]
		private void ValidateProperties()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x238300C", Offset = "0x238300C", VA = "0x238300C")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x2383794", Offset = "0x2383794", VA = "0x2383794")]
		public VolumetricLightBeam()
		{
		}
	}
}
namespace VLB_Samples
{
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E7984", Offset = "0x16E7984")]
	public class CameraToggleBeamVisibility : MonoBehaviour
	{
		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeyCode m_KeyCode;

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x2383A1C", Offset = "0x2383A1C", VA = "0x2383A1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x2383B10", Offset = "0x2383B10", VA = "0x2383B10")]
		public CameraToggleBeamVisibility()
		{
		}
	}
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E79E8", Offset = "0x16E79E8")]
	public class CheckIfInsideBeam : MonoBehaviour
	{
		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInsideBeam;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider m_Collider;

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x2383B20", Offset = "0x2383B20", VA = "0x2383B20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x2383BFC", Offset = "0x2383BFC", VA = "0x2383BFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x2383CB8", Offset = "0x2383CB8", VA = "0x2383CB8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x2383CC0", Offset = "0x2383CC0", VA = "0x2383CC0")]
		private void OnTriggerStay(Collider trigger)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x2383D84", Offset = "0x2383D84", VA = "0x2383D84")]
		public CheckIfInsideBeam()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class FeaturesNotSupportedMessage : MonoBehaviour
	{
		[Token(Token = "0x6001208")]
		[Address(RVA = "0x2383D8C", Offset = "0x2383D8C", VA = "0x2383D8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x2383E48", Offset = "0x2383E48", VA = "0x2383E48")]
		public FeaturesNotSupportedMessage()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class FreeCameraController : MonoBehaviour
	{
		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedNormal;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedFactorSlow;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speedFactorFast;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speedClimb;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationH;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationV;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_UseMouseView;

		[Token(Token = "0x170002D3")]
		private bool useMouseView
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0x2383E50", Offset = "0x2383E50", VA = "0x2383E50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600120B")]
			[Address(RVA = "0x2383E58", Offset = "0x2383E58", VA = "0x2383E58")]
			set
			{
			}
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x2383E94", Offset = "0x2383E94", VA = "0x2383E94")]
		private void Start()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x2383F2C", Offset = "0x2383F2C", VA = "0x2383F2C")]
		private void Update()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x23845CC", Offset = "0x23845CC", VA = "0x23845CC")]
		public FreeCameraController()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class LightGenerator : MonoBehaviour
	{
		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F165C", Offset = "0x16F165C")]
		[SerializeField]
		private int CountX;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F16A0", Offset = "0x16F16A0")]
		[SerializeField]
		private int CountY;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float OffsetUnits;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float PositionY;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool NoiseEnabled;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool AddLight;

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x23845F0", Offset = "0x23845F0", VA = "0x23845F0")]
		public void Generate()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x2384EAC", Offset = "0x2384EAC", VA = "0x2384EAC")]
		public LightGenerator()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class Rotater : MonoBehaviour
	{
		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F1724", Offset = "0x16F1724")]
		public UnityEngine.Vector3 EulerSpeed;

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x2384EC8", Offset = "0x2384EC8", VA = "0x2384EC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x2385040", Offset = "0x2385040", VA = "0x2385040")]
		public Rotater()
		{
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7A8C", Offset = "0x16E7A8C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7A8C", Offset = "0x16E7A8C")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000578")]
		public enum Mode
		{
			[Token(Token = "0x4001F29")]
			AnimationClips,
			[Token(Token = "0x4001F2A")]
			AnimationStates,
			[Token(Token = "0x4001F2B")]
			PlayableDirector,
			[Token(Token = "0x4001F2C")]
			Realtime
		}

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F175C", Offset = "0x16F175C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F175C", Offset = "0x16F175C")]
		public int frameRate;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F17B4", Offset = "0x16F17B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F17B4", Offset = "0x16F17B4")]
		public float keyReductionError;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F180C", Offset = "0x16F180C")]
		public Mode mode;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1844", Offset = "0x16F1844")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F187C", Offset = "0x16F187C")]
		public string[] animationStates;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F18B4", Offset = "0x16F18B4")]
		public bool loop;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F18EC", Offset = "0x16F18EC")]
		public string saveToFolder;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1924", Offset = "0x16F1924")]
		public string appendName;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F195C", Offset = "0x16F195C")]
		public string saveName;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F1994", Offset = "0x16F1994")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F19A4", Offset = "0x16F19A4")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		public Animator animator;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F1A24", Offset = "0x16F1A24")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x170002D4")]
		public bool isBaking
		{
			[Token(Token = "0x6001217")]
			[Address(RVA = "0x2EA75E8", Offset = "0x2EA75E8", VA = "0x2EA75E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17026D8", Offset = "0x17026D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001218")]
			[Address(RVA = "0x2EA75F0", Offset = "0x2EA75F0", VA = "0x2EA75F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17026E8", Offset = "0x17026E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public float bakingProgress
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0x2EA75FC", Offset = "0x2EA75FC", VA = "0x2EA75FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17026F8", Offset = "0x17026F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x2EA7604", Offset = "0x2EA7604", VA = "0x2EA7604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702708", Offset = "0x1702708")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		protected float clipLength
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0x2EA760C", Offset = "0x2EA760C", VA = "0x2EA760C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702718", Offset = "0x1702718")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001221")]
			[Address(RVA = "0x2EA7614", Offset = "0x2EA7614", VA = "0x2EA7614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702728", Offset = "0x1702728")]
			private set
			{
			}
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x2EA74B8", Offset = "0x2EA74B8", VA = "0x2EA74B8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17025F8", Offset = "0x17025F8")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x2EA7504", Offset = "0x2EA7504", VA = "0x2EA7504")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702630", Offset = "0x1702630")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x2EA7550", Offset = "0x2EA7550", VA = "0x2EA7550")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702668", Offset = "0x1702668")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x2EA759C", Offset = "0x2EA759C", VA = "0x2EA759C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17026A0", Offset = "0x17026A0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600121B")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x600121C")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x600121D")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x600121E")]
		protected abstract void OnSetCurves(ref AnimationClip clip);

		[Token(Token = "0x600121F")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x2EA761C", Offset = "0x2EA761C", VA = "0x2EA761C")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x2EA7620", Offset = "0x2EA7620", VA = "0x2EA7620")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x2EA7624", Offset = "0x2EA7624", VA = "0x2EA7624")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x2EA7628", Offset = "0x2EA7628", VA = "0x2EA7628")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1A34", Offset = "0x16F1A34")]
		public bool markAsLegacy;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1A6C", Offset = "0x16F1A6C")]
		public Transform root;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1AA4", Offset = "0x16F1AA4")]
		public Transform rootNode;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1ADC", Offset = "0x16F1ADC")]
		public Transform[] ignoreList;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1B14", Offset = "0x16F1B14")]
		public Transform[] bakePositionList;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x2CBB5CC", Offset = "0x2CBB5CC", VA = "0x2CBB5CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x2CBB9AC", Offset = "0x2CBB9AC", VA = "0x2CBB9AC", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x2CBB9B4", Offset = "0x2CBB9B4", VA = "0x2CBB9B4", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x2CBBAC4", Offset = "0x2CBBAC4", VA = "0x2CBBAC4", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x2CBBB40", Offset = "0x2CBBB40", VA = "0x2CBBB40", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x2CBBBBC", Offset = "0x2CBBBBC", VA = "0x2CBBBBC", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x2CBB7FC", Offset = "0x2CBB7FC", VA = "0x2CBB7FC")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x2CBB8D4", Offset = "0x2CBB8D4", VA = "0x2CBB8D4")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x2CBBC38", Offset = "0x2CBBC38", VA = "0x2CBBC38")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class TQ
	{
		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Vector3 t;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x2ABF808", Offset = "0x2ABF808", VA = "0x2ABF808")]
		public TQ(UnityEngine.Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class AvatarUtility
	{
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x2EA647C", Offset = "0x2EA647C", VA = "0x2EA647C")]
		public static Quaternion GetPostRotation(Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x2EA669C", Offset = "0x2EA669C", VA = "0x2EA669C")]
		public static TQ GetIKGoalTQ(Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x2EA667C", Offset = "0x2EA667C", VA = "0x2EA667C")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x2EA6D34", Offset = "0x2EA6D34", VA = "0x2EA6D34")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public static class BakerUtilities
	{
		[Token(Token = "0x6001234")]
		[Address(RVA = "0x2EA88A8", Offset = "0x2EA88A8", VA = "0x2EA88A8")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x2EA9DF4", Offset = "0x2EA9DF4", VA = "0x2EA9DF4")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x2EA82BC", Offset = "0x2EA82BC", VA = "0x2EA82BC")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x2EA88F0", Offset = "0x2EA88F0", VA = "0x2EA88F0")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x2EA7DF4", Offset = "0x2EA7DF4", VA = "0x2EA7DF4")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200025F")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x2EA7718", Offset = "0x2EA7718", VA = "0x2EA7718")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x2EA7A10", Offset = "0x2EA7A10", VA = "0x2EA7A10")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x2EA788C", Offset = "0x2EA788C", VA = "0x2EA788C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x2EA7BA8", Offset = "0x2EA7BA8", VA = "0x2EA7BA8")]
		public void SetIKKeyframes(float time, Avatar avatar, float humanScale, UnityEngine.Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x2EA8050", Offset = "0x2EA8050", VA = "0x2EA8050")]
		public void SetKeyframes(float time, UnityEngine.Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x2EA814C", Offset = "0x2EA814C", VA = "0x2EA814C")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x2EA8248", Offset = "0x2EA8248", VA = "0x2EA8248")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x2EA81C0", Offset = "0x2EA81C0", VA = "0x2EA81C0")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x2EA8508", Offset = "0x2EA8508", VA = "0x2EA8508")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x2EA85BC", Offset = "0x2EA85BC", VA = "0x2EA85BC")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000260")]
	public class BakerMuscle
	{
		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x2EA88F4", Offset = "0x2EA88F4", VA = "0x2EA88F4")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x2EA8970", Offset = "0x2EA8970", VA = "0x2EA8970")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x2EA9060", Offset = "0x2EA9060", VA = "0x2EA9060")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x2EA9114", Offset = "0x2EA9114", VA = "0x2EA9114")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x2EA8FF8", Offset = "0x2EA8FF8", VA = "0x2EA8FF8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x2EA91F8", Offset = "0x2EA91F8", VA = "0x2EA91F8")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x2EA9240", Offset = "0x2EA9240", VA = "0x2EA9240")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000261")]
	public class BakerTransform
	{
		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private UnityEngine.Vector3 relativePosition;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x2EA9248", Offset = "0x2EA9248", VA = "0x2EA9248")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x2EA9440", Offset = "0x2EA9440", VA = "0x2EA9440")]
		public void SetRelativeSpace(UnityEngine.Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x2EA9454", Offset = "0x2EA9454", VA = "0x2EA9454")]
		public void SetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x2EA96E4", Offset = "0x2EA96E4", VA = "0x2EA96E4")]
		private void AddRootMotionCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x2EA92F8", Offset = "0x2EA92F8", VA = "0x2EA92F8")]
		public void Reset()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x2EA9930", Offset = "0x2EA9930", VA = "0x2EA9930")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x2EA99A4", Offset = "0x2EA99A4", VA = "0x2EA99A4")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x2EA9BF0", Offset = "0x2EA9BF0", VA = "0x2EA9BF0")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1B4C", Offset = "0x16F1B4C")]
		public bool bakeHandIK;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1B84", Offset = "0x16F1B84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1B84", Offset = "0x16F1B84")]
		public float IKKeyReductionError;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1BDC", Offset = "0x16F1BDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1BDC", Offset = "0x16F1BDC")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private UnityEngine.Vector3 bodyPosition;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x2CBCB84", Offset = "0x2CBCB84", VA = "0x2CBCB84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x2CBD068", Offset = "0x2CBD068", VA = "0x2CBD068", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x2CBD084", Offset = "0x2CBD084", VA = "0x2CBD084", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x2CBD1A4", Offset = "0x2CBD1A4", VA = "0x2CBD1A4", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x2CBD280", Offset = "0x2CBD280", VA = "0x2CBD280", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x2CBD450", Offset = "0x2CBD450", VA = "0x2CBD450", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x2CBD778", Offset = "0x2CBD778", VA = "0x2CBD778")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x2CBD854", Offset = "0x2CBD854", VA = "0x2CBD854")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000579")]
		public enum UpdateMode
		{
			[Token(Token = "0x4001F2E")]
			Update,
			[Token(Token = "0x4001F2F")]
			FixedUpdate,
			[Token(Token = "0x4001F30")]
			LateUpdate,
			[Token(Token = "0x4001F31")]
			FixedLateUpdate
		}

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F1C30", Offset = "0x16F1C30")]
		public bool smoothFollow;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Vector3 offset;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F1C68", Offset = "0x16F1C68")]
		public float rotationSensitivity;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F1CA0", Offset = "0x16F1CA0")]
		public float distance;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F1CD8", Offset = "0x16F1CD8")]
		public LayerMask blockingLayers;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1D10", Offset = "0x16F1D10")]
		public float blockedOffset;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F1D28", Offset = "0x16F1D28")]
		private float <x>k__BackingField;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F1D38", Offset = "0x16F1D38")]
		private float <y>k__BackingField;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F1D48", Offset = "0x16F1D48")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UnityEngine.Vector3 targetDistance;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private UnityEngine.Vector3 position;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rotation;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private UnityEngine.Vector3 smoothPosition;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private UnityEngine.Vector3 lastUp;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x170002D7")]
		public float x
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x2EB14C4", Offset = "0x2EB14C4", VA = "0x2EB14C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702738", Offset = "0x1702738")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x2EB14CC", Offset = "0x2EB14CC", VA = "0x2EB14CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702748", Offset = "0x1702748")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public float y
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x2EB14D4", Offset = "0x2EB14D4", VA = "0x2EB14D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702758", Offset = "0x1702758")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x2EB14DC", Offset = "0x2EB14DC", VA = "0x2EB14DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702768", Offset = "0x1702768")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public float distanceTarget
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x2EB14E4", Offset = "0x2EB14E4", VA = "0x2EB14E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702778", Offset = "0x1702778")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600125F")]
			[Address(RVA = "0x2EB14EC", Offset = "0x2EB14EC", VA = "0x2EB14EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702788", Offset = "0x1702788")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		private float zoomAdd
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0x2EB1FA4", Offset = "0x2EB1FA4", VA = "0x2EB1FA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x2EB14F4", Offset = "0x2EB14F4", VA = "0x2EB14F4")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x2EB1530", Offset = "0x2EB1530", VA = "0x2EB1530")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x2EB1538", Offset = "0x2EB1538", VA = "0x2EB1538", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x2EB1660", Offset = "0x2EB1660", VA = "0x2EB1660", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x2EB16BC", Offset = "0x2EB16BC", VA = "0x2EB16BC", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x2EB1724", Offset = "0x2EB1724", VA = "0x2EB1724", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x2EB1788", Offset = "0x2EB1788", VA = "0x2EB1788")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x2EB1694", Offset = "0x2EB1694", VA = "0x2EB1694")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x2EB1908", Offset = "0x2EB1908", VA = "0x2EB1908")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x2EB1EF4", Offset = "0x2EB1EF4", VA = "0x2EB1EF4")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x2EB2018", Offset = "0x2EB2018", VA = "0x2EB2018")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x2EB2128", Offset = "0x2EB2128", VA = "0x2EB2128")]
		private void Awake()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x2EB2160", Offset = "0x2EB2160", VA = "0x2EB2160")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x2EB2318", Offset = "0x2EB2318", VA = "0x2EB2318")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x2EB23C8", Offset = "0x2EB23C8", VA = "0x2EB23C8")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000265")]
	public enum Axis
	{
		[Token(Token = "0x4000FFB")]
		X,
		[Token(Token = "0x4000FFC")]
		Y,
		[Token(Token = "0x4000FFD")]
		Z
	}
	[Token(Token = "0x2000266")]
	public class AxisTools
	{
		[Token(Token = "0x6001270")]
		[Address(RVA = "0x2EA6D3C", Offset = "0x2EA6D3C", VA = "0x2EA6D3C")]
		public static UnityEngine.Vector3 ToVector3(Axis axis)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x2EA6DF4", Offset = "0x2EA6DF4", VA = "0x2EA6DF4")]
		public static Axis ToAxis(UnityEngine.Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x2EA6EA0", Offset = "0x2EA6EA0", VA = "0x2EA6EA0")]
		public static Axis GetAxisToPoint(Transform t, UnityEngine.Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x2EA7084", Offset = "0x2EA7084", VA = "0x2EA7084")]
		public static Axis GetAxisToDirection(Transform t, UnityEngine.Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x2EA6FBC", Offset = "0x2EA6FBC", VA = "0x2EA6FBC")]
		public static UnityEngine.Vector3 GetAxisVectorToPoint(Transform t, UnityEngine.Vector3 worldPosition)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x2EA71A0", Offset = "0x2EA71A0", VA = "0x2EA71A0")]
		public static UnityEngine.Vector3 GetAxisVectorToDirection(Transform t, UnityEngine.Vector3 direction)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x2EA71E8", Offset = "0x2EA71E8", VA = "0x2EA71E8")]
		public static UnityEngine.Vector3 GetAxisVectorToDirection(Quaternion r, UnityEngine.Vector3 direction)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x2EA74B0", Offset = "0x2EA74B0", VA = "0x2EA74B0")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000267")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x200057A")]
		public class LimbOrientation
		{
			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Vector3 upperBoneForwardAxis;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public UnityEngine.Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEngine.Vector3 lastBoneLeftAxis;

			[Token(Token = "0x60021FA")]
			[Address(RVA = "0x2EAA4D4", Offset = "0x2EAA4D4", VA = "0x2EAA4D4")]
			public LimbOrientation(UnityEngine.Vector3 upperBoneForwardAxis, UnityEngine.Vector3 lowerBoneForwardAxis, UnityEngine.Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x170002DB")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x2EAA25C", Offset = "0x2EAA25C", VA = "0x2EAA25C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0x2EAA54C", Offset = "0x2EAA54C", VA = "0x2EAA54C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x2EAA1DC", Offset = "0x2EAA1DC", VA = "0x2EAA1DC")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x2000268")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x200057B")]
		public enum BoneType
		{
			[Token(Token = "0x4001F36")]
			Unassigned,
			[Token(Token = "0x4001F37")]
			Spine,
			[Token(Token = "0x4001F38")]
			Head,
			[Token(Token = "0x4001F39")]
			Arm,
			[Token(Token = "0x4001F3A")]
			Leg,
			[Token(Token = "0x4001F3B")]
			Tail,
			[Token(Token = "0x4001F3C")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x200057C")]
		public enum BoneSide
		{
			[Token(Token = "0x4001F3E")]
			Center,
			[Token(Token = "0x4001F3F")]
			Left,
			[Token(Token = "0x4001F40")]
			Right
		}

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x2EAA7C4", Offset = "0x2EAA7C4", VA = "0x2EAA7C4")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x2EAAACC", Offset = "0x2EAAACC", VA = "0x2EAAACC")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x2EAAD24", Offset = "0x2EAAD24", VA = "0x2EAAD24")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x2EAADA8", Offset = "0x2EAADA8", VA = "0x2EAADA8")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x2EAAE54", Offset = "0x2EAAE54", VA = "0x2EAAE54")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x2EAA97C", Offset = "0x2EAA97C", VA = "0x2EAA97C")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x2EAAC84", Offset = "0x2EAAC84", VA = "0x2EAAC84")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x2EAB694", Offset = "0x2EAB694", VA = "0x2EAB694")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x2EAB4AC", Offset = "0x2EAB4AC", VA = "0x2EAB4AC")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x2EAB5A0", Offset = "0x2EAB5A0", VA = "0x2EAB5A0")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x2EAB074", Offset = "0x2EAB074", VA = "0x2EAB074")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x2EAB128", Offset = "0x2EAB128", VA = "0x2EAB128")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x2EAB1DC", Offset = "0x2EAB1DC", VA = "0x2EAB1DC")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x2EAB290", Offset = "0x2EAB290", VA = "0x2EAB290")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x2EAB344", Offset = "0x2EAB344", VA = "0x2EAB344")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x2EAB3F8", Offset = "0x2EAB3F8", VA = "0x2EAB3F8")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x2EAB8A8", Offset = "0x2EAB8A8", VA = "0x2EAB8A8")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x2EAAF88", Offset = "0x2EAAF88", VA = "0x2EAAF88")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x2EAB818", Offset = "0x2EAB818", VA = "0x2EAB818")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x2EAB918", Offset = "0x2EAB918", VA = "0x2EAB918")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x2EAB9F0", Offset = "0x2EAB9F0", VA = "0x2EAB9F0")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x2EAB79C", Offset = "0x2EAB79C", VA = "0x2EAB79C")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x2EAB724", Offset = "0x2EAB724", VA = "0x2EAB724")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000269")]
	public class BipedReferences
	{
		[Token(Token = "0x200057D")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x170004DD")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x60021FC")]
				[Address(RVA = "0x2EB14BC", Offset = "0x2EB14BC", VA = "0x2EB14BC")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x60021FB")]
			[Address(RVA = "0x2EB14A8", Offset = "0x2EB14A8", VA = "0x2EB14A8")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x170002DD")]
		public virtual bool isFilled
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0x2EADD88", Offset = "0x2EADD88", VA = "0x2EADD88", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DE")]
		public bool isEmpty
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0x2EAE174", Offset = "0x2EAE174", VA = "0x2EAE174")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x2EAE184", Offset = "0x2EAE184", VA = "0x2EAE184", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x2EAE5B0", Offset = "0x2EAE5B0", VA = "0x2EAE5B0", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x2EAE9E8", Offset = "0x2EAE9E8", VA = "0x2EAE9E8")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x2EAF0F4", Offset = "0x2EAF0F4", VA = "0x2EAF0F4")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x2EAEC64", Offset = "0x2EAEC64", VA = "0x2EAEC64")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x2EAF928", Offset = "0x2EAF928", VA = "0x2EAF928")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x2EAFA28", Offset = "0x2EAFA28", VA = "0x2EAFA28")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x2EAFFDC", Offset = "0x2EAFFDC", VA = "0x2EAFFDC")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x2EAFDCC", Offset = "0x2EAFDCC", VA = "0x2EAFDCC")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x2EAFC44", Offset = "0x2EAFC44", VA = "0x2EAFC44")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x2EAFAC8", Offset = "0x2EAFAC8", VA = "0x2EAFAC8")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x2EAFED0", Offset = "0x2EAFED0", VA = "0x2EAFED0")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x2EB00D8", Offset = "0x2EB00D8", VA = "0x2EB00D8")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x2EB0C3C", Offset = "0x2EB0C3C", VA = "0x2EB0C3C")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x2EB0708", Offset = "0x2EB0708", VA = "0x2EB0708")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x2EB0F84", Offset = "0x2EB0F84", VA = "0x2EB0F84")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x2EB0A54", Offset = "0x2EB0A54", VA = "0x2EB0A54")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x2EB0F8C", Offset = "0x2EB0F8C", VA = "0x2EB0F8C")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x2EB0F94", Offset = "0x2EB0F94", VA = "0x2EB0F94")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x2EB1160", Offset = "0x2EB1160", VA = "0x2EB1160")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x2EB1384", Offset = "0x2EB1384", VA = "0x2EB1384")]
		private static float GetVerticalOffset(UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x2EAEBDC", Offset = "0x2EAEBDC", VA = "0x2EAEBDC")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "MultilineAttribute", RVA = "0x16F1D58", Offset = "0x16F1D58")]
		public string text;

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x2EB23E4", Offset = "0x2EB23E4", VA = "0x2EB23E4")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x2EB23EC", Offset = "0x2EB23EC", VA = "0x2EB23EC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x2EB252C", Offset = "0x2EB252C", VA = "0x2EB252C")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class Hierarchy
	{
		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x2CBBCAC", Offset = "0x2CBBCAC", VA = "0x2CBBCAC")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x2CBBEAC", Offset = "0x2CBBEAC", VA = "0x2CBBEAC")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x2CBBD44", Offset = "0x2CBBD44", VA = "0x2CBBD44")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x2CBBFD0", Offset = "0x2CBBFD0", VA = "0x2CBBFD0")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x2CBC0F4", Offset = "0x2CBC0F4", VA = "0x2CBC0F4")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x2CBC3A4", Offset = "0x2CBC3A4", VA = "0x2CBC3A4")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x2CBC4C0", Offset = "0x2CBC4C0", VA = "0x2CBC4C0")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x2CBC648", Offset = "0x2CBC648", VA = "0x2CBC648")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x2CBC9DC", Offset = "0x2CBC9DC", VA = "0x2CBC9DC")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x2CBC7C8", Offset = "0x2CBC7C8", VA = "0x2CBC7C8")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x2CBCB7C", Offset = "0x2CBCB7C", VA = "0x2CBCB7C")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string color;

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x2ABCB70", Offset = "0x2ABCB70", VA = "0x2ABCB70")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x2ABCC00", Offset = "0x2ABCC00", VA = "0x2ABCC00")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026E")]
	public enum InterpolationMode
	{
		[Token(Token = "0x400102B")]
		None,
		[Token(Token = "0x400102C")]
		InOutCubic,
		[Token(Token = "0x400102D")]
		InOutQuintic,
		[Token(Token = "0x400102E")]
		InOutSine,
		[Token(Token = "0x400102F")]
		InQuintic,
		[Token(Token = "0x4001030")]
		InQuartic,
		[Token(Token = "0x4001031")]
		InCubic,
		[Token(Token = "0x4001032")]
		InQuadratic,
		[Token(Token = "0x4001033")]
		InElastic,
		[Token(Token = "0x4001034")]
		InElasticSmall,
		[Token(Token = "0x4001035")]
		InElasticBig,
		[Token(Token = "0x4001036")]
		InSine,
		[Token(Token = "0x4001037")]
		InBack,
		[Token(Token = "0x4001038")]
		OutQuintic,
		[Token(Token = "0x4001039")]
		OutQuartic,
		[Token(Token = "0x400103A")]
		OutCubic,
		[Token(Token = "0x400103B")]
		OutInCubic,
		[Token(Token = "0x400103C")]
		OutInQuartic,
		[Token(Token = "0x400103D")]
		OutElastic,
		[Token(Token = "0x400103E")]
		OutElasticSmall,
		[Token(Token = "0x400103F")]
		OutElasticBig,
		[Token(Token = "0x4001040")]
		OutSine,
		[Token(Token = "0x4001041")]
		OutBack,
		[Token(Token = "0x4001042")]
		OutBackCubic,
		[Token(Token = "0x4001043")]
		OutBackQuartic,
		[Token(Token = "0x4001044")]
		BackInCubic,
		[Token(Token = "0x4001045")]
		BackInQuartic
	}
	[Token(Token = "0x200026F")]
	public class Interp
	{
		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x2ABCC94", Offset = "0x2ABCC94", VA = "0x2ABCC94")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x2ABD6FC", Offset = "0x2ABD6FC", VA = "0x2ABD6FC")]
		public static UnityEngine.Vector3 V3(UnityEngine.Vector3 v1, UnityEngine.Vector3 v2, float t, InterpolationMode mode)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x2ABD804", Offset = "0x2ABD804", VA = "0x2ABD804")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x2ABD000", Offset = "0x2ABD000", VA = "0x2ABD000")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x2ABD00C", Offset = "0x2ABD00C", VA = "0x2ABD00C")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x2ABD030", Offset = "0x2ABD030", VA = "0x2ABD030")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x2ABD06C", Offset = "0x2ABD06C", VA = "0x2ABD06C")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x2ABD084", Offset = "0x2ABD084", VA = "0x2ABD084")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x2ABD098", Offset = "0x2ABD098", VA = "0x2ABD098")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x2ABD0AC", Offset = "0x2ABD0AC", VA = "0x2ABD0AC")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x2ABD0BC", Offset = "0x2ABD0BC", VA = "0x2ABD0BC")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x2ABD104", Offset = "0x2ABD104", VA = "0x2ABD104")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x2ABD13C", Offset = "0x2ABD13C", VA = "0x2ABD13C")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x2ABD164", Offset = "0x2ABD164", VA = "0x2ABD164")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x2ABD900", Offset = "0x2ABD900", VA = "0x2ABD900")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x2ABD198", Offset = "0x2ABD198", VA = "0x2ABD198")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x2ABD1C0", Offset = "0x2ABD1C0", VA = "0x2ABD1C0")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x2ABD1F0", Offset = "0x2ABD1F0", VA = "0x2ABD1F0")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x2ABD224", Offset = "0x2ABD224", VA = "0x2ABD224")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x2ABD268", Offset = "0x2ABD268", VA = "0x2ABD268")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x2ABD2CC", Offset = "0x2ABD2CC", VA = "0x2ABD2CC")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x2ABD330", Offset = "0x2ABD330", VA = "0x2ABD330")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x2ABD384", Offset = "0x2ABD384", VA = "0x2ABD384")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x2ABD3D8", Offset = "0x2ABD3D8", VA = "0x2ABD3D8")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x2ABD470", Offset = "0x2ABD470", VA = "0x2ABD470")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x2ABD504", Offset = "0x2ABD504", VA = "0x2ABD504")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x2ABD934", Offset = "0x2ABD934", VA = "0x2ABD934")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x2ABD5A8", Offset = "0x2ABD5A8", VA = "0x2ABD5A8")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x2ABD68C", Offset = "0x2ABD68C", VA = "0x2ABD68C")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x2ABD6BC", Offset = "0x2ABD6BC", VA = "0x2ABD6BC")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x2ABDA1C", Offset = "0x2ABDA1C", VA = "0x2ABDA1C")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string color;

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x2ABDA24", Offset = "0x2ABDA24", VA = "0x2ABDA24")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x2ABDAB4", Offset = "0x2ABDAB4", VA = "0x2ABDAB4")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x2000271")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x2ABDB48", Offset = "0x2ABDB48", VA = "0x2ABDB48")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x2ABDBA0", Offset = "0x2ABDBA0", VA = "0x2ABDBA0")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x2ABDC6C", Offset = "0x2ABDC6C", VA = "0x2ABDC6C")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x2ABDBB8", Offset = "0x2ABDBB8", VA = "0x2ABDBB8")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x2ABDC84", Offset = "0x2ABDC84", VA = "0x2ABDC84")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x2ABDD28", Offset = "0x2ABDD28", VA = "0x2ABDD28")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x2ABDD54", Offset = "0x2ABDD54", VA = "0x2ABDD54")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x2ABDDA4", Offset = "0x2ABDDA4", VA = "0x2ABDDA4")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x2ABDE10", Offset = "0x2ABDE10", VA = "0x2ABDE10")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x2ABDF04", Offset = "0x2ABDF04", VA = "0x2ABDF04")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x2ABDFDC", Offset = "0x2ABDFDC", VA = "0x2ABDFDC")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x2ABE03C", Offset = "0x2ABE03C", VA = "0x2ABE03C")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x2000272")]
	public static class QuaTools
	{
		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x2ABE06C", Offset = "0x2ABE06C", VA = "0x2ABE06C")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x2ABE1B8", Offset = "0x2ABE1B8", VA = "0x2ABE1B8")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x2ABE304", Offset = "0x2ABE304", VA = "0x2ABE304")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x2ABE418", Offset = "0x2ABE418", VA = "0x2ABE418")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x2ABE52C", Offset = "0x2ABE52C", VA = "0x2ABE52C")]
		public static Quaternion FromToAroundAxis(UnityEngine.Vector3 fromDirection, UnityEngine.Vector3 toDirection, UnityEngine.Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x2ABE6B8", Offset = "0x2ABE6B8", VA = "0x2ABE6B8")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x2ABE788", Offset = "0x2ABE788", VA = "0x2ABE788")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x2ABE8DC", Offset = "0x2ABE8DC", VA = "0x2ABE8DC")]
		public static UnityEngine.Vector3 GetAxis(UnityEngine.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x2ABEB60", Offset = "0x2ABEB60", VA = "0x2ABEB60")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x2ABED74", Offset = "0x2ABED74", VA = "0x2ABED74")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x2ABEEF4", Offset = "0x2ABEEF4", VA = "0x2ABEEF4")]
		public static Quaternion MatchRotation(Quaternion targetRotation, UnityEngine.Vector3 targetforwardAxis, UnityEngine.Vector3 targetUpAxis, UnityEngine.Vector3 forwardAxis, UnityEngine.Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x2ABF064", Offset = "0x2ABF064", VA = "0x2ABF064")]
		public static UnityEngine.Vector3 ToBiPolar(UnityEngine.Vector3 euler)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x2ABF174", Offset = "0x2ABF174", VA = "0x2ABF174")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000273")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x170002DF")]
		public static T instance
		{
			[Token(Token = "0x60012F5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60012F7")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1D68", Offset = "0x16F1D68")]
		public bool fixTransforms;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x170002E0")]
		private bool animatePhysics
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x2ABF308", Offset = "0x2ABF308", VA = "0x2ABF308")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E1")]
		private bool isAnimated
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x2ABF63C", Offset = "0x2ABF63C", VA = "0x2ABF63C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x2ABF1D0", Offset = "0x2ABF1D0", VA = "0x2ABF1D0")]
		public void Disable()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x2ABF268", Offset = "0x2ABF268", VA = "0x2ABF268", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x2ABF26C", Offset = "0x2ABF26C", VA = "0x2ABF26C", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x2ABF270", Offset = "0x2ABF270", VA = "0x2ABF270", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x2ABF274", Offset = "0x2ABF274", VA = "0x2ABF274")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x2ABF304", Offset = "0x2ABF304", VA = "0x2ABF304")]
		private void Start()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x2ABF2AC", Offset = "0x2ABF2AC", VA = "0x2ABF2AC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x2ABF5F0", Offset = "0x2ABF5F0", VA = "0x2ABF5F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x2ABF3F8", Offset = "0x2ABF3F8", VA = "0x2ABF3F8")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x2ABF6F8", Offset = "0x2ABF6F8", VA = "0x2ABF6F8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x2ABF754", Offset = "0x2ABF754", VA = "0x2ABF754")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x2ABF7B0", Offset = "0x2ABF7B0", VA = "0x2ABF7B0")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x2ABF7F8", Offset = "0x2ABF7F8", VA = "0x2ABF7F8")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x2ABF878", Offset = "0x2ABF878", VA = "0x2ABF878")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x2ABF930", Offset = "0x2ABF930", VA = "0x2ABF930")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x2ABF9E8", Offset = "0x2ABF9E8", VA = "0x2ABF9E8")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x2ABFAA0", Offset = "0x2ABFAA0", VA = "0x2ABFAA0")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public static class V3Tools
	{
		[Token(Token = "0x600130C")]
		[Address(RVA = "0x2ABFAA8", Offset = "0x2ABFAA8", VA = "0x2ABFAA8")]
		public static UnityEngine.Vector3 Lerp(UnityEngine.Vector3 fromVector, UnityEngine.Vector3 toVector, float weight)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x2ABFBA0", Offset = "0x2ABFBA0", VA = "0x2ABFBA0")]
		public static UnityEngine.Vector3 Slerp(UnityEngine.Vector3 fromVector, UnityEngine.Vector3 toVector, float weight)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x2ABFC98", Offset = "0x2ABFC98", VA = "0x2ABFC98")]
		public static UnityEngine.Vector3 ExtractVertical(UnityEngine.Vector3 v, UnityEngine.Vector3 verticalAxis, float weight)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x2ABFD90", Offset = "0x2ABFD90", VA = "0x2ABFD90")]
		public static UnityEngine.Vector3 ExtractHorizontal(UnityEngine.Vector3 v, UnityEngine.Vector3 normal, float weight)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x2ABFE90", Offset = "0x2ABFE90", VA = "0x2ABFE90")]
		public static UnityEngine.Vector3 ClampDirection(UnityEngine.Vector3 direction, UnityEngine.Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x2AC00B4", Offset = "0x2AC00B4", VA = "0x2AC00B4")]
		public static UnityEngine.Vector3 ClampDirection(UnityEngine.Vector3 direction, UnityEngine.Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x2AC02F0", Offset = "0x2AC02F0", VA = "0x2AC02F0")]
		public static UnityEngine.Vector3 ClampDirection(UnityEngine.Vector3 direction, UnityEngine.Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x2AC0540", Offset = "0x2AC0540", VA = "0x2AC0540")]
		public static UnityEngine.Vector3 LineToPlane(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, UnityEngine.Vector3 planeNormal, UnityEngine.Vector3 planePoint)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x2AC0740", Offset = "0x2AC0740", VA = "0x2AC0740")]
		public static UnityEngine.Vector3 PointToPlane(UnityEngine.Vector3 point, UnityEngine.Vector3 planePosition, UnityEngine.Vector3 planeNormal)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x2AC091C", Offset = "0x2AC091C", VA = "0x2AC091C")]
		public static UnityEngine.Vector3 TransformPointUnscaled(Transform t, UnityEngine.Vector3 point)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x2AC0A50", Offset = "0x2AC0A50", VA = "0x2AC0A50")]
		public static UnityEngine.Vector3 InverseTransformPointUnscaled(Transform t, UnityEngine.Vector3 point)
		{
			return default(UnityEngine.Vector3);
		}
	}
	[Token(Token = "0x2000277")]
	public static class Warning
	{
		[Token(Token = "0x200057E")]
		public delegate void Logger(string message);

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x2AC0BA8", Offset = "0x2AC0BA8", VA = "0x2AC0BA8")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x2AC0FD4", Offset = "0x2AC0FD4", VA = "0x2AC0FD4")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7AFC", Offset = "0x16E7AFC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7AFC", Offset = "0x16E7AFC")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x28DA768", Offset = "0x28DA768", VA = "0x28DA768")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702808", Offset = "0x1702808")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x28DA7B4", Offset = "0x28DA7B4", VA = "0x28DA7B4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702840", Offset = "0x1702840")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x28DA800", Offset = "0x28DA800", VA = "0x28DA800")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702878", Offset = "0x1702878")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x28DA84C", Offset = "0x28DA84C", VA = "0x28DA84C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17028B0", Offset = "0x17028B0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x28DA898", Offset = "0x28DA898", VA = "0x28DA898")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x28DA934", Offset = "0x28DA934", VA = "0x28DA934")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x28DA954", Offset = "0x28DA954", VA = "0x28DA954")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x28DA984", Offset = "0x28DA984", VA = "0x28DA984")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x28DA9B4", Offset = "0x28DA9B4", VA = "0x28DA9B4")]
		public void SetIKPosition(AvatarIKGoal goal, UnityEngine.Vector3 IKPosition)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x28DA9F4", Offset = "0x28DA9F4", VA = "0x28DA9F4")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x28DAA38", Offset = "0x28DAA38", VA = "0x28DAA38")]
		public UnityEngine.Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x28DAA5C", Offset = "0x28DAA5C", VA = "0x28DAA5C")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x28DAA80", Offset = "0x28DAA80", VA = "0x28DAA80")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x28DAAA8", Offset = "0x28DAAA8", VA = "0x28DAAA8")]
		public void SetLookAtPosition(UnityEngine.Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x28DAAD4", Offset = "0x28DAAD4", VA = "0x28DAAD4")]
		public void SetSpinePosition(UnityEngine.Vector3 spinePosition)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x28DAB00", Offset = "0x28DAB00", VA = "0x28DAB00")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x28DA8B8", Offset = "0x28DA8B8", VA = "0x28DA8B8")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x28DAB28", Offset = "0x28DAB28", VA = "0x28DAB28")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x28DAB34", Offset = "0x28DAB34", VA = "0x28DAB34")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x28DAB40", Offset = "0x28DAB40", VA = "0x28DAB40")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x28DAE68", Offset = "0x28DAE68", VA = "0x28DAE68", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x28DAF10", Offset = "0x28DAF10", VA = "0x28DAF10", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x28DB25C", Offset = "0x28DB25C", VA = "0x28DB25C", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x28DB744", Offset = "0x28DB744", VA = "0x28DB744")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x28DB778", Offset = "0x28DB778", VA = "0x28DB778")]
		public BipedIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000279")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x170002E2")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x28DACE0", Offset = "0x28DACE0", VA = "0x28DACE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		public IKSolver[] ikSolvers
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0x28DB9BC", Offset = "0x28DB9BC", VA = "0x28DB9BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x28DB0E0", Offset = "0x28DB0E0", VA = "0x28DB0E0")]
		public void AssignReferences(BipedReferences references)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x28DB814", Offset = "0x28DB814", VA = "0x28DB814")]
		public BipedIKSolvers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027A")]
	public abstract class Constraint
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weight;

		[Token(Token = "0x170002E4")]
		public bool isValid
		{
			[Token(Token = "0x6001336")]
			[Address(RVA = "0x28DC02C", Offset = "0x28DC02C", VA = "0x28DC02C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001337")]
		public abstract void UpdateConstraint();

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x28DC09C", Offset = "0x28DC09C", VA = "0x28DC09C")]
		protected Constraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027B")]
	public class ConstraintPosition : Constraint
	{
		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEngine.Vector3 position;

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x28DC0A4", Offset = "0x28DC0A4", VA = "0x28DC0A4", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x28DC1B0", Offset = "0x28DC1B0", VA = "0x28DC1B0")]
		public ConstraintPosition()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x28DC1B8", Offset = "0x28DC1B8", VA = "0x28DC1B8")]
		public ConstraintPosition(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027C")]
	public class ConstraintPositionOffset : Constraint
	{
		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UnityEngine.Vector3 offset;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3 defaultLocalPosition;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private UnityEngine.Vector3 lastLocalPosition;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initiated;

		[Token(Token = "0x170002E5")]
		private bool positionChanged
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0x28DC388", Offset = "0x28DC388", VA = "0x28DC388")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x28DC1EC", Offset = "0x28DC1EC", VA = "0x28DC1EC", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x28DC444", Offset = "0x28DC444", VA = "0x28DC444")]
		public ConstraintPositionOffset()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x28DC44C", Offset = "0x28DC44C", VA = "0x28DC44C")]
		public ConstraintPositionOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027D")]
	public class ConstraintRotation : Constraint
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x28DC480", Offset = "0x28DC480", VA = "0x28DC480", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x28DC5A8", Offset = "0x28DC5A8", VA = "0x28DC5A8")]
		public ConstraintRotation()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x28DC5B0", Offset = "0x28DC5B0", VA = "0x28DC5B0")]
		public ConstraintRotation(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027E")]
	public class ConstraintRotationOffset : Constraint
	{
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion offset;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastLocalRotation;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool initiated;

		[Token(Token = "0x170002E6")]
		private bool rotationChanged
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0x28DC784", Offset = "0x28DC784", VA = "0x28DC784")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x28DC5E4", Offset = "0x28DC5E4", VA = "0x28DC5E4", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x28DC854", Offset = "0x28DC854", VA = "0x28DC854")]
		public ConstraintRotationOffset()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x28DC85C", Offset = "0x28DC85C", VA = "0x28DC85C")]
		public ConstraintRotationOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027F")]
	public class Constraints
	{
		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 positionOffset;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UnityEngine.Vector3 position;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1DA0", Offset = "0x16F1DA0")]
		public float positionWeight;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public UnityEngine.Vector3 rotationOffset;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEngine.Vector3 rotation;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1DB8", Offset = "0x16F1DB8")]
		public float rotationWeight;

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x28DC890", Offset = "0x28DC890", VA = "0x28DC890")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x28DB204", Offset = "0x28DB204", VA = "0x28DB204")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x28DB3E4", Offset = "0x28DB3E4", VA = "0x28DB3E4")]
		public void Update()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x28DBBEC", Offset = "0x28DBBEC", VA = "0x28DBBEC")]
		public Constraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000280")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x200057F")]
		public enum DOF
		{
			[Token(Token = "0x4001F44")]
			One,
			[Token(Token = "0x4001F45")]
			Three
		}

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1DD0", Offset = "0x16F1DD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1DD0", Offset = "0x16F1DD0")]
		public float weight;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1E24", Offset = "0x16F1E24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F1E24", Offset = "0x16F1E24")]
		public float rotationWeight;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1E78", Offset = "0x16F1E78")]
		public DOF rotationDOF;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1EB0", Offset = "0x16F1EB0")]
		public bool fixBone1Twist;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1EE8", Offset = "0x16F1EE8")]
		public Transform bone1;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1F20", Offset = "0x16F1F20")]
		public Transform bone2;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1F58", Offset = "0x16F1F58")]
		public Transform bone3;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1F90", Offset = "0x16F1F90")]
		public Transform tip;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F1FC8", Offset = "0x16F1FC8")]
		public Transform target;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F2000", Offset = "0x16F2000")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityEngine.Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private UnityEngine.Vector3 bone1Axis;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UnityEngine.Vector3 tipAxis;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private UnityEngine.Vector3 bone1TwistAxis;

		[Token(Token = "0x170002E7")]
		public bool initiated
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0x350E2E4", Offset = "0x350E2E4", VA = "0x350E2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17028E8", Offset = "0x17028E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600134C")]
			[Address(RVA = "0x350E2EC", Offset = "0x350E2EC", VA = "0x350E2EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17028F8", Offset = "0x17028F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public UnityEngine.Vector3 IKPosition
		{
			[Token(Token = "0x600134D")]
			[Address(RVA = "0x350E2F8", Offset = "0x350E2F8", VA = "0x350E2F8")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x600134E")]
			[Address(RVA = "0x350E318", Offset = "0x350E318", VA = "0x350E318")]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x600134F")]
			[Address(RVA = "0x350E338", Offset = "0x350E338", VA = "0x350E338")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001350")]
			[Address(RVA = "0x350E358", Offset = "0x350E358", VA = "0x350E358")]
			set
			{
			}
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x350E378", Offset = "0x350E378", VA = "0x350E378")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x350E484", Offset = "0x350E484", VA = "0x350E484")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x350EA38", Offset = "0x350EA38", VA = "0x350EA38")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x350EB14", Offset = "0x350EB14", VA = "0x350EB14")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x350EBDC", Offset = "0x350EBDC", VA = "0x350EBDC")]
		public void Update(float masterWeight)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x350F324", Offset = "0x350F324", VA = "0x350F324")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2010", Offset = "0x16F2010")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2010", Offset = "0x16F2010")]
		public float weight;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F2064", Offset = "0x16F2064")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x170002EA")]
		public bool initiated
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0x350F334", Offset = "0x350F334", VA = "0x350F334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702908", Offset = "0x1702908")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001358")]
			[Address(RVA = "0x350F33C", Offset = "0x350F33C", VA = "0x350F33C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702918", Offset = "0x1702918")]
			private set
			{
			}
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x350F348", Offset = "0x350F348", VA = "0x350F348")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x350F3D0", Offset = "0x350F3D0", VA = "0x350F3D0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702928", Offset = "0x1702928")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x350F748", Offset = "0x350F748", VA = "0x350F748")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x350F904", Offset = "0x350F904", VA = "0x350F904")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x350F638", Offset = "0x350F638", VA = "0x350F638")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x350FA88", Offset = "0x350FA88", VA = "0x350FA88", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x350FB48", Offset = "0x350FB48", VA = "0x350FB48")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x350FBC0", Offset = "0x350FBC0", VA = "0x350FBC0")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x350FC34", Offset = "0x350FC34", VA = "0x350FC34")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x350FC9C", Offset = "0x350FC9C", VA = "0x350FC9C", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x350FCA0", Offset = "0x350FCA0", VA = "0x350FCA0", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x350FCB4", Offset = "0x350FCB4", VA = "0x350FCB4")]
		public FingerRig()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public abstract class Grounder : MonoBehaviour
	{
		[Token(Token = "0x2000580")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2074", Offset = "0x16F2074")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2074", Offset = "0x16F2074")]
		public float weight;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F20C8", Offset = "0x16F20C8")]
		public Grounding solver;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F2100", Offset = "0x16F2100")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x170002EB")]
		public bool initiated
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x3510D8C", Offset = "0x3510D8C", VA = "0x3510D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702960", Offset = "0x1702960")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001367")]
			[Address(RVA = "0x3510D94", Offset = "0x3510D94", VA = "0x3510D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702970", Offset = "0x1702970")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001365")]
		public abstract void ResetPosition();

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x3510DA0", Offset = "0x3510DA0", VA = "0x3510DA0")]
		protected UnityEngine.Vector3 GetSpineOffsetTarget()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x3511074", Offset = "0x3511074", VA = "0x3511074")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x3510EE4", Offset = "0x3510EE4", VA = "0x3510EE4")]
		private UnityEngine.Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x35110A8", Offset = "0x35110A8", VA = "0x35110A8")]
		private UnityEngine.Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600136C")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x600136D")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x35112B0", Offset = "0x35112B0", VA = "0x35112B0")]
		protected Grounder()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7B5C", Offset = "0x16E7B5C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7B5C", Offset = "0x16E7B5C")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2110", Offset = "0x16F2110")]
		public BipedIK ik;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2148", Offset = "0x16F2148")]
		public float spineBend;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2180", Offset = "0x16F2180")]
		public float spineSpeed;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private UnityEngine.Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.Vector3 spineOffset;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x3511628", Offset = "0x3511628", VA = "0x3511628", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702980", Offset = "0x1702980")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x3511674", Offset = "0x3511674", VA = "0x3511674", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17029B8", Offset = "0x17029B8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x35116C0", Offset = "0x35116C0", VA = "0x35116C0", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x35117C4", Offset = "0x35117C4", VA = "0x35117C4")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x3511874", Offset = "0x3511874", VA = "0x3511874")]
		private void Update()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x3511928", Offset = "0x3511928", VA = "0x3511928")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x3511EF0", Offset = "0x3511EF0", VA = "0x3511EF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x3511F44", Offset = "0x3511F44", VA = "0x3511F44")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x35126F8", Offset = "0x35126F8", VA = "0x35126F8")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x3512858", Offset = "0x3512858", VA = "0x3512858")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x35129E8", Offset = "0x35129E8", VA = "0x35129E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x3512B8C", Offset = "0x3512B8C", VA = "0x3512B8C")]
		public GrounderBipedIK()
		{
		}
	}
	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7BBC", Offset = "0x16E7BBC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7BBC", Offset = "0x16E7BBC")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x2000581")]
		public class SpineEffector
		{
			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB0E0", Offset = "0x16FB0E0")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB118", Offset = "0x16FB118")]
			public float horizontalWeight;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB150", Offset = "0x16FB150")]
			public float verticalWeight;

			[Token(Token = "0x6002205")]
			[Address(RVA = "0x3513AA8", Offset = "0x3513AA8", VA = "0x3513AA8")]
			public SpineEffector()
			{
			}

			[Token(Token = "0x6002206")]
			[Address(RVA = "0x3513AB8", Offset = "0x3513AB8", VA = "0x3513AB8")]
			public SpineEffector(FullBodyBipedEffector effectorType, float horizontalWeight, float verticalWeight)
			{
			}
		}

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F21B8", Offset = "0x16F21B8")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F21F0", Offset = "0x16F21F0")]
		public float spineBend;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2228", Offset = "0x16F2228")]
		public float spineSpeed;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.Vector3 spineOffset;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x3512C24", Offset = "0x3512C24", VA = "0x3512C24")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17029F0", Offset = "0x17029F0")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x3512C70", Offset = "0x3512C70", VA = "0x3512C70", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702A28", Offset = "0x1702A28")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x3512CBC", Offset = "0x3512CBC", VA = "0x3512CBC", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702A60", Offset = "0x1702A60")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x3512D08", Offset = "0x3512D08", VA = "0x3512D08", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x3512D88", Offset = "0x3512D88", VA = "0x3512D88")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x3512E20", Offset = "0x3512E20", VA = "0x3512E20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x3513118", Offset = "0x3513118", VA = "0x3513118")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x3513124", Offset = "0x3513124", VA = "0x3513124")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x3512EDC", Offset = "0x3512EDC", VA = "0x3512EDC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x3513130", Offset = "0x3513130", VA = "0x3513130")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x35135D0", Offset = "0x35135D0", VA = "0x35135D0")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x3513790", Offset = "0x3513790", VA = "0x3513790")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x35138EC", Offset = "0x35138EC", VA = "0x35138EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x3513A10", Offset = "0x3513A10", VA = "0x3513A10")]
		public GrounderFBBIK()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7C1C", Offset = "0x16E7C1C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7C1C", Offset = "0x16E7C1C")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2260", Offset = "0x16F2260")]
		public Transform pelvis;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2298", Offset = "0x16F2298")]
		public Transform characterRoot;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F22D0", Offset = "0x16F22D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F22D0", Offset = "0x16F22D0")]
		public float rootRotationWeight;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2324", Offset = "0x16F2324")]
		public float rootRotationSpeed;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F235C", Offset = "0x16F235C")]
		public float maxRootRotationAngle;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private UnityEngine.Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x3513B00", Offset = "0x3513B00", VA = "0x3513B00", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702A98", Offset = "0x1702A98")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x3513B4C", Offset = "0x3513B4C", VA = "0x3513B4C", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702AD0", Offset = "0x1702AD0")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x3513B98", Offset = "0x3513B98", VA = "0x3513B98", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x3513BB0", Offset = "0x3513BB0", VA = "0x3513BB0")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x3513DA0", Offset = "0x3513DA0", VA = "0x3513DA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x3513EA0", Offset = "0x3513EA0", VA = "0x3513EA0")]
		private void Update()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x35145E8", Offset = "0x35145E8", VA = "0x35145E8")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x3514A28", Offset = "0x3514A28", VA = "0x3514A28")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x3514C98", Offset = "0x3514C98", VA = "0x3514C98")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x3514FB8", Offset = "0x3514FB8", VA = "0x3514FB8")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x3515154", Offset = "0x3515154", VA = "0x3515154")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x3515340", Offset = "0x3515340", VA = "0x3515340")]
		public GrounderIK()
		{
		}
	}
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7C7C", Offset = "0x16E7C7C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7C7C", Offset = "0x16E7C7C")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x2000582")]
		public struct Foot
		{
			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x6002207")]
			[Address(RVA = "0x3515F5C", Offset = "0x3515F5C", VA = "0x3515F5C")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2394", Offset = "0x16F2394")]
		public Grounding forelegSolver;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F23CC", Offset = "0x16F23CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F23CC", Offset = "0x16F23CC")]
		public float rootRotationWeight;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2420", Offset = "0x16F2420")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2420", Offset = "0x16F2420")]
		public float minRootRotation;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2478", Offset = "0x16F2478")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2478", Offset = "0x16F2478")]
		public float maxRootRotation;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F24D0", Offset = "0x16F24D0")]
		public float rootRotationSpeed;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2508", Offset = "0x16F2508")]
		public float maxLegOffset;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2540", Offset = "0x16F2540")]
		public float maxForeLegOffset;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2578", Offset = "0x16F2578")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2578", Offset = "0x16F2578")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F25CC", Offset = "0x16F25CC")]
		public Transform characterRoot;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2604", Offset = "0x16F2604")]
		public Transform pelvis;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F263C", Offset = "0x16F263C")]
		public Transform lastSpineBone;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2674", Offset = "0x16F2674")]
		public Transform head;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public UnityEngine.Vector3 gravity;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private UnityEngine.Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private UnityEngine.Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x35153D8", Offset = "0x35153D8", VA = "0x35153D8", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702B08", Offset = "0x1702B08")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x3515424", Offset = "0x3515424", VA = "0x3515424", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702B40", Offset = "0x1702B40")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x3515470", Offset = "0x3515470", VA = "0x3515470", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x35154A4", Offset = "0x35154A4", VA = "0x35154A4")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x35155D4", Offset = "0x35155D4", VA = "0x35155D4")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x3515794", Offset = "0x3515794", VA = "0x3515794")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x35157FC", Offset = "0x35157FC", VA = "0x35157FC")]
		private void Update()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x35158B4", Offset = "0x35158B4", VA = "0x35158B4")]
		private void Initiate()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x3515BE8", Offset = "0x3515BE8", VA = "0x3515BE8")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x3515FC0", Offset = "0x3515FC0", VA = "0x3515FC0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x351610C", Offset = "0x351610C", VA = "0x351610C")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x35165B0", Offset = "0x35165B0", VA = "0x35165B0")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x3516DA0", Offset = "0x3516DA0", VA = "0x3516DA0")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x3517060", Offset = "0x3517060", VA = "0x3517060")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x35171C0", Offset = "0x35171C0", VA = "0x35171C0")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x351749C", Offset = "0x351749C", VA = "0x351749C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x35174D4", Offset = "0x35174D4", VA = "0x35174D4")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x35176B8", Offset = "0x35176B8", VA = "0x35176B8")]
		public GrounderQuadruped()
		{
		}
	}
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7CDC", Offset = "0x16E7CDC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7CDC", Offset = "0x16E7CDC")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F26BC", Offset = "0x16F26BC")]
		public VRIK ik;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x35177EC", Offset = "0x35177EC", VA = "0x35177EC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702B78", Offset = "0x1702B78")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x3517838", Offset = "0x3517838", VA = "0x3517838", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702BB0", Offset = "0x1702BB0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x3517884", Offset = "0x3517884", VA = "0x3517884", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702BE8", Offset = "0x1702BE8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x35178D0", Offset = "0x35178D0", VA = "0x35178D0", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x35178E8", Offset = "0x35178E8", VA = "0x35178E8")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x3517980", Offset = "0x3517980", VA = "0x3517980")]
		private void Update()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x3517A34", Offset = "0x3517A34", VA = "0x3517A34")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x3517C80", Offset = "0x3517C80", VA = "0x3517C80")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x3517F14", Offset = "0x3517F14", VA = "0x3517F14")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x351801C", Offset = "0x351801C", VA = "0x351801C")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x351821C", Offset = "0x351821C", VA = "0x351821C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x3518378", Offset = "0x3518378", VA = "0x3518378")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x351850C", Offset = "0x351850C", VA = "0x351850C")]
		public GrounderVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000288")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x2000583")]
		public enum Quality
		{
			[Token(Token = "0x4001F4E")]
			Fastest,
			[Token(Token = "0x4001F4F")]
			Simple,
			[Token(Token = "0x4001F50")]
			Best
		}

		[Token(Token = "0x2000584")]
		public class Leg
		{
			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB188", Offset = "0x16FB188")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB198", Offset = "0x16FB198")]
			private UnityEngine.Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB1A8", Offset = "0x16FB1A8")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB1B8", Offset = "0x16FB1B8")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB1C8", Offset = "0x16FB1C8")]
			private UnityEngine.Vector3 <velocity>k__BackingField;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB1D8", Offset = "0x16FB1D8")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB1E8", Offset = "0x16FB1E8")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB1F8", Offset = "0x16FB1F8")]
			private RaycastHit <heelHit>k__BackingField;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB208", Offset = "0x16FB208")]
			private RaycastHit <capsuleHit>k__BackingField;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Grounding grounding;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private float lastTime;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private float deltaTime;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private UnityEngine.Vector3 lastPosition;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private Quaternion toHitNormal;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private Quaternion r;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private UnityEngine.Vector3 up;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private bool doOverrideFootPosition;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private UnityEngine.Vector3 overrideFootPosition;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private UnityEngine.Vector3 transformPosition;

			[Token(Token = "0x170004DE")]
			public bool isGrounded
			{
				[Token(Token = "0x6002208")]
				[Address(RVA = "0x3519DD0", Offset = "0x3519DD0", VA = "0x3519DD0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17074D0", Offset = "0x17074D0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002209")]
				[Address(RVA = "0x3519DD8", Offset = "0x3519DD8", VA = "0x3519DD8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17074E0", Offset = "0x17074E0")]
				private set
				{
				}
			}

			[Token(Token = "0x170004DF")]
			public UnityEngine.Vector3 IKPosition
			{
				[Token(Token = "0x600220A")]
				[Address(RVA = "0x3519DE4", Offset = "0x3519DE4", VA = "0x3519DE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17074F0", Offset = "0x17074F0")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x600220B")]
				[Address(RVA = "0x3519DF0", Offset = "0x3519DF0", VA = "0x3519DF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707500", Offset = "0x1707500")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E0")]
			public bool initiated
			{
				[Token(Token = "0x600220C")]
				[Address(RVA = "0x3519DFC", Offset = "0x3519DFC", VA = "0x3519DFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707510", Offset = "0x1707510")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600220D")]
				[Address(RVA = "0x3519E04", Offset = "0x3519E04", VA = "0x3519E04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707520", Offset = "0x1707520")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E1")]
			public float heightFromGround
			{
				[Token(Token = "0x600220E")]
				[Address(RVA = "0x3519E10", Offset = "0x3519E10", VA = "0x3519E10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707530", Offset = "0x1707530")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600220F")]
				[Address(RVA = "0x3519E18", Offset = "0x3519E18", VA = "0x3519E18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707540", Offset = "0x1707540")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E2")]
			public UnityEngine.Vector3 velocity
			{
				[Token(Token = "0x6002210")]
				[Address(RVA = "0x3519E20", Offset = "0x3519E20", VA = "0x3519E20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707550", Offset = "0x1707550")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x6002211")]
				[Address(RVA = "0x3519E2C", Offset = "0x3519E2C", VA = "0x3519E2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707560", Offset = "0x1707560")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E3")]
			public Transform transform
			{
				[Token(Token = "0x6002212")]
				[Address(RVA = "0x3519E38", Offset = "0x3519E38", VA = "0x3519E38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707570", Offset = "0x1707570")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002213")]
				[Address(RVA = "0x3519E40", Offset = "0x3519E40", VA = "0x3519E40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707580", Offset = "0x1707580")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E4")]
			public float IKOffset
			{
				[Token(Token = "0x6002214")]
				[Address(RVA = "0x3519E48", Offset = "0x3519E48", VA = "0x3519E48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707590", Offset = "0x1707590")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002215")]
				[Address(RVA = "0x3519E50", Offset = "0x3519E50", VA = "0x3519E50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17075A0", Offset = "0x17075A0")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E5")]
			public RaycastHit heelHit
			{
				[Token(Token = "0x6002216")]
				[Address(RVA = "0x3519E58", Offset = "0x3519E58", VA = "0x3519E58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17075B0", Offset = "0x17075B0")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x6002217")]
				[Address(RVA = "0x3519E70", Offset = "0x3519E70", VA = "0x3519E70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17075C0", Offset = "0x17075C0")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E6")]
			public RaycastHit capsuleHit
			{
				[Token(Token = "0x6002218")]
				[Address(RVA = "0x3519E90", Offset = "0x3519E90", VA = "0x3519E90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17075D0", Offset = "0x17075D0")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x6002219")]
				[Address(RVA = "0x3519EA8", Offset = "0x3519EA8", VA = "0x3519EA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17075E0", Offset = "0x17075E0")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E7")]
			public RaycastHit GetHitPoint
			{
				[Token(Token = "0x600221A")]
				[Address(RVA = "0x3519EC8", Offset = "0x3519EC8", VA = "0x3519EC8")]
				get
				{
					return default(RaycastHit);
				}
			}

			[Token(Token = "0x170004E8")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x6002220")]
				[Address(RVA = "0x351AC84", Offset = "0x351AC84", VA = "0x351AC84")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170004E9")]
			private float rootYOffset
			{
				[Token(Token = "0x6002229")]
				[Address(RVA = "0x351AF5C", Offset = "0x351AF5C", VA = "0x351AF5C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x600221B")]
			[Address(RVA = "0x3519F10", Offset = "0x3519F10", VA = "0x3519F10")]
			public void SetFootPosition(UnityEngine.Vector3 position)
			{
			}

			[Token(Token = "0x600221C")]
			[Address(RVA = "0x3518BBC", Offset = "0x3518BBC", VA = "0x3518BBC")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x600221D")]
			[Address(RVA = "0x3519F24", Offset = "0x3519F24", VA = "0x3519F24")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x600221E")]
			[Address(RVA = "0x35198F0", Offset = "0x35198F0", VA = "0x35198F0")]
			public void Reset()
			{
			}

			[Token(Token = "0x600221F")]
			[Address(RVA = "0x3518D00", Offset = "0x3518D00", VA = "0x3518D00")]
			public void Process()
			{
			}

			[Token(Token = "0x6002221")]
			[Address(RVA = "0x351A6FC", Offset = "0x351A6FC", VA = "0x351A6FC")]
			private RaycastHit GetCapsuleHit(UnityEngine.Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6002222")]
			[Address(RVA = "0x3519F70", Offset = "0x3519F70", VA = "0x3519F70")]
			private RaycastHit GetRaycastHit(UnityEngine.Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x6002223")]
			[Address(RVA = "0x351AE04", Offset = "0x351AE04", VA = "0x351AE04")]
			private UnityEngine.Vector3 RotateNormal(UnityEngine.Vector3 normal)
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x6002224")]
			[Address(RVA = "0x351A3A8", Offset = "0x351A3A8", VA = "0x351A3A8")]
			private void SetFootToPoint(UnityEngine.Vector3 normal, UnityEngine.Vector3 point)
			{
			}

			[Token(Token = "0x6002225")]
			[Address(RVA = "0x351A4B0", Offset = "0x351A4B0", VA = "0x351A4B0")]
			private void SetFootToPlane(UnityEngine.Vector3 planeNormal, UnityEngine.Vector3 planePoint, UnityEngine.Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x6002226")]
			[Address(RVA = "0x351AF00", Offset = "0x351AF00", VA = "0x351AF00")]
			private float GetHeightFromGround(UnityEngine.Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x6002227")]
			[Address(RVA = "0x351AD10", Offset = "0x351AD10", VA = "0x351AD10")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x6002228")]
			[Address(RVA = "0x351B084", Offset = "0x351B084", VA = "0x351B084")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600222A")]
			[Address(RVA = "0x3518B0C", Offset = "0x3518B0C", VA = "0x3518B0C")]
			public Leg()
			{
			}
		}

		[Token(Token = "0x2000585")]
		public class Pelvis
		{
			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB218", Offset = "0x16FB218")]
			private UnityEngine.Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB228", Offset = "0x16FB228")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityEngine.Vector3 lastRootPosition;

			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x170004EA")]
			public UnityEngine.Vector3 IKOffset
			{
				[Token(Token = "0x600222B")]
				[Address(RVA = "0x351B174", Offset = "0x351B174", VA = "0x351B174")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17075F0", Offset = "0x17075F0")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x600222C")]
				[Address(RVA = "0x351B180", Offset = "0x351B180", VA = "0x351B180")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707600", Offset = "0x1707600")]
				private set
				{
				}
			}

			[Token(Token = "0x170004EB")]
			public float heightOffset
			{
				[Token(Token = "0x600222D")]
				[Address(RVA = "0x351B18C", Offset = "0x351B18C", VA = "0x351B18C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707610", Offset = "0x1707610")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600222E")]
				[Address(RVA = "0x351B194", Offset = "0x351B194", VA = "0x351B194")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707620", Offset = "0x1707620")]
				private set
				{
				}
			}

			[Token(Token = "0x600222F")]
			[Address(RVA = "0x3518CB8", Offset = "0x3518CB8", VA = "0x3518CB8")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x6002230")]
			[Address(RVA = "0x3519840", Offset = "0x3519840", VA = "0x3519840")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002231")]
			[Address(RVA = "0x351B19C", Offset = "0x351B19C", VA = "0x351B19C")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x6002232")]
			[Address(RVA = "0x35195D4", Offset = "0x35195D4", VA = "0x35195D4")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}

			[Token(Token = "0x6002233")]
			[Address(RVA = "0x3518BB4", Offset = "0x3518BB4", VA = "0x3518BB4")]
			public Pelvis()
			{
			}
		}

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F26F4", Offset = "0x16F26F4")]
		public LayerMask layers;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F272C", Offset = "0x16F272C")]
		public float maxStep;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2764", Offset = "0x16F2764")]
		public float heightOffset;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F279C", Offset = "0x16F279C")]
		public float footSpeed;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F27D4", Offset = "0x16F27D4")]
		public float footRadius;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F280C", Offset = "0x16F280C")]
		[HideInInspector]
		public float footCenterOffset;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2858", Offset = "0x16F2858")]
		public float prediction;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2890", Offset = "0x16F2890")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2890", Offset = "0x16F2890")]
		public float footRotationWeight;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F28E4", Offset = "0x16F28E4")]
		public float footRotationSpeed;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F291C", Offset = "0x16F291C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F291C", Offset = "0x16F291C")]
		public float maxFootRotationAngle;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2974", Offset = "0x16F2974")]
		public bool rotateSolver;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F29AC", Offset = "0x16F29AC")]
		public float pelvisSpeed;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F29E4", Offset = "0x16F29E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F29E4", Offset = "0x16F29E4")]
		public float pelvisDamper;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2A38", Offset = "0x16F2A38")]
		public float lowerPelvisWeight;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2A70", Offset = "0x16F2A70")]
		public float liftPelvisWeight;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2AA8", Offset = "0x16F2AA8")]
		public float rootSphereCastRadius;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2AE0", Offset = "0x16F2AE0")]
		public bool overstepFallsDown;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2B18", Offset = "0x16F2B18")]
		public Quality quality;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F2B50", Offset = "0x16F2B50")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F2B60", Offset = "0x16F2B60")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F2B70", Offset = "0x16F2B70")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F2B80", Offset = "0x16F2B80")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F2B90", Offset = "0x16F2B90")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool initiated;

		[Token(Token = "0x170002EC")]
		public Leg[] legs
		{
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x3518574", Offset = "0x3518574", VA = "0x3518574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702C20", Offset = "0x1702C20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x351857C", Offset = "0x351857C", VA = "0x351857C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702C30", Offset = "0x1702C30")]
			private set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		public Pelvis pelvis
		{
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x3518584", Offset = "0x3518584", VA = "0x3518584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702C40", Offset = "0x1702C40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x351858C", Offset = "0x351858C", VA = "0x351858C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702C50", Offset = "0x1702C50")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		public bool isGrounded
		{
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0x3518594", Offset = "0x3518594", VA = "0x3518594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702C60", Offset = "0x1702C60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0x351859C", Offset = "0x351859C", VA = "0x351859C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702C70", Offset = "0x1702C70")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public Transform root
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x35185A8", Offset = "0x35185A8", VA = "0x35185A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702C80", Offset = "0x1702C80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x35185B0", Offset = "0x35185B0", VA = "0x35185B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702C90", Offset = "0x1702C90")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x35185B8", Offset = "0x35185B8", VA = "0x35185B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702CA0", Offset = "0x1702CA0")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x35185D0", Offset = "0x35185D0", VA = "0x35185D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1702CB0", Offset = "0x1702CB0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public bool rootGrounded
		{
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x35185F0", Offset = "0x35185F0", VA = "0x35185F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F2")]
		public UnityEngine.Vector3 up
		{
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x35127CC", Offset = "0x35127CC", VA = "0x35127CC")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170002F3")]
		private bool useRootRotation
		{
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0x35199A4", Offset = "0x35199A4", VA = "0x35199A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x3518644", Offset = "0x3518644", VA = "0x3518644")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x3518A24", Offset = "0x3518A24", VA = "0x3518A24")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x3511C38", Offset = "0x3511C38", VA = "0x3511C38")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x3512490", Offset = "0x3512490", VA = "0x3512490")]
		public void Update()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x35143D0", Offset = "0x35143D0", VA = "0x35143D0")]
		public UnityEngine.Vector3 GetLegsPlaneNormal()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x3511740", Offset = "0x3511740", VA = "0x3511740")]
		public void Reset()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x3518CE8", Offset = "0x3518CE8", VA = "0x3518CE8")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x3519A74", Offset = "0x3519A74", VA = "0x3519A74")]
		public float GetVerticalOffset(UnityEngine.Vector3 p1, UnityEngine.Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x3519BDC", Offset = "0x3519BDC", VA = "0x3519BDC")]
		public UnityEngine.Vector3 Flatten(UnityEngine.Vector3 v)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x3519CE0", Offset = "0x3519CE0", VA = "0x3519CE0")]
		public UnityEngine.Vector3 GetFootCenterOffset()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x351137C", Offset = "0x351137C", VA = "0x351137C")]
		public Grounding()
		{
		}
	}
	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7D3C", Offset = "0x16E7D3C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7D3C", Offset = "0x16E7D3C")]
	public class AimIK : IK
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x28D9AB8", Offset = "0x28D9AB8", VA = "0x28D9AB8", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702CC0", Offset = "0x1702CC0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x28D9B04", Offset = "0x28D9B04", VA = "0x28D9B04", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702CF8", Offset = "0x1702CF8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x28D9B50", Offset = "0x28D9B50", VA = "0x28D9B50")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702D30", Offset = "0x1702D30")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x28D9B9C", Offset = "0x28D9B9C", VA = "0x28D9B9C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702D68", Offset = "0x1702D68")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x28D9BE8", Offset = "0x28D9BE8", VA = "0x28D9BE8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702DA0", Offset = "0x1702DA0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x28D9C34", Offset = "0x28D9C34", VA = "0x28D9C34", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x28D9C3C", Offset = "0x28D9C3C", VA = "0x28D9C3C")]
		public AimIK()
		{
		}
	}
	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7D9C", Offset = "0x16E7D9C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7D9C", Offset = "0x16E7D9C")]
	public class ArmIK : IK
	{
		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x28DA5BC", Offset = "0x28DA5BC", VA = "0x28DA5BC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702DD8", Offset = "0x1702DD8")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x28DA608", Offset = "0x28DA608", VA = "0x28DA608", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702E10", Offset = "0x1702E10")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x28DA654", Offset = "0x28DA654", VA = "0x28DA654")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702E48", Offset = "0x1702E48")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x28DA6A0", Offset = "0x28DA6A0", VA = "0x28DA6A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702E80", Offset = "0x1702E80")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x28DA6EC", Offset = "0x28DA6EC", VA = "0x28DA6EC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x28DA6F4", Offset = "0x28DA6F4", VA = "0x28DA6F4")]
		public ArmIK()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7DFC", Offset = "0x16E7DFC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7DFC", Offset = "0x16E7DFC")]
	public class CCDIK : IK
	{
		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x28DBE80", Offset = "0x28DBE80", VA = "0x28DBE80", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702EB8", Offset = "0x1702EB8")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x28DBECC", Offset = "0x28DBECC", VA = "0x28DBECC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702EF0", Offset = "0x1702EF0")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x28DBF18", Offset = "0x28DBF18", VA = "0x28DBF18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702F28", Offset = "0x1702F28")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x28DBF64", Offset = "0x28DBF64", VA = "0x28DBF64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702F60", Offset = "0x1702F60")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x28DBFB0", Offset = "0x28DBFB0", VA = "0x28DBFB0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x28DBFB8", Offset = "0x28DBFB8", VA = "0x28DBFB8")]
		public CCDIK()
		{
		}
	}
	[Token(Token = "0x200028C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7E5C", Offset = "0x16E7E5C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7E5C", Offset = "0x16E7E5C")]
	public class FABRIK : IK
	{
		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x28DCA80", Offset = "0x28DCA80", VA = "0x28DCA80", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702F98", Offset = "0x1702F98")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x28DCACC", Offset = "0x28DCACC", VA = "0x28DCACC", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1702FD0", Offset = "0x1702FD0")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x28DCB18", Offset = "0x28DCB18", VA = "0x28DCB18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703008", Offset = "0x1703008")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x28DCB64", Offset = "0x28DCB64", VA = "0x28DCB64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703040", Offset = "0x1703040")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x28DCBB0", Offset = "0x28DCBB0", VA = "0x28DCBB0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x28DCBB8", Offset = "0x28DCBB8", VA = "0x28DCBB8")]
		public FABRIK()
		{
		}
	}
	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7EBC", Offset = "0x16E7EBC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7EBC", Offset = "0x16E7EBC")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x28DD25C", Offset = "0x28DD25C", VA = "0x28DD25C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703078", Offset = "0x1703078")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x28DD2A8", Offset = "0x28DD2A8", VA = "0x28DD2A8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17030B0", Offset = "0x17030B0")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x28DD2F4", Offset = "0x28DD2F4", VA = "0x28DD2F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17030E8", Offset = "0x17030E8")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x28DD340", Offset = "0x28DD340", VA = "0x28DD340")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703120", Offset = "0x1703120")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x28DD38C", Offset = "0x28DD38C", VA = "0x28DD38C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x28DD394", Offset = "0x28DD394", VA = "0x28DD394")]
		public FABRIKRoot()
		{
		}
	}
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7F1C", Offset = "0x16E7F1C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7F1C", Offset = "0x16E7F1C")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x350FD28", Offset = "0x350FD28", VA = "0x350FD28", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703158", Offset = "0x1703158")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x350FD74", Offset = "0x350FD74", VA = "0x350FD74", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703190", Offset = "0x1703190")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x350FDC0", Offset = "0x350FDC0", VA = "0x350FDC0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17031C8", Offset = "0x17031C8")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x350FE0C", Offset = "0x350FE0C", VA = "0x350FE0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703200", Offset = "0x1703200")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x350FE58", Offset = "0x350FE58", VA = "0x350FE58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703238", Offset = "0x1703238")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x350FEA4", Offset = "0x350FEA4", VA = "0x350FEA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703270", Offset = "0x1703270")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x350FEF0", Offset = "0x350FEF0", VA = "0x350FEF0")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x350FF34", Offset = "0x350FF34", VA = "0x350FF34", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x350FF3C", Offset = "0x350FF3C", VA = "0x350FF3C")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x3510104", Offset = "0x3510104", VA = "0x3510104")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x3510464", Offset = "0x3510464", VA = "0x3510464")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17032A8", Offset = "0x17032A8")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x3510484", Offset = "0x3510484", VA = "0x3510484")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17032E0", Offset = "0x17032E0")]
		private void AutoDetectReferences()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x3510578", Offset = "0x3510578", VA = "0x3510578")]
		public FullBodyBipedIK()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x60013F8")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x351DCE8", Offset = "0x351DCE8", VA = "0x351DCE8", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x351DD70", Offset = "0x351DD70", VA = "0x351DD70", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x351DDE4", Offset = "0x351DDE4", VA = "0x351DDE4", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x60013FC")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x60013FD")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x3510618", Offset = "0x3510618", VA = "0x3510618")]
		protected IK()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class IKExecutionOrder : MonoBehaviour
	{
		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2BA0", Offset = "0x16F2BA0")]
		public IK[] IKComponents;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2BD8", Offset = "0x16F2BD8")]
		public Animator animator;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x170002F4")]
		private bool animatePhysics
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x352050C", Offset = "0x352050C", VA = "0x352050C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x35205A8", Offset = "0x35205A8", VA = "0x35205A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x3520618", Offset = "0x3520618", VA = "0x3520618")]
		private void Update()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x35206D4", Offset = "0x35206D4", VA = "0x35206D4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x3520710", Offset = "0x3520710", VA = "0x3520710")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x352064C", Offset = "0x352064C", VA = "0x352064C")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x35207A0", Offset = "0x35207A0", VA = "0x35207A0")]
		public IKExecutionOrder()
		{
		}
	}
	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7F7C", Offset = "0x16E7F7C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7F7C", Offset = "0x16E7F7C")]
	public class LegIK : IK
	{
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x2CABA48", Offset = "0x2CABA48", VA = "0x2CABA48", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703318", Offset = "0x1703318")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x2CABA94", Offset = "0x2CABA94", VA = "0x2CABA94", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703350", Offset = "0x1703350")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x2CABAE0", Offset = "0x2CABAE0", VA = "0x2CABAE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703388", Offset = "0x1703388")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x2CABB2C", Offset = "0x2CABB2C", VA = "0x2CABB2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17033C0", Offset = "0x17033C0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x2CABB78", Offset = "0x2CABB78", VA = "0x2CABB78", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x2CABB80", Offset = "0x2CABB80", VA = "0x2CABB80")]
		public LegIK()
		{
		}
	}
	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E7FDC", Offset = "0x16E7FDC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E7FDC", Offset = "0x16E7FDC")]
	public class LimbIK : IK
	{
		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x2CABBF4", Offset = "0x2CABBF4", VA = "0x2CABBF4", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17033F8", Offset = "0x17033F8")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x2CABC40", Offset = "0x2CABC40", VA = "0x2CABC40", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703430", Offset = "0x1703430")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x2CABC8C", Offset = "0x2CABC8C", VA = "0x2CABC8C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703468", Offset = "0x1703468")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x2CABCD8", Offset = "0x2CABCD8", VA = "0x2CABCD8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17034A0", Offset = "0x17034A0")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x2CABD24", Offset = "0x2CABD24", VA = "0x2CABD24", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x2CABD2C", Offset = "0x2CABD2C", VA = "0x2CABD2C")]
		public LimbIK()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E803C", Offset = "0x16E803C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E803C", Offset = "0x16E803C")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x2CACC00", Offset = "0x2CACC00", VA = "0x2CACC00", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17034D8", Offset = "0x17034D8")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x2CACC4C", Offset = "0x2CACC4C", VA = "0x2CACC4C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703510", Offset = "0x1703510")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x2CACC98", Offset = "0x2CACC98", VA = "0x2CACC98")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703548", Offset = "0x1703548")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x2CACCE4", Offset = "0x2CACCE4", VA = "0x2CACCE4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703580", Offset = "0x1703580")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x2CACD30", Offset = "0x2CACD30", VA = "0x2CACD30", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x2CACD38", Offset = "0x2CACD38", VA = "0x2CACD38")]
		public LookAtIK()
		{
		}
	}
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E809C", Offset = "0x16E809C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E809C", Offset = "0x16E809C")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x2CB593C", Offset = "0x2CB593C", VA = "0x2CB593C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17035B8", Offset = "0x17035B8")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x2CB5988", Offset = "0x2CB5988", VA = "0x2CB5988", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17035F0", Offset = "0x17035F0")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x2CB59D4", Offset = "0x2CB59D4", VA = "0x2CB59D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703628", Offset = "0x1703628")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x2CB5A20", Offset = "0x2CB5A20", VA = "0x2CB5A20")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703660", Offset = "0x1703660")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x2CB5A6C", Offset = "0x2CB5A6C", VA = "0x2CB5A6C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x2CB5A74", Offset = "0x2CB5A74", VA = "0x2CB5A74")]
		public TrigonometricIK()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E80FC", Offset = "0x16E80FC")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x2000586")]
		public class References
		{
			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB238", Offset = "0x16FB238")]
			public Transform chest;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB270", Offset = "0x16FB270")]
			public Transform neck;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB2A8", Offset = "0x16FB2A8")]
			public Transform leftShoulder;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB2E0", Offset = "0x16FB2E0")]
			public Transform rightShoulder;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB318", Offset = "0x16FB318")]
			public Transform leftThigh;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB350", Offset = "0x16FB350")]
			public Transform leftCalf;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB388", Offset = "0x16FB388")]
			public Transform leftFoot;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB3C0", Offset = "0x16FB3C0")]
			public Transform leftToes;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB3F8", Offset = "0x16FB3F8")]
			public Transform rightThigh;

			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB430", Offset = "0x16FB430")]
			public Transform rightCalf;

			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB468", Offset = "0x16FB468")]
			public Transform rightFoot;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB4A0", Offset = "0x16FB4A0")]
			public Transform rightToes;

			[Token(Token = "0x170004EC")]
			public bool isFilled
			{
				[Token(Token = "0x6002235")]
				[Address(RVA = "0x2CB70EC", Offset = "0x2CB70EC", VA = "0x2CB70EC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004ED")]
			public bool isEmpty
			{
				[Token(Token = "0x6002236")]
				[Address(RVA = "0x2CB6C70", Offset = "0x2CB6C70", VA = "0x2CB6C70")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002234")]
			[Address(RVA = "0x2CB7788", Offset = "0x2CB7788", VA = "0x2CB7788")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x6002237")]
			[Address(RVA = "0x2CB674C", Offset = "0x2CB674C", VA = "0x2CB674C")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}

			[Token(Token = "0x6002238")]
			[Address(RVA = "0x2CB7780", Offset = "0x2CB7780", VA = "0x2CB7780")]
			public References()
			{
			}
		}

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x16F2C10", Offset = "0x16F2C10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2C10", Offset = "0x16F2C10")]
		public References references;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2C8C", Offset = "0x16F2C8C")]
		public IKSolverVR solver;

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x2CB6640", Offset = "0x2CB6640", VA = "0x2CB6640", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703698", Offset = "0x1703698")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x2CB668C", Offset = "0x2CB668C", VA = "0x2CB668C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17036D0", Offset = "0x17036D0")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x2CB66D8", Offset = "0x2CB66D8", VA = "0x2CB66D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703708", Offset = "0x1703708")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x2CB6724", Offset = "0x2CB6724", VA = "0x2CB6724")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703740", Offset = "0x1703740")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x2CB6BCC", Offset = "0x2CB6BCC", VA = "0x2CB6BCC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703778", Offset = "0x1703778")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x2CB6BF4", Offset = "0x2CB6BF4", VA = "0x2CB6BF4", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x2CB6BFC", Offset = "0x2CB6BFC", VA = "0x2CB6BFC", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x2CB7568", Offset = "0x2CB7568", VA = "0x2CB7568", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x2CB76E0", Offset = "0x2CB76E0", VA = "0x2CB76E0")]
		public VRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000296")]
	public class FABRIKChain
	{
		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2CC4", Offset = "0x16F2CC4")]
		public float pull;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2CDC", Offset = "0x16F2CDC")]
		public float pin;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x28DCC2C", Offset = "0x28DCC2C", VA = "0x28DCC2C")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x28DCD00", Offset = "0x28DCD00", VA = "0x28DCD00")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x28DCD20", Offset = "0x28DCD20", VA = "0x28DCD20")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x28DD0F0", Offset = "0x28DD0F0", VA = "0x28DD0F0")]
		public void Stage2(UnityEngine.Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x28DCDF4", Offset = "0x28DCDF4", VA = "0x28DCDF4")]
		private UnityEngine.Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x28DD1E8", Offset = "0x28DD1E8", VA = "0x28DD1E8")]
		public FABRIKChain()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class FBBIKArmBending : MonoBehaviour
	{
		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UnityEngine.Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEngine.Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public UnityEngine.Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x28DD408", Offset = "0x28DD408", VA = "0x28DD408")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x28DD984", Offset = "0x28DD984", VA = "0x28DD984")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x28DDB44", Offset = "0x28DDB44", VA = "0x28DDB44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x28DDC60", Offset = "0x28DDC60", VA = "0x28DDC60")]
		public FBBIKArmBending()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class FBBIKHeadEffector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000587")]
		public class BendBone
		{
			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB4D8", Offset = "0x16FB4D8")]
			public Transform transform;

			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB510", Offset = "0x16FB510")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FB510", Offset = "0x16FB510")]
			public float weight;

			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x6002239")]
			[Address(RVA = "0x350A850", Offset = "0x350A850", VA = "0x350A850")]
			public BendBone()
			{
			}

			[Token(Token = "0x600223A")]
			[Address(RVA = "0x350A8D0", Offset = "0x350A8D0", VA = "0x350A8D0")]
			public BendBone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x600223B")]
			[Address(RVA = "0x350A980", Offset = "0x350A980", VA = "0x350A980")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x600223C")]
			[Address(RVA = "0x350A9B8", Offset = "0x350A9B8", VA = "0x350A9B8")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2CF4", Offset = "0x16F2CF4")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x16F2D2C", Offset = "0x16F2D2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2D2C", Offset = "0x16F2D2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2D2C", Offset = "0x16F2D2C")]
		public float positionWeight;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2DA4", Offset = "0x16F2DA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2DA4", Offset = "0x16F2DA4")]
		public float bodyWeight;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2DF8", Offset = "0x16F2DF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2DF8", Offset = "0x16F2DF8")]
		public float thighWeight;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2E4C", Offset = "0x16F2E4C")]
		public bool handsPullBody;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x16F2E84", Offset = "0x16F2E84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2E84", Offset = "0x16F2E84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2E84", Offset = "0x16F2E84")]
		public float rotationWeight;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2EFC", Offset = "0x16F2EFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2EFC", Offset = "0x16F2EFC")]
		public float bodyClampWeight;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2F50", Offset = "0x16F2F50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2F50", Offset = "0x16F2F50")]
		public float headClampWeight;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2FA4", Offset = "0x16F2FA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F2FA4", Offset = "0x16F2FA4")]
		public float bendWeight;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F2FF8", Offset = "0x16F2FF8")]
		public BendBone[] bendBones;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x16F3030", Offset = "0x16F3030")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3030", Offset = "0x16F3030")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3030", Offset = "0x16F3030")]
		public float CCDWeight;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F30A8", Offset = "0x16F30A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F30A8", Offset = "0x16F30A8")]
		public float roll;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F30FC", Offset = "0x16F30FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F30FC", Offset = "0x16F30FC")]
		public float damper;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3154", Offset = "0x16F3154")]
		public Transform[] CCDBones;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x16F318C", Offset = "0x16F318C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F318C", Offset = "0x16F318C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F318C", Offset = "0x16F318C")]
		public float postStretchWeight;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3204", Offset = "0x16F3204")]
		public float maxStretch;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F323C", Offset = "0x16F323C")]
		public float stretchDamper;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3274", Offset = "0x16F3274")]
		public bool fixHead;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F32AC", Offset = "0x16F32AC")]
		public Transform[] stretchBones;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x16F32E4", Offset = "0x16F32E4")]
		public UnityEngine.Vector3 chestDirection;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F331C", Offset = "0x16F331C")]
		public float chestDirectionWeight;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UnityEngine.Vector3 offset;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private UnityEngine.Vector3 headToBody;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private UnityEngine.Vector3 shoulderCenterToHead;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private UnityEngine.Vector3 headToLeftThigh;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UnityEngine.Vector3 headToRightThigh;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private UnityEngine.Vector3 leftShoulderPos;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private UnityEngine.Vector3 rightShoulderPos;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private UnityEngine.Vector3 headLocalPosition;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private UnityEngine.Vector3[] stretchLocalPositions;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private UnityEngine.Vector3[] chestLocalPositions;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x28DDC68", Offset = "0x28DDC68", VA = "0x28DDC68")]
		private void Start()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x28DDFEC", Offset = "0x28DDFEC", VA = "0x28DDFEC")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x28DE4B4", Offset = "0x28DE4B4", VA = "0x28DE4B4")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x28DE884", Offset = "0x28DE884", VA = "0x28DE884")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x28DF1FC", Offset = "0x28DF1FC", VA = "0x28DF1FC")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x28DF548", Offset = "0x28DF548", VA = "0x28DF548")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x28DF8E4", Offset = "0x28DF8E4", VA = "0x28DF8E4")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x28E0350", Offset = "0x28E0350", VA = "0x28E0350")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x28DEF28", Offset = "0x28DEF28", VA = "0x28DEF28")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x28E0560", Offset = "0x28E0560", VA = "0x28E0560")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x28E020C", Offset = "0x28E020C", VA = "0x28E020C")]
		private void LerpSolverPosition(IKEffector effector, UnityEngine.Vector3 position, float weight, UnityEngine.Vector3 offset)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x28E0070", Offset = "0x28E0070", VA = "0x28E0070")]
		private void Solve(ref UnityEngine.Vector3 pos1, ref UnityEngine.Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x28E08CC", Offset = "0x28E08CC", VA = "0x28E08CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x28E0BB0", Offset = "0x28E0BB0", VA = "0x28E0BB0")]
		public FBBIKHeadEffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000299")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x2000588")]
		public class ChildConstraint
		{
			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB584", Offset = "0x16FB584")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB594", Offset = "0x16FB594")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x170004EE")]
			public float nominalDistance
			{
				[Token(Token = "0x600223D")]
				[Address(RVA = "0x350E258", Offset = "0x350E258", VA = "0x350E258")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707630", Offset = "0x1707630")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600223E")]
				[Address(RVA = "0x350E260", Offset = "0x350E260", VA = "0x350E260")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707640", Offset = "0x1707640")]
				private set
				{
				}
			}

			[Token(Token = "0x170004EF")]
			public bool isRigid
			{
				[Token(Token = "0x600223F")]
				[Address(RVA = "0x350E268", Offset = "0x350E268", VA = "0x350E268")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707650", Offset = "0x1707650")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002240")]
				[Address(RVA = "0x350E270", Offset = "0x350E270", VA = "0x350E270")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707660", Offset = "0x1707660")]
				private set
				{
				}
			}

			[Token(Token = "0x6002241")]
			[Address(RVA = "0x350E27C", Offset = "0x350E27C", VA = "0x350E27C")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x6002242")]
			[Address(RVA = "0x350B6DC", Offset = "0x350B6DC", VA = "0x350B6DC")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002243")]
			[Address(RVA = "0x350BF1C", Offset = "0x350BF1C", VA = "0x350BF1C")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002244")]
			[Address(RVA = "0x350DF54", Offset = "0x350DF54", VA = "0x350DF54")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000589")]
		public enum Smoothing
		{
			[Token(Token = "0x4001F91")]
			None,
			[Token(Token = "0x4001F92")]
			Exponential,
			[Token(Token = "0x4001F93")]
			Cubic
		}

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3334", Offset = "0x16F3334")]
		public float pin;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F334C", Offset = "0x16F334C")]
		public float pull;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3364", Offset = "0x16F3364")]
		public float push;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F337C", Offset = "0x16F337C")]
		public float pushParent;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3394", Offset = "0x16F3394")]
		public float reach;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x4001141")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x350A9E0", Offset = "0x350A9E0", VA = "0x350A9E0")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x350AB5C", Offset = "0x350AB5C", VA = "0x350AB5C")]
		public FBIKChain(float pin, float pull, params Transform[] nodeTransforms)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x350ACA8", Offset = "0x350ACA8", VA = "0x350ACA8")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x350ADDC", Offset = "0x350ADDC", VA = "0x350ADDC")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x350AEB8", Offset = "0x350AEB8", VA = "0x350AEB8")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x350AFC8", Offset = "0x350AFC8", VA = "0x350AFC8")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x350BA34", Offset = "0x350BA34", VA = "0x350BA34")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x350B15C", Offset = "0x350B15C", VA = "0x350B15C")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x350C120", Offset = "0x350C120", VA = "0x350C120")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x350C4C4", Offset = "0x350C4C4", VA = "0x350C4C4")]
		public UnityEngine.Vector3 Push(IKSolverFullBody solver)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x350C8A8", Offset = "0x350C8A8", VA = "0x350C8A8")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x350D42C", Offset = "0x350D42C", VA = "0x350D42C")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x350D9FC", Offset = "0x350D9FC", VA = "0x350D9FC")]
		public void Stage2(IKSolverFullBody solver, UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x350DC94", Offset = "0x350DC94", VA = "0x350DC94")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x350D8F4", Offset = "0x350D8F4", VA = "0x350D8F4")]
		private UnityEngine.Vector3 SolveFABRIKJoint(UnityEngine.Vector3 pos1, UnityEngine.Vector3 pos2, float length)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x350D214", Offset = "0x350D214", VA = "0x350D214")]
		protected UnityEngine.Vector3 GetDirToBendPoint(UnityEngine.Vector3 direction, UnityEngine.Vector3 bendDirection, float directionMagnitude)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x350D87C", Offset = "0x350D87C", VA = "0x350D87C")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x350DD7C", Offset = "0x350DD7C", VA = "0x350DD7C")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x350D79C", Offset = "0x350D79C", VA = "0x350D79C")]
		public void ForwardReach(UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x350DB7C", Offset = "0x350DB7C", VA = "0x350DB7C")]
		private void BackwardReach(UnityEngine.Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public class IKConstraintBend
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Vector3 direction;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F33AC", Offset = "0x16F33AC")]
		public float weight;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEngine.Vector3 defaultLocalDirection;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public UnityEngine.Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F33C4", Offset = "0x16F33C4")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x170002F5")]
		public bool initiated
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x351E00C", Offset = "0x351E00C", VA = "0x351E00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17037B0", Offset = "0x17037B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x351E014", Offset = "0x351E014", VA = "0x351E014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17037C0", Offset = "0x17037C0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x351DE44", Offset = "0x351DE44", VA = "0x351DE44")]
		public bool IsValid(IKSolverFullBody solver, Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x350AAD8", Offset = "0x350AAD8", VA = "0x350AAD8")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x351E020", Offset = "0x351E020", VA = "0x351E020")]
		public IKConstraintBend(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x350B734", Offset = "0x350B734", VA = "0x350B734")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x350B784", Offset = "0x350B784", VA = "0x350B784")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x351E314", Offset = "0x351E314", VA = "0x351E314")]
		public void SetLimbOrientation(UnityEngine.Vector3 upper, UnityEngine.Vector3 lower, UnityEngine.Vector3 last)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x351E54C", Offset = "0x351E54C", VA = "0x351E54C")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x350CC10", Offset = "0x350CC10", VA = "0x350CC10")]
		public UnityEngine.Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x351E0D4", Offset = "0x351E0D4", VA = "0x351E0D4")]
		private UnityEngine.Vector3 OrthoToLimb(IKSolverFullBody solver, UnityEngine.Vector3 tangent)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x351E1F4", Offset = "0x351E1F4", VA = "0x351E1F4")]
		private UnityEngine.Vector3 OrthoToBone1(IKSolverFullBody solver, UnityEngine.Vector3 tangent)
		{
			return default(UnityEngine.Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200029B")]
	public class IKEffector
	{
		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F33D4", Offset = "0x16F33D4")]
		public float positionWeight;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F33EC", Offset = "0x16F33EC")]
		public float rotationWeight;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 position;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public UnityEngine.Vector3 positionOffset;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F3404", Offset = "0x16F3404")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3414", Offset = "0x16F3414")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UnityEngine.Vector3[] localPositions;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private UnityEngine.Vector3 animatedPosition;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x170002F6")]
		public bool isEndEffector
		{
			[Token(Token = "0x6001460")]
			[Address(RVA = "0x351EA50", Offset = "0x351EA50", VA = "0x351EA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17037D0", Offset = "0x17037D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001461")]
			[Address(RVA = "0x351EA58", Offset = "0x351EA58", VA = "0x351EA58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17037E0", Offset = "0x17037E0")]
			private set
			{
			}
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x351E9E8", Offset = "0x351E9E8", VA = "0x351E9E8")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x351EA64", Offset = "0x351EA64", VA = "0x351EA64")]
		public void PinToBone(float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x351EB38", Offset = "0x351EB38", VA = "0x351EB38")]
		public IKEffector()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x351ECA4", Offset = "0x351ECA4", VA = "0x351ECA4")]
		public IKEffector(Transform bone, Transform[] childBones)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x351EE4C", Offset = "0x351EE4C", VA = "0x351EE4C")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x351F148", Offset = "0x351F148", VA = "0x351F148")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x351F420", Offset = "0x351F420", VA = "0x351F420")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x351F560", Offset = "0x351F560", VA = "0x351F560")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x351F60C", Offset = "0x351F60C", VA = "0x351F60C")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x351FC60", Offset = "0x351FC60", VA = "0x351FC60")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x351FCD0", Offset = "0x351FCD0", VA = "0x351FCD0")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x351FEE8", Offset = "0x351FEE8", VA = "0x351FEE8")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x3520230", Offset = "0x3520230", VA = "0x3520230")]
		private UnityEngine.Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(UnityEngine.Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x200029C")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x200058A")]
		public class BoneMap
		{
			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEngine.Vector3 defaultLocalPosition;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public UnityEngine.Vector3 localSwingAxis;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public UnityEngine.Vector3 localTwistAxis;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public UnityEngine.Vector3 planePosition;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public UnityEngine.Vector3 ikPosition;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x170004F0")]
			public UnityEngine.Vector3 swingDirection
			{
				[Token(Token = "0x6002246")]
				[Address(RVA = "0x3520A44", Offset = "0x3520A44", VA = "0x3520A44")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x170004F1")]
			public bool isNodeBone
			{
				[Token(Token = "0x6002249")]
				[Address(RVA = "0x3520BB0", Offset = "0x3520BB0", VA = "0x3520BB0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004F2")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x600225D")]
				[Address(RVA = "0x35211C0", Offset = "0x35211C0", VA = "0x35211C0")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6002245")]
			[Address(RVA = "0x35209F4", Offset = "0x35209F4", VA = "0x35209F4")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002247")]
			[Address(RVA = "0x3520B10", Offset = "0x3520B10", VA = "0x3520B10")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6002248")]
			[Address(RVA = "0x3520B60", Offset = "0x3520B60", VA = "0x3520B60")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x600224A")]
			[Address(RVA = "0x3520BC0", Offset = "0x3520BC0", VA = "0x3520BC0")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x600224B")]
			[Address(RVA = "0x3520CA8", Offset = "0x3520CA8", VA = "0x3520CA8")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x600224C")]
			[Address(RVA = "0x3520CB0", Offset = "0x3520CB0", VA = "0x3520CB0")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x600224D")]
			[Address(RVA = "0x3520E40", Offset = "0x3520E40", VA = "0x3520E40")]
			public void SetLocalTwistAxis(UnityEngine.Vector3 twistDirection, UnityEngine.Vector3 normalDirection)
			{
			}

			[Token(Token = "0x600224E")]
			[Address(RVA = "0x3520F4C", Offset = "0x3520F4C", VA = "0x3520F4C")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x600224F")]
			[Address(RVA = "0x3521010", Offset = "0x3521010", VA = "0x3521010")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x6002250")]
			[Address(RVA = "0x35213E4", Offset = "0x35213E4", VA = "0x35213E4")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x6002251")]
			[Address(RVA = "0x352141C", Offset = "0x352141C", VA = "0x352141C")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x6002252")]
			[Address(RVA = "0x3521454", Offset = "0x3521454", VA = "0x3521454")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x6002253")]
			[Address(RVA = "0x352147C", Offset = "0x352147C", VA = "0x352147C")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x6002254")]
			[Address(RVA = "0x35215A8", Offset = "0x35215A8", VA = "0x35215A8")]
			public UnityEngine.Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x6002255")]
			[Address(RVA = "0x35218F0", Offset = "0x35218F0", VA = "0x35218F0")]
			public void PositionToPlane(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002256")]
			[Address(RVA = "0x3521920", Offset = "0x3521920", VA = "0x3521920")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6002257")]
			[Address(RVA = "0x3521AB8", Offset = "0x3521AB8", VA = "0x3521AB8")]
			public void Swing(UnityEngine.Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x6002258")]
			[Address(RVA = "0x3521B28", Offset = "0x3521B28", VA = "0x3521B28")]
			public void Swing(UnityEngine.Vector3 pos1, UnityEngine.Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x6002259")]
			[Address(RVA = "0x3521D6C", Offset = "0x3521D6C", VA = "0x3521D6C")]
			public void Twist(UnityEngine.Vector3 twistDirection, UnityEngine.Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x600225A")]
			[Address(RVA = "0x3521F94", Offset = "0x3521F94", VA = "0x3521F94")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x600225B")]
			[Address(RVA = "0x35220AC", Offset = "0x35220AC", VA = "0x35220AC")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x600225C")]
			[Address(RVA = "0x35216EC", Offset = "0x35216EC", VA = "0x35216EC")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600225E")]
			[Address(RVA = "0x3522248", Offset = "0x3522248", VA = "0x3522248")]
			public BoneMap()
			{
			}
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x35207A8", Offset = "0x35207A8", VA = "0x35207A8", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x35207B0", Offset = "0x35207B0", VA = "0x35207B0", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x35207B4", Offset = "0x35207B4", VA = "0x35207B4")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x35208E4", Offset = "0x35208E4", VA = "0x35208E4")]
		protected UnityEngine.Vector3 SolveFABRIKJoint(UnityEngine.Vector3 pos1, UnityEngine.Vector3 pos2, float length)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x35209EC", Offset = "0x35209EC", VA = "0x35209EC")]
		public IKMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029D")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F342C", Offset = "0x16F342C")]
		public float maintainRotationWeight;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x3522264", Offset = "0x3522264", VA = "0x3522264", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x3522310", Offset = "0x3522310", VA = "0x3522310")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x35223A0", Offset = "0x35223A0", VA = "0x35223A0")]
		public IKMappingBone(Transform bone)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x352244C", Offset = "0x352244C", VA = "0x352244C")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x3522464", Offset = "0x3522464", VA = "0x3522464")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x3522480", Offset = "0x3522480", VA = "0x3522480", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x352252C", Offset = "0x352252C", VA = "0x352252C")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x3522544", Offset = "0x3522544", VA = "0x3522544")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029E")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x200058B")]
		public enum BoneMapType
		{
			[Token(Token = "0x4001FAB")]
			Parent,
			[Token(Token = "0x4001FAC")]
			Bone1,
			[Token(Token = "0x4001FAD")]
			Bone2,
			[Token(Token = "0x4001FAE")]
			Bone3
		}

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3444", Offset = "0x16F3444")]
		public float maintainRotationWeight;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F345C", Offset = "0x16F345C")]
		public float weight;

		[NonSerialized]
		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updatePlaneRotations;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMapParent;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap1;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap2;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap boneMap3;

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x3644BF4", Offset = "0x3644BF4", VA = "0x3644BF4", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x3644C98", Offset = "0x3644C98", VA = "0x3644C98")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x3644D6C", Offset = "0x3644D6C", VA = "0x3644D6C")]
		public void SetLimbOrientation(UnityEngine.Vector3 upper, UnityEngine.Vector3 lower)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x36450C0", Offset = "0x36450C0", VA = "0x36450C0")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x36451B8", Offset = "0x36451B8", VA = "0x36451B8")]
		public IKMappingLimb(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x36452E8", Offset = "0x36452E8", VA = "0x36452E8")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x364534C", Offset = "0x364534C", VA = "0x364534C")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x3645404", Offset = "0x3645404", VA = "0x3645404")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x36454CC", Offset = "0x36454CC", VA = "0x36454CC", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x364575C", Offset = "0x364575C", VA = "0x364575C")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x3645820", Offset = "0x3645820", VA = "0x3645820")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029F")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3474", Offset = "0x16F3474")]
		public int iterations;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F348C", Offset = "0x16F348C")]
		public float twistWeight;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x36459FC", Offset = "0x36459FC", VA = "0x36459FC", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x3645D0C", Offset = "0x3645D0C", VA = "0x3645D0C")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x3645E24", Offset = "0x3645E24", VA = "0x3645E24")]
		public IKMappingSpine(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x3645F7C", Offset = "0x3645F7C", VA = "0x3645F7C")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x3645FFC", Offset = "0x3645FFC", VA = "0x3645FFC")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x3646068", Offset = "0x3646068", VA = "0x3646068")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x36460EC", Offset = "0x36460EC", VA = "0x36460EC", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x364678C", Offset = "0x364678C", VA = "0x364678C")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x36467C4", Offset = "0x36467C4", VA = "0x36467C4")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x3646AB8", Offset = "0x3646AB8", VA = "0x3646AB8")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x3646E6C", Offset = "0x3646E6C", VA = "0x3646E6C")]
		public void ForwardReach(UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x3646F60", Offset = "0x3646F60", VA = "0x3646F60")]
		private void BackwardReach(UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x3647030", Offset = "0x3647030", VA = "0x3647030")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A0")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x200058C")]
		public class Point
		{
			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FB5A4", Offset = "0x16FB5A4")]
			public float weight;

			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public UnityEngine.Vector3 solverPosition;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public UnityEngine.Vector3 defaultLocalPosition;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x600225F")]
			[Address(RVA = "0x3648D68", Offset = "0x3648D68", VA = "0x3648D68")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6002260")]
			[Address(RVA = "0x3648DB8", Offset = "0x3648DB8", VA = "0x3648DB8")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6002261")]
			[Address(RVA = "0x3648F40", Offset = "0x3648F40", VA = "0x3648F40")]
			public void UpdateSolverPosition()
			{
			}

			[Token(Token = "0x6002262")]
			[Address(RVA = "0x3648F78", Offset = "0x3648F78", VA = "0x3648F78")]
			public void UpdateSolverLocalPosition()
			{
			}

			[Token(Token = "0x6002263")]
			[Address(RVA = "0x3648FB0", Offset = "0x3648FB0", VA = "0x3648FB0")]
			public void UpdateSolverState()
			{
			}

			[Token(Token = "0x6002264")]
			[Address(RVA = "0x3649000", Offset = "0x3649000", VA = "0x3649000")]
			public void UpdateSolverLocalState()
			{
			}

			[Token(Token = "0x6002265")]
			[Address(RVA = "0x3648810", Offset = "0x3648810", VA = "0x3648810")]
			public Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200058D")]
		public class Bone : Point
		{
			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public UnityEngine.Vector3 axis;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x170004F3")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x6002266")]
				[Address(RVA = "0x3647DCC", Offset = "0x3647DCC", VA = "0x3647DCC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002267")]
				[Address(RVA = "0x3647EC8", Offset = "0x3647EC8", VA = "0x3647EC8")]
				set
				{
				}
			}

			[Token(Token = "0x6002268")]
			[Address(RVA = "0x3647F5C", Offset = "0x3647F5C", VA = "0x3647F5C")]
			public void Swing(UnityEngine.Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6002269")]
			[Address(RVA = "0x364821C", Offset = "0x364821C", VA = "0x364821C")]
			public static void SolverSwing(Bone[] bones, int index, UnityEngine.Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600226A")]
			[Address(RVA = "0x36484FC", Offset = "0x36484FC", VA = "0x36484FC")]
			public void Swing2D(UnityEngine.Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600226B")]
			[Address(RVA = "0x3648764", Offset = "0x3648764", VA = "0x3648764")]
			public void SetToSolverPosition()
			{
			}

			[Token(Token = "0x600226C")]
			[Address(RVA = "0x364878C", Offset = "0x364878C", VA = "0x364878C")]
			public Bone()
			{
			}

			[Token(Token = "0x600226D")]
			[Address(RVA = "0x3648890", Offset = "0x3648890", VA = "0x3648890")]
			public Bone(Transform transform)
			{
			}

			[Token(Token = "0x600226E")]
			[Address(RVA = "0x3648930", Offset = "0x3648930", VA = "0x3648930")]
			public Bone(Transform transform, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200058E")]
		public class Node : Point
		{
			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public UnityEngine.Vector3 offset;

			[Token(Token = "0x600226F")]
			[Address(RVA = "0x3648CF0", Offset = "0x3648CF0", VA = "0x3648CF0")]
			public Node()
			{
			}

			[Token(Token = "0x6002270")]
			[Address(RVA = "0x3648CF4", Offset = "0x3648CF4", VA = "0x3648CF4")]
			public Node(Transform transform)
			{
			}

			[Token(Token = "0x6002271")]
			[Address(RVA = "0x3648D24", Offset = "0x3648D24", VA = "0x3648D24")]
			public Node(Transform transform, float weight)
			{
			}
		}

		[Token(Token = "0x200058F")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x2000590")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public UnityEngine.Vector3 IKPosition;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F34B4", Offset = "0x16F34B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F34B4", Offset = "0x16F34B4")]
		public float IKPositionWeight;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F3508", Offset = "0x16F3508")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool firstInitiation;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected Transform root;

		[Token(Token = "0x170002F7")]
		public bool initiated
		{
			[Token(Token = "0x600149C")]
			[Address(RVA = "0x364781C", Offset = "0x364781C", VA = "0x364781C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17037F0", Offset = "0x17037F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600149D")]
			[Address(RVA = "0x3647824", Offset = "0x3647824", VA = "0x3647824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703800", Offset = "0x1703800")]
			private set
			{
			}
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x3647328", Offset = "0x3647328", VA = "0x3647328")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001494")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x36473A4", Offset = "0x36473A4", VA = "0x36473A4")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x3647708", Offset = "0x3647708", VA = "0x3647708")]
		public void Update()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x3647770", Offset = "0x3647770", VA = "0x3647770", Slot = "5")]
		public virtual UnityEngine.Vector3 GetIKPosition()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x364777C", Offset = "0x364777C", VA = "0x364777C")]
		public void SetIKPosition(UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x3647788", Offset = "0x3647788", VA = "0x3647788")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x3647790", Offset = "0x3647790", VA = "0x3647790")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x3647814", Offset = "0x3647814", VA = "0x3647814")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x600149E")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x600149F")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x60014A0")]
		public abstract void FixTransforms();

		[Token(Token = "0x60014A1")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x60014A2")]
		protected abstract void OnInitiate();

		[Token(Token = "0x60014A3")]
		protected abstract void OnUpdate();

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x3647830", Offset = "0x3647830", VA = "0x3647830")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x3647848", Offset = "0x3647848", VA = "0x3647848")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x3647984", Offset = "0x3647984", VA = "0x3647984")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x3647A30", Offset = "0x3647A30", VA = "0x3647A30")]
		protected static float PreSolveBones(ref Bone[] bones)
		{
			return default(float);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x3647DB4", Offset = "0x3647DB4", VA = "0x3647DB4")]
		protected IKSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A1")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEngine.Vector3 axis;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public UnityEngine.Vector3 poleAxis;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEngine.Vector3 polePosition;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3550", Offset = "0x16F3550")]
		public float poleWeight;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3568", Offset = "0x16F3568")]
		public float clampWeight;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3580", Offset = "0x16F3580")]
		public int clampSmoothing;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private UnityEngine.Vector3 clampedIKPosition;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x170002F8")]
		public UnityEngine.Vector3 transformAxis
		{
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0x364919C", Offset = "0x364919C", VA = "0x364919C")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170002F9")]
		public UnityEngine.Vector3 transformPoleAxis
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0x3649268", Offset = "0x3649268", VA = "0x3649268")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x170002FA")]
		protected override int minBones
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0x3649FF8", Offset = "0x3649FF8", VA = "0x3649FF8", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002FB")]
		protected override UnityEngine.Vector3 localDirection
		{
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0x364A59C", Offset = "0x364A59C", VA = "0x364A59C", Slot = "15")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x364909C", Offset = "0x364909C", VA = "0x364909C")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x3649334", Offset = "0x3649334", VA = "0x3649334", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x36495B4", Offset = "0x36495B4", VA = "0x36495B4", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x3649F44", Offset = "0x3649F44", VA = "0x3649F44")]
		private void Solve()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x3649B6C", Offset = "0x3649B6C", VA = "0x3649B6C")]
		private UnityEngine.Vector3 GetClampedIKPosition()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x364A000", Offset = "0x364A000", VA = "0x364A000")]
		private void RotateToTarget(UnityEngine.Vector3 targetPosition, Bone bone, float weight)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x364A610", Offset = "0x364A610", VA = "0x364A610")]
		public IKSolverAim()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A2")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3598", Offset = "0x16F3598")]
		public float IKRotationWeight;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private UnityEngine.Vector3[] positions;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x364A72C", Offset = "0x364A72C", VA = "0x364A72C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x364AAE8", Offset = "0x364AAE8", VA = "0x364AAE8")]
		public bool SetChain(Transform chest, Transform shoulder, Transform upperArm, Transform forearm, Transform hand, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x364AB9C", Offset = "0x364AB9C", VA = "0x364AB9C", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x364AD34", Offset = "0x364AD34", VA = "0x364AD34", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x364AECC", Offset = "0x364AECC", VA = "0x364AECC", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x364AF18", Offset = "0x364AF18", VA = "0x364AF18", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x364AF78", Offset = "0x364AF78", VA = "0x364AF78", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x364B2E8", Offset = "0x364B2E8", VA = "0x364B2E8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x364B314", Offset = "0x364B314", VA = "0x364B314")]
		private void Solve()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x364AFDC", Offset = "0x364AFDC", VA = "0x364AFDC")]
		private void Read()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x364B380", Offset = "0x364B380", VA = "0x364B380")]
		private void Write()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x364B50C", Offset = "0x364B50C", VA = "0x364B50C")]
		public IKSolverArm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A3")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x364B6BC", Offset = "0x364B6BC", VA = "0x364B6BC")]
		public void FadeOutBoneWeights()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x364B76C", Offset = "0x364B76C", VA = "0x364B76C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x364BD60", Offset = "0x364BD60", VA = "0x364BD60", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x364C4B0", Offset = "0x364C4B0", VA = "0x364C4B0")]
		protected void Solve(UnityEngine.Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x364CC04", Offset = "0x364CC04", VA = "0x364CC04")]
		public IKSolverCCD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A4")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UnityEngine.Vector3[] solverLocalPositions;

		[Token(Token = "0x170002FC")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x364DE40", Offset = "0x364DE40", VA = "0x364DE40", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x364CC08", Offset = "0x364CC08", VA = "0x364CC08")]
		public void SolveForward(UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x364D350", Offset = "0x364D350", VA = "0x364D350")]
		public void SolveBackward(UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x364D488", Offset = "0x364D488", VA = "0x364D488", Slot = "5")]
		public override UnityEngine.Vector3 GetIKPosition()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x364D520", Offset = "0x364D520", VA = "0x364D520", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x364DAE0", Offset = "0x364DAE0", VA = "0x364DAE0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x364DE48", Offset = "0x364DE48", VA = "0x364DE48")]
		private UnityEngine.Vector3 SolveJoint(UnityEngine.Vector3 pos1, UnityEngine.Vector3 pos2, float length)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x364CCDC", Offset = "0x364CCDC", VA = "0x364CCDC")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x364D434", Offset = "0x364D434", VA = "0x364D434")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x364DDE4", Offset = "0x364DDE4", VA = "0x364DDE4")]
		private void Solve(UnityEngine.Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x364D178", Offset = "0x364D178", VA = "0x364D178")]
		private void ForwardReach(UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x364E688", Offset = "0x364E688", VA = "0x364E688")]
		private void SolverMove(int index, UnityEngine.Vector3 offset)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x364E798", Offset = "0x364E798", VA = "0x364E798")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x364E8C4", Offset = "0x364E8C4", VA = "0x364E8C4")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x364E9DC", Offset = "0x364E9DC", VA = "0x364E9DC")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x364D848", Offset = "0x364D848", VA = "0x364D848")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x364D994", Offset = "0x364D994", VA = "0x364D994")]
		private UnityEngine.Vector3 GetParentSolverPosition(int index)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x364EBC8", Offset = "0x364EBC8", VA = "0x364EBC8")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x364E100", Offset = "0x364E100", VA = "0x364E100")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x364D424", Offset = "0x364D424", VA = "0x364D424")]
		private void BackwardReach(UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x364F330", Offset = "0x364F330", VA = "0x364F330")]
		private void BackwardReachUnlimited(UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x364ED9C", Offset = "0x364ED9C", VA = "0x364ED9C")]
		private void BackwardReachLimited(UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x364DF60", Offset = "0x364DF60", VA = "0x364DF60")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x364E03C", Offset = "0x364E03C", VA = "0x364E03C")]
		private void MapToSolverPositionsLimited()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x364F3FC", Offset = "0x364F3FC", VA = "0x364F3FC")]
		public IKSolverFABRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A5")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F35B0", Offset = "0x16F35B0")]
		public float rootPin;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.Vector3 rootDefaultPosition;

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x364F488", Offset = "0x364F488", VA = "0x364F488", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x364FE60", Offset = "0x364FE60", VA = "0x364FE60", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x364FEF8", Offset = "0x364FEF8", VA = "0x364FEF8", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x364FF98", Offset = "0x364FF98", VA = "0x364FF98", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x36500A8", Offset = "0x36500A8", VA = "0x36500A8")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x3650144", Offset = "0x3650144", VA = "0x3650144", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x36506AC", Offset = "0x36506AC", VA = "0x36506AC", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x36508C4", Offset = "0x36508C4", VA = "0x36508C4", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x365075C", Offset = "0x365075C", VA = "0x365075C")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x3650378", Offset = "0x3650378", VA = "0x3650378")]
		private UnityEngine.Vector3 GetCentroid()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x365095C", Offset = "0x365095C", VA = "0x365095C")]
		public IKSolverFABRIKRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A6")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F35C8", Offset = "0x16F35C8")]
		public int iterations;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x36509E0", Offset = "0x36509E0", VA = "0x36509E0")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x3650AD4", Offset = "0x3650AD4", VA = "0x3650AD4")]
		public FBIKChain GetChain(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x3650B30", Offset = "0x3650B30", VA = "0x3650B30")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x36459A0", Offset = "0x36459A0", VA = "0x36459A0")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x3650C64", Offset = "0x3650C64", VA = "0x3650C64")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x3650CE4", Offset = "0x3650CE4", VA = "0x3650CE4", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x3650E94", Offset = "0x3650E94", VA = "0x3650E94", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x3651008", Offset = "0x3651008", VA = "0x3651008", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x3651210", Offset = "0x3651210", VA = "0x3651210", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x36512DC", Offset = "0x36512DC", VA = "0x36512DC", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x36513BC", Offset = "0x36513BC", VA = "0x36513BC", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x3651530", Offset = "0x3651530", VA = "0x3651530", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x36516EC", Offset = "0x36516EC", VA = "0x36516EC", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x3651930", Offset = "0x3651930", VA = "0x3651930", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x3651C00", Offset = "0x3651C00", VA = "0x3651C00", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x3651C44", Offset = "0x3651C44", VA = "0x3651C44", Slot = "15")]
		protected virtual void WritePose()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x3651D2C", Offset = "0x3651D2C", VA = "0x3651D2C")]
		public IKSolverFullBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A7")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x40011CB")]
		Body,
		[Token(Token = "0x40011CC")]
		LeftShoulder,
		[Token(Token = "0x40011CD")]
		RightShoulder,
		[Token(Token = "0x40011CE")]
		LeftThigh,
		[Token(Token = "0x40011CF")]
		RightThigh,
		[Token(Token = "0x40011D0")]
		LeftHand,
		[Token(Token = "0x40011D1")]
		RightHand,
		[Token(Token = "0x40011D2")]
		LeftFoot,
		[Token(Token = "0x40011D3")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x20002A8")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x40011D5")]
		LeftArm,
		[Token(Token = "0x40011D6")]
		RightArm,
		[Token(Token = "0x40011D7")]
		LeftLeg,
		[Token(Token = "0x40011D8")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F35E0", Offset = "0x16F35E0")]
		public float spineStiffness;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F35F8", Offset = "0x16F35F8")]
		public float pullBodyVertical;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3610", Offset = "0x16F3610")]
		public float pullBodyHorizontal;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F3628", Offset = "0x16F3628")]
		private UnityEngine.Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private UnityEngine.Vector3 offset;

		[Token(Token = "0x170002FD")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x3651E48", Offset = "0x3651E48", VA = "0x3651E48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x3651F90", Offset = "0x3651F90", VA = "0x3651F90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FF")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x3651F98", Offset = "0x3651F98", VA = "0x3651F98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x3651FA0", Offset = "0x3651FA0", VA = "0x3651FA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x3651FA8", Offset = "0x3651FA8", VA = "0x3651FA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x3651FB0", Offset = "0x3651FB0", VA = "0x3651FB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0x3651FB8", Offset = "0x3651FB8", VA = "0x3651FB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x6001501")]
			[Address(RVA = "0x3651FC0", Offset = "0x3651FC0", VA = "0x3651FC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0x3651FC8", Offset = "0x3651FC8", VA = "0x3651FC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x3651FD0", Offset = "0x3651FD0", VA = "0x3651FD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000307")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x3652008", Offset = "0x3652008", VA = "0x3652008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		public FBIKChain leftLegChain
		{
			[Token(Token = "0x6001505")]
			[Address(RVA = "0x3652040", Offset = "0x3652040", VA = "0x3652040")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000309")]
		public FBIKChain rightLegChain
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0x3652078", Offset = "0x3652078", VA = "0x3652078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x6001507")]
			[Address(RVA = "0x36520B0", Offset = "0x36520B0", VA = "0x36520B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0x36520E4", Offset = "0x36520E4", VA = "0x36520E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x6001509")]
			[Address(RVA = "0x365211C", Offset = "0x365211C", VA = "0x365211C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0x3652154", Offset = "0x3652154", VA = "0x3652154")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x365218C", Offset = "0x365218C", VA = "0x365218C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		public UnityEngine.Vector3 pullBodyOffset
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0x36543E8", Offset = "0x36543E8", VA = "0x36543E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703810", Offset = "0x1703810")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x36543F4", Offset = "0x36543F4", VA = "0x36543F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703820", Offset = "0x1703820")]
			private set
			{
			}
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x36521C0", Offset = "0x36521C0", VA = "0x36521C0")]
		public void SetChainWeights(FullBodyBipedChain c, float pull, float reach = 0f)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x36522CC", Offset = "0x36522CC", VA = "0x36522CC")]
		public void SetEffectorWeights(FullBodyBipedEffector effector, float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x3652214", Offset = "0x3652214", VA = "0x3652214")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x36523A8", Offset = "0x36523A8", VA = "0x36523A8")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x3651E50", Offset = "0x3651E50", VA = "0x3651E50")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x3652478", Offset = "0x3652478", VA = "0x3652478")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x3652530", Offset = "0x3652530", VA = "0x3652530")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x36525E4", Offset = "0x36525E4", VA = "0x36525E4")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x3652698", Offset = "0x3652698", VA = "0x3652698")]
		public IKMappingSpine GetSpineMapping()
		{
			return null;
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x36526A0", Offset = "0x36526A0", VA = "0x36526A0")]
		public IKMappingBone GetHeadMapping()
		{
			return null;
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x36526D4", Offset = "0x36526D4", VA = "0x36526D4")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x365279C", Offset = "0x365279C", VA = "0x365279C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x3652930", Offset = "0x3652930", VA = "0x3652930")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x3653D04", Offset = "0x3653D04", VA = "0x3653D04")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x3654198", Offset = "0x3654198", VA = "0x3654198")]
		public void SetLimbOrientations(BipedLimbOrientations o)
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x36541F8", Offset = "0x36541F8", VA = "0x36541F8")]
		private void SetLimbOrientation(FullBodyBipedChain chain, BipedLimbOrientations.LimbOrientation limbOrientation)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x3654018", Offset = "0x3654018", VA = "0x3654018")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x36540D8", Offset = "0x36540D8", VA = "0x36540D8")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x3654400", Offset = "0x3654400", VA = "0x3654400")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x36544DC", Offset = "0x36544DC", VA = "0x36544DC", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x3654624", Offset = "0x3654624", VA = "0x3654624")]
		private void PullBody()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x36547B4", Offset = "0x36547B4", VA = "0x36547B4")]
		private UnityEngine.Vector3 GetBodyOffset()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x36549B4", Offset = "0x36549B4", VA = "0x36549B4")]
		private UnityEngine.Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, UnityEngine.Vector3 offset)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x3654BB4", Offset = "0x3654BB4", VA = "0x3654BB4", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x3654EE8", Offset = "0x3654EE8", VA = "0x3654EE8", Slot = "15")]
		protected override void WritePose()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x3654FE8", Offset = "0x3654FE8", VA = "0x3654FE8")]
		public IKSolverFullBodyBiped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AA")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected UnityEngine.Vector3 lastLocalDirection;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x17000310")]
		protected virtual int minBones
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x3655874", Offset = "0x3655874", VA = "0x3655874", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000311")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0x365587C", Offset = "0x365587C", VA = "0x365587C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000312")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x3655884", Offset = "0x3655884", VA = "0x3655884", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000313")]
		protected virtual UnityEngine.Vector3 localDirection
		{
			[Token(Token = "0x6001535")]
			[Address(RVA = "0x3655894", Offset = "0x3655894", VA = "0x3655894", Slot = "15")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x17000314")]
		protected float positionOffset
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0x364C3EC", Offset = "0x364C3EC", VA = "0x364C3EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x3654FF4", Offset = "0x3654FF4", VA = "0x3654FF4")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x36551A0", Offset = "0x36551A0", VA = "0x36551A0")]
		public void AddBone(Transform bone)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x3655304", Offset = "0x3655304", VA = "0x3655304", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x365536C", Offset = "0x365536C", VA = "0x365536C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x36553E8", Offset = "0x36553E8", VA = "0x36553E8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x3655778", Offset = "0x3655778", VA = "0x3655778", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x3655780", Offset = "0x3655780", VA = "0x3655780", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x365588C", Offset = "0x365588C", VA = "0x365588C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x3655890", Offset = "0x3655890", VA = "0x3655890", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x364B7EC", Offset = "0x364B7EC", VA = "0x364B7EC")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x364C054", Offset = "0x364C054", VA = "0x364C054")]
		protected UnityEngine.Vector3 GetSingularityOffset()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x36559C8", Offset = "0x36559C8", VA = "0x36559C8")]
		private bool SingularityDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x364A6A4", Offset = "0x364A6A4", VA = "0x364A6A4")]
		public IKSolverHeuristic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AB")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3638", Offset = "0x16F3638")]
		public float IKRotationWeight;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEngine.Vector3 heelOffset;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private UnityEngine.Vector3[] positions;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x3655C7C", Offset = "0x3655C7C", VA = "0x3655C7C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x3656038", Offset = "0x3656038", VA = "0x3656038")]
		public bool SetChain(Transform pelvis, Transform thigh, Transform calf, Transform foot, Transform toe, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x36560EC", Offset = "0x36560EC", VA = "0x36560EC", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x3656284", Offset = "0x3656284", VA = "0x3656284", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x365641C", Offset = "0x365641C", VA = "0x365641C", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x3656468", Offset = "0x3656468", VA = "0x3656468", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x36564C8", Offset = "0x36564C8", VA = "0x36564C8", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x3656838", Offset = "0x3656838", VA = "0x3656838", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x3656864", Offset = "0x3656864", VA = "0x3656864")]
		private void Solve()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x365652C", Offset = "0x365652C", VA = "0x365652C")]
		private void Read()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x365696C", Offset = "0x365696C", VA = "0x365696C")]
		private void Write()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x3656AF8", Offset = "0x3656AF8", VA = "0x3656AF8")]
		public IKSolverLeg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AC")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x2000591")]
		public enum BendModifier
		{
			[Token(Token = "0x4001FBF")]
			Animation,
			[Token(Token = "0x4001FC0")]
			Target,
			[Token(Token = "0x4001FC1")]
			Parent,
			[Token(Token = "0x4001FC2")]
			Arm,
			[Token(Token = "0x4001FC3")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x2000592")]
		public struct AxisDirection
		{
			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Vector3 direction;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public UnityEngine.Vector3 axis;

			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x600227A")]
			[Address(RVA = "0x365835C", Offset = "0x365835C", VA = "0x365835C")]
			public AxisDirection(UnityEngine.Vector3 direction, UnityEngine.Vector3 axis)
			{
			}
		}

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3650", Offset = "0x16F3650")]
		public float maintainRotationWeight;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3668", Offset = "0x16F3668")]
		public float bendModifierWeight;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private UnityEngine.Vector3 _bendNormal;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private UnityEngine.Vector3 animationNormal;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x17000315")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x600154D")]
			[Address(RVA = "0x3658340", Offset = "0x3658340", VA = "0x3658340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x3656CA8", Offset = "0x3656CA8", VA = "0x3656CA8")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x3656CF8", Offset = "0x3656CF8", VA = "0x3656CF8")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x3656D44", Offset = "0x3656D44", VA = "0x3656D44", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x36573AC", Offset = "0x36573AC", VA = "0x36573AC", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x3657F8C", Offset = "0x3657F8C", VA = "0x3657F8C", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x36580D4", Offset = "0x36580D4", VA = "0x36580D4")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x36582A0", Offset = "0x36582A0", VA = "0x36582A0")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x36570B8", Offset = "0x36570B8", VA = "0x36570B8")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x36574D8", Offset = "0x36574D8", VA = "0x36574D8")]
		private UnityEngine.Vector3 GetModifiedBendNormal()
		{
			return default(UnityEngine.Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20002AD")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000593")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public UnityEngine.Vector3 baseForwardOffsetEuler;

			[Token(Token = "0x170004F4")]
			public UnityEngine.Vector3 forward
			{
				[Token(Token = "0x600227F")]
				[Address(RVA = "0x365A4A4", Offset = "0x365A4A4", VA = "0x365A4A4")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x600227B")]
			[Address(RVA = "0x365AC54", Offset = "0x365AC54", VA = "0x365AC54")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x600227C")]
			[Address(RVA = "0x36595F8", Offset = "0x36595F8", VA = "0x36595F8")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x600227D")]
			[Address(RVA = "0x365997C", Offset = "0x365997C", VA = "0x365997C")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x600227E")]
			[Address(RVA = "0x365A8A8", Offset = "0x365A8A8", VA = "0x365A8A8")]
			public void LookAt(UnityEngine.Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3680", Offset = "0x16F3680")]
		public float bodyWeight;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3698", Offset = "0x16F3698")]
		public float headWeight;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F36B0", Offset = "0x16F36B0")]
		public float eyesWeight;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F36C8", Offset = "0x16F36C8")]
		public float clampWeight;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F36E0", Offset = "0x16F36E0")]
		public float clampWeightHead;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F36F8", Offset = "0x16F36F8")]
		public float clampWeightEyes;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3710", Offset = "0x16F3710")]
		public int clampSmoothing;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEngine.Vector3 spineTargetOffset;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected UnityEngine.Vector3[] spineForwards;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected UnityEngine.Vector3[] headForwards;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected UnityEngine.Vector3[] eyeForward;

		[Token(Token = "0x17000316")]
		protected bool spineIsValid
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0x3658CE8", Offset = "0x3658CE8", VA = "0x3658CE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000317")]
		protected bool spineIsEmpty
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x3658EC0", Offset = "0x3658EC0", VA = "0x3658EC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000318")]
		protected bool headIsValid
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x3658DCC", Offset = "0x3658DCC", VA = "0x3658DCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000319")]
		protected bool headIsEmpty
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x3658EE4", Offset = "0x3658EE4", VA = "0x3658EE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031A")]
		protected bool eyesIsValid
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0x3658DDC", Offset = "0x3658DDC", VA = "0x3658DDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031B")]
		protected bool eyesIsEmpty
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0x3658F60", Offset = "0x3658F60", VA = "0x3658F60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x36583BC", Offset = "0x36583BC", VA = "0x36583BC")]
		public void SetLookAtWeight(float weight)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x3658440", Offset = "0x3658440", VA = "0x3658440")]
		public void SetLookAtWeight(float weight, float bodyWeight)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x36584EC", Offset = "0x36584EC", VA = "0x36584EC")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x36585B4", Offset = "0x36585B4", VA = "0x36585B4")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x36586A0", Offset = "0x36586A0", VA = "0x36586A0")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x36587AC", Offset = "0x36587AC", VA = "0x36587AC")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x36588F4", Offset = "0x36588F4", VA = "0x36588F4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x3658A18", Offset = "0x3658A18", VA = "0x3658A18", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x3658B50", Offset = "0x3658B50", VA = "0x3658B50", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x3658F84", Offset = "0x3658F84", VA = "0x3658F84", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x36591EC", Offset = "0x36591EC", VA = "0x36591EC", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x365938C", Offset = "0x365938C", VA = "0x365938C")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x3659628", Offset = "0x3659628", VA = "0x3659628", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x3659AB8", Offset = "0x3659AB8", VA = "0x3659AB8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x3659BBC", Offset = "0x3659BBC", VA = "0x3659BBC")]
		protected void SolveSpine()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x3659DE8", Offset = "0x3659DE8", VA = "0x3659DE8")]
		protected void SolveHead()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x365A044", Offset = "0x365A044", VA = "0x365A044")]
		protected void SolveEyes()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x365A570", Offset = "0x365A570", VA = "0x365A570")]
		protected UnityEngine.Vector3[] GetForwards(ref UnityEngine.Vector3[] forwards, UnityEngine.Vector3 baseForward, UnityEngine.Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x365944C", Offset = "0x365944C", VA = "0x365944C")]
		protected void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x365AA10", Offset = "0x365AA10", VA = "0x365AA10")]
		public IKSolverLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AE")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000594")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private UnityEngine.Vector3 defaultLocalBendNormal;

			[Token(Token = "0x6002280")]
			[Address(RVA = "0x35E11DC", Offset = "0x35E11DC", VA = "0x35E11DC")]
			public void Initiate(UnityEngine.Vector3 childPosition, UnityEngine.Vector3 bendNormal)
			{
			}

			[Token(Token = "0x6002281")]
			[Address(RVA = "0x35E137C", Offset = "0x35E137C", VA = "0x35E137C")]
			public Quaternion GetRotation(UnityEngine.Vector3 direction, UnityEngine.Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002282")]
			[Address(RVA = "0x35E1438", Offset = "0x35E1438", VA = "0x35E1438")]
			public UnityEngine.Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0x35E1504", Offset = "0x35E1504", VA = "0x35E1504")]
			public TrigonometricBone()
			{
			}
		}

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3728", Offset = "0x16F3728")]
		public float IKRotationWeight;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public UnityEngine.Vector3 bendNormal;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected UnityEngine.Vector3 weightIKPosition;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x365AC58", Offset = "0x365AC58", VA = "0x365AC58")]
		public void SetBendGoalPosition(UnityEngine.Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x365AE48", Offset = "0x365AE48", VA = "0x365AE48")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x365AFFC", Offset = "0x365AFFC", VA = "0x365AFFC")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x365B008", Offset = "0x365B008", VA = "0x365B008")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x365B08C", Offset = "0x365B08C", VA = "0x365B08C")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x365B098", Offset = "0x365B098", VA = "0x365B098")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x365B0A0", Offset = "0x365B0A0", VA = "0x365B0A0", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x365B1C8", Offset = "0x365B1C8", VA = "0x365B1C8", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x365B2E8", Offset = "0x365B2E8", VA = "0x365B2E8", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x365B328", Offset = "0x365B328", VA = "0x365B328", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x365B37C", Offset = "0x365B37C", VA = "0x365B37C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x365B788", Offset = "0x365B788", VA = "0x365B788")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x365B804", Offset = "0x365B804", VA = "0x365B804")]
		public static void Solve(Transform bone1, Transform bone2, Transform bone3, UnityEngine.Vector3 targetPosition, UnityEngine.Vector3 bendNormal, float weight)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x365BDAC", Offset = "0x365BDAC", VA = "0x365BDAC")]
		private static UnityEngine.Vector3 GetDirectionToBendPoint(UnityEngine.Vector3 direction, float directionMag, UnityEngine.Vector3 bendDirection, float sqrMag1, float sqrMag2)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x365BFC4", Offset = "0x365BFC4", VA = "0x365BFC4", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x365C188", Offset = "0x365C188", VA = "0x365C188")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x365C0FC", Offset = "0x365C0FC", VA = "0x365C0FC")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x365C290", Offset = "0x365C290", VA = "0x365C290", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x365CCC4", Offset = "0x365CCC4", VA = "0x365CCC4", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x365CCC8", Offset = "0x365CCC8", VA = "0x365CCC8", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x365CCCC", Offset = "0x365CCCC", VA = "0x365CCCC", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x365C9B8", Offset = "0x365C9B8", VA = "0x365C9B8")]
		protected UnityEngine.Vector3 GetBendDirection(UnityEngine.Vector3 IKPosition, UnityEngine.Vector3 bendNormal)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x3658160", Offset = "0x3658160", VA = "0x3658160")]
		public IKSolverTrigonometric()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AF")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000595")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x2000626")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x4002309")]
				YawPitch,
				[Token(Token = "0x400230A")]
				FromTo
			}

			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB5BC", Offset = "0x16FB5BC")]
			public Transform target;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB5F4", Offset = "0x16FB5F4")]
			public Transform bendGoal;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB62C", Offset = "0x16FB62C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FB62C", Offset = "0x16FB62C")]
			public float positionWeight;

			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB680", Offset = "0x16FB680")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FB680", Offset = "0x16FB680")]
			public float rotationWeight;

			[Token(Token = "0x4001FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB6D4", Offset = "0x16FB6D4")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x4001FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB70C", Offset = "0x16FB70C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FB70C", Offset = "0x16FB70C")]
			public float shoulderRotationWeight;

			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB760", Offset = "0x16FB760")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FB760", Offset = "0x16FB760")]
			public float shoulderTwistWeight;

			[Token(Token = "0x4001FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB7B4", Offset = "0x16FB7B4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FB7B4", Offset = "0x16FB7B4")]
			public float bendGoalWeight;

			[Token(Token = "0x4001FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB808", Offset = "0x16FB808")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FB808", Offset = "0x16FB808")]
			public float swivelOffset;

			[Token(Token = "0x4001FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB864", Offset = "0x16FB864")]
			public UnityEngine.Vector3 wristToPalmAxis;

			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB89C", Offset = "0x16FB89C")]
			public UnityEngine.Vector3 palmToThumbAxis;

			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB8D4", Offset = "0x16FB8D4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FB8D4", Offset = "0x16FB8D4")]
			public float armLengthMlp;

			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FB92C", Offset = "0x16FB92C")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public UnityEngine.Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public UnityEngine.Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public UnityEngine.Vector3 handPositionOffset;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB9A4", Offset = "0x16FB9A4")]
			private UnityEngine.Vector3 <position>k__BackingField;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB9B4", Offset = "0x16FB9B4")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private UnityEngine.Vector3 chestForwardAxis;

			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private UnityEngine.Vector3 chestUpAxis;

			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private UnityEngine.Vector3 chestForward;

			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private UnityEngine.Vector3 chestUp;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
			private UnityEngine.Vector3 upperArmBendAxis;

			[Token(Token = "0x4001FE5")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x4001FE6")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x170004F5")]
			public UnityEngine.Vector3 position
			{
				[Token(Token = "0x6002284")]
				[Address(RVA = "0x35EA854", Offset = "0x35EA854", VA = "0x35EA854")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707670", Offset = "0x1707670")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x6002285")]
				[Address(RVA = "0x35EA860", Offset = "0x35EA860", VA = "0x35EA860")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707680", Offset = "0x1707680")]
				private set
				{
				}
			}

			[Token(Token = "0x170004F6")]
			public Quaternion rotation
			{
				[Token(Token = "0x6002286")]
				[Address(RVA = "0x35EA86C", Offset = "0x35EA86C", VA = "0x35EA86C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707690", Offset = "0x1707690")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6002287")]
				[Address(RVA = "0x35EA878", Offset = "0x35EA878", VA = "0x35EA878")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17076A0", Offset = "0x17076A0")]
				private set
				{
				}
			}

			[Token(Token = "0x170004F7")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x6002288")]
				[Address(RVA = "0x35EA884", Offset = "0x35EA884", VA = "0x35EA884")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F8")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x6002289")]
				[Address(RVA = "0x35EA8B8", Offset = "0x35EA8B8", VA = "0x35EA8B8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F9")]
			private VirtualBone forearm
			{
				[Token(Token = "0x600228A")]
				[Address(RVA = "0x35EA8F8", Offset = "0x35EA8F8", VA = "0x35EA8F8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FA")]
			private VirtualBone hand
			{
				[Token(Token = "0x600228B")]
				[Address(RVA = "0x35EA944", Offset = "0x35EA944", VA = "0x35EA944")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600228C")]
			[Address(RVA = "0x35EA990", Offset = "0x35EA990", VA = "0x35EA990", Slot = "4")]
			protected override void OnRead(UnityEngine.Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x600228D")]
			[Address(RVA = "0x35EB2F4", Offset = "0x35EB2F4", VA = "0x35EB2F4", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x600228E")]
			[Address(RVA = "0x35EB4E8", Offset = "0x35EB4E8", VA = "0x35EB4E8", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x600228F")]
			[Address(RVA = "0x35EB594", Offset = "0x35EB594", VA = "0x35EB594")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6002290")]
			[Address(RVA = "0x35E85BC", Offset = "0x35E85BC", VA = "0x35E85BC")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0x35EC9BC", Offset = "0x35EC9BC", VA = "0x35EC9BC", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6002292")]
			[Address(RVA = "0x35ECA2C", Offset = "0x35ECA2C", VA = "0x35ECA2C", Slot = "6")]
			public override void Write(ref UnityEngine.Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6002293")]
			[Address(RVA = "0x35EB9AC", Offset = "0x35EB9AC", VA = "0x35EB9AC")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6002294")]
			[Address(RVA = "0x35EBCB8", Offset = "0x35EBCB8", VA = "0x35EBCB8")]
			private UnityEngine.Vector3 GetBendNormal(UnityEngine.Vector3 dir)
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x6002295")]
			[Address(RVA = "0x35ECC4C", Offset = "0x35ECC4C", VA = "0x35ECC4C")]
			private void Visualize(VirtualBone bone1, VirtualBone bone2, VirtualBone bone3, Color color)
			{
			}

			[Token(Token = "0x6002296")]
			[Address(RVA = "0x35EA518", Offset = "0x35EA518", VA = "0x35EA518")]
			public Arm()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000596")]
		public abstract class BodyPart
		{
			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB9C4", Offset = "0x16FB9C4")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB9D4", Offset = "0x16FB9D4")]
			private float <mag>k__BackingField;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected UnityEngine.Vector3 rootPosition;

			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			protected int LOD;

			[Token(Token = "0x170004FB")]
			public float sqrMag
			{
				[Token(Token = "0x600229C")]
				[Address(RVA = "0x35ECE18", Offset = "0x35ECE18", VA = "0x35ECE18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17076B0", Offset = "0x17076B0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600229D")]
				[Address(RVA = "0x35ECE20", Offset = "0x35ECE20", VA = "0x35ECE20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17076C0", Offset = "0x17076C0")]
				private set
				{
				}
			}

			[Token(Token = "0x170004FC")]
			public float mag
			{
				[Token(Token = "0x600229E")]
				[Address(RVA = "0x35ECE28", Offset = "0x35ECE28", VA = "0x35ECE28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17076D0", Offset = "0x17076D0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600229F")]
				[Address(RVA = "0x35ECE30", Offset = "0x35ECE30", VA = "0x35ECE30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17076E0", Offset = "0x17076E0")]
				private set
				{
				}
			}

			[Token(Token = "0x6002297")]
			protected abstract void OnRead(UnityEngine.Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x6002298")]
			public abstract void PreSolve();

			[Token(Token = "0x6002299")]
			public abstract void Write(ref UnityEngine.Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x600229A")]
			public abstract void ApplyOffsets();

			[Token(Token = "0x600229B")]
			public abstract void ResetOffsets();

			[Token(Token = "0x60022A0")]
			[Address(RVA = "0x35ECE38", Offset = "0x35ECE38", VA = "0x35ECE38")]
			public void SetLOD(int LOD)
			{
			}

			[Token(Token = "0x60022A1")]
			[Address(RVA = "0x35E603C", Offset = "0x35E603C", VA = "0x35E603C")]
			public void Read(UnityEngine.Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x60022A2")]
			[Address(RVA = "0x35ED12C", Offset = "0x35ED12C", VA = "0x35ED12C")]
			public void MovePosition(UnityEngine.Vector3 position)
			{
			}

			[Token(Token = "0x60022A3")]
			[Address(RVA = "0x35ED298", Offset = "0x35ED298", VA = "0x35ED298")]
			public void MoveRotation(Quaternion rotation)
			{
			}

			[Token(Token = "0x60022A4")]
			[Address(RVA = "0x35ED528", Offset = "0x35ED528", VA = "0x35ED528")]
			public void Translate(UnityEngine.Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60022A5")]
			[Address(RVA = "0x35E815C", Offset = "0x35E815C", VA = "0x35E815C")]
			public void TranslateRoot(UnityEngine.Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x60022A6")]
			[Address(RVA = "0x35EC81C", Offset = "0x35EC81C", VA = "0x35EC81C")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x60022A7")]
			[Address(RVA = "0x35ED57C", Offset = "0x35ED57C", VA = "0x35ED57C")]
			public void Visualize(Color color)
			{
			}

			[Token(Token = "0x60022A8")]
			[Address(RVA = "0x35ED6C0", Offset = "0x35ED6C0", VA = "0x35ED6C0")]
			public void Visualize()
			{
			}

			[Token(Token = "0x60022A9")]
			[Address(RVA = "0x35ECD74", Offset = "0x35ECD74", VA = "0x35ECD74")]
			protected BodyPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000597")]
		public class Footstep
		{
			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public UnityEngine.Vector3 characterSpaceOffset;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEngine.Vector3 position;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FB9F4", Offset = "0x16FB9F4")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public UnityEngine.Vector3 stepFrom;

			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public UnityEngine.Vector3 stepTo;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x170004FD")]
			public bool isStepping
			{
				[Token(Token = "0x60022AA")]
				[Address(RVA = "0x35ED6E8", Offset = "0x35ED6E8", VA = "0x35ED6E8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004FE")]
			public float stepProgress
			{
				[Token(Token = "0x60022AB")]
				[Address(RVA = "0x35ED6FC", Offset = "0x35ED6FC", VA = "0x35ED6FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17076F0", Offset = "0x17076F0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60022AC")]
				[Address(RVA = "0x35ED704", Offset = "0x35ED704", VA = "0x35ED704")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707700", Offset = "0x1707700")]
				private set
				{
				}
			}

			[Token(Token = "0x60022AD")]
			[Address(RVA = "0x35ED70C", Offset = "0x35ED70C", VA = "0x35ED70C")]
			public Footstep(Quaternion rootRotation, UnityEngine.Vector3 footPosition, Quaternion footRotation, UnityEngine.Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x60022AE")]
			[Address(RVA = "0x35ED89C", Offset = "0x35ED89C", VA = "0x35ED89C")]
			public void Reset(Quaternion rootRotation, UnityEngine.Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x60022AF")]
			[Address(RVA = "0x35ED8E4", Offset = "0x35ED8E4", VA = "0x35ED8E4")]
			public void StepTo(UnityEngine.Vector3 p, Quaternion rootRotation, float stepThreshold)
			{
			}

			[Token(Token = "0x60022B0")]
			[Address(RVA = "0x35EDAA4", Offset = "0x35EDAA4", VA = "0x35EDAA4")]
			public void UpdateStepping(UnityEngine.Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x60022B1")]
			[Address(RVA = "0x35EDC7C", Offset = "0x35EDC7C", VA = "0x35EDC7C")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x60022B2")]
			[Address(RVA = "0x35EDE68", Offset = "0x35EDE68", VA = "0x35EDE68")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000598")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBA04", Offset = "0x16FBA04")]
			public Transform target;

			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBA3C", Offset = "0x16FBA3C")]
			public Transform bendGoal;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBA74", Offset = "0x16FBA74")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FBA74", Offset = "0x16FBA74")]
			public float positionWeight;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBAC8", Offset = "0x16FBAC8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FBAC8", Offset = "0x16FBAC8")]
			public float rotationWeight;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBB1C", Offset = "0x16FBB1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FBB1C", Offset = "0x16FBB1C")]
			public float bendGoalWeight;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBB70", Offset = "0x16FBB70")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FBB70", Offset = "0x16FBB70")]
			public float swivelOffset;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBBCC", Offset = "0x16FBBCC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FBBCC", Offset = "0x16FBBCC")]
			public float bendToTargetWeight;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBC20", Offset = "0x16FBC20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FBC20", Offset = "0x16FBC20")]
			public float legLengthMlp;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBC78", Offset = "0x16FBC78")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public UnityEngine.Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public UnityEngine.Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public UnityEngine.Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public bool useAnimatedBendNormal;

			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FBD20", Offset = "0x16FBD20")]
			private UnityEngine.Vector3 <position>k__BackingField;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FBD30", Offset = "0x16FBD30")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FBD40", Offset = "0x16FBD40")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FBD50", Offset = "0x16FBD50")]
			private UnityEngine.Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private UnityEngine.Vector3 footPosition;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Quaternion footRotation;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private UnityEngine.Vector3 bendNormal;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private UnityEngine.Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			private UnityEngine.Vector3 bendNormalRelToTarget;

			[Token(Token = "0x170004FF")]
			public UnityEngine.Vector3 position
			{
				[Token(Token = "0x60022B3")]
				[Address(RVA = "0x35EE084", Offset = "0x35EE084", VA = "0x35EE084")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707710", Offset = "0x1707710")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x60022B4")]
				[Address(RVA = "0x35EE090", Offset = "0x35EE090", VA = "0x35EE090")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707720", Offset = "0x1707720")]
				private set
				{
				}
			}

			[Token(Token = "0x17000500")]
			public Quaternion rotation
			{
				[Token(Token = "0x60022B5")]
				[Address(RVA = "0x35EE09C", Offset = "0x35EE09C", VA = "0x35EE09C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707730", Offset = "0x1707730")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60022B6")]
				[Address(RVA = "0x35EE0A8", Offset = "0x35EE0A8", VA = "0x35EE0A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707740", Offset = "0x1707740")]
				private set
				{
				}
			}

			[Token(Token = "0x17000501")]
			public bool hasToes
			{
				[Token(Token = "0x60022B7")]
				[Address(RVA = "0x35EE0B4", Offset = "0x35EE0B4", VA = "0x35EE0B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707750", Offset = "0x1707750")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60022B8")]
				[Address(RVA = "0x35EE0BC", Offset = "0x35EE0BC", VA = "0x35EE0BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707760", Offset = "0x1707760")]
				private set
				{
				}
			}

			[Token(Token = "0x17000502")]
			public VirtualBone thigh
			{
				[Token(Token = "0x60022B9")]
				[Address(RVA = "0x35EE0C8", Offset = "0x35EE0C8", VA = "0x35EE0C8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000503")]
			private VirtualBone calf
			{
				[Token(Token = "0x60022BA")]
				[Address(RVA = "0x35EE0FC", Offset = "0x35EE0FC", VA = "0x35EE0FC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000504")]
			private VirtualBone foot
			{
				[Token(Token = "0x60022BB")]
				[Address(RVA = "0x35EE134", Offset = "0x35EE134", VA = "0x35EE134")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000505")]
			private VirtualBone toes
			{
				[Token(Token = "0x60022BC")]
				[Address(RVA = "0x35EE16C", Offset = "0x35EE16C", VA = "0x35EE16C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000506")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x60022BD")]
				[Address(RVA = "0x35E7FB0", Offset = "0x35E7FB0", VA = "0x35E7FB0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000507")]
			public UnityEngine.Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x60022BE")]
				[Address(RVA = "0x35EE1A4", Offset = "0x35EE1A4", VA = "0x35EE1A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707770", Offset = "0x1707770")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x60022BF")]
				[Address(RVA = "0x35EE1B0", Offset = "0x35EE1B0", VA = "0x35EE1B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707780", Offset = "0x1707780")]
				private set
				{
				}
			}

			[Token(Token = "0x60022C0")]
			[Address(RVA = "0x35EE1BC", Offset = "0x35EE1BC", VA = "0x35EE1BC", Slot = "4")]
			protected override void OnRead(UnityEngine.Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x60022C1")]
			[Address(RVA = "0x35EE7C4", Offset = "0x35EE7C4", VA = "0x35EE7C4", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x60022C2")]
			[Address(RVA = "0x35EF0AC", Offset = "0x35EF0AC", VA = "0x35EF0AC", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x60022C3")]
			[Address(RVA = "0x35EEFA8", Offset = "0x35EEFA8", VA = "0x35EEFA8")]
			private void ApplyPositionOffset(UnityEngine.Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x60022C4")]
			[Address(RVA = "0x35EED70", Offset = "0x35EED70", VA = "0x35EED70")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x35E8348", Offset = "0x35E8348", VA = "0x35E8348")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x60022C6")]
			[Address(RVA = "0x35EFB90", Offset = "0x35EFB90", VA = "0x35EFB90")]
			private void FixTwistRotations()
			{
			}

			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x35EF664", Offset = "0x35EF664", VA = "0x35EF664")]
			private void Stretching()
			{
			}

			[Token(Token = "0x60022C8")]
			[Address(RVA = "0x35EFFF8", Offset = "0x35EFFF8", VA = "0x35EFFF8", Slot = "6")]
			public override void Write(ref UnityEngine.Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x60022C9")]
			[Address(RVA = "0x35F0214", Offset = "0x35F0214", VA = "0x35F0214", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x60022CA")]
			[Address(RVA = "0x35EA64C", Offset = "0x35EA64C", VA = "0x35EA64C")]
			public Leg()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000599")]
		public class Locomotion
		{
			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBD60", Offset = "0x16FBD60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FBD60", Offset = "0x16FBD60")]
			public float weight;

			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBDB4", Offset = "0x16FBDB4")]
			public float footDistance;

			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBDEC", Offset = "0x16FBDEC")]
			public float stepThreshold;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBE24", Offset = "0x16FBE24")]
			public float angleThreshold;

			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBE5C", Offset = "0x16FBE5C")]
			public float comAngleMlp;

			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBE94", Offset = "0x16FBE94")]
			public float maxVelocity;

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBECC", Offset = "0x16FBECC")]
			public float velocityFactor;

			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBF04", Offset = "0x16FBF04")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FBF04", Offset = "0x16FBF04")]
			public float maxLegStretch;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBF5C", Offset = "0x16FBF5C")]
			public float rootSpeed;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBF94", Offset = "0x16FBF94")]
			public float stepSpeed;

			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FBFCC", Offset = "0x16FBFCC")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC004", Offset = "0x16FC004")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC03C", Offset = "0x16FC03C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC03C", Offset = "0x16FC03C")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC094", Offset = "0x16FC094")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC0CC", Offset = "0x16FC0CC")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC104", Offset = "0x16FC104")]
			public UnityEngine.Vector3 offset;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC17C", Offset = "0x16FC17C")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC1B4", Offset = "0x16FC1B4")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FC1EC", Offset = "0x16FC1EC")]
			private UnityEngine.Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Footstep[] footsteps;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private UnityEngine.Vector3 lastComPosition;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private UnityEngine.Vector3 comVelocity;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private int leftFootIndex;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			private int rightFootIndex;

			[Token(Token = "0x17000508")]
			public UnityEngine.Vector3 centerOfMass
			{
				[Token(Token = "0x60022CB")]
				[Address(RVA = "0x35F02C4", Offset = "0x35F02C4", VA = "0x35F02C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707790", Offset = "0x1707790")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x60022CC")]
				[Address(RVA = "0x35F02D0", Offset = "0x35F02D0", VA = "0x35F02D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17077A0", Offset = "0x17077A0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000509")]
			public UnityEngine.Vector3 leftFootstepPosition
			{
				[Token(Token = "0x60022D2")]
				[Address(RVA = "0x35F0710", Offset = "0x35F0710", VA = "0x35F0710")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x1700050A")]
			public UnityEngine.Vector3 rightFootstepPosition
			{
				[Token(Token = "0x60022D3")]
				[Address(RVA = "0x35F0750", Offset = "0x35F0750", VA = "0x35F0750")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x1700050B")]
			public Quaternion leftFootstepRotation
			{
				[Token(Token = "0x60022D4")]
				[Address(RVA = "0x35F0794", Offset = "0x35F0794", VA = "0x35F0794")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x1700050C")]
			public Quaternion rightFootstepRotation
			{
				[Token(Token = "0x60022D5")]
				[Address(RVA = "0x35F07D4", Offset = "0x35F07D4", VA = "0x35F07D4")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x35E610C", Offset = "0x35E610C", VA = "0x35E610C")]
			public void Initiate(UnityEngine.Vector3[] positions, Quaternion[] rotations, bool hasToes)
			{
			}

			[Token(Token = "0x60022CE")]
			[Address(RVA = "0x35E3810", Offset = "0x35E3810", VA = "0x35E3810")]
			public void Reset(UnityEngine.Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x60022CF")]
			[Address(RVA = "0x35E2BD4", Offset = "0x35E2BD4", VA = "0x35E2BD4")]
			public void AddDeltaRotation(Quaternion delta, UnityEngine.Vector3 pivot)
			{
			}

			[Token(Token = "0x60022D0")]
			[Address(RVA = "0x35E2A24", Offset = "0x35E2A24", VA = "0x35E2A24")]
			public void AddDeltaPosition(UnityEngine.Vector3 delta)
			{
			}

			[Token(Token = "0x60022D1")]
			[Address(RVA = "0x35E6A48", Offset = "0x35E6A48", VA = "0x35E6A48")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out UnityEngine.Vector3 leftFootPosition, out UnityEngine.Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset)
			{
			}

			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x35F031C", Offset = "0x35F031C", VA = "0x35F031C")]
			private bool StepBlocked(UnityEngine.Vector3 fromPosition, UnityEngine.Vector3 toPosition, UnityEngine.Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x60022D7")]
			[Address(RVA = "0x35F04C0", Offset = "0x35F04C0", VA = "0x35F04C0")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x60022D8")]
			[Address(RVA = "0x35F0544", Offset = "0x35F0544", VA = "0x35F0544")]
			private static bool GetLineSphereCollision(UnityEngine.Vector3 lineStart, UnityEngine.Vector3 lineEnd, UnityEngine.Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x60022D9")]
			[Address(RVA = "0x35EA74C", Offset = "0x35EA74C", VA = "0x35EA74C")]
			public Locomotion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059A")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC1FC", Offset = "0x16FC1FC")]
			public Transform headTarget;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC234", Offset = "0x16FC234")]
			public Transform pelvisTarget;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC26C", Offset = "0x16FC26C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC26C", Offset = "0x16FC26C")]
			public float positionWeight;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC2C0", Offset = "0x16FC2C0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC2C0", Offset = "0x16FC2C0")]
			public float rotationWeight;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC314", Offset = "0x16FC314")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC314", Offset = "0x16FC314")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC368", Offset = "0x16FC368")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC368", Offset = "0x16FC368")]
			public float pelvisRotationWeight;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC3BC", Offset = "0x16FC3BC")]
			public Transform chestGoal;

			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC3F4", Offset = "0x16FC3F4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC3F4", Offset = "0x16FC3F4")]
			public float chestGoalWeight;

			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC448", Offset = "0x16FC448")]
			public float minHeadHeight;

			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC480", Offset = "0x16FC480")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC480", Offset = "0x16FC480")]
			public float bodyPosStiffness;

			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC4D4", Offset = "0x16FC4D4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC4D4", Offset = "0x16FC4D4")]
			public float bodyRotStiffness;

			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC528", Offset = "0x16FC528")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16FC528", Offset = "0x16FC528")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC528", Offset = "0x16FC528")]
			public float neckStiffness;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC5A0", Offset = "0x16FC5A0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC5A0", Offset = "0x16FC5A0")]
			public float rotateChestByHands;

			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC5F4", Offset = "0x16FC5F4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC5F4", Offset = "0x16FC5F4")]
			public float chestClampWeight;

			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC648", Offset = "0x16FC648")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC648", Offset = "0x16FC648")]
			public float headClampWeight;

			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC69C", Offset = "0x16FC69C")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC6D4", Offset = "0x16FC6D4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC6D4", Offset = "0x16FC6D4")]
			public float maintainPelvisPosition;

			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC728", Offset = "0x16FC728")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC728", Offset = "0x16FC728")]
			public float maxRootAngle;

			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC780", Offset = "0x16FC780")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FC780", Offset = "0x16FC780")]
			public float rootHeadingOffset;

			[NonSerialized]
			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public UnityEngine.Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public UnityEngine.Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[HideInInspector]
			public UnityEngine.Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[HideInInspector]
			public UnityEngine.Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[HideInInspector]
			public UnityEngine.Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[HideInInspector]
			public UnityEngine.Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			[HideInInspector]
			public UnityEngine.Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			[HideInInspector]
			public UnityEngine.Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[HideInInspector]
			public UnityEngine.Vector3 headPosition;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FC8BC", Offset = "0x16FC8BC")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FC8CC", Offset = "0x16FC8CC")]
			private Quaternion <anchorRelativeToHead>k__BackingField;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			private Quaternion headRotation;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
			private UnityEngine.Vector3 headDeltaPosition;

			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int pelvisIndex;

			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int spineIndex;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int chestIndex;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int neckIndex;

			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private int headIndex;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private float length;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private bool hasChest;

			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
			private bool hasNeck;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
			private bool hasLegs;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float headHeight;

			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private float sizeMlp;

			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
			private UnityEngine.Vector3 chestForward;

			[Token(Token = "0x1700050D")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x60022DA")]
				[Address(RVA = "0x35E3A84", Offset = "0x35E3A84", VA = "0x35E3A84")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050E")]
			public VirtualBone firstSpineBone
			{
				[Token(Token = "0x60022DB")]
				[Address(RVA = "0x35F0818", Offset = "0x35F0818", VA = "0x35F0818")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050F")]
			public VirtualBone chest
			{
				[Token(Token = "0x60022DC")]
				[Address(RVA = "0x35E8568", Offset = "0x35E8568", VA = "0x35E8568")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000510")]
			private VirtualBone neck
			{
				[Token(Token = "0x60022DD")]
				[Address(RVA = "0x35F0858", Offset = "0x35F0858", VA = "0x35F0858")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000511")]
			public VirtualBone head
			{
				[Token(Token = "0x60022DE")]
				[Address(RVA = "0x35F02DC", Offset = "0x35F02DC", VA = "0x35F02DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000512")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x60022DF")]
				[Address(RVA = "0x35F0898", Offset = "0x35F0898", VA = "0x35F0898")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17077B0", Offset = "0x17077B0")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60022E0")]
				[Address(RVA = "0x35F08AC", Offset = "0x35F08AC", VA = "0x35F08AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17077C0", Offset = "0x17077C0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000513")]
			public Quaternion anchorRelativeToHead
			{
				[Token(Token = "0x60022E1")]
				[Address(RVA = "0x35F08C0", Offset = "0x35F08C0", VA = "0x35F08C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17077D0", Offset = "0x17077D0")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60022E2")]
				[Address(RVA = "0x35F08D4", Offset = "0x35F08D4", VA = "0x35F08D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17077E0", Offset = "0x17077E0")]
				private set
				{
				}
			}

			[Token(Token = "0x60022E3")]
			[Address(RVA = "0x35F08E8", Offset = "0x35F08E8", VA = "0x35F08E8", Slot = "4")]
			protected override void OnRead(UnityEngine.Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x60022E4")]
			[Address(RVA = "0x35F13F4", Offset = "0x35F13F4", VA = "0x35F13F4", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x60022E5")]
			[Address(RVA = "0x35F1604", Offset = "0x35F1604", VA = "0x35F1604", Slot = "7")]
			public override void ApplyOffsets()
			{
			}

			[Token(Token = "0x60022E6")]
			[Address(RVA = "0x35F1C7C", Offset = "0x35F1C7C", VA = "0x35F1C7C")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x60022E7")]
			[Address(RVA = "0x35E6424", Offset = "0x35E6424", VA = "0x35E6424")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms)
			{
			}

			[Token(Token = "0x60022E8")]
			[Address(RVA = "0x35F2658", Offset = "0x35F2658", VA = "0x35F2658")]
			private void FABRIKPass(UnityEngine.Vector3 animatedPelvisPos, UnityEngine.Vector3 rootUp, float weight)
			{
			}

			[Token(Token = "0x60022E9")]
			[Address(RVA = "0x35F2D18", Offset = "0x35F2D18", VA = "0x35F2D18")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x60022EA")]
			[Address(RVA = "0x35F3500", Offset = "0x35F3500", VA = "0x35F3500", Slot = "6")]
			public override void Write(ref UnityEngine.Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x35F36DC", Offset = "0x35F36DC", VA = "0x35F36DC", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x60022EC")]
			[Address(RVA = "0x35F1EAC", Offset = "0x35F1EAC", VA = "0x35F1EAC")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x35E7FF0", Offset = "0x35E7FF0", VA = "0x35E7FF0")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, UnityEngine.Vector3 offset, float w)
			{
			}

			[Token(Token = "0x60022EE")]
			[Address(RVA = "0x35F223C", Offset = "0x35F223C", VA = "0x35F223C")]
			private void TranslatePelvis(Leg[] legs, UnityEngine.Vector3 deltaPosition, Quaternion deltaRotation)
			{
			}

			[Token(Token = "0x60022EF")]
			[Address(RVA = "0x35F37D8", Offset = "0x35F37D8", VA = "0x35F37D8")]
			private UnityEngine.Vector3 LimitPelvisPosition(Leg[] legs, UnityEngine.Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x60022F0")]
			[Address(RVA = "0x35F2ACC", Offset = "0x35F2ACC", VA = "0x35F2ACC")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x60022F1")]
			[Address(RVA = "0x35F2818", Offset = "0x35F2818", VA = "0x35F2818")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x60022F2")]
			[Address(RVA = "0x35EA364", Offset = "0x35EA364", VA = "0x35EA364")]
			public Spine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059B")]
		public enum PositionOffset
		{
			[Token(Token = "0x400206C")]
			Pelvis,
			[Token(Token = "0x400206D")]
			Chest,
			[Token(Token = "0x400206E")]
			Head,
			[Token(Token = "0x400206F")]
			LeftHand,
			[Token(Token = "0x4002070")]
			RightHand,
			[Token(Token = "0x4002071")]
			LeftFoot,
			[Token(Token = "0x4002072")]
			RightFoot,
			[Token(Token = "0x4002073")]
			LeftHeel,
			[Token(Token = "0x4002074")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x200059C")]
		public enum RotationOffset
		{
			[Token(Token = "0x4002076")]
			Pelvis,
			[Token(Token = "0x4002077")]
			Chest,
			[Token(Token = "0x4002078")]
			Head
		}

		[Serializable]
		[Token(Token = "0x200059D")]
		public class VirtualBone
		{
			[Token(Token = "0x4002079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Vector3 readPosition;

			[Token(Token = "0x400207A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x400207B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public UnityEngine.Vector3 solverPosition;

			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public UnityEngine.Vector3 axis;

			[Token(Token = "0x60022F3")]
			[Address(RVA = "0x35E5FA0", Offset = "0x35E5FA0", VA = "0x35E5FA0")]
			public VirtualBone(UnityEngine.Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60022F4")]
			[Address(RVA = "0x35E601C", Offset = "0x35E601C", VA = "0x35E601C")]
			public void Read(UnityEngine.Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60022F5")]
			[Address(RVA = "0x35F3B00", Offset = "0x35F3B00", VA = "0x35F3B00")]
			public static void SwingRotation(VirtualBone[] bones, int index, UnityEngine.Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x60022F6")]
			[Address(RVA = "0x35ECE40", Offset = "0x35ECE40", VA = "0x35ECE40")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x60022F7")]
			[Address(RVA = "0x35ED340", Offset = "0x35ED340", VA = "0x35ED340")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, UnityEngine.Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x60022F8")]
			[Address(RVA = "0x35F3D90", Offset = "0x35F3D90", VA = "0x35F3D90")]
			public static void RotateBy(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x60022F9")]
			[Address(RVA = "0x35EBA84", Offset = "0x35EBA84", VA = "0x35EBA84")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x60022FA")]
			[Address(RVA = "0x35F3FC8", Offset = "0x35F3FC8", VA = "0x35F3FC8")]
			public static void RotateTo(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x60022FB")]
			[Address(RVA = "0x35EC270", Offset = "0x35EC270", VA = "0x35EC270")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, UnityEngine.Vector3 targetPosition, UnityEngine.Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x60022FC")]
			[Address(RVA = "0x35F4080", Offset = "0x35F4080", VA = "0x35F4080")]
			private static UnityEngine.Vector3 GetDirectionToBendPoint(UnityEngine.Vector3 direction, float directionMag, UnityEngine.Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x60022FD")]
			[Address(RVA = "0x35F30A0", Offset = "0x35F30A0", VA = "0x35F30A0")]
			public static void SolveFABRIK(VirtualBone[] bones, UnityEngine.Vector3 startPosition, UnityEngine.Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, UnityEngine.Vector3 startOffset)
			{
			}

			[Token(Token = "0x60022FE")]
			[Address(RVA = "0x35F4298", Offset = "0x35F4298", VA = "0x35F4298")]
			private static UnityEngine.Vector3 SolveFABRIKJoint(UnityEngine.Vector3 pos1, UnityEngine.Vector3 pos2, float length)
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x60022FF")]
			[Address(RVA = "0x35F43A0", Offset = "0x35F43A0", VA = "0x35F43A0")]
			public static void SolveCCD(VirtualBone[] bones, UnityEngine.Vector3 targetPosition, float weight, int iterations)
			{
			}
		}

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityEngine.Vector3[] readPositions;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.Vector3[] solvedPositions;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UnityEngine.Vector3[] defaultLocalPositions;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UnityEngine.Vector3 rootV;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private UnityEngine.Vector3 rootVelocity;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private UnityEngine.Vector3 bodyOffset;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int lastLOD;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3740", Offset = "0x16F3740")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3740", Offset = "0x16F3740")]
		public int LOD;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3794", Offset = "0x16F3794")]
		public bool plantFeet;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F37CC", Offset = "0x16F37CC")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F37DC", Offset = "0x16F37DC")]
		public Spine spine;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3814", Offset = "0x16F3814")]
		public Arm leftArm;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F384C", Offset = "0x16F384C")]
		public Arm rightArm;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3884", Offset = "0x16F3884")]
		public Leg leftLeg;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F38BC", Offset = "0x16F38BC")]
		public Leg rightLeg;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F38F4", Offset = "0x16F38F4")]
		public Locomotion locomotion;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Leg[] legs;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Arm[] arms;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private UnityEngine.Vector3 headPosition;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private UnityEngine.Vector3 headDeltaPosition;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private UnityEngine.Vector3 raycastOriginPelvis;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private UnityEngine.Vector3 lastOffset;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private UnityEngine.Vector3 debugPos1;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private UnityEngine.Vector3 debugPos2;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private UnityEngine.Vector3 debugPos3;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private UnityEngine.Vector3 debugPos4;

		[Token(Token = "0x1700031C")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x600159A")]
			[Address(RVA = "0x35EA0F8", Offset = "0x35EA0F8", VA = "0x35EA0F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703830", Offset = "0x1703830")]
			get
			{
				return null;
			}
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x35EA100", Offset = "0x35EA100", VA = "0x35EA100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703840", Offset = "0x1703840")]
			private set
			{
			}
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x35E150C", Offset = "0x35E150C", VA = "0x35E150C")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x35E19A0", Offset = "0x35E19A0", VA = "0x35E19A0")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x35E1828", Offset = "0x35E1828", VA = "0x35E1828")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x35E238C", Offset = "0x35E238C", VA = "0x35E238C")]
		public void AddPositionOffset(PositionOffset positionOffset, UnityEngine.Vector3 value)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x35E2668", Offset = "0x35E2668", VA = "0x35E2668")]
		public void AddRotationOffset(RotationOffset rotationOffset, UnityEngine.Vector3 value)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x35E270C", Offset = "0x35E270C", VA = "0x35E270C")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x35E28A0", Offset = "0x35E28A0", VA = "0x35E28A0")]
		public void AddPlatformMotion(UnityEngine.Vector3 deltaPosition, Quaternion deltaRotation, UnityEngine.Vector3 platformPivot)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x35E2FAC", Offset = "0x35E2FAC", VA = "0x35E2FAC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x35E3AC4", Offset = "0x35E3AC4", VA = "0x35E3AC4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x35E3C38", Offset = "0x35E3C38", VA = "0x35E3C38", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x35E3E40", Offset = "0x35E3E40", VA = "0x35E3E40", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x35E3EB4", Offset = "0x35E3EB4", VA = "0x35E3EB4", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x35E3F28", Offset = "0x35E3F28", VA = "0x35E3F28", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x35E4148", Offset = "0x35E4148", VA = "0x35E4148")]
		private UnityEngine.Vector3 GetNormal(Transform[] transforms)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x35E1C40", Offset = "0x35E1C40", VA = "0x35E1C40")]
		private UnityEngine.Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x35E1E18", Offset = "0x35E1E18", VA = "0x35E1E18")]
		private UnityEngine.Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x35E2268", Offset = "0x35E2268", VA = "0x35E2268")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x35E311C", Offset = "0x35E311C", VA = "0x35E311C")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x35E4428", Offset = "0x35E4428", VA = "0x35E4428", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x35E4470", Offset = "0x35E4470", VA = "0x35E4470", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x35E5B28", Offset = "0x35E5B28", VA = "0x35E5B28")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x35E3284", Offset = "0x35E3284", VA = "0x35E3284")]
		private void Read(UnityEngine.Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x35E4930", Offset = "0x35E4930", VA = "0x35E4930")]
		private void Solve()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x35E5F14", Offset = "0x35E5F14", VA = "0x35E5F14")]
		private UnityEngine.Vector3 GetPosition(int index)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x35E5F5C", Offset = "0x35E5F5C", VA = "0x35E5F5C")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x35E59D8", Offset = "0x35E59D8", VA = "0x35E59D8")]
		private void Write()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x35E9B10", Offset = "0x35E9B10", VA = "0x35E9B10")]
		private UnityEngine.Vector3 GetPelvisOffset()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x35EA108", Offset = "0x35EA108", VA = "0x35EA108")]
		public IKSolverVR()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class TwistRelaxer : MonoBehaviour
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F392C", Offset = "0x16F392C")]
		public Transform parent;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3964", Offset = "0x16F3964")]
		public Transform child;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F399C", Offset = "0x16F399C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F399C", Offset = "0x16F399C")]
		public float weight;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F39F0", Offset = "0x16F39F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F39F0", Offset = "0x16F39F0")]
		public float parentChildCrossfade;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3A44", Offset = "0x16F3A44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F3A44", Offset = "0x16F3A44")]
		public float twistAngleOffset;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private UnityEngine.Vector3 twistAxis;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.Vector3 axis;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private UnityEngine.Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x2CB5AE8", Offset = "0x2CB5AE8", VA = "0x2CB5AE8")]
		public void Relax()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x2CB5EC8", Offset = "0x2CB5EC8", VA = "0x2CB5EC8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x2CB6374", Offset = "0x2CB6374", VA = "0x2CB6374")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x2CB63FC", Offset = "0x2CB63FC", VA = "0x2CB63FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x2CB6484", Offset = "0x2CB6484", VA = "0x2CB6484")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x2CB65AC", Offset = "0x2CB65AC", VA = "0x2CB65AC")]
		public TwistRelaxer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B1")]
	public class InteractionEffector
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F3AA0", Offset = "0x16F3AA0")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F3AB0", Offset = "0x16F3AB0")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F3AC0", Offset = "0x16F3AC0")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float defaultBendGoalWeight;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float resetTimer;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool positionWeightUsed;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool rotationWeightUsed;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pullUsed;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool reachUsed;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pushUsed;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool pushParentUsed;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool bendGoalWeightUsed;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		private bool pickedUp;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool defaults;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private UnityEngine.Vector3 pickUpPosition;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.Vector3 pausePositionRelative;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform target;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<bool> triggered;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool started;

		[Token(Token = "0x1700031D")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x35F4BC8", Offset = "0x35F4BC8", VA = "0x35F4BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703850", Offset = "0x1703850")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x35F4BD0", Offset = "0x35F4BD0", VA = "0x35F4BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703860", Offset = "0x1703860")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public bool isPaused
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x35F4BD8", Offset = "0x35F4BD8", VA = "0x35F4BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703870", Offset = "0x1703870")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x35F4BE0", Offset = "0x35F4BE0", VA = "0x35F4BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703880", Offset = "0x1703880")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x35F4BEC", Offset = "0x35F4BEC", VA = "0x35F4BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703890", Offset = "0x1703890")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x35F4BF4", Offset = "0x35F4BF4", VA = "0x35F4BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17038A0", Offset = "0x17038A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public bool inInteraction
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x35F4BFC", Offset = "0x35F4BFC", VA = "0x35F4BFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000321")]
		public float progress
		{
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0x35F6F28", Offset = "0x35F6F28", VA = "0x35F6F28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x35F4C6C", Offset = "0x35F4C6C", VA = "0x35F4C6C")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x35F4CFC", Offset = "0x35F4CFC", VA = "0x35F4CFC")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x35F4DCC", Offset = "0x35F4DCC", VA = "0x35F4DCC")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x35F4F44", Offset = "0x35F4F44", VA = "0x35F4F44")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x35F53F4", Offset = "0x35F53F4", VA = "0x35F53F4")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x35F5528", Offset = "0x35F5528", VA = "0x35F5528")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x35F5580", Offset = "0x35F5580", VA = "0x35F5580")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x35F5C0C", Offset = "0x35F5C0C", VA = "0x35F5C0C")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x35F673C", Offset = "0x35F673C", VA = "0x35F673C")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x35F696C", Offset = "0x35F696C", VA = "0x35F696C")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x35F6DB0", Offset = "0x35F6DB0", VA = "0x35F6DB0")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x35F6FF4", Offset = "0x35F6FF4", VA = "0x35F6FF4")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B2")]
	public class InteractionLookAt
	{
		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3AD0", Offset = "0x16F3AD0")]
		public LookAtIK ik;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3B08", Offset = "0x16F3B08")]
		public float lerpSpeed;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3B40", Offset = "0x16F3B40")]
		public float weightSpeed;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x35F7258", Offset = "0x35F7258", VA = "0x35F7258")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x35F73DC", Offset = "0x35F73DC", VA = "0x35F73DC")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x35F7484", Offset = "0x35F7484", VA = "0x35F7484")]
		public void Update()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x35F76D8", Offset = "0x35F76D8", VA = "0x35F76D8")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x35F77D0", Offset = "0x35F77D0", VA = "0x35F77D0")]
		public void SolveHead()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x35F789C", Offset = "0x35F789C", VA = "0x35F789C")]
		public InteractionLookAt()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E8134", Offset = "0x16E8134")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8134", Offset = "0x16E8134")]
	public class InteractionObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200059E")]
		public class InteractionEvent
		{
			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC8DC", Offset = "0x16FC8DC")]
			public float time;

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC914", Offset = "0x16FC914")]
			public bool pause;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC94C", Offset = "0x16FC94C")]
			public bool pickUp;

			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC984", Offset = "0x16FC984")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC9BC", Offset = "0x16FC9BC")]
			public Message[] messages;

			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FC9F4", Offset = "0x16FC9F4")]
			public UnityEvent unityEvent;

			[Token(Token = "0x6002300")]
			[Address(RVA = "0x2CA5C1C", Offset = "0x2CA5C1C", VA = "0x2CA5C1C")]
			public void Activate(Transform t)
			{
			}

			[Token(Token = "0x6002301")]
			[Address(RVA = "0x2CA5DE0", Offset = "0x2CA5DE0", VA = "0x2CA5DE0")]
			public InteractionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059F")]
		public class Message
		{
			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCA2C", Offset = "0x16FCA2C")]
			public string function;

			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCA64", Offset = "0x16FCA64")]
			public GameObject recipient;

			[Token(Token = "0x4002088")]
			private const string empty = "";

			[Token(Token = "0x6002302")]
			[Address(RVA = "0x2CA5CF0", Offset = "0x2CA5CF0", VA = "0x2CA5CF0")]
			public void Send(Transform t)
			{
			}

			[Token(Token = "0x6002303")]
			[Address(RVA = "0x2CA5DE8", Offset = "0x2CA5DE8", VA = "0x2CA5DE8")]
			public Message()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A0")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCA9C", Offset = "0x16FCA9C")]
			public Animator animator;

			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCAD4", Offset = "0x16FCAD4")]
			public Animation animation;

			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCB0C", Offset = "0x16FCB0C")]
			public string animationState;

			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCB44", Offset = "0x16FCB44")]
			public float crossfadeTime;

			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCB7C", Offset = "0x16FCB7C")]
			public int layer;

			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCBB4", Offset = "0x16FCBB4")]
			public bool resetNormalizedTime;

			[Token(Token = "0x400208F")]
			private const string empty = "";

			[Token(Token = "0x6002304")]
			[Address(RVA = "0x35F8774", Offset = "0x35F8774", VA = "0x35F8774")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x6002305")]
			[Address(RVA = "0x35F8868", Offset = "0x35F8868", VA = "0x35F8868")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x6002306")]
			[Address(RVA = "0x35F8920", Offset = "0x35F8920", VA = "0x35F8920")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x6002307")]
			[Address(RVA = "0x35F8A00", Offset = "0x35F8A00", VA = "0x35F8A00")]
			public AnimatorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A1")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x2000627")]
			public enum Type
			{
				[Token(Token = "0x400230C")]
				PositionWeight,
				[Token(Token = "0x400230D")]
				RotationWeight,
				[Token(Token = "0x400230E")]
				PositionOffsetX,
				[Token(Token = "0x400230F")]
				PositionOffsetY,
				[Token(Token = "0x4002310")]
				PositionOffsetZ,
				[Token(Token = "0x4002311")]
				Pull,
				[Token(Token = "0x4002312")]
				Reach,
				[Token(Token = "0x4002313")]
				RotateBoneWeight,
				[Token(Token = "0x4002314")]
				Push,
				[Token(Token = "0x4002315")]
				PushParent,
				[Token(Token = "0x4002316")]
				PoserWeight,
				[Token(Token = "0x4002317")]
				BendGoalWeight
			}

			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCBEC", Offset = "0x16FCBEC")]
			public Type type;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCC24", Offset = "0x16FCC24")]
			public AnimationCurve curve;

			[Token(Token = "0x6002308")]
			[Address(RVA = "0x2CA5E2C", Offset = "0x2CA5E2C", VA = "0x2CA5E2C")]
			public float GetValue(float timer)
			{
				return default(float);
			}

			[Token(Token = "0x6002309")]
			[Address(RVA = "0x2CA5E58", Offset = "0x2CA5E58", VA = "0x2CA5E58")]
			public WeightCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A2")]
		public class Multiplier
		{
			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCC5C", Offset = "0x16FCC5C")]
			public WeightCurve.Type curve;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCC94", Offset = "0x16FCC94")]
			public float multiplier;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCCCC", Offset = "0x16FCCCC")]
			public WeightCurve.Type result;

			[Token(Token = "0x600230A")]
			[Address(RVA = "0x2CA5DF0", Offset = "0x2CA5DF0", VA = "0x2CA5DF0")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}

			[Token(Token = "0x600230B")]
			[Address(RVA = "0x2CA5E48", Offset = "0x2CA5E48", VA = "0x2CA5E48")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3B88", Offset = "0x16F3B88")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3BC0", Offset = "0x16F3BC0")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3BF8", Offset = "0x16F3BF8")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F3C30", Offset = "0x16F3C30")]
		private float <length>k__BackingField;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F3C40", Offset = "0x16F3C40")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x17000322")]
		public float length
		{
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x35F7B10", Offset = "0x35F7B10", VA = "0x35F7B10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703A70", Offset = "0x1703A70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x35F7B18", Offset = "0x35F7B18", VA = "0x35F7B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703A80", Offset = "0x1703A80")]
			private set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x35F7B20", Offset = "0x35F7B20", VA = "0x35F7B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703A90", Offset = "0x1703A90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x35F7B28", Offset = "0x35F7B28", VA = "0x35F7B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703AA0", Offset = "0x1703AA0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x35F7D4C", Offset = "0x35F7D4C", VA = "0x35F7D4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		public Transform targetsRoot
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x35F6F64", Offset = "0x35F6F64", VA = "0x35F6F64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x35F78B0", Offset = "0x35F78B0", VA = "0x35F78B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17038B0", Offset = "0x17038B0")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x35F78FC", Offset = "0x35F78FC", VA = "0x35F78FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17038E8", Offset = "0x17038E8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x35F7948", Offset = "0x35F7948", VA = "0x35F7948")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703920", Offset = "0x1703920")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x35F7994", Offset = "0x35F7994", VA = "0x35F7994")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703958", Offset = "0x1703958")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x35F79E0", Offset = "0x35F79E0", VA = "0x35F79E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703990", Offset = "0x1703990")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x35F7A2C", Offset = "0x35F7A2C", VA = "0x35F7A2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17039C8", Offset = "0x17039C8")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x35F7A78", Offset = "0x35F7A78", VA = "0x35F7A78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703A00", Offset = "0x1703A00")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x35F7AC4", Offset = "0x35F7AC4", VA = "0x35F7AC4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703A38", Offset = "0x1703A38")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x35F7B30", Offset = "0x35F7B30", VA = "0x35F7B30")]
		public void Initiate()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x35F7DDC", Offset = "0x35F7DDC", VA = "0x35F7DDC")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x35F5B58", Offset = "0x35F5B58", VA = "0x35F5B58")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x35F7F60", Offset = "0x35F7F60", VA = "0x35F7F60")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x35F5A0C", Offset = "0x35F5A0C", VA = "0x35F5A0C")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x35F5B50", Offset = "0x35F5B50", VA = "0x35F5B50")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x35F631C", Offset = "0x35F631C", VA = "0x35F631C")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x35F6B84", Offset = "0x35F6B84", VA = "0x35F6B84")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x35F869C", Offset = "0x35F869C", VA = "0x35F869C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x35F7FD8", Offset = "0x35F7FD8", VA = "0x35F7FD8")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x35F7F68", Offset = "0x35F7F68", VA = "0x35F7F68")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x35F8634", Offset = "0x35F8634", VA = "0x35F8634")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x35F86A0", Offset = "0x35F86A0", VA = "0x35F86A0")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x35F8708", Offset = "0x35F8708", VA = "0x35F8708")]
		public InteractionObject()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E8194", Offset = "0x16E8194")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8194", Offset = "0x16E8194")]
	public class InteractionSystem : MonoBehaviour
	{
		[Token(Token = "0x20005A3")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x20005A4")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3C50", Offset = "0x16F3C50")]
		public string targetTag;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3C88", Offset = "0x16F3C88")]
		public float fadeInTime;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3CC0", Offset = "0x16F3CC0")]
		public float speed;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3CF8", Offset = "0x16F3CF8")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F3D30", Offset = "0x16F3D30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3D30", Offset = "0x16F3D30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F3D30", Offset = "0x16F3D30")]
		public Collider characterCollider;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3DB4", Offset = "0x16F3DB4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x16F3DB4", Offset = "0x16F3DB4")]
		public Transform FPSCamera;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3E14", Offset = "0x16F3E14")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3E4C", Offset = "0x16F3E4C")]
		public float camRaycastDistance;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F3E84", Offset = "0x16F3E84")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16F3E94", Offset = "0x16F3E94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3E94", Offset = "0x16F3E94")]
		[SerializeField]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3EF4", Offset = "0x16F3EF4")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool initiated;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x17000326")]
		public bool inInteraction
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0x2CA60C0", Offset = "0x2CA60C0", VA = "0x2CA60C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000327")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0x2CA7D1C", Offset = "0x2CA7D1C", VA = "0x2CA7D1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x2CA7D24", Offset = "0x2CA7D24", VA = "0x2CA7D24")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x2CA7D2C", Offset = "0x2CA7D2C", VA = "0x2CA7D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703C70", Offset = "0x1703C70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001600")]
			[Address(RVA = "0x2CA7D34", Offset = "0x2CA7D34", VA = "0x2CA7D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1703C80", Offset = "0x1703C80")]
			private set
			{
			}
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x2CA5E60", Offset = "0x2CA5E60", VA = "0x2CA5E60")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703AB0", Offset = "0x1703AB0")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x2CA5EAC", Offset = "0x2CA5EAC", VA = "0x2CA5EAC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703AE8", Offset = "0x1703AE8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x2CA5EF8", Offset = "0x2CA5EF8", VA = "0x2CA5EF8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703B20", Offset = "0x1703B20")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x2CA5F44", Offset = "0x2CA5F44", VA = "0x2CA5F44")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703B58", Offset = "0x1703B58")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x2CA5F90", Offset = "0x2CA5F90", VA = "0x2CA5F90")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703B90", Offset = "0x1703B90")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x2CA5FDC", Offset = "0x2CA5FDC", VA = "0x2CA5FDC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703BC8", Offset = "0x1703BC8")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x2CA6028", Offset = "0x2CA6028", VA = "0x2CA6028")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703C00", Offset = "0x1703C00")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x2CA6074", Offset = "0x2CA6074", VA = "0x2CA6074")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703C38", Offset = "0x1703C38")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x2CA6254", Offset = "0x2CA6254", VA = "0x2CA6254")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x2CA6324", Offset = "0x2CA6324", VA = "0x2CA6324")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x2CA63F4", Offset = "0x2CA63F4", VA = "0x2CA63F4")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x2CA64A4", Offset = "0x2CA64A4", VA = "0x2CA64A4")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x2CA65A0", Offset = "0x2CA65A0", VA = "0x2CA65A0")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x2CA66C0", Offset = "0x2CA66C0", VA = "0x2CA66C0")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x2CA6754", Offset = "0x2CA6754", VA = "0x2CA6754")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x2CA67E8", Offset = "0x2CA67E8", VA = "0x2CA67E8")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x2CA687C", Offset = "0x2CA687C", VA = "0x2CA687C")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x2CA68F4", Offset = "0x2CA68F4", VA = "0x2CA68F4")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x2CA696C", Offset = "0x2CA696C", VA = "0x2CA696C")]
		public void StopAll()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x2CA69D8", Offset = "0x2CA69D8", VA = "0x2CA69D8")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x2CA6A64", Offset = "0x2CA6A64", VA = "0x2CA6A64")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x2CA6AF8", Offset = "0x2CA6AF8", VA = "0x2CA6AF8")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x2CA6BC4", Offset = "0x2CA6BC4", VA = "0x2CA6BC4")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x2CA6E68", Offset = "0x2CA6E68", VA = "0x2CA6E68")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x2CA7058", Offset = "0x2CA7058", VA = "0x2CA7058")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x2CA72E0", Offset = "0x2CA72E0", VA = "0x2CA72E0")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x2CA75D4", Offset = "0x2CA75D4", VA = "0x2CA75D4")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x2CA7618", Offset = "0x2CA7618", VA = "0x2CA7618")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x2CA7694", Offset = "0x2CA7694", VA = "0x2CA7694")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x2CA77CC", Offset = "0x2CA77CC", VA = "0x2CA77CC")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x2CA7948", Offset = "0x2CA7948", VA = "0x2CA7948")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x2CA7BF0", Offset = "0x2CA7BF0", VA = "0x2CA7BF0")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x2CA73E0", Offset = "0x2CA73E0", VA = "0x2CA73E0")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x2CA7D3C", Offset = "0x2CA7D3C", VA = "0x2CA7D3C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x2CA84F4", Offset = "0x2CA84F4", VA = "0x2CA84F4")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x2CA8514", Offset = "0x2CA8514", VA = "0x2CA8514")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x2CA8530", Offset = "0x2CA8530", VA = "0x2CA8530")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x2CA854C", Offset = "0x2CA854C", VA = "0x2CA854C")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x2CA85B4", Offset = "0x2CA85B4", VA = "0x2CA85B4")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x2CA86D0", Offset = "0x2CA86D0", VA = "0x2CA86D0")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x2CA87CC", Offset = "0x2CA87CC", VA = "0x2CA87CC")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x2CA8B2C", Offset = "0x2CA8B2C", VA = "0x2CA8B2C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x2CA8C44", Offset = "0x2CA8C44", VA = "0x2CA8C44")]
		public void Update()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x2CA8E94", Offset = "0x2CA8E94", VA = "0x2CA8E94")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x2CA8254", Offset = "0x2CA8254", VA = "0x2CA8254")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x2CA8FD4", Offset = "0x2CA8FD4", VA = "0x2CA8FD4")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x2CA9108", Offset = "0x2CA9108", VA = "0x2CA9108")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x2CA91A4", Offset = "0x2CA91A4", VA = "0x2CA91A4")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x2CA9284", Offset = "0x2CA9284", VA = "0x2CA9284")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x2CA92A0", Offset = "0x2CA92A0", VA = "0x2CA92A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x2CA6170", Offset = "0x2CA6170", VA = "0x2CA6170")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x2CA6D64", Offset = "0x2CA6D64", VA = "0x2CA6D64")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x2CA9664", Offset = "0x2CA9664", VA = "0x2CA9664")]
		public InteractionSystem()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E81F4", Offset = "0x16E81F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E81F4", Offset = "0x16E81F4")]
	public class InteractionTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005A5")]
		public class Multiplier
		{
			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCD04", Offset = "0x16FCD04")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCD3C", Offset = "0x16FCD3C")]
			public float multiplier;

			[Token(Token = "0x6002314")]
			[Address(RVA = "0x2CAAA40", Offset = "0x2CAAA40", VA = "0x2CAAA40")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3F2C", Offset = "0x16F3F2C")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3F64", Offset = "0x16F3F64")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3F9C", Offset = "0x16F3F9C")]
		public float interactionSpeedMlp;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F3FD4", Offset = "0x16F3FD4")]
		public Transform pivot;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F400C", Offset = "0x16F400C")]
		public UnityEngine.Vector3 twistAxis;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4044", Offset = "0x16F4044")]
		public float twistWeight;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F407C", Offset = "0x16F407C")]
		public float swingWeight;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F40B4", Offset = "0x16F40B4")]
		public bool rotateOnce;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform lastPivot;

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x2CAA11C", Offset = "0x2CAA11C", VA = "0x2CAA11C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703C90", Offset = "0x1703C90")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x2CAA168", Offset = "0x2CAA168", VA = "0x2CAA168")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703CC8", Offset = "0x1703CC8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x2CAA1B4", Offset = "0x2CAA1B4", VA = "0x2CAA1B4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703D00", Offset = "0x1703D00")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x2CAA200", Offset = "0x2CAA200", VA = "0x2CAA200")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703D38", Offset = "0x1703D38")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x2CAA24C", Offset = "0x2CAA24C", VA = "0x2CAA24C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703D70", Offset = "0x1703D70")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x2CAA298", Offset = "0x2CAA298", VA = "0x2CAA298")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703DA8", Offset = "0x1703DA8")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x2CAA2E4", Offset = "0x2CAA2E4", VA = "0x2CAA2E4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703DE0", Offset = "0x1703DE0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x2CAA330", Offset = "0x2CAA330", VA = "0x2CAA330")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703E18", Offset = "0x1703E18")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x2CAA37C", Offset = "0x2CAA37C", VA = "0x2CAA37C")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x2CAA3EC", Offset = "0x2CAA3EC", VA = "0x2CAA3EC")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x2CAA488", Offset = "0x2CAA488", VA = "0x2CAA488")]
		public void RotateTo(UnityEngine.Vector3 position)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x2CAA9B4", Offset = "0x2CAA9B4", VA = "0x2CAA9B4")]
		public InteractionTarget()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E8254", Offset = "0x16E8254")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8254", Offset = "0x16E8254")]
	public class InteractionTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005A6")]
		public class CharacterPosition
		{
			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCD74", Offset = "0x16FCD74")]
			public bool use;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCDAC", Offset = "0x16FCDAC")]
			public Vector2 offset;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCDE4", Offset = "0x16FCDE4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FCDE4", Offset = "0x16FCDE4")]
			public float angleOffset;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCE40", Offset = "0x16FCE40")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FCE40", Offset = "0x16FCE40")]
			public float maxAngle;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCE98", Offset = "0x16FCE98")]
			public float radius;

			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCED0", Offset = "0x16FCED0")]
			public bool orbit;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCF08", Offset = "0x16FCF08")]
			public bool fixYAxis;

			[Token(Token = "0x17000514")]
			public UnityEngine.Vector3 offset3D
			{
				[Token(Token = "0x6002315")]
				[Address(RVA = "0x2CAB26C", Offset = "0x2CAB26C", VA = "0x2CAB26C")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x17000515")]
			public UnityEngine.Vector3 direction3D
			{
				[Token(Token = "0x6002316")]
				[Address(RVA = "0x2CAB2A8", Offset = "0x2CAB2A8", VA = "0x2CAB2A8")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x6002317")]
			[Address(RVA = "0x2CAB3A0", Offset = "0x2CAB3A0", VA = "0x2CAB3A0")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x6002318")]
			[Address(RVA = "0x2CABA1C", Offset = "0x2CABA1C", VA = "0x2CABA1C")]
			public CharacterPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A7")]
		public class CameraPosition
		{
			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCF40", Offset = "0x16FCF40")]
			public Collider lookAtTarget;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCF78", Offset = "0x16FCF78")]
			public UnityEngine.Vector3 direction;

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCFB0", Offset = "0x16FCFB0")]
			public float maxDistance;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FCFE8", Offset = "0x16FCFE8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FCFE8", Offset = "0x16FCFE8")]
			public float maxAngle;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD040", Offset = "0x16FD040")]
			public bool fixYAxis;

			[Token(Token = "0x6002319")]
			[Address(RVA = "0x2CAAD58", Offset = "0x2CAAD58", VA = "0x2CAAD58")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600231A")]
			[Address(RVA = "0x2CAAF00", Offset = "0x2CAAF00", VA = "0x2CAAF00")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x600231B")]
			[Address(RVA = "0x2CAB1E0", Offset = "0x2CAB1E0", VA = "0x2CAB1E0")]
			public CameraPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A8")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x2000628")]
			public class Interaction
			{
				[Token(Token = "0x4002318")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE8D0", Offset = "0x16FE8D0")]
				public InteractionObject interactionObject;

				[Token(Token = "0x4002319")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE908", Offset = "0x16FE908")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x600248C")]
				[Address(RVA = "0x2CABA40", Offset = "0x2CABA40", VA = "0x2CABA40")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			[SerializeField]
			public bool show;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD0E8", Offset = "0x16FD0E8")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD120", Offset = "0x16FD120")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD158", Offset = "0x16FD158")]
			public Interaction[] interactions;

			[Token(Token = "0x600231C")]
			[Address(RVA = "0x2CAABC8", Offset = "0x2CAABC8", VA = "0x2CAABC8")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}

			[Token(Token = "0x600231D")]
			[Address(RVA = "0x2CABA30", Offset = "0x2CABA30", VA = "0x2CABA30")]
			public Range()
			{
			}
		}

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F40EC", Offset = "0x16F40EC")]
		public Range[] ranges;

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x2CAAA48", Offset = "0x2CAAA48", VA = "0x2CAAA48")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703E50", Offset = "0x1703E50")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x2CAAA94", Offset = "0x2CAAA94", VA = "0x2CAAA94")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703E88", Offset = "0x1703E88")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x2CAAAE0", Offset = "0x2CAAAE0", VA = "0x2CAAAE0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703EC0", Offset = "0x1703EC0")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x2CAAB2C", Offset = "0x2CAAB2C", VA = "0x2CAAB2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703EF8", Offset = "0x1703EF8")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x2CAAB78", Offset = "0x2CAAB78", VA = "0x2CAAB78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703F30", Offset = "0x1703F30")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x2CAABC4", Offset = "0x2CAABC4", VA = "0x2CAABC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x2CA8970", Offset = "0x2CA8970", VA = "0x2CA8970")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x2CAACEC", Offset = "0x2CAACEC", VA = "0x2CAACEC")]
		public InteractionTrigger()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x20005A9")]
		public class Map
		{
			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UnityEngine.Vector3 defaultLocalPosition;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x600231E")]
			[Address(RVA = "0x3510914", Offset = "0x3510914", VA = "0x3510914")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x600231F")]
			[Address(RVA = "0x3510D34", Offset = "0x3510D34", VA = "0x3510D34")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x6002320")]
			[Address(RVA = "0x3510CE8", Offset = "0x3510CE8", VA = "0x3510CE8")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6002321")]
			[Address(RVA = "0x3510AE0", Offset = "0x3510AE0", VA = "0x3510AE0")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x3510620", Offset = "0x3510620", VA = "0x3510620", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1703F68", Offset = "0x1703F68")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x35109D4", Offset = "0x35109D4", VA = "0x35109D4", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x35109D8", Offset = "0x35109D8", VA = "0x35109D8", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x3510C80", Offset = "0x3510C80", VA = "0x3510C80", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x351096C", Offset = "0x351096C", VA = "0x351096C")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x3510874", Offset = "0x3510874", VA = "0x3510874")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x3510D84", Offset = "0x3510D84", VA = "0x3510D84")]
		public GenericPoser()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] children;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _poseRoot;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] poseChildren;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityEngine.Vector3[] defaultLocalPositions;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x351B1FC", Offset = "0x351B1FC", VA = "0x351B1FC", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x351B2C4", Offset = "0x351B2C4", VA = "0x351B2C4", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x351B4A8", Offset = "0x351B4A8", VA = "0x351B4A8", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x351B5A4", Offset = "0x351B5A4", VA = "0x351B5A4", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x351B32C", Offset = "0x351B32C", VA = "0x351B32C")]
		protected void StoreDefaultState()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x351B954", Offset = "0x351B954", VA = "0x351B954")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F4124", Offset = "0x16F4124")]
		public float weight;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F413C", Offset = "0x16F413C")]
		public float localRotationWeight;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F4154", Offset = "0x16F4154")]
		public float localPositionWeight;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x6001636")]
		public abstract void AutoMapping();

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x2CAE7C4", Offset = "0x2CAE7C4", VA = "0x2CAE7C4")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x6001638")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x6001639")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x600163A")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x2CAE7D0", Offset = "0x2CAE7D0", VA = "0x2CAE7D0", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x2CAE824", Offset = "0x2CAE824", VA = "0x2CAE824", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x2CAE860", Offset = "0x2CAE860", VA = "0x2CAE860", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x2CAE878", Offset = "0x2CAE878", VA = "0x2CAE878")]
		protected Poser()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E82B4", Offset = "0x16E82B4")]
	public class RagdollUtility : MonoBehaviour
	{
		[Token(Token = "0x20005AA")]
		public class Rigidbone
		{
			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public UnityEngine.Vector3 deltaPosition;

			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public UnityEngine.Vector3 lastPosition;

			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x6002322")]
			[Address(RVA = "0x2CAEEA8", Offset = "0x2CAEEA8", VA = "0x2CAEEA8")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x6002323")]
			[Address(RVA = "0x2CAFB20", Offset = "0x2CAFB20", VA = "0x2CAFB20")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x6002324")]
			[Address(RVA = "0x2CAF904", Offset = "0x2CAF904", VA = "0x2CAF904")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x20005AB")]
		public class Child
		{
			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.Vector3 localPosition;

			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x6002325")]
			[Address(RVA = "0x2CAF058", Offset = "0x2CAF058", VA = "0x2CAF058")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x6002326")]
			[Address(RVA = "0x2CAFCBC", Offset = "0x2CAFCBC", VA = "0x2CAFCBC")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x6002327")]
			[Address(RVA = "0x2CAFC6C", Offset = "0x2CAFC6C", VA = "0x2CAFC6C")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9F14", Offset = "0x16E9F14")]
		private sealed class <DisableRagdollSmooth>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RagdollUtility <>4__this;

			[Token(Token = "0x17000516")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600232B")]
				[Address(RVA = "0x2CB031C", Offset = "0x2CB031C", VA = "0x2CB031C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000517")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600232D")]
				[Address(RVA = "0x2CB0384", Offset = "0x2CB0384", VA = "0x2CB0384", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002328")]
			[Address(RVA = "0x2CAF0D0", Offset = "0x2CAF0D0", VA = "0x2CAF0D0")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002329")]
			[Address(RVA = "0x2CB00B4", Offset = "0x2CB00B4", VA = "0x2CB00B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600232A")]
			[Address(RVA = "0x2CB00B8", Offset = "0x2CB00B8", VA = "0x2CB00B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600232C")]
			[Address(RVA = "0x2CB0324", Offset = "0x2CB0324", VA = "0x2CB0324", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F416C", Offset = "0x16F416C")]
		public IK ik;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F41A4", Offset = "0x16F41A4")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F41DC", Offset = "0x16F41DC")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4214", Offset = "0x16F4214")]
		public float applyVelocity;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F424C", Offset = "0x16F424C")]
		public float applyAngularVelocity;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x17000329")]
		private bool isRagdoll
		{
			[Token(Token = "0x600164A")]
			[Address(RVA = "0x2CAE8C0", Offset = "0x2CAE8C0", VA = "0x2CAE8C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032A")]
		private bool ikUsed
		{
			[Token(Token = "0x600164C")]
			[Address(RVA = "0x2CAF4BC", Offset = "0x2CAF4BC", VA = "0x2CAF4BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x2CAE888", Offset = "0x2CAE888", VA = "0x2CAE888")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x2CAE938", Offset = "0x2CAE938", VA = "0x2CAE938")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x2CAEA74", Offset = "0x2CAEA74", VA = "0x2CAEA74")]
		public void Start()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x2CAE9F8", Offset = "0x2CAE9F8", VA = "0x2CAE9F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1703FA0", Offset = "0x1703FA0")]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x2CAF0FC", Offset = "0x2CAF0FC", VA = "0x2CAF0FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x2CAF348", Offset = "0x2CAF348", VA = "0x2CAF348")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x2CAF400", Offset = "0x2CAF400", VA = "0x2CAF400")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x2CAF640", Offset = "0x2CAF640", VA = "0x2CAF640")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x2CAF480", Offset = "0x2CAF480", VA = "0x2CAF480")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x2CAF5FC", Offset = "0x2CAF5FC", VA = "0x2CAF5FC")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x2CAF6DC", Offset = "0x2CAF6DC", VA = "0x2CAF6DC")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x2CAF674", Offset = "0x2CAF674", VA = "0x2CAF674")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x2CAE990", Offset = "0x2CAE990", VA = "0x2CAE990")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x2CAF388", Offset = "0x2CAF388", VA = "0x2CAF388")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x2CAFE84", Offset = "0x2CAFE84", VA = "0x2CAFE84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x2CAFFAC", Offset = "0x2CAFFAC", VA = "0x2CAFFAC")]
		public RagdollUtility()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public abstract class RotationLimit : MonoBehaviour
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Vector3 axis;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F4294", Offset = "0x16F4294")]
		private bool <defaultLocalRotationOverride>k__BackingField;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool initiated;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool applicationQuit;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x1700032B")]
		public UnityEngine.Vector3 secondaryAxis
		{
			[Token(Token = "0x6001656")]
			[Address(RVA = "0x2CB1C68", Offset = "0x2CB1C68", VA = "0x2CB1C68")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x1700032C")]
		public UnityEngine.Vector3 crossAxis
		{
			[Token(Token = "0x6001657")]
			[Address(RVA = "0x2CB1CA4", Offset = "0x2CB1CA4", VA = "0x2CB1CA4")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x1700032D")]
		public bool defaultLocalRotationOverride
		{
			[Token(Token = "0x6001658")]
			[Address(RVA = "0x2CB1D74", Offset = "0x2CB1D74", VA = "0x2CB1D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704004", Offset = "0x1704004")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001659")]
			[Address(RVA = "0x2CB1D7C", Offset = "0x2CB1D7C", VA = "0x2CB1D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704014", Offset = "0x1704014")]
			private set
			{
			}
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x2CB18CC", Offset = "0x2CB18CC", VA = "0x2CB18CC")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x2CB1914", Offset = "0x2CB1914", VA = "0x2CB1914")]
		public void SetDefaultLocalRotation(Quaternion localRotation)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x2CB192C", Offset = "0x2CB192C", VA = "0x2CB192C")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x2CB1BC0", Offset = "0x2CB1BC0", VA = "0x2CB1BC0")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x2CB1C30", Offset = "0x2CB1C30", VA = "0x2CB1C30")]
		public void Disable()
		{
		}

		[Token(Token = "0x600165A")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x2CB1AD0", Offset = "0x2CB1AD0", VA = "0x2CB1AD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x2CB1D88", Offset = "0x2CB1D88", VA = "0x2CB1D88")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x2CB1D8C", Offset = "0x2CB1D8C", VA = "0x2CB1D8C")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x2CB1DC0", Offset = "0x2CB1DC0", VA = "0x2CB1DC0")]
		protected static Quaternion Limit1DOF(Quaternion rotation, UnityEngine.Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x2CB1EA4", Offset = "0x2CB1EA4", VA = "0x2CB1EA4")]
		protected static Quaternion LimitTwist(Quaternion rotation, UnityEngine.Vector3 axis, UnityEngine.Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x2CB2120", Offset = "0x2CB2120", VA = "0x2CB2120")]
		protected static float GetOrthogonalAngle(UnityEngine.Vector3 v1, UnityEngine.Vector3 v2, UnityEngine.Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x2CB21DC", Offset = "0x2CB21DC", VA = "0x2CB21DC")]
		protected RotationLimit()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E8318", Offset = "0x16E8318")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8318", Offset = "0x16E8318")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F42A4", Offset = "0x16F42A4")]
		public float limit;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F42C0", Offset = "0x16F42C0")]
		public float twistLimit;

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x2CB2254", Offset = "0x2CB2254", VA = "0x2CB2254")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1704024", Offset = "0x1704024")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x2CB22A0", Offset = "0x2CB22A0", VA = "0x2CB22A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x170405C", Offset = "0x170405C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x2CB22EC", Offset = "0x2CB22EC", VA = "0x2CB22EC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1704094", Offset = "0x1704094")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x2CB2338", Offset = "0x2CB2338", VA = "0x2CB2338")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17040CC", Offset = "0x17040CC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x2CB2384", Offset = "0x2CB2384", VA = "0x2CB2384", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x2CB243C", Offset = "0x2CB243C", VA = "0x2CB243C")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x2CB2684", Offset = "0x2CB2684", VA = "0x2CB2684")]
		public RotationLimitAngle()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E8378", Offset = "0x16E8378")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8378", Offset = "0x16E8378")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useLimits;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float min;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float max;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion lastRotation;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastAngle;

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x2CB2694", Offset = "0x2CB2694", VA = "0x2CB2694")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1704104", Offset = "0x1704104")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x2CB26E0", Offset = "0x2CB26E0", VA = "0x2CB26E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x170413C", Offset = "0x170413C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x2CB272C", Offset = "0x2CB272C", VA = "0x2CB272C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1704174", Offset = "0x1704174")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x2CB2778", Offset = "0x2CB2778", VA = "0x2CB2778")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17041AC", Offset = "0x17041AC")]
		private void ASThread()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x2CB27C4", Offset = "0x2CB27C4", VA = "0x2CB27C4", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x2CB27EC", Offset = "0x2CB27EC", VA = "0x2CB27EC")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x2CB2AEC", Offset = "0x2CB2AEC", VA = "0x2CB2AEC")]
		public RotationLimitHinge()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E83D8", Offset = "0x16E83D8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E83D8", Offset = "0x16E83D8")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x20005AD")]
		public class ReachCone
		{
			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Vector3[] tetrahedron;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public UnityEngine.Vector3 S;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEngine.Vector3 B;

			[Token(Token = "0x17000518")]
			public UnityEngine.Vector3 o
			{
				[Token(Token = "0x600232E")]
				[Address(RVA = "0x2CB4B84", Offset = "0x2CB4B84", VA = "0x2CB4B84")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x17000519")]
			public UnityEngine.Vector3 a
			{
				[Token(Token = "0x600232F")]
				[Address(RVA = "0x2CB4BBC", Offset = "0x2CB4BBC", VA = "0x2CB4BBC")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x1700051A")]
			public UnityEngine.Vector3 b
			{
				[Token(Token = "0x6002330")]
				[Address(RVA = "0x2CB4BF8", Offset = "0x2CB4BF8", VA = "0x2CB4BF8")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x1700051B")]
			public UnityEngine.Vector3 c
			{
				[Token(Token = "0x6002331")]
				[Address(RVA = "0x2CB4C34", Offset = "0x2CB4C34", VA = "0x2CB4C34")]
				get
				{
					return default(UnityEngine.Vector3);
				}
			}

			[Token(Token = "0x1700051C")]
			public bool isValid
			{
				[Token(Token = "0x6002333")]
				[Address(RVA = "0x2CB3CC8", Offset = "0x2CB3CC8", VA = "0x2CB3CC8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002332")]
			[Address(RVA = "0x2CB4314", Offset = "0x2CB4314", VA = "0x2CB4314")]
			public ReachCone(UnityEngine.Vector3 _o, UnityEngine.Vector3 _a, UnityEngine.Vector3 _b, UnityEngine.Vector3 _c)
			{
			}

			[Token(Token = "0x6002334")]
			[Address(RVA = "0x2CB4488", Offset = "0x2CB4488", VA = "0x2CB4488")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005AE")]
		public class LimitPoint
		{
			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Vector3 point;

			[Token(Token = "0x40020C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x6002335")]
			[Address(RVA = "0x2CB3CD8", Offset = "0x2CB3CD8", VA = "0x2CB3CD8")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F42EC", Offset = "0x16F42EC")]
		public float twistLimit;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F4308", Offset = "0x16F4308")]
		public int smoothIterations;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		public UnityEngine.Vector3[] P;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x2CB2B74", Offset = "0x2CB2B74", VA = "0x2CB2B74")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17041E4", Offset = "0x17041E4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x2CB2BC0", Offset = "0x2CB2BC0", VA = "0x2CB2BC0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x170421C", Offset = "0x170421C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x2CB2C0C", Offset = "0x2CB2C0C", VA = "0x2CB2C0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1704254", Offset = "0x1704254")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x2CB2C58", Offset = "0x2CB2C58", VA = "0x2CB2C58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x170428C", Offset = "0x170428C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x2CB2CA4", Offset = "0x2CB2CA4", VA = "0x2CB2CA4")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x2CB31E8", Offset = "0x2CB31E8", VA = "0x2CB31E8", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x2CB32E0", Offset = "0x2CB32E0", VA = "0x2CB32E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x2CB38E8", Offset = "0x2CB38E8", VA = "0x2CB38E8")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x2CB2D50", Offset = "0x2CB2D50", VA = "0x2CB2D50")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x2CB3D5C", Offset = "0x2CB3D5C", VA = "0x2CB3D5C")]
		private UnityEngine.Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x2CB4648", Offset = "0x2CB4648", VA = "0x2CB4648")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x2CB468C", Offset = "0x2CB468C", VA = "0x2CB468C")]
		private UnityEngine.Vector3 PointToTangentPlane(UnityEngine.Vector3 p, float r)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x2CB47D4", Offset = "0x2CB47D4", VA = "0x2CB47D4")]
		private UnityEngine.Vector3 TangentPointToSphere(UnityEngine.Vector3 q, float r)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x2CB35AC", Offset = "0x2CB35AC", VA = "0x2CB35AC")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x2CB4964", Offset = "0x2CB4964", VA = "0x2CB4964")]
		private int GetReachCone(UnityEngine.Vector3 L)
		{
			return default(int);
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x2CB4B14", Offset = "0x2CB4B14", VA = "0x2CB4B14")]
		public RotationLimitPolygonal()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x16E8438", Offset = "0x16E8438")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8438", Offset = "0x16E8438")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F43C8", Offset = "0x16F43C8")]
		public float twistLimit;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public AnimationCurve spline;

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x2CB4C70", Offset = "0x2CB4C70", VA = "0x2CB4C70")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17042C4", Offset = "0x17042C4")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x2CB4CBC", Offset = "0x2CB4CBC", VA = "0x2CB4CBC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x17042FC", Offset = "0x17042FC")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x2CB4D08", Offset = "0x2CB4D08", VA = "0x2CB4D08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1704334", Offset = "0x1704334")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x2CB4D54", Offset = "0x2CB4D54", VA = "0x2CB4D54")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x170436C", Offset = "0x170436C")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x2CB4DA0", Offset = "0x2CB4DA0", VA = "0x2CB4DA0")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x2CB4DBC", Offset = "0x2CB4DBC", VA = "0x2CB4DBC", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x2CB4E74", Offset = "0x2CB4E74", VA = "0x2CB4E74")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x2CB51A0", Offset = "0x2CB51A0", VA = "0x2CB51A0")]
		public RotationLimitSpline()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class AimController : MonoBehaviour
	{
		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9F24", Offset = "0x16E9F24")]
		private sealed class <TurnToTarget>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AimController <>4__this;

			[Token(Token = "0x1700051D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002339")]
				[Address(RVA = "0x28D9A48", Offset = "0x28D9A48", VA = "0x28D9A48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600233B")]
				[Address(RVA = "0x28D9AB0", Offset = "0x28D9AB0", VA = "0x28D9AB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002336")]
			[Address(RVA = "0x28D9818", Offset = "0x28D9818", VA = "0x28D9818")]
			[DebuggerHidden]
			public <TurnToTarget>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002337")]
			[Address(RVA = "0x28D9918", Offset = "0x28D9918", VA = "0x28D9918", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002338")]
			[Address(RVA = "0x28D991C", Offset = "0x28D991C", VA = "0x28D991C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600233A")]
			[Address(RVA = "0x28D9A50", Offset = "0x28D9A50", VA = "0x28D9A50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F441C", Offset = "0x16F441C")]
		public AimIK ik;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4454", Offset = "0x16F4454")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F4454", Offset = "0x16F4454")]
		public float weight;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F44A8", Offset = "0x16F44A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F44A8", Offset = "0x16F44A8")]
		public Transform target;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4508", Offset = "0x16F4508")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4540", Offset = "0x16F4540")]
		public float weightSmoothTime;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F4578", Offset = "0x16F4578")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4578", Offset = "0x16F4578")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F45D8", Offset = "0x16F45D8")]
		public float maxRadiansDelta;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4610", Offset = "0x16F4610")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4648", Offset = "0x16F4648")]
		public float slerpSpeed;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4680", Offset = "0x16F4680")]
		public UnityEngine.Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F46B8", Offset = "0x16F46B8")]
		public float minDistance;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F46F0", Offset = "0x16F46F0")]
		public UnityEngine.Vector3 offset;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F4728", Offset = "0x16F4728")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4728", Offset = "0x16F4728")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F4728", Offset = "0x16F4728")]
		public float maxRootAngle;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F47A4", Offset = "0x16F47A4")]
		public bool turnToTarget;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F47DC", Offset = "0x16F47DC")]
		public float turnToTargetTime;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F4814", Offset = "0x16F4814")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4814", Offset = "0x16F4814")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4874", Offset = "0x16F4874")]
		public UnityEngine.Vector3 animatedAimDirection;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform lastTarget;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float switchWeight;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float switchWeightV;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float weightV;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private UnityEngine.Vector3 lastPosition;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private UnityEngine.Vector3 dir;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool turningToTarget;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float turnToTargetMlp;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float turnToTargetMlpV;

		[Token(Token = "0x1700032E")]
		private UnityEngine.Vector3 pivot
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0x28D8A00", Offset = "0x28D8A00", VA = "0x28D8A00")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x28D8900", Offset = "0x28D8900", VA = "0x28D8900")]
		private void Start()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x28D8B4C", Offset = "0x28D8B4C", VA = "0x28D8B4C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x28D9290", Offset = "0x28D9290", VA = "0x28D9290")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x28D942C", Offset = "0x28D942C", VA = "0x28D942C")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x28D979C", Offset = "0x28D979C", VA = "0x28D979C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17043A4", Offset = "0x17043A4")]
		private IEnumerator TurnToTarget()
		{
			return null;
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x28D9844", Offset = "0x28D9844", VA = "0x28D9844")]
		public AimController()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class AimPoser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005B0")]
		public class Pose
		{
			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEngine.Vector3 direction;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x600233C")]
			[Address(RVA = "0x28D9CB0", Offset = "0x28D9CB0", VA = "0x28D9CB0")]
			public bool IsInDirection(UnityEngine.Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x600233D")]
			[Address(RVA = "0x28D9FBC", Offset = "0x28D9FBC", VA = "0x28D9FBC")]
			public void SetAngleBuffer(float value)
			{
			}

			[Token(Token = "0x600233E")]
			[Address(RVA = "0x28D9FC4", Offset = "0x28D9FC4", VA = "0x28D9FC4")]
			public Pose()
			{
			}
		}

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x28D4308", Offset = "0x28D4308", VA = "0x28D4308")]
		public Pose GetPose(UnityEngine.Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x28D43E4", Offset = "0x28D43E4", VA = "0x28D43E4")]
		public void SetPoseActive(Pose pose)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x28D9F48", Offset = "0x28D9F48", VA = "0x28D9F48")]
		public AimPoser()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20005B1")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x2000629")]
			public class EffectorLink
			{
				[Token(Token = "0x400231A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE940", Offset = "0x16FE940")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x400231B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE978", Offset = "0x16FE978")]
				public float weight;

				[Token(Token = "0x600248D")]
				[Address(RVA = "0x28DA5B4", Offset = "0x28DA5B4", VA = "0x28DA5B4")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD190", Offset = "0x16FD190")]
			public Transform transform;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD1C8", Offset = "0x16FD1C8")]
			public Transform relativeTo;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD200", Offset = "0x16FD200")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD238", Offset = "0x16FD238")]
			public float verticalWeight;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD270", Offset = "0x16FD270")]
			public float horizontalWeight;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD2A8", Offset = "0x16FD2A8")]
			public float speed;

			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private UnityEngine.Vector3 lastRelativePos;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityEngine.Vector3 smoothDelta;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x600233F")]
			[Address(RVA = "0x28DA120", Offset = "0x28DA120", VA = "0x28DA120")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x6002340")]
			[Address(RVA = "0x28DA58C", Offset = "0x28DA58C", VA = "0x28DA58C")]
			private static UnityEngine.Vector3 Multiply(UnityEngine.Vector3 v1, UnityEngine.Vector3 v2)
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x6002341")]
			[Address(RVA = "0x28DA59C", Offset = "0x28DA59C", VA = "0x28DA59C")]
			public Body()
			{
			}
		}

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F48AC", Offset = "0x16F48AC")]
		public Body[] bodies;

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x28D9FE0", Offset = "0x28D9FE0", VA = "0x28D9FE0", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x28DA584", Offset = "0x28DA584", VA = "0x28DA584")]
		public Amplifier()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F48E4", Offset = "0x16F48E4")]
		public float tiltSpeed;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F491C", Offset = "0x16F491C")]
		public float tiltSensitivity;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4954", Offset = "0x16F4954")]
		public OffsetPose poseLeft;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F498C", Offset = "0x16F498C")]
		public OffsetPose poseRight;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private UnityEngine.Vector3 lastForward;

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x28DBBF4", Offset = "0x28DBBF4", VA = "0x28DBBF4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x28DBC3C", Offset = "0x28DBC3C", VA = "0x28DBC3C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x28DBE6C", Offset = "0x28DBE6C", VA = "0x28DBE6C")]
		public BodyTilt()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	[ExecuteInEditMode]
	public class EditorIK : MonoBehaviour
	{
		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IK ik;

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x28DC900", Offset = "0x28DC900", VA = "0x28DC900")]
		private void Start()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x28DC9A8", Offset = "0x28DC9A8", VA = "0x28DC9A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x28DCA78", Offset = "0x28DCA78", VA = "0x28DCA78")]
		public EditorIK()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20005B2")]
		public abstract class HitPoint
		{
			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD2E0", Offset = "0x16FD2E0")]
			public string name;

			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD318", Offset = "0x16FD318")]
			public Collider collider;

			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD350", Offset = "0x16FD350")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FD39C", Offset = "0x16FD39C")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x40020D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FD3AC", Offset = "0x16FD3AC")]
			private float <timer>k__BackingField;

			[Token(Token = "0x40020DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FD3BC", Offset = "0x16FD3BC")]
			private UnityEngine.Vector3 <force>k__BackingField;

			[Token(Token = "0x40020DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FD3CC", Offset = "0x16FD3CC")]
			private UnityEngine.Vector3 <point>k__BackingField;

			[Token(Token = "0x40020DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x40020DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x40020DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x1700051F")]
			public bool inProgress
			{
				[Token(Token = "0x6002342")]
				[Address(RVA = "0x351BA18", Offset = "0x351BA18", VA = "0x351BA18")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000520")]
			protected float crossFader
			{
				[Token(Token = "0x6002343")]
				[Address(RVA = "0x351BFC0", Offset = "0x351BFC0", VA = "0x351BFC0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707890", Offset = "0x1707890")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002344")]
				[Address(RVA = "0x351BFC8", Offset = "0x351BFC8", VA = "0x351BFC8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17078A0", Offset = "0x17078A0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000521")]
			protected float timer
			{
				[Token(Token = "0x6002345")]
				[Address(RVA = "0x351BFD0", Offset = "0x351BFD0", VA = "0x351BFD0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17078B0", Offset = "0x17078B0")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002346")]
				[Address(RVA = "0x351BFD8", Offset = "0x351BFD8", VA = "0x351BFD8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17078C0", Offset = "0x17078C0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000522")]
			protected UnityEngine.Vector3 force
			{
				[Token(Token = "0x6002347")]
				[Address(RVA = "0x351BFE0", Offset = "0x351BFE0", VA = "0x351BFE0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17078D0", Offset = "0x17078D0")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x6002348")]
				[Address(RVA = "0x351BFEC", Offset = "0x351BFEC", VA = "0x351BFEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17078E0", Offset = "0x17078E0")]
				private set
				{
				}
			}

			[Token(Token = "0x17000523")]
			protected UnityEngine.Vector3 point
			{
				[Token(Token = "0x6002349")]
				[Address(RVA = "0x351BFF8", Offset = "0x351BFF8", VA = "0x351BFF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17078F0", Offset = "0x17078F0")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x600234A")]
				[Address(RVA = "0x351C004", Offset = "0x351C004", VA = "0x351C004")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707900", Offset = "0x1707900")]
				private set
				{
				}
			}

			[Token(Token = "0x600234B")]
			[Address(RVA = "0x351BE8C", Offset = "0x351BE8C", VA = "0x351BE8C")]
			public void Hit(UnityEngine.Vector3 force, UnityEngine.Vector3 point)
			{
			}

			[Token(Token = "0x600234C")]
			[Address(RVA = "0x351BB00", Offset = "0x351BB00", VA = "0x351BB00")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x600234D")]
			protected abstract float GetLength();

			[Token(Token = "0x600234E")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x600234F")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);

			[Token(Token = "0x6002350")]
			[Address(RVA = "0x351C010", Offset = "0x351C010", VA = "0x351C010")]
			protected HitPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B3")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x200062A")]
			public class EffectorLink
			{
				[Token(Token = "0x400231C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE9B0", Offset = "0x16FE9B0")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x400231D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE9E8", Offset = "0x16FE9E8")]
				public float weight;

				[Token(Token = "0x400231E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private UnityEngine.Vector3 lastValue;

				[Token(Token = "0x400231F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private UnityEngine.Vector3 current;

				[Token(Token = "0x600248E")]
				[Address(RVA = "0x351C98C", Offset = "0x351C98C", VA = "0x351C98C")]
				public void Apply(IKSolverFullBodyBiped solver, UnityEngine.Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x600248F")]
				[Address(RVA = "0x351C780", Offset = "0x351C780", VA = "0x351C780")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002490")]
				[Address(RVA = "0x351CAC8", Offset = "0x351CAC8", VA = "0x351CAC8")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40020DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD3DC", Offset = "0x16FD3DC")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD414", Offset = "0x16FD414")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD44C", Offset = "0x16FD44C")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x6002351")]
			[Address(RVA = "0x351C59C", Offset = "0x351C59C", VA = "0x351C59C", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6002352")]
			[Address(RVA = "0x351C714", Offset = "0x351C714", VA = "0x351C714", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6002353")]
			[Address(RVA = "0x351C794", Offset = "0x351C794", VA = "0x351C794", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6002354")]
			[Address(RVA = "0x351CAB4", Offset = "0x351CAB4", VA = "0x351CAB4")]
			public HitPointEffector()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B4")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x200062B")]
			public class BoneLink
			{
				[Token(Token = "0x4002320")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FEA20", Offset = "0x16FEA20")]
				public Transform bone;

				[Token(Token = "0x4002321")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FEA58", Offset = "0x16FEA58")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FEA58", Offset = "0x16FEA58")]
				public float weight;

				[Token(Token = "0x4002322")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x4002323")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x6002491")]
				[Address(RVA = "0x351C3A4", Offset = "0x351C3A4", VA = "0x351C3A4")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6002492")]
				[Address(RVA = "0x351C12C", Offset = "0x351C12C", VA = "0x351C12C")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002493")]
				[Address(RVA = "0x351C514", Offset = "0x351C514", VA = "0x351C514")]
				public BoneLink()
				{
				}
			}

			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD484", Offset = "0x16FD484")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD4BC", Offset = "0x16FD4BC")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6002355")]
			[Address(RVA = "0x351C024", Offset = "0x351C024", VA = "0x351C024", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6002356")]
			[Address(RVA = "0x351C0C8", Offset = "0x351C0C8", VA = "0x351C0C8", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6002357")]
			[Address(RVA = "0x351C138", Offset = "0x351C138", VA = "0x351C138", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6002358")]
			[Address(RVA = "0x351C500", Offset = "0x351C500", VA = "0x351C500")]
			public HitPointBone()
			{
			}
		}

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F49C4", Offset = "0x16F49C4")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F49FC", Offset = "0x16F49FC")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x1700032F")]
		public bool inProgress
		{
			[Token(Token = "0x600169A")]
			[Address(RVA = "0x351B95C", Offset = "0x351B95C", VA = "0x351B95C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x351BA2C", Offset = "0x351BA2C", VA = "0x351BA2C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x351BC4C", Offset = "0x351BC4C", VA = "0x351BC4C")]
		public void Hit(Collider collider, UnityEngine.Vector3 force, UnityEngine.Vector3 point)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x351BFB8", Offset = "0x351BFB8", VA = "0x351BFB8")]
		public HitReaction()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x20005B5")]
		public abstract class Offset
		{
			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD4F4", Offset = "0x16FD4F4")]
			public string name;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD52C", Offset = "0x16FD52C")]
			public Collider collider;

			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD564", Offset = "0x16FD564")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FD5B0", Offset = "0x16FD5B0")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FD5C0", Offset = "0x16FD5C0")]
			private float <timer>k__BackingField;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FD5D0", Offset = "0x16FD5D0")]
			private UnityEngine.Vector3 <force>k__BackingField;

			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16FD5E0", Offset = "0x16FD5E0")]
			private UnityEngine.Vector3 <point>k__BackingField;

			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x17000524")]
			protected float crossFader
			{
				[Token(Token = "0x6002359")]
				[Address(RVA = "0x351D080", Offset = "0x351D080", VA = "0x351D080")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707910", Offset = "0x1707910")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600235A")]
				[Address(RVA = "0x351D088", Offset = "0x351D088", VA = "0x351D088")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707920", Offset = "0x1707920")]
				private set
				{
				}
			}

			[Token(Token = "0x17000525")]
			protected float timer
			{
				[Token(Token = "0x600235B")]
				[Address(RVA = "0x351D090", Offset = "0x351D090", VA = "0x351D090")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707930", Offset = "0x1707930")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600235C")]
				[Address(RVA = "0x351D098", Offset = "0x351D098", VA = "0x351D098")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707940", Offset = "0x1707940")]
				private set
				{
				}
			}

			[Token(Token = "0x17000526")]
			protected UnityEngine.Vector3 force
			{
				[Token(Token = "0x600235D")]
				[Address(RVA = "0x351D0A0", Offset = "0x351D0A0", VA = "0x351D0A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707950", Offset = "0x1707950")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x600235E")]
				[Address(RVA = "0x351D0AC", Offset = "0x351D0AC", VA = "0x351D0AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707960", Offset = "0x1707960")]
				private set
				{
				}
			}

			[Token(Token = "0x17000527")]
			protected UnityEngine.Vector3 point
			{
				[Token(Token = "0x600235F")]
				[Address(RVA = "0x351D0B8", Offset = "0x351D0B8", VA = "0x351D0B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707970", Offset = "0x1707970")]
				get
				{
					return default(UnityEngine.Vector3);
				}
				[Token(Token = "0x6002360")]
				[Address(RVA = "0x351D0C4", Offset = "0x351D0C4", VA = "0x351D0C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1707980", Offset = "0x1707980")]
				private set
				{
				}
			}

			[Token(Token = "0x6002361")]
			[Address(RVA = "0x351CF38", Offset = "0x351CF38", VA = "0x351CF38")]
			public void Hit(UnityEngine.Vector3 force, AnimationCurve[] curves, UnityEngine.Vector3 point)
			{
			}

			[Token(Token = "0x6002362")]
			[Address(RVA = "0x351CB9C", Offset = "0x351CB9C", VA = "0x351CB9C")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6002363")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x6002364")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6002365")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x6002366")]
			[Address(RVA = "0x351D0D0", Offset = "0x351D0D0", VA = "0x351D0D0")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B6")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x200062C")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x4002324")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FEAAC", Offset = "0x16FEAAC")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x4002325")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FEAE4", Offset = "0x16FEAE4")]
				public float weight;

				[Token(Token = "0x4002326")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private UnityEngine.Vector3 lastValue;

				[Token(Token = "0x4002327")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private UnityEngine.Vector3 current;

				[Token(Token = "0x6002494")]
				[Address(RVA = "0x351D58C", Offset = "0x351D58C", VA = "0x351D58C")]
				public void Apply(VRIK ik, UnityEngine.Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6002495")]
				[Address(RVA = "0x351D348", Offset = "0x351D348", VA = "0x351D348")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002496")]
				[Address(RVA = "0x351D6A8", Offset = "0x351D6A8", VA = "0x351D6A8")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD5F0", Offset = "0x16FD5F0")]
			public int forceDirCurveIndex;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD628", Offset = "0x16FD628")]
			public int upDirCurveIndex;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD660", Offset = "0x16FD660")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x6002367")]
			[Address(RVA = "0x351D0E4", Offset = "0x351D0E4", VA = "0x351D0E4", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6002368")]
			[Address(RVA = "0x351D2DC", Offset = "0x351D2DC", VA = "0x351D2DC", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6002369")]
			[Address(RVA = "0x351D35C", Offset = "0x351D35C", VA = "0x351D35C", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x600236A")]
			[Address(RVA = "0x351D68C", Offset = "0x351D68C", VA = "0x351D68C")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B7")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x200062D")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x4002328")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FEB1C", Offset = "0x16FEB1C")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x4002329")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FEB54", Offset = "0x16FEB54")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FEB54", Offset = "0x16FEB54")]
				public float weight;

				[Token(Token = "0x400232A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x400232B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x6002497")]
				[Address(RVA = "0x351DB24", Offset = "0x351DB24", VA = "0x351DB24")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6002498")]
				[Address(RVA = "0x351D7F8", Offset = "0x351D7F8", VA = "0x351D7F8")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002499")]
				[Address(RVA = "0x351DC60", Offset = "0x351DC60", VA = "0x351DC60")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD698", Offset = "0x16FD698")]
			public int curveIndex;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD6D0", Offset = "0x16FD6D0")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x600236B")]
			[Address(RVA = "0x351D6B0", Offset = "0x351D6B0", VA = "0x351D6B0", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x600236C")]
			[Address(RVA = "0x351D794", Offset = "0x351D794", VA = "0x351D794", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x600236D")]
			[Address(RVA = "0x351D804", Offset = "0x351D804", VA = "0x351D804", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x600236E")]
			[Address(RVA = "0x351DC4C", Offset = "0x351DC4C", VA = "0x351DC4C")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4A34", Offset = "0x16F4A34")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4A6C", Offset = "0x16F4A6C")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x351CAD0", Offset = "0x351CAD0", VA = "0x351CAD0", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x351CCF0", Offset = "0x351CCF0", VA = "0x351CCF0")]
		public void Hit(Collider collider, UnityEngine.Vector3 force, UnityEngine.Vector3 point)
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x351D078", Offset = "0x351D078", VA = "0x351D078")]
		public HitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20005B8")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x200062E")]
			public class EffectorLink
			{
				[Token(Token = "0x400232C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FEBA8", Offset = "0x16FEBA8")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x400232D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FEBE0", Offset = "0x16FEBE0")]
				public float weight;

				[Token(Token = "0x600249A")]
				[Address(RVA = "0x35F4BC0", Offset = "0x35F4BC0", VA = "0x35F4BC0")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD708", Offset = "0x16FD708")]
			public Transform transform;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD740", Offset = "0x16FD740")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD778", Offset = "0x16FD778")]
			public float speed;

			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD7B0", Offset = "0x16FD7B0")]
			public float acceleration;

			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD7E8", Offset = "0x16FD7E8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FD7E8", Offset = "0x16FD7E8")]
			public float matchVelocity;

			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD83C", Offset = "0x16FD83C")]
			public float gravity;

			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityEngine.Vector3 delta;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private UnityEngine.Vector3 lazyPoint;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityEngine.Vector3 direction;

			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private UnityEngine.Vector3 lastPosition;

			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x600236F")]
			[Address(RVA = "0x35F468C", Offset = "0x35F468C", VA = "0x35F468C")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002370")]
			[Address(RVA = "0x35F4824", Offset = "0x35F4824", VA = "0x35F4824")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}

			[Token(Token = "0x6002371")]
			[Address(RVA = "0x35F4BA4", Offset = "0x35F4BA4", VA = "0x35F4BA4")]
			public Body()
			{
			}
		}

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4AA4", Offset = "0x16F4AA4")]
		public Body[] bodies;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4ADC", Offset = "0x16F4ADC")]
		public OffsetLimits[] limits;

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x35F4614", Offset = "0x35F4614", VA = "0x35F4614")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x35F4768", Offset = "0x35F4768", VA = "0x35F4768", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x35F4B9C", Offset = "0x35F4B9C", VA = "0x35F4B9C")]
		public Inertia()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class LookAtController : MonoBehaviour
	{
		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F4B14", Offset = "0x16F4B14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4B14", Offset = "0x16F4B14")]
		public Transform target;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F4B74", Offset = "0x16F4B74")]
		public float weight;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UnityEngine.Vector3 offset;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4B8C", Offset = "0x16F4B8C")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4BC4", Offset = "0x16F4BC4")]
		public float weightSmoothTime;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F4BFC", Offset = "0x16F4BFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4BFC", Offset = "0x16F4BFC")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4C5C", Offset = "0x16F4C5C")]
		public float maxRadiansDelta;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4C94", Offset = "0x16F4C94")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4CCC", Offset = "0x16F4CCC")]
		public float slerpSpeed;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4D04", Offset = "0x16F4D04")]
		public UnityEngine.Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4D3C", Offset = "0x16F4D3C")]
		public float minDistance;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F4D74", Offset = "0x16F4D74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4D74", Offset = "0x16F4D74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F4D74", Offset = "0x16F4D74")]
		public float maxRootAngle;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private UnityEngine.Vector3 lastPosition;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UnityEngine.Vector3 dir;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x17000330")]
		private UnityEngine.Vector3 pivot
		{
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x2CABE88", Offset = "0x2CABE88", VA = "0x2CABE88")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x2CABDA0", Offset = "0x2CABDA0", VA = "0x2CABDA0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x2CABFD4", Offset = "0x2CABFD4", VA = "0x2CABFD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x2CAC694", Offset = "0x2CAC694", VA = "0x2CAC694")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x2CAC830", Offset = "0x2CAC830", VA = "0x2CAC830")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x2CACB4C", Offset = "0x2CACB4C", VA = "0x2CACB4C")]
		public LookAtController()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public abstract class OffsetModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005B9")]
		public class OffsetLimits
		{
			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD874", Offset = "0x16FD874")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD8AC", Offset = "0x16FD8AC")]
			public float spring;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD8E4", Offset = "0x16FD8E4")]
			public bool x;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD91C", Offset = "0x16FD91C")]
			public bool y;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD954", Offset = "0x16FD954")]
			public bool z;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD98C", Offset = "0x16FD98C")]
			public float minX;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD9C4", Offset = "0x16FD9C4")]
			public float maxX;

			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FD9FC", Offset = "0x16FD9FC")]
			public float minY;

			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDA34", Offset = "0x16FDA34")]
			public float maxY;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDA6C", Offset = "0x16FDA6C")]
			public float minZ;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDAA4", Offset = "0x16FDAA4")]
			public float maxZ;

			[Token(Token = "0x6002372")]
			[Address(RVA = "0x2CAD074", Offset = "0x2CAD074", VA = "0x2CAD074")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x6002373")]
			[Address(RVA = "0x2CAD5D0", Offset = "0x2CAD5D0", VA = "0x2CAD5D0")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x6002374")]
			[Address(RVA = "0x2CAD600", Offset = "0x2CAD600", VA = "0x2CAD600")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}

			[Token(Token = "0x6002375")]
			[Address(RVA = "0x2CAD6D8", Offset = "0x2CAD6D8", VA = "0x2CAD6D8")]
			public OffsetLimits()
			{
			}
		}

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9F34", Offset = "0x16E9F34")]
		private sealed class <Initiate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifier <>4__this;

			[Token(Token = "0x17000528")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002379")]
				[Address(RVA = "0x2CAD560", Offset = "0x2CAD560", VA = "0x2CAD560", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000529")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600237B")]
				[Address(RVA = "0x2CAD5C8", Offset = "0x2CAD5C8", VA = "0x2CAD5C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002376")]
			[Address(RVA = "0x2CACE80", Offset = "0x2CACE80", VA = "0x2CACE80")]
			[DebuggerHidden]
			public <Initiate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002377")]
			[Address(RVA = "0x2CAD400", Offset = "0x2CAD400", VA = "0x2CAD400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002378")]
			[Address(RVA = "0x2CAD404", Offset = "0x2CAD404", VA = "0x2CAD404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600237A")]
			[Address(RVA = "0x2CAD568", Offset = "0x2CAD568", VA = "0x2CAD568", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4DF0", Offset = "0x16F4DF0")]
		public float weight;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4E28", Offset = "0x16F4E28")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x17000331")]
		protected float deltaTime
		{
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0x2CACDAC", Offset = "0x2CACDAC", VA = "0x2CACDAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60016AB")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x2CACDD8", Offset = "0x2CACDD8", VA = "0x2CACDD8", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x2CACE04", Offset = "0x2CACE04", VA = "0x2CACE04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1704408", Offset = "0x1704408")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x2CACEAC", Offset = "0x2CACEAC", VA = "0x2CACEAC")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x2CACFB8", Offset = "0x2CACFB8", VA = "0x2CACFB8")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x2CAD2D4", Offset = "0x2CAD2D4", VA = "0x2CAD2D4", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x2CAD3F0", Offset = "0x2CAD3F0", VA = "0x2CAD3F0")]
		protected OffsetModifier()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public abstract class OffsetModifierVRIK : MonoBehaviour
	{
		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9F44", Offset = "0x16E9F44")]
		private sealed class <Initiate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifierVRIK <>4__this;

			[Token(Token = "0x1700052A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600237F")]
				[Address(RVA = "0x2CADB78", Offset = "0x2CADB78", VA = "0x2CADB78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002381")]
				[Address(RVA = "0x2CADBE0", Offset = "0x2CADBE0", VA = "0x2CADBE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600237C")]
			[Address(RVA = "0x2CAD7B4", Offset = "0x2CAD7B4", VA = "0x2CAD7B4")]
			[DebuggerHidden]
			public <Initiate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600237D")]
			[Address(RVA = "0x2CADA18", Offset = "0x2CADA18", VA = "0x2CADA18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600237E")]
			[Address(RVA = "0x2CADA1C", Offset = "0x2CADA1C", VA = "0x2CADA1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002380")]
			[Address(RVA = "0x2CADB80", Offset = "0x2CADB80", VA = "0x2CADB80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4E60", Offset = "0x16F4E60")]
		public float weight;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4E98", Offset = "0x16F4E98")]
		public VRIK ik;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x17000332")]
		protected float deltaTime
		{
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x2CAD6E0", Offset = "0x2CAD6E0", VA = "0x2CAD6E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60016B3")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x2CAD70C", Offset = "0x2CAD70C", VA = "0x2CAD70C", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x2CAD738", Offset = "0x2CAD738", VA = "0x2CAD738")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x170446C", Offset = "0x170446C")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x2CAD7E0", Offset = "0x2CAD7E0", VA = "0x2CAD7E0")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x2CAD8EC", Offset = "0x2CAD8EC", VA = "0x2CAD8EC", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x2CADA08", Offset = "0x2CADA08", VA = "0x2CADA08")]
		protected OffsetModifierVRIK()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class OffsetPose : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005BC")]
		public class EffectorLink
		{
			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public UnityEngine.Vector3 offset;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEngine.Vector3 pin;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public UnityEngine.Vector3 pinWeight;

			[Token(Token = "0x6002382")]
			[Address(RVA = "0x2CADCA8", Offset = "0x2CADCA8", VA = "0x2CADCA8")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}

			[Token(Token = "0x6002383")]
			[Address(RVA = "0x2CAE104", Offset = "0x2CAE104", VA = "0x2CAE104")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x2CADBE8", Offset = "0x2CADBE8", VA = "0x2CADBE8")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x2CADFE0", Offset = "0x2CADFE0", VA = "0x2CADFE0")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x2CAE098", Offset = "0x2CAE098", VA = "0x2CAE098")]
		public OffsetPose()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20005BD")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x200062F")]
			public class EffectorLink
			{
				[Token(Token = "0x400232E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FEC18", Offset = "0x16FEC18")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x400232F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FEC50", Offset = "0x16FEC50")]
				public float weight;

				[Token(Token = "0x600249B")]
				[Address(RVA = "0x2CAE7BC", Offset = "0x2CAE7BC", VA = "0x2CAE7BC")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDADC", Offset = "0x16FDADC")]
			public Transform[] raycastFrom;

			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDB14", Offset = "0x16FDB14")]
			public Transform raycastTo;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDB4C", Offset = "0x16FDB4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FDB4C", Offset = "0x16FDB4C")]
			public float raycastRadius;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDBA0", Offset = "0x16FDBA0")]
			public EffectorLink[] effectors;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDBD8", Offset = "0x16FDBD8")]
			public float smoothTimeIn;

			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDC10", Offset = "0x16FDC10")]
			public float smoothTimeOut;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDC48", Offset = "0x16FDC48")]
			public LayerMask layers;

			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private UnityEngine.Vector3 offset;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityEngine.Vector3 offsetTarget;

			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private UnityEngine.Vector3 offsetV;

			[Token(Token = "0x6002384")]
			[Address(RVA = "0x2CAE190", Offset = "0x2CAE190", VA = "0x2CAE190")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6002385")]
			[Address(RVA = "0x2CAE39C", Offset = "0x2CAE39C", VA = "0x2CAE39C")]
			private UnityEngine.Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x6002386")]
			[Address(RVA = "0x2CAE534", Offset = "0x2CAE534", VA = "0x2CAE534")]
			private UnityEngine.Vector3 Raycast(UnityEngine.Vector3 from, UnityEngine.Vector3 to)
			{
				return default(UnityEngine.Vector3);
			}

			[Token(Token = "0x6002387")]
			[Address(RVA = "0x2CAE7A8", Offset = "0x2CAE7A8", VA = "0x2CAE7A8")]
			public Avoider()
			{
			}
		}

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4ED0", Offset = "0x16F4ED0")]
		public Avoider[] avoiders;

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x2CAE10C", Offset = "0x2CAE10C", VA = "0x2CAE10C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x2CAE38C", Offset = "0x2CAE38C", VA = "0x2CAE38C")]
		public PenetrationAvoidance()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20005BE")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x2000630")]
			public class EffectorLink
			{
				[Token(Token = "0x4002330")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FEC88", Offset = "0x16FEC88")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002331")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FECC0", Offset = "0x16FECC0")]
				public float weight;

				[Token(Token = "0x600249C")]
				[Address(RVA = "0x2CB18C4", Offset = "0x2CB18C4", VA = "0x2CB18C4")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDC80", Offset = "0x16FDC80")]
			public UnityEngine.Vector3 offset;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDCB8", Offset = "0x16FDCB8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FDCB8", Offset = "0x16FDCB8")]
			public float additivity;

			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDD0C", Offset = "0x16FDD0C")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDD44", Offset = "0x16FDD44")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityEngine.Vector3 additiveOffset;

			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private UnityEngine.Vector3 lastOffset;

			[Token(Token = "0x6002388")]
			[Address(RVA = "0x2CB05B4", Offset = "0x2CB05B4", VA = "0x2CB05B4")]
			public void Start()
			{
			}

			[Token(Token = "0x6002389")]
			[Address(RVA = "0x2CB1168", Offset = "0x2CB1168", VA = "0x2CB1168")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}

			[Token(Token = "0x600238A")]
			[Address(RVA = "0x2CB18B0", Offset = "0x2CB18B0", VA = "0x2CB18B0")]
			public RecoilOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005BF")]
		public enum Handedness
		{
			[Token(Token = "0x4002126")]
			Right,
			[Token(Token = "0x4002127")]
			Left
		}

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4F08", Offset = "0x16F4F08")]
		public AimIK aimIK;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4F40", Offset = "0x16F4F40")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4F78", Offset = "0x16F4F78")]
		public Handedness handedness;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4FB0", Offset = "0x16F4FB0")]
		public bool twoHanded;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F4FE8", Offset = "0x16F4FE8")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5020", Offset = "0x16F5020")]
		public float magnitudeRandom;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5058", Offset = "0x16F5058")]
		public UnityEngine.Vector3 rotationRandom;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5090", Offset = "0x16F5090")]
		public UnityEngine.Vector3 handRotationOffset;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F50C8", Offset = "0x16F50C8")]
		public float blendTime;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16F5100", Offset = "0x16F5100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5100", Offset = "0x16F5100")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private UnityEngine.Vector3 aimIKAxis;

		[Token(Token = "0x17000333")]
		public bool isFinished
		{
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x2CB038C", Offset = "0x2CB038C", VA = "0x2CB038C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000334")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x2CB141C", Offset = "0x2CB141C", VA = "0x2CB141C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x2CB145C", Offset = "0x2CB145C", VA = "0x2CB145C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		private Transform primaryHand
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x2CB13DC", Offset = "0x2CB13DC", VA = "0x2CB13DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		private Transform secondaryHand
		{
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x2CB13FC", Offset = "0x2CB13FC", VA = "0x2CB13FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x2CB03BC", Offset = "0x2CB03BC", VA = "0x2CB03BC")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x2CB03E8", Offset = "0x2CB03E8", VA = "0x2CB03E8")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x2CB0664", Offset = "0x2CB0664", VA = "0x2CB0664", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x2CB149C", Offset = "0x2CB149C", VA = "0x2CB149C")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x2CB15F4", Offset = "0x2CB15F4", VA = "0x2CB15F4")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x2CB1630", Offset = "0x2CB1630", VA = "0x2CB1630", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x2CB17FC", Offset = "0x2CB17FC", VA = "0x2CB17FC")]
		public Recoil()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class ShoulderRotator : MonoBehaviour
	{
		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5160", Offset = "0x16F5160")]
		public float weight;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5198", Offset = "0x16F5198")]
		public float offset;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x2CB51AC", Offset = "0x2CB51AC", VA = "0x2CB51AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x2CB52A0", Offset = "0x2CB52A0", VA = "0x2CB52A0")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x2CB538C", Offset = "0x2CB538C", VA = "0x2CB538C")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x2CB57D4", Offset = "0x2CB57D4", VA = "0x2CB57D4")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x2CB580C", Offset = "0x2CB580C", VA = "0x2CB580C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x2CB5928", Offset = "0x2CB5928", VA = "0x2CB5928")]
		public ShoulderRotator()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x20005C0")]
		public class Settings
		{
			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDD7C", Offset = "0x16FDD7C")]
			public float scaleMlp;

			[Token(Token = "0x4002129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDDB4", Offset = "0x16FDDB4")]
			public UnityEngine.Vector3 headTrackerForward;

			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDDEC", Offset = "0x16FDDEC")]
			public UnityEngine.Vector3 headTrackerUp;

			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDE24", Offset = "0x16FDE24")]
			public UnityEngine.Vector3 bodyTrackerForward;

			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDE5C", Offset = "0x16FDE5C")]
			public UnityEngine.Vector3 bodyTrackerUp;

			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDE94", Offset = "0x16FDE94")]
			public UnityEngine.Vector3 handTrackerForward;

			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDECC", Offset = "0x16FDECC")]
			public UnityEngine.Vector3 handTrackerUp;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDF04", Offset = "0x16FDF04")]
			public UnityEngine.Vector3 footTrackerForward;

			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDF3C", Offset = "0x16FDF3C")]
			public UnityEngine.Vector3 footTrackerUp;

			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16FDF74", Offset = "0x16FDF74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDF74", Offset = "0x16FDF74")]
			public UnityEngine.Vector3 headOffset;

			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDFC4", Offset = "0x16FDFC4")]
			public UnityEngine.Vector3 handOffset;

			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FDFFC", Offset = "0x16FDFFC")]
			public float footForwardOffset;

			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE034", Offset = "0x16FE034")]
			public float footInwardOffset;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE06C", Offset = "0x16FE06C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FE06C", Offset = "0x16FE06C")]
			public float footHeadingOffset;

			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FE0C8", Offset = "0x16FE0C8")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16FE0E0", Offset = "0x16FE0E0")]
			public float pelvisRotationWeight;

			[Token(Token = "0x600238B")]
			[Address(RVA = "0x2CBABC4", Offset = "0x2CBABC4", VA = "0x2CBABC4")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005C1")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x2000631")]
			public class Target
			{
				[Token(Token = "0x4002332")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x4002333")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public UnityEngine.Vector3 localPosition;

				[Token(Token = "0x4002334")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x600249D")]
				[Address(RVA = "0x2CB9BF0", Offset = "0x2CB9BF0", VA = "0x2CB9BF0")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x600249E")]
				[Address(RVA = "0x2CBA764", Offset = "0x2CBA764", VA = "0x2CBA764")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public UnityEngine.Vector3 pelvisTargetRight;

			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x4002143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x600238C")]
			[Address(RVA = "0x2CB91A4", Offset = "0x2CB91A4", VA = "0x2CB91A4")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x2CB7CDC", Offset = "0x2CB7CDC", VA = "0x2CB7CDC")]
		public static void RecalibrateScale(VRIK ik, Settings settings)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x2CB7E44", Offset = "0x2CB7E44", VA = "0x2CB7E44")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x2CB91AC", Offset = "0x2CB91AC", VA = "0x2CB91AC")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, UnityEngine.Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x2CB9CB4", Offset = "0x2CB9CB4", VA = "0x2CB9CB4")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x2CBA7C4", Offset = "0x2CBA7C4", VA = "0x2CBA7C4")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, UnityEngine.Vector3 rootForward, bool isLeft)
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class VRIKLODController : MonoBehaviour
	{
		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer LODRenderer;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LODDistance;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool allowCulled;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRIK ik;

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x2CBACBC", Offset = "0x2CBACBC", VA = "0x2CBACBC")]
		private void Start()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x2CBAD1C", Offset = "0x2CBAD1C", VA = "0x2CBAD1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x2CBAD50", Offset = "0x2CBAD50", VA = "0x2CBAD50")]
		private int GetLODLevel()
		{
			return default(int);
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x2CBAED8", Offset = "0x2CBAED8", VA = "0x2CBAED8")]
		public VRIKLODController()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class VRIKRootController : MonoBehaviour
	{
		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F51D0", Offset = "0x16F51D0")]
		private UnityEngine.Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x17000338")]
		public UnityEngine.Vector3 pelvisTargetRight
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x2CBAEF0", Offset = "0x2CBAEF0", VA = "0x2CBAEF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17044D0", Offset = "0x17044D0")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x2CBAEFC", Offset = "0x2CBAEFC", VA = "0x2CBAEFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17044E0", Offset = "0x17044E0")]
			private set
			{
			}
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x2CBAF08", Offset = "0x2CBAF08", VA = "0x2CBAF08")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x2CB9994", Offset = "0x2CB9994", VA = "0x2CB9994")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x2CBAA1C", Offset = "0x2CBAA1C", VA = "0x2CBAA1C")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x2CBB004", Offset = "0x2CBB004", VA = "0x2CBB004")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x2CBB4A8", Offset = "0x2CBB4A8", VA = "0x2CBB4A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x2CBB5C4", Offset = "0x2CBB5C4", VA = "0x2CBB5C4")]
		public VRIKRootController()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x20002D2")]
	public class FKOffset : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005C2")]
		public class Offset
		{
			[Token(Token = "0x4002144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x4002145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public UnityEngine.Vector3 rotationOffset;

			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform t;

			[Token(Token = "0x600238D")]
			[Address(RVA = "0x28C9354", Offset = "0x28C9354", VA = "0x28C9354")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x600238E")]
			[Address(RVA = "0x28C9600", Offset = "0x28C9600", VA = "0x28C9600")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offset[] offsets;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x28C927C", Offset = "0x28C927C", VA = "0x28C927C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x28C92DC", Offset = "0x28C92DC", VA = "0x28C92DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x28C9510", Offset = "0x28C9510", VA = "0x28C9510")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x28C95F8", Offset = "0x28C95F8", VA = "0x28C95F8")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class AimBoxing : MonoBehaviour
	{
		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pin;

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x2EB2560", Offset = "0x2EB2560", VA = "0x2EB2560")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x2EB25E4", Offset = "0x2EB25E4", VA = "0x2EB25E4")]
		public AimBoxing()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class AimSwing : MonoBehaviour
	{
		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK ik;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F51E0", Offset = "0x16F51E0")]
		public UnityEngine.Vector3 animatedSwingDirection;

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x2EB25EC", Offset = "0x2EB25EC", VA = "0x2EB25EC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x2EB26F4", Offset = "0x2EB26F4", VA = "0x2EB26F4")]
		public AimSwing()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class SecondHandOnGun : MonoBehaviour
	{
		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aim;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbIK leftArmIK;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftHand;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightHand;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEngine.Vector3 leftHandPositionOffset;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public UnityEngine.Vector3 leftHandRotationOffset;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityEngine.Vector3 leftHandPosRelToRight;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion leftHandRotRelToRight;

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x28D3AB4", Offset = "0x28D3AB4", VA = "0x28D3AB4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x28D3AF8", Offset = "0x28D3AF8", VA = "0x28D3AF8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x28D3D58", Offset = "0x28D3D58", VA = "0x28D3D58")]
		public SecondHandOnGun()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class SimpleAimingSystem : MonoBehaviour
	{
		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5218", Offset = "0x16F5218")]
		public AimPoser aimPoser;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5250", Offset = "0x16F5250")]
		public AimIK aim;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5288", Offset = "0x16F5288")]
		public LookAtIK lookAt;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F52C0", Offset = "0x16F52C0")]
		public Animator animator;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F52F8", Offset = "0x16F52F8")]
		public float crossfadeTime;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5330", Offset = "0x16F5330")]
		public float minAimDistance;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AimPoser.Pose aimPose;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AimPoser.Pose lastPose;

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x28D3D60", Offset = "0x28D3D60", VA = "0x28D3D60")]
		private void Start()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x28D3DA4", Offset = "0x28D3DA4", VA = "0x28D3DA4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x28D3EF8", Offset = "0x28D3EF8", VA = "0x28D3EF8")]
		private void Pose()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x28D4110", Offset = "0x28D4110", VA = "0x28D4110")]
		private void LimitAimTarget()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x28D4450", Offset = "0x28D4450", VA = "0x28D4450")]
		private void DirectCrossFade(string state, float target)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x28D4528", Offset = "0x28D4528", VA = "0x28D4528")]
		public SimpleAimingSystem()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class TerrainOffset : MonoBehaviour
	{
		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Vector3 raycastOffset;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask raycastLayers;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float min;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float max;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float lerpSpeed;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit hit;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityEngine.Vector3 offset;

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x28D52F4", Offset = "0x28D52F4", VA = "0x28D52F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x28D5558", Offset = "0x28D5558", VA = "0x28D5558")]
		private UnityEngine.Vector3 GetGroundHeightOffset(UnityEngine.Vector3 worldPosition)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x28D57A8", Offset = "0x28D57A8", VA = "0x28D57A8")]
		public TerrainOffset()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class BipedIKvsAnimatorIK : MonoBehaviour
	{
		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x16F5368", Offset = "0x16F5368")]
		public Animator animator;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedIK bipedIK;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x16F53A0", Offset = "0x16F53A0")]
		public Transform lookAtTargetBiped;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lookAtTargetAnimator;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F53D8", Offset = "0x16F53D8")]
		public float lookAtWeight;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F53F0", Offset = "0x16F53F0")]
		public float lookAtBodyWeight;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5408", Offset = "0x16F5408")]
		public float lookAtHeadWeight;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5420", Offset = "0x16F5420")]
		public float lookAtEyesWeight;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5438", Offset = "0x16F5438")]
		public float lookAtClampWeight;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5450", Offset = "0x16F5450")]
		public float lookAtClampWeightHead;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5468", Offset = "0x16F5468")]
		public float lookAtClampWeightEyes;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x16F5480", Offset = "0x16F5480")]
		public Transform footTargetBiped;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform footTargetAnimator;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F54B8", Offset = "0x16F54B8")]
		public float footPositionWeight;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F54D0", Offset = "0x16F54D0")]
		public float footRotationWeight;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x16F54E8", Offset = "0x16F54E8")]
		public Transform handTargetBiped;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform handTargetAnimator;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5520", Offset = "0x16F5520")]
		public float handPositionWeight;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5538", Offset = "0x16F5538")]
		public float handRotationWeight;

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x2EB42F0", Offset = "0x2EB42F0", VA = "0x2EB42F0")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x2EB479C", Offset = "0x2EB479C", VA = "0x2EB479C")]
		public BipedIKvsAnimatorIK()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class MechSpider : MonoBehaviour
	{
		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask raycastLayers;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform body;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MechSpiderLeg[] legs;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float legRotationWeight;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rootPositionSpeed;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootRotationSpeed;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float breatheSpeed;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float breatheMagnitude;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minHeight;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float raycastHeight;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float raycastDistance;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private UnityEngine.Vector3 lastPosition;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.Vector3 defaultBodyLocalPosition;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float sine;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit rootHit;

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x28CD044", Offset = "0x28CD044", VA = "0x28CD044")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x28CDA78", Offset = "0x28CDA78", VA = "0x28CDA78")]
		private UnityEngine.Vector3 GetLegCentroid()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x28CD760", Offset = "0x28CD760", VA = "0x28CD760")]
		private UnityEngine.Vector3 GetLegsPlaneNormal()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x28CDC20", Offset = "0x28CDC20", VA = "0x28CDC20")]
		public MechSpider()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class MechSpiderController : MonoBehaviour
	{
		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraTransform;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float turnSpeed;

		[Token(Token = "0x17000339")]
		public UnityEngine.Vector3 inputVector
		{
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0x28CDC4C", Offset = "0x28CDC4C", VA = "0x28CDC4C")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x28CDCEC", Offset = "0x28CDCEC", VA = "0x28CDCEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x28CDF84", Offset = "0x28CDF84", VA = "0x28CDF84")]
		public MechSpiderController()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class MechSpiderLeg : MonoBehaviour
	{
		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9F54", Offset = "0x16E9F54")]
		private sealed class <Step>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MechSpiderLeg <>4__this;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEngine.Vector3 stepStartPosition;

			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public UnityEngine.Vector3 targetPosition;

			[Token(Token = "0x1700052C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002392")]
				[Address(RVA = "0x28CF3BC", Offset = "0x28CF3BC", VA = "0x28CF3BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002394")]
				[Address(RVA = "0x28CF424", Offset = "0x28CF424", VA = "0x28CF424", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600238F")]
			[Address(RVA = "0x28CEFA8", Offset = "0x28CEFA8", VA = "0x28CEFA8")]
			[DebuggerHidden]
			public <Step>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002390")]
			[Address(RVA = "0x28CF07C", Offset = "0x28CF07C", VA = "0x28CF07C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002391")]
			[Address(RVA = "0x28CF080", Offset = "0x28CF080", VA = "0x28CF080", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002393")]
			[Address(RVA = "0x28CF3C4", Offset = "0x28CF3C4", VA = "0x28CF3C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechSpiderLeg unSync;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 offset;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minDelay;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxOffset;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stepSpeed;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float footHeight;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float velocityPrediction;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float raycastFocus;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve yOffset;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform foot;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEngine.Vector3 footUpAxis;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float footRotationSpeed;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ParticleSystem sand;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IK ik;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float stepProgress;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastStepTime;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UnityEngine.Vector3 defaultPosition;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private RaycastHit hit;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Quaternion lastFootLocalRotation;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private UnityEngine.Vector3 smoothHitNormal;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private UnityEngine.Vector3 lastStepPosition;

		[Token(Token = "0x1700033A")]
		public bool isStepping
		{
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0x28CDF98", Offset = "0x28CDF98", VA = "0x28CDF98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033B")]
		public UnityEngine.Vector3 position
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x28CDBEC", Offset = "0x28CDBEC", VA = "0x28CDBEC")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x6001700")]
			[Address(RVA = "0x28CDFAC", Offset = "0x28CDFAC", VA = "0x28CDFAC")]
			set
			{
			}
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x28CDFFC", Offset = "0x28CDFFC", VA = "0x28CDFFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x28CE280", Offset = "0x28CE280", VA = "0x28CE280")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x28CE49C", Offset = "0x28CE49C", VA = "0x28CE49C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x28CE754", Offset = "0x28CE754", VA = "0x28CE754")]
		private UnityEngine.Vector3 GetStepTarget(out bool stepFound, float focus, float distance)
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x28CEB14", Offset = "0x28CEB14", VA = "0x28CEB14")]
		private void UpdatePosition(float distance)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x28CED70", Offset = "0x28CED70", VA = "0x28CED70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x28CE69C", Offset = "0x28CE69C", VA = "0x28CE69C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17044F0", Offset = "0x17044F0")]
		private IEnumerator Step(UnityEngine.Vector3 stepStartPosition, UnityEngine.Vector3 targetPosition)
		{
			return null;
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x28CEFD4", Offset = "0x28CEFD4", VA = "0x28CEFD4")]
		public MechSpiderLeg()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class MechSpiderParticles : MonoBehaviour
	{
		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpiderController mechSpiderController;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particles;

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x28CF42C", Offset = "0x28CF42C", VA = "0x28CF42C")]
		private void Start()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x28CF4E8", Offset = "0x28CF4E8", VA = "0x28CF4E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x28CF77C", Offset = "0x28CF77C", VA = "0x28CF77C")]
		public MechSpiderParticles()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class AnimationWarping : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20005C4")]
		public struct Warp
		{
			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE130", Offset = "0x16FE130")]
			public int animationLayer;

			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE168", Offset = "0x16FE168")]
			public string animationState;

			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE1A0", Offset = "0x16FE1A0")]
			public AnimationCurve weightCurve;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE1D8", Offset = "0x16FE1D8")]
			public Transform warpFrom;

			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE210", Offset = "0x16FE210")]
			public Transform warpTo;

			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE248", Offset = "0x16FE248")]
			public FullBodyBipedEffector effector;
		}

		[Serializable]
		[Token(Token = "0x20005C5")]
		public enum EffectorMode
		{
			[Token(Token = "0x4002154")]
			PositionOffset,
			[Token(Token = "0x4002155")]
			Position
		}

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5550", Offset = "0x16F5550")]
		public Animator animator;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5588", Offset = "0x16F5588")]
		public EffectorMode effectorMode;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x16F55C0", Offset = "0x16F55C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F55C0", Offset = "0x16F55C0")]
		public Warp[] warps;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EffectorMode lastMode;

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x2EB276C", Offset = "0x2EB276C", VA = "0x2EB276C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x2EB2798", Offset = "0x2EB2798", VA = "0x2EB2798")]
		public float GetWarpWeight(int warpIndex)
		{
			return default(float);
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x2EB29B8", Offset = "0x2EB29B8", VA = "0x2EB29B8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x2EB2D6C", Offset = "0x2EB2D6C", VA = "0x2EB2D6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x2EB2E0C", Offset = "0x2EB2E0C", VA = "0x2EB2E0C")]
		public AnimationWarping()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E84A8", Offset = "0x16E84A8")]
	public class AnimatorController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blendSpeed;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxAngle;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveSpeed;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rootMotionWeight;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator animator;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected UnityEngine.Vector3 moveBlend;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected UnityEngine.Vector3 moveInput;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected UnityEngine.Vector3 velocity;

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x2EB2E14", Offset = "0x2EB2E14", VA = "0x2EB2E14", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x2EB2E74", Offset = "0x2EB2E74", VA = "0x2EB2E74")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x2EB30AC", Offset = "0x2EB30AC", VA = "0x2EB30AC", Slot = "5")]
		public virtual void Move(UnityEngine.Vector3 moveInput, bool isMoving, UnityEngine.Vector3 faceDirection, UnityEngine.Vector3 aimTarget)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x2EB3310", Offset = "0x2EB3310", VA = "0x2EB3310")]
		public AnimatorController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E850C", Offset = "0x16E850C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E850C", Offset = "0x16E850C")]
	public class AnimatorController3rdPersonIK : AnimatorController3rdPerson
	{
		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5610", Offset = "0x16F5610")]
		public float headLookWeight;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEngine.Vector3 gunHoldOffset;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public UnityEngine.Vector3 leftHandOffset;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Recoil recoil;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AimIK aim;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UnityEngine.Vector3 headLookAxis;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private UnityEngine.Vector3 leftHandPosRelToRightHand;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion leftHandRotRelToRightHand;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private UnityEngine.Vector3 aimTarget;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x2EB3324", Offset = "0x2EB3324", VA = "0x2EB3324", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x2EB34D0", Offset = "0x2EB34D0", VA = "0x2EB34D0", Slot = "5")]
		public override void Move(UnityEngine.Vector3 moveInput, bool isMoving, UnityEngine.Vector3 faceDirection, UnityEngine.Vector3 aimTarget)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x2EB354C", Offset = "0x2EB354C", VA = "0x2EB354C")]
		private void Read()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x2EB36A4", Offset = "0x2EB36A4", VA = "0x2EB36A4")]
		private void AimIK()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x2EB36EC", Offset = "0x2EB36EC", VA = "0x2EB36EC")]
		private void FBBIK()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x2EB3CE4", Offset = "0x2EB3CE4", VA = "0x2EB3CE4")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x2EB3AA8", Offset = "0x2EB3AA8", VA = "0x2EB3AA8")]
		private void HeadLookAt(UnityEngine.Vector3 lookAtTarget)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x2EB403C", Offset = "0x2EB403C", VA = "0x2EB403C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x2EB4158", Offset = "0x2EB4158", VA = "0x2EB4158")]
		public AnimatorController3rdPersonIK()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8598", Offset = "0x16E8598")]
	public class CharacterAnimationThirdPersonIK : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x2EB5750", Offset = "0x2EB5750", VA = "0x2EB5750", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x2EB57B8", Offset = "0x2EB57B8", VA = "0x2EB57B8", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x2EB5A7C", Offset = "0x2EB5A7C", VA = "0x2EB5A7C")]
		private void RotateEffector(IKEffector effector, Quaternion rotation, float mlp)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x2EB5C34", Offset = "0x2EB5C34", VA = "0x2EB5C34")]
		public CharacterAnimationThirdPersonIK()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E85FC", Offset = "0x16E85FC")]
	public class CharacterController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CameraController cam;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimatorController3rdPerson animatorController;

		[Token(Token = "0x1700033C")]
		private static UnityEngine.Vector3 inputVector
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0x2EB6AA0", Offset = "0x2EB6AA0", VA = "0x2EB6AA0")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x1700033D")]
		private static UnityEngine.Vector3 inputVectorRaw
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0x2EB6B40", Offset = "0x2EB6B40", VA = "0x2EB6B40")]
			get
			{
				return default(UnityEngine.Vector3);
			}
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x2EB67E4", Offset = "0x2EB67E4", VA = "0x2EB67E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x2EB685C", Offset = "0x2EB685C", VA = "0x2EB685C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x2EB6BE0", Offset = "0x2EB6BE0", VA = "0x2EB6BE0")]
		public CharacterController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class EffectorOffset : OffsetModifier
	{
		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5628", Offset = "0x16F5628")]
		public float handsMaintainRelativePositionWeight;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Vector3 bodyOffset;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public UnityEngine.Vector3 leftShoulderOffset;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEngine.Vector3 rightShoulderOffset;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public UnityEngine.Vector3 leftThighOffset;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEngine.Vector3 rightThighOffset;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public UnityEngine.Vector3 leftHandOffset;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEngine.Vector3 rightHandOffset;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public UnityEngine.Vector3 leftFootOffset;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEngine.Vector3 rightFootOffset;

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x2EB9588", Offset = "0x2EB9588", VA = "0x2EB9588", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x2EB9B6C", Offset = "0x2EB9B6C", VA = "0x2EB9B6C")]
		public EffectorOffset()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class ExplosionDemo : MonoBehaviour
	{
		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleLocomotion character;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float forceMlp;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float upForce;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weightFalloffSpeed;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve weightFalloff;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve explosionForceByDistance;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve scale;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float weight;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private UnityEngine.Vector3 defaultScale;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody r;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x2EB9B74", Offset = "0x2EB9B74", VA = "0x2EB9B74")]
		private void Start()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x2EB9C28", Offset = "0x2EB9C28", VA = "0x2EB9C28")]
		private void Update()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x2EBA0A4", Offset = "0x2EBA0A4", VA = "0x2EBA0A4")]
		private void SetEffectorWeights(float w)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x2EBA150", Offset = "0x2EBA150", VA = "0x2EBA150")]
		public ExplosionDemo()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class FBBIKSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005C6")]
		public class Limb
		{
			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FBIKChain.Smoothing reachSmoothing;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maintainRelativePositionWeight;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float mappingWeight;

			[Token(Token = "0x6002395")]
			[Address(RVA = "0x28C8644", Offset = "0x28C8644", VA = "0x28C8644")]
			public void Apply(FullBodyBipedChain chain, IKSolverFullBodyBiped solver)
			{
			}

			[Token(Token = "0x6002396")]
			[Address(RVA = "0x28C8778", Offset = "0x28C8778", VA = "0x28C8778")]
			public Limb()
			{
			}
		}

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableAfterStart;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Limb leftArm;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Limb rightArm;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Limb leftLeg;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Limb rightLeg;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rootPin;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bodyEffectChildNodes;

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x28C84F8", Offset = "0x28C84F8", VA = "0x28C84F8")]
		public void UpdateSettings()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x28C86C8", Offset = "0x28C86C8", VA = "0x28C86C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x28C8764", Offset = "0x28C8764", VA = "0x28C8764")]
		private void Update()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x28C8768", Offset = "0x28C8768", VA = "0x28C8768")]
		public FBBIKSettings()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class FBIKBendGoal : MonoBehaviour
	{
		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedChain chain;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float weight;

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x28C8788", Offset = "0x28C8788", VA = "0x28C8788")]
		private void Start()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x28C87F4", Offset = "0x28C87F4", VA = "0x28C87F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x28C88D8", Offset = "0x28C88D8", VA = "0x28C88D8")]
		public FBIKBendGoal()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class FBIKBoxing : MonoBehaviour
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5640", Offset = "0x16F5640")]
		public Transform target;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5678", Offset = "0x16F5678")]
		public Transform pin;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F56B0", Offset = "0x16F56B0")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F56E8", Offset = "0x16F56E8")]
		public AimIK aim;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5720", Offset = "0x16F5720")]
		public float weight;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5758", Offset = "0x16F5758")]
		public FullBodyBipedEffector effector;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5790", Offset = "0x16F5790")]
		public AnimationCurve aimWeight;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator animator;

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x28C88E0", Offset = "0x28C88E0", VA = "0x28C88E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x28C8940", Offset = "0x28C8940", VA = "0x28C8940")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x28C8ADC", Offset = "0x28C8ADC", VA = "0x28C8ADC")]
		public FBIKBoxing()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class FBIKHandsOnProp : MonoBehaviour
	{
		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool leftHanded;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x28C8AE4", Offset = "0x28C8AE4", VA = "0x28C8AE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x28C8BB4", Offset = "0x28C8BB4", VA = "0x28C8BB4")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x28C8C44", Offset = "0x28C8C44", VA = "0x28C8C44")]
		private void HandsOnProp(IKEffector mainHand, IKEffector otherHand)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x28C9158", Offset = "0x28C9158", VA = "0x28C9158")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x28C9274", Offset = "0x28C9274", VA = "0x28C9274")]
		public FBIKHandsOnProp()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class FPSAiming : MonoBehaviour
	{
		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F57C8", Offset = "0x16F57C8")]
		public float aimWeight;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F57E0", Offset = "0x16F57E0")]
		public float sightWeight;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F57F8", Offset = "0x16F57F8")]
		public float maxAngle;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UnityEngine.Vector3 aimOffset;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool animatePhysics;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform gun;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform gunTarget;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AimIK gunAim;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CameraControllerFPS cam;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Recoil recoil;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5814", Offset = "0x16F5814")]
		public float cameraRecoilWeight;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public UnityEngine.Vector3 gunTargetDefaultLocalPosition;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEngine.Vector3 gunTargetDefaultLocalRotation;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private UnityEngine.Vector3 camDefaultLocalPosition;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UnityEngine.Vector3 camRelativeToGunTarget;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool updateFrame;

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x28C9608", Offset = "0x28C9608", VA = "0x28C9608")]
		private void Start()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x28C9768", Offset = "0x28C9768", VA = "0x28C9768")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x28C9774", Offset = "0x28C9774", VA = "0x28C9774")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x28C9AB8", Offset = "0x28C9AB8", VA = "0x28C9AB8")]
		private void Aiming()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x28C9D20", Offset = "0x28C9D20", VA = "0x28C9D20")]
		private void LookDownTheSight()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x28C983C", Offset = "0x28C983C", VA = "0x28C983C")]
		private void RotateCharacter()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x28CA740", Offset = "0x28CA740", VA = "0x28CA740")]
		public FPSAiming()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8660", Offset = "0x16E8660")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8660", Offset = "0x16E8660")]
	public class FPSCharacter : MonoBehaviour
	{
		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F582C", Offset = "0x16F582C")]
		public float walkSpeed;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float sVel;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FPSAiming FPSAiming;

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x28CA760", Offset = "0x28CA760", VA = "0x28CA760")]
		private void Start()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x28CA7E4", Offset = "0x28CA7E4", VA = "0x28CA7E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x28CA908", Offset = "0x28CA908", VA = "0x28CA908")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x28CA9B8", Offset = "0x28CA9B8", VA = "0x28CA9B8")]
		public FPSCharacter()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class HitReactionTrigger : MonoBehaviour
	{
		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReaction hitReaction;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x28CAD4C", Offset = "0x28CAD4C", VA = "0x28CAD4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x28CAF18", Offset = "0x28CAF18", VA = "0x28CAF18")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x28CB0DC", Offset = "0x28CB0DC", VA = "0x28CB0DC")]
		public HitReactionTrigger()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class HoldingHands : MonoBehaviour
	{
		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK rightHandChar;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedIK leftHandChar;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTarget;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHandTarget;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float crossFade;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandRotation;

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x28CB48C", Offset = "0x28CB48C", VA = "0x28CB48C")]
		private void Start()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x28CB638", Offset = "0x28CB638", VA = "0x28CB638")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x28CB9F4", Offset = "0x28CB9F4", VA = "0x28CB9F4")]
		public HoldingHands()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class InteractionC2CDemo : MonoBehaviour
	{
		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem character1;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem character2;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject handShake;

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x28CBA04", Offset = "0x28CBA04", VA = "0x28CBA04")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x28CBB38", Offset = "0x28CBB38", VA = "0x28CBB38")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x28CBC88", Offset = "0x28CBC88", VA = "0x28CBC88")]
		public InteractionC2CDemo()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class InteractionDemo : MonoBehaviour
	{
		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool interrupt;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject ball;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionObject benchMain;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractionObject benchHands;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionObject button;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractionObject cigarette;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionObject door;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isSitting;

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x28CBC90", Offset = "0x28CBC90", VA = "0x28CBC90")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x28CC360", Offset = "0x28CC360", VA = "0x28CC360")]
		public InteractionDemo()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E86EC", Offset = "0x16E86EC")]
	public class InteractionSystemTestGUI : MonoBehaviour
	{
		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5844", Offset = "0x16F5844")]
		public InteractionObject interactionObject;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F587C", Offset = "0x16F587C")]
		public FullBodyBipedEffector[] effectors;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x28CC368", Offset = "0x28CC368", VA = "0x28CC368")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x28CC3C8", Offset = "0x28CC3C8", VA = "0x28CC3C8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x28CC6D4", Offset = "0x28CC6D4", VA = "0x28CC6D4")]
		public InteractionSystemTestGUI()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class KissingRig : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005C7")]
		public class Partner
		{
			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedIK ik;

			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform mouth;

			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform mouthTarget;

			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform touchTargetLeftHand;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform touchTargetRightHand;

			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float bodyWeightHorizontal;

			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float bodyWeightVertical;

			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float neckRotationWeight;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float headTiltAngle;

			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public UnityEngine.Vector3 headTiltAxis;

			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion neckRotation;

			[Token(Token = "0x1700052E")]
			private Transform neck
			{
				[Token(Token = "0x6002399")]
				[Address(RVA = "0x28CCFD8", Offset = "0x28CCFD8", VA = "0x28CCFD8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002397")]
			[Address(RVA = "0x28CC710", Offset = "0x28CC710", VA = "0x28CC710")]
			public void Initiate()
			{
			}

			[Token(Token = "0x6002398")]
			[Address(RVA = "0x28CC790", Offset = "0x28CC790", VA = "0x28CC790")]
			public void Update(float weight)
			{
			}

			[Token(Token = "0x600239A")]
			[Address(RVA = "0x28CCDFC", Offset = "0x28CCDFC", VA = "0x28CCDFC")]
			private void InverseTransformEffector(FullBodyBipedEffector effector, Transform target, UnityEngine.Vector3 targetPosition, float weight)
			{
			}

			[Token(Token = "0x600239B")]
			[Address(RVA = "0x28CD030", Offset = "0x28CD030", VA = "0x28CD030")]
			public Partner()
			{
			}
		}

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Partner partner1;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Partner partner2;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weight;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int iterations;

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x28CC6DC", Offset = "0x28CC6DC", VA = "0x28CC6DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x28CC730", Offset = "0x28CC730", VA = "0x28CC730")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x28CCDEC", Offset = "0x28CCDEC", VA = "0x28CCDEC")]
		public KissingRig()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class MotionAbsorb : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20005C8")]
		public enum Mode
		{
			[Token(Token = "0x4002165")]
			Position,
			[Token(Token = "0x4002166")]
			PositionOffset
		}

		[Serializable]
		[Token(Token = "0x20005C9")]
		public class Absorber
		{
			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE280", Offset = "0x16FE280")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE2B8", Offset = "0x16FE2B8")]
			public float weight;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UnityEngine.Vector3 position;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion rotation;

			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IKEffector e;

			[Token(Token = "0x600239C")]
			[Address(RVA = "0x28CF8F8", Offset = "0x28CF8F8", VA = "0x28CF8F8")]
			public void SetToBone(IKSolverFullBodyBiped solver, Mode mode)
			{
			}

			[Token(Token = "0x600239D")]
			[Address(RVA = "0x28CFAEC", Offset = "0x28CFAEC", VA = "0x28CFAEC")]
			public void UpdateEffectorWeights(float w)
			{
			}

			[Token(Token = "0x600239E")]
			[Address(RVA = "0x28CFB28", Offset = "0x28CFB28", VA = "0x28CFB28")]
			public void SetPosition(float w)
			{
			}

			[Token(Token = "0x600239F")]
			[Address(RVA = "0x28CFCD8", Offset = "0x28CFCD8", VA = "0x28CFCD8")]
			public void SetRotation(float w)
			{
			}

			[Token(Token = "0x60023A0")]
			[Address(RVA = "0x28CFF20", Offset = "0x28CFF20", VA = "0x28CFF20")]
			public Absorber()
			{
			}
		}

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F58B4", Offset = "0x16F58B4")]
		public Mode mode;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F58EC", Offset = "0x16F58EC")]
		public Absorber[] absorbers;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5924", Offset = "0x16F5924")]
		public AnimationCurve falloff;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F595C", Offset = "0x16F595C")]
		public float falloffSpeed;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float w;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Mode initialMode;

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x28CF784", Offset = "0x28CF784", VA = "0x28CF784", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x28CF86C", Offset = "0x28CF86C", VA = "0x28CF86C")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x28CF9E0", Offset = "0x28CF9E0", VA = "0x28CF9E0", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x28CFC50", Offset = "0x28CFC50", VA = "0x28CFC50")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x28CFDE8", Offset = "0x28CFDE8", VA = "0x28CFDE8", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x28CFF10", Offset = "0x28CFF10", VA = "0x28CFF10")]
		public MotionAbsorb()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class MotionAbsorbCharacter : MonoBehaviour
	{
		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MotionAbsorb motionAbsorb;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform cube;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float cubeRandomPosition;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve motionAbsorbWeight;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityEngine.Vector3 cubeDefaultPosition;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorStateInfo info;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigidbody;

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x28CFFA0", Offset = "0x28CFFA0", VA = "0x28CFFA0")]
		private void Start()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x28D0020", Offset = "0x28D0020", VA = "0x28D0020")]
		private void Update()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x28D00EC", Offset = "0x28D00EC", VA = "0x28D00EC")]
		private void SwingStart()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x28D024C", Offset = "0x28D024C", VA = "0x28D024C")]
		public MotionAbsorbCharacter()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class OffsetEffector : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20005CA")]
		public class EffectorLink
		{
			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float weightMultiplier;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public UnityEngine.Vector3 localPosition;

			[Token(Token = "0x60023A1")]
			[Address(RVA = "0x28D0FEC", Offset = "0x28D0FEC", VA = "0x28D0FEC")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x28D0CB8", Offset = "0x28D0CB8", VA = "0x28D0CB8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x28D0DB8", Offset = "0x28D0DB8", VA = "0x28D0DB8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x28D0FE4", Offset = "0x28D0FE4", VA = "0x28D0FE4")]
		public OffsetEffector()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8750", Offset = "0x16E8750")]
	public class PendulumExample : MonoBehaviour
	{
		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5994", Offset = "0x16F5994")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5994", Offset = "0x16F5994")]
		public float weight;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F59E8", Offset = "0x16F59E8")]
		public float hangingDistanceMlp;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5A20", Offset = "0x16F5A20")]
		[HideInInspector]
		public UnityEngine.Vector3 rootTargetPosition;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5A6C", Offset = "0x16F5A6C")]
		[HideInInspector]
		public Quaternion rootTargetRotation;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform target;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform leftHandTarget;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightHandTarget;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftFootTarget;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform rightFootTarget;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform pelvisTarget;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform bodyTarget;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform headTarget;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEngine.Vector3 pelvisDownAxis;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rootRelativeToPelvis;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private UnityEngine.Vector3 pelvisToRoot;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastWeight;

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x28D0FFC", Offset = "0x28D0FFC", VA = "0x28D0FFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x28D134C", Offset = "0x28D134C", VA = "0x28D134C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x28D1A9C", Offset = "0x28D1A9C", VA = "0x28D1A9C")]
		public PendulumExample()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public abstract class PickUp2Handed : MonoBehaviour
	{
		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GUIspace;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject obj;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform pivot;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform holdPoint;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pickUpTime;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float holdWeight;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float holdWeightVel;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private UnityEngine.Vector3 pickUpPosition;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x1700033E")]
		private bool holding
		{
			[Token(Token = "0x600176F")]
			[Address(RVA = "0x28D1DE0", Offset = "0x28D1DE0", VA = "0x28D1DE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x28D1B20", Offset = "0x28D1B20", VA = "0x28D1B20")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001769")]
		protected abstract void RotatePivot();

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x28D1E00", Offset = "0x28D1E00", VA = "0x28D1E00")]
		private void Start()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x28D1F98", Offset = "0x28D1F98", VA = "0x28D1F98")]
		private void OnPause(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x28D2114", Offset = "0x28D2114", VA = "0x28D2114")]
		private void OnStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x28D21F4", Offset = "0x28D21F4", VA = "0x28D21F4")]
		private void OnDrop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x28D2320", Offset = "0x28D2320", VA = "0x28D2320")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x28D2530", Offset = "0x28D2530", VA = "0x28D2530")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x28D2714", Offset = "0x28D2714", VA = "0x28D2714")]
		protected PickUp2Handed()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class PickUpBox : PickUp2Handed
	{
		[Token(Token = "0x6001772")]
		[Address(RVA = "0x28D2728", Offset = "0x28D2728", VA = "0x28D2728", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x28D291C", Offset = "0x28D291C", VA = "0x28D291C")]
		public PickUpBox()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class PickUpSphere : PickUp2Handed
	{
		[Token(Token = "0x6001774")]
		[Address(RVA = "0x28D2930", Offset = "0x28D2930", VA = "0x28D2930", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x28D2ADC", Offset = "0x28D2ADC", VA = "0x28D2ADC")]
		public PickUpSphere()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class RagdollUtilityDemo : MonoBehaviour
	{
		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollUtility ragdollUtility;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform root;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody pelvis;

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x28D327C", Offset = "0x28D327C", VA = "0x28D327C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x28D3354", Offset = "0x28D3354", VA = "0x28D3354")]
		private void Update()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x28D34FC", Offset = "0x28D34FC", VA = "0x28D34FC")]
		public RagdollUtilityDemo()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E87B4", Offset = "0x16E87B4")]
	public class RecoilTest : MonoBehaviour
	{
		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float magnitude;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Recoil recoil;

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x28D3504", Offset = "0x28D3504", VA = "0x28D3504")]
		private void Start()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x28D3564", Offset = "0x28D3564", VA = "0x28D3564")]
		private void Update()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x28D35C0", Offset = "0x28D35C0", VA = "0x28D35C0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x28D3698", Offset = "0x28D3698", VA = "0x28D3698")]
		public RecoilTest()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class ResetInteractionObject : MonoBehaviour
	{
		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9F64", Offset = "0x16E9F64")]
		private sealed class <ResetObject>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float resetTime;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResetInteractionObject <>4__this;

			[Token(Token = "0x1700052F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023A5")]
				[Address(RVA = "0x28D3A44", Offset = "0x28D3A44", VA = "0x28D3A44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000530")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023A7")]
				[Address(RVA = "0x28D3AAC", Offset = "0x28D3AAC", VA = "0x28D3AAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A2")]
			[Address(RVA = "0x28D3848", Offset = "0x28D3848", VA = "0x28D3848")]
			[DebuggerHidden]
			public <ResetObject>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x28D3884", Offset = "0x28D3884", VA = "0x28D3884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023A4")]
			[Address(RVA = "0x28D3888", Offset = "0x28D3888", VA = "0x28D3888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023A6")]
			[Address(RVA = "0x28D3A4C", Offset = "0x28D3A4C", VA = "0x28D3A4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float resetDelay;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private UnityEngine.Vector3 defaultPosition;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform defaultParent;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody r;

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x28D36A8", Offset = "0x28D36A8", VA = "0x28D36A8")]
		private void Start()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x28D3774", Offset = "0x28D3774", VA = "0x28D3774")]
		private void OnPickUp(Transform t)
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x28D37BC", Offset = "0x28D37BC", VA = "0x28D37BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1704554", Offset = "0x1704554")]
		private IEnumerator ResetObject(float resetTime)
		{
			return null;
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x28D3874", Offset = "0x28D3874", VA = "0x28D3874")]
		public ResetInteractionObject()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8818", Offset = "0x16E8818")]
	public class SoccerDemo : MonoBehaviour
	{
		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9F74", Offset = "0x16E9F74")]
		private sealed class <ResetDelayed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoccerDemo <>4__this;

			[Token(Token = "0x17000531")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023AB")]
				[Address(RVA = "0x28D5284", Offset = "0x28D5284", VA = "0x28D5284", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000532")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023AD")]
				[Address(RVA = "0x28D52EC", Offset = "0x28D52EC", VA = "0x28D52EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A8")]
			[Address(RVA = "0x28D5114", Offset = "0x28D5114", VA = "0x28D5114")]
			[DebuggerHidden]
			public <ResetDelayed>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60023A9")]
			[Address(RVA = "0x28D5148", Offset = "0x28D5148", VA = "0x28D5148", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023AA")]
			[Address(RVA = "0x28D514C", Offset = "0x28D514C", VA = "0x28D514C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023AC")]
			[Address(RVA = "0x28D528C", Offset = "0x28D528C", VA = "0x28D528C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator animator;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityEngine.Vector3 defaultPosition;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x28D4FDC", Offset = "0x28D4FDC", VA = "0x28D4FDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x28D5098", Offset = "0x28D5098", VA = "0x28D5098")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17045B8", Offset = "0x17045B8")]
		private IEnumerator ResetDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x28D5140", Offset = "0x28D5140", VA = "0x28D5140")]
		public SoccerDemo()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class TouchWalls : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005CD")]
		public class EffectorLink
		{
			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractionObject interactionObject;

			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spherecastFrom;

			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float spherecastRadius;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float minDistance;

			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LayerMask touchLayers;

			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float lerpSpeed;

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float minSwitchTime;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float releaseDistance;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool sliding;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private UnityEngine.Vector3 raycastDirectionLocal;

			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float raycastDistance;

			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private bool inTouch;

			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private RaycastHit hit;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private UnityEngine.Vector3 targetPosition;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private Quaternion targetRotation;

			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private bool initiated;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private float nextSwitchTime;

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float speedF;

			[Token(Token = "0x60023AE")]
			[Address(RVA = "0x28D5894", Offset = "0x28D5894", VA = "0x28D5894")]
			public void Initiate(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60023AF")]
			[Address(RVA = "0x28D65A4", Offset = "0x28D65A4", VA = "0x28D65A4")]
			private bool FindWalls(UnityEngine.Vector3 direction)
			{
				return default(bool);
			}

			[Token(Token = "0x60023B0")]
			[Address(RVA = "0x28D5C10", Offset = "0x28D5C10", VA = "0x28D5C10")]
			public void Update(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60023B1")]
			[Address(RVA = "0x28D668C", Offset = "0x28D668C", VA = "0x28D668C")]
			private void StopTouch(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60023B2")]
			[Address(RVA = "0x28D6828", Offset = "0x28D6828", VA = "0x28D6828")]
			private void OnInteractionStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x60023B3")]
			[Address(RVA = "0x28D68C4", Offset = "0x28D68C4", VA = "0x28D68C4")]
			private void OnInteractionResume(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x60023B4")]
			[Address(RVA = "0x28D695C", Offset = "0x28D695C", VA = "0x28D695C")]
			private void OnInteractionStop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x60023B5")]
			[Address(RVA = "0x28D63F0", Offset = "0x28D63F0", VA = "0x28D63F0")]
			public void Destroy(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x60023B6")]
			[Address(RVA = "0x28D69F4", Offset = "0x28D69F4", VA = "0x28D69F4")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x28D581C", Offset = "0x28D581C", VA = "0x28D581C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x28D5BA4", Offset = "0x28D5BA4", VA = "0x28D5BA4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x28D6328", Offset = "0x28D6328", VA = "0x28D6328")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x28D659C", Offset = "0x28D659C", VA = "0x28D659C")]
		public TouchWalls()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class TransferMotion : MonoBehaviour
	{
		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5AB8", Offset = "0x16F5AB8")]
		public Transform to;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5AF0", Offset = "0x16F5AF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5AF0", Offset = "0x16F5AF0")]
		public float transferMotion;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private UnityEngine.Vector3 lastPosition;

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x28D6A28", Offset = "0x28D6A28", VA = "0x28D6A28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x28D6A64", Offset = "0x28D6A64", VA = "0x28D6A64")]
		private void Update()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x28D6BBC", Offset = "0x28D6BBC", VA = "0x28D6BBC")]
		public TransferMotion()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class TwoHandedProp : MonoBehaviour
	{
		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5B44", Offset = "0x16F5B44")]
		public Transform leftHandTarget;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Vector3 targetPosRelativeToRight;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion targetRotRelativeToRight;

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x28D6D90", Offset = "0x28D6D90", VA = "0x28D6D90")]
		private void Start()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x28D6F70", Offset = "0x28D6F70", VA = "0x28D6F70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x28D720C", Offset = "0x28D720C", VA = "0x28D720C")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x28D72D8", Offset = "0x28D72D8", VA = "0x28D72D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x28D73F4", Offset = "0x28D73F4", VA = "0x28D73F4")]
		public TwoHandedProp()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class UserControlInteractions : UserControlThirdPerson
	{
		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CharacterThirdPerson character;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool disableInputInInteraction;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float enableInputAtProgress;

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x28D7760", Offset = "0x28D7760", VA = "0x28D7760", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x28D7BD8", Offset = "0x28D7BD8", VA = "0x28D7BD8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x28D7E30", Offset = "0x28D7E30", VA = "0x28D7E30")]
		public UserControlInteractions()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class GrounderDemo : MonoBehaviour
	{
		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] characters;

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x28CA9C8", Offset = "0x28CA9C8", VA = "0x28CA9C8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x28CACC4", Offset = "0x28CACC4", VA = "0x28CACC4")]
		public void Activate(int index)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x28CAD44", Offset = "0x28CAD44", VA = "0x28CAD44")]
		public GrounderDemo()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class PlatformRotator : MonoBehaviour
	{
		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9F84", Offset = "0x16E9F84")]
		private sealed class <SwitchRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformRotator <>4__this;

			[Token(Token = "0x17000533")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023BA")]
				[Address(RVA = "0x28D320C", Offset = "0x28D320C", VA = "0x28D320C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000534")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023BC")]
				[Address(RVA = "0x28D3274", Offset = "0x28D3274", VA = "0x28D3274", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023B7")]
			[Address(RVA = "0x28D2EBC", Offset = "0x28D2EBC", VA = "0x28D2EBC")]
			[DebuggerHidden]
			public <SwitchRotation>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60023B8")]
			[Address(RVA = "0x28D30C8", Offset = "0x28D30C8", VA = "0x28D30C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023B9")]
			[Address(RVA = "0x28D30CC", Offset = "0x28D30CC", VA = "0x28D30CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023BB")]
			[Address(RVA = "0x28D3214", Offset = "0x28D3214", VA = "0x28D3214", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAngle;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float switchRotationTime;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float random;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationSpeed;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Vector3 movePosition;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float moveSpeed;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int characterLayer;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion targetRotation;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private UnityEngine.Vector3 targetPosition;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityEngine.Vector3 velocity;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody r;

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x28D2AF0", Offset = "0x28D2AF0", VA = "0x28D2AF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x28D2C94", Offset = "0x28D2C94", VA = "0x28D2C94")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x28D2C18", Offset = "0x28D2C18", VA = "0x28D2C18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x170461C", Offset = "0x170461C")]
		private IEnumerator SwitchRotation()
		{
			return null;
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x28D2EE8", Offset = "0x28D2EE8", VA = "0x28D2EE8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x28D2FCC", Offset = "0x28D2FCC", VA = "0x28D2FCC")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x28D30AC", Offset = "0x28D30AC", VA = "0x28D30AC")]
		public PlatformRotator()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class BendGoal : MonoBehaviour
	{
		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbIK limbIK;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5B7C", Offset = "0x16F5B7C")]
		public float weight;

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x2EB41B8", Offset = "0x2EB41B8", VA = "0x2EB41B8")]
		private void Start()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x2EB4224", Offset = "0x2EB4224", VA = "0x2EB4224")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x2EB42E0", Offset = "0x2EB42E0", VA = "0x2EB42E0")]
		public BendGoal()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class Turret : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005CF")]
		public class Part
		{
			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RotationLimit rotationLimit;

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x28D6C48", Offset = "0x28D6C48", VA = "0x28D6C48")]
			public void AimAt(Transform target)
			{
			}

			[Token(Token = "0x60023BE")]
			[Address(RVA = "0x28D6D88", Offset = "0x28D6D88", VA = "0x28D6D88")]
			public Part()
			{
			}
		}

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Part[] parts;

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x28D6BD0", Offset = "0x28D6BD0", VA = "0x28D6BD0")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x28D6D80", Offset = "0x28D6D80", VA = "0x28D6D80")]
		public Turret()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class HitReactionVRIKTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReactionVRIK hitReaction;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x28CB0EC", Offset = "0x28CB0EC", VA = "0x28CB0EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x28CB2B8", Offset = "0x28CB2B8", VA = "0x28CB2B8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x28CB47C", Offset = "0x28CB47C", VA = "0x28CB47C")]
		public HitReactionVRIKTrigger()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class VRIKCalibrationController : MonoBehaviour
	{
		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5B94", Offset = "0x16F5B94")]
		public VRIK ik;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5BCC", Offset = "0x16F5BCC")]
		public VRIKCalibrator.Settings settings;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5C04", Offset = "0x16F5C04")]
		public Transform headTracker;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5C3C", Offset = "0x16F5C3C")]
		public Transform bodyTracker;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5C74", Offset = "0x16F5C74")]
		public Transform leftHandTracker;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5CAC", Offset = "0x16F5CAC")]
		public Transform rightHandTracker;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5CE4", Offset = "0x16F5CE4")]
		public Transform leftFootTracker;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5D1C", Offset = "0x16F5D1C")]
		public Transform rightFootTracker;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F5D54", Offset = "0x16F5D54")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x28D7E54", Offset = "0x28D7E54", VA = "0x28D7E54")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x28D7FBC", Offset = "0x28D7FBC", VA = "0x28D7FBC")]
		public VRIKCalibrationController()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class VRIKPlatform : MonoBehaviour
	{
		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityEngine.Vector3 lastPosition;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion lastRotation;

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x28D8030", Offset = "0x28D8030", VA = "0x28D8030")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x28D808C", Offset = "0x28D808C", VA = "0x28D808C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x28D82A0", Offset = "0x28D82A0", VA = "0x28D82A0")]
		public VRIKPlatform()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class VRIKPlatformController : MonoBehaviour
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackingSpace;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform platform;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool moveToPlatform;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform lastPlatform;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityEngine.Vector3 lastPosition;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x28D8318", Offset = "0x28D8318", VA = "0x28D8318")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x28D8880", Offset = "0x28D8880", VA = "0x28D8880")]
		public VRIKPlatformController()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private UnityEngine.Vector3 lastPosition;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.Vector3 localPosition;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x1700033F")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x2EB47E0", Offset = "0x2EB47E0", VA = "0x2EB47E0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x2EB47BC", Offset = "0x2EB47BC", VA = "0x2EB47BC", Slot = "4")]
		public virtual UnityEngine.Vector3 GetPivotPoint()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x2EB47E8", Offset = "0x2EB47E8", VA = "0x2EB47E8")]
		public float GetAngleFromForward(UnityEngine.Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x2EB48AC", Offset = "0x2EB48AC", VA = "0x2EB48AC", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x2EB4A24", Offset = "0x2EB4A24", VA = "0x2EB4A24", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x2EB4CD8", Offset = "0x2EB4CD8", VA = "0x2EB4CD8", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x2EB4A34", Offset = "0x2EB4A34", VA = "0x2EB4A34")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x2EB4CE8", Offset = "0x2EB4CE8", VA = "0x2EB4CE8")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E887C", Offset = "0x16E887C")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x2EB4D00", Offset = "0x2EB4D00", VA = "0x2EB4D00", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x2EB4D68", Offset = "0x2EB4D68", VA = "0x2EB4D68", Slot = "4")]
		public override UnityEngine.Vector3 GetPivotPoint()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x2EB4E94", Offset = "0x2EB4E94", VA = "0x2EB4E94")]
		private void Update()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x2EB5010", Offset = "0x2EB5010", VA = "0x2EB5010")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E88E0", Offset = "0x16E88E0")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F5DBC", Offset = "0x16F5DBC")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UnityEngine.Vector3 lastForward;

		[Token(Token = "0x4001491")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x4001492")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x17000340")]
		public override bool animationGrounded
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x2EB50D4", Offset = "0x2EB50D4", VA = "0x2EB50D4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x2EB5028", Offset = "0x2EB5028", VA = "0x2EB5028", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x2EB50B8", Offset = "0x2EB50B8", VA = "0x2EB50B8", Slot = "4")]
		public override UnityEngine.Vector3 GetPivotPoint()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x2EB51C4", Offset = "0x2EB51C4", VA = "0x2EB51C4", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x2EB5578", Offset = "0x2EB5578", VA = "0x2EB5578")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x2EB572C", Offset = "0x2EB572C", VA = "0x2EB572C")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8944", Offset = "0x16E8944")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8944", Offset = "0x16E8944")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F5E00", Offset = "0x16F5E00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5E00", Offset = "0x16F5E00")]
		public Transform gravityTarget;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5E60", Offset = "0x16F5E60")]
		public float gravityMultiplier;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x400149E")]
		protected const float half = 0.5f;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected UnityEngine.Vector3 originalCenter;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x60017BD")]
		public abstract void Move(UnityEngine.Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x2EB5C58", Offset = "0x2EB5C58", VA = "0x2EB5C58")]
		protected UnityEngine.Vector3 GetGravity()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x2EB5DDC", Offset = "0x2EB5DDC", VA = "0x2EB5DDC", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x2EB5FA4", Offset = "0x2EB5FA4", VA = "0x2EB5FA4", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x2EB621C", Offset = "0x2EB621C", VA = "0x2EB621C")]
		public float GetAngleFromForward(UnityEngine.Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x2EB62E0", Offset = "0x2EB62E0", VA = "0x2EB62E0")]
		protected void RigidbodyRotateAround(UnityEngine.Vector3 point, UnityEngine.Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x2EB64C8", Offset = "0x2EB64C8", VA = "0x2EB64C8")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x2EB6678", Offset = "0x2EB6678", VA = "0x2EB6678")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x2EB669C", Offset = "0x2EB669C", VA = "0x2EB669C")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x2EB66C0", Offset = "0x2EB66C0", VA = "0x2EB66C0")]
		protected float GetSlopeDamper(UnityEngine.Vector3 velocity, UnityEngine.Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x2EB67C4", Offset = "0x2EB67C4", VA = "0x2EB67C4")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x20005D0")]
		public enum MoveMode
		{
			[Token(Token = "0x4002190")]
			Directional,
			[Token(Token = "0x4002191")]
			Strafe
		}

		[Token(Token = "0x20005D1")]
		public struct AnimState
		{
			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Vector3 moveDirection;

			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9F94", Offset = "0x16E9F94")]
		private sealed class <JumpSmooth>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEngine.Vector3 jumpVelocity;

			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x17000535")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023C2")]
				[Address(RVA = "0x2EB9518", Offset = "0x2EB9518", VA = "0x2EB9518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000536")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023C4")]
				[Address(RVA = "0x2EB9580", Offset = "0x2EB9580", VA = "0x2EB9580", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023BF")]
			[Address(RVA = "0x2EB926C", Offset = "0x2EB926C", VA = "0x2EB926C")]
			[DebuggerHidden]
			public <JumpSmooth>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0x2EB93CC", Offset = "0x2EB93CC", VA = "0x2EB93CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023C1")]
			[Address(RVA = "0x2EB93D0", Offset = "0x2EB93D0", VA = "0x2EB93D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0x2EB9520", Offset = "0x2EB9520", VA = "0x2EB9520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F5E98", Offset = "0x16F5E98")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F5ED0", Offset = "0x16F5ED0")]
		public MoveMode moveMode;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F5F08", Offset = "0x16F5F08")]
		public bool lookInCameraDirection;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F5F40", Offset = "0x16F5F40")]
		public bool smoothJump;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F5F78", Offset = "0x16F5F78")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x16F5FB0", Offset = "0x16F5FB0")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F5FE8", Offset = "0x16F5FE8")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected UnityEngine.Vector3 moveDirection;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private UnityEngine.Vector3 normal;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private UnityEngine.Vector3 platformVelocity;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private UnityEngine.Vector3 platformAngularVelocity;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private UnityEngine.Vector3 wallNormal;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private UnityEngine.Vector3 moveDirectionVelocity;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private UnityEngine.Vector3 fixedDeltaPosition;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool fixedFrame;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float wallRunEndTime;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private UnityEngine.Vector3 gravity;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private UnityEngine.Vector3 verticalVelocity;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float velocityY;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool doubleJumped;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		private bool jumpReleased;

		[Token(Token = "0x17000341")]
		public bool onGround
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x2EB6BE8", Offset = "0x2EB6BE8", VA = "0x2EB6BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704680", Offset = "0x1704680")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x2EB6BF0", Offset = "0x2EB6BF0", VA = "0x2EB6BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704690", Offset = "0x1704690")]
			private set
			{
			}
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x2EB6BFC", Offset = "0x2EB6BFC", VA = "0x2EB6BFC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x2EB6DA8", Offset = "0x2EB6DA8", VA = "0x2EB6DA8")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x2EB6E38", Offset = "0x2EB6E38", VA = "0x2EB6E38", Slot = "4")]
		public override void Move(UnityEngine.Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x2EB6F74", Offset = "0x2EB6F74", VA = "0x2EB6F74")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x2EB7EB0", Offset = "0x2EB7EB0", VA = "0x2EB7EB0", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x2EB8248", Offset = "0x2EB8248", VA = "0x2EB8248", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x2EB7580", Offset = "0x2EB7580", VA = "0x2EB7580")]
		private void MoveFixed(UnityEngine.Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x2EB8328", Offset = "0x2EB8328", VA = "0x2EB8328")]
		private void WallRun()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x2EB8918", Offset = "0x2EB8918", VA = "0x2EB8918")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x2EB7F8C", Offset = "0x2EB7F8C", VA = "0x2EB7F8C")]
		private UnityEngine.Vector3 GetMoveDirection()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x2EB89B8", Offset = "0x2EB89B8", VA = "0x2EB89B8", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x2EB8E28", Offset = "0x2EB8E28", VA = "0x2EB8E28")]
		private UnityEngine.Vector3 GetForwardDirection()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x2EB8FB4", Offset = "0x2EB8FB4", VA = "0x2EB8FB4", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x2EB91CC", Offset = "0x2EB91CC", VA = "0x2EB91CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17046A0", Offset = "0x17046A0")]
		private IEnumerator JumpSmooth(UnityEngine.Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x2EB7A90", Offset = "0x2EB7A90", VA = "0x2EB7A90")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x2EB9298", Offset = "0x2EB9298", VA = "0x2EB9298")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E89D0", Offset = "0x16E89D0")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005D3")]
		public enum RotationMode
		{
			[Token(Token = "0x40021A0")]
			Smooth,
			[Token(Token = "0x40021A1")]
			Linear
		}

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F5FF8", Offset = "0x16F5FF8")]
		public CameraController cameraController;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6030", Offset = "0x16F6030")]
		public float accelerationTime;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6068", Offset = "0x16F6068")]
		public float turnTime;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F60A0", Offset = "0x16F60A0")]
		public bool walkByDefault;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F60D8", Offset = "0x16F60D8")]
		public RotationMode rotationMode;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6110", Offset = "0x16F6110")]
		public float moveSpeed;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6148", Offset = "0x16F6148")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private UnityEngine.Vector3 linearTargetDirection;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x17000342")]
		public bool isGrounded
		{
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x28D453C", Offset = "0x28D453C", VA = "0x28D453C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704704", Offset = "0x1704704")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x28D4544", Offset = "0x28D4544", VA = "0x28D4544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704714", Offset = "0x1704714")]
			private set
			{
			}
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x28D4550", Offset = "0x28D4550", VA = "0x28D4550")]
		private void Start()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x28D45EC", Offset = "0x28D45EC", VA = "0x28D45EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x28D4CE8", Offset = "0x28D4CE8", VA = "0x28D4CE8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x28D4640", Offset = "0x28D4640", VA = "0x28D4640")]
		private void Rotate()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x28D4A40", Offset = "0x28D4A40", VA = "0x28D4A40")]
		private void Move()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x28D4D24", Offset = "0x28D4D24", VA = "0x28D4D24")]
		private UnityEngine.Vector3 GetInputVector()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x28D4E1C", Offset = "0x28D4E1C", VA = "0x28D4E1C")]
		private UnityEngine.Vector3 GetInputVectorRaw()
		{
			return default(UnityEngine.Vector3);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x28D4EBC", Offset = "0x28D4EBC", VA = "0x28D4EBC")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x28D73FC", Offset = "0x28D73FC", VA = "0x28D73FC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x28D747C", Offset = "0x28D747C", VA = "0x28D747C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x28D7710", Offset = "0x28D7710", VA = "0x28D7710")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x28D7734", Offset = "0x28D7734", VA = "0x28D7734")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x20005D4")]
		public struct State
		{
			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UnityEngine.Vector3 move;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public UnityEngine.Vector3 lookPos;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x28D743C", Offset = "0x28D743C", VA = "0x28D743C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x28D7874", Offset = "0x28D7874", VA = "0x28D7874", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x28D7750", Offset = "0x28D7750", VA = "0x28D7750")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x2EB4174", Offset = "0x2EB4174", VA = "0x2EB4174")]
		private void Update()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x2EB41B0", Offset = "0x2EB41B0", VA = "0x2EB41B0")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x28D4EE4", Offset = "0x28D4EE4", VA = "0x28D4EE4")]
		private void Update()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x28D4F18", Offset = "0x28D4F18", VA = "0x28D4F18")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x28D4FC8", Offset = "0x28D4FC8", VA = "0x28D4FC8")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000311")]
	public class Navigator
	{
		[Token(Token = "0x20005D5")]
		public enum State
		{
			[Token(Token = "0x40021A8")]
			Idle,
			[Token(Token = "0x40021A9")]
			Seeking,
			[Token(Token = "0x40021AA")]
			OnPath
		}

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6158", Offset = "0x16F6158")]
		public bool activeTargetSeeking;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6190", Offset = "0x16F6190")]
		public float cornerRadius;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F61C8", Offset = "0x16F61C8")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6200", Offset = "0x16F6200")]
		public float maxSampleDistance;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6238", Offset = "0x16F6238")]
		public float nextPathInterval;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6270", Offset = "0x16F6270")]
		private UnityEngine.Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6280", Offset = "0x16F6280")]
		private State <state>k__BackingField;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.Vector3[] corners;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UnityEngine.Vector3 lastTargetPosition;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x17000343")]
		public UnityEngine.Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x28D0260", Offset = "0x28D0260", VA = "0x28D0260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704724", Offset = "0x1704724")]
			get
			{
				return default(UnityEngine.Vector3);
			}
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x28D026C", Offset = "0x28D026C", VA = "0x28D026C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704734", Offset = "0x1704734")]
			private set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public State state
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x28D0278", Offset = "0x28D0278", VA = "0x28D0278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704744", Offset = "0x1704744")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x28D0280", Offset = "0x28D0280", VA = "0x28D0280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704754", Offset = "0x1704754")]
			private set
			{
			}
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x28D0288", Offset = "0x28D0288", VA = "0x28D0288")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x28D0380", Offset = "0x28D0380", VA = "0x28D0380")]
		public void Update(UnityEngine.Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x28D08D8", Offset = "0x28D08D8", VA = "0x28D08D8")]
		private void CalculatePath(UnityEngine.Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x28D0948", Offset = "0x28D0948", VA = "0x28D0948")]
		private bool Find(UnityEngine.Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x28D07A0", Offset = "0x28D07A0", VA = "0x28D07A0")]
		private void Stop()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x28D0814", Offset = "0x28D0814", VA = "0x28D0814")]
		private float HorDistance(UnityEngine.Vector3 p1, UnityEngine.Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x28D0A90", Offset = "0x28D0A90", VA = "0x28D0A90")]
		public void Visualize()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x28D0C40", Offset = "0x28D0C40", VA = "0x28D0C40")]
		public Navigator()
		{
		}
	}
}
namespace RelationsInspector.Backend.AutoBackend
{
	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E8A34", Offset = "0x16E8A34")]
	public class AutoBackendAttribute : Attribute
	{
		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x1A991FC", Offset = "0x1A991FC", VA = "0x1A991FC")]
		public AutoBackendAttribute()
		{
		}
	}
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E8A48", Offset = "0x16E8A48")]
	public class RelatedAttribute : Attribute
	{
		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x1A99204", Offset = "0x1A99204", VA = "0x1A99204")]
		public RelatedAttribute()
		{
		}
	}
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E8A5C", Offset = "0x16E8A5C")]
	public class RelatingAttribute : Attribute
	{
		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x1A9920C", Offset = "0x1A9920C", VA = "0x1A9920C")]
		public RelatingAttribute()
		{
		}
	}
}
namespace NGTools.Tests
{
	[Token(Token = "0x2000315")]
	public class ConfigCommand : MonoBehaviour
	{
		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6290", Offset = "0x16F6290")]
		private int <a>k__BackingField;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F62A0", Offset = "0x16F62A0")]
		private int <b>k__BackingField;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F62B0", Offset = "0x16F62B0")]
		private int <c>k__BackingField;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F62C0", Offset = "0x16F62C0")]
		private KeyCode <d>k__BackingField;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F62D0", Offset = "0x16F62D0")]
		private float <f>k__BackingField;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F62E0", Offset = "0x16F62E0")]
		private float <g>k__BackingField;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F62F0", Offset = "0x16F62F0")]
		private decimal <h>k__BackingField;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6300", Offset = "0x16F6300")]
		private decimal <i>k__BackingField;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6310", Offset = "0x16F6310")]
		private string <j>k__BackingField;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6320", Offset = "0x16F6320")]
		private bool <k>k__BackingField;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6330", Offset = "0x16F6330")]
		private byte <l>k__BackingField;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6340", Offset = "0x16F6340")]
		private sbyte <m>k__BackingField;

		[Token(Token = "0x17000345")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x1708390", Offset = "0x1708390")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x1708390", Offset = "0x1708390")]
		public int a
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x1A8D7C8", Offset = "0x1A8D7C8", VA = "0x1A8D7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704764", Offset = "0x1704764")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x1A8D7D0", Offset = "0x1A8D7D0", VA = "0x1A8D7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704774", Offset = "0x1704774")]
			set
			{
			}
		}

		[Token(Token = "0x17000346")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x17083FC", Offset = "0x17083FC")]
		[AttributeAttribute(Name = "SetAttribute", RVA = "0x17083FC", Offset = "0x17083FC")]
		public int b
		{
			[Token(Token = "0x6001801")]
			[Address(RVA = "0x1A8D7D8", Offset = "0x1A8D7D8", VA = "0x1A8D7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704784", Offset = "0x1704784")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001802")]
			[Address(RVA = "0x1A8D7E0", Offset = "0x1A8D7E0", VA = "0x1A8D7E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704794", Offset = "0x1704794")]
			set
			{
			}
		}

		[Token(Token = "0x17000347")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x17084AC", Offset = "0x17084AC")]
		public int c
		{
			[Token(Token = "0x6001803")]
			[Address(RVA = "0x1A8D7E8", Offset = "0x1A8D7E8", VA = "0x1A8D7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17047A4", Offset = "0x17047A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001804")]
			[Address(RVA = "0x1A8D7F0", Offset = "0x1A8D7F0", VA = "0x1A8D7F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17047B4", Offset = "0x17047B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000348")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x17084F8", Offset = "0x17084F8")]
		public KeyCode d
		{
			[Token(Token = "0x6001805")]
			[Address(RVA = "0x1A8D7F8", Offset = "0x1A8D7F8", VA = "0x1A8D7F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17047C4", Offset = "0x17047C4")]
			get
			{
				return default(KeyCode);
			}
			[Token(Token = "0x6001806")]
			[Address(RVA = "0x1A8D800", Offset = "0x1A8D800", VA = "0x1A8D800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17047D4", Offset = "0x17047D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x1708544", Offset = "0x1708544")]
		public float f
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0x1A8D808", Offset = "0x1A8D808", VA = "0x1A8D808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17047E4", Offset = "0x17047E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001808")]
			[Address(RVA = "0x1A8D810", Offset = "0x1A8D810", VA = "0x1A8D810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17047F4", Offset = "0x17047F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700034A")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x1708590", Offset = "0x1708590")]
		public float g
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x1A8D818", Offset = "0x1A8D818", VA = "0x1A8D818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704804", Offset = "0x1704804")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x1A8D820", Offset = "0x1A8D820", VA = "0x1A8D820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704814", Offset = "0x1704814")]
			set
			{
			}
		}

		[Token(Token = "0x1700034B")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x17085DC", Offset = "0x17085DC")]
		public decimal h
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0x1A8D828", Offset = "0x1A8D828", VA = "0x1A8D828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704824", Offset = "0x1704824")]
			get
			{
				return default(decimal);
			}
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x1A8D834", Offset = "0x1A8D834", VA = "0x1A8D834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704834", Offset = "0x1704834")]
			set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x1708628", Offset = "0x1708628")]
		public decimal i
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x1A8D83C", Offset = "0x1A8D83C", VA = "0x1A8D83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704844", Offset = "0x1704844")]
			get
			{
				return default(decimal);
			}
			[Token(Token = "0x600180E")]
			[Address(RVA = "0x1A8D848", Offset = "0x1A8D848", VA = "0x1A8D848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704854", Offset = "0x1704854")]
			set
			{
			}
		}

		[Token(Token = "0x1700034D")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x1708674", Offset = "0x1708674")]
		public string j
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0x1A8D850", Offset = "0x1A8D850", VA = "0x1A8D850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704864", Offset = "0x1704864")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001810")]
			[Address(RVA = "0x1A8D858", Offset = "0x1A8D858", VA = "0x1A8D858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704874", Offset = "0x1704874")]
			set
			{
			}
		}

		[Token(Token = "0x1700034E")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x17086C0", Offset = "0x17086C0")]
		public bool k
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0x1A8D860", Offset = "0x1A8D860", VA = "0x1A8D860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704884", Offset = "0x1704884")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001812")]
			[Address(RVA = "0x1A8D868", Offset = "0x1A8D868", VA = "0x1A8D868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704894", Offset = "0x1704894")]
			set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x170870C", Offset = "0x170870C")]
		public byte l
		{
			[Token(Token = "0x6001813")]
			[Address(RVA = "0x1A8D874", Offset = "0x1A8D874", VA = "0x1A8D874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17048A4", Offset = "0x17048A4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001814")]
			[Address(RVA = "0x1A8D87C", Offset = "0x1A8D87C", VA = "0x1A8D87C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17048B4", Offset = "0x17048B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x1708758", Offset = "0x1708758")]
		public sbyte m
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0x1A8D884", Offset = "0x1A8D884", VA = "0x1A8D884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17048C4", Offset = "0x17048C4")]
			get
			{
				return default(sbyte);
			}
			[Token(Token = "0x6001816")]
			[Address(RVA = "0x1A8D88C", Offset = "0x1A8D88C", VA = "0x1A8D88C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17048D4", Offset = "0x17048D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1A8D894", Offset = "0x1A8D894", VA = "0x1A8D894")]
		public ConfigCommand()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class LambdaCommand : MonoBehaviour
	{
		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NGTools.NGGameConsole.NGGameConsole console;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6350", Offset = "0x16F6350")]
		private int <a>k__BackingField;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6360", Offset = "0x16F6360")]
		private string <b>k__BackingField;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6370", Offset = "0x16F6370")]
		private float <c>k__BackingField;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6380", Offset = "0x16F6380")]
		private bool <d>k__BackingField;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F6390", Offset = "0x16F6390")]
		private static decimal <e>k__BackingField;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F63A0", Offset = "0x16F63A0")]
		private static int <f>k__BackingField;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F63B0", Offset = "0x16F63B0")]
		private static string <g>k__BackingField;

		[Token(Token = "0x17000351")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x17087A4", Offset = "0x17087A4")]
		public int a
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0x1A8D89C", Offset = "0x1A8D89C", VA = "0x1A8D89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17048E4", Offset = "0x17048E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001819")]
			[Address(RVA = "0x1A8D8A4", Offset = "0x1A8D8A4", VA = "0x1A8D8A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17048F4", Offset = "0x17048F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000352")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x17087F0", Offset = "0x17087F0")]
		public string b
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0x1A8D8AC", Offset = "0x1A8D8AC", VA = "0x1A8D8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704904", Offset = "0x1704904")]
			get
			{
				return null;
			}
			[Token(Token = "0x600181B")]
			[Address(RVA = "0x1A8D8B4", Offset = "0x1A8D8B4", VA = "0x1A8D8B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704914", Offset = "0x1704914")]
			set
			{
			}
		}

		[Token(Token = "0x17000353")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x170883C", Offset = "0x170883C")]
		public float c
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0x1A8D8BC", Offset = "0x1A8D8BC", VA = "0x1A8D8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704924", Offset = "0x1704924")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600181D")]
			[Address(RVA = "0x1A8D8C4", Offset = "0x1A8D8C4", VA = "0x1A8D8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704934", Offset = "0x1704934")]
			set
			{
			}
		}

		[Token(Token = "0x17000354")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x1708888", Offset = "0x1708888")]
		public bool d
		{
			[Token(Token = "0x600181E")]
			[Address(RVA = "0x1A8D8CC", Offset = "0x1A8D8CC", VA = "0x1A8D8CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704944", Offset = "0x1704944")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600181F")]
			[Address(RVA = "0x1A8D8D4", Offset = "0x1A8D8D4", VA = "0x1A8D8D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704954", Offset = "0x1704954")]
			set
			{
			}
		}

		[Token(Token = "0x17000355")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x17088D4", Offset = "0x17088D4")]
		public static decimal e
		{
			[Token(Token = "0x6001820")]
			[Address(RVA = "0x1A8D8E0", Offset = "0x1A8D8E0", VA = "0x1A8D8E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704964", Offset = "0x1704964")]
			get
			{
				return default(decimal);
			}
			[Token(Token = "0x6001821")]
			[Address(RVA = "0x1A8D930", Offset = "0x1A8D930", VA = "0x1A8D930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704974", Offset = "0x1704974")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x1708920", Offset = "0x1708920")]
		public static int f
		{
			[Token(Token = "0x6001822")]
			[Address(RVA = "0x1A8D990", Offset = "0x1A8D990", VA = "0x1A8D990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704984", Offset = "0x1704984")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001823")]
			[Address(RVA = "0x1A8D9E0", Offset = "0x1A8D9E0", VA = "0x1A8D9E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704994", Offset = "0x1704994")]
			set
			{
			}
		}

		[Token(Token = "0x17000357")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x170896C", Offset = "0x170896C")]
		public static string g
		{
			[Token(Token = "0x6001824")]
			[Address(RVA = "0x1A8DA34", Offset = "0x1A8DA34", VA = "0x1A8DA34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17049A4", Offset = "0x17049A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001825")]
			[Address(RVA = "0x1A8DA84", Offset = "0x1A8DA84", VA = "0x1A8DA84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17049B4", Offset = "0x17049B4")]
			set
			{
			}
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x1A8DADC", Offset = "0x1A8DADC", VA = "0x1A8DADC")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x17049C4", Offset = "0x17049C4")]
		public static string Fn1()
		{
			return null;
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x1A8DB24", Offset = "0x1A8DB24", VA = "0x1A8DB24")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x1704A10", Offset = "0x1704A10")]
		public static string Fn2(int b)
		{
			return null;
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1A8DBAC", Offset = "0x1A8DBAC", VA = "0x1A8DBAC")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x1704A5C", Offset = "0x1704A5C")]
		public string consoleVisible(bool visible)
		{
			return null;
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x1A8DBEC", Offset = "0x1A8DBEC", VA = "0x1A8DBEC")]
		public LambdaCommand()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class TestGameConsole : MonoBehaviour
	{
		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rect fullScreenRect;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIStyle centeredLabel;

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1A8DE14", Offset = "0x1A8DE14", VA = "0x1A8DE14", Slot = "4")]
		protected virtual void OnGUI()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x1A8DFA0", Offset = "0x1A8DFA0", VA = "0x1A8DFA0")]
		public TestGameConsole()
		{
		}
	}
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x16E8A70", Offset = "0x16E8A70")]
	public class ComplexClass : MonoBehaviour
	{
		[Token(Token = "0x20005D6")]
		[Flags]
		public enum FlagsDummyEnum
		{
			[Token(Token = "0x40021AC")]
			None = 1,
			[Token(Token = "0x40021AD")]
			Ya = 2,
			[Token(Token = "0x40021AE")]
			Why = 4,
			[Token(Token = "0x40021AF")]
			NotAtAll = 8,
			[Token(Token = "0x40021B0")]
			ABit = 0x16,
			[Token(Token = "0x40021B1")]
			All = 0x1F
		}

		[Token(Token = "0x20005D7")]
		public enum DummyEnum
		{
			[Token(Token = "0x40021B3")]
			No,
			[Token(Token = "0x40021B4")]
			Yes,
			[Token(Token = "0x40021B5")]
			WhyNot
		}

		[Serializable]
		[Token(Token = "0x20005D8")]
		public class SerializableDummyNestedClass
		{
			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SerializableDummyClass[] nestedArray;

			[Token(Token = "0x60023C5")]
			[Address(RVA = "0x1A8D7C0", Offset = "0x1A8D7C0", VA = "0x1A8D7C0")]
			public SerializableDummyNestedClass()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D9")]
		public class SerializableDummyClass
		{
			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string classString;

			[Token(Token = "0x60023C6")]
			[Address(RVA = "0x1A8D7B8", Offset = "0x1A8D7B8", VA = "0x1A8D7B8")]
			public SerializableDummyClass()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005DA")]
		public struct SerializableDummyStruct
		{
			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int structInt;

			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool structBool;

			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string structString;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Object structObject;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject structGameObject;

			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Component structComponent;

			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEngine.Object[] classArray;
		}

		[Token(Token = "0x20005DB")]
		public class DummyClass
		{
			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int classInt;

			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool classBool;

			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string classString;

			[Token(Token = "0x40021C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEngine.Object classObject;

			[Token(Token = "0x40021C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject classGameObject;

			[Token(Token = "0x40021C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Component classComponent;

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x1A8D7B0", Offset = "0x1A8D7B0", VA = "0x1A8D7B0")]
			public DummyClass()
			{
			}
		}

		[Token(Token = "0x20005DC")]
		public struct DummyStruct
		{
			[Token(Token = "0x40021C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int structInt;

			[Token(Token = "0x40021C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool structBool;

			[Token(Token = "0x40021C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string structString;

			[Token(Token = "0x40021C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Object structObject;

			[Token(Token = "0x40021C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject structGameObject;

			[Token(Token = "0x40021CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Component structComponent;
		}

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Rect s_aa1;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Rect M_ah2;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Rect t1;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Vector2 t2;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static UnityEngine.Vector3 t3;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static Vector4 t4;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static Bounds t5;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static Color t6;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static AnimationCurve t7;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] a;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static string[] b;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static List<string> la;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private static List<string> lb;

		[Token(Token = "0x4001525")]
		public const float constFloat = 5f;

		[Token(Token = "0x4001526")]
		public const string constString = "tototoq";

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static float staticFloat;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static string staticString;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F63C0", Offset = "0x16F63C0")]
		private static float <GetPSetFloatProp>k__BackingField;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F63D0", Offset = "0x16F63D0")]
		private static string <GetPSetStringProp>k__BackingField;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F63E0", Offset = "0x16F63E0")]
		private static float <PGetSetFloatProp>k__BackingField;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F63F0", Offset = "0x16F63F0")]
		private static string <PGetSetStringProp>k__BackingField;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int int322222222;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SerializableDummyNestedClass serializationDummyNestedClass;

		[Token(Token = "0x17000358")]
		public static string[] A
		{
			[Token(Token = "0x600182C")]
			[Address(RVA = "0x1A8CD30", Offset = "0x1A8CD30", VA = "0x1A8CD30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		public int Item
		{
			[Token(Token = "0x600182D")]
			[Address(RVA = "0x1A8CD98", Offset = "0x1A8CD98", VA = "0x1A8CD98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035A")]
		public int Item
		{
			[Token(Token = "0x600182E")]
			[Address(RVA = "0x1A8CDA0", Offset = "0x1A8CDA0", VA = "0x1A8CDA0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035B")]
		public static float GetFloatProp
		{
			[Token(Token = "0x600182F")]
			[Address(RVA = "0x1A8CDA8", Offset = "0x1A8CDA8", VA = "0x1A8CDA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035C")]
		public static string GetStringProp
		{
			[Token(Token = "0x6001830")]
			[Address(RVA = "0x1A8CDB0", Offset = "0x1A8CDB0", VA = "0x1A8CDB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		public static float SetFloatProp
		{
			[Token(Token = "0x6001831")]
			[Address(RVA = "0x1A8CDF8", Offset = "0x1A8CDF8", VA = "0x1A8CDF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public static string SetStringProp
		{
			[Token(Token = "0x6001832")]
			[Address(RVA = "0x1A8CDFC", Offset = "0x1A8CDFC", VA = "0x1A8CDFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public static float GetPSetFloatProp
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0x1A8CE00", Offset = "0x1A8CE00", VA = "0x1A8CE00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704AA8", Offset = "0x1704AA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001834")]
			[Address(RVA = "0x1A8CE68", Offset = "0x1A8CE68", VA = "0x1A8CE68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704AB8", Offset = "0x1704AB8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public static string GetPSetStringProp
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0x1A8CEDC", Offset = "0x1A8CEDC", VA = "0x1A8CEDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704AC8", Offset = "0x1704AC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001836")]
			[Address(RVA = "0x1A8CF44", Offset = "0x1A8CF44", VA = "0x1A8CF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704AD8", Offset = "0x1704AD8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000361")]
		public static float PGetSetFloatProp
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0x1A8CFB4", Offset = "0x1A8CFB4", VA = "0x1A8CFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704AE8", Offset = "0x1704AE8")]
			private get
			{
				return default(float);
			}
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x1A8D01C", Offset = "0x1A8D01C", VA = "0x1A8D01C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704AF8", Offset = "0x1704AF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public static string PGetSetStringProp
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x1A8D090", Offset = "0x1A8D090", VA = "0x1A8D090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704B08", Offset = "0x1704B08")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600183A")]
			[Address(RVA = "0x1A8D0F8", Offset = "0x1A8D0F8", VA = "0x1A8D0F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704B18", Offset = "0x1704B18")]
			set
			{
			}
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1A8D168", Offset = "0x1A8D168", VA = "0x1A8D168")]
		public void FnInt(int a)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1A8D1FC", Offset = "0x1A8D1FC", VA = "0x1A8D1FC")]
		public void FnIntString(int a, string b)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x1A8D2A0", Offset = "0x1A8D2A0", VA = "0x1A8D2A0")]
		public void FnIntStringFloat(int a, string b, float c)
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x1A8D378", Offset = "0x1A8D378", VA = "0x1A8D378")]
		public void FnV3(UnityEngine.Vector3 v)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x1A8D428", Offset = "0x1A8D428", VA = "0x1A8D428")]
		public void FnV3Int(UnityEngine.Vector3 v, int a)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x1A8D4FC", Offset = "0x1A8D4FC", VA = "0x1A8D4FC")]
		public ComplexClass()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class SimpleLog : MonoBehaviour, IResolver
	{
		[Serializable]
		[Token(Token = "0x20005DD")]
		public class AuxiliaryClass
		{
			[Token(Token = "0x40021CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int doubleNestedFieldInteger;

			[Token(Token = "0x40021CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] doubleNestedArrayFieldInteger;

			[Token(Token = "0x40021CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Rect rect;

			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x1A8DDFC", Offset = "0x1A8DDFC", VA = "0x1A8DDFC")]
			public AuxiliaryClass()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005DE")]
		public class Coo
		{
			[Token(Token = "0x60023C9")]
			[Address(RVA = "0x1A8DE04", Offset = "0x1A8DE04", VA = "0x1A8DE04")]
			public Coo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005DF")]
		public class RefClass
		{
			[Token(Token = "0x40021CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Coo c;

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x1A8DE0C", Offset = "0x1A8DE0C", VA = "0x1A8DE0C")]
			public RefClass()
			{
			}
		}

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "GroupAttribute", RVA = "0x16F6400", Offset = "0x16F6400")]
		public UnityEngine.Object A;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "GroupAttribute", RVA = "0x16F643C", Offset = "0x16F643C")]
		public UnityEngine.Object B;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object all2;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SimpleLog ref1;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Component component;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject aGameObject;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture texture;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture2D texture2D;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite sprite;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RefClass refClass;

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x1A8DBF4", Offset = "0x1A8DBF4", VA = "0x1A8DBF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x1A8DBF8", Offset = "0x1A8DBF8", VA = "0x1A8DBF8", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x1A8DBFC", Offset = "0x1A8DBFC", VA = "0x1A8DBFC")]
		public void Test()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x1A8DC68", Offset = "0x1A8DC68", VA = "0x1A8DC68")]
		private float OnHierarchyGUI(Rect r)
		{
			return default(float);
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x1A8DD3C", Offset = "0x1A8DD3C", VA = "0x1A8DD3C", Slot = "4")]
		public void GetResolver(out int identifier, out Func<int, GameObject> resolver)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x1A8DDD0", Offset = "0x1A8DDD0", VA = "0x1A8DDD0")]
		private static GameObject a(int id)
		{
			return null;
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x1A8DDF4", Offset = "0x1A8DDF4", VA = "0x1A8DDF4")]
		public SimpleLog()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class TestRemoteScene : MonoBehaviour
	{
		[Token(Token = "0x4001539")]
		private const float XOffset = 0f;

		[Token(Token = "0x400153A")]
		private const float YOffset = 20f;

		[Token(Token = "0x400153B")]
		private const float Height = 30f;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool display;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle labelStyle;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rect r;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 scrollPosition;

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1A8DFA8", Offset = "0x1A8DFA8", VA = "0x1A8DFA8", Slot = "4")]
		protected virtual void OnGUI()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x1A8EC08", Offset = "0x1A8EC08", VA = "0x1A8EC08")]
		public TestRemoteScene()
		{
		}
	}
}
namespace AudioTrip
{
	[Serializable]
	[Token(Token = "0x200031B")]
	public struct ATAnimClipValue
	{
		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string clipName;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float beatSpan;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WrapMode wrapMode;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ATEffectID idMask;

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x25D0374", Offset = "0x25D0374", VA = "0x25D0374", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200031C")]
	public static class ATAnimClipPayloadEventExtensions
	{
		[Token(Token = "0x600184C")]
		[Address(RVA = "0x25D01FC", Offset = "0x25D01FC", VA = "0x25D01FC")]
		public static bool HasATAnimClipPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x25D0288", Offset = "0x25D0288", VA = "0x25D0288")]
		public static ATAnimClipValue GetATAnimClipValue(this KoreographyEvent koreoEvent)
		{
			return default(ATAnimClipValue);
		}
	}
	[Serializable]
	[Token(Token = "0x200031D")]
	public class ATAnimClipPayload : IPayload
	{
		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6478", Offset = "0x16F6478")]
		private ATAnimClipValue mATAnimClipVal;

		[Token(Token = "0x17000363")]
		public ATAnimClipValue ATAnimClipVal
		{
			[Token(Token = "0x600184E")]
			[Address(RVA = "0x25CFE50", Offset = "0x25CFE50", VA = "0x25CFE50")]
			get
			{
				return default(ATAnimClipValue);
			}
			[Token(Token = "0x600184F")]
			[Address(RVA = "0x25CFE64", Offset = "0x25CFE64", VA = "0x25CFE64")]
			set
			{
			}
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x25CFE84", Offset = "0x25CFE84", VA = "0x25CFE84")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x25CFECC", Offset = "0x25CFECC", VA = "0x25CFECC", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x25CFFF8", Offset = "0x25CFFF8", VA = "0x25CFFF8", Slot = "5")]
		public IPayload CopyDifferences(IPayload referece, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x25D0148", Offset = "0x25D0148", VA = "0x25D0148")]
		public ATAnimClipValue GetMergedDifferences(ATAnimClipValue r, ATAnimClipValue d)
		{
			return default(ATAnimClipValue);
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x25CFF64", Offset = "0x25CFF64", VA = "0x25CFF64")]
		public ATAnimClipPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031E")]
	public struct ATColorDelta
	{
		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color start;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color end;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ATEffectID idMask;

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x25D045C", Offset = "0x25D045C", VA = "0x25D045C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200031F")]
	public static class ATColorDeltaPayloadEventExtensions
	{
		[Token(Token = "0x6001856")]
		[Address(RVA = "0x25D0868", Offset = "0x25D0868", VA = "0x25D0868")]
		public static bool HasATColorDeltaPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x25D08F4", Offset = "0x25D08F4", VA = "0x25D08F4")]
		public static ATColorDelta GetATColorDeltaValue(this KoreographyEvent koreoEvent)
		{
			return default(ATColorDelta);
		}
	}
	[Serializable]
	[Token(Token = "0x2000320")]
	public class ATColorDeltaPayload : IPayload
	{
		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F64C4", Offset = "0x16F64C4")]
		private ATColorDelta mATColorDeltaVal;

		[Token(Token = "0x17000364")]
		public ATColorDelta ATColorDeltaVal
		{
			[Token(Token = "0x6001858")]
			[Address(RVA = "0x25D04D0", Offset = "0x25D04D0", VA = "0x25D04D0")]
			get
			{
				return default(ATColorDelta);
			}
			[Token(Token = "0x6001859")]
			[Address(RVA = "0x25D04E4", Offset = "0x25D04E4", VA = "0x25D04E4")]
			set
			{
			}
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x25D04F8", Offset = "0x25D04F8", VA = "0x25D04F8")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x25D0540", Offset = "0x25D0540", VA = "0x25D0540")]
		private void UpdateValues(ATColorDelta newVals)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x25D0554", Offset = "0x25D0554", VA = "0x25D0554", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x25D0648", Offset = "0x25D0648", VA = "0x25D0648", Slot = "5")]
		public IPayload CopyDifferences(IPayload referece, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x25D079C", Offset = "0x25D079C", VA = "0x25D079C")]
		public ATColorDelta GetMergedDifferences(ATColorDelta r, ATColorDelta d)
		{
			return default(ATColorDelta);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x25D05E0", Offset = "0x25D05E0", VA = "0x25D05E0")]
		public ATColorDeltaPayload()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public enum ATEffectID : uint
	{
		[Token(Token = "0x400154B")]
		DontCare = 0u,
		[Token(Token = "0x400154C")]
		ID_1 = 1u,
		[Token(Token = "0x400154D")]
		ID_2 = 2u,
		[Token(Token = "0x400154E")]
		ID_3 = 4u,
		[Token(Token = "0x400154F")]
		ID_4 = 8u,
		[Token(Token = "0x4001550")]
		ID_5 = 0x10u,
		[Token(Token = "0x4001551")]
		ID_6 = 0x20u,
		[Token(Token = "0x4001552")]
		ID_7 = 0x40u,
		[Token(Token = "0x4001553")]
		ID_8 = 0x80u,
		[Token(Token = "0x4001554")]
		ID_9 = 0x100u,
		[Token(Token = "0x4001555")]
		ID_10 = 0x200u,
		[Token(Token = "0x4001556")]
		ID_11 = 0x400u,
		[Token(Token = "0x4001557")]
		ID_12 = 0x800u,
		[Token(Token = "0x4001558")]
		ID_13 = 0x1000u,
		[Token(Token = "0x4001559")]
		ID_14 = 0x2000u,
		[Token(Token = "0x400155A")]
		ID_15 = 0x4000u,
		[Token(Token = "0x400155B")]
		ID_16 = 0x8000u,
		[Token(Token = "0x400155C")]
		ID_17 = 0x10000u,
		[Token(Token = "0x400155D")]
		ID_18 = 0x20000u,
		[Token(Token = "0x400155E")]
		ID_19 = 0x40000u,
		[Token(Token = "0x400155F")]
		ID_20 = 0x80000u,
		[Token(Token = "0x4001560")]
		ID_21 = 0x100000u,
		[Token(Token = "0x4001561")]
		ID_22 = 0x200000u,
		[Token(Token = "0x4001562")]
		ID_23 = 0x400000u,
		[Token(Token = "0x4001563")]
		ID_24 = 0x800000u,
		[Token(Token = "0x4001564")]
		ID_25 = 0x1000000u,
		[Token(Token = "0x4001565")]
		ID_26 = 0x2000000u,
		[Token(Token = "0x4001566")]
		ID_27 = 0x4000000u,
		[Token(Token = "0x4001567")]
		ID_28 = 0x8000000u,
		[Token(Token = "0x4001568")]
		ID_29 = 0x10000000u,
		[Token(Token = "0x4001569")]
		ID_30 = 0x20000000u,
		[Token(Token = "0x400156A")]
		ID_31 = 0x40000000u,
		[Token(Token = "0x400156B")]
		ID_32 = 0x80000000u
	}
	[Serializable]
	[Token(Token = "0x2000322")]
	public struct ATColor
	{
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ATEffectID idMask;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x16F6510", Offset = "0x16F6510")]
		public Color color;

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x25D03E8", Offset = "0x25D03E8", VA = "0x25D03E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000323")]
	public static class ATColorPayloadEventExtensions
	{
		[Token(Token = "0x6001861")]
		[Address(RVA = "0x25D0C54", Offset = "0x25D0C54", VA = "0x25D0C54")]
		public static bool HasATColorPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x25D0CE0", Offset = "0x25D0CE0", VA = "0x25D0CE0")]
		public static ATColor GetATColorValue(this KoreographyEvent koreoEvent)
		{
			return default(ATColor);
		}
	}
	[Serializable]
	[Token(Token = "0x2000324")]
	public class ATColorPayload : IPayload
	{
		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6528", Offset = "0x16F6528")]
		private ATColor mATColorVal;

		[Token(Token = "0x17000365")]
		public ATColor ATColorVal
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0x25D09E0", Offset = "0x25D09E0", VA = "0x25D09E0")]
			get
			{
				return default(ATColor);
			}
			[Token(Token = "0x6001864")]
			[Address(RVA = "0x25D09F4", Offset = "0x25D09F4", VA = "0x25D09F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x25D0A08", Offset = "0x25D0A08", VA = "0x25D0A08")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x25D0A50", Offset = "0x25D0A50", VA = "0x25D0A50", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x25D0B14", Offset = "0x25D0B14", VA = "0x25D0B14", Slot = "5")]
		public IPayload CopyDifferences(IPayload referece, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x25D0ADC", Offset = "0x25D0ADC", VA = "0x25D0ADC")]
		public ATColorPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000325")]
	public struct ATGradientInfo
	{
		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float duration;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ATEffectID idMask;
	}
	[Token(Token = "0x2000326")]
	public static class ATGradientPayloadEventExtensions
	{
		[Token(Token = "0x6001869")]
		[Address(RVA = "0x25D0FC0", Offset = "0x25D0FC0", VA = "0x25D0FC0")]
		public static bool HasATGradientPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x25D104C", Offset = "0x25D104C", VA = "0x25D104C")]
		public static ATGradientInfo GetATGradientInfoValue(this KoreographyEvent koreoEvent)
		{
			return default(ATGradientInfo);
		}
	}
	[Serializable]
	[Token(Token = "0x2000327")]
	public class ATGradientPayload : IPayload
	{
		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6574", Offset = "0x16F6574")]
		private ATGradientInfo mATGradientVal;

		[Token(Token = "0x17000366")]
		public ATGradientInfo ATGradientVal
		{
			[Token(Token = "0x600186B")]
			[Address(RVA = "0x25D0D98", Offset = "0x25D0D98", VA = "0x25D0D98")]
			get
			{
				return default(ATGradientInfo);
			}
			[Token(Token = "0x600186C")]
			[Address(RVA = "0x25D0DA0", Offset = "0x25D0DA0", VA = "0x25D0DA0")]
			set
			{
			}
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x25D0DA8", Offset = "0x25D0DA8", VA = "0x25D0DA8")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x25D0DF0", Offset = "0x25D0DF0", VA = "0x25D0DF0")]
		private void UpdateValues(ATGradientInfo newVals)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x25D0DF8", Offset = "0x25D0DF8", VA = "0x25D0DF8", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x25D0E70", Offset = "0x25D0E70", VA = "0x25D0E70", Slot = "5")]
		public IPayload CopyDifferences(IPayload referece, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x25D0F94", Offset = "0x25D0F94", VA = "0x25D0F94")]
		public ATGradientInfo GetMergedDifferences(ATGradientInfo r, ATGradientInfo d)
		{
			return default(ATGradientInfo);
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x25D0E68", Offset = "0x25D0E68", VA = "0x25D0E68")]
		public ATGradientPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000328")]
	public struct ATID
	{
		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ATEffectID idMask;

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x25D10DC", Offset = "0x25D10DC", VA = "0x25D10DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000329")]
	public static class ATIDPayloadEventExtensions
	{
		[Token(Token = "0x6001874")]
		[Address(RVA = "0x25D12B8", Offset = "0x25D12B8", VA = "0x25D12B8")]
		public static bool HasATIDPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x25D1344", Offset = "0x25D1344", VA = "0x25D1344")]
		public static ATID GetATIDValue(this KoreographyEvent koreoEvent)
		{
			return default(ATID);
		}
	}
	[Serializable]
	[Token(Token = "0x200032A")]
	public class ATIDPayload : IPayload
	{
		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F65C0", Offset = "0x16F65C0")]
		private ATID mATIDVal;

		[Token(Token = "0x17000367")]
		public ATID ATIDVal
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0x25D1148", Offset = "0x25D1148", VA = "0x25D1148")]
			get
			{
				return default(ATID);
			}
			[Token(Token = "0x6001877")]
			[Address(RVA = "0x25D1150", Offset = "0x25D1150", VA = "0x25D1150")]
			set
			{
			}
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x25D1158", Offset = "0x25D1158", VA = "0x25D1158")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x25D11A0", Offset = "0x25D11A0", VA = "0x25D11A0", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x25D1220", Offset = "0x25D1220", VA = "0x25D1220", Slot = "5")]
		public IPayload CopyDifferences(IPayload reference, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x25D1214", Offset = "0x25D1214", VA = "0x25D1214")]
		public ATIDPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032B")]
	public struct ATLightingInfo
	{
		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string lightSet;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string cubemap;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startFogDensity;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fogDensity;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fogTransitionBeats;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float startSkyExposure;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float skyExposure;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float expTransitionBeats;

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x25D13E0", Offset = "0x25D13E0", VA = "0x25D13E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200032C")]
	public static class ATLightingPayloadEventExtensions
	{
		[Token(Token = "0x600187D")]
		[Address(RVA = "0x25D18D8", Offset = "0x25D18D8", VA = "0x25D18D8")]
		public static bool HasATLightingPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x25D1964", Offset = "0x25D1964", VA = "0x25D1964")]
		public static ATLightingInfo GetATLightingInfoValue(this KoreographyEvent koreoEvent)
		{
			return default(ATLightingInfo);
		}
	}
	[Serializable]
	[Token(Token = "0x200032D")]
	public class ATLightingPayload : IPayload
	{
		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F660C", Offset = "0x16F660C")]
		private ATLightingInfo mATLightingVal;

		[Token(Token = "0x17000368")]
		public ATLightingInfo ATLightingVal
		{
			[Token(Token = "0x600187F")]
			[Address(RVA = "0x25D1454", Offset = "0x25D1454", VA = "0x25D1454")]
			get
			{
				return default(ATLightingInfo);
			}
			[Token(Token = "0x6001880")]
			[Address(RVA = "0x25D1468", Offset = "0x25D1468", VA = "0x25D1468")]
			set
			{
			}
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x25D1488", Offset = "0x25D1488", VA = "0x25D1488")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x25D14D0", Offset = "0x25D14D0", VA = "0x25D14D0", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x25D1648", Offset = "0x25D1648", VA = "0x25D1648", Slot = "5")]
		public IPayload CopyDifferences(IPayload referece, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x25D1798", Offset = "0x25D1798", VA = "0x25D1798")]
		public ATLightingInfo CopyDifferences(ATLightingInfo r, ATLightingInfo d)
		{
			return default(ATLightingInfo);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x25D1568", Offset = "0x25D1568", VA = "0x25D1568")]
		public ATLightingPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032E")]
	public struct ATSpawnEvent
	{
		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string group;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string obj;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ATEffectID idMask;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float zOffset;

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x25D1A9C", Offset = "0x25D1A9C", VA = "0x25D1A9C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200032F")]
	public static class ATSpawnPayloadEventExtensions
	{
		[Token(Token = "0x6001887")]
		[Address(RVA = "0x25D1F44", Offset = "0x25D1F44", VA = "0x25D1F44")]
		public static bool HasATSpawnPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x25D1FD0", Offset = "0x25D1FD0", VA = "0x25D1FD0")]
		public static ATSpawnEvent GetATSpawnEventValue(this KoreographyEvent koreoEvent)
		{
			return default(ATSpawnEvent);
		}
	}
	[Serializable]
	[Token(Token = "0x2000330")]
	public class ATSpawnPayload : IPayload
	{
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6658", Offset = "0x16F6658")]
		private ATSpawnEvent mATSpawnVal;

		[Token(Token = "0x17000369")]
		public ATSpawnEvent ATSpawnVal
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0x25D1B10", Offset = "0x25D1B10", VA = "0x25D1B10")]
			get
			{
				return default(ATSpawnEvent);
			}
			[Token(Token = "0x600188A")]
			[Address(RVA = "0x25D1B24", Offset = "0x25D1B24", VA = "0x25D1B24")]
			set
			{
			}
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x25D1B44", Offset = "0x25D1B44", VA = "0x25D1B44")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x25D1B8C", Offset = "0x25D1B8C", VA = "0x25D1B8C")]
		private void UpdateValues(ATSpawnEvent newVals)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x25D1BAC", Offset = "0x25D1BAC", VA = "0x25D1BAC", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x25D1CF8", Offset = "0x25D1CF8", VA = "0x25D1CF8", Slot = "5")]
		public IPayload CopyDifferences(IPayload referece, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x25D1E7C", Offset = "0x25D1E7C", VA = "0x25D1E7C")]
		public ATSpawnEvent GetMergedDifferences(ATSpawnEvent r, ATSpawnEvent d)
		{
			return default(ATSpawnEvent);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x25D1C44", Offset = "0x25D1C44", VA = "0x25D1C44")]
		public ATSpawnPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000331")]
	public struct ATStrNumValue
	{
		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string str;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float num;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ATEffectID idMask;

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x25D2514", Offset = "0x25D2514", VA = "0x25D2514", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000332")]
	public static class ATStrNumPayloadEventExtensions
	{
		[Token(Token = "0x6001892")]
		[Address(RVA = "0x25D23D0", Offset = "0x25D23D0", VA = "0x25D23D0")]
		public static bool HasATStrNumPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x25D245C", Offset = "0x25D245C", VA = "0x25D245C")]
		public static ATStrNumValue GetATStrNumValue(this KoreographyEvent koreoEvent)
		{
			return default(ATStrNumValue);
		}
	}
	[Serializable]
	[Token(Token = "0x2000333")]
	public class ATStrNumPayload : IPayload
	{
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F66A4", Offset = "0x16F66A4")]
		private ATStrNumValue mATStrNumVal;

		[Token(Token = "0x1700036A")]
		public ATStrNumValue ATStrNumVal
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0x25D20D4", Offset = "0x25D20D4", VA = "0x25D20D4")]
			get
			{
				return default(ATStrNumValue);
			}
			[Token(Token = "0x6001895")]
			[Address(RVA = "0x25D20E0", Offset = "0x25D20E0", VA = "0x25D20E0")]
			set
			{
			}
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x25D20F0", Offset = "0x25D20F0", VA = "0x25D20F0")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x25D2138", Offset = "0x25D2138", VA = "0x25D2138", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x25D2234", Offset = "0x25D2234", VA = "0x25D2234", Slot = "5")]
		public IPayload CopyDifferences(IPayload referece, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x25D2344", Offset = "0x25D2344", VA = "0x25D2344")]
		public ATStrNumValue GetMergedDifferences(ATStrNumValue r, ATStrNumValue d)
		{
			return default(ATStrNumValue);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x25D21B0", Offset = "0x25D21B0", VA = "0x25D21B0")]
		public ATStrNumPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000334")]
	public struct ATVector
	{
		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ATEffectID idMask;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public UnityEngine.Vector3 vector;

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x25D2580", Offset = "0x25D2580", VA = "0x25D2580", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000335")]
	public static class ATVectorPayloadEventExtensions
	{
		[Token(Token = "0x600189C")]
		[Address(RVA = "0x25D28C8", Offset = "0x25D28C8", VA = "0x25D28C8")]
		public static bool HasATVectorPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x25D2954", Offset = "0x25D2954", VA = "0x25D2954")]
		public static ATVector GetATVectorValue(this KoreographyEvent koreoEvent)
		{
			return default(ATVector);
		}
	}
	[Serializable]
	[Token(Token = "0x2000336")]
	public class ATVectorPayload : IPayload
	{
		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F66F0", Offset = "0x16F66F0")]
		private ATVector mATVectorVal;

		[Token(Token = "0x1700036B")]
		public ATVector ATVectorVal
		{
			[Token(Token = "0x600189E")]
			[Address(RVA = "0x25D25EC", Offset = "0x25D25EC", VA = "0x25D25EC")]
			get
			{
				return default(ATVector);
			}
			[Token(Token = "0x600189F")]
			[Address(RVA = "0x25D25F8", Offset = "0x25D25F8", VA = "0x25D25F8")]
			set
			{
			}
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x25D2600", Offset = "0x25D2600", VA = "0x25D2600")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x25D2648", Offset = "0x25D2648", VA = "0x25D2648", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x25D273C", Offset = "0x25D273C", VA = "0x25D273C", Slot = "5")]
		public IPayload CopyDifferences(IPayload referece, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x25D26B4", Offset = "0x25D26B4", VA = "0x25D26B4")]
		public ATVectorPayload()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000337")]
	public struct ATVibeInfo
	{
		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[,] CONNECTED_NAMES;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[,] DISCONNECTED_NAMES;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int freneticism;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int physicality;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool connected;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool dark;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 directionality;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float startIntensity;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float endIntensity;

		[Token(Token = "0x1700036C")]
		public string Description
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x25D2AAC", Offset = "0x25D2AAC", VA = "0x25D2AAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x25D2A20", Offset = "0x25D2A20", VA = "0x25D2A20", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x25D2B2C", Offset = "0x25D2B2C", VA = "0x25D2B2C")]
		public static string GetDescription(int f, int p, bool c)
		{
			return null;
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x25D2C10", Offset = "0x25D2C10", VA = "0x25D2C10")]
		public int GetIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x25D2CA4", Offset = "0x25D2CA4", VA = "0x25D2CA4")]
		public static int CalcIndex(int f, int p, bool c, bool d)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000338")]
	public static class ATVibePayloadEventExtensions
	{
		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x25D3620", Offset = "0x25D3620", VA = "0x25D3620")]
		public static bool HasATVibePayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x25D36AC", Offset = "0x25D36AC", VA = "0x25D36AC")]
		public static ATVibeInfo GetATVibeInfoValue(this KoreographyEvent koreoEvent)
		{
			return default(ATVibeInfo);
		}
	}
	[Serializable]
	[Token(Token = "0x2000339")]
	public class ATVibePayload : IPayload
	{
		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F673C", Offset = "0x16F673C")]
		private ATVibeInfo mATVibeVal;

		[Token(Token = "0x1700036D")]
		public ATVibeInfo ATVibeVal
		{
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x25D3140", Offset = "0x25D3140", VA = "0x25D3140")]
			get
			{
				return default(ATVibeInfo);
			}
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0x25D3154", Offset = "0x25D3154", VA = "0x25D3154")]
			set
			{
			}
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x25D3174", Offset = "0x25D3174", VA = "0x25D3174")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x25D31BC", Offset = "0x25D31BC", VA = "0x25D31BC", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x25D3320", Offset = "0x25D3320", VA = "0x25D3320", Slot = "5")]
		public IPayload CopyDifferences(IPayload referece, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x25D3474", Offset = "0x25D3474", VA = "0x25D3474")]
		public ATVibeInfo CopyDifferences(ATVibeInfo r, ATVibeInfo d)
		{
			return default(ATVibeInfo);
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x25D3254", Offset = "0x25D3254", VA = "0x25D3254")]
		public ATVibePayload()
		{
		}
	}
}
namespace SonicBloom.MIDI
{
	[Token(Token = "0x200033A")]
	public class MIDIConstants
	{
		[Token(Token = "0x20005E0")]
		public enum MIDIFileFormats
		{
			[Token(Token = "0x40021D0")]
			SingleTrack,
			[Token(Token = "0x40021D1")]
			MultipleTrackSync,
			[Token(Token = "0x40021D2")]
			MultipleTrackAsync
		}

		[Token(Token = "0x20005E1")]
		public enum MIDIStatus
		{
			[Token(Token = "0x40021D4")]
			NoteOff = 128,
			[Token(Token = "0x40021D5")]
			NoteOn = 144,
			[Token(Token = "0x40021D6")]
			NoteAftertouch = 160,
			[Token(Token = "0x40021D7")]
			ControllerChange = 176,
			[Token(Token = "0x40021D8")]
			ProgramChange = 192,
			[Token(Token = "0x40021D9")]
			ChannelPressure = 208,
			[Token(Token = "0x40021DA")]
			PitchBend = 224,
			[Token(Token = "0x40021DB")]
			SysExMessage = 240,
			[Token(Token = "0x40021DC")]
			TimeCode = 241,
			[Token(Token = "0x40021DD")]
			SongPositionPointer = 242,
			[Token(Token = "0x40021DE")]
			SongSelect = 243,
			[Token(Token = "0x40021DF")]
			TuneRequest = 246,
			[Token(Token = "0x40021E0")]
			EndSysExMessage = 247,
			[Token(Token = "0x40021E1")]
			TimingClock = 248,
			[Token(Token = "0x40021E2")]
			Start = 250,
			[Token(Token = "0x40021E3")]
			Continue = 251,
			[Token(Token = "0x40021E4")]
			Stop = 252,
			[Token(Token = "0x40021E5")]
			ActiveSensing = 254,
			[Token(Token = "0x40021E6")]
			MetaEventOrReset = 255
		}

		[Token(Token = "0x20005E2")]
		public enum MIDIMetaEvents
		{
			[Token(Token = "0x40021E8")]
			SequenceNumber = 0,
			[Token(Token = "0x40021E9")]
			Text = 1,
			[Token(Token = "0x40021EA")]
			CopyrightNotice = 2,
			[Token(Token = "0x40021EB")]
			SequenceOrTrackName = 3,
			[Token(Token = "0x40021EC")]
			InstrumentName = 4,
			[Token(Token = "0x40021ED")]
			Lyric = 5,
			[Token(Token = "0x40021EE")]
			Marker = 6,
			[Token(Token = "0x40021EF")]
			CuePoint = 7,
			[Token(Token = "0x40021F0")]
			ProgramName = 8,
			[Token(Token = "0x40021F1")]
			DeviceName = 9,
			[Token(Token = "0x40021F2")]
			MIDIChannelPrefix = 32,
			[Token(Token = "0x40021F3")]
			MIDIPort = 33,
			[Token(Token = "0x40021F4")]
			EndOfTrack = 47,
			[Token(Token = "0x40021F5")]
			SetTempo = 81,
			[Token(Token = "0x40021F6")]
			SMPTEOffset = 84,
			[Token(Token = "0x40021F7")]
			TimeSignature = 88,
			[Token(Token = "0x40021F8")]
			KeySignature = 89,
			[Token(Token = "0x40021F9")]
			SequencerSpecific = 127
		}

		[Token(Token = "0x20005E3")]
		public enum MIDIControllers
		{
			[Token(Token = "0x40021FB")]
			BankSelectCoarse = 0,
			[Token(Token = "0x40021FC")]
			ModulationWheelCoarse = 1,
			[Token(Token = "0x40021FD")]
			BreathControllerCoarse = 2,
			[Token(Token = "0x40021FE")]
			FootControllerCoarse = 4,
			[Token(Token = "0x40021FF")]
			PortamentoTimeCoarse = 5,
			[Token(Token = "0x4002200")]
			DataEntryCoarse = 6,
			[Token(Token = "0x4002201")]
			ChannelVolumeCoarse = 7,
			[Token(Token = "0x4002202")]
			BalanceCoarse = 8,
			[Token(Token = "0x4002203")]
			PanCoarse = 10,
			[Token(Token = "0x4002204")]
			ExpressionCoarse = 11,
			[Token(Token = "0x4002205")]
			EffectControl1Coarse = 12,
			[Token(Token = "0x4002206")]
			EffectControl2Coarse = 13,
			[Token(Token = "0x4002207")]
			GeneralPurposeController1Coarse = 16,
			[Token(Token = "0x4002208")]
			GeneralPurposeController2Coarse = 17,
			[Token(Token = "0x4002209")]
			GeneralPurposeController3Coarse = 18,
			[Token(Token = "0x400220A")]
			GeneralPurposeController4Coarse = 19,
			[Token(Token = "0x400220B")]
			BankSelectFine = 32,
			[Token(Token = "0x400220C")]
			ModulationWheelFine = 33,
			[Token(Token = "0x400220D")]
			BreathControllerFine = 34,
			[Token(Token = "0x400220E")]
			FootControllerFine = 36,
			[Token(Token = "0x400220F")]
			PortamentoTimeFine = 37,
			[Token(Token = "0x4002210")]
			DataEntryFine = 38,
			[Token(Token = "0x4002211")]
			ChannelVolumeFine = 39,
			[Token(Token = "0x4002212")]
			BalanceFine = 40,
			[Token(Token = "0x4002213")]
			PanFine = 42,
			[Token(Token = "0x4002214")]
			ExpressionFine = 43,
			[Token(Token = "0x4002215")]
			EffectControl1Fine = 44,
			[Token(Token = "0x4002216")]
			EffectControl2Fine = 45,
			[Token(Token = "0x4002217")]
			HoldPedal1 = 64,
			[Token(Token = "0x4002218")]
			PortamentoPedal = 65,
			[Token(Token = "0x4002219")]
			SostenutoPedal = 66,
			[Token(Token = "0x400221A")]
			SoftPedal = 67,
			[Token(Token = "0x400221B")]
			LegatoPedal = 68,
			[Token(Token = "0x400221C")]
			HoldPedal2 = 69,
			[Token(Token = "0x400221D")]
			SoundController1 = 70,
			[Token(Token = "0x400221E")]
			SoundController2 = 71,
			[Token(Token = "0x400221F")]
			SoundController3 = 72,
			[Token(Token = "0x4002220")]
			SoundController4 = 73,
			[Token(Token = "0x4002221")]
			SoundController5 = 74,
			[Token(Token = "0x4002222")]
			SoundController6 = 75,
			[Token(Token = "0x4002223")]
			SoundController7 = 76,
			[Token(Token = "0x4002224")]
			SoundController8 = 77,
			[Token(Token = "0x4002225")]
			SoundController9 = 78,
			[Token(Token = "0x4002226")]
			Soundcontroller10 = 79,
			[Token(Token = "0x4002227")]
			GeneralPurposeController5 = 80,
			[Token(Token = "0x4002228")]
			GeneralPurposeController6 = 81,
			[Token(Token = "0x4002229")]
			GeneralPurposeController7 = 82,
			[Token(Token = "0x400222A")]
			GeneralPurposeController8 = 83,
			[Token(Token = "0x400222B")]
			PortamentoControl = 84,
			[Token(Token = "0x400222C")]
			HighResolutionVelocityPrefix = 88,
			[Token(Token = "0x400222D")]
			Effect1Depth = 91,
			[Token(Token = "0x400222E")]
			Effect2Depth = 92,
			[Token(Token = "0x400222F")]
			Effect3Depth = 93,
			[Token(Token = "0x4002230")]
			Effect4Depth = 94,
			[Token(Token = "0x4002231")]
			Effect5Depth = 95,
			[Token(Token = "0x4002232")]
			DataButtonIncrement = 96,
			[Token(Token = "0x4002233")]
			DataButtonDecrement = 97,
			[Token(Token = "0x4002234")]
			NonRegisteredParameterCoarse = 98,
			[Token(Token = "0x4002235")]
			NonRegisteredParameterFine = 99,
			[Token(Token = "0x4002236")]
			RegisteredParameterCoarse = 100,
			[Token(Token = "0x4002237")]
			RegisteredParameterFine = 101,
			[Token(Token = "0x4002238")]
			AllSoundOff = 120,
			[Token(Token = "0x4002239")]
			AllControllersOff = 121,
			[Token(Token = "0x400223A")]
			LocalControl = 122,
			[Token(Token = "0x400223B")]
			AllNotesOff = 123,
			[Token(Token = "0x400223C")]
			OmniModeOff = 124,
			[Token(Token = "0x400223D")]
			OmniModeOn = 125,
			[Token(Token = "0x400223E")]
			MonoOperation = 126,
			[Token(Token = "0x400223F")]
			PolyOperation = 127
		}

		[Token(Token = "0x4001595")]
		public const string HEADER_ID = "MThd";

		[Token(Token = "0x4001596")]
		public const string TRACK_ID = "MTrk";

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x345E404", Offset = "0x345E404", VA = "0x345E404")]
		public MIDIConstants()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public struct MIDITime
	{
		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int bar;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int beat;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int tick;
	}
	[Token(Token = "0x200033C")]
	public struct SMPTETime
	{
		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int hours;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int minutes;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int seconds;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int frames;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ticks;
	}
	[Token(Token = "0x200033D")]
	public struct MIDITimeDivision
	{
		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bSMPTE;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float fps;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int subFrames;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int ticks;
	}
	[Token(Token = "0x200033E")]
	public class MIDITempo
	{
		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MIDITempo DefaultTempo;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int microPerQuarter;

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x345EE04", Offset = "0x345EE04", VA = "0x345EE04")]
		public float GetBPM()
		{
			return default(float);
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x345EE1C", Offset = "0x345EE1C", VA = "0x345EE1C")]
		public MIDITempo()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class MIDITimeSignature
	{
		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MIDITimeSignature DefaultTimeSignature;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int beatsPerBar;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int noteValue;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int midiClocks;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int num32NotesPerBeat;

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x345EEA4", Offset = "0x345EEA4", VA = "0x345EEA4")]
		public string GetTimeSig()
		{
			return null;
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x345EF3C", Offset = "0x345EF3C", VA = "0x345EF3C")]
		public MIDITimeSignature()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class MIDIKeySignature
	{
		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MIDIKeySignature DefaultKeySignature;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] majorKeys;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] minorKeys;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int key;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool bMinor;

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x345E40C", Offset = "0x345E40C", VA = "0x345E40C")]
		public string GetMusicKey()
		{
			return null;
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x345E500", Offset = "0x345E500", VA = "0x345E500")]
		public MIDIKeySignature()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public struct MIDIEvent
	{
		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MIDITime eventTime;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int deltaTime;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MIDIConstants.MIDIStatus status;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public byte channel;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public byte dataOne;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public byte dataTwo;
	}
	[Token(Token = "0x2000342")]
	public struct MIDITrack
	{
		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int trackNumber;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int trackEventCount;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<MIDIEvent> midiEvents;
	}
	[Token(Token = "0x2000343")]
	public struct MIDIHeader
	{
		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MIDIConstants.MIDIFileFormats format;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int numTracks;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MIDITimeDivision timeDivision;
	}
	[Token(Token = "0x2000344")]
	public class MIDIUtils
	{
		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x345EFC4", Offset = "0x345EFC4", VA = "0x345EFC4")]
		public static short EndianSwap16(short input)
		{
			return default(short);
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x345EFD0", Offset = "0x345EFD0", VA = "0x345EFD0")]
		public static int EndianSwap32(int input)
		{
			return default(int);
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x345EFD8", Offset = "0x345EFD8", VA = "0x345EFD8")]
		public static byte LowNibble(byte input)
		{
			return default(byte);
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x345EFE0", Offset = "0x345EFE0", VA = "0x345EFE0")]
		public static byte HighNibble(byte input)
		{
			return default(byte);
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x345EFE8", Offset = "0x345EFE8", VA = "0x345EFE8")]
		public static int ReadVariableLengthQuantity(BinaryReader reader)
		{
			return default(int);
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x345F048", Offset = "0x345F048", VA = "0x345F048")]
		public MIDIUtils()
		{
		}
	}
}
namespace SonicBloom.MIDI.Objects
{
	[Token(Token = "0x2000345")]
	public class SongBuilder : BinaryReader
	{
		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool bPrintDebug;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MIDIHeader header;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Song song;

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x3461258", Offset = "0x3461258", VA = "0x3461258")]
		public static Song GetSong(string midiFileLoc)
		{
			return null;
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x3461498", Offset = "0x3461498", VA = "0x3461498")]
		private SongBuilder(Stream dataStream)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x34614A0", Offset = "0x34614A0", VA = "0x34614A0")]
		private Song ParseSong()
		{
			return null;
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x34615C4", Offset = "0x34615C4", VA = "0x34615C4")]
		private bool ReadHeader()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x34617FC", Offset = "0x34617FC", VA = "0x34617FC")]
		private Track ReadTrack()
		{
			return null;
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x3463EEC", Offset = "0x3463EEC", VA = "0x3463EEC")]
		private string GetASCIIString(int len)
		{
			return null;
		}
	}
	[Token(Token = "0x2000346")]
	public class Note
	{
		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int startTime;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int key;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int velocity;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int endTime;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<int, int> pitch;

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x345F3B0", Offset = "0x345F3B0", VA = "0x345F3B0")]
		public static string GetMusicNote(int key)
		{
			return null;
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x345F320", Offset = "0x345F320", VA = "0x345F320")]
		public Note()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class Channel
	{
		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9FB4", Offset = "0x16E9FB4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int time;

			[Token(Token = "0x4002241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int key;

			[Token(Token = "0x60023CB")]
			[Address(RVA = "0x345F318", Offset = "0x345F318", VA = "0x345F318")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60023CC")]
			[Address(RVA = "0x345F950", Offset = "0x345F950", VA = "0x345F950")]
			internal bool <BeginNote>b__0(Note x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9FC4", Offset = "0x16E9FC4")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int key;

			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x345F6EC", Offset = "0x345F6EC", VA = "0x345F6EC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x345F998", Offset = "0x345F998", VA = "0x345F998")]
			internal bool <EndNote>b__0(Note x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9FD4", Offset = "0x16E9FD4")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int key;

			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x345F7C4", Offset = "0x345F7C4", VA = "0x345F7C4")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x345F9CC", Offset = "0x345F9CC", VA = "0x345F9CC")]
			internal bool <HasUnendedNoteWithKey>b__0(Note x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Note> notes;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string instrumentName;

		[Token(Token = "0x1700036E")]
		public List<Note> Notes
		{
			[Token(Token = "0x60018CC")]
			[Address(RVA = "0x345F050", Offset = "0x345F050", VA = "0x345F050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x345F058", Offset = "0x345F058", VA = "0x345F058")]
		public void BeginNote(int time, int key, int velocity)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x345F43C", Offset = "0x345F43C", VA = "0x345F43C")]
		public void EndNote(int time, int key, int velocity)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x345F6F4", Offset = "0x345F6F4", VA = "0x345F6F4")]
		public bool HasUnendedNoteWithKey(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x345F7CC", Offset = "0x345F7CC", VA = "0x345F7CC")]
		public int NumNotes()
		{
			return default(int);
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x345F81C", Offset = "0x345F81C", VA = "0x345F81C")]
		public int NumUnendedNotes()
		{
			return default(int);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x345F8BC", Offset = "0x345F8BC", VA = "0x345F8BC")]
		public Channel()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class Track
	{
		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9FE4", Offset = "0x16E9FE4")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int time;

			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x346442C", Offset = "0x346442C", VA = "0x346442C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x3464A24", Offset = "0x3464A24", VA = "0x3464A24")]
			internal bool <AddLyric>b__0(MIDITimedMessage<string> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, Channel> channels;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<MIDITimedMessage<string>> lyrics;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string instrumentName;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string deviceName;

		[Token(Token = "0x1700036F")]
		public Dictionary<int, Channel> Channels
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0x3464424", Offset = "0x3464424", VA = "0x3464424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x3463E94", Offset = "0x3463E94", VA = "0x3463E94")]
		public bool HasLyrics()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x3464114", Offset = "0x3464114", VA = "0x3464114")]
		public void AddLyric(int time, string lyric)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x3464434", Offset = "0x3464434", VA = "0x3464434")]
		public List<MIDITimedMessage<string>> GetLyrics()
		{
			return null;
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x346443C", Offset = "0x346443C", VA = "0x346443C")]
		public bool HasChannel(int channelNum)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x3464044", Offset = "0x3464044", VA = "0x3464044")]
		public Channel GetChannel(int channelNum, bool bCreateIfNull = true)
		{
			return null;
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x34644A4", Offset = "0x34644A4", VA = "0x34644A4")]
		public void PrintInfo()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x3463F44", Offset = "0x3463F44", VA = "0x3463F44")]
		public Track()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class MIDITimedMessage<T>
	{
		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int time;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double timeInSec;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T msg;

		[Token(Token = "0x60018DB")]
		public MIDITimedMessage()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class Song
	{
		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16E9FF4", Offset = "0x16E9FF4")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int time;

			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x346052C", Offset = "0x346052C", VA = "0x346052C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x3461114", Offset = "0x3461114", VA = "0x3461114")]
			internal bool <AddTempo>b__0(MIDITimedMessage<MIDITempo> x)
			{
				return default(bool);
			}

			[Token(Token = "0x60023D5")]
			[Address(RVA = "0x3461138", Offset = "0x3461138", VA = "0x3461138")]
			internal bool <AddTempo>b__1(MIDITimedMessage<MIDITempo> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA004", Offset = "0x16EA004")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int tickTime;

			[Token(Token = "0x60023D6")]
			[Address(RVA = "0x3460950", Offset = "0x3460950", VA = "0x3460950")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x60023D7")]
			[Address(RVA = "0x346115C", Offset = "0x346115C", VA = "0x346115C")]
			internal bool <AddTimeSignature>b__0(MIDITimedMessage<MIDITimeSignature> x)
			{
				return default(bool);
			}

			[Token(Token = "0x60023D8")]
			[Address(RVA = "0x3461180", Offset = "0x3461180", VA = "0x3461180")]
			internal bool <AddTimeSignature>b__1(MIDITimedMessage<MIDITimeSignature> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA014", Offset = "0x16EA014")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int tickTime;

			[Token(Token = "0x60023D9")]
			[Address(RVA = "0x3460D74", Offset = "0x3460D74", VA = "0x3460D74")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x34611A4", Offset = "0x34611A4", VA = "0x34611A4")]
			internal bool <AddKeySignature>b__0(MIDITimedMessage<MIDIKeySignature> x)
			{
				return default(bool);
			}

			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x34611C8", Offset = "0x34611C8", VA = "0x34611C8")]
			internal bool <AddKeySignature>b__1(MIDITimedMessage<MIDIKeySignature> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA024", Offset = "0x16EA024")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int tickTime;

			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x3460E2C", Offset = "0x3460E2C", VA = "0x3460E2C")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60023DD")]
			[Address(RVA = "0x34611EC", Offset = "0x34611EC", VA = "0x34611EC")]
			internal bool <GetTempoAtTime>b__0(MIDITimedMessage<MIDITempo> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA034", Offset = "0x16EA034")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int tickTime;

			[Token(Token = "0x60023DE")]
			[Address(RVA = "0x3460F10", Offset = "0x3460F10", VA = "0x3460F10")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60023DF")]
			[Address(RVA = "0x3461210", Offset = "0x3461210", VA = "0x3461210")]
			internal bool <GetTimeSignatureAtTime>b__0(MIDITimedMessage<MIDITimeSignature> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA044", Offset = "0x16EA044")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x400224A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int tickTime;

			[Token(Token = "0x60023E0")]
			[Address(RVA = "0x3460FF4", Offset = "0x3460FF4", VA = "0x3460FF4")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60023E1")]
			[Address(RVA = "0x3461234", Offset = "0x3461234", VA = "0x3461234")]
			internal bool <GetKeySignatureAtTime>b__0(MIDITimedMessage<MIDIKeySignature> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MIDITimeDivision timeDivision;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<MIDITimedMessage<MIDITempo>> tempoMap;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MIDITimedMessage<MIDITimeSignature>> timeSigMap;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MIDITimedMessage<MIDIKeySignature>> keySigMap;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Track> tracks;

		[Token(Token = "0x17000370")]
		public List<MIDITimedMessage<MIDITempo>> TempoMap
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x345FA00", Offset = "0x345FA00", VA = "0x345FA00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000371")]
		public List<MIDITimedMessage<MIDITimeSignature>> TimeSignatureMap
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x345FA08", Offset = "0x345FA08", VA = "0x345FA08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		public List<MIDITimedMessage<MIDIKeySignature>> KeySignatureMap
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x345FA10", Offset = "0x345FA10", VA = "0x345FA10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		public List<Track> Tracks
		{
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x345FA18", Offset = "0x345FA18", VA = "0x345FA18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x345FA20", Offset = "0x345FA20", VA = "0x345FA20")]
		private static MIDITimedMessage<MIDITempo> GetDefaultTempo()
		{
			return null;
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x345FACC", Offset = "0x345FACC", VA = "0x345FACC")]
		private static MIDITimedMessage<MIDITimeSignature> GetDefaultTimeSignature()
		{
			return null;
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x345FB78", Offset = "0x345FB78", VA = "0x345FB78")]
		private static MIDITimedMessage<MIDIKeySignature> GetDefaultKeySignature()
		{
			return null;
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x345FC24", Offset = "0x345FC24", VA = "0x345FC24")]
		public void SetTimeDiv(MIDITimeDivision div)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x345FC2C", Offset = "0x345FC2C", VA = "0x345FC2C")]
		private double GetTimeInSeconds(int messageTime, MIDITimedMessage<MIDITempo> targetTempo)
		{
			return default(double);
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x345FE70", Offset = "0x345FE70", VA = "0x345FE70")]
		public double GetTimeInSeconds(int messageTime)
		{
			return default(double);
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x345FF7C", Offset = "0x345FF7C", VA = "0x345FF7C")]
		public void AddTrack(Track track)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x345FFE4", Offset = "0x345FFE4", VA = "0x345FFE4")]
		public int NumTracks()
		{
			return default(int);
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x3460034", Offset = "0x3460034", VA = "0x3460034")]
		public void AddTempo(int time, MIDITempo tempo)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x3460534", Offset = "0x3460534", VA = "0x3460534")]
		public void AddTimeSignature(int tickTime, MIDITimeSignature sig)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x3460958", Offset = "0x3460958", VA = "0x3460958")]
		public void AddKeySignature(int tickTime, MIDIKeySignature sig)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x3460D7C", Offset = "0x3460D7C", VA = "0x3460D7C")]
		public bool HasTempoMap()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x3460DD4", Offset = "0x3460DD4", VA = "0x3460DD4")]
		public bool HasTimeSignatureMap()
		{
			return default(bool);
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x345FEA0", Offset = "0x345FEA0", VA = "0x345FEA0")]
		public MIDITimedMessage<MIDITempo> GetTempoAtTime(int tickTime)
		{
			return null;
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x3460E34", Offset = "0x3460E34", VA = "0x3460E34")]
		public MIDITimedMessage<MIDITimeSignature> GetTimeSignatureAtTime(int tickTime)
		{
			return null;
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x3460F18", Offset = "0x3460F18", VA = "0x3460F18")]
		public MIDITimedMessage<MIDIKeySignature> GetKeySignatureAtTime(int tickTime)
		{
			return null;
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x3460FFC", Offset = "0x3460FFC", VA = "0x3460FFC")]
		public Song()
		{
		}
	}
}
namespace SonicBloom.Koreo
{
	[Token(Token = "0x200034B")]
	public class Koreography : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA054", Offset = "0x16EA054")]
		private sealed class <>c
		{
			[Token(Token = "0x400224B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400224C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<KoreographyTrackBase> <>9__25_0;

			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<TempoSectionDef> <>9__26_0;

			[Token(Token = "0x400224E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<TempoSectionDef, string> <>9__32_0;

			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<KoreographyTrackBase, string> <>9__40_0;

			[Token(Token = "0x60023E3")]
			[Address(RVA = "0x2AD3A44", Offset = "0x2AD3A44", VA = "0x2AD3A44")]
			public <>c()
			{
			}

			[Token(Token = "0x60023E4")]
			[Address(RVA = "0x2AD3A4C", Offset = "0x2AD3A4C", VA = "0x2AD3A4C")]
			internal bool <CheckTrackListIntegrity>b__25_0(KoreographyTrackBase track)
			{
				return default(bool);
			}

			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x2AD3AB8", Offset = "0x2AD3AB8", VA = "0x2AD3AB8")]
			internal bool <CheckTempoSectionListIntegrity>b__26_0(TempoSectionDef section)
			{
				return default(bool);
			}

			[Token(Token = "0x60023E6")]
			[Address(RVA = "0x2AD3AC4", Offset = "0x2AD3AC4", VA = "0x2AD3AC4")]
			internal string <GetTempoSectionNames>b__32_0(TempoSectionDef section)
			{
				return null;
			}

			[Token(Token = "0x60023E7")]
			[Address(RVA = "0x2AD3ADC", Offset = "0x2AD3ADC", VA = "0x2AD3ADC")]
			internal string <GetEventIDs>b__40_0(KoreographyTrackBase track)
			{
				return null;
			}
		}

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6788", Offset = "0x16F6788")]
		private AudioClip mSourceClip;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F67D4", Offset = "0x16F67D4")]
		private string mAudioFilePath;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6820", Offset = "0x16F6820")]
		private int mSampleRate;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F686C", Offset = "0x16F686C")]
		private bool mIgnoreLatencyOffset;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F68B8", Offset = "0x16F68B8")]
		private List<TempoSectionDef> mTempoSections;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6904", Offset = "0x16F6904")]
		private List<KoreographyTrackBase> mTracks;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string clipName;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastUpdateStart;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastUpdateEnd;

		[Token(Token = "0x17000374")]
		public AudioClip SourceClip
		{
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x2AD1BE0", Offset = "0x2AD1BE0", VA = "0x2AD1BE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x2AD1BE8", Offset = "0x2AD1BE8", VA = "0x2AD1BE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public string SourceClipPath
		{
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0x2AD1CD0", Offset = "0x2AD1CD0", VA = "0x2AD1CD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x2AD1CD8", Offset = "0x2AD1CD8", VA = "0x2AD1CD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public string SourceClipName
		{
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x2ACEDBC", Offset = "0x2ACEDBC", VA = "0x2ACEDBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		public int SampleRate
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x2AD05C8", Offset = "0x2AD05C8", VA = "0x2AD05C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x2AD1D84", Offset = "0x2AD1D84", VA = "0x2AD1D84")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public bool IgnoreLatencyOffset
		{
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x2AD1E34", Offset = "0x2AD1E34", VA = "0x2AD1E34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x2AD1E3C", Offset = "0x2AD1E3C", VA = "0x2AD1E3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public List<KoreographyTrackBase> Tracks
		{
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x2AD1E48", Offset = "0x2AD1E48", VA = "0x2AD1E48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x2AD1EB8", Offset = "0x2AD1EB8", VA = "0x2AD1EB8")]
		public bool CheckTrackListIntegrity()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x2AD1FDC", Offset = "0x2AD1FDC", VA = "0x2AD1FDC")]
		public bool CheckTempoSectionListIntegrity()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x2AD2204", Offset = "0x2AD2204", VA = "0x2AD2204")]
		public void OverwriteTempoSections(List<TempoSectionDef> newSections)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x2AD2320", Offset = "0x2AD2320", VA = "0x2AD2320")]
		public int GetIndexOfTempoSection(TempoSectionDef sectionDef)
		{
			return default(int);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x2AD2388", Offset = "0x2AD2388", VA = "0x2AD2388")]
		public TempoSectionDef InsertTempoSectionAtIndex(int idxToInsert)
		{
			return null;
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x2AD245C", Offset = "0x2AD245C", VA = "0x2AD245C")]
		public bool RemoveTempoSectionAtIndex(int idxToRemove)
		{
			return default(bool);
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x2AD251C", Offset = "0x2AD251C", VA = "0x2AD251C")]
		public bool RemoveTempoSection(TempoSectionDef sectionDef)
		{
			return default(bool);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x2AD2544", Offset = "0x2AD2544", VA = "0x2AD2544")]
		public string[] GetTempoSectionNames()
		{
			return null;
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x2AD264C", Offset = "0x2AD264C", VA = "0x2AD264C")]
		public TempoSectionDef GetTempoSectionAtIndex(int sectionIdx)
		{
			return null;
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x2AD26D4", Offset = "0x2AD26D4", VA = "0x2AD26D4")]
		public int GetNumTempoSections()
		{
			return default(int);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x2AD2170", Offset = "0x2AD2170", VA = "0x2AD2170")]
		public void EnsureTempoSectionOrder()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x2AD2724", Offset = "0x2AD2724", VA = "0x2AD2724")]
		public bool CanAddTrack(KoreographyTrackBase track)
		{
			return default(bool);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x2AD274C", Offset = "0x2AD274C", VA = "0x2AD274C")]
		public bool AddTrack(KoreographyTrackBase track)
		{
			return default(bool);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x2AD27D4", Offset = "0x2AD27D4", VA = "0x2AD27D4")]
		public void RemoveTrack(KoreographyTrackBase track)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x2AD283C", Offset = "0x2AD283C", VA = "0x2AD283C")]
		public void RemoveTrack(string eventID)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x2AD28B4", Offset = "0x2AD28B4", VA = "0x2AD28B4")]
		public string[] GetEventIDs()
		{
			return null;
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x2AD0240", Offset = "0x2AD0240", VA = "0x2AD0240")]
		public KoreographyTrackBase GetTrackByID(string eventID)
		{
			return null;
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x2AD2A54", Offset = "0x2AD2A54", VA = "0x2AD2A54")]
		public KoreographyTrackBase GetTrackAtIndex(int trackIdx)
		{
			return null;
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x2AD2ADC", Offset = "0x2AD2ADC", VA = "0x2AD2ADC")]
		public int GetIndexOfTrack(KoreographyTrackBase track)
		{
			return default(int);
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x2AD2B44", Offset = "0x2AD2B44", VA = "0x2AD2B44")]
		public bool HasTrack(KoreographyTrackBase track)
		{
			return default(bool);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x2AD2BAC", Offset = "0x2AD2BAC", VA = "0x2AD2BAC")]
		public int GetNumTracks()
		{
			return default(int);
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x2ACF4FC", Offset = "0x2ACF4FC", VA = "0x2ACF4FC")]
		public bool DoesTrackWithEventIDExist(string eventID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x2ACE620", Offset = "0x2ACE620", VA = "0x2ACE620")]
		public void ResetTimings()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x2AD1528", Offset = "0x2AD1528", VA = "0x2AD1528")]
		public float GetBeatTimeDelta(int subdivisions = 1)
		{
			return default(float);
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x2AD2CC4", Offset = "0x2AD2CC4", VA = "0x2AD2CC4")]
		public int GetLatestSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x2AD0A08", Offset = "0x2AD0A08", VA = "0x2AD0A08")]
		public int GetLatestSampleTimeDelta()
		{
			return default(int);
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x2AD2CCC", Offset = "0x2AD2CCC", VA = "0x2AD2CCC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1704C68", Offset = "0x1704C68")]
		public int GetSampleTimeDelta()
		{
			return default(int);
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x2AD2CDC", Offset = "0x2AD2CDC", VA = "0x2AD2CDC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1704CA0", Offset = "0x1704CA0")]
		public double GetBeatTimeFromSampleTimeLite(int sampleTime, int subdivisions = 1)
		{
			return default(double);
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x2AD112C", Offset = "0x2AD112C", VA = "0x2AD112C")]
		public double GetBeatTimeFromSampleTime(int sampleTime, int subdivisions = 1)
		{
			return default(double);
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x2AD2CE0", Offset = "0x2AD2CE0", VA = "0x2AD2CE0")]
		public int GetSampleTimeFromBeatTime(double beatTime, int subdivisions = 1)
		{
			return default(int);
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x2AD2EB8", Offset = "0x2AD2EB8", VA = "0x2AD2EB8")]
		public double GetMeasureTimeFromSampleTime(int sampleTime)
		{
			return default(double);
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x2AD3044", Offset = "0x2AD3044", VA = "0x2AD3044")]
		public int GetSampleTimeFromMeasureTime(double measureTime)
		{
			return default(int);
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x2AD3220", Offset = "0x2AD3220", VA = "0x2AD3220")]
		public int GetSampleTimeFromMeasureTime(int measure)
		{
			return default(int);
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x2AD3228", Offset = "0x2AD3228", VA = "0x2AD3228")]
		public double GetBeatCountInMeasureFromSampleTime(int sampleTime)
		{
			return default(double);
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x2AD3318", Offset = "0x2AD3318", VA = "0x2AD3318")]
		public double GetSamplesPerBeat(int checkSample, int subdivisions = 1)
		{
			return default(double);
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x2AD0F08", Offset = "0x2AD0F08", VA = "0x2AD0F08")]
		public double GetBPM(int checkSample)
		{
			return default(double);
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x2AD3348", Offset = "0x2AD3348", VA = "0x2AD3348")]
		public int GetSampleOfNearestBeat(int checkSample, int subdivisions = 1)
		{
			return default(int);
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x2AD3284", Offset = "0x2AD3284", VA = "0x2AD3284")]
		public TempoSectionDef GetTempoSectionForSample(int checkSample)
		{
			return null;
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x2AD2BFC", Offset = "0x2AD2BFC", VA = "0x2AD2BFC")]
		public int GetTempoSectionIndexForSample(int checkSample)
		{
			return default(int);
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x2ACF090", Offset = "0x2ACF090", VA = "0x2ACF090")]
		public void UpdateTrackTime(int startTime, int endTime, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x2AD3560", Offset = "0x2AD3560", VA = "0x2AD3560")]
		internal void RegisterForEvents(string eventDef, KoreographyEventCallback callback)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x2ACF588", Offset = "0x2ACF588", VA = "0x2ACF588")]
		internal void RegisterForEventsWithTime(string eventDef, KoreographyEventCallbackWithTime callback)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x2AD3674", Offset = "0x2AD3674", VA = "0x2AD3674")]
		internal void UnregisterForEvents(string eventDef, KoreographyEventCallback callback)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x2ACF830", Offset = "0x2ACF830", VA = "0x2ACF830")]
		internal void UnregisterForEventsWithTime(string eventDef, KoreographyEventCallbackWithTime callback)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x2AD3788", Offset = "0x2AD3788", VA = "0x2AD3788")]
		internal void ClearEventRegister()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x2AD386C", Offset = "0x2AD386C", VA = "0x2AD386C")]
		public Koreography()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034C")]
	public class TempoSectionDef
	{
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6950", Offset = "0x16F6950")]
		private string sectionName;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F699C", Offset = "0x16F699C")]
		private int startSample;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F69E8", Offset = "0x16F69E8")]
		private double samplesPerBeat;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6A34", Offset = "0x16F6A34")]
		private int beatsPerMeasure;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6A80", Offset = "0x16F6A80")]
		private bool bStartNewMeasure;

		[Token(Token = "0x1700037A")]
		public string SectionName
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0x345DFA4", Offset = "0x345DFA4", VA = "0x345DFA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600192A")]
			[Address(RVA = "0x345DFAC", Offset = "0x345DFAC", VA = "0x345DFAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public int StartSample
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x345DFB4", Offset = "0x345DFB4", VA = "0x345DFB4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600192C")]
			[Address(RVA = "0x345DFBC", Offset = "0x345DFBC", VA = "0x345DFBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public double SamplesPerBeat
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x345DFC8", Offset = "0x345DFC8", VA = "0x345DFC8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600192E")]
			[Address(RVA = "0x345DFD0", Offset = "0x345DFD0", VA = "0x345DFD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public int BeatsPerMeasure
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0x345DFE4", Offset = "0x345DFE4", VA = "0x345DFE4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x345DFEC", Offset = "0x345DFEC", VA = "0x345DFEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700037E")]
		public double SamplesPerMeasure
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x345DFFC", Offset = "0x345DFFC", VA = "0x345DFFC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700037F")]
		public bool DoesStartNewMeasure
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0x345E010", Offset = "0x345E010", VA = "0x345E010")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x345E018", Offset = "0x345E018", VA = "0x345E018")]
			set
			{
			}
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x345E024", Offset = "0x345E024", VA = "0x345E024")]
		public static int CompareByStartSample(TempoSectionDef first, TempoSectionDef second)
		{
			return default(int);
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x345E060", Offset = "0x345E060", VA = "0x345E060")]
		public double GetSamplesPerBeatSection(int subdivisions = 1)
		{
			return default(double);
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x345E070", Offset = "0x345E070", VA = "0x345E070")]
		public double GetBeatTimeFromSampleTime(int sampleTime, int subdivisions = 1)
		{
			return default(double);
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x345E09C", Offset = "0x345E09C", VA = "0x345E09C")]
		public double GetMeasureTimeFromSampleTime(int sampleTime)
		{
			return default(double);
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x345E0CC", Offset = "0x345E0CC", VA = "0x345E0CC")]
		public double GetBPM(int sampleRate)
		{
			return default(double);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x345E0E8", Offset = "0x345E0E8", VA = "0x345E0E8")]
		public TempoSectionDef()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public interface IPayload
	{
		[Token(Token = "0x600193A")]
		IPayload GetCopy();

		[Token(Token = "0x600193B")]
		IPayload CopyDifferences(IPayload reference, IPayload delta);
	}
	[Serializable]
	[Token(Token = "0x200034E")]
	public class KoreographyEvent
	{
		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6ACC", Offset = "0x16F6ACC")]
		private int mStartSample;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F6B18", Offset = "0x16F6B18")]
		private int mEndSample;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IPayload mPayload;

		[Token(Token = "0x17000380")]
		public int StartSample
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x2AD3AF4", Offset = "0x2AD3AF4", VA = "0x2AD3AF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x2AD3AFC", Offset = "0x2AD3AFC", VA = "0x2AD3AFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000381")]
		public int EndSample
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0x2AD3B8C", Offset = "0x2AD3B8C", VA = "0x2AD3B8C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600193F")]
			[Address(RVA = "0x2AD3B94", Offset = "0x2AD3B94", VA = "0x2AD3B94")]
			set
			{
			}
		}

		[Token(Token = "0x17000382")]
		public IPayload Payload
		{
			[Token(Token = "0x6001940")]
			[Address(RVA = "0x2AD3C24", Offset = "0x2AD3C24", VA = "0x2AD3C24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001941")]
			[Address(RVA = "0x2AD3C2C", Offset = "0x2AD3C2C", VA = "0x2AD3C2C")]
			set
			{
			}
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x2AD3C34", Offset = "0x2AD3C34", VA = "0x2AD3C34")]
		public static int CompareByStartSample(KoreographyEvent first, KoreographyEvent second)
		{
			return default(int);
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x2AD3C70", Offset = "0x2AD3C70", VA = "0x2AD3C70")]
		public static int CompareByStartSample_Stable(KoreographyEvent first, KoreographyEvent second)
		{
			return default(int);
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x2ACA3E4", Offset = "0x2ACA3E4", VA = "0x2ACA3E4")]
		public static object CopyDifferences(object reference, object delta, object target)
		{
			return null;
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x2ACB50C", Offset = "0x2ACB50C", VA = "0x2ACB50C")]
		public bool IsOneOff()
		{
			return default(bool);
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x2ACAF44", Offset = "0x2ACAF44", VA = "0x2ACAF44")]
		public float GetEventDeltaAtSampleTime(int sampleTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x2AD3CE8", Offset = "0x2AD3CE8", VA = "0x2AD3CE8")]
		public KoreographyEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034F")]
	public class KoreographyTrack : KoreographyTrackBase
	{
		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		[SerializeField]
		protected List<AssetPayload> _AssetPayloads;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _AssetPayloadIdxs;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		protected List<ColorPayload> _ColorPayloads;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _ColorPayloadIdxs;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		protected List<CurvePayload> _CurvePayloads;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _CurvePayloadIdxs;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		[SerializeField]
		protected List<FloatPayload> _FloatPayloads;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _FloatPayloadIdxs;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		[SerializeField]
		protected List<GradientPayload> _GradientPayloads;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _GradientPayloadIdxs;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		[SerializeField]
		protected List<IntPayload> _IntPayloads;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _IntPayloadIdxs;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		[SerializeField]
		protected List<SpectrumPayload> _SpectrumPayloads;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _SpectrumPayloadIdxs;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		[SerializeField]
		protected List<TextPayload> _TextPayloads;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _TextPayloadIdxs;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		[SerializeField]
		protected List<ATColorPayload> _ATColorPayloads;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _ATColorPayloadIdxs;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		[SerializeField]
		protected List<ATVectorPayload> _ATVectorPayloads;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _ATVectorPayloadIdxs;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		[SerializeField]
		protected List<ATIDPayload> _ATIDPayloads;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _ATIDPayloadIdxs;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		[SerializeField]
		protected List<ATSpawnPayload> _ATSpawnPayloads;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _ATSpawnPayloadIdxs;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		[SerializeField]
		protected List<ATLightingPayload> _ATLightingPayloads;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _ATLightingPayloadIdxs;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		[SerializeField]
		protected List<ATStrNumPayload> _ATStrNumPayloads;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _ATStrNumPayloadIdxs;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		[SerializeField]
		protected List<ATAnimClipPayload> _ATAnimClipPayloads;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _ATAnimClipPayloadIdxs;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		[SerializeField]
		protected List<ATColorDeltaPayload> _ATColorDeltaPayloads;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _ATColorDeltaPayloadIdxs;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		[SerializeField]
		protected List<ATVibePayload> _ATVibePayloads;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		[SerializeField]
		protected List<int> _ATVibePayloadIdxs;

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x2AD3DFC", Offset = "0x2AD3DFC", VA = "0x2AD3DFC")]
		public KoreographyTrack()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public delegate void KoreographyEventCallback(KoreographyEvent koreoEvent);
	[Token(Token = "0x2000351")]
	public delegate void KoreographyEventCallbackWithTime(KoreographyEvent koreoEvent, int sampleTime, int sampleDelta, DeltaSlice deltaSlice);
	[Serializable]
	[Token(Token = "0x2000352")]
	public abstract class KoreographyTrackBase : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20005EF")]
		public struct TrackingCrumbs
		{
			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int lastCheckedEndSample;

			[Token(Token = "0x4002251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int checkHeadIndex;

			[Token(Token = "0x17000537")]
			public int LastCheckedEndSample
			{
				[Token(Token = "0x60023E8")]
				[Address(RVA = "0x3456010", Offset = "0x3456010", VA = "0x3456010")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000538")]
			public int CheckHeadIndex
			{
				[Token(Token = "0x60023E9")]
				[Address(RVA = "0x3456018", Offset = "0x3456018", VA = "0x3456018")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60023EA")]
			[Address(RVA = "0x3456020", Offset = "0x3456020", VA = "0x3456020")]
			public void Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA064", Offset = "0x16EA064")]
		private sealed class <>c
		{
			[Token(Token = "0x4002252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<KoreographyEvent> <>9__14_0;

			[Token(Token = "0x60023EC")]
			[Address(RVA = "0x3455FFC", Offset = "0x3455FFC", VA = "0x3455FFC")]
			public <>c()
			{
			}

			[Token(Token = "0x60023ED")]
			[Address(RVA = "0x3456004", Offset = "0x3456004", VA = "0x3456004")]
			internal bool <CheckEventListIntegrity>b__14_0(KoreographyEvent e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F72D4", Offset = "0x16F72D4")]
		private string mEventID;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7320", Offset = "0x16F7320")]
		private List<KoreographyEvent> mEventList;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<KoreographyEvent> eventsInRange;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TrackingCrumbs internalTrackingCrumbs;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private List<string> _SerializedPayloadTypes;

		[Token(Token = "0x17000383")]
		public string EventID
		{
			[Token(Token = "0x6001955")]
			[Address(RVA = "0x2AD4158", Offset = "0x2AD4158", VA = "0x2AD4158")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001956")]
			[Address(RVA = "0x2AD4160", Offset = "0x2AD4160", VA = "0x2AD4160")]
			set
			{
			}
		}

		[Token(Token = "0x1400000F")]
		private event KoreographyEventCallback koreographyEventCallbacks
		{
			[Token(Token = "0x6001951")]
			[Address(RVA = "0x2AD3EC8", Offset = "0x2AD3EC8", VA = "0x2AD3EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704CD8", Offset = "0x1704CD8")]
			add
			{
			}
			[Token(Token = "0x6001952")]
			[Address(RVA = "0x2AD3F6C", Offset = "0x2AD3F6C", VA = "0x2AD3F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704CE8", Offset = "0x1704CE8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000010")]
		private event KoreographyEventCallbackWithTime koreographyEventCallbacksWithTime
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0x2AD4010", Offset = "0x2AD4010", VA = "0x2AD4010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704CF8", Offset = "0x1704CF8")]
			add
			{
			}
			[Token(Token = "0x6001954")]
			[Address(RVA = "0x2AD40B4", Offset = "0x2AD40B4", VA = "0x2AD40B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704D08", Offset = "0x1704D08")]
			remove
			{
			}
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x2AD4168", Offset = "0x2AD4168", VA = "0x2AD4168")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x2AD4174", Offset = "0x2AD4174", VA = "0x2AD4174")]
		public bool CheckEventListIntegrity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x2AD4298", Offset = "0x2AD4298", VA = "0x2AD4298")]
		public int GetIDForEvent(KoreographyEvent e)
		{
			return default(int);
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x2AD4300", Offset = "0x2AD4300", VA = "0x2AD4300")]
		public void EnsureEventOrder()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x2AD4394", Offset = "0x2AD4394", VA = "0x2AD4394")]
		public KoreographyEvent GetEventAtStartSample(int sample)
		{
			return null;
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x2AD446C", Offset = "0x2AD446C", VA = "0x2AD446C")]
		public bool AddEvent(KoreographyEvent addEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x2AD44FC", Offset = "0x2AD44FC", VA = "0x2AD44FC")]
		public bool RemoveEvent(KoreographyEvent removeEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x2AD4564", Offset = "0x2AD4564", VA = "0x2AD4564")]
		public void RemoveAllEvents()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x2AD45BC", Offset = "0x2AD45BC", VA = "0x2AD45BC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1704D18", Offset = "0x1704D18")]
		public List<KoreographyEvent> GetEventsInRange(int startSample, int endSample)
		{
			return null;
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x2AD0320", Offset = "0x2AD0320", VA = "0x2AD0320")]
		public void GetEventsInRange(int startSample, int endSample, List<KoreographyEvent> listToFill)
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x2AD4640", Offset = "0x2AD4640", VA = "0x2AD4640")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1704D50", Offset = "0x1704D50")]
		public List<KoreographyEvent> GetEventsInRangeTracked(int startSample, int endSample)
		{
			return null;
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x2AD46C8", Offset = "0x2AD46C8", VA = "0x2AD46C8")]
		public void GetEventsInRangeTracked(int startSample, int endSample, ref TrackingCrumbs crumbs, List<KoreographyEvent> listToFill)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x2AD48CC", Offset = "0x2AD48CC", VA = "0x2AD48CC")]
		public List<KoreographyEvent> GetAllEvents()
		{
			return null;
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x2AD3444", Offset = "0x2AD3444", VA = "0x2AD3444")]
		public void CheckForEvents(int startTime, int endTime, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x2AD366C", Offset = "0x2AD366C", VA = "0x2AD366C")]
		internal void RegisterForEvents(KoreographyEventCallback callback)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x2AD3670", Offset = "0x2AD3670", VA = "0x2AD3670")]
		internal void RegisterForEventsWithTime(KoreographyEventCallbackWithTime callback)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x2AD3780", Offset = "0x2AD3780", VA = "0x2AD3780")]
		internal void UnregisterForEvents(KoreographyEventCallback callback)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x2AD3784", Offset = "0x2AD3784", VA = "0x2AD3784")]
		internal void UnregisterForEventsWithTime(KoreographyEventCallbackWithTime callback)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x2AD3838", Offset = "0x2AD3838", VA = "0x2AD3838")]
		internal void ClearEventRegister()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x2AD493C", Offset = "0x2AD493C", VA = "0x2AD493C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x2AD5978", Offset = "0x2AD5978", VA = "0x2AD5978", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x2AD53A4", Offset = "0x2AD53A4", VA = "0x2AD53A4")]
		private static FieldInfo GetFieldInfoOfListWithType(Type sourceType, Type lookupType, string fieldName)
		{
			return null;
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x2AD4FB8", Offset = "0x2AD4FB8", VA = "0x2AD4FB8")]
		private static FieldInfo GetFieldInfoOfListWithTypeString(Type sourceType, string typeStr, string fieldName)
		{
			return null;
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x2AD60E4", Offset = "0x2AD60E4", VA = "0x2AD60E4")]
		private static bool IsGenericList(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x2AD60C0", Offset = "0x2AD60C0", VA = "0x2AD60C0")]
		private static FieldInfo GetFieldInfoFromName(Type sourceType, string name)
		{
			return null;
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x2AD3E00", Offset = "0x2AD3E00", VA = "0x2AD3E00")]
		protected KoreographyTrackBase()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public static class AssetPayloadEventExtensions
	{
		[Token(Token = "0x6001971")]
		[Address(RVA = "0x2ACA5BC", Offset = "0x2ACA5BC", VA = "0x2ACA5BC")]
		public static bool HasAssetPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x2ACA648", Offset = "0x2ACA648", VA = "0x2ACA648")]
		public static UnityEngine.Object GetAssetValue(this KoreographyEvent koreoEvent)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000354")]
	public class AssetPayload : IPayload
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F73C4", Offset = "0x16F73C4")]
		private UnityEngine.Object mAssetVal;

		[Token(Token = "0x17000384")]
		public UnityEngine.Object AssetVal
		{
			[Token(Token = "0x6001973")]
			[Address(RVA = "0x2ACA278", Offset = "0x2ACA278", VA = "0x2ACA278")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001974")]
			[Address(RVA = "0x2ACA280", Offset = "0x2ACA280", VA = "0x2ACA280")]
			set
			{
			}
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x2ACA288", Offset = "0x2ACA288", VA = "0x2ACA288")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x2ACA2D0", Offset = "0x2ACA2D0", VA = "0x2ACA2D0", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x2ACA350", Offset = "0x2ACA350", VA = "0x2ACA350", Slot = "5")]
		public IPayload CopyDifferences(IPayload reference, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x2ACA348", Offset = "0x2ACA348", VA = "0x2ACA348")]
		public AssetPayload()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public static class ColorPayloadEventExtensions
	{
		[Token(Token = "0x6001979")]
		[Address(RVA = "0x2ACA878", Offset = "0x2ACA878", VA = "0x2ACA878")]
		public static bool HasColorPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x2ACA904", Offset = "0x2ACA904", VA = "0x2ACA904")]
		public static Color GetColorValue(this KoreographyEvent koreoEvent)
		{
			return default(Color);
		}
	}
	[Serializable]
	[Token(Token = "0x2000356")]
	public class ColorPayload : IPayload
	{
		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7410", Offset = "0x16F7410")]
		private Color mColorVal;

		[Token(Token = "0x17000385")]
		public Color ColorVal
		{
			[Token(Token = "0x600197B")]
			[Address(RVA = "0x2ACA6E4", Offset = "0x2ACA6E4", VA = "0x2ACA6E4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600197C")]
			[Address(RVA = "0x2ACA6F0", Offset = "0x2ACA6F0", VA = "0x2ACA6F0")]
			set
			{
			}
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x2ACA6FC", Offset = "0x2ACA6FC", VA = "0x2ACA6FC")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x2ACA744", Offset = "0x2ACA744", VA = "0x2ACA744", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x2ACA7E4", Offset = "0x2ACA7E4", VA = "0x2ACA7E4", Slot = "5")]
		public IPayload CopyDifferences(IPayload reference, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x2ACA7B0", Offset = "0x2ACA7B0", VA = "0x2ACA7B0")]
		public ColorPayload()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public static class CurvePayloadEventExtensions
	{
		[Token(Token = "0x6001981")]
		[Address(RVA = "0x2ACAD34", Offset = "0x2ACAD34", VA = "0x2ACAD34")]
		public static bool HasCurvePayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x2ACADC0", Offset = "0x2ACADC0", VA = "0x2ACADC0")]
		public static AnimationCurve GetCurveValue(this KoreographyEvent koreoEvent)
		{
			return null;
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x2ACAE5C", Offset = "0x2ACAE5C", VA = "0x2ACAE5C")]
		public static float GetValueOfCurveAtTime(this KoreographyEvent koreoEvent, int sampleTime)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000358")]
	public class CurvePayload : IPayload
	{
		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F745C", Offset = "0x16F745C")]
		private AnimationCurve mCurveData;

		[Token(Token = "0x17000386")]
		public AnimationCurve CurveData
		{
			[Token(Token = "0x6001984")]
			[Address(RVA = "0x2ACA9A0", Offset = "0x2ACA9A0", VA = "0x2ACA9A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001985")]
			[Address(RVA = "0x2ACA9A8", Offset = "0x2ACA9A8", VA = "0x2ACA9A8")]
			set
			{
			}
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x2ACA9B0", Offset = "0x2ACA9B0", VA = "0x2ACA9B0")]
		public CurvePayload()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x2ACAA70", Offset = "0x2ACAA70", VA = "0x2ACAA70")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x2ACA9E4", Offset = "0x2ACA9E4", VA = "0x2ACA9E4")]
		private AnimationCurve GetNewCurve()
		{
			return null;
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x2ACAAB8", Offset = "0x2ACAAB8", VA = "0x2ACAAB8")]
		public float GetValueAtDelta(float delta)
		{
			return default(float);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x2ACABEC", Offset = "0x2ACABEC", VA = "0x2ACABEC", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x2ACACA0", Offset = "0x2ACACA0", VA = "0x2ACACA0", Slot = "5")]
		public IPayload CopyDifferences(IPayload reference, IPayload delta)
		{
			return null;
		}
	}
	[Token(Token = "0x2000359")]
	public static class FloatPayloadEventExtensions
	{
		[Token(Token = "0x600198C")]
		[Address(RVA = "0x2ACDDA4", Offset = "0x2ACDDA4", VA = "0x2ACDDA4")]
		public static bool HasFloatPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x2ACDE30", Offset = "0x2ACDE30", VA = "0x2ACDE30")]
		public static float GetFloatValue(this KoreographyEvent koreoEvent)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x200035A")]
	public class FloatPayload : IPayload
	{
		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F74A8", Offset = "0x16F74A8")]
		private float mFloatVal;

		[Token(Token = "0x17000387")]
		public float FloatVal
		{
			[Token(Token = "0x600198E")]
			[Address(RVA = "0x2ACDC40", Offset = "0x2ACDC40", VA = "0x2ACDC40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x2ACDC48", Offset = "0x2ACDC48", VA = "0x2ACDC48")]
			set
			{
			}
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x2ACDC50", Offset = "0x2ACDC50", VA = "0x2ACDC50")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x2ACDC98", Offset = "0x2ACDC98", VA = "0x2ACDC98", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x2ACDD10", Offset = "0x2ACDD10", VA = "0x2ACDD10", Slot = "5")]
		public IPayload CopyDifferences(IPayload reference, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x2ACDD08", Offset = "0x2ACDD08", VA = "0x2ACDD08")]
		public FloatPayload()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public static class GradientPayloadEventExtensions
	{
		[Token(Token = "0x6001994")]
		[Address(RVA = "0x2ACB5A8", Offset = "0x2ACB5A8", VA = "0x2ACB5A8")]
		public static bool HasGradientPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x2ACE098", Offset = "0x2ACE098", VA = "0x2ACE098")]
		public static Gradient GetGradientData(this KoreographyEvent koreoEvent)
		{
			return null;
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x2ACB634", Offset = "0x2ACB634", VA = "0x2ACB634")]
		public static Color GetColorOfGradientAtTime(this KoreographyEvent koreoEvent, int sampleTime)
		{
			return default(Color);
		}
	}
	[Serializable]
	[Token(Token = "0x200035C")]
	public class GradientPayload : IPayload
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F74F4", Offset = "0x16F74F4")]
		private Gradient mGradientData;

		[Token(Token = "0x17000388")]
		public Gradient GradientData
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x2ACDEC4", Offset = "0x2ACDEC4", VA = "0x2ACDEC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001998")]
			[Address(RVA = "0x2ACDECC", Offset = "0x2ACDECC", VA = "0x2ACDECC")]
			set
			{
			}
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x2ACDED4", Offset = "0x2ACDED4", VA = "0x2ACDED4")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x2ACDF1C", Offset = "0x2ACDF1C", VA = "0x2ACDF1C", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x2ACE004", Offset = "0x2ACE004", VA = "0x2ACE004", Slot = "5")]
		public IPayload CopyDifferences(IPayload reference, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x2ACDF90", Offset = "0x2ACDF90", VA = "0x2ACDF90")]
		public GradientPayload()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public static class IntPayloadEventExtensions
	{
		[Token(Token = "0x600199D")]
		[Address(RVA = "0x2ACE298", Offset = "0x2ACE298", VA = "0x2ACE298")]
		public static bool HasIntPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x2ACE324", Offset = "0x2ACE324", VA = "0x2ACE324")]
		public static int GetIntValue(this KoreographyEvent koreoEvent)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x200035E")]
	public class IntPayload : IPayload
	{
		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7540", Offset = "0x16F7540")]
		private int mIntVal;

		[Token(Token = "0x17000389")]
		public int IntVal
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x2ACE134", Offset = "0x2ACE134", VA = "0x2ACE134")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x2ACE13C", Offset = "0x2ACE13C", VA = "0x2ACE13C")]
			set
			{
			}
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x2ACE144", Offset = "0x2ACE144", VA = "0x2ACE144")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x2ACE18C", Offset = "0x2ACE18C", VA = "0x2ACE18C", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x2ACE204", Offset = "0x2ACE204", VA = "0x2ACE204", Slot = "5")]
		public IPayload CopyDifferences(IPayload reference, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x2ACE1FC", Offset = "0x2ACE1FC", VA = "0x2ACE1FC")]
		public IntPayload()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public static class SpectrumPayloadEventExtensions
	{
		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x345DE40", Offset = "0x345DE40", VA = "0x345DE40")]
		public static bool HasSpectrumPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x345DECC", Offset = "0x345DECC", VA = "0x345DECC")]
		public static void GetSpectrumAtTime(this KoreographyEvent koreoEvent, int sampleTime, ref float[] spectrum, int maxBinCount = 0)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000360")]
	[NoEditorCreate]
	public class SpectrumPayload : IPayload
	{
		[Serializable]
		[Token(Token = "0x20005F1")]
		public struct SpectrumInfo
		{
			[Token(Token = "0x4002254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE300", Offset = "0x16FE300")]
			public float binFrequencyWidth;

			[Token(Token = "0x4002255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE338", Offset = "0x16FE338")]
			public float minBinFrequency;

			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE370", Offset = "0x16FE370")]
			public int startSample;

			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16FE3A8", Offset = "0x16FE3A8")]
			public int endSample;

			[Token(Token = "0x60023EE")]
			[Address(RVA = "0x345DE1C", Offset = "0x345DE1C", VA = "0x345DE1C")]
			public float GetFrequencyForBin(int binIndex)
			{
				return default(float);
			}
		}

		[Serializable]
		[Token(Token = "0x20005F2")]
		public class Spectrum
		{
			[Token(Token = "0x4002258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> data;

			[Token(Token = "0x60023EF")]
			[Address(RVA = "0x345DD08", Offset = "0x345DD08", VA = "0x345DD08")]
			public Spectrum()
			{
			}
		}

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F758C", Offset = "0x16F758C")]
		private SpectrumInfo mSpectrumInfo;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F75D8", Offset = "0x16F75D8")]
		private List<Spectrum> mSpectrumData;

		[Token(Token = "0x1700038A")]
		public List<Spectrum> SpectrumData
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x345D494", Offset = "0x345D494", VA = "0x345D494")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x345D49C", Offset = "0x345D49C", VA = "0x345D49C")]
			set
			{
			}
		}

		[Token(Token = "0x1700038B")]
		public SpectrumInfo SpectrumDataInfo
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x345D4A4", Offset = "0x345D4A4", VA = "0x345D4A4")]
			get
			{
				return default(SpectrumInfo);
			}
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x345D4B0", Offset = "0x345D4B0", VA = "0x345D4B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700038C")]
		public int SpectrumEntryCount
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x345D4B8", Offset = "0x345D4B8", VA = "0x345D4B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x345D558", Offset = "0x345D558", VA = "0x345D558")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x345D5A0", Offset = "0x345D5A0", VA = "0x345D5A0")]
		public void GetSpectrumAtDelta(ref float[] spectrum, float delta, int maxBinCount = 0)
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x345DA80", Offset = "0x345DA80", VA = "0x345DA80")]
		public void GetSpectrumAtSample(ref float[] spectrum, int sample, int maxBinCount = 0)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x345DB20", Offset = "0x345DB20", VA = "0x345DB20", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x345DD84", Offset = "0x345DD84", VA = "0x345DD84", Slot = "5")]
		public IPayload CopyDifferences(IPayload reference, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x345DC8C", Offset = "0x345DC8C", VA = "0x345DC8C")]
		public SpectrumPayload()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public static class TextPayloadEventExtensions
	{
		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x345E2D4", Offset = "0x345E2D4", VA = "0x345E2D4")]
		public static bool HasTextPayload(this KoreographyEvent koreoEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x345E360", Offset = "0x345E360", VA = "0x345E360")]
		public static string GetTextValue(this KoreographyEvent koreoEvent)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000362")]
	public class TextPayload : IPayload
	{
		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7624", Offset = "0x16F7624")]
		private string mTextVal;

		[Token(Token = "0x1700038D")]
		public string TextVal
		{
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x345E164", Offset = "0x345E164", VA = "0x345E164")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x345E16C", Offset = "0x345E16C", VA = "0x345E16C")]
			set
			{
			}
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x345E174", Offset = "0x345E174", VA = "0x345E174")]
		public static string GetFriendlyName()
		{
			return null;
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x345E1BC", Offset = "0x345E1BC", VA = "0x345E1BC", Slot = "4")]
		public IPayload GetCopy()
		{
			return null;
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x345E23C", Offset = "0x345E23C", VA = "0x345E23C", Slot = "5")]
		public IPayload CopyDifferences(IPayload reference, IPayload delta)
		{
			return null;
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x345E234", Offset = "0x345E234", VA = "0x345E234")]
		public TextPayload()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public interface IKoreographedPlayer
	{
		[Token(Token = "0x60019BA")]
		int GetSampleTimeForClip(string clipName);

		[Token(Token = "0x60019BB")]
		int GetTotalSampleTimeForClip(string clipName);

		[Token(Token = "0x60019BC")]
		bool GetIsPlaying(string clipName);

		[Token(Token = "0x60019BD")]
		float GetPitch(string clipName);

		[Token(Token = "0x60019BE")]
		string GetCurrentClipName();
	}
	[Token(Token = "0x2000364")]
	public struct DeltaSlice
	{
		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float deltaOffset;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float deltaLength;
	}
	[Token(Token = "0x2000365")]
	internal struct TimingRecord
	{
		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double timeLeft;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double playTime;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int startSample;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int endSample;
	}
	[Token(Token = "0x2000366")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8BD8", Offset = "0x16E8BD8")]
	public class Koreographer : MonoBehaviour
	{
		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Koreographer _instance;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKoreographedPlayer musicPlaybackController;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7670", Offset = "0x16F7670")]
		private List<Koreography> loadedKoreography;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F76BC", Offset = "0x16F76BC")]
		private float eventDelayInSeconds;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<KeyValuePair<Koreography, List<TimingRecord>>> delayQueue;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<KeyValuePair<string, EventObj>> eventBoard;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Koreography> koreographyToProcess;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<KoreographyTrackBase> trackProcessingHelper;

		[Token(Token = "0x1700038E")]
		public static Koreographer Instance
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x2ACE3BC", Offset = "0x2ACE3BC", VA = "0x2ACE3BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038F")]
		public float EventDelayInSeconds
		{
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x2ACE424", Offset = "0x2ACE424", VA = "0x2ACE424")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x2ACE42C", Offset = "0x2ACE42C", VA = "0x2ACE42C")]
			set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public Koreography[] LoadedKoreography
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x2ACE4AC", Offset = "0x2ACE4AC", VA = "0x2ACE4AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x2ACE504", Offset = "0x2ACE504", VA = "0x2ACE504")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x2ACE628", Offset = "0x2ACE628", VA = "0x2ACE628")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x2ACE7F8", Offset = "0x2ACE7F8", VA = "0x2ACE7F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x2ACEAEC", Offset = "0x2ACEAEC", VA = "0x2ACEAEC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1704EA8", Offset = "0x1704EA8")]
		public void ProcessChoreography(AudioClip clip, int startTime, int endTime, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x2ACEB54", Offset = "0x2ACEB54", VA = "0x2ACEB54")]
		public void ProcessKoreography(string clipName, int startTime, int endTime, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x2ACEEAC", Offset = "0x2ACEEAC", VA = "0x2ACEEAC")]
		private void AddRecordToDelayQueue(Koreography koreo, int startTime, int endTime, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x2ACE86C", Offset = "0x2ACE86C", VA = "0x2ACE86C")]
		private void ProcessDelayQueue(double timeToProcess)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x2ACF1C0", Offset = "0x2ACF1C0", VA = "0x2ACF1C0")]
		public bool FlushDelayQueue(Koreography targetKoreography)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x2ACF2CC", Offset = "0x2ACF2CC", VA = "0x2ACF2CC")]
		public void LoadKoreography(Koreography koreo)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x2ACF694", Offset = "0x2ACF694", VA = "0x2ACF694")]
		public void UnloadKoreography(Koreography koreo)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x2ACF158", Offset = "0x2ACF158", VA = "0x2ACF158")]
		public bool IsKoreographyLoaded(Koreography koreo)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x2ACF93C", Offset = "0x2ACF93C", VA = "0x2ACF93C")]
		public int GetNumLoadedKoreography()
		{
			return default(int);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x2ACF98C", Offset = "0x2ACF98C", VA = "0x2ACF98C")]
		public Koreography GetKoreographyAtIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x2ACFA14", Offset = "0x2ACFA14", VA = "0x2ACFA14")]
		public void GetAllLoadedKoreography(List<Koreography> listToFill)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x2ACFA7C", Offset = "0x2ACFA7C", VA = "0x2ACFA7C")]
		private int FindMappingWithEventID(string eventID)
		{
			return default(int);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x2ACC120", Offset = "0x2ACC120", VA = "0x2ACC120")]
		public void RegisterForEvents(string eventID, KoreographyEventCallback callback)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x2ACB098", Offset = "0x2ACB098", VA = "0x2ACB098")]
		public void RegisterForEventsWithTime(string eventID, KoreographyEventCallbackWithTime callback)
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x2ACFC34", Offset = "0x2ACFC34", VA = "0x2ACFC34")]
		public void UnregisterForEvents(string eventID, KoreographyEventCallback callback)
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x2ACFE80", Offset = "0x2ACFE80", VA = "0x2ACFE80")]
		public void UnregisterForEvents(string eventID, KoreographyEventCallbackWithTime callback)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x2ACB364", Offset = "0x2ACB364", VA = "0x2ACB364")]
		public void UnregisterForAllEvents(object obj)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x2ACE714", Offset = "0x2ACE714", VA = "0x2ACE714")]
		public void ClearEventRegister()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x2ACFB34", Offset = "0x2ACFB34", VA = "0x2ACFB34")]
		private void ConnectEventToLoadedKoreography(KeyValuePair<string, EventObj> mapping)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x2ACFD80", Offset = "0x2ACFD80", VA = "0x2ACFD80")]
		private void DisconnectEventFromLoadedKoreography(KeyValuePair<string, EventObj> mapping)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x2ACFFCC", Offset = "0x2ACFFCC", VA = "0x2ACFFCC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1704EE4", Offset = "0x1704EE4")]
		public List<KoreographyEvent> GetAllEventsInRange(string clipName, string eventID, int startPos, int endPos)
		{
			return null;
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x2AD0070", Offset = "0x2AD0070", VA = "0x2AD0070")]
		public void GetAllEventsInRange(string clipName, string eventID, int startPos, int endPos, List<KoreographyEvent> listToFill)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x2AD0408", Offset = "0x2AD0408", VA = "0x2AD0408")]
		public int GetMusicSampleRate([Optional] string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x2AD066C", Offset = "0x2AD066C", VA = "0x2AD066C")]
		public int GetMusicSampleLength([Optional] string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x2AD07E4", Offset = "0x2AD07E4", VA = "0x2AD07E4")]
		public int GetMusicSampleTime([Optional] string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x2AD0958", Offset = "0x2AD0958", VA = "0x2AD0958")]
		public int GetMusicSampleTimeDelta([Optional] string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x2AD0A18", Offset = "0x2AD0A18", VA = "0x2AD0A18")]
		public double GetMusicSecondsLength([Optional] string clipName)
		{
			return default(double);
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x2AD0ADC", Offset = "0x2AD0ADC", VA = "0x2AD0ADC")]
		public double GetMusicSecondsTime([Optional] string clipName)
		{
			return default(double);
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x2AD0C94", Offset = "0x2AD0C94", VA = "0x2AD0C94")]
		public double GetMusicSecondsTimeDelta([Optional] string clipName)
		{
			return default(double);
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x2AD0D54", Offset = "0x2AD0D54", VA = "0x2AD0D54")]
		public double GetMusicBPM([Optional] string clipName)
		{
			return default(double);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x2AD0F38", Offset = "0x2AD0F38", VA = "0x2AD0F38")]
		public double GetMusicBeatLength([Optional] string clipName, int subdivisions = 1)
		{
			return default(double);
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x2AD12B8", Offset = "0x2AD12B8", VA = "0x2AD12B8")]
		public double GetMusicBeatTime([Optional] string clipName, int subdivisions = 1)
		{
			return default(double);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x2AD1474", Offset = "0x2AD1474", VA = "0x2AD1474")]
		public double GetMusicBeatTimeDelta([Optional] string clipName, int subdivisions = 1)
		{
			return default(double);
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x2AD16D4", Offset = "0x2AD16D4", VA = "0x2AD16D4")]
		public double GetMusicBeatTimeNormalized([Optional] string clipName, int subdivisions = 1)
		{
			return default(double);
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x2AD04BC", Offset = "0x2AD04BC", VA = "0x2AD04BC")]
		protected Koreography GetMusicKoreographyWithAudioName(string clipName)
		{
			return null;
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x2AD16EC", Offset = "0x2AD16EC", VA = "0x2AD16EC")]
		protected Koreography GetLoadedKoreographyWithAudioName(string clipName)
		{
			return null;
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x2AD17A0", Offset = "0x2AD17A0", VA = "0x2AD17A0")]
		public static int GetSampleRate([Optional] string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x2AD1020", Offset = "0x2AD1020", VA = "0x2AD1020")]
		public static int GetTotalSampleTime([Optional] string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x2AD18AC", Offset = "0x2AD18AC", VA = "0x2AD18AC")]
		public static int GetSampleTime([Optional] string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x2ACC9E8", Offset = "0x2ACC9E8", VA = "0x2ACC9E8")]
		public static float GetBeatTime([Optional] string clipName, int subdivisions = 1)
		{
			return default(float);
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x2ACC4B8", Offset = "0x2ACC4B8", VA = "0x2ACC4B8")]
		public static float GetBeatTimeDelta([Optional] string clipName, int subdivisions = 1)
		{
			return default(float);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x2AD19B8", Offset = "0x2AD19B8", VA = "0x2AD19B8")]
		public static float GetBeatTimeNormalized([Optional] string clipName, int subdivisions = 1)
		{
			return default(float);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x2AD1ACC", Offset = "0x2AD1ACC", VA = "0x2AD1ACC")]
		public Koreographer()
		{
		}
	}
	[Token(Token = "0x2000367")]
	internal class EventObj
	{
		[Token(Token = "0x14000011")]
		private event KoreographyEventCallback basicEvent
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x2ACCF4C", Offset = "0x2ACCF4C", VA = "0x2ACCF4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704F1C", Offset = "0x1704F1C")]
			add
			{
			}
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x2ACCFF0", Offset = "0x2ACCFF0", VA = "0x2ACCFF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704F2C", Offset = "0x1704F2C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		private event KoreographyEventCallbackWithTime timedEvent
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x2ACD094", Offset = "0x2ACD094", VA = "0x2ACD094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704F3C", Offset = "0x1704F3C")]
			add
			{
			}
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x2ACD138", Offset = "0x2ACD138", VA = "0x2ACD138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704F4C", Offset = "0x1704F4C")]
			remove
			{
			}
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x2ACD1DC", Offset = "0x2ACD1DC", VA = "0x2ACD1DC")]
		public void Register(KoreographyEventCallback callback)
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x2ACD1E0", Offset = "0x2ACD1E0", VA = "0x2ACD1E0")]
		public void Register(KoreographyEventCallbackWithTime callback)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x2ACD1E4", Offset = "0x2ACD1E4", VA = "0x2ACD1E4")]
		public void Unregister(KoreographyEventCallback callback)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x2ACD1E8", Offset = "0x2ACD1E8", VA = "0x2ACD1E8")]
		public void Unregister(KoreographyEventCallbackWithTime callback)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x2ACD1EC", Offset = "0x2ACD1EC", VA = "0x2ACD1EC")]
		public void UnregisterByObject(object obj)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x2ACD34C", Offset = "0x2ACD34C", VA = "0x2ACD34C")]
		public void ClearRegistrations()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x2ACD380", Offset = "0x2ACD380", VA = "0x2ACD380")]
		public bool IsClear()
		{
			return default(bool);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x2ACD3A0", Offset = "0x2ACD3A0", VA = "0x2ACD3A0")]
		public void Trigger(KoreographyEvent evt, int sampleTime, int sampleDelta, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x2ACDC38", Offset = "0x2ACDC38", VA = "0x2ACDC38")]
		public EventObj()
		{
		}
	}
	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E8C10", Offset = "0x16E8C10")]
	public class EventIDAttribute : PropertyAttribute
	{
		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x2ACCF44", Offset = "0x2ACCF44", VA = "0x2ACCF44")]
		public EventIDAttribute()
		{
		}
	}
	[Token(Token = "0x2000369")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E8C48", Offset = "0x16E8C48")]
	public class NoEditorCreateAttribute : Attribute
	{
		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x345602C", Offset = "0x345602C", VA = "0x345602C")]
		public NoEditorCreateAttribute()
		{
		}
	}
}
namespace SonicBloom.Koreo.Demos
{
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8C80", Offset = "0x16E8C80")]
	public class ColorAdjuster : MonoBehaviour
	{
		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventID]
		public string eventID;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] objectsToColor;

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x2ACAF84", Offset = "0x2ACAF84", VA = "0x2ACAF84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x2ACB204", Offset = "0x2ACB204", VA = "0x2ACB204")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x2ACB460", Offset = "0x2ACB460", VA = "0x2ACB460")]
		private void AdjustColor(KoreographyEvent evt, int sampleTime, int sampleDelta, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x2ACB51C", Offset = "0x2ACB51C", VA = "0x2ACB51C")]
		private void ApplyColorToObjects(ref Color color)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x2ACB720", Offset = "0x2ACB720", VA = "0x2ACB720")]
		public ColorAdjuster()
		{
		}
	}
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8CB8", Offset = "0x16E8CB8")]
	public class CubeScaler : MonoBehaviour
	{
		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventID]
		public string eventID;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minScale;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxScale;

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x2ACB728", Offset = "0x2ACB728", VA = "0x2ACB728")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x2ACB828", Offset = "0x2ACB828", VA = "0x2ACB828")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x2ACB988", Offset = "0x2ACB988", VA = "0x2ACB988")]
		private void AdjustScale(KoreographyEvent evt, int sampleTime, int sampleDelta, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x2ACBAD0", Offset = "0x2ACBAD0", VA = "0x2ACBAD0")]
		public CubeScaler()
		{
		}
	}
	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8CF0", Offset = "0x16E8CF0")]
	public class DemoControlsUI : MonoBehaviour
	{
		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource audioCom;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float pitch;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIStyle rightAlignStyle;

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x2ACBAE4", Offset = "0x2ACBAE4", VA = "0x2ACBAE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x2ACBB18", Offset = "0x2ACBB18", VA = "0x2ACBB18")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x2ACBFD8", Offset = "0x2ACBFD8", VA = "0x2ACBFD8")]
		public DemoControlsUI()
		{
		}
	}
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8D28", Offset = "0x16E8D28")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8D28", Offset = "0x16E8D28")]
	public class EmitParticlesOnSpan : MonoBehaviour
	{
		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventID]
		public string eventID;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float particlesPerBeat;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem particleCom;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lastEmitFrame;

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x2ACBFE8", Offset = "0x2ACBFE8", VA = "0x2ACBFE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x2ACC28C", Offset = "0x2ACC28C", VA = "0x2ACC28C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x2ACC3EC", Offset = "0x2ACC3EC", VA = "0x2ACC3EC")]
		private void OnParticleControlEvent(KoreographyEvent evt)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x2ACC5C4", Offset = "0x2ACC5C4", VA = "0x2ACC5C4")]
		public EmitParticlesOnSpan()
		{
		}
	}
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8DB0", Offset = "0x16E8DB0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8DB0", Offset = "0x16E8DB0")]
	public class MusicalImpulse : MonoBehaviour
	{
		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventID]
		public string eventID;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float jumpSpeed;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody rigidbodyCom;

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x2ACC5DC", Offset = "0x2ACC5DC", VA = "0x2ACC5DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x2ACC700", Offset = "0x2ACC700", VA = "0x2ACC700")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x2ACC860", Offset = "0x2ACC860", VA = "0x2ACC860")]
		private void AddImpulse(KoreographyEvent evt)
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x2ACC8A0", Offset = "0x2ACC8A0", VA = "0x2ACC8A0")]
		public MusicalImpulse()
		{
		}
	}
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8E38", Offset = "0x16E8E38")]
	public class TempoSwitch : MonoBehaviour
	{
		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Behaviour[] quarterNoteGroup;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Behaviour[] eighthNoteGroup;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int lastQuarterNote;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int lastEighthNote;

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x2ACC8B0", Offset = "0x2ACC8B0", VA = "0x2ACC8B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x2ACCAF8", Offset = "0x2ACCAF8", VA = "0x2ACCAF8")]
		private void SwitchGroup(Behaviour[] behaviours, bool bGroupOn)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x2ACCB74", Offset = "0x2ACCB74", VA = "0x2ACCB74")]
		public TempoSwitch()
		{
		}
	}
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8E70", Offset = "0x16E8E70")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8E70", Offset = "0x16E8E70")]
	public class UIMessageSetter : MonoBehaviour
	{
		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventID]
		public string eventID;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text guiTextCom;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private KoreographyEvent curTextEvent;

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x2ACCB84", Offset = "0x2ACCB84", VA = "0x2ACCB84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x2ACCCA8", Offset = "0x2ACCCA8", VA = "0x2ACCCA8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x2ACCE08", Offset = "0x2ACCE08", VA = "0x2ACCE08")]
		private void UpdateText(KoreographyEvent evt, int sampleTime, int sampleDelta, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x2ACCF3C", Offset = "0x2ACCF3C", VA = "0x2ACCF3C")]
		public UIMessageSetter()
		{
		}
	}
}
namespace SonicBloom.Koreo.Players
{
	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8EF8", Offset = "0x16E8EF8")]
	public class AudioBus : MonoBehaviour
	{
		[Token(Token = "0x20005F3")]
		public delegate void AudioEndedHandler(AudioGroup group, int sampleTime, DeltaSlice deltaSlice);

		[Token(Token = "0x20005F4")]
		private class AudioToBusAnchor
		{
			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioGroup audioGroup;

			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int audioSampleLength;

			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public readonly int audioSampleStartTime;

			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public uint busSampleStartTime;

			[Token(Token = "0x60023F4")]
			[Address(RVA = "0x34583B0", Offset = "0x34583B0", VA = "0x34583B0")]
			public AudioToBusAnchor()
			{
			}

			[Token(Token = "0x60023F5")]
			[Address(RVA = "0x3457340", Offset = "0x3457340", VA = "0x3457340")]
			public AudioToBusAnchor(AudioGroup _group, int _audioSampleStartTime, int _audioSampleLength)
			{
			}

			[Token(Token = "0x60023F6")]
			[Address(RVA = "0x345671C", Offset = "0x345671C", VA = "0x345671C")]
			public void ClearAnchor()
			{
			}

			[Token(Token = "0x60023F7")]
			[Address(RVA = "0x3456660", Offset = "0x3456660", VA = "0x3456660")]
			public bool IsValid()
			{
				return default(bool);
			}

			[Token(Token = "0x60023F8")]
			[Address(RVA = "0x3456670", Offset = "0x3456670", VA = "0x3456670")]
			public bool IsPlayingAtBusTime(uint busSampleTime)
			{
				return default(bool);
			}

			[Token(Token = "0x60023F9")]
			[Address(RVA = "0x3456698", Offset = "0x3456698", VA = "0x3456698")]
			public int SampleTimeAtBusTime(uint busSampleTime)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource sourceCom;

		[Token(Token = "0x400163D")]
		private const int BUS_SAMPLE_LENGTH = 44100;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioClip busClip;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int busChannels;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int busFrequency;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float busLengthInSeconds;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int prevSourcePlayTime;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private uint busPlaySampleTime;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private uint busReadSampleTime;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float timePlayStarted;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool bColdStart;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool bPaused;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly AudioToBusAnchor invalidSong;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioToBusAnchor prevSong;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioToBusAnchor curSong;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioToBusAnchor nextSong;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private object anchorLock;

		[Token(Token = "0x17000391")]
		public float Pitch
		{
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0x345617C", Offset = "0x345617C", VA = "0x345617C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0x3456214", Offset = "0x3456214", VA = "0x3456214")]
			set
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event AudioEndedHandler AudioEnded
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0x3456034", Offset = "0x3456034", VA = "0x3456034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704F5C", Offset = "0x1704F5C")]
			add
			{
			}
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x34560D8", Offset = "0x34560D8", VA = "0x34560D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704F6C", Offset = "0x1704F6C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x34562EC", Offset = "0x34562EC", VA = "0x34562EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x345637C", Offset = "0x345637C", VA = "0x345637C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x3456738", Offset = "0x3456738", VA = "0x3456738")]
		public void Init(AudioSource com, int numChannels, int frequency)
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x34569F8", Offset = "0x34569F8", VA = "0x34569F8")]
		private void ReadBusAudioCallback(float[] data)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x34570FC", Offset = "0x34570FC", VA = "0x34570FC")]
		private void SetBusPositionCallback(int position)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x345718C", Offset = "0x345718C", VA = "0x345718C")]
		private void ScheduleNextSong(AudioGroup group, int startSampleOffset, int sampleLength, uint busStartTime)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x3457390", Offset = "0x3457390", VA = "0x3457390")]
		public bool PlayAudio(AudioGroup group, int startSampleOffset = 0, int sampleLength = 0, bool bReplaceIfExists = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x34574A8", Offset = "0x34574A8", VA = "0x34574A8")]
		public bool PlayAudioScheduled(AudioGroup group, int curSongSampleTransLoc = 0, int startSampleOffset = 0, int sampleLength = 0, bool bReplaceIfExists = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x34568E8", Offset = "0x34568E8", VA = "0x34568E8")]
		private void Play()
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x3457680", Offset = "0x3457680", VA = "0x3457680")]
		public void Continue()
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x34577E0", Offset = "0x34577E0", VA = "0x34577E0")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x345789C", Offset = "0x345789C", VA = "0x345789C")]
		public void Stop(bool bDoCallback = false)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x3457A28", Offset = "0x3457A28", VA = "0x3457A28")]
		private int GetSampleTimeOfAnchor(AudioToBusAnchor anchor)
		{
			return default(int);
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x3457AD4", Offset = "0x3457AD4", VA = "0x3457AD4")]
		public int GetSampleTimeCurrentAudio()
		{
			return default(int);
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x3457B8C", Offset = "0x3457B8C", VA = "0x3457B8C")]
		public int GetSampleTimeOfAudio(AudioGroup group)
		{
			return default(int);
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x3457C90", Offset = "0x3457C90", VA = "0x3457C90")]
		public bool IsAudioPlaying(AudioGroup group)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x3457D8C", Offset = "0x3457D8C", VA = "0x3457D8C")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x3457D94", Offset = "0x3457D94", VA = "0x3457D94")]
		public bool IsNextSongScheduled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x3456728", Offset = "0x3456728", VA = "0x3456728")]
		private void OnAudioEnded(AudioGroup songGroup, int sampleTime, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x3458214", Offset = "0x3458214", VA = "0x3458214")]
		public AudioBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000372")]
	public class AudioGroup
	{
		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7798", Offset = "0x16F7798")]
		private List<AudioLayer> audioLayers;

		[Token(Token = "0x17000392")]
		public int TotalSampleTime
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x34572D0", Offset = "0x34572D0", VA = "0x34572D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000393")]
		public int Channels
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0x34584C8", Offset = "0x34584C8", VA = "0x34584C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000394")]
		public int Frequency
		{
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0x3458538", Offset = "0x3458538", VA = "0x3458538")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000395")]
		public int NumLayers
		{
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0x34585A8", Offset = "0x34585A8", VA = "0x34585A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x34585FC", Offset = "0x34585FC", VA = "0x34585FC")]
		public void InitLayerData()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x3458940", Offset = "0x3458940", VA = "0x3458940")]
		public void ClearLayerData()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x34589E8", Offset = "0x34589E8", VA = "0x34589E8")]
		public void RegisterKoreography()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x3458B14", Offset = "0x3458B14", VA = "0x3458B14")]
		public void UnregisterKoreography()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x3458C40", Offset = "0x3458C40", VA = "0x3458C40")]
		public bool IsKoreographyRegistered()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x3458D7C", Offset = "0x3458D7C", VA = "0x3458D7C")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x3458E30", Offset = "0x3458E30", VA = "0x3458E30")]
		public bool IsEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x3458E88", Offset = "0x3458E88", VA = "0x3458E88")]
		public bool ContainsClip(string clipName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x3458F4C", Offset = "0x3458F4C", VA = "0x3458F4C")]
		public AudioClip GetBaseClip()
		{
			return null;
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x3458FBC", Offset = "0x3458FBC", VA = "0x3458FBC")]
		public string GetBaseClipName()
		{
			return null;
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x3459038", Offset = "0x3459038", VA = "0x3459038")]
		public AudioClip GetClipAtLayer(int layerIdx)
		{
			return null;
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x3456F28", Offset = "0x3456F28", VA = "0x3456F28")]
		public void GetAudioData(int sampleTime, float[] data, int dataOffset, int amountToRead)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x3459210", Offset = "0x3459210", VA = "0x3459210")]
		public AudioGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000373")]
	public class AudioLayer
	{
		[Token(Token = "0x400164E")]
		private const int MAX_ARRAY_LENGTH = 4000000;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F77E4", Offset = "0x16F77E4")]
		private Koreography koreo;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[][] audioDatas;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7830", Offset = "0x16F7830")]
		private AudioClip clip;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string clipName;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int totalSampleTime;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int channelCount;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int frequency;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F787C", Offset = "0x16F787C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x16F787C", Offset = "0x16F787C")]
		public float volume;

		[Token(Token = "0x17000396")]
		public AudioClip Clip
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0x345928C", Offset = "0x345928C", VA = "0x345928C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		public string ClipName
		{
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0x3459294", Offset = "0x3459294", VA = "0x3459294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000398")]
		public Koreography Koreo
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0x345929C", Offset = "0x345929C", VA = "0x345929C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		public int TotalSampleTime
		{
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0x34592A4", Offset = "0x34592A4", VA = "0x34592A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700039A")]
		public int Channels
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0x34592AC", Offset = "0x34592AC", VA = "0x34592AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700039B")]
		public int Frequency
		{
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x34592B4", Offset = "0x34592B4", VA = "0x34592B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700039C")]
		public float Volume
		{
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x34592BC", Offset = "0x34592BC", VA = "0x34592BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0x34592C4", Offset = "0x34592C4", VA = "0x34592C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		public int TotalDataLength
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0x3459204", Offset = "0x3459204", VA = "0x3459204")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x3458690", Offset = "0x3458690", VA = "0x3458690")]
		public void InitData()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x34589DC", Offset = "0x34589DC", VA = "0x34589DC")]
		public void ClearData()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x3458E20", Offset = "0x3458E20", VA = "0x3458E20")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x34590C4", Offset = "0x34590C4", VA = "0x34590C4")]
		public void ReadLayerAudioData(int sampleTimePos, float[] data, int dataOffset, int amount, bool bAdditive = false)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x3459340", Offset = "0x3459340", VA = "0x3459340")]
		public AudioLayer()
		{
		}
	}
	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8F30", Offset = "0x16E8F30")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8F30", Offset = "0x16E8F30")]
	public class SampleSyncMusicPlayer : MonoBehaviour, IKoreographedPlayer
	{
		[Token(Token = "0x20005F5")]
		public delegate void MusicEndedHandler(AudioGroup group);

		[Token(Token = "0x20005F6")]
		private struct TransitionInfo
		{
			[Token(Token = "0x400225D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool bValid;

			[Token(Token = "0x400225E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioGroup group;

			[Token(Token = "0x400225F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int curMusicTransLoc;

			[Token(Token = "0x4002260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int startSampleOffset;

			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int lengthInSamples;

			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool bReplaceIfExists;
		}

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F78E0", Offset = "0x16F78E0")]
		private AudioGroup playbackMusic;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F792C", Offset = "0x16F792C")]
		private int musicChannels;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7978", Offset = "0x16F7978")]
		private int musicFrequency;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioBus bus;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F79C4", Offset = "0x16F79C4")]
		private Koreographer targetKoreographer;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AudioGroup curMusic;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioGroup transMusic;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int lastBusTime;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int curMusicTime;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int transMusicTime;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TransitionInfo transInfo;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AudioSource audioCom;

		[Token(Token = "0x1700039E")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0x345BA5C", Offset = "0x345BA5C", VA = "0x345BA5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000014")]
		public event MusicEndedHandler MusicEnded
		{
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x345B914", Offset = "0x345B914", VA = "0x345B914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704F7C", Offset = "0x1704F7C")]
			add
			{
			}
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0x345B9B8", Offset = "0x345B9B8", VA = "0x345B9B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704F8C", Offset = "0x1704F8C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x345BA94", Offset = "0x345BA94", VA = "0x345BA94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x345BC10", Offset = "0x345BC10", VA = "0x345BC10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x345BDBC", Offset = "0x345BDBC", VA = "0x345BDBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x345BFE0", Offset = "0x345BFE0", VA = "0x345BFE0")]
		private void PerformChoreographyForTimeSlice(AudioGroup group, int startTime, int endTime, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x345BC74", Offset = "0x345BC74", VA = "0x345BC74")]
		public void PlayMusic(AudioGroup group, int startSampleOffset = 0, int lengthInSamples = 0, bool bReplaceIfExists = false)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x345C0C8", Offset = "0x345C0C8", VA = "0x345C0C8")]
		public void ScheduleNextMusic(AudioGroup group, int curMusicTransLoc = 0, int startSampleOffset = 0, int lengthInSamples = 0, bool bReplaceIfExists = false)
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x345C298", Offset = "0x345C298", VA = "0x345C298")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x345C2B0", Offset = "0x345C2B0", VA = "0x345C2B0")]
		public void Continue()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x345C2C8", Offset = "0x345C2C8", VA = "0x345C2C8")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x345C2E4", Offset = "0x345C2E4", VA = "0x345C2E4")]
		private void OnAudioEnded(AudioGroup group, int sampleTime, DeltaSlice deltaSlice)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x345C7E8", Offset = "0x345C7E8", VA = "0x345C7E8", Slot = "4")]
		public int GetSampleTimeForClip(string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x345C8A8", Offset = "0x345C8A8", VA = "0x345C8A8", Slot = "5")]
		public int GetTotalSampleTimeForClip(string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x345C914", Offset = "0x345C914", VA = "0x345C914", Slot = "6")]
		public bool GetIsPlaying(string clipName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x345BF4C", Offset = "0x345BF4C", VA = "0x345BF4C", Slot = "7")]
		public float GetPitch(string clipName)
		{
			return default(float);
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x345C98C", Offset = "0x345C98C", VA = "0x345C98C", Slot = "8")]
		public string GetCurrentClipName()
		{
			return null;
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x345C9FC", Offset = "0x345C9FC", VA = "0x345C9FC")]
		public SampleSyncMusicPlayer()
		{
		}
	}
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8FB8", Offset = "0x16E8FB8")]
	public class MultiMusicPlayer : MonoBehaviour, IKoreographedPlayer
	{
		[Serializable]
		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA074", Offset = "0x16EA074")]
		private sealed class <>c
		{
			[Token(Token = "0x4002263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<MusicLayer> <>9__20_0;

			[Token(Token = "0x60023FF")]
			[Address(RVA = "0x345B608", Offset = "0x345B608", VA = "0x345B608")]
			public <>c()
			{
			}

			[Token(Token = "0x6002400")]
			[Address(RVA = "0x345B610", Offset = "0x345B610", VA = "0x345B610")]
			internal bool <InitializeLayers>b__20_0(MusicLayer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA084", Offset = "0x16EA084")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string layerName;

			[Token(Token = "0x6002401")]
			[Address(RVA = "0x345B270", Offset = "0x345B270", VA = "0x345B270")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6002402")]
			[Address(RVA = "0x345B694", Offset = "0x345B694", VA = "0x345B694")]
			internal bool <SetVolumeForLayer>b__0(MusicLayer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7A10", Offset = "0x16F7A10")]
		private double syncPlayDelay;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7A5C", Offset = "0x16F7A5C")]
		private float pitch;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7AA8", Offset = "0x16F7AA8")]
		private bool loop;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7AF4", Offset = "0x16F7AF4")]
		private bool autoPlayOnAwake;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7B40", Offset = "0x16F7B40")]
		private List<MusicLayer> musicLayers;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7B8C", Offset = "0x16F7B8C")]
		private Koreographer targetKoreographer;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool bWaitingToPlay;

		[Token(Token = "0x1700039F")]
		public float Pitch
		{
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x3459BF8", Offset = "0x3459BF8", VA = "0x3459BF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x3459C00", Offset = "0x3459C00", VA = "0x3459C00")]
			set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public bool Loop
		{
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x3459CB4", Offset = "0x3459CB4", VA = "0x3459CB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x3459CBC", Offset = "0x3459CBC", VA = "0x3459CBC")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public float Volume
		{
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x3459D6C", Offset = "0x3459D6C", VA = "0x3459D6C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x3459E1C", Offset = "0x3459E1C", VA = "0x3459E1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x3459E9C", Offset = "0x3459E9C", VA = "0x3459E9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x345A740", Offset = "0x345A740", VA = "0x345A740")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x345A980", Offset = "0x345A980", VA = "0x345A980")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x3459FE4", Offset = "0x3459FE4", VA = "0x3459FE4")]
		private void InitializeLayers()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x345A614", Offset = "0x345A614", VA = "0x345A614")]
		private void LoadKoreographyAndStart(int startSampleTime = 0, bool autoPlay = true)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x345A8B4", Offset = "0x345A8B4", VA = "0x345A8B4")]
		private void PlayInternal()
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x345A800", Offset = "0x345A800", VA = "0x345A800")]
		private bool IsReadyForPlayback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x345AD3C", Offset = "0x345AD3C", VA = "0x345AD3C")]
		private int GetIndexOfLayerWithClipName(string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x345AE48", Offset = "0x345AE48", VA = "0x345AE48")]
		public void LoadSong(List<MusicLayer> layers, int startSampleTime = 0, bool autoPlay = true)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x345AD00", Offset = "0x345AD00", VA = "0x345AD00")]
		public void Play()
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x345AF90", Offset = "0x345AF90", VA = "0x345AF90")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x345B030", Offset = "0x345B030", VA = "0x345B030")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x345AC04", Offset = "0x345AC04", VA = "0x345AC04")]
		public void SeekToSample(int targetSample)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x345B0D0", Offset = "0x345B0D0", VA = "0x345B0D0")]
		public void SetVolumeForLayer(int layerNum, float volume)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x345B184", Offset = "0x345B184", VA = "0x345B184")]
		public void SetVolumeForLayer(string layerName, float volume)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x345B278", Offset = "0x345B278", VA = "0x345B278", Slot = "4")]
		public int GetSampleTimeForClip(string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x345B324", Offset = "0x345B324", VA = "0x345B324", Slot = "5")]
		public int GetTotalSampleTimeForClip(string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x345B3D4", Offset = "0x345B3D4", VA = "0x345B3D4", Slot = "6")]
		public bool GetIsPlaying(string clipName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x345B4A4", Offset = "0x345B4A4", VA = "0x345B4A4", Slot = "7")]
		public float GetPitch(string clipName)
		{
			return default(float);
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x345B4AC", Offset = "0x345B4AC", VA = "0x345B4AC", Slot = "8")]
		public string GetCurrentClipName()
		{
			return null;
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x345B514", Offset = "0x345B514", VA = "0x345B514")]
		public MultiMusicPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000376")]
	public class MusicLayer
	{
		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7BD8", Offset = "0x16F7BD8")]
		private string name;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7C24", Offset = "0x16F7C24")]
		private Koreography koreography;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7C70", Offset = "0x16F7C70")]
		private AudioClip audioClip;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7CBC", Offset = "0x16F7CBC")]
		private AudioSource audioSource;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioVisor audioVisor;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string clipName;

		[Token(Token = "0x170003A3")]
		public Koreography KoreoData
		{
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0x345B6B8", Offset = "0x345B6B8", VA = "0x345B6B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A4")]
		public AudioClip Clip
		{
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0x345AAAC", Offset = "0x345AAAC", VA = "0x345AAAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		public string ClipName
		{
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0x345ADEC", Offset = "0x345ADEC", VA = "0x345ADEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		public AudioSource AudioSourceCom
		{
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x345B6C0", Offset = "0x345B6C0", VA = "0x345B6C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		public AudioVisor Visor
		{
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0x345B6C8", Offset = "0x345B6C8", VA = "0x345B6C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public string Name
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x345B6D0", Offset = "0x345B6D0", VA = "0x345B6D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x345B6D8", Offset = "0x345B6D8", VA = "0x345B6D8")]
		private MusicLayer()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x345B740", Offset = "0x345B740", VA = "0x345B740")]
		public MusicLayer(Koreography koreo, AudioSource source, string layerName = "")
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x345B834", Offset = "0x345B834", VA = "0x345B834")]
		public MusicLayer(AudioClip clip, AudioSource source, string layerName = "")
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x345AB40", Offset = "0x345AB40", VA = "0x345AB40")]
		public void Init([Optional] AudioSource source, [Optional] Koreographer targetKoreographer)
		{
		}
	}
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x16E8FF0", Offset = "0x16E8FF0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E8FF0", Offset = "0x16E8FF0")]
	public class SimpleMusicPlayer : MonoBehaviour, IKoreographedPlayer
	{
		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7D08", Offset = "0x16F7D08")]
		private bool autoPlayOnAwake;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7D54", Offset = "0x16F7D54")]
		private Koreography koreography;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7DA0", Offset = "0x16F7DA0")]
		private Koreographer targetKoreographer;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioVisor visor;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioCom;

		[Token(Token = "0x170003A9")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0x345CA5C", Offset = "0x345CA5C", VA = "0x345CA5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x345CA78", Offset = "0x345CA78", VA = "0x345CA78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x345CD60", Offset = "0x345CD60", VA = "0x345CD60")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x345CC40", Offset = "0x345CC40", VA = "0x345CC40")]
		public void LoadSong(Koreography koreo, int startSampleTime = 0, bool autoPlay = true)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x345CDD0", Offset = "0x345CDD0", VA = "0x345CDD0")]
		public void Play()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x345CE1C", Offset = "0x345CE1C", VA = "0x345CE1C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x345CE38", Offset = "0x345CE38", VA = "0x345CE38")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x345CD80", Offset = "0x345CD80", VA = "0x345CD80")]
		public void SeekToSample(int targetSample)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x345CE54", Offset = "0x345CE54", VA = "0x345CE54", Slot = "4")]
		public int GetSampleTimeForClip(string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x345CF18", Offset = "0x345CF18", VA = "0x345CF18", Slot = "5")]
		public int GetTotalSampleTimeForClip(string clipName)
		{
			return default(int);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x345CFEC", Offset = "0x345CFEC", VA = "0x345CFEC", Slot = "6")]
		public bool GetIsPlaying(string clipName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x345D0B4", Offset = "0x345D0B4", VA = "0x345D0B4", Slot = "7")]
		public float GetPitch(string clipName)
		{
			return default(float);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x345D0D0", Offset = "0x345D0D0", VA = "0x345D0D0", Slot = "8")]
		public string GetCurrentClipName()
		{
			return null;
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x345D178", Offset = "0x345D178", VA = "0x345D178")]
		public AudioSource GetAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x345D180", Offset = "0x345D180", VA = "0x345D180")]
		public SimpleMusicPlayer()
		{
		}
	}
	[Token(Token = "0x2000378")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x16E9078", Offset = "0x16E9078")]
	public class AudioSourceVisor : MonoBehaviour
	{
		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7DEC", Offset = "0x16F7DEC")]
		private AudioSource targetAudioSource;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7E38", Offset = "0x16F7E38")]
		private Koreographer targetKoreographer;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioVisor visor;

		[Token(Token = "0x170003AA")]
		public double ScheduledPlayTime
		{
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0x34593B0", Offset = "0x34593B0", VA = "0x34593B0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x34593CC", Offset = "0x34593CC", VA = "0x34593CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x34593E8", Offset = "0x34593E8", VA = "0x34593E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x3459744", Offset = "0x3459744", VA = "0x3459744")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x3459764", Offset = "0x3459764", VA = "0x3459764")]
		public void ResyncTimings(int targetSampleTime)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x345981C", Offset = "0x345981C", VA = "0x345981C")]
		public AudioSourceVisor()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public struct AudioClipID
	{
		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int instanceID;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;
	}
	[Token(Token = "0x200037A")]
	public class AudioVisor : VisorBase
	{
		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected AudioSource audioCom;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected AudioClipID clipID;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected double dspPlayStartTime;

		[Token(Token = "0x170003AB")]
		public double ScheduledPlayTime
		{
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0x3459824", Offset = "0x3459824", VA = "0x3459824")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0x345982C", Offset = "0x345982C", VA = "0x345982C")]
			set
			{
			}
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x3459834", Offset = "0x3459834", VA = "0x3459834")]
		private AudioVisor()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x3459584", Offset = "0x3459584", VA = "0x3459584")]
		public AudioVisor(AudioSource sourceCom, [Optional] Koreographer targetKoreographer)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x3459854", Offset = "0x3459854", VA = "0x3459854")]
		public void ResyncTimings()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x345977C", Offset = "0x345977C", VA = "0x345977C")]
		public void ResyncTimings(int targetSampleTime)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x3459884", Offset = "0x3459884", VA = "0x3459884")]
		public int GetCurrentTimeInSamples()
		{
			return default(int);
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x34598F4", Offset = "0x34598F4", VA = "0x34598F4", Slot = "4")]
		protected override string GetAudioName()
		{
			return null;
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x345997C", Offset = "0x345997C", VA = "0x345997C", Slot = "5")]
		protected override bool GetIsAudioPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x34599F0", Offset = "0x34599F0", VA = "0x34599F0", Slot = "6")]
		protected override bool GetIsAudioLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x3459A0C", Offset = "0x3459A0C", VA = "0x3459A0C", Slot = "7")]
		protected override bool GetDidAudioLoop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x3459A98", Offset = "0x3459A98", VA = "0x3459A98", Slot = "8")]
		protected override int GetAudioSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x3459AB4", Offset = "0x3459AB4", VA = "0x3459AB4", Slot = "9")]
		protected override int GetAudioStartSampleExtent()
		{
			return default(int);
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x3459ABC", Offset = "0x3459ABC", VA = "0x3459ABC", Slot = "10")]
		protected override int GetAudioEndSampleExtent()
		{
			return default(int);
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x3459AF0", Offset = "0x3459AF0", VA = "0x3459AF0", Slot = "11")]
		protected override int GetDeltaTimeInSamples()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200037B")]
	public abstract class VisorBase
	{
		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Koreographer koreographerCom;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int sampleTime;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int sourceSampleTime;

		[Token(Token = "0x6001AAF")]
		protected abstract string GetAudioName();

		[Token(Token = "0x6001AB0")]
		protected abstract bool GetIsAudioPlaying();

		[Token(Token = "0x6001AB1")]
		protected abstract bool GetIsAudioLooping();

		[Token(Token = "0x6001AB2")]
		protected abstract bool GetDidAudioLoop();

		[Token(Token = "0x6001AB3")]
		protected abstract int GetAudioSampleTime();

		[Token(Token = "0x6001AB4")]
		protected abstract int GetAudioStartSampleExtent();

		[Token(Token = "0x6001AB5")]
		protected abstract int GetAudioEndSampleExtent();

		[Token(Token = "0x6001AB6")]
		protected abstract int GetDeltaTimeInSamples();

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x345D190", Offset = "0x345D190", VA = "0x345D190", Slot = "12")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x345D450", Offset = "0x345D450", VA = "0x345D450")]
		protected int GetTotalPlaybackSamples()
		{
			return default(int);
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x3459B80", Offset = "0x3459B80", VA = "0x3459B80")]
		protected float GetRawFrameTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x3459844", Offset = "0x3459844", VA = "0x3459844")]
		protected VisorBase()
		{
		}
	}
}
namespace DebuggingEssentials
{
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x16E90B0", Offset = "0x16E90B0")]
	public class HtmlDebug : MonoBehaviour
	{
		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HtmlDebug instance;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Stopwatch timeSinceStartup;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float frameTime;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int currentFrame;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int mainThreadId;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7E84", Offset = "0x16F7E84")]
		public bool deleteBuildLogs;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int deleteBuildLogsAfterDays;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7EBC", Offset = "0x16F7EBC")]
		public bool openLogManually;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7EF4", Offset = "0x16F7EF4")]
		public bool normalLogOnlyFirstLineStackTrace;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int titleFontSize;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int frameFontSize;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int logFontSize;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int stackFontSize;

		[NonSerialized]
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string logPathIncludingFilename;

		[NonSerialized]
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string logPath;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FastList<Log> logsThread;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private FastList<Log> logs;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int lastFrame;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isLogEnabled;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool isEditor;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		private bool isDebugBuild;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private StackTraceLogType logStackTraceLogType;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private StackTraceLogType assertStackTraceLogType;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private StackTraceLogType warningStackTraceLogType;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private StackTraceLogType errorStackTraceLogType;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private StackTraceLogType exceptionStackTraceLogType;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string frameFontSizeString;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string stackFontSizeString;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string logFontSizeString;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private WaitCallback logCallBack;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private StreamWriter sw;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isLogging;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool updateLogCallFromMainThread;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		private bool isQuitting;

		[Token(Token = "0x40016A3")]
		private const int skipFrames = 5;

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x29A125C", Offset = "0x29A125C", VA = "0x29A125C")]
		public static void ResetStatic()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x29A12F0", Offset = "0x29A12F0", VA = "0x29A12F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x29A151C", Offset = "0x29A151C", VA = "0x29A151C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x29A16A8", Offset = "0x29A16A8", VA = "0x29A16A8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x29A161C", Offset = "0x29A161C", VA = "0x29A161C")]
		private void CloseLog(string closeReason)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x29A1BC0", Offset = "0x29A1BC0", VA = "0x29A1BC0")]
		public static int GetThreadId()
		{
			return default(int);
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x29A1C50", Offset = "0x29A1C50", VA = "0x29A1C50")]
		private void DeleteBuildLogsAfterXDays(string logPath)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x29A14A4", Offset = "0x29A14A4", VA = "0x29A14A4")]
		public static void OpenLog(string logPathIncludingFileName)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x29A1E18", Offset = "0x29A1E18", VA = "0x29A1E18")]
		private void OpenLogInternal(string logPathIncludingFileName)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x29A1ADC", Offset = "0x29A1ADC", VA = "0x29A1ADC")]
		private void CloseLog()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x29A24A4", Offset = "0x29A24A4", VA = "0x29A24A4")]
		private bool UseStackTrace(LogType logType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x29A2508", Offset = "0x29A2508", VA = "0x29A2508")]
		public void UpdateLogs()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x29A18D4", Offset = "0x29A18D4", VA = "0x29A18D4")]
		private void WriteLogs(object callback)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x29A1700", Offset = "0x29A1700", VA = "0x29A1700")]
		private void UnityDebugLogThread(string logString, string stackTraceString, LogType logType)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x29A2548", Offset = "0x29A2548", VA = "0x29A2548")]
		public void UnityDebugLog(string logString, string stackTraceString, LogType logType, bool isMainThread, int threadId = -1, [Optional] StackTrace stackTrace, EntryType2 entryType = EntryType2.Unity, bool closeLi = true)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x29A32A0", Offset = "0x29A32A0", VA = "0x29A32A0")]
		public HtmlDebug()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public struct Log
	{
		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string logString;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string stackTraceString;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LogType logType;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isMainThread;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int threadId;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StackTrace stackTrace;
	}
	[Token(Token = "0x200037E")]
	public class Benchmark
	{
		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FastCacheList<Benchmark> benchmarks;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stopwatch stopwatch;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float minMiliSeconds;

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x299AE00", Offset = "0x299AE00", VA = "0x299AE00")]
		public static Benchmark Start(string text, float minMiliSeconds = -1f)
		{
			return null;
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x299AEDC", Offset = "0x299AEDC", VA = "0x299AEDC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x299B170", Offset = "0x299B170", VA = "0x299B170")]
		public Benchmark()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class FastListBase
	{
		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int maxElements;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string maxListName;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static FastListBase maxList;

		[Token(Token = "0x40016B1")]
		protected const int defaultCapacity = 4;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int _count;

		[Token(Token = "0x6001AD0")]
		public static void SetCapacity<T>(FastListBase list, ref T[] items, int capacity, int count)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x299E970", Offset = "0x299E970", VA = "0x299E970")]
		public FastListBase()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class FastListBase<T> : FastListBase
	{
		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] items;

		[Token(Token = "0x6001AD2")]
		protected virtual void DoubleCapacity()
		{
		}

		[Token(Token = "0x6001AD3")]
		public FastListBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000381")]
	public class FastList<T> : FastListBase<T>
	{
		[Token(Token = "0x6001AD4")]
		public FastList()
		{
		}

		[Token(Token = "0x6001AD5")]
		public FastList(bool reserve, int reserved)
		{
		}

		[Token(Token = "0x6001AD6")]
		public FastList(int capacity)
		{
		}

		[Token(Token = "0x6001AD7")]
		public FastList(FastList<T> list)
		{
		}

		[Token(Token = "0x6001AD8")]
		public FastList(T[] items, bool copy = false)
		{
		}

		[Token(Token = "0x6001AD9")]
		protected void SetCapacity(int capacity)
		{
		}

		[Token(Token = "0x6001ADA")]
		public void SetCount(int count)
		{
		}

		[Token(Token = "0x6001ADB")]
		public void EnsureCount(int count)
		{
		}

		[Token(Token = "0x6001ADC")]
		public virtual void SetArray(T[] items)
		{
		}

		[Token(Token = "0x6001ADD")]
		public int AddUnique(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6001ADE")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADF")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6001AE0")]
		public T GetIndex(T item)
		{
			return (T)null;
		}

		[Token(Token = "0x6001AE1")]
		public virtual int Add(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6001AE2")]
		public virtual int AddThreadSafe(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6001AE3")]
		public virtual void Add(T item, T item2)
		{
		}

		[Token(Token = "0x6001AE4")]
		public virtual void Add(T item, T item2, T item3)
		{
		}

		[Token(Token = "0x6001AE5")]
		public virtual void Add(T item, T item2, T item3, T item4)
		{
		}

		[Token(Token = "0x6001AE6")]
		public virtual void Add(T item, T item2, T item3, T item4, T item5)
		{
		}

		[Token(Token = "0x6001AE7")]
		public virtual void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001AE8")]
		public virtual void AddRange(T[] arrayItems)
		{
		}

		[Token(Token = "0x6001AE9")]
		public virtual void AddRange(T[] arrayItems, int startIndex, int length)
		{
		}

		[Token(Token = "0x6001AEA")]
		public virtual void AddRange(FastList<T> list)
		{
		}

		[Token(Token = "0x6001AEB")]
		public virtual void AddRange(List<T> list)
		{
		}

		[Token(Token = "0x6001AEC")]
		public virtual int GrabListThreadSafe(FastList<T> threadList, bool fastClear = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001AED")]
		public virtual void ChangeRange(int startIndex, T[] arrayItems)
		{
		}

		[Token(Token = "0x6001AEE")]
		public virtual bool Remove(T item, bool weakReference = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEF")]
		public virtual void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001AF0")]
		public virtual void RemoveLast()
		{
		}

		[Token(Token = "0x6001AF1")]
		public virtual void RemoveRange(int index, int length)
		{
		}

		[Token(Token = "0x6001AF2")]
		public virtual T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x6001AF3")]
		public virtual T Dequeue(int index)
		{
			return (T)null;
		}

		[Token(Token = "0x6001AF4")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6001AF5")]
		public virtual void ClearThreadSafe()
		{
		}

		[Token(Token = "0x6001AF6")]
		public virtual void ClearRange(int startIndex)
		{
		}

		[Token(Token = "0x6001AF7")]
		public virtual void FastClear()
		{
		}

		[Token(Token = "0x6001AF8")]
		public virtual void FastClear(int newCount)
		{
		}

		[Token(Token = "0x6001AF9")]
		public virtual T[] ToArray()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000382")]
	public class SortedFastList<T> : FastList<T>
	{
		[Token(Token = "0x6001AFA")]
		public SortedFastList()
		{
		}

		[Token(Token = "0x6001AFB")]
		public SortedFastList(int capacity)
		{
		}

		[Token(Token = "0x6001AFC")]
		public new void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001AFD")]
		public new void RemoveRange(int index, int endIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000383")]
	public class FastCacheList<T> : FastList<T> where T : new()
	{
		[Token(Token = "0x6001AFE")]
		public FastCacheList(int capacity)
		{
		}

		[Token(Token = "0x6001AFF")]
		public T GetItem()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000384")]
	public class FastQueue<T> : FastListBase
	{
		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int head;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int tail;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] items;

		[Token(Token = "0x6001B00")]
		public FastQueue(int capacity)
		{
		}

		[Token(Token = "0x6001B01")]
		protected void DoubleCapacity()
		{
		}

		[Token(Token = "0x6001B02")]
		public int ArrayLength()
		{
			return default(int);
		}

		[Token(Token = "0x6001B03")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6001B04")]
		public virtual void FastClear()
		{
		}

		[Token(Token = "0x6001B05")]
		public virtual void Enqueue(T item)
		{
		}

		[Token(Token = "0x6001B06")]
		public void EnqueueRange(T[] items, int startIndex = 0, int count = -1)
		{
		}

		[Token(Token = "0x6001B07")]
		public T Peek(int index)
		{
			return (T)null;
		}

		[Token(Token = "0x6001B08")]
		public virtual T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x6001B09")]
		public virtual void Dequeue(T item)
		{
		}

		[Token(Token = "0x6001B0A")]
		public void Report()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class FastIntQueue : FastQueue<int>
	{
		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x299E678", Offset = "0x299E678", VA = "0x299E678")]
		public FastIntQueue(int capacity)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x299E6D8", Offset = "0x299E6D8", VA = "0x299E6D8")]
		public void EnqueueRange(int startIndex, int endIndex)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x299E72C", Offset = "0x299E72C", VA = "0x299E72C")]
		public void ClearAndEnqueueRange(int startIndex, int endIndex)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x299E790", Offset = "0x299E790", VA = "0x299E790", Slot = "8")]
		public override void Dequeue(int item)
		{
		}
	}
	[Token(Token = "0x2000386")]
	public enum CompareMode
	{
		[Token(Token = "0x40016B9")]
		Key,
		[Token(Token = "0x40016BA")]
		Value
	}
	[Token(Token = "0x2000387")]
	public struct ItemHolder<T, U> : IComparable<ItemHolder<T, U>> where T : IComparable<T> where U : IComparable<U>
	{
		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CompareMode compareMode;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T key;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public U value;

		[Token(Token = "0x6001B0F")]
		public ItemHolder(T key, U value)
		{
		}

		[Token(Token = "0x6001B10")]
		public int CompareTo(ItemHolder<T, U> other)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000388")]
	public class FastSortedDictionary<T, U> where T : IComparable<T> where U : IComparable<U>
	{
		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T, U> lookup;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<ItemHolder<T, U>> list;

		[Token(Token = "0x6001B11")]
		public FastSortedDictionary(int capacity)
		{
		}

		[Token(Token = "0x6001B12")]
		public void Add(T key, U value)
		{
		}

		[Token(Token = "0x6001B13")]
		public void Sort(CompareMode compareMode)
		{
		}

		[Token(Token = "0x6001B14")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class FastSortedHashSet<T> where T : IComparable<T>
	{
		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HashSet<T> lookup;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> list;

		[Token(Token = "0x6001B15")]
		public FastSortedHashSet(int capacity)
		{
		}

		[Token(Token = "0x6001B16")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001B17")]
		public void Sort()
		{
		}

		[Token(Token = "0x6001B18")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class FastSortedHashSet<T, U> where U : IComparable<U>
	{
		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HashSet<T> lookup;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<U> list;

		[Token(Token = "0x6001B19")]
		public FastSortedHashSet(int capacity)
		{
		}

		[Token(Token = "0x6001B1A")]
		public void Add(T lookupItem, U listItem)
		{
		}

		[Token(Token = "0x6001B1B")]
		public void Sort()
		{
		}

		[Token(Token = "0x6001B1C")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class DrawEnum
	{
		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool draw;

		[Token(Token = "0x40016C5")]
		private const float heightPadding = 4f;

		[Token(Token = "0x40016C6")]
		private const float addHeight = 2f;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float boxAlpha;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float backgroundAlpha;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Enum enumField;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject go;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object obj;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MemberInfo member;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GUISkin skin;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rect rect;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string[] names;

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x299D7A4", Offset = "0x299D7A4", VA = "0x299D7A4")]
		public static void ResetStatic()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x299D7F4", Offset = "0x299D7F4", VA = "0x299D7F4")]
		public DrawEnum(GUISkin skin)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x299D828", Offset = "0x299D828", VA = "0x299D828")]
		public void DrawButton(object obj, string fieldName)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x299D9D0", Offset = "0x299D9D0", VA = "0x299D9D0")]
		public void InitEnumWindow(object obj, MemberInfo member, Enum enumField, Vector2 pos)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x299DC4C", Offset = "0x299DC4C", VA = "0x299DC4C")]
		public void InitEnumWindow(GameObject go, Vector2 pos)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x299DEA0", Offset = "0x299DEA0", VA = "0x299DEA0")]
		public void Draw(float boxAlpha, float backgroundAlpha)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x299E08C", Offset = "0x299E08C", VA = "0x299E08C")]
		private void DrawWindow(int windowId)
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class EditField
	{
		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MemberInfo parentMember;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MemberInfo member;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int arrayIndex;

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x299E57C", Offset = "0x299E57C", VA = "0x299E57C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x299E5BC", Offset = "0x299E5BC", VA = "0x299E5BC")]
		public bool IsThisEdit(MemberInfo parentMember, MemberInfo member, int arrayIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x299E620", Offset = "0x299E620", VA = "0x299E620")]
		public void Set(MemberInfo parentMember, MemberInfo member, int arrayIndex = -1)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x299E668", Offset = "0x299E668", VA = "0x299E668")]
		public EditField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038D")]
	public class GUIChangeBool
	{
		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FastList<GUIChangeBool> applyList;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool value;

		[NonSerialized]
		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool newValue;

		[NonSerialized]
		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool hasChanged;

		[Token(Token = "0x170003AC")]
		public bool Value
		{
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0x299EBA0", Offset = "0x299EBA0", VA = "0x299EBA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0x299EBA8", Offset = "0x299EBA8", VA = "0x299EBA8")]
			set
			{
			}
		}

		[Token(Token = "0x170003AD")]
		public bool RealValue
		{
			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0x299EC74", Offset = "0x299EC74", VA = "0x299EC74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x299EB1C", Offset = "0x299EB1C", VA = "0x299EB1C")]
		public GUIChangeBool()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x299CEB0", Offset = "0x299CEB0", VA = "0x299CEB0")]
		public GUIChangeBool(bool value)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x299EB24", Offset = "0x299EB24", VA = "0x299EB24")]
		public static void ResetStatic()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x299EC8C", Offset = "0x299EC8C", VA = "0x299EC8C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x299EC9C", Offset = "0x299EC9C", VA = "0x299EC9C")]
		public static void ApplyUpdates()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038E")]
	public class BaseInputField
	{
		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string text;

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x299ADF4", Offset = "0x299ADF4", VA = "0x299ADF4", Slot = "4")]
		public virtual void TryParse(bool logError = true)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x299ADF8", Offset = "0x299ADF8", VA = "0x299ADF8")]
		public BaseInputField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038F")]
	public class IntInputField : BaseInputField
	{
		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int value;

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x29A33FC", Offset = "0x29A33FC", VA = "0x29A33FC")]
		public IntInputField(int value)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x29A3450", Offset = "0x29A3450", VA = "0x29A3450", Slot = "4")]
		public override void TryParse(bool logError = true)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000390")]
	public class FloatInputField : BaseInputField
	{
		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x299E978", Offset = "0x299E978", VA = "0x299E978")]
		public FloatInputField(float value)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x299E9D4", Offset = "0x299E9D4", VA = "0x299E9D4", Slot = "4")]
		public override void TryParse(bool logError = true)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x299EAA8", Offset = "0x299EAA8", VA = "0x299EAA8")]
		public void SetValueText(float value)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x299EAE8", Offset = "0x299EAE8", VA = "0x299EAE8")]
		public void UpdateText()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public struct ScrollViewCullData
	{
		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float scrollWindowPosY;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float culledSpaceY;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float windowHeight;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rectStartScrollY;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float updatedScrollViewY;

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x232BAB0", Offset = "0x232BAB0", VA = "0x232BAB0")]
		public void Start(WindowSettings window)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x232BB04", Offset = "0x232BB04", VA = "0x232BB04")]
		public void End()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class ScrollViewCullDrawOnce
	{
		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool active;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool recalc;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FastList<float> elements1;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FastList<float> elements2;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 scrollView;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool eventLayout;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool eventRepaint;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool hasCalc;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		private bool calcHeights;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int startElementCull;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float spaceEnd;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float scrollViewStartHeight;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float scrollViewEndHeight;

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x232BB1C", Offset = "0x232BB1C", VA = "0x232BB1C")]
		public void ResetAndRecalc()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x232BB2C", Offset = "0x232BB2C", VA = "0x232BB2C")]
		public void BeginScrollView(float heightOffset = 0f)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x232BE00", Offset = "0x232BE00", VA = "0x232BE00")]
		public void EndScrollView()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x232BF20", Offset = "0x232BF20", VA = "0x232BF20")]
		public bool StartCull()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x232BFF4", Offset = "0x232BFF4", VA = "0x232BFF4")]
		public void EndCull()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x232C0C4", Offset = "0x232C0C4", VA = "0x232C0C4")]
		public ScrollViewCullDrawOnce()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public enum DrawResult
	{
		[Token(Token = "0x40016ED")]
		DontDraw,
		[Token(Token = "0x40016EE")]
		Draw,
		[Token(Token = "0x40016EF")]
		DrawHeader,
		[Token(Token = "0x40016F0")]
		DrawHeaderAndRemoveLastHeader
	}
	[Token(Token = "0x2000394")]
	public class CullGroup
	{
		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FastList<CullList> cullLists;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CullList cullList;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double startHeight;

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x299C644", Offset = "0x299C644", VA = "0x299C644")]
		public static void ResetStatic()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x299C6C0", Offset = "0x299C6C0", VA = "0x299C6C0")]
		public CullGroup(int capacity)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x299C800", Offset = "0x299C800", VA = "0x299C800")]
		public void CalcDraw(bool reset, FastList<CullList> _cullLists)
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class CullList
	{
		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SortedFastList<CullItem> cullItems;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int startIndex;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int endIndex;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int currentCalcCullItem;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUIChangeBool show;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float tStamp;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public DrawResult lastDrawResult;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int lastAddedIndex;

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x299C740", Offset = "0x299C740", VA = "0x299C740")]
		public CullList(int capacity)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x299CB74", Offset = "0x299CB74", VA = "0x299CB74")]
		public bool Draw(CullList currentCullItems, ref double startHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x299CEE4", Offset = "0x299CEE4", VA = "0x299CEE4")]
		public void Cull(Double2 heights)
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class CullItem : IComparable<double>
	{
		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isHeader;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int id;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double startHeight;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double endHeight;

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x299CE08", Offset = "0x299CE08", VA = "0x299CE08")]
		public CullItem(int id)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x299CE34", Offset = "0x299CE34", VA = "0x299CE34")]
		public void Draw(ref double startHeight)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x299CE84", Offset = "0x299CE84", VA = "0x299CE84", Slot = "4")]
		public int CompareTo(double compareValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x299CEA0", Offset = "0x299CEA0", VA = "0x299CEA0", Slot = "5")]
		public virtual DrawResult DoDraw()
		{
			return default(DrawResult);
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x299CEA8", Offset = "0x299CEA8", VA = "0x299CEA8", Slot = "6")]
		public virtual float CalcHeight()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000397")]
	public struct Double2
	{
		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x299D79C", Offset = "0x299D79C", VA = "0x299D79C")]
		public Double2(double x, double y)
		{
		}
	}
	[Token(Token = "0x2000398")]
	public static class GraphicsHelper
	{
		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x299EE28", Offset = "0x299EE28", VA = "0x299EE28")]
		public static void Dispose(ref RenderTexture rt)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x299EF34", Offset = "0x299EF34", VA = "0x299EF34")]
		public static void Dispose(ref RenderTexture[] rts)
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x299EFA8", Offset = "0x299EFA8", VA = "0x299EFA8")]
		public static void Dispose(ref Texture2D tex)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x299F0A0", Offset = "0x299F0A0", VA = "0x299F0A0")]
		public static void Dispose(ref Texture3D tex)
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x299F198", Offset = "0x299F198", VA = "0x299F198")]
		public static void Dispose(ref Texture2D[] textures)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x299F20C", Offset = "0x299F20C", VA = "0x299F20C")]
		public static void DisposeLightmaps()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x299F218", Offset = "0x299F218", VA = "0x299F218")]
		public static void Dispose(ref ComputeBuffer computeBuffer)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x299F25C", Offset = "0x299F25C", VA = "0x299F25C")]
		public static void Dispose(ref Mesh mesh)
		{
		}
	}
	[Token(Token = "0x2000399")]
	public static class Helper
	{
		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Color colCommandResultFailed;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Color colCommandResult;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector2 lastMousePos;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GUIContent guiContent;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static MethodInfo findObjectFromInstanceIdMethod;

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x299F354", Offset = "0x299F354", VA = "0x299F354")]
		public static string GetConsoleLogPath()
		{
			return null;
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x299F684", Offset = "0x299F684", VA = "0x299F684")]
		public static string GetApplicationInfo()
		{
			return null;
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x299C568", Offset = "0x299C568", VA = "0x299C568")]
		public static GUIContent GetGUIContent(string text, [Optional] Texture image, string tooltip = "")
		{
			return null;
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x299F904", Offset = "0x299F904", VA = "0x299F904")]
		public static GUIContent GetGUIContent([Optional] Texture image, string tooltip = "")
		{
			return null;
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x299F9E4", Offset = "0x299F9E4", VA = "0x299F9E4")]
		public static GUIContent GetGUIContent(string text, string tooltip)
		{
			return null;
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x299FAB4", Offset = "0x299FAB4", VA = "0x299FAB4")]
		public static GUIContent GetGUIContent(Texture image)
		{
			return null;
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x299FB8C", Offset = "0x299FB8C", VA = "0x299FB8C")]
		public static float FastFrac(float v)
		{
			return default(float);
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x299FBB8", Offset = "0x299FBB8", VA = "0x299FBB8")]
		public static int Repeat(int v, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x299FBD8", Offset = "0x299FBD8", VA = "0x299FBD8")]
		public static string ToTimeFormat(float time)
		{
			return null;
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x299FF4C", Offset = "0x299FF4C", VA = "0x299FF4C")]
		public static int CalcStringLines(string text)
		{
			return default(int);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x299FFC4", Offset = "0x299FFC4", VA = "0x299FFC4")]
		public static Color AnimateColor(Color col, float speed = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x29A00B0", Offset = "0x29A00B0", VA = "0x29A00B0")]
		public static void DrawWindow(int windowId, WindowSettings window, GUI.WindowFunction func)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x29A024C", Offset = "0x29A024C", VA = "0x29A024C")]
		public static bool Drag(WindowSettings window, WindowSettings inspectorWindow, WindowSettings hierarchyWindow, bool titleDrag, bool onlyRightCorner = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x29A07F4", Offset = "0x29A07F4", VA = "0x29A07F4")]
		public static bool DrawShowButton(SO_BaseWindow windowData, GUIContent content, GUIChangeBool show, Color color, float width = -1f, bool onlyActivate = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x29A0B68", Offset = "0x29A0B68", VA = "0x29A0B68")]
		public static bool DrawButton(GUIContent guiContent, GUIStyle style, params GUILayoutOption[] options)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x29A0B4C", Offset = "0x29A0B4C", VA = "0x29A0B4C")]
		public static Color GetColor(SO_BaseWindow windowData, Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x29A0DCC", Offset = "0x29A0DCC", VA = "0x29A0DCC")]
		public static bool IsCulled(ref ScrollViewCullData cull, float height = 25f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B67")]
		public static int BinarySearch<T, U>(T[] array, int length, U value) where T : IComparable<U>
		{
			return default(int);
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x29A0E48", Offset = "0x29A0E48", VA = "0x29A0E48")]
		public static bool GetSpecialKeys()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x29A0EBC", Offset = "0x29A0EBC", VA = "0x29A0EBC")]
		public static bool GetSpecialKeys(Event currentEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x29A0F14", Offset = "0x29A0F14", VA = "0x29A0F14")]
		public static bool IsPrefab(UnityEngine.Object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x29A0F1C", Offset = "0x29A0F1C", VA = "0x29A0F1C")]
		public static UnityEngine.Object FindObjectFromInstanceID(int id)
		{
			return null;
		}
	}
	[Token(Token = "0x200039A")]
	public static class Parser
	{
		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x1BF1D6C", Offset = "0x1BF1D6C", VA = "0x1BF1D6C")]
		public static bool TryParse(Type t, FastQueue<string> paramQueue, out object result)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x1BF2200", Offset = "0x1BF2200", VA = "0x1BF2200")]
		private static bool ChangeType(Type t, FastQueue<string> paramQueue, out object result)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x1BF24F0", Offset = "0x1BF24F0", VA = "0x1BF24F0")]
		public static bool ChangeType(Type t, string value, out object result, bool logError = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200039B")]
	public enum EntryType2
	{
		[Token(Token = "0x4001708")]
		Unity,
		[Token(Token = "0x4001709")]
		Command,
		[Token(Token = "0x400170A")]
		CommandResult,
		[Token(Token = "0x400170B")]
		CommandFault
	}
	[Token(Token = "0x200039C")]
	public enum EntryType
	{
		[Token(Token = "0x400170D")]
		Console,
		[Token(Token = "0x400170E")]
		Unity,
		[Token(Token = "0x400170F")]
		Frame,
		[Token(Token = "0x4001710")]
		Command,
		[Token(Token = "0x4001711")]
		CommandResult
	}
	[Token(Token = "0x200039D")]
	public enum Flag
	{
		[Token(Token = "0x4001713")]
		Log = 1,
		[Token(Token = "0x4001714")]
		Warning = 2,
		[Token(Token = "0x4001715")]
		Error = 4,
		[Token(Token = "0x4001716")]
		Exception = 8,
		[Token(Token = "0x4001717")]
		Command = 0x10
	}
	[Token(Token = "0x200039E")]
	public class LogEntry : CullItem
	{
		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string search;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool ignoreCasesInSearch;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool showCommandLogs;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public static bool showUnityLogs;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public static bool showWarningLogs;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static bool showErrorLogs;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public static bool showExceptionLogs;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public static bool showStack;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int currentId;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static LogEntry lastLog;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string logString;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string threadString;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] stackLines;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int stackLineCount;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LogType logType;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public EntryType entryType;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public byte flag;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color color;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int fontSize;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FontStyle fontStyle;

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x29A354C", Offset = "0x29A354C", VA = "0x29A354C")]
		public static void ResetStatic()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x29A3620", Offset = "0x29A3620", VA = "0x29A3620")]
		public LogEntry(string logString, [Optional] string[] stackLines, LogType logType = LogType.Log, EntryType entryType = EntryType.Unity, [Optional] Color color, int fontSize = 12, FontStyle fontStyle = FontStyle.Normal, int threadId = -1)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x29A38B8", Offset = "0x29A38B8", VA = "0x29A38B8")]
		public LogEntry(string logString, Color color, int fontSize, FontStyle fontStyle, int threadId = -1)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x29A37B0", Offset = "0x29A37B0", VA = "0x29A37B0")]
		private void CheckThread(int threadId)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x29A39E0", Offset = "0x29A39E0", VA = "0x29A39E0", Slot = "5")]
		public override DrawResult DoDraw()
		{
			return default(DrawResult);
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x29A3D08", Offset = "0x29A3D08", VA = "0x29A3D08", Slot = "6")]
		public override float CalcHeight()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200039F")]
	public delegate void SetActiveMethod(bool active);
	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x16E90C8", Offset = "0x16E90C8")]
	[AttributeAttribute(Name = "ConsoleAlias", RVA = "0x16E90C8", Offset = "0x16E90C8")]
	public class RuntimeConsole : MonoBehaviour
	{
		[Token(Token = "0x20005F9")]
		public delegate void RemoteCommand(string command);

		[Token(Token = "0x20005FA")]
		public class StringDictionarySorted
		{
			[Token(Token = "0x4002266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, CommandData> lookup;

			[Token(Token = "0x4002267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] names;

			[Token(Token = "0x6002407")]
			[Address(RVA = "0x1BF4F48", Offset = "0x1BF4F48", VA = "0x1BF4F48")]
			public void Sort()
			{
			}

			[Token(Token = "0x6002408")]
			[Address(RVA = "0x1C006E8", Offset = "0x1C006E8", VA = "0x1C006E8")]
			public void Clear()
			{
			}

			[Token(Token = "0x6002409")]
			[Address(RVA = "0x1BFDF70", Offset = "0x1BFDF70", VA = "0x1BFDF70")]
			public StringDictionarySorted()
			{
			}
		}

		[Token(Token = "0x20005FB")]
		public enum MemberType
		{
			[Token(Token = "0x4002269")]
			Method,
			[Token(Token = "0x400226A")]
			Property,
			[Token(Token = "0x400226B")]
			Field,
			[Token(Token = "0x400226C")]
			Delegate
		}

		[Token(Token = "0x20005FC")]
		public struct CommandData
		{
			[Token(Token = "0x400226D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static CommandData empty;

			[Token(Token = "0x400226E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ConsoleCommand consoleCommand;

			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public object obj;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isStatic;

			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string syntax;

			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MemberType memberType;

			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MemberInfo member;

			[Token(Token = "0x4002274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ParameterInfo[] paramInfos;

			[Token(Token = "0x4002275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object[] args;

			[Token(Token = "0x600240A")]
			[Address(RVA = "0x1BF5EF0", Offset = "0x1BF5EF0", VA = "0x1BF5EF0")]
			public CommandData(ConsoleCommand consoleCommand, object obj, string syntax, MemberType memberType, MemberInfo member, ParameterInfo[] paramInfos, bool isStatic)
			{
			}

			[Token(Token = "0x600240B")]
			[Address(RVA = "0x1BFCB08", Offset = "0x1BFCB08", VA = "0x1BFCB08")]
			public object GetValue()
			{
				return null;
			}

			[Token(Token = "0x600240C")]
			[Address(RVA = "0x1BF74D4", Offset = "0x1BF74D4", VA = "0x1BF74D4")]
			public bool IsRegistered()
			{
				return default(bool);
			}

			[Token(Token = "0x600240D")]
			[Address(RVA = "0x1BFCCDC", Offset = "0x1BFCCDC", VA = "0x1BFCCDC")]
			public int GetInstanceCount()
			{
				return default(int);
			}

			[Token(Token = "0x600240E")]
			[Address(RVA = "0x1BFE190", Offset = "0x1BFE190", VA = "0x1BFE190")]
			public int GetInstanceWhenOnlyOne(out object instance)
			{
				return default(int);
			}

			[Token(Token = "0x600240F")]
			[Address(RVA = "0x1BF7970", Offset = "0x1BF7970", VA = "0x1BF7970")]
			public void Execute(FastQueue<string> arguments, string argumentString)
			{
			}

			[Token(Token = "0x6002410")]
			[Address(RVA = "0x1BFE3AC", Offset = "0x1BFE3AC", VA = "0x1BFE3AC")]
			private void ExecuteMethodOrDelegate(FastQueue<string> arguments, string argumentString)
			{
			}

			[Token(Token = "0x6002411")]
			[Address(RVA = "0x1BFF63C", Offset = "0x1BFF63C", VA = "0x1BFF63C")]
			private void ExecuteDelegateMethod(MemberInfo member, object obj, object[] args, string argumentString)
			{
			}

			[Token(Token = "0x6002412")]
			[Address(RVA = "0x1BFF214", Offset = "0x1BFF214", VA = "0x1BFF214")]
			private void ExecuteMethod(MemberInfo member, MethodInfo method, object obj, object[] args, string argumentString)
			{
			}

			[Token(Token = "0x6002413")]
			[Address(RVA = "0x1BFEA08", Offset = "0x1BFEA08", VA = "0x1BFEA08")]
			private void ExecuteField(FastQueue<string> arguments, string argumentString)
			{
			}

			[Token(Token = "0x6002414")]
			[Address(RVA = "0x1BFF7E8", Offset = "0x1BFF7E8", VA = "0x1BFF7E8")]
			private void LogValue(FieldInfo field, object obj)
			{
			}

			[Token(Token = "0x6002415")]
			[Address(RVA = "0x1BFFB3C", Offset = "0x1BFFB3C", VA = "0x1BFFB3C")]
			private void SetField(FieldInfo field, object obj, object arg)
			{
			}

			[Token(Token = "0x6002416")]
			[Address(RVA = "0x1BFEDAC", Offset = "0x1BFEDAC", VA = "0x1BFEDAC")]
			private void ExecuteProperty(FastQueue<string> arguments, string argumentString)
			{
			}

			[Token(Token = "0x6002417")]
			[Address(RVA = "0x1BFFEB8", Offset = "0x1BFFEB8", VA = "0x1BFFEB8")]
			private void LogValue(PropertyInfo prop, object obj)
			{
			}

			[Token(Token = "0x6002418")]
			[Address(RVA = "0x1C00210", Offset = "0x1C00210", VA = "0x1C00210")]
			private void SetProperty(PropertyInfo prop, object obj, object arg)
			{
			}

			[Token(Token = "0x6002419")]
			[Address(RVA = "0x1C005D0", Offset = "0x1C005D0", VA = "0x1C005D0")]
			private bool CheckParameterCount(int required, int count)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005FD")]
		public enum AccessMode
		{
			[Token(Token = "0x4002277")]
			EnabledOnConsoleCommand,
			[Token(Token = "0x4002278")]
			Enabled,
			[Token(Token = "0x4002279")]
			Disabled
		}

		[Token(Token = "0x20005FE")]
		public struct AutoComplete
		{
			[Token(Token = "0x400227A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string command;

			[Token(Token = "0x400227B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CommandData commandData;

			[Token(Token = "0x600241A")]
			[Address(RVA = "0x1BFCE0C", Offset = "0x1BFCE0C", VA = "0x1BFCE0C")]
			public AutoComplete(string command, CommandData commandData)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA094", Offset = "0x16EA094")]
		private sealed class <>c
		{
			[Token(Token = "0x400227C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400227D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<object> <>9__69_0;

			[Token(Token = "0x600241C")]
			[Address(RVA = "0x1BFE054", Offset = "0x1BFE054", VA = "0x1BFE054")]
			public <>c()
			{
			}

			[Token(Token = "0x600241D")]
			[Address(RVA = "0x1BFE05C", Offset = "0x1BFE05C", VA = "0x1BFE05C")]
			internal bool <CheckDestroyedMonoBehaviours>b__69_0(object s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static RuntimeConsole instance;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static AccessLevel accessLevel;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static bool show;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<Type, HashSet<object>> registeredInstancesLookup;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static StringDictionarySorted commandsTable;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static FastList<AutoComplete> autoCompleteList;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static FastQueue<string> inputCommands;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static FastList<LogEntry> threadLogEntries;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static FastList<LogEntry> logEntries;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedFastList<string> commands;

		[Token(Token = "0x4001738")]
		private const int logSize = 8192;

		[Token(Token = "0x4001739")]
		private const int commandLogs = 0;

		[Token(Token = "0x400173A")]
		private const int frameLogs = 1;

		[Token(Token = "0x400173B")]
		private const int unityLogs = 2;

		[Token(Token = "0x400173C")]
		private const int warningLogs = 3;

		[Token(Token = "0x400173D")]
		private const int errorLogs = 4;

		[Token(Token = "0x400173E")]
		private const int exceptionLogs = 5;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static bool setFocus;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static int lastFrame;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static LogEntry lastFrameEntry;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WindowSettings consoleWindow;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int commandIndex;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int moveInputCursor;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int autoCompleteIndex;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string inputCommand;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GUIChangeBool _showStack;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GUIChangeBool showUnityLogs;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GUIChangeBool showLastLog;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 autoCompleteScrollView;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Double2 scrollView;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Double2 scrollViewHeights;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CullGroup cullGroup;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FastList<CullList> cullLists;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static CullList[] logs;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool calcDraw;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool isEnabled;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int oldAutoCompleteCount;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool updateAutoCompleteScrollView;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool isDebugBuild;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool showConsoleOnStart;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F7F5C", Offset = "0x16F7F5C")]
		public bool showConsoleOnWarning;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F7F70", Offset = "0x16F7F70")]
		public bool showConsoleOnError;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F7F84", Offset = "0x16F7F84")]
		public bool showConsoleOnException;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F7F98", Offset = "0x16F7F98")]
		public bool disableUnityDevelopmentConsole;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public KeyCode showToggleKey;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7FAC", Offset = "0x16F7FAC")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F7FAC", Offset = "0x16F7FAC")]
		public bool ignoreCasesInCommands;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F7FFC", Offset = "0x16F7FFC")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F7FFC", Offset = "0x16F7FFC")]
		public bool ignoreCasesInAutoCompleteInput;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AccessMode adminModeInBuild;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string adminModeConsoleCommand;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AccessMode specialModeInBuild;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string specialModeConsoleCommand;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x16F804C", Offset = "0x16F804C")]
		public bool testOnlyFreeConsoleCommands;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		public char searchCommandPrefix;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F8084", Offset = "0x16F8084")]
		public bool ignoreCasesInSearch;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		public char executeOnAllPrefix;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public char executeOnlyOnRemotePrefix;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int titleFontSize;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int frameFontSize;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public int logFontSize;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int stackFontSize;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public SO_ConsoleWindow windowData;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Color selectColor;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Color backgroundColor;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Rect rectAutoComplete;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Rect rectScroll;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private string lastAutoCompleteCommand;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private double scrollViewEndHeight;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool drawLogsScrollBar;

		[Token(Token = "0x14000015")]
		public static event RemoteCommand onRemoteCommand
		{
			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0x1BF27E0", Offset = "0x1BF27E0", VA = "0x1BF27E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704F9C", Offset = "0x1704F9C")]
			add
			{
			}
			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0x1BF28CC", Offset = "0x1BF28CC", VA = "0x1BF28CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704FAC", Offset = "0x1704FAC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event SetActiveMethod onSetActive
		{
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0x1BF29B8", Offset = "0x1BF29B8", VA = "0x1BF29B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704FBC", Offset = "0x1704FBC")]
			add
			{
			}
			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0x1BF2AA8", Offset = "0x1BF2AA8", VA = "0x1BF2AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1704FCC", Offset = "0x1704FCC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x1BF2B98", Offset = "0x1BF2B98", VA = "0x1BF2B98")]
		private void ResetStatic()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x1BF2CF0", Offset = "0x1BF2CF0", VA = "0x1BF2CF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x1BF3A1C", Offset = "0x1BF3A1C", VA = "0x1BF3A1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x1BF3A28", Offset = "0x1BF3A28", VA = "0x1BF3A28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x1BF3A30", Offset = "0x1BF3A30", VA = "0x1BF3A30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x1BF3CD0", Offset = "0x1BF3CD0", VA = "0x1BF3CD0")]
		public void ManualUpdate()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x1BF337C", Offset = "0x1BF337C", VA = "0x1BF337C")]
		public static void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x1BF4308", Offset = "0x1BF4308", VA = "0x1BF4308")]
		public static void Log(string logString, bool showConsole)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x1BF4594", Offset = "0x1BF4594", VA = "0x1BF4594")]
		public static void Log(string logString, Color color, bool showConsole)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x1BF4734", Offset = "0x1BF4734", VA = "0x1BF4734")]
		public static void Log(string logString, LogType logType = LogType.Log, [Optional] Color color, bool showConsole = false)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x1BF48E4", Offset = "0x1BF48E4", VA = "0x1BF48E4")]
		public static void Log(string logString, string[] lines, LogType logType = LogType.Log, [Optional] Color color, int threadId = -1)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x1BF4A68", Offset = "0x1BF4A68", VA = "0x1BF4A68")]
		public static void Log(LogEntry logEntry)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x1BF44B0", Offset = "0x1BF44B0", VA = "0x1BF44B0")]
		private static void AddLog(LogEntry logEntry)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x1BF3D78", Offset = "0x1BF3D78", VA = "0x1BF3D78")]
		private void UpdateLogs()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x1BF4B40", Offset = "0x1BF4B40", VA = "0x1BF4B40")]
		private static bool CheckNewFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x1BF4ED8", Offset = "0x1BF4ED8", VA = "0x1BF4ED8")]
		public static void SortCommandsTable()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x1BF34C0", Offset = "0x1BF34C0", VA = "0x1BF34C0")]
		public static void Register(object instance)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x1BF3B24", Offset = "0x1BF3B24", VA = "0x1BF3B24")]
		public static void Unregister(object instance)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x1BF5010", Offset = "0x1BF5010", VA = "0x1BF5010")]
		public static void RegisterStaticType(Type objType)
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x1BF5904", Offset = "0x1BF5904", VA = "0x1BF5904")]
		private static bool AddMethod(Type objType, ConsoleCommand consoleCommand, MemberInfo member, MethodInfo method, MemberType memberType, string methodName, bool logFailed = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x1BF6018", Offset = "0x1BF6018", VA = "0x1BF6018")]
		private static void AddCommand(MemberInfo member, ConsoleCommand consoleCommand, string commandName, CommandData commandData, bool logFailed = true)
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x1BF655C", Offset = "0x1BF655C", VA = "0x1BF655C")]
		public static bool ValidParams(Type objType, MethodInfo method, ParameterInfo[] paramInfos, bool logFailed = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x1BF5A94", Offset = "0x1BF5A94", VA = "0x1BF5A94")]
		private static bool ValidParam(Type objType, MemberInfo member, Type type, bool logFailed = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x1BF6678", Offset = "0x1BF6678", VA = "0x1BF6678")]
		private static void CheckDestroyedMonoBehaviours(HashSet<object> instances)
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x1BF6774", Offset = "0x1BF6774", VA = "0x1BF6774")]
		private static int IsRemoteCommand(ref string command)
		{
			return default(int);
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x1BF68C8", Offset = "0x1BF68C8", VA = "0x1BF68C8")]
		public static void ExecuteCommand(string command)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x1BF719C", Offset = "0x1BF719C", VA = "0x1BF719C")]
		public static void GetArguments(string argumentString, FastQueue<string> inputCommands)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x1BF7434", Offset = "0x1BF7434", VA = "0x1BF7434")]
		private static void CannotFindCommand(string command, string firstCommand)
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x1BF79A0", Offset = "0x1BF79A0", VA = "0x1BF79A0")]
		private static void LogCommandFailed(string command, string result)
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x1BF7BEC", Offset = "0x1BF7BEC", VA = "0x1BF7BEC")]
		public static bool FindCommand(string command)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x1BF6FD0", Offset = "0x1BF6FD0", VA = "0x1BF6FD0")]
		private static void LogResult(string result)
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x1BF22D8", Offset = "0x1BF22D8", VA = "0x1BF22D8")]
		public static void LogResultError(string result, bool onlyConsoleAndHtml = true)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x1BF7D00", Offset = "0x1BF7D00", VA = "0x1BF7D00")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x1704FDC", Offset = "0x1704FDC")]
		private static void Clear()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x1BF7E94", Offset = "0x1BF7E94", VA = "0x1BF7E94")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x170502C", Offset = "0x170502C")]
		private static void Lines(int count = 20)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x1BF7F24", Offset = "0x1BF7F24", VA = "0x1BF7F24")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x170507C", Offset = "0x170507C")]
		private static void Open()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x1BF7F84", Offset = "0x1BF7F84", VA = "0x1BF7F84")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x17050CC", Offset = "0x17050CC")]
		private static void Close()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x1BF7FE4", Offset = "0x1BF7FE4", VA = "0x1BF7FE4")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x170511C", Offset = "0x170511C")]
		private static void UnloadUnusedAssets()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x1BF7FEC", Offset = "0x1BF7FEC", VA = "0x1BF7FEC")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x170516C", Offset = "0x170516C")]
		private static void GarbageCollect()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x1BF804C", Offset = "0x1BF804C", VA = "0x1BF804C")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x17051BC", Offset = "0x17051BC")]
		private static void SearchMethod(string name)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x1BF83CC", Offset = "0x1BF83CC", VA = "0x1BF83CC")]
		private Vector2 GetDockPos()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x1BF36A0", Offset = "0x1BF36A0", VA = "0x1BF36A0")]
		private void CalcDraw(bool reset)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x1BF84C8", Offset = "0x1BF84C8", VA = "0x1BF84C8")]
		public void MyOnGUI()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x1BF8BC4", Offset = "0x1BF8BC4", VA = "0x1BF8BC4")]
		private void DrawConsole(int windowId)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x1BF8EDC", Offset = "0x1BF8EDC", VA = "0x1BF8EDC")]
		private void DrawButtons()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x1BF9A70", Offset = "0x1BF9A70", VA = "0x1BF9A70")]
		private void DrawLogs(Event currentEvent, Rect window)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x1BFB2C0", Offset = "0x1BFB2C0", VA = "0x1BFB2C0")]
		private bool DrawLogsScrollBar(Event currentEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x1BFA6DC", Offset = "0x1BFA6DC", VA = "0x1BFA6DC")]
		private void DrawInput(Event currentEvent, Rect window)
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x1BF87C8", Offset = "0x1BF87C8", VA = "0x1BF87C8")]
		private void DrawAutoComplete()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x1BFBCB4", Offset = "0x1BFBCB4", VA = "0x1BFBCB4")]
		private void DrawAutoComplete(int windowId)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x1BFB538", Offset = "0x1BFB538", VA = "0x1BFB538")]
		private void AutoCompleteInputCommand()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x1BFBC14", Offset = "0x1BFBC14", VA = "0x1BFBC14")]
		private void ClearAutoCompleteList()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x1BFB7A0", Offset = "0x1BFB7A0", VA = "0x1BFB7A0")]
		private void GetAutoCompleteList(string command)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x1BFCE54", Offset = "0x1BFCE54", VA = "0x1BFCE54")]
		private static bool TryParse(Type t, FastQueue<string> paramQueue, out object result)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x1BFD3B0", Offset = "0x1BFD3B0", VA = "0x1BFD3B0")]
		private static object ChangeType(Type t, FastQueue<string> paramQueue, ref bool valid)
		{
			return null;
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x1BFDBC8", Offset = "0x1BFDBC8", VA = "0x1BFDBC8")]
		public RuntimeConsole()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public enum AccessLevel
	{
		[Token(Token = "0x4001773")]
		Free,
		[Token(Token = "0x4001774")]
		Admin,
		[Token(Token = "0x4001775")]
		Special
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E911C", Offset = "0x16E911C")]
	public class ConsoleAlias : Attribute
	{
		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string alias;

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x299C168", Offset = "0x299C168", VA = "0x299C168")]
		public ConsoleAlias(string alias)
		{
		}
	}
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x16E9130", Offset = "0x16E9130")]
	public class ConsoleCommand : Attribute
	{
		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string alias;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string command;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AccessLevel accessLevel;

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x299C228", Offset = "0x299C228", VA = "0x299C228")]
		public ConsoleCommand(AccessLevel accessLevel = AccessLevel.Admin)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x299C2DC", Offset = "0x299C2DC", VA = "0x299C2DC")]
		public ConsoleCommand(string command, string description = "", AccessLevel accessLevel = AccessLevel.Admin)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x299C498", Offset = "0x299C498", VA = "0x299C498")]
		public bool HasAccess(AccessLevel accessLevel)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A4")]
	public class SO_ConsoleWindow : SO_BaseWindow
	{
		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WindowSettings consoleWindow;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GUISkin skin;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GUISkin skinAutoComplete;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture texDot;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture texArrow;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture texCornerScale;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture texStackOn;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture texStackOff;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CountIcon logIcon;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CountIcon warningIcon;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CountIcon errorIcon;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CountIcon exceptionIcon;

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x232B7F0", Offset = "0x232B7F0", VA = "0x232B7F0")]
		public SO_ConsoleWindow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A5")]
	public class CountIcon
	{
		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture texOn;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture texOff;

		[NonSerialized]
		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int count;

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x299C4C8", Offset = "0x299C4C8", VA = "0x299C4C8")]
		public GUIContent GetGUIContent()
		{
			return null;
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x299C63C", Offset = "0x299C63C", VA = "0x299C63C")]
		public CountIcon()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "ConsoleAlias", RVA = "0x16E9144", Offset = "0x16E9144")]
	public class TestConsole : MonoBehaviour
	{
		[Token(Token = "0x2000600")]
		private enum TestMode
		{
			[Token(Token = "0x400227F")]
			ModeA,
			[Token(Token = "0x4002280")]
			ModeB,
			[Token(Token = "0x4002281")]
			ModeC
		}

		[Token(Token = "0x2000601")]
		private delegate float DoMath(float a, float b);

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F8098", Offset = "0x16F8098")]
		private float testValue1;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F80E8", Offset = "0x16F80E8")]
		private TestMode testMode;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F8138", Offset = "0x16F8138")]
		private float testValue3;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F8188", Offset = "0x16F8188")]
		private UnityEngine.Vector3 position;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16F81D8", Offset = "0x16F81D8")]
		private bool <AutoProp1>k__BackingField;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int testProp2;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x16F81E8", Offset = "0x16F81E8")]
		private DoMath doMath;

		[Token(Token = "0x170003AE")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x17089B8", Offset = "0x17089B8")]
		private bool AutoProp1
		{
			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0x232C8B0", Offset = "0x232C8B0", VA = "0x232C8B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170520C", Offset = "0x170520C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0x232C8B8", Offset = "0x232C8B8", VA = "0x232C8B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x170521C", Offset = "0x170521C")]
			set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x1708A08", Offset = "0x1708A08")]
		public int TestProp2
		{
			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0x232C8C4", Offset = "0x232C8C4", VA = "0x232C8C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0x232C8CC", Offset = "0x232C8CC", VA = "0x232C8CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x232C784", Offset = "0x232C784", VA = "0x232C784")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x232C848", Offset = "0x232C848", VA = "0x232C848")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x232C8D4", Offset = "0x232C8D4", VA = "0x232C8D4")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x170522C", Offset = "0x170522C")]
		private void PrintHello()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x232C940", Offset = "0x232C940", VA = "0x232C940")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x170527C", Offset = "0x170527C")]
		private int PrintNumbers(int count)
		{
			return default(int);
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x232CA60", Offset = "0x232CA60", VA = "0x232CA60")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x17052CC", Offset = "0x17052CC")]
		private float Multiply(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x232CA68", Offset = "0x232CA68", VA = "0x232CA68")]
		public TestConsole()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public enum AssemblyType
	{
		[Token(Token = "0x4001792")]
		Unity,
		[Token(Token = "0x4001793")]
		System,
		[Token(Token = "0x4001794")]
		Mono,
		[Token(Token = "0x4001795")]
		Other
	}
	[Token(Token = "0x20003A8")]
	public class Parent
	{
		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public object parent;

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x1BF0448", Offset = "0x1BF0448", VA = "0x1BF0448")]
		public Parent()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class CustomAssembly : IComparable<CustomAssembly>
	{
		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Assembly assembly;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssemblyType type;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FastSortedDictionary<string, NamespaceTypes> namespaceLookup;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FastList<CustomType> types;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FastList<CustomType> allTypes;

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x299D078", Offset = "0x299D078", VA = "0x299D078")]
		public void Sort()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x299D0F8", Offset = "0x299D0F8", VA = "0x299D0F8", Slot = "4")]
		public int CompareTo(CustomAssembly other)
		{
			return default(int);
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x299D118", Offset = "0x299D118", VA = "0x299D118")]
		public static void InitAssemblies(ref bool hasInitAssemblies, FastList<CustomAssembly> customAssemblies, Dictionary<NamespaceTypes, RuntimeInspector.DrawInfo> namespaceTypesLookup, Dictionary<string, FastList<Type>> typeNameLookup)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x299D624", Offset = "0x299D624", VA = "0x299D624")]
		public CustomAssembly()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class NamespaceTypes : Parent, IComparable<NamespaceTypes>
	{
		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FastList<CustomType> types;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x1BF039C", Offset = "0x1BF039C", VA = "0x1BF039C")]
		public NamespaceTypes(object parent, string name)
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x1BF0450", Offset = "0x1BF0450", VA = "0x1BF0450")]
		public void Sort()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x1BF04B4", Offset = "0x1BF04B4", VA = "0x1BF04B4", Slot = "4")]
		public int CompareTo(NamespaceTypes other)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003AB")]
	public class CustomType : Parent, IComparable<CustomType>
	{
		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Type type;

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x299D704", Offset = "0x299D704", VA = "0x299D704")]
		public CustomType(object parent, Type type)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x299D77C", Offset = "0x299D77C", VA = "0x299D77C", Slot = "4")]
		public int CompareTo(CustomType other)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003AC")]
	public class RuntimeInspector : MonoBehaviour
	{
		[Token(Token = "0x2000602")]
		public enum DrawMode
		{
			[Token(Token = "0x4002283")]
			Object,
			[Token(Token = "0x4002284")]
			Assembly
		}

		[Token(Token = "0x2000603")]
		public delegate void FloatMethod(float newValue);

		[Token(Token = "0x2000604")]
		public enum WindowType
		{
			[Token(Token = "0x4002286")]
			Hierarchy,
			[Token(Token = "0x4002287")]
			Inspector
		}

		[Token(Token = "0x2000605")]
		public struct Bool3
		{
			[Token(Token = "0x4002288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool v1;

			[Token(Token = "0x4002289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool v2;

			[Token(Token = "0x400228A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool v3;

			[Token(Token = "0x6002426")]
			[Address(RVA = "0x232B3F8", Offset = "0x232B3F8", VA = "0x232B3F8")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x2000606")]
		public class DrawInfo : CullItem
		{
			[Token(Token = "0x400228B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static DrawInfo empty;

			[Token(Token = "0x400228C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool foldout;

			[Token(Token = "0x400228D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int passSearch;

			[Token(Token = "0x6002427")]
			[Address(RVA = "0x232B404", Offset = "0x232B404", VA = "0x232B404")]
			public DrawInfo(bool foldout)
			{
			}
		}

		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA0A4", Offset = "0x16EA0A4")]
		private sealed class <SearchMemoryCR>d__79 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400228E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400228F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RuntimeInspector <>4__this;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <count>5__2;

			[Token(Token = "0x4002292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private FastList<ItemHolder<string, MemoryInstanceType>> <list>5__3;

			[Token(Token = "0x4002293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__4;

			[Token(Token = "0x4002294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MemoryInstanceType <mit>5__5;

			[Token(Token = "0x4002295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private DrawInfo <mitInfo>5__6;

			[Token(Token = "0x4002296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FastList<MemoryObject> <instances>5__7;

			[Token(Token = "0x4002297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <j>5__8;

			[Token(Token = "0x17000539")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600242C")]
				[Address(RVA = "0x232AC74", Offset = "0x232AC74", VA = "0x232AC74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600242E")]
				[Address(RVA = "0x232ACDC", Offset = "0x232ACDC", VA = "0x232ACDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002429")]
			[Address(RVA = "0x232A6D0", Offset = "0x232A6D0", VA = "0x232A6D0")]
			[DebuggerHidden]
			public <SearchMemoryCR>d__79(int <>1__state)
			{
			}

			[Token(Token = "0x600242A")]
			[Address(RVA = "0x232A6FC", Offset = "0x232A6FC", VA = "0x232A6FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600242B")]
			[Address(RVA = "0x232A700", Offset = "0x232A700", VA = "0x232A700", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600242D")]
			[Address(RVA = "0x232AC7C", Offset = "0x232AC7C", VA = "0x232AC7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA0B4", Offset = "0x16EA0B4")]
		private sealed class <SearchAssembliesCR>d__81 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400229A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RuntimeInspector <>4__this;

			[Token(Token = "0x400229B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <count>5__2;

			[Token(Token = "0x400229C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x400229D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CustomAssembly <customAssembly>5__4;

			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <startIndex>5__5;

			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private FastList<ItemHolder<string, NamespaceTypes>> <namespaceList>5__6;

			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <j>5__7;

			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private NamespaceTypes <namespaceTypes>5__8;

			[Token(Token = "0x1700053B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002432")]
				[Address(RVA = "0x23298EC", Offset = "0x23298EC", VA = "0x23298EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002434")]
				[Address(RVA = "0x2329954", Offset = "0x2329954", VA = "0x2329954", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600242F")]
			[Address(RVA = "0x2329424", Offset = "0x2329424", VA = "0x2329424")]
			[DebuggerHidden]
			public <SearchAssembliesCR>d__81(int <>1__state)
			{
			}

			[Token(Token = "0x6002430")]
			[Address(RVA = "0x2329450", Offset = "0x2329450", VA = "0x2329450", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002431")]
			[Address(RVA = "0x2329454", Offset = "0x2329454", VA = "0x2329454", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002433")]
			[Address(RVA = "0x23298F4", Offset = "0x23298F4", VA = "0x23298F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA0C4", Offset = "0x16EA0C4")]
		private sealed class <SearchScenesCR>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RuntimeInspector <>4__this;

			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <count>5__2;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <j>5__4;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <t>5__5;

			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <k>5__6;

			[Token(Token = "0x1700053D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002438")]
				[Address(RVA = "0x232B388", Offset = "0x232B388", VA = "0x232B388", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600243A")]
				[Address(RVA = "0x232B3F0", Offset = "0x232B3F0", VA = "0x232B3F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002435")]
			[Address(RVA = "0x232ACE4", Offset = "0x232ACE4", VA = "0x232ACE4")]
			[DebuggerHidden]
			public <SearchScenesCR>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6002436")]
			[Address(RVA = "0x232AD10", Offset = "0x232AD10", VA = "0x232AD10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002437")]
			[Address(RVA = "0x232AD14", Offset = "0x232AD14", VA = "0x232AD14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002439")]
			[Address(RVA = "0x232B390", Offset = "0x232B390", VA = "0x232B390", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x16EA0D4", Offset = "0x16EA0D4")]
		private sealed class <SearchInspectorCR>d__149 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RuntimeInspector <>4__this;

			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool checkSearchType;

			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <oldInspectorSearchLevel>5__2;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <count>5__3;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__4;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SearchMember <searchMember>5__5;

			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <j>5__6;

			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private object <obj>5__7;

			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private MemberInfo <member>5__8;

			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int <level>5__9;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private MemberType <memberType>5__10;

			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private MemberData <memberData>5__11;

			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private FieldInfo <field>5__12;

			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private PropertyInfo <prop>5__13;

			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Type <type>5__14;

			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private string <name>5__15;

			[Token(Token = "0x1700053F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600243E")]
				[Address(RVA = "0x232A660", Offset = "0x232A660", VA = "0x232A660", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000540")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002440")]
				[Address(RVA = "0x232A6C8", Offset = "0x232A6C8", VA = "0x232A6C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600243B")]
			[Address(RVA = "0x232995C", Offset = "0x232995C", VA = "0x232995C")]
			[DebuggerHidden]
			public <SearchInspectorCR>d__149(int <>1__state)
			{
			}

			[Token(Token = "0x600243C")]
			[Address(RVA = "0x2329988", Offset = "0x2329988", VA = "0x2329988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600243D")]
			[Address(RVA = "0x232998C", Offset = "0x232998C", VA = "0x232998C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600243F")]
			[Address(RVA = "0x232A668", Offset = "0x232A668", VA = "0x232A668", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool needHierarchySearch;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool enableCameraOnStart;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIChangeBool pauseGame;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GUIChangeBool useNavigationCamera;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GUIChangeBool drawScenes;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GUIChangeBool drawAssemblies;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GUIChangeBool drawMemory;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GUIChangeBool drawUnityAssemblies;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GUIChangeBool drawSystemAssemblies;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GUIChangeBool drawMonoAssemblies;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GUIChangeBool drawOtherAssemblies;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GUIChangeBool drawMonoBehaviourMemory;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GUIChangeBool drawScriptableObjectMemory;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GUIChangeBool drawComponentMemory;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GUIChangeBool drawOtherMemory;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GUIChangeBool drawCompareFilter;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GUIChangeBool drawHideFlags;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GUIChangeBool showHelp;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GUIChangeBool showSettings;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GUIChangeBool linkSelect;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FastList<DrawInfo> selectList;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject lastScreenRayedGO;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<NamespaceTypes, DrawInfo> namespaceTypesLookup;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static FastList<CustomAssembly> customAssemblies;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasInitAssemblies;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Dictionary<string, DrawInfo> memoryLookup;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Dictionary<MemoryObject, DrawInfo> memoryObjectLookup;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SortedFastList<MemorySnapshot> memorySnapshots;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private MemorySnapshot selectedMemorySnapshot;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private MemorySnapshot difSnapshot;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CompareMode memoryCompareMode;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool doMemorySnapshotCompare;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private FastList<Transform> transformList;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private FastList<Transform> searchPassedList;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private FastList<DrawInfo> searchFailedList;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<GameObject> searchRootList;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool isSearchingScenes;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private FastList<CustomType> searchTypePassedList;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private FastList<CustomType> searchTypeFailedList;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int totalCount;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private bool isSearchingAssemblies;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private HashSet<DrawInfo> searchMemoryObjectPassedList;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private HashSet<DrawInfo> searchMemoryObjectFailedList;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool isSearchingMemory;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int searchGameObjectsPerFrame;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector2 settingsScrollView;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float refreshHierarchySearch;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool scrollToSelected;

		[Token(Token = "0x40017D1")]
		private const int prefix = 150;

		[Token(Token = "0x40017D2")]
		public const BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Dictionary<Type, TypeData> typeDataLookup;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Dictionary<MethodInfo, string> methodArgumentsLookup;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Dictionary<MemberInfo, MemberData> memberDataLookup;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private FastQueue<string> methodArgs;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private ScrollViewCullDrawOnce scrollViewCull;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GUIChangeBool showFields;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private GUIChangeBool showProperties;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GUIChangeBool showMethods;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private GUIChangeBool showInherited;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private GUIChangeBool showDeclared;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private GUIChangeBool showStatic;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private GUIChangeBool showInstance;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private GUIChangeBool showPublic;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private GUIChangeBool showPrivate;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private GUIChangeBool showProtected;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private FastList<object> searchObjectList;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private List<Component> searchComponentList;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private FastList<SearchMember> searchMemberList;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private FastList<SearchMember> searchMemberPassedList;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private FastList<SearchMember> searchMemberFailedList;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private HashSet<object> searchDoubles;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private HashSet<object> skip;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private HashSet<Type> searchTypes;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private bool isSearchingInspector;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		private bool needInspectorSearch;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float refreshInspectorSearch;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private int inspectorSearchLevel;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private int localTotalSearched;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private int searchInspectorPerFrame;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private EditField editField;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private string editText;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private int selectAllEditText;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private GameObject oldSelectedGO;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private object oldDrawObject;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private DrawMode drawMode;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private float fieldWidth;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Type selectedStaticType;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private UnityEngine.Object selectedObject;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private float memberSeparationHeight;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private int totalSearched;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private int totalFound;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static RuntimeInspector instance;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static GameObject selectionIndicatorGO;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static GameObject selectedGO;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static NavigationCamera navigationCamera;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static bool show;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		public bool showOnStart;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public KeyCode showToggleKey;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public KeyCode focusCameraKey;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public KeyCode alignWithViewKey;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public KeyCode moveToViewKey;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public KeyCode followCameraKey;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public LayerMask selectLayerMask;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public bool unfoldMultipleScenesOnStart;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public SO_Window windowData;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public SO_NavigationCamera navigationCameraData;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private Dictionary<CustomAssembly, DrawInfo> assemblyLookup;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Dictionary<CustomType, DrawInfo> typeLookup;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private Dictionary<Scene, DrawInfo> sceneLookup;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Dictionary<Transform, DrawInfo> tLookup;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Dictionary<string, FastList<Type>> typeNameLookup;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private FastList<Dictionary<object, DrawInfo>> memberLookups;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private List<GameObject> rootList;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private List<Component> components;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Texture texArrowFolded;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Texture texArrowUnfolded;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private GUISkin skin;

		[Token(Token = "0x4001818")]
		private const int memberLookupsCapacity = 128;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Camera mainCam;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private UnityEngine.Vector3 selectionIndicatorLocalPos;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private Quaternion selectionIndicatorLocalRot;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private Vector2 lastMousePos;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private Vector2 mousePos;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private Color colorInherited;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		private Color colorStatic;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		private Color colorPublic;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		private Color colorProtected;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private Color colorPrivate;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private Event currentEvent;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private float oldTimeScale;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private WindowSettings inspectorWindow;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private WindowSettings hierarchyWindow;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private ScrollViewCullData hierarchyCull;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private GUIStyle wrapButton;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private GUIStyle wrapTextField;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private DrawEnum drawEnum;

		[Token(Token = "0x170003B0")]
		private int ActiveMemorySnapshotCount
		{
			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0x1C03584", Offset = "0x1C03584", VA = "0x1C03584")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000017")]
		public static event FloatMethod onTimeScaleChanged
		{
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0x1C1092C", Offset = "0x1C1092C", VA = "0x1C1092C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17054AC", Offset = "0x17054AC")]
			add
			{
			}
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0x1C10A1C", Offset = "0x1C10A1C", VA = "0x1C10A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17054BC", Offset = "0x17054BC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public static event SetActiveMethod onSetActive
		{
			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0x1C10B0C", Offset = "0x1C10B0C", VA = "0x1C10B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17054CC", Offset = "0x17054CC")]
			add
			{
			}
			[Token(Token = "0x6001C10")]
			[Address(RVA = "0x1C10BFC", Offset = "0x1C10BFC", VA = "0x1C10BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x17054DC", Offset = "0x17054DC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x1C00750", Offset = "0x1C00750", VA = "0x1C00750")]
		private void Pause()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x1C00854", Offset = "0x1C00854", VA = "0x1C00854")]
		private void DrawHierarchy(int windowId)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x1C02F68", Offset = "0x1C02F68", VA = "0x1C02F68")]
		private void HierarchyDragAndTooltip(int windowId)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x1C03750", Offset = "0x1C03750", VA = "0x1C03750")]
		private void DrawHelp()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x1C038C0", Offset = "0x1C038C0", VA = "0x1C038C0")]
		private void DrawSettings()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x1C05BD4", Offset = "0x1C05BD4", VA = "0x1C05BD4")]
		public static void InitAssemblies()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x1C04EA8", Offset = "0x1C04EA8", VA = "0x1C04EA8")]
		private void DrawAssemblies()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x1C062B0", Offset = "0x1C062B0", VA = "0x1C062B0")]
		private void DrawAssembly(CustomAssembly assembly, bool hasSearchPass)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1C065F0", Offset = "0x1C065F0", VA = "0x1C065F0")]
		private void DrawAssemblyTypes(FastList<CustomType> customTypes, int indent, bool hasSearchPass)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x1C03604", Offset = "0x1C03604", VA = "0x1C03604")]
		private void SelectMemorySnapshot(int snapshotIndex)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x1C036C8", Offset = "0x1C036C8", VA = "0x1C036C8")]
		private void SelectFirstSelectedMemorySnapshot()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x1C03424", Offset = "0x1C03424", VA = "0x1C03424")]
		private void DoMemorySnapshotCompare()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x1C034D4", Offset = "0x1C034D4", VA = "0x1C034D4")]
		private void ScanMemory()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x1C051E4", Offset = "0x1C051E4", VA = "0x1C051E4")]
		private void DrawMemory(MemorySnapshot memorySnapshot)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x1C06930", Offset = "0x1C06930", VA = "0x1C06930")]
		private void DrawMemoryInstances(MemorySnapshot memorySnapshot, MemoryInstanceType memoryInstanceType, bool hasSearchPass, Texture icon)
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x1C04D28", Offset = "0x1C04D28", VA = "0x1C04D28")]
		private void DrawScenes()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x1C077B8", Offset = "0x1C077B8", VA = "0x1C077B8")]
		private void DrawScene(Scene scene, Scene activeScene, int sceneCount)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x1C06264", Offset = "0x1C06264", VA = "0x1C06264")]
		private bool PassedFoldout(DrawInfo info, bool needSearch, bool hasSearchPass, bool showSearchNonFound, bool isChild)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x1C07E58", Offset = "0x1C07E58", VA = "0x1C07E58")]
		private void DrawSceneGameObjects(List<GameObject> goList, bool hasSearchPass)
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x1C08440", Offset = "0x1C08440", VA = "0x1C08440")]
		private void DrawGameObjects(Transform t, int indent, bool hasSearchPass)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x1C07F10", Offset = "0x1C07F10", VA = "0x1C07F10")]
		private void DrawGameObject(GameObject go, ref int indent, bool hasSearchPass)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x1C07D6C", Offset = "0x1C07D6C", VA = "0x1C07D6C")]
		private void FoldScene(Scene scene, List<GameObject> rootList, bool foldout)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x1C07B70", Offset = "0x1C07B70", VA = "0x1C07B70")]
		private bool FoldOutScene(Scene scene, List<GameObject> rootList)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x1C07C68", Offset = "0x1C07C68", VA = "0x1C07C68")]
		private bool FoldInScene(Scene scene, List<GameObject> rootList)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x1C08994", Offset = "0x1C08994", VA = "0x1C08994")]
		private void FoldGameObject(Transform t, bool foldout)
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x1C087C8", Offset = "0x1C087C8", VA = "0x1C087C8")]
		private bool FoldOutGameObjects(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1C088A4", Offset = "0x1C088A4", VA = "0x1C088A4")]
		private bool FoldInGameObjects(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1C08A6C", Offset = "0x1C08A6C", VA = "0x1C08A6C")]
		private void SearchMemory()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x1C08AC4", Offset = "0x1C08AC4", VA = "0x1C08AC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x170531C", Offset = "0x170531C")]
		private IEnumerator SearchMemoryCR()
		{
			return null;
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x1C08B40", Offset = "0x1C08B40", VA = "0x1C08B40")]
		private void SearchAssemblies()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x1C08BE4", Offset = "0x1C08BE4", VA = "0x1C08BE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1705380", Offset = "0x1705380")]
		private IEnumerator SearchAssembliesCR()
		{
			return null;
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x1C08C60", Offset = "0x1C08C60", VA = "0x1C08C60")]
		private void SetFound(CustomType customType, bool found)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x1C08E04", Offset = "0x1C08E04", VA = "0x1C08E04")]
		private int SearchThroughTypes(FastList<CustomType> types, int startIndex, ref int count)
		{
			return default(int);
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x1C09378", Offset = "0x1C09378", VA = "0x1C09378")]
		private void SearchScenes()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x1C0942C", Offset = "0x1C0942C", VA = "0x1C0942C")]
		private void SetSearchObjectsPerFrame()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x1C093B0", Offset = "0x1C093B0", VA = "0x1C093B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x17053E4", Offset = "0x17053E4")]
		private IEnumerator SearchScenesCR()
		{
			return null;
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x1C094D0", Offset = "0x1C094D0", VA = "0x1C094D0")]
		private void DrawInspector(int windowId)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x1C0A564", Offset = "0x1C0A564", VA = "0x1C0A564")]
		private void InspectorDragAndTooltip(int windowId)
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x1C0A65C", Offset = "0x1C0A65C", VA = "0x1C0A65C")]
		private void ClearMemberLookups(int startLevel)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x1C0A710", Offset = "0x1C0A710", VA = "0x1C0A710")]
		private void DrawSelected(object obj, DrawMode drawMode)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x1C0B914", Offset = "0x1C0B914", VA = "0x1C0B914")]
		private void ClearEdit()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x1C0B930", Offset = "0x1C0B930", VA = "0x1C0B930")]
		private bool SubmitEdit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x1C0ACFC", Offset = "0x1C0ACFC", VA = "0x1C0ACFC")]
		private void DrawObject(object obj, [Optional] Texture icon)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x1C0A888", Offset = "0x1C0A888", VA = "0x1C0A888")]
		private void DrawGameObject(GameObject go)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x1C0B9D0", Offset = "0x1C0B9D0", VA = "0x1C0B9D0")]
		private void DrawComponent(Component component, int level)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x1C0B3D0", Offset = "0x1C0B3D0", VA = "0x1C0B3D0")]
		private bool DrawObjectMembers(MemberInfo parentMember, object obj, int level, bool needSearch, bool hasSearchPass, bool isType, float indent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x1C0C328", Offset = "0x1C0C328", VA = "0x1C0C328")]
		private bool DrawMembers(MemberInfo parentMember, object obj, TypeData typeData, SubTypeData subTypeData, MemberInfo[] members, MemberType memberType, int level, bool needSearch, bool hasSearchPass, float indent, out bool didDraw)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x1C0C264", Offset = "0x1C0C264", VA = "0x1C0C264")]
		private TypeData GetTypeData(Type objType)
		{
			return null;
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x1C0F444", Offset = "0x1C0F444", VA = "0x1C0F444")]
		private MemberData GetMemberData(Type objType, MemberInfo member, MemberType memberType)
		{
			return null;
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x1C0C850", Offset = "0x1C0C850", VA = "0x1C0C850")]
		private bool DrawMember(MemberInfo parentMember, object obj, TypeData typeData, SubTypeData subTypeData, MemberInfo member, MemberType memberType, int level, bool needSearch, bool hasSearchPass, ref bool didDraw, bool isLastMember, float indent, [Optional] Array array, int arrayIndex = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x1C0FBCC", Offset = "0x1C0FBCC", VA = "0x1C0FBCC")]
		private void DrawArray(MemberInfo parentMember, Array array, int level, bool needSearch, bool hasSearchPass, float indent)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x1C10174", Offset = "0x1C10174", VA = "0x1C10174")]
		private void DrawLabelIndent(string text, float indent)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x1C102FC", Offset = "0x1C102FC", VA = "0x1C102FC")]
		private void SearchInsideGameObject(GameObject go)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x1C104A8", Offset = "0x1C104A8", VA = "0x1C104A8")]
		private void SearchInspector(object obj)
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x1C10534", Offset = "0x1C10534", VA = "0x1C10534")]
		private void AddSearchMembers(object obj, Type objType, SearchMember searchMember, MemberInfo[] members, MemberType memberType, int level)
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x1C106B4", Offset = "0x1C106B4", VA = "0x1C106B4")]
		private void AddAllSearchMembers(object searchObj, Type objType, SearchMember searchMember, int level)
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x1C10894", Offset = "0x1C10894", VA = "0x1C10894")]
		private void SetSearchInspectorPerFrame()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x1C10418", Offset = "0x1C10418", VA = "0x1C10418")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1705448", Offset = "0x1705448")]
		private IEnumerator SearchInspectorCR(bool checkSearchType)
		{
			return null;
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x1C10CEC", Offset = "0x1C10CEC", VA = "0x1C10CEC")]
		public static void ResetStatic()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x1C10DE8", Offset = "0x1C10DE8", VA = "0x1C10DE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x1C111D4", Offset = "0x1C111D4", VA = "0x1C111D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x1C111E8", Offset = "0x1C111E8", VA = "0x1C111E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x1C112F4", Offset = "0x1C112F4", VA = "0x1C112F4")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x17054EC", Offset = "0x17054EC")]
		public static void SearchHierarchyType(string type)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x1C114C0", Offset = "0x1C114C0", VA = "0x1C114C0")]
		[AttributeAttribute(Name = "ConsoleCommand", RVA = "0x170553C", Offset = "0x170553C")]
		public static void SearchHierarchyName(string name)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x1C1137C", Offset = "0x1C1137C", VA = "0x1C1137C")]
		public static void SetSearch(WindowSettings window, string text, SearchMode searchMode, int searchIndex, bool setActive)
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x1C05998", Offset = "0x1C05998", VA = "0x1C05998")]
		private void SetSelectionSphereRadius()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1C031F4", Offset = "0x1C031F4", VA = "0x1C031F4")]
		private void EnableCamControl()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1C03390", Offset = "0x1C03390", VA = "0x1C03390")]
		private void DisableCamControl()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x1C1107C", Offset = "0x1C1107C", VA = "0x1C1107C")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1C11548", Offset = "0x1C11548", VA = "0x1C11548")]
		public void ManualUpdate()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x1C11E58", Offset = "0x1C11E58", VA = "0x1C11E58")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x1BF15A0", Offset = "0x1BF15A0", VA = "0x1BF15A0")]
		public static void UpdateSelectedIndicatorTransform()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x1C11DB4", Offset = "0x1C11DB4", VA = "0x1C11DB4")]
		private bool NeedSearch(List<Search> searchList)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x1C11F1C", Offset = "0x1C11F1C", VA = "0x1C11F1C")]
		public void MyOnGUI()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x1C12364", Offset = "0x1C12364", VA = "0x1C12364")]
		public static bool ShouldInspectorWindowShow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x1C03E84", Offset = "0x1C03E84", VA = "0x1C03E84")]
		private bool DrawSearch(WindowSettings window, bool changeText2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x1C08F94", Offset = "0x1C08F94", VA = "0x1C08F94")]
		private bool PassSearch(WindowType windowType, Transform t, string name, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C24")]
		public DrawInfo GetObjectDrawInfo<T>(Dictionary<T, DrawInfo> lookup, T obj, bool defaultFoldout = false)
		{
			return null;
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x1C0F5A0", Offset = "0x1C0F5A0", VA = "0x1C0F5A0")]
		public void DrawDot(Color color, string tooltip, Texture tex, bool minusSpace = false)
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x1C0F754", Offset = "0x1C0F754", VA = "0x1C0F754")]
		public Bool3 DrawElement(WindowSettings window, DrawInfo info, int childCount, string name, float width, Texture tex, string tooltip = "")
		{
			return default(Bool3);
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x1C05C80", Offset = "0x1C05C80", VA = "0x1C05C80")]
		public Bool3 DrawElement(WindowSettings window, DrawInfo info, int childCount, string text = "", [Optional] Texture image, string tooltip = "", bool isActive = true, int prefix = 0)
		{
			return default(Bool3);
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x1C06910", Offset = "0x1C06910", VA = "0x1C06910")]
		private Color GetColor(Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x1C068AC", Offset = "0x1C068AC", VA = "0x1C068AC")]
		private Color GetColor(object obj, object selectedObj, bool needSearch, DrawInfo info)
		{
			return default(Color);
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x1C05A6C", Offset = "0x1C05A6C", VA = "0x1C05A6C")]
		public void DrawBoldLabel(GUISkin skin, string name, float space = -3f)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x1C12588", Offset = "0x1C12588", VA = "0x1C12588")]
		public void DrawBoldLabel(GUISkin skin, string name)
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x1C0551C", Offset = "0x1C0551C", VA = "0x1C0551C")]
		private void DrawPrefixLabel(string prefixName, string name, int prefix)
		{
		}

		[Token(Token = "0x6001C2D")]
		private void DrawInputField<T>(string prefixName, T inputField) where T : BaseInputField
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x1C05724", Offset = "0x1C05724", VA = "0x1C05724")]
		private void DrawToggleField(string prefixName, ref bool toggle)
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x1C126A8", Offset = "0x1C126A8", VA = "0x1C126A8")]
		private void DrawLastRectOffset(string name, int offset)
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x1C127A4", Offset = "0x1C127A4", VA = "0x1C127A4")]
		private Texture2D ReadBackTexture(Texture2D tex)
		{
			return null;
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x1C12974", Offset = "0x1C12974", VA = "0x1C12974")]
		private Texture2D CopyAndRemoveAlphaFromTexture(Texture2D texRead, float colorMulti = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x1C12A48", Offset = "0x1C12A48", VA = "0x1C12A48")]
		private void DrawBox(GUIContent guiContent, Color color)
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x1C03050", Offset = "0x1C03050", VA = "0x1C03050")]
		private void BeginVerticalBox(float alphaMulti = 1f)
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x1C11B24", Offset = "0x1C11B24", VA = "0x1C11B24")]
		private void SelectGameObjectFromScreenRay()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x1C084E0", Offset = "0x1C084E0", VA = "0x1C084E0")]
		private void SelectGameObject(GameObject go, bool unfold = false)
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x1C12BA4", Offset = "0x1C12BA4", VA = "0x1C12BA4")]
		private void RevertSelectionFoldout()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x1C02CA8", Offset = "0x1C02CA8", VA = "0x1C02CA8")]
		private void DrawWindowTitle(GUIContent guiContent, WindowSettings window)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x1C06F6C", Offset = "0x1C06F6C", VA = "0x1C06F6C")]
		private void DrawHideFlagsIcons(object obj, HideFlags hideFlags, bool isPrefab, string name)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x1C12C1C", Offset = "0x1C12C1C", VA = "0x1C12C1C")]
		private void DrawIcon(Rect rect, GUIContent guiContent, Color color, bool label = true)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x1C12DCC", Offset = "0x1C12DCC", VA = "0x1C12DCC")]
		public RuntimeInspector()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public enum MemoryType
	{
		[Token(Token = "0x400182C")]
		MonoBehaviour,
		[Token(Token = "0x400182D")]
		ScriptableObject,
		[Token(Token = "0x400182E")]
		Component,
		[Token(Token = "0x400182F")]
		Other
	}
	[Token(Token = "0x20003AE")]
	public enum CompareResult
	{
		[Token(Token = "0x4001831")]
		New,
		[Token(Token = "0x4001832")]
		Removed
	}
	[Token(Token = "0x20003AF")]
	public class MemoryInstanceType : IComparable<MemoryInstanceType>
	{
		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastSortedHashSet<int, MemoryObject> instances;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isSorted;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Type type;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryType memoryType;

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x29A4540", Offset = "0x29A4540", VA = "0x29A4540")]
		public MemoryInstanceType(Type type)
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x29A46F4", Offset = "0x29A46F4", VA = "0x29A46F4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x29A4754", Offset = "0x29A4754", VA = "0x29A4754", Slot = "4")]
		public int CompareTo(MemoryInstanceType other)
		{
			return default(int);
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x29A47AC", Offset = "0x29A47AC", VA = "0x29A47AC")]
		public void Sort()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class MemoryObject : IComparable<MemoryObject>
	{
		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int instanceId;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public HideFlags hideFlags;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isPrefab;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string nameAndTime;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CompareResult compareResult;

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x29A4810", Offset = "0x29A4810", VA = "0x29A4810")]
		public MemoryObject(string name, int instanceId, HideFlags hideFlags, bool isPrefab, CompareResult compareResult = CompareResult.New)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x29A48E8", Offset = "0x29A48E8", VA = "0x29A48E8")]
		public MemoryObject(MemoryObject memoryObject, CompareResult compareResult = CompareResult.New)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x29A495C", Offset = "0x29A495C", VA = "0x29A495C", Slot = "4")]
		public int CompareTo(MemoryObject other)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003B1")]
	public class MemorySnapshot
	{
		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastSortedDictionary<string, MemoryInstanceType> memoryTypesLookup;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float tStamp;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GUIChangeBool selected;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompareResult compareResult;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool hasCleanedDifCompare;

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x1BEF9B8", Offset = "0x1BEF9B8", VA = "0x1BEF9B8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x1BEFA18", Offset = "0x1BEFA18", VA = "0x1BEFA18")]
		public void ScanMemory(CompareMode compareMode)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x1BEFC64", Offset = "0x1BEFC64", VA = "0x1BEFC64")]
		public void CleanDifSnapshot(CompareMode compareMode)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x1BEFEB8", Offset = "0x1BEFEB8", VA = "0x1BEFEB8")]
		public static void CompareMemorySnapshots(MemorySnapshot oldSnapshot, MemorySnapshot newSnapshot, MemorySnapshot difSnapshot, CompareMode compareMode)
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x1BEFF64", Offset = "0x1BEFF64", VA = "0x1BEFF64")]
		public static void CompareMemorySnapshots(MemorySnapshot s, MemorySnapshot d, MemorySnapshot difSnapshot, CompareResult compareResult)
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x1BF02EC", Offset = "0x1BF02EC", VA = "0x1BF02EC")]
		public MemorySnapshot()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x16E917C", Offset = "0x16E917C")]
	public class NavigationCamera : MonoBehaviour
	{
		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float fov;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool followTarget;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Camera cam;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SO_NavigationCamera data;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform t;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject go;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.Vector3 mousePosOld;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private UnityEngine.Vector3 currentSpeed;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.Vector3 position;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private UnityEngine.Vector3 startPosition;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.Vector3 navPosition;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private UnityEngine.Vector3 followPosition;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion rotation;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion startRotation;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion navRotation;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion followRotation;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float tStamp;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float deltaTime;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float oldFov;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float scrollWheel;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject selectionIndicatorGO;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform selectionIndicatorT;

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x1BF04D4", Offset = "0x1BF04D4", VA = "0x1BF04D4")]
		public static void ResetStatic()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x1BF0524", Offset = "0x1BF0524", VA = "0x1BF0524")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x1BF0964", Offset = "0x1BF0964", VA = "0x1BF0964")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x1BF09FC", Offset = "0x1BF09FC", VA = "0x1BF09FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x1BF06DC", Offset = "0x1BF06DC", VA = "0x1BF06DC")]
		private Quaternion ResetRotZ(Quaternion rot, bool roundTo180 = true)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x1BF0BAC", Offset = "0x1BF0BAC", VA = "0x1BF0BAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x1BF17D0", Offset = "0x1BF17D0", VA = "0x1BF17D0")]
		private void FollowTarget()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x1BF0834", Offset = "0x1BF0834", VA = "0x1BF0834")]
		public void ResetFollowPosRot()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x1BF1C24", Offset = "0x1BF1C24", VA = "0x1BF1C24")]
		public void SetCam()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x1BF0968", Offset = "0x1BF0968", VA = "0x1BF0968")]
		public void RestoreCam()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x1BF1B3C", Offset = "0x1BF1B3C", VA = "0x1BF1B3C")]
		private float GetSpeedMulti()
		{
			return default(float);
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x1BF1BAC", Offset = "0x1BF1BAC", VA = "0x1BF1BAC")]
		private void Lerp2Way(ref UnityEngine.Vector3 v, UnityEngine.Vector3 targetV, float upMulti, float downMulti)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x1BF1C70", Offset = "0x1BF1C70", VA = "0x1BF1C70")]
		private void Lerp2Way(ref float v, float targetV, float upMulti, float downMulti)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x1BF1D64", Offset = "0x1BF1D64", VA = "0x1BF1D64")]
		public NavigationCamera()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public enum MemberType
	{
		[Token(Token = "0x4001859")]
		Field,
		[Token(Token = "0x400185A")]
		Property,
		[Token(Token = "0x400185B")]
		Method,
		[Token(Token = "0x400185C")]
		ArrayElement
	}
	[Token(Token = "0x20003B4")]
	public enum Scope
	{
		[Token(Token = "0x400185E")]
		Public,
		[Token(Token = "0x400185F")]
		Protected,
		[Token(Token = "0x4001860")]
		Private
	}
	[Token(Token = "0x20003B5")]
	public class SubTypeData
	{
		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string typeName;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FieldInfo[] fields;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PropertyInfo[] properties;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MethodInfo[] methods;

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x232C640", Offset = "0x232C640", VA = "0x232C640")]
		public SubTypeData(Type type, int index, BindingFlags bindingFlags)
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class TypeData
	{
		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastList<SubTypeData> subTypeDatas;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isString;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isClass;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool isStruct;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool isArray;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isInterface;

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x232CDD4", Offset = "0x232CDD4", VA = "0x232CDD4")]
		public TypeData(Type type, BindingFlags bindingFlags)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x232CF50", Offset = "0x232CF50", VA = "0x232CF50")]
		public void GetMembers(Type type, BindingFlags bindingFlags)
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class MemberData
	{
		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MemberType memberType;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MemberInfo member;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FieldInfo field;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PropertyInfo prop;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MethodInfo method;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParameterInfo[] parameters;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool validInvokeParameters;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isStatic;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool isConstant;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool isString;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool isClass;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool isStruct;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool isArray;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool isInterface;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Type type;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Scope scope;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string name;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string typeName;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string scopeToolTip;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color scopeColor;

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x29A3EE0", Offset = "0x29A3EE0", VA = "0x29A3EE0")]
		public MemberData(Type objType, MemberInfo member, MemberType memberType, Color colorPublic, Color colorProtected, Color colorPrivate)
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class SO_NavigationCamera : ScriptableObject
	{
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloatInputField mouseSensitity;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatInputField accelMulti;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FloatInputField decelMulti;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FloatInputField speedSlow;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FloatInputField speedNormal;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FloatInputField speedFast;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FloatInputField mouseScrollWheelMulti;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FloatInputField mouseStrafeMulti;

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x232B7F4", Offset = "0x232B7F4", VA = "0x232B7F4")]
		public SO_NavigationCamera()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public enum WindowType
	{
		[Token(Token = "0x400188A")]
		Hierarchy,
		[Token(Token = "0x400188B")]
		Inspector,
		[Token(Token = "0x400188C")]
		Console
	}
	[Token(Token = "0x20003BA")]
	public class SO_BaseWindow : ScriptableObject
	{
		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float backgroundAlpha;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float boxAlpha;

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x232B7B4", Offset = "0x232B7B4", VA = "0x232B7B4")]
		public SO_BaseWindow()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class SO_Window : SO_BaseWindow
	{
		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WindowSettings hierarchyWindow;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WindowSettings inspectorWindow;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool showTooltip;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float selectionSphereRadius;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntInputField searchAssemblyPerFrame;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntInputField searchGameObjectsPerFrame;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntInputField searchInspectorPerFrame;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GUIChangeBool showChildCount;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture texToggleOn;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture texArrowFolded;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Texture texArrowUnfolded;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture texDot;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Texture texDot2;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture texScene;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Texture texAssembly;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Texture texMemory;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Texture texHierarchy;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture texInspector;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Texture texGameObject;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Texture texSearch;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Texture texSettings;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Texture texPause;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Texture texCamera;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Texture texCameraFollow;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Texture texHelp;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Texture texPrefab;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Texture texSave;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Texture texLoad;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Texture texEdit;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Texture texAlphabeticSort;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Texture texCountSort;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Texture texVisible;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Texture texInvisible;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Texture texDestroyed;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GUISkin skin;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GUISkin sourceSkin;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ComponentIcons componentIcons;

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x232B9A0", Offset = "0x232B9A0", VA = "0x232B9A0")]
		public SO_Window()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BC")]
	public struct ComponentIcons
	{
		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture gameObjectIcon;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture transformIcon;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture cameraIcon;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture csScriptIcon;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture audioListenerIcon;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture audioSourceIcon;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture rigidbodyIcon;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture boxColliderIcon;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture capsuleColliderIcon;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture meshColliderIcon;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture sphereColliderIcon;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture terrainColliderIcon;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture wheelColliderIcon;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture meshFilterIcon;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture meshRendererIcon;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Texture pointLightIcon;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture directionalLightIcon;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Texture spotLightIcon;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture areaLightIcon;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Texture fontIcon;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Texture lightingDataAssetIcon;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Texture lightProbesIcon;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture materialIcon;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Texture meshIcon;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Texture renderTextureIcon;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Texture texture2DIcon;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Texture textureImporterIcon;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Texture scriptableObjectIcon;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Texture shaderIcon;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Texture shaderVariantCollectionIcon;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Texture computeShaderIcon;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Texture editorSettingsIcon;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Texture cubemapIcon;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Texture animationIcon;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Texture flareLayerIcon;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Texture guiLayerIcon;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Texture lightProbeProxyVolumeIcon;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Texture lightProbeGroupIcon;

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x299B260", Offset = "0x299B260", VA = "0x299B260")]
		public Texture GetIcon(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x299B7D0", Offset = "0x299B7D0", VA = "0x299B7D0")]
		public Texture GetIcon(Type type)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003BD")]
	public class WindowSettings
	{
		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Search> searchList;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showSearchNonFound;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool search;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 position;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Rect rect;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GUIChangeBool isDocked;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isMinimized;

		[NonSerialized]
		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float newScrollViewY;

		[NonSerialized]
		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 scrollView;

		[NonSerialized]
		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 updatedScrollView;

		[NonSerialized]
		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int drag;

		[NonSerialized]
		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Rect rectStartScroll;

		[NonSerialized]
		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float scrollWindowPosY;

		[NonSerialized]
		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float culledSpaceY;

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x232E7D8", Offset = "0x232E7D8", VA = "0x232E7D8")]
		public void Update(float minWidth, float minHeight)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x232E9F4", Offset = "0x232E9F4", VA = "0x232E9F4")]
		public void UpdateScrollView()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x232EA20", Offset = "0x232EA20", VA = "0x232EA20")]
		public void SetScrollViewToEnd(ScrollViewCullData cull)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x232EA2C", Offset = "0x232EA2C", VA = "0x232EA2C")]
		public bool IsScrollViewAtEnd(ScrollViewCullData cull)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x232E7FC", Offset = "0x232E7FC", VA = "0x232E7FC")]
		public void CheckMinMaxSize(float minWidth, float minHeight)
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x232E990", Offset = "0x232E990", VA = "0x232E990")]
		public void CalcRectPosition()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x232E304", Offset = "0x232E304", VA = "0x232E304")]
		public bool ContainsMousePos(Vector2 mousePos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x232EA40", Offset = "0x232EA40", VA = "0x232EA40")]
		public WindowSettings()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public enum SearchMode
	{
		[Token(Token = "0x40018EA")]
		Name,
		[Token(Token = "0x40018EB")]
		Type
	}
	[Token(Token = "0x20003BF")]
	public enum SearchCondition
	{
		[Token(Token = "0x40018ED")]
		Or,
		[Token(Token = "0x40018EE")]
		And
	}
	[Serializable]
	[Token(Token = "0x20003C0")]
	public class Search
	{
		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SearchMode mode;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SearchCondition condition;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool useSearch;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool hasSearch;

		[NonSerialized]
		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FastList<Type> types;

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x232C174", Offset = "0x232C174", VA = "0x232C174")]
		public void MakeArrayTypes()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x232C27C", Offset = "0x232C27C", VA = "0x232C27C")]
		public Search()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public struct SearchMember
	{
		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public object parent;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MemberType memberType;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public object obj;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type objType;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MemberInfo member;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RuntimeInspector.DrawInfo info;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int level;

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x232A5C4", Offset = "0x232A5C4", VA = "0x232A5C4")]
		public SearchMember(object parent, object obj, Type objType, MemberInfo member, MemberType memberType, RuntimeInspector.DrawInfo info, int level)
		{
		}
	}
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x16E9194", Offset = "0x16E9194")]
	public class WindowManager : MonoBehaviour
	{
		[Token(Token = "0x200060B")]
		public class EventHandling
		{
			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private FastList<EventSystem> eventSystemList;

			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool hasEntered;

			[Token(Token = "0x6002441")]
			[Address(RVA = "0x232DF18", Offset = "0x232DF18", VA = "0x232DF18")]
			public void OnEnter()
			{
			}

			[Token(Token = "0x6002442")]
			[Address(RVA = "0x232E014", Offset = "0x232E014", VA = "0x232E014")]
			public void OnExit()
			{
			}

			[Token(Token = "0x6002443")]
			[Address(RVA = "0x232E75C", Offset = "0x232E75C", VA = "0x232E75C")]
			public EventHandling()
			{
			}
		}

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WindowManager instance;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static EventHandling eventHandling;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Vector2 mousePos;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string tooltip;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int lastWindowId;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SO_WindowManager windowData;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RuntimeInspector runtimeInspector;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RuntimeConsole runtimeConsole;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 size;

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x232D050", Offset = "0x232D050", VA = "0x232D050")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x232D47C", Offset = "0x232D47C", VA = "0x232D47C")]
		private void SetActiveDeactive(GameObject go)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x232D4BC", Offset = "0x232D4BC", VA = "0x232D4BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x232D5A0", Offset = "0x232D5A0", VA = "0x232D5A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x232D7D4", Offset = "0x232D7D4", VA = "0x232D7D4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x232DC6C", Offset = "0x232DC6C", VA = "0x232DC6C")]
		public static bool DoWindowsContainMousePos()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x232E3C0", Offset = "0x232E3C0", VA = "0x232E3C0")]
		public static void SetToolTip(int windowId)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x232E0B4", Offset = "0x232E0B4", VA = "0x232E0B4")]
		private void DrawTooltip(Vector2 mousePos)
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x232E51C", Offset = "0x232E51C", VA = "0x232E51C")]
		private void DoWindow(int windowId)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x232E6C4", Offset = "0x232E6C4", VA = "0x232E6C4")]
		public WindowManager()
		{
		}
	}
}
namespace FFTWSharp
{
	[Token(Token = "0x20003C3")]
	[Flags]
	public enum fftw_flags : uint
	{
		[Token(Token = "0x4001906")]
		Measure = 0u,
		[Token(Token = "0x4001907")]
		DestroyInput = 1u,
		[Token(Token = "0x4001908")]
		Unaligned = 2u,
		[Token(Token = "0x4001909")]
		ConserveMemory = 4u,
		[Token(Token = "0x400190A")]
		Exhaustive = 8u,
		[Token(Token = "0x400190B")]
		PreserveInput = 0x10u,
		[Token(Token = "0x400190C")]
		Patient = 0x20u,
		[Token(Token = "0x400190D")]
		Estimate = 0x40u
	}
	[Token(Token = "0x20003C4")]
	public enum fftw_direction
	{
		[Token(Token = "0x400190F")]
		Forward = -1,
		[Token(Token = "0x4001910")]
		Backward = 1
	}
	[Token(Token = "0x20003C5")]
	public enum fftw_kind : uint
	{
		[Token(Token = "0x4001912")]
		R2HC,
		[Token(Token = "0x4001913")]
		HC2R,
		[Token(Token = "0x4001914")]
		DHT,
		[Token(Token = "0x4001915")]
		REDFT00,
		[Token(Token = "0x4001916")]
		REDFT01,
		[Token(Token = "0x4001917")]
		REDFT10,
		[Token(Token = "0x4001918")]
		REDFT11,
		[Token(Token = "0x4001919")]
		RODFT00,
		[Token(Token = "0x400191A")]
		RODFT01,
		[Token(Token = "0x400191B")]
		RODFT10,
		[Token(Token = "0x400191C")]
		RODFT11
	}
	[Token(Token = "0x20003C6")]
	public class fftwf
	{
		[PreserveSig]
		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x2F78AC4", Offset = "0x2F78AC4", VA = "0x2F78AC4")]
		public static extern IntPtr malloc(int length);

		[PreserveSig]
		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x2F78B48", Offset = "0x2F78B48", VA = "0x2F78B48")]
		public static extern void free(IntPtr mem);

		[PreserveSig]
		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x2F78BCC", Offset = "0x2F78BCC", VA = "0x2F78BCC")]
		public static extern void destroy_plan(IntPtr plan);

		[PreserveSig]
		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x2F78C50", Offset = "0x2F78C50", VA = "0x2F78C50")]
		public static extern void cleanup();

		[PreserveSig]
		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x2F78CC4", Offset = "0x2F78CC4", VA = "0x2F78CC4")]
		public static extern void set_timelimit(double seconds);

		[PreserveSig]
		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x2F78D4C", Offset = "0x2F78D4C", VA = "0x2F78D4C")]
		public static extern void execute(IntPtr plan);

		[PreserveSig]
		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x2F78DD0", Offset = "0x2F78DD0", VA = "0x2F78DD0")]
		public static extern IntPtr dft_1d(int n, IntPtr input, IntPtr output, fftw_direction direction, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x2F78E84", Offset = "0x2F78E84", VA = "0x2F78E84")]
		public static extern IntPtr dft_2d(int nx, int ny, IntPtr input, IntPtr output, fftw_direction direction, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x2F78F48", Offset = "0x2F78F48", VA = "0x2F78F48")]
		public static extern IntPtr dft_3d(int nx, int ny, int nz, IntPtr input, IntPtr output, fftw_direction direction, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x2F79014", Offset = "0x2F79014", VA = "0x2F79014")]
		public static extern IntPtr dft(int rank, int[] n, IntPtr input, IntPtr output, fftw_direction direction, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x2F790E0", Offset = "0x2F790E0", VA = "0x2F790E0")]
		public static extern IntPtr dft_r2c_1d(int n, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x2F7918C", Offset = "0x2F7918C", VA = "0x2F7918C")]
		public static extern IntPtr dft_r2c_2d(int nx, int ny, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x2F79240", Offset = "0x2F79240", VA = "0x2F79240")]
		public static extern IntPtr dft_r2c_3d(int nx, int ny, int nz, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x2F79304", Offset = "0x2F79304", VA = "0x2F79304")]
		public static extern IntPtr dft_r2c(int rank, int[] n, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x2F793C0", Offset = "0x2F793C0", VA = "0x2F793C0")]
		public static extern IntPtr dft_c2r_1d(int n, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x2F7946C", Offset = "0x2F7946C", VA = "0x2F7946C")]
		public static extern IntPtr dft_c2r_2d(int nx, int ny, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x2F79520", Offset = "0x2F79520", VA = "0x2F79520")]
		public static extern IntPtr dft_c2r_3d(int nx, int ny, int nz, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x2F795E4", Offset = "0x2F795E4", VA = "0x2F795E4")]
		public static extern IntPtr dft_c2r(int rank, int[] n, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x2F796A0", Offset = "0x2F796A0", VA = "0x2F796A0")]
		public static extern IntPtr r2r_1d(int n, IntPtr input, IntPtr output, fftw_kind kind, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x2F79754", Offset = "0x2F79754", VA = "0x2F79754")]
		public static extern IntPtr r2r_2d(int nx, int ny, IntPtr input, IntPtr output, fftw_kind kindx, fftw_kind kindy, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x2F79820", Offset = "0x2F79820", VA = "0x2F79820")]
		public static extern IntPtr r2r_3d(int nx, int ny, int nz, IntPtr input, IntPtr output, fftw_kind kindx, fftw_kind kindy, fftw_kind kindz, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x2F79904", Offset = "0x2F79904", VA = "0x2F79904")]
		public static extern IntPtr r2r(int rank, int[] n, IntPtr input, IntPtr output, fftw_kind[] kind, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x2F799D8", Offset = "0x2F799D8", VA = "0x2F799D8")]
		public static extern void flops(IntPtr plan, ref double add, ref double mul, ref double fma);

		[PreserveSig]
		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x2F79A84", Offset = "0x2F79A84", VA = "0x2F79A84")]
		public static extern void print_plan(IntPtr plan);

		[PreserveSig]
		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x2F79B08", Offset = "0x2F79B08", VA = "0x2F79B08")]
		public static extern void export_wisdom_to_filename(string filename);

		[PreserveSig]
		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x2F79B9C", Offset = "0x2F79B9C", VA = "0x2F79B9C")]
		public static extern void import_wisdom_from_filename(string filename);

		[PreserveSig]
		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x2F79C30", Offset = "0x2F79C30", VA = "0x2F79C30")]
		public static extern void fftwf_forget_wisdom();

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x2F79CA4", Offset = "0x2F79CA4", VA = "0x2F79CA4")]
		public fftwf()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class fftw
	{
		[PreserveSig]
		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x2F778DC", Offset = "0x2F778DC", VA = "0x2F778DC")]
		public static extern IntPtr malloc(int length);

		[PreserveSig]
		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x2F77960", Offset = "0x2F77960", VA = "0x2F77960")]
		public static extern void free(IntPtr mem);

		[PreserveSig]
		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x2F779E4", Offset = "0x2F779E4", VA = "0x2F779E4")]
		public static extern void destroy_plan(IntPtr plan);

		[PreserveSig]
		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x2F77A68", Offset = "0x2F77A68", VA = "0x2F77A68")]
		public static extern void cleanup();

		[PreserveSig]
		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x2F77ADC", Offset = "0x2F77ADC", VA = "0x2F77ADC")]
		public static extern void set_timelimit(double seconds);

		[PreserveSig]
		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x2F77B64", Offset = "0x2F77B64", VA = "0x2F77B64")]
		public static extern void execute(IntPtr plan);

		[PreserveSig]
		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x2F77BE8", Offset = "0x2F77BE8", VA = "0x2F77BE8")]
		public static extern IntPtr dft_1d(int n, IntPtr input, IntPtr output, fftw_direction direction, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x2F77C9C", Offset = "0x2F77C9C", VA = "0x2F77C9C")]
		public static extern IntPtr dft_2d(int nx, int ny, IntPtr input, IntPtr output, fftw_direction direction, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x2F77D60", Offset = "0x2F77D60", VA = "0x2F77D60")]
		public static extern IntPtr dft_3d(int nx, int ny, int nz, IntPtr input, IntPtr output, fftw_direction direction, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x2F77E2C", Offset = "0x2F77E2C", VA = "0x2F77E2C")]
		public static extern IntPtr dft(int rank, int[] n, IntPtr input, IntPtr output, fftw_direction direction, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x2F77EF8", Offset = "0x2F77EF8", VA = "0x2F77EF8")]
		public static extern IntPtr dft_r2c_1d(int n, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x2F77FA4", Offset = "0x2F77FA4", VA = "0x2F77FA4")]
		public static extern IntPtr dft_r2c_2d(int nx, int ny, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x2F78058", Offset = "0x2F78058", VA = "0x2F78058")]
		public static extern IntPtr dft_r2c_3d(int nx, int ny, int nz, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x2F7811C", Offset = "0x2F7811C", VA = "0x2F7811C")]
		public static extern IntPtr dft_r2c(int rank, int[] n, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x2F781D8", Offset = "0x2F781D8", VA = "0x2F781D8")]
		public static extern IntPtr dft_c2r_1d(int n, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x2F78284", Offset = "0x2F78284", VA = "0x2F78284")]
		public static extern IntPtr dft_c2r_2d(int nx, int ny, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x2F78338", Offset = "0x2F78338", VA = "0x2F78338")]
		public static extern IntPtr dft_c2r_3d(int nx, int ny, int nz, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x2F783FC", Offset = "0x2F783FC", VA = "0x2F783FC")]
		public static extern IntPtr dft_c2r(int rank, int[] n, IntPtr input, IntPtr output, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x2F784B8", Offset = "0x2F784B8", VA = "0x2F784B8")]
		public static extern IntPtr r2r_1d(int n, IntPtr input, IntPtr output, fftw_kind kind, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x2F7856C", Offset = "0x2F7856C", VA = "0x2F7856C")]
		public static extern IntPtr r2r_2d(int nx, int ny, IntPtr input, IntPtr output, fftw_kind kindx, fftw_kind kindy, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x2F78638", Offset = "0x2F78638", VA = "0x2F78638")]
		public static extern IntPtr r2r_3d(int nx, int ny, int nz, IntPtr input, IntPtr output, fftw_kind kindx, fftw_kind kindy, fftw_kind kindz, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x2F7871C", Offset = "0x2F7871C", VA = "0x2F7871C")]
		public static extern IntPtr r2r(int rank, int[] n, IntPtr input, IntPtr output, fftw_kind[] kind, fftw_flags flags);

		[PreserveSig]
		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x2F787F0", Offset = "0x2F787F0", VA = "0x2F787F0")]
		public static extern void flops(IntPtr plan, ref double add, ref double mul, ref double fma);

		[PreserveSig]
		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x2F7889C", Offset = "0x2F7889C", VA = "0x2F7889C")]
		public static extern void print_plan(IntPtr plan);

		[PreserveSig]
		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x2F78920", Offset = "0x2F78920", VA = "0x2F78920")]
		public static extern void export_wisdom_to_filename(string filename);

		[PreserveSig]
		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x2F789B4", Offset = "0x2F789B4", VA = "0x2F789B4")]
		public static extern void import_wisdom_from_filename(string filename);

		[PreserveSig]
		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x2F78A48", Offset = "0x2F78A48", VA = "0x2F78A48")]
		public static extern void fftw_forget_wisdom();

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x2F78ABC", Offset = "0x2F78ABC", VA = "0x2F78ABC")]
		public fftw()
		{
		}
	}
}
